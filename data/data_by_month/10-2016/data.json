[{"title": "path attribute removed animatemotion tag", "body": "want request feature report bug bug current behavior react remove path animatemotion tag outputs warning warning unknown prop tag remove prop element current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior want use path animatemotion tag without using dangerouslysetinnerhtml versions react browser os affected issue work previous versions react google chrome dev windows version", "num": "8154", "d": "10/2016"}, {"title": "componentdidmount would nt rerendering component", "body": "look got problem shows console nt know wtf error another serious problem code log know code may look good problem killing try debug ca nt", "num": "8144", "d": "10/2016"}, {"title": "hot module replacement problem working dropbox", "body": "submitting bug report react webpack version current behaviour hot module replacement work project dropbox named dropbox person change name dropbox without work spend days figure problem want share others need waste time", "num": "8141", "d": "10/2016"}, {"title": "uncaught error", "body": "connect connect connect connect getcontext withhandlers memberprepaidview idea getting", "num": "8140", "d": "10/2016"}, {"title": "react support node development", "body": "current behavior steps reproduce install node clone react repo run expected behavior react support node development", "num": "8134", "d": "10/2016"}, {"title": "setstate handle well nested setstate calls", "body": "could bug nice feature setstate handle well nested setstate calls successive calls put pendingstatequeue resolved queue reference cleared soon suggestion would change function processpendingstate like processpendingstate function props context var inst thisinstance var queue thispendingstatequeue var replace thispendingreplacestate thispendingreplacestate false thispendingstatequeue null lt lt lt lt lt lt lt lt lt lt lt lt lt queue return inststate", "num": "8132", "d": "10/2016"}, {"title": "transferring transitiongroup maintenance", "body": "nt good maintaining reacttransitiongroup nt use much facebook result stagnating bugs nt get fixed new features nt get added apis nt acknowledge changes react eg fake lifecycle hooks ca nt work functional components nobody time review prs like dead weight core team feel guilty much great alternatives ecosystem react motion however understand lot people happy issue call new maintainer using widely codebase would happy maintaining fork documentation please let us know deprecate package favor package", "num": "8125", "d": "10/2016"}, {"title": "react docs conditional rendering", "body": "", "num": "8119", "d": "10/2016"}, {"title": "datepicker updating type change", "body": "toggling input type date datetimelocal strict formatting rules least chrome breaking example changing react version example fixes bug", "num": "8116", "d": "10/2016"}, {"title": "children components always blackbox parent", "body": "perhaps already solved trouble finding solution happy scenario follows function return hello world function disable props return propschildren function b return component nt know anything disabled component b owner decides disable component wrapping component disable easy enough far like pattern means disable component like however started getting trouble div disable adds dom starts mess styling flexbox cases component might styles disable needs replicate think tidiest solution component expose prop used pass disabled class means component may want disable needs also expose prop accepted approach problem something missing thanks", "num": "8111", "d": "10/2016"}, {"title": "reusable components page redirects improperly", "body": "old page reusable components went great detail various proptypes used redirects wrong page original page redirects like looking something see original page google cache", "num": "8108", "d": "10/2016"}, {"title": "redirection docs lead wrong page", "body": "search google react event listener remove click dom event listeners component react dom event listeners component note entry shows attach dom events provided react check info good opens page nt include info event listeners happens search results pretty annoying able find references public docs quickly", "num": "8100", "d": "10/2016"}, {"title": "redirected wrongly", "body": "following warning redirected correctly least chrome debugger warning child array iterator unique key prop check render method see information leads instead", "num": "8092", "d": "10/2016"}, {"title": "debug read property reactinternal null", "body": "good debugging toool finding exact line numbers component names got error like adding console logs every file solution", "num": "8091", "d": "10/2016"}, {"title": "reactaddonscsstransitiongroup give warning transitionentertimeout nt supplied reactcsstransitiongroup", "body": "failed prop type transitionentertimeout nt supplied reactcsstransitiongroup cause unreliable animations wo nt supported future version react see information solve warning thanks", "num": "8087", "d": "10/2016"}, {"title": "readd warning proptypes", "body": "discussion spicyj decided keep warning even though functions throw production warning way learn also document pass secret case know", "num": "8080", "d": "10/2016"}, {"title": "add description false caveat docsconditionalrenderingmd", "body": "want request feature report bug documentation enhancement need describe user wants output string false boolean property false convert string else wo nt appear output", "num": "8075", "d": "10/2016"}, {"title": "uncaught invariant violation parentcomponent must valid react component", "body": "want request feature report bug bug current behavior seeing following error page used work stack nt say anything debugging difficult request help debug code improve error stack people encounter error figure coming thanks versions react browser os affected issue work previous versions react chrome windows react", "num": "8074", "d": "10/2016"}, {"title": "forms documentation hide relevant info", "body": "want request feature report bug feature current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior attribute shown within code scroll find versions react browser os affected issue work previous versions react relevant", "num": "8068", "d": "10/2016"}, {"title": "handling events readme example handles eventhandler takes parameter", "body": "example eventhandlers receive e syntheticevents example passing parameters eventhandler", "num": "8065", "d": "10/2016"}, {"title": "new docs set localization effort", "body": "deleted old localized content docs changed much set proper infrastructure localization old process slow ineffective cc lacker", "num": "8063", "d": "10/2016"}, {"title": "new docs wanted guides", "body": "revamped docs guides missing think essential community section good resources eg mrscobbler glossary similar virtual dom terminology gone friendly check inspiration troubleshooting common issues explain right away like wrong element casing loaded dom container missing react scope etc see inspiration accessibility madhug manipulating children using portals useful modals animation react motion jamesknelson routing need use react router show use history api point rr componentbased api ajax show use lifecycles mention cancellation issues x integrating nonreact code show wrap jquery plugin react expose react component backbone view consume backbone models reactperf include basic usage example reference snapshot testing publishing component somebody wants work please comment let figure plan help wanted", "num": "8060", "d": "10/2016"}, {"title": "unable type input adding value prop", "body": "made input field makes api call based whats typed returns results list clicking list element value text input field must get updated add value prop input unable type anything removing value prop input able type set state work javascript import searchdoctorbyname helpersapi import react component react class autocompletesearch extends component constructor props super props thisstate value suggestions export default autocompletesearch using also futile", "num": "8053", "d": "10/2016"}, {"title": "wrong snippet code uncontrolled components docsforms", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8052", "d": "10/2016"}, {"title": "featureidea rename context types implicit props types merge", "body": "currently js parent getchildcontext gt theme red render gt child themedbutton props ctx theme gt themedbuttoncontexttypes theme proptypesstring effectively context implicit props ie mostly equivalent child parent expect child ask interchangably proposalidea mind also imply override props needed cases like testingpreview sample enhancer implementation feel free point flaws edge cases whatever context probably share issue idea intuitive introduce concept ps also would proposal creating constant context values share fixed values never trigger child update mount", "num": "8042", "d": "10/2016"}, {"title": "new docs docs bugs amp issues", "body": "completely rewrote docs bound cause issues mistakes etc let keep issue umbrella problems discovering initial rollout x old links nt major issue x topbar points ugly url x nt use identifier x remove vars everywhere except page x jsx depth weird names like lacker x jsx depth shows failing example tag nt show fix lacker localized pages gone need set new streamlined localization effort cc thejameskyle mention default indexhtml productionready mark legacy unnecessary addons page recommend instead figure community section mention string refs x forms doc mistakes forms doc uses setstate uncontrolled components confusing installation messy", "num": "8035", "d": "10/2016"}, {"title": "docs list key examples override number", "body": "want request feature report bug bug current behavior examples use component name maybe good idea rename component something", "num": "8034", "d": "10/2016"}, {"title": "findparent fails unable get property reactinternalinstance undefined null reference", "body": "want request feature report bug bug current behavior exception thrown rendering stops current behavior bug please provide steps reproduce possible minimal demo problem via similar template nt seem determinstic happens ie least expected behavior throw exception continue rendering versions react browser os affected issue work previous versions react react ie windows", "num": "8031", "d": "10/2016"}, {"title": "maximum call stack size exceeded reactdomcomponentupdatedomchildren", "body": "first realize likely nt problem react problem application tought open issue see think might problem react could give pointers dig deeper since call stack contains react code nt much us trouble shoot see messed want request feature report bug possible bug current behavior sometimes get random maximum call stack size exceeded errors small percentage users nt look like related browserdevice seems happen types devices mobile tablet desktop firefox chrome safari ios mac stack trace nt contain code react looks like js lastprops line column webpack updatedomproperties line column webpack updatecomponent line column webpack receivecomponent line column webpack receivecomponent line column webpack updatechildren line column webpack reconcilerupdatechildren line column webpack updatechildren line column webpack updatechildren line column webpack updatedomchildren line column webpack pages larger others anyone nesting deep enough could realistically cause maximum call stack size exceeded error versions react browser os affected issue work previous versions react nt know true versions nt version deployed help reagarding would much appreciated", "num": "8030", "d": "10/2016"}, {"title": "multiple copies react installed", "body": "using react components made various libraries like material ui get message see one version react installed using gulp browserify build process idea solve", "num": "8026", "d": "10/2016"}, {"title": "chrome throws error failed execute insertbefore node parameter type node", "body": "react throws error messages certain points app chrome chrome browsers work nt able pinpoint cause", "num": "8025", "d": "10/2016"}, {"title": "feature request reactaddonsupdate operations accept objects well arrays", "body": "want request feature report bug feature current behavior pass object reactaddonsupdate update operation speced take array generates error saying forget wrap object array expected behavior operate single object provided example unshift foo onto target element versions react react", "num": "8023", "d": "10/2016"}, {"title": "better support web components", "body": "gets old rebuild date picker whatever widget every time switch frameworks would nice react better support web components", "num": "8022", "d": "10/2016"}, {"title": "npm run lint fails windows", "body": "npm run lint fails windows least windows error running eslint task using gulpfile c projetosgitreactgulpfilejs starting eslint c function exports require module filename dirname exist syntaxerror unexpected token illegal objectexportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain run startup lint failed fatal error something went wrong running gulp screenshot found related error mocha could nt fix anyway might", "num": "8021", "d": "10/2016"}, {"title": "need way prevent component render client side initial load", "body": "ad performance isomorphic application need react avoid rendering ad component containing ad position div client initial load following scenario react renders ad position div server sends html client div empty div id attribute identifying location place ad google gpt makes request ad react lifecycle finished client ad position div gets filled ad react finds mismatch server client ad position div rerenders empty ad position div client wiping ad way conditionally stop react rendering ad position div client found seems like needs flag method react lifecycle used prevent component render certain conditions", "num": "8017", "d": "10/2016"}, {"title": "warning validatedomnesting appear child see head gt metadata", "body": "believe bug dom validator try render entire page element inside got warnings render result put inside expected behavior warns appears also move elements using react tested previous version updated reactdom renders correctly warns well", "num": "8014", "d": "10/2016"}, {"title": "fiber formalize states", "body": "fiber number states component however formalized code right instead state inferred leads hard follow code instead organize code terms explicit states original prototype componentdidmount ie never begun begun never completed completed committed nt begun time around begun yet completed completed yet committed componentdidmount ie nt begun update yet begun never completed update completed committed nt begun update begun update yet completed completed update yet committed children set component also states never reconciled current set last committed previously reconciled set nt committed yet", "num": "8012", "d": "10/2016"}, {"title": "rfc enabling formreset controlled inputs make value defaultvalue transparent", "body": "would like make case supporting controlled inputs make control value defaultvalue direct background react synchronizes attribute property inputs believe two reasons easy testing frameworks like selenium select testing reverts input back value attribute also trigger change events causes input state sync react state many reasons listed stop syncing value attribute keep issue focused desired outcome change want able control value attribute property directly component time javascript wo nt add flow types clarity type widget name string class editwidget extends reactcomponent constructor thisstate thispropswidget onchange event thissetstate name eventtargetvalue render return revert save change react property directly maps value property react property directly maps value attribute configurable time input becomes controlled specifies property support formreset sending synthetic change events fields mismatch last tracked value maybe fire blindly simplicity change creates controlled input makes much clearer react applies changes control granted user provides away allow props coming form dictate canonical state form still supporting native browser behavior also means nt synchronize value attribute would save lot headaches things figure server rendering property use case send along default value might fine cases thought edge cases", "num": "8011", "d": "10/2016"}, {"title": "jsx gotcha case sensitivity", "body": "want request feature report bug documentation add something pertaining jsx gotcha page current behavior equal rather unintuitive considering meaning nt generally attached case current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8008", "d": "10/2016"}, {"title": "onchange event getting triggered via selenium clear", "body": "want request feature report bug possible bug current behavior according selenium spec based issues reported method triggers dom onchange event spec issue however using clear input onchange handler triggered browser see input empty expected behavior expect onchange handler trigger versions react browser os affected issue work previous versions react using react reproduced firefox amp chrome latest version post", "num": "8004", "d": "10/2016"}, {"title": "ca nt find function", "body": "use chrome give function", "num": "8002", "d": "10/2016"}, {"title": "style props render incorrectly safari", "body": "want request feature report bug bug report report undocumented behaviour current behavior style props render incorrectly safari example following becomes screenshot inspector similar thing happens rendered another screenshot works expected browsers tried current behavior bug please provide steps reproduce possible minimal demo problem via similar template check element child ios safari using desktop safari inspector tool otherwise minimal failing example expected behavior rendered style property matches given style property becomes becomes versions react browser os affected issue work previous versions react using version served seen issue ios safari el captian safari ios safari seems unaffected unsure versions", "num": "7998", "d": "10/2016"}, {"title": "remove debug info reactminjs file publish project", "body": "remove debug info reactminjs file publish project", "num": "7990", "d": "10/2016"}, {"title": "variable refers new date child element", "body": "following code snippet book run code compiled via babel code like error message reported browser datetimenow could please help answer cause error thank much want request feature report bug current behavior error message uncaught invariant violation objects valid react child found mon oct cst meant render collection children use array instead wrap object using createfragment object react addons check render method current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior span tag displays current time versions react browser os affected issue work previous versions react react", "num": "7988", "d": "10/2016"}, {"title": "event listeners stop working container moved new document", "body": "want request feature report bug report bug current behavior react gt container moved different document component tree rerendered event listeners stop working react lt possible move container one document another via state rendered components preserved event listeners continued work steps reproduce using testhtml click counter button times click move iframe button click counter times note counter longer responds clicks expected behavior clicking counter continues increment moved iframe works react react gt versions react browser os affected issue work previous versions react issue bisects changed logic adds event listeners use cached document value instead hack resolves issue patch diff git asrcrenderersdomsharedreactdomcontainerinfojs bsrcrenderersdomsharedreactdomcontainerinfojs index asrcrenderersdomsharedreactdomcontainerinfojs bsrcrenderersdomsharedreactdomcontainerinfojs var docnodetype function reactdomcontainerinfo node var info ownerdocument nodenodetype docnodetype node nodeownerdocument get ownerdocument return nodenodetype docnodetype node nodeownerdocument tag nodenodenametolowercase namespaceuri nodenamespaceuri notes original use case preserving state components app runs chrome popup window pop closes unloads window workaround involves moving dom node background page popup closed back next opened", "num": "7986", "d": "10/2016"}, {"title": "issue redboxreact", "body": "testing react version one projects installing packages worked previous version react redboxreact issue reactdom error redboxreactreactdomindexjs module found error resolve module reactlibreactdom", "num": "7985", "d": "10/2016"}, {"title": "mistakenly published latest", "body": "bug current behavior yields result installs expected behavior looks like publish mistake point point", "num": "7982", "d": "10/2016"}, {"title": "react match syntax autofocus", "body": "react match syntax autofocus autofocus attribute auto focuses inputs forms buttons autofocus true false attributes camel case html demo current situation react following valid equivalent true following invalid number attributes boolean attributes presence boolean attribute element represents true value absence attribute represents false value attribute present value must either empty string value ascii caseinsensitive match attribute canonical name leading trailing whitespace source recommendation update syntax example considered valid", "num": "7981", "d": "10/2016"}, {"title": "docs implementation notes replacechild args worng order", "body": "order arguments wrong js prevnodeparentnodereplacechild prevnode nextnode prevnodeparentnodereplacechild nextnode prevnode", "num": "7975", "d": "10/2016"}, {"title": "jsx variables shadowing gotcha", "body": "think discovered jsx gotcha see nowhere mentionned let say component defined like intended behaviour rendered output provided receives instead value foo prop provided comp means variable shadowing work suspect relative template like behaviour jsx since bited gotcha think mentionned docs correct code make work", "num": "7965", "d": "10/2016"}, {"title": "documentation finddomnode title paragraph", "body": "documentation bug working browser contains subheading refs finddomnode following paragraph however contain information finddomnode removed commit", "num": "7958", "d": "10/2016"}, {"title": "allow html attributes dangerously set without encoding", "body": "want request feature report bug feature current behavior react element like renders expected behavior behavior expected majority cases strongly recommended however scenarios automated parser play nicely encoded special characters etc user may want render arbitrary strings attributes without automatic encoding way provided entire elements could const getattributes gt datafoo amp bar currently workaround using container element node able set attribute specifically would bit safer thoughts fence whether good idea since opens another avenue inserting invalid html nevertheless interested hearing justified grounds", "num": "7951", "d": "10/2016"}, {"title": "props validation objects", "body": "want request feature report bug request feature current behavior ca nt specify object different type values eg either rely order object specify like unpack object passing props current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug makes fairly typical usage spitting warnings console expected behavior able specify objectof attached pr versions react browser os affected issue work previous versions react", "num": "7945", "d": "10/2016"}, {"title": "fiber principles contributing fiber", "body": "wanted document unique design patterns apply fiber necessarily anything else start may mutate fiber working phases may global sideeffects need global sideeffect moved phase fiber fixed data structure shares hidden class never add fields outside construction nothing reconciler uses dynamic dispatch ie nt call first class function except user code ref callbacks functional components render methods etc rest static function available closure ie use instead time need branch logic use switch statement number indicates type object dealing branch take see pattern matching many modules instantiated object single constructor gets called initialization time inlinable compiler nothing fiber uses normal js stack meaning use stack compiled flat function needed calling functions fine limitation ca nt recursive ca nt use recursion traverse tree learn use singly linked list tree traversal algorithm eg parent first depth first need complicated use normal js stack time yield would rebuild stack continue since lasts idle would spend time unwinding rebuilding stack time bad however everything along stack would aware unwind abort middle work flow plausible could level ocaml algebraic effects nt currently features need nt get performance tradeoffs want box atm plausible future way forward though code lives outside recursion nt matter much cases react space normal stack eg memoization error handling etc using normal stack makes difficult get interact everything put stack generally put heap memoize maintaining stack heap data theoretically less efficient said optimizations might moot js stacks much efficient js heaps one thing wanted try compile react components work directly data structures like normal programming languages compile make mutations etc stack think ideal implementation react let try see goes cc spicyj gaearon acdlite", "num": "7942", "d": "10/2016"}, {"title": "making view difference reuse markup error configurable", "body": "want request feature report bug requesting feature current behavior currently way reuse markup error displayed difference hardcoded characters code side configurable property code found characters sometimes bit hard debug especially cssinjs libraries div usually also contain obfuscated class name able make larger number could help debugging went wrong", "num": "7939", "d": "10/2016"}, {"title": "functions passed props updated", "body": "array reactcreateelement render jsx understand todoitems dragged text updated onblur clicking anywhere outside current text surprised get issue gif passed arrow functions updated new render call end gif still observe logs maybe like since forever surprising intuitive maybe optimization demo issue edit instead would fix issue breaks css transitions", "num": "7937", "d": "10/2016"}, {"title": "use reactdomrender target implicit jsx root", "body": "currently rendering must provide topmost wrapper addition node designated reactroot introduces unwanted extra layout element make styling little irritating would nice target topmost node could pass array first children right away", "num": "7932", "d": "10/2016"}, {"title": "page navigates path component changes", "body": "new react looks like appjs loginformjs expected behavior state app changed callback header component rendered stay like current behavior state changed header rendered page directed automatically dont know help appreciated", "num": "7928", "d": "10/2016"}, {"title": "changing state quickly cause error shallow render", "body": "want request feature report bug report bug current behavior running causes react throw exception issue using see error using current behavior bug please provide steps reproduce possible minimal demo problem via similar template could figure use jsfiddle example even though reactwithaddons loaded code used project reproduce jsx import react component purecomponent react import render reactdom import reacttestutils reactaddonstestutils class root extends component componentwillmount thistestbreak settimeout thistestbreakbind render documentgetelementbyid root class testreactelement extends purecomponent render return thispropsname const testrender name gt let renderer reacttestutilscreaterenderer rendererrender testrender test testrender test testrender test works fine long run soon run times error pops project tap output listened wrapper updated new one comes reproducible example contrived realworld bug running tests project expected behavior expected behavior error occurs console running multiple shallow test renders time react updating state element rendered dom versions react browser os affected issue work previous versions react windows updates october tried previous versions react verified displays error chrome firefox", "num": "7927", "d": "10/2016"}, {"title": "fiber umbrella remaining features bugs", "body": "umbrella issues remaining fiber issues found running unit tests flag turned see additional tasks beyond scope initial fiber release phases phase infrastructure x set infra know tests failing spicyj x reacttestutils features x reactcomponentexpect gaearon x scry etc gaearon phase smaller initial tasks x reactdomfiberrender simple synchronous case sebmarkbage x string refs using owner acdlite x pass correct previous state componentdidupdate x componentwillmount componentwillreceiveprops componentwillupdate lifecycles sebmarkbage x componentdidupdate fired shouldcomponentupdate returns false sebmarkbage x instance recreated already started work gets resumed componentwillreceiveprops without didmount sebmarkbage x fix module pattern mountindeterminatecomponent sebmarkbage x finddomnode sebmarkbage x switching types nt track deletions updateslot nt return null sebmarkbage gaearon x purecomponent flag acdlite x ensure scheduling works synchronously default batched dom events initial default priority acdlite x unstablebatchedupdates acdlite x setstate componentdidmountcomponentdidupdate always synchronous end batch even work deferred acdlite x make sure setstate error boundaries work gaearon acdlite x unmount failed trees attempting recover acdlite phase larger tasks x allow testing fiber facebook web codebase spicyj x error boundaries gaearon x context gaearon x dom attributesproperties update sebmarkbage x dom events plug event system sebmarkbage x rendercontainerintosubtree preserve state spicyj x fb bug switching text children regular children wo nt clear old text content easy fix since sideeffect parent scheduled child insertions acdlite sebmarkbage x recover errors commit phase including errors thrown host environment use single trycatch block acdlite x fb svg mode switch based parent svg html gaearon x fb setstate behavior called possible lifecycles including sibling lifecycles parents children acdlite phase uncovered bugs x root container wrong commit phase sebmarkbage x update stateprops object pointers even bailout happens currently cause unnecessary componentdidupdate solve somehow acdlite x validate inputvaluetracking indeed need cleaned unmount nt think needs revert anyway x autofocus nt work todo reactdomfibercomponent bvaughn x fb last effect renders infinite loop acdlite x fb defer clearing initial nodes work actually begun ensure unmounting rerendering batch works acdlite x updates different roots componentwillmount reactupdatestest acdlite x refs update even shouldcomponentupdate returned false however componentdidupdate fire acdlite x fb make top level render unmount synchronous default even batch even updates updates acdlite x fb uncaught typeerror read property children null probably due context change based caller probably either avoid rerendering set pendingprops memoizedprops case sebmarkbage x replacestate remove previous callbacks scheduled acdlite x root fiber use instead acdlite x fb ensure get current props controlled components restorestateifneeded spicyj x fb iterable children eg immutablejs set etc gaearon x fb reuse hosttext bailing sebmarkbage x fb ensure rendersubtreeintocontainer twice enables context pass middle subtree ie two nested layer single context provider top spicyj x make hostcontainer appendinsertremove child instead always updating detach return child gets unmounted removed sebmarkbage x handle selection restoration x swap active fiber host node updated including listeners change know listener active needs remain even prepareupdate fixed x remove traversal x finddomnode findallinrenderedtree broken insertion happens happen look previous work progress deletes removes looks like current assume happen deletion done sebmarkbage x fb batch different roots together one commit reactupdatestest wo nt fix use portals instead x error handling error thrown detachref callbacks acdlite x ensure walk return treetraversal always get current fiber props possibly walk parentnode tree instead sebmarkbage x ensure switch tag names cover mixedupper case eg wo nt fix instead warn upper case used html tags sebmarkbage x scheduling issue causing reactcompositecomponentnestedstatetest fail performs first setstate second one task priority stuff fix acdlite x fb scheduling update render nt work mostly already warn setstate called render might required componentwillmount others calling callback sets state different component works currently complete phase resets updatequeue pending priority cause infinite loops happen apparently still used need either warnlog better upgrade everyone support fiber acdlite x toplevel context pushpop nt properly matched lots tests fail patch bvaughn x fb reentrant mounting synchronous mode spicyj phase x feature flag disable fiberonly features acdlite x polyfills alternate paths sebmarkbage x ismounted technically deprecated yet sebmarkbage x top level render callbacks second argument render x ensure server rendering works using stack fiber enabled x declarative portal api gaearon x add tests event bubbling need track changes top level event listeners get attached x react test renderer support iamdustan x react art support bvaughn x land basic react native support react repo bvaughn x mark root renders mount perf testing see tests marks toplevel updates bvaughn x merge callbacklist onto updatequeue instead separate field acdlite x separate priority level state updates acdlite x fix coroutine issue fiber passed user space could become stale sebmarkbage x dom dev tools gaearon phase unit tests known bugs push x fb fix bug used certain cases sebmarkbage acdlite x fb provide ability block event bubbling portals spicyj x unit tests reactfragmenttest invariants acdlite x unit tests reactdomproductiontest invariant acdlite x unit tests reactemptycomponenttest invariant acdlite x ensure replace calls sensible messages acdlite x unit tests reactmounttest acdlite x unit tests reactmultichildtest remove map children support stack acdlite x unit tests reactmultichildtexttest acdlite x rn fix event bubbling regression spicyj bvaughn x make sure babel nt generate bad code eg iife maybe fork babel plugin throw spicyj x rn land react update fbsource fiber disabled sebmarkbage x verify fiber works ie facebook map set open make sure works spicyj x fb figure ads image cropper issue spicyj x unit tests reactdomcomponenttest acdlite x unit tests reactcomponentlifecycletest warnings ex fdn render acdlite x allow assigning thisstate cwrp warning acdlite x unit tests reactstatelesscomponenttest warning trueadm x unit tests refstest trueadm x make new manual proptypes checker acdlite x unit tests reactcompositecomponenttest warnings ex setstate render acdlite x ensure break alluncaught exceptions works expected browsers acdlite x investigate modules unit tests fail remove stack trueadm x quick investigation fb requirejs perf trueadm x quick investigation fiber bundle perf cutting extra devonly code trueadm x fb move hidden check hostconfig phase release warn throw update container manually emptied outside react stack mounted brandnew tree fiber tries apply update usually fails keyanzhang sebmarkbage took blocks beta x extract proptypes separate npm package get package name acdlite x unit tests reactcontextvalidatortest pass correct previous deprecate feature remove test bvaughn x fb better fix reactarttext x update warning calling proptypes directly refer user api x docs updates test utils removed addons flarnie phase react native fiber x reimplement shallow renderer without stack dependencies lelandrichardson trueadm rn ensure keep important invariants text must wrapped block anything ensure call fb specific warning module instead one rn spicyj nt block anything oss internal fb x convert proptypes callers use checkproptypes acdlite x deploy forwarding modules reactlibreactcurrentowner reactlibreactcomponenttreehook fbjslibinvariant fbjslibwarning fbjslibexecutionenvironment fbjslibperformancenow fbjslibemptyobject fbjslibemptyfunction fbjslibshallowequal keep using providesmodule repo flat bundles better yet inverse switch using commonjs naming convention www sebmarkbage bvaughn see codemod away use instead nt block oss release x release new version reactredux whose peer compatible update rn use x enable feature flag one week landing sync x codemod flow errors yielded properly typing added types comments good enough x redesign host component type type host component refs integration upgrade compatible bvaughn x unblocks rn dev tools gaearon x unblocks rn inspector see known issues section pr gaearon make sure instanceprops nt leak sebmarkbage bvaughn phase flat bundlesrollup x make react perf work fiber reactperftest gaearon decided favor deeper timeline integration x unit tests reactcomponenttreehooktest gaearon x unit tests reacthostoperationhistoryhooktest gaearon x make list internal react modules required fb code x come better strategy dealing dev code make sure nt ship prod x change www sync script run rollup using commonjs source x shimming required files ex reactdominjection warning x exporting single bundle exposes internals need x make fowarding modules reactdometc well internal modules convert oss repo modules block release nicetohave follow x make separate dev nondev build one file www x convert oss repo rollup x replace current gruntgulp build system unified build system maybe purely using rollup add closure compiler advanced deal mangling properly block release nicetohave follow phase asynccompatible block release fix incremental regression regression fb fix resumemountclassinstance gets passed construct class otherwise rn aborting async work unmounting tree due error leaks native views add crossrenderer support portals necessary async art reactdomfiberrender return root instance render even priority deferred test cover incremental cases decide replacing priorities deadlines fix starvation phase serverside rendering x x unit tests reactrenderdocumenttest ssr reviving server rendered markup including rendering shadow dom containers phase improvements block release internal api consistently used exposing statenodes see x keywarnings fragments flarnie x nt mark update effect newly mounted components unless componentdidmount lifecycle add support enzyme fiber currently bailing equal propsstate equality means still copy children traverse meaning parent many children still lot work even bails skips pendingworkpriority referred children would know children additional work acdlite x unit tests reactdomtextcomponenttest normalize case reconsider contentreset flag cleaner solution clearing text content innerhtml changing insertion order reconsider storing masked contexts instances revert inputvaluetracking replace different comparison strategy gettersetters slow complicated subscription model nt helpful fiber goals principle listening lots events diffing value sound nt shipped oss yet hard fix probably get pushed back fiber drops lazy dom insertion order solution nt slow worth fixing leave slow wait fix browser related follow previous task use linked list acdlite ensure possible resume incomplete parents without rerendering shallow reuse store memoizedprops resuming completed parents already possible acdlite move callback invariant closer usage requested replace invariants warnings help code size", "num": "7925", "d": "10/2016"}, {"title": "dangerouslysetinnerhtml someofmytext causes chrome console developer tool freeze problem firefox though", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7924", "d": "10/2016"}, {"title": "detect click outside view component react native", "body": "want compress view component clicks outside view way", "num": "7910", "d": "10/2016"}, {"title": "bug sometimes selects last value dropdown", "body": "using value multiple times selection differs fiddle example issue chrome selects first option value testing iphone selects last option value solution consistent always selecting first option value", "num": "7908", "d": "10/2016"}, {"title": "fiber spillover child reconciliation", "body": "spillover nt plan initial batch fix text node merging edge case search forward find next sibling swap end text node sum previous value siblings trick lets us avoid backreferences tag include children updated recalculate children needed eg coroutines alternatively pass nearest host coroutine tree quickly flagged child changed insertmoves avoided added sideeffect list coroutines second option probably better possibly use two sideeffect lists two passes needed forward order possible x remove notion unnecessary extra traversal requires duck typing know terminal reconsider need backpointers several optimizations possible uses memory", "num": "7906", "d": "10/2016"}, {"title": "context support reacttestrenderer", "body": "want request feature report bug feature request current behavior nt appear way pass context calling attempting use snapshot testing jest component uses could provide context could create similar helper function enzyme expected behavior able provide context similar versions react browser os affected issue work previous versions react using react nt tried previous versions react", "num": "7905", "d": "10/2016"}, {"title": "data updating", "body": "data atributes updating using react redux input fields dataerror atribute dataerror property used give feedback user field valid inital state looks like component looks like passed component via javascript const mapstatetoprops error gt error const mapdispatchtoprops dispatch gt export default connect mapstatetoprops mapdispatchtoprops component hit submit helper validates data data valid helper calls reducer return something like using redux logger inspect get desired state continues instead", "num": "7903", "d": "10/2016"}, {"title": "strange second argument passed event handler always undefined", "body": "found bug attached event listener property like event listener called arguments synthetic event strange undefined value think normal behavior handler called single param event object windows chrome react version", "num": "7902", "d": "10/2016"}, {"title": "bypass synthetic event system web component events", "body": "use web component react must directly attach event listener react ref wc could change implementation react detects custom element tag names dashes like bypass synthetic event system whitelist attach event listener element bypass synthetic event system anyway already need bypass manually using web component familiar react codebase naive approach seems work whoever uses web components react responsible whatever downsides would cause maybe performance nt know already supposed downsides issue convenience wc usage inside react send pr thought opening issue looked issues nt see existing one related handling wc events current behavior wc custom event eg must handled attaching event listener directly element componentdidmount using ref react js class hellomessage extends reactcomponent handlehelloclick thisrefs foo toggle handleflipend ev consolelog handle flip end componentdidmount thisrefs foo addeventlistener flipend ev gt thishandleflipend ev render return front back expected behavior wc custom event handled reactelement corresponding wc js class hellomessage extends reactcomponent handlehelloclick thisrefs foo toggle handleflipend ev consolelog handle flip end render return front back ps snippet still unrelated reasons ideally would nt need refs handling events wcs", "num": "7901", "d": "10/2016"}, {"title": "shallowcompare stateless components", "body": "want request feature report bug report bug confusion point current behavior implementing inside always return true pass param expected behavior would expect method handle cases passed documentation clear stating must pass versions react browser os affected issue work previous versions react using react specific browser os", "num": "7900", "d": "10/2016"}, {"title": "syntheticeventkey property unidentified safari mac os x", "body": "bug current behavior using standard onkeydown event syntheticeventkey property unidentified safari key pressed fiddle expected behavior syntheticeventkey provide proper values standard keyboard inputs letters numbers numberpad arrows backspace etc chrome since webkitbased browsers version info mac osx el capitan react safari", "num": "7897", "d": "10/2016"}, {"title": "dom contents ready first update incognitoprivate window", "body": "bug current behavior attempting load data api display scroll url fragment deep document window partially scrolls may browser behavior ca nt figure reliably wait content painted scrolling view first attempt example showing issue open new incognito chrome private firefox window paste type sorry ff url data loaded itunes saved state triggered triggered used let dom painting occur dom node deep document queried attempted scroll view correct node red background never seen work fresh incognitoprivate window issue using suggested answer discussion expected behavior dom node scrolled view versions react browsers os work previous versions react", "num": "7889", "d": "10/2016"}, {"title": "inconsistent state setstate componentdidmount", "body": "working library needs initialized componentdidmount according documentation getting expected results update state like javascript class chartcontents extends reactcomponent constructor super thisstate stxx componentdidmount let stxxnew stxchart thischartcontainer stxxnewchart spy sampledata thissetstate stxx consolelog consolelog thisstate render const style height position relative width return view object debugger find state updated object chartcontents newly created chart try access returns empty object initialized also see eslint warning wondering solve problem thanks", "num": "7886", "d": "10/2016"}, {"title": "thinking react tutorial update", "body": "thinking react one important well written tutorials beginners even advanced developers would like update increase readability also would like replace jsfiddle react docs highlighter first suggestions jsx replace var productcategoryrow reactcreateclass render function return thispropscategory function productcategoryrow category return category jsx replace var productrow reactcreateclass render function var name thispropsproductstocked thispropsproductname return name thispropsproductprice function productname product return function productrow product return productprice continue nt worth effort", "num": "7885", "d": "10/2016"}, {"title": "docs request build react component library", "body": "important section think lot folks end piecemealing would super useful terms ecosystem support", "num": "7882", "d": "10/2016"}, {"title": "reacttestrenderer missing files", "body": "installing reacttestrenderer npm brings indexjs file referenced lib folder exist", "num": "7880", "d": "10/2016"}, {"title": "reactaddonstransitiongroup creates multiple copies react", "body": "scenario react library amp code using webpack build process react gets bundled twice including webpack build process apart increased build size fine webpack build process however try use react component built another project angular project using ngreact load react globally library creates issue multiple copies react refsmusthaveowner problem comes react using one globally one gets bundled anybody else encountered issue workaround plan make peer dependency require directly sure major change asking anyways please correct misunderstood problem anyways ps sorry previous issue accidentally hit enter github created issue", "num": "7874", "d": "10/2016"}, {"title": "declaring react", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7872", "d": "10/2016"}, {"title": "unable add css react app", "body": "making react js app trying add bootstrap css app following code webpackconfigjs var webpack require webpack contextpath processcwd indexhtml checked network request app getting file styles getting applied components following component import react component react please help solving issue", "num": "7860", "d": "10/2016"}, {"title": "show component stack invalid type warning element creation", "body": "foo valid string function show error message include owner name please check render method bar full parent stack show warnings like key warnings prop types call reactcomponenttreehook get full stack possible", "num": "7856", "d": "10/2016"}, {"title": "svg xlinkhref breaks tabkey focus safari", "body": "want request feature report bug bug report current behavior safari given document fields separated uses focusing first pressing tab key focus switched second input instead address bar another browser element gets focused sure issue react safari could reproduce safari without using react opening issue current behavior bug please provide steps reproduce possible minimal demo problem try use tab key jump first second input field expected behavior pressing tab key sets focus second input field works fine browsers versions react browser os affected issue work previous versions react safari version osx react", "num": "7852", "d": "10/2016"}, {"title": "custom renderer api support", "body": "working upgrading renderers documentation current master build installing following along knew hard breaking changes wanted begin discussion commitments react willing make time support use case rather trying figure current apis needed front like begin looking mount entry point discuss apis could exposed covered apis reactmount reactmount reactnativemount reacttestmount entry points three facebookreact supported renderers live codebase first class access number internals external renderers currently get specifically modules access reactreconciler instantiatereactcomponent helper function create correct react component type host composite text also part reconciler reactupdates understanding part reactreconciler reactinstrumentation bridge react internals devtools limited react devtools modules see used fb renderers beyond may worth future consideration though understand important unblock renderer development understanding renderers method dependent upon reconciler bridge renderer semantics react core reconciler become effectively private nonshareable recent build changes done today allow renderers continue existing experimenting release cycle initial ideas get feedback possible direction would acceptable ideas comes developerconsole warnings unsupported nonguaranteed api could break moment including patch releases expose minimal reconciler surface area create package", "num": "7850", "d": "10/2016"}, {"title": "windows development issues", "body": "issues developing windows fresh install master running causes test suites fail error changing teststests seems fix issues last character escape character invalid regex another regex error though sure regex comes though also error looks like unix git bash crossover issue possibly another escape character issue anyone run windows similar issues", "num": "7849", "d": "10/2016"}, {"title": "update unknown props warning page", "body": "current behavior write jsx component without upper case react gives unknown prop warning finally remember react jsx uses upper vs lower case convention distinguish local component classes html tags think could useful remind unknown props warning page reason warning spent time debugging understanding warning case might one expected behavior update unknown props warning page add reason warning could appearing using jsx component without upper case react treats html tag probably nt recognize props react jsx uses upper vs lower case convention distinguish local component classes html tags versions react browser os affected issue work previous versions react use react let know think could useful nt enough careful", "num": "7848", "d": "10/2016"}, {"title": "react lets access dom internal instances", "body": "current behavior reactdomcomponenttreejs gives easy access react internal instances even property name randomly generated instance following piece code lets access redux state placed context might lead security issues potentially malicious thirdparty scripts selfxss something like following piece code considerable order expose things javascript const instancemap const setinstance node instance gt const id nuid node internalinstancekey id instancemap id instance const removeinstance node gt delete instancemap node internalinstancekey const getinstance node gt return instancemap node internalinstancekey", "num": "7846", "d": "10/2016"}, {"title": "log warning user setting dom properties web component", "body": "current behavior using web components react cumbersome properties copied attributes without transforming lot said confusing developers trying use web components using react expected behavior much like using property logs warning suggest property key exists raise similar warning user knows happening expected behavior bug proposal acceptable pr ready sent thoughts", "num": "7845", "d": "10/2016"}, {"title": "react clearing datareactid datareactchecksum attributes dom mount", "body": "current behavior rendering react view server react appears mount without errors client remove attributes dom far observed issue using react router also reported reacttrainingreactrouter rr folks characterized react issue current behavior bug please provide steps reproduce possible minimal demo problem repro repo expected behavior mounting react remove extra attributes dom versions react browser os affected issue work previous versions react react browsers tested far chrome safari ie appear get better rolling back earlier react versions could reproduced react router lt happy provide much debugging information honestly sure start troubleshooting thanks advance guidance illumination provide", "num": "7844", "d": "10/2016"}, {"body": "like see consistency point actually mind anything end properties node eg class rel etc consistent naming convention creating components mind something like would make sense current haphazard approach different ones avoid clashing javascript keywords", "d": "10/2016"}, {"body": "attribute notes correspond property names used javascript access values consistent haphazardly chosen jsx makes feel like dealing dom directly react still managing elements javascript makes sense consistent property names rather html attribute names", "d": "10/2016"}, {"body": "aweary totally understand referring javascript poor choice prop names rather anything react specific guess question jsx feel additional level abstraction make developer friendly saying throwing thoughts", "d": "10/2016"}, {"body": "aweary thanks realize name actual dom api get implementation indeed coherent nt think still problem users could expect pretty sure far one thinking term html write jsx reactdom", "d": "10/2016"}, {"body": "totally agree confusing doubt think current warnings get dev mostly sufficient lesson need learn nt think point would change worth making would pretty huge breaking change especially change attributes could support even confusing imo", "d": "10/2016"}, {"body": "yeah thinking dual attribute solution people ease thinking dom prefer thinking html painless experience sorry example fact learning enough maybe change realize dom api attribute names mind leave issue open may see issue people edit place using dom rather markup annoying svg time designer give svg icon want make component rewrite lot attributes guess jsx could make life way easier considering common markup attributes well", "d": "10/2016"}, {"body": "looks like getdata never calls callback also please see get support", "d": "10/2016"}, {"body": "wo nt able help nt include fiddle reproducing issue like issue template chose delete asks", "d": "10/2016"}, {"body": "thanks report however file webpack react user interface library relation hot module replacement cheers", "d": "10/2016"}, {"body": "would need minimal example reproducing problem help troubleshoot", "d": "10/2016"}, {"body": "gaearon thanks reply seems works", "d": "10/2016"}, {"body": "thanks fix", "d": "10/2016"}, {"body": "please show code issues", "d": "10/2016"}, {"body": "unfortunately coding f transpiled javascript makes almost unreadable dealing messages change state times calls recursive usually initiate change state something like setnewvalue function v setstate function state statenewvalue v showmessage changing value v showmessage function msg setstate function state statemessage msg call showmessage happens within first call setstate get added current pendingstatequeue reference already cleared instead gets added new queue executed later future call setstate happens suggested change simply maintains reference queue returning allows new setstate added queue processed", "d": "10/2016"}, {"body": "anyway change f code trigger message callback like setnewvalue function v setstate function state statenewvalue v function showmessage changing value v showmessage function msg setstate function state statemessage msg", "d": "10/2016"}, {"body": "thanks suggestion miles would work code posted small sample calls happening controls communicate among would trigger multiple renders time problem code would get separated using called elm architecture lines well react state model render function view one update function state gets changed function acts messaging processor thus recursive times fact prior current implementation using mailbox agent update function worked well react one exception textbox input mailbox asynchronous change input would make cursor jump end decided remove mailbox make synchronous textbox works recursive calls work course made local copy reactjs mentioned change works", "d": "10/2016"}, {"body": "first correct usage state treated immutable must never assign instead return update since using previous state might well pass object right away secondly calling inside updater function supported maybe throw case updater function supposed pure return next state execute side effects", "d": "10/2016"}, {"body": "dan thanks help first correct usage right meant use return assign mistake paraphrasing code f got wrong read something like setnewvalue function v setstate function state showmessage changing value statenewvalue v return newvalue v showmessage function msg setstate function state return statemessagespush msg secondly calling setstate inside updater function supported maybe throw case imagined could case call bug possible feature decision want allow recursive calls seem difficult allow modification posted would make react versatile otoh throwing harder think cheers", "d": "10/2016"}, {"body": "nt use either wanted drop link refactored standalone version put together make pretty compelling starting point anyone looking maintain standalone version reacttransitiongroup obviously preact forking work react would basically changing imports dependencies point react instead originally fork reactcomponentcsstransitiongroup extracted react source", "d": "10/2016"}, {"body": "use facebook react motion mean end sight lt reacttransitiongroup start refactoring code favor react motion", "d": "10/2016"}, {"body": "use facebook react motion facebook product nt many insertiondeletion animations nt use anything much mean end sight lt reacttransitiongroup start refactoring code favor react motion even completely stop releasing new versions wo nt worse effectively already abandoned year keep using fork want improve fact issue", "d": "10/2016"}, {"body": "us animation problem using great gsap tweening engine problem comes animate component removal react motion almost solves problem one issue react motion callback transitionmotion anyhow never perfect solution box invest", "d": "10/2016"}, {"body": "taion might interested maintaining copy pasted forked component many times nice make direct improvements also already similar different transition component maintain reactoverlays", "d": "10/2016"}, {"body": "jquense would amazing done great work maintaining react libraries", "d": "10/2016"}, {"body": "ok glad take maintenance initial thought move since pairs nicely transition component one single components transitiongroup lists also keep separate repo necessary think folks want component requiring individually suite nt cause much friction", "d": "10/2016"}, {"body": "would like org concern org people think going require bootstrap something like", "d": "10/2016"}, {"body": "tangential would prefer move reactoverlays reactjs potentially replacing reactmodal", "d": "10/2016"}, {"body": "reactjs might make sense pull transition reactoverlays anaimation specific package since nt specifically overlays p", "d": "10/2016"}, {"body": "would next steps need help forking", "d": "10/2016"}, {"body": "runs fine run locally react jsbin indeed see effect open console see warnings value set correct format nt see warnings locally", "d": "10/2016"}, {"body": "experienced going experimentation see figure working jsbin also actual code", "d": "10/2016"}, {"body": "tidiest solution component interested supporting disabled accept prop component could choose use special inline style anything else get relevant styles escape hatch components may expose prop breaks encapsulation often leads issues later project hope helps ps use issue tracker bugs would great could use community resources asking questions thanks", "d": "10/2016"}, {"body": "thanks gaearon continue discussion", "d": "10/2016"}, {"body": "hi thanks feedback old reusable components page contained many topics unfortunately ca nt set redirects hash portion url go new docs website use search like see whole separate guide dedicated proptypes well complete api reference hope helps", "d": "10/2016"}, {"body": "docs replaced week ago quite complete yet understand annoying previous docs unfocused included many tips lacker best place content", "d": "10/2016"}, {"body": "hmm tip seemed like hardly content see basically content want use dom event listeners call redirected page since bunch rewriting suspicion lot google searches somewhat annoying precise word nt show page google gets index updated suggestion leave nt think specific use needs react docs per se suspect google index updates redirects stop causing annoyance case", "d": "10/2016"}, {"body": "thanks guys keep checking", "d": "10/2016"}, {"body": "nt think specific use componentdidmount needs react docs per se maybe refs dom would good place", "d": "10/2016"}, {"body": "thought nt even use refs using global stuff got stumped", "d": "10/2016"}, {"body": "fits dom part", "d": "10/2016"}, {"body": "nt know change links point spicyj help make point", "d": "10/2016"}, {"body": "working chrome debugger attaching unique key iterated children attached warning appears link redirected subsequently reproduce typing address field browser nt know redirects find redirection table", "d": "10/2016"}, {"body": "yes understand valid issue need fix comment pointed towards spicyj knows redirects set", "d": "10/2016"}, {"body": "fixed old redirect cached browser verify opens right url incognito tab", "d": "10/2016"}, {"body": "thanks bringing attention", "d": "10/2016"}, {"body": "error like likely earlier error got react inconsistent state use promises might catching errors mistake never appear console think react bug please provide fiddle reproducing issue", "d": "10/2016"}, {"body": "closing due lack details response", "d": "10/2016"}, {"body": "hey solve exactly warning says add like examples link hope helps", "d": "10/2016"}, {"body": "gaearon use like", "d": "10/2016"}, {"body": "comment still valid need add missing props", "d": "10/2016"}, {"body": "even though functions throw production particularly functions throw production", "d": "10/2016"}, {"body": "curiosity throw errors", "d": "10/2016"}, {"body": "eliminate code production nt seem make sense ship real code proptypes validators normally never used prod therefore replace empty function make behavior clear make throw people nt rely validating eg user input", "d": "10/2016"}, {"body": "paragraph saying therefore condition element right appear output react ignore skip could add something detailed jsx depth would like make pr last section mentions handling", "d": "10/2016"}, {"body": "yep sorry fault nt read yet think yes section jsx depth explicitly mentions", "d": "10/2016"}, {"body": "fixed via called explicitly", "d": "10/2016"}, {"body": "nt stack point something called presumably code", "d": "10/2016"}, {"body": "sorry slept hours working much code another package using thanks lot replying closing issue covered shame", "d": "10/2016"}, {"body": "haha worries cheers", "d": "10/2016"}, {"body": "also imho consider adding example radiobuttons use attribute defaultselected attribute", "d": "10/2016"}, {"body": "ericnakagawa please fix", "d": "10/2016"}, {"body": "fixed line breaks", "d": "10/2016"}, {"body": "ca nt pass arguments react passes event mean something like index inside perhaps could add section events loops conditions", "d": "10/2016"}, {"body": "thinking something like openslideshow viewingwhat thispropstoggleslideview viewingwhat would event handled", "d": "10/2016"}, {"body": "oh see normally create two functions use partial application either bind arrow functions realm javascript react guide probably mention way thanks input", "d": "10/2016"}, {"body": "would consider using something like", "d": "10/2016"}, {"body": "heard zpao thejameskyle building something yarn may reuse", "d": "10/2016"}, {"body": "ericnakagawa going work thejameskyle see yarn solution work react", "d": "10/2016"}, {"body": "cc lacker hramos ericnakagawa", "d": "10/2016"}, {"body": "take glossary sections list terms somewhere work come nt remember virtual dom terminology page contained", "d": "10/2016"}, {"body": "possibly take routing history", "d": "10/2016"}, {"body": "regarding terminology please assume familiarity topics basic guides relevant terms right titles elements components props state lifecycle events keys", "d": "10/2016"}, {"body": "routing guide even need use think possible plain props also hashbased routing ok probably need context make component work seems little complicated", "d": "10/2016"}, {"body": "plain props make top level render inside change handler right like avoid people often nt understand compose two handlers think teach routing right away like would really need context link listen history independently", "d": "10/2016"}, {"body": "actually nt need context using plain history thinking using history package", "d": "10/2016"}, {"body": "want keep package free people see simplicity routing react go packages actually need features", "d": "10/2016"}, {"body": "yes definitely ideal thinking mistake part confirm idea add listener component use based choose render based create component captures", "d": "10/2016"}, {"body": "maybe even call router make top level app component choose right thing based state url gt component map object something like", "d": "10/2016"}, {"body": "ok put draft together probably weekend", "d": "10/2016"}, {"body": "writing guide ajax good people someone already", "d": "10/2016"}, {"body": "anyone working take", "d": "10/2016"}, {"body": "madhug assigned thanks", "d": "10/2016"}, {"body": "gaearon started putting routing guide together history api little less nice imagined first browser nt emit event called means components need way notifying component changes eg context shared global second safari nt emit page load browsers problem explaining things would end guide history instead guide react routing would ok use event instead possibly history also create separate issue", "d": "10/2016"}, {"body": "ok using seems reasonable note hides browser inconsistencies", "d": "10/2016"}, {"body": "specify input becomes controlled means must update corresponding state react literally means value always matter probably want call inside handler alternatively remove prop altogether make input uncontrolled wo nt call also wo nt able control current value eg transform reset learn forms documentation section help", "d": "10/2016"}, {"body": "thanks gaearon nt know state updated onchange", "d": "10/2016"}, {"body": "noted alternatively use uncontrolled inputs specifying use initial value case wo nt able control value", "d": "10/2016"}, {"body": "umm curious purpose would uncontrolled input serve mean usually isnt purpose input taking dataand processing application", "d": "10/2016"}, {"body": "read data uncontrolled input fine handler use controlled inputs want control eg reset force certain values eg props change use uncontrolled inputs nt care controlling need current values", "d": "10/2016"}, {"body": "need replace render section snippet code codepen actually renders input text instead radio buttons docs forms uncontrolled components", "d": "10/2016"}, {"body": "thanks finding bayfaal codepen updated push edit formsmd page matches codepen", "d": "10/2016"}, {"body": "thanks feedback good job mon oct pm eric nakagawa notifications githubcom wrote thanks finding bayfaal codepen updated push edit formsmd page matches codepen receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "docs component api", "d": "10/2016"}, {"body": "yea something happened redirects lacker", "d": "10/2016"}, {"body": "luqmaan thanks fixed let us know find broken links", "d": "10/2016"}, {"body": "hello world nt added redirects", "d": "10/2016"}, {"body": "great job new docs love live editor error handling curious reason used homepage tutorials curious whether best practice would thought possible otherwise", "d": "10/2016"}, {"body": "another thing noticed might issue old docs syntax errors nt correct formatting newlines babelcodeframe someone make pr add add style div edit css class seems make go width limit colored error box width would need longer accurate would better", "d": "10/2016"}, {"body": "reason var used homepage tutorials reason feel free send pr fixing", "d": "10/2016"}, {"body": "new style think point key differences old style take people knowing key things change", "d": "10/2016"}, {"body": "matter point much style lack cohesion previous docs nt really grouped topic clear progression simple complex titles nt descriptive many random tips nt fit cohesive narrative using apis nt used widely ecosystem anymore etc new docs line people use react today descriptive titles linear progression simple complex topics basic difference", "d": "10/2016"}, {"body": "possible typo docs consider ticking clock example one previous sections", "d": "10/2016"}, {"body": "gaearon uncontrolled form example passing value actually controlled example correct example would something like jsx class form extends reactcomponent constructor props super props thishandlesubmit thishandlesubmitbind handlesubmit event alert text field value thistextinputvalue render return reactdomrender documentgetelementbyid root", "d": "10/2016"}, {"body": "controlled component maintain internal state component renders purely based props bit confusing probably better clarify talking dom state instead react x thinkinginreacthtml second last paragraph nt mention jsxindepthhtml javascriptexpressions two headings id javascript expressions makes impossible link second one x fourth example innermost one missing", "d": "10/2016"}, {"body": "info latest stable removed landing page", "d": "10/2016"}, {"body": "andreyco mean download starter kit link mentioned version people nt find starter kit useful always find latest version releases gh page", "d": "10/2016"}, {"body": "another feedback controlled components", "d": "10/2016"}, {"body": "gaearon yes mean link mentioned version nt care link interested version information anyway big deal search latest gh releases ty", "d": "10/2016"}, {"body": "merged bunch prs fixes keep coming please", "d": "10/2016"}, {"body": "looks weird mobile sort broken top bar", "d": "10/2016"}, {"body": "feedback tutorial cc spicyj", "d": "10/2016"}, {"body": "figure redirects correctly", "d": "10/2016"}, {"body": "gaearon considered replace redcarpet kramdown", "d": "10/2016"}, {"body": "giuseppeg idea want send pr better understand difference", "d": "10/2016"}, {"body": "feedback people used seeing version number homepage add somewhere also link changelog good measure", "d": "10/2016"}, {"body": "reading though react without page react components declared classes methods follow semantics regular classes means nt automatically bind instance explicitly use bind constructor perhaps worth mentioning applies event handlers otherwise works fine happy open pr", "d": "10/2016"}, {"body": "simonsmith sounds good", "d": "10/2016"}, {"body": "perhaps worth mentioning applies event handlers otherwise works fine happy open pr simonsmith gaearon nt think true understanding correctly need bind method anytime might executed context refer component instance defined js class bar extends reactcomponent constructor props super props throw since tries access thisstatefoo thisstate undefined bar thispropslogfoo render return bar class foo extends reactcomponent constructor props super props thisstate foo foo logfoo consolelog foo thisstatefoo render return event handler common case case need bind methods", "d": "10/2016"}, {"body": "rule thumb access method anywhere without right need bind", "d": "10/2016"}, {"body": "rule thumb access method anywhere without right need bind docs", "d": "10/2016"}, {"body": "helps", "d": "10/2016"}, {"body": "prs welcome", "d": "10/2016"}, {"body": "aweary yeah point docs imply need use whenever want use instance method demonstrated true time seen code every method bound hand even called normally see people might think correct put together changes discuss pr", "d": "10/2016"}, {"body": "mention old stringbased refs new docs mentioned deprecated notice least", "d": "10/2016"}, {"body": "shenlok technically deprecated yet considered legacy refs dom mention briefly using ref callback set property class common pattern accessing dom elements currently using access refs recommend using pattern instead agree add small section bottom least describing string refs work notice nt recommend using could send pr", "d": "10/2016"}, {"body": "forms docs mistakes forms docs found mistake basic radio button example method use according state lifecycle docs bad thisprops set react thisstate special meaning free add additional fields class manually need store something used visual output nt use something render nt state", "d": "10/2016"}, {"body": "sorry discussed elsewhere nt able find references though many random tips nt fit cohesive narrative agree narrative although time many provided really good advice antipatterns things avoid least valuable way learning react browsesearch new docs missing sure whether integrated sections discarded reason imho specific section antipatterns beneficial newcomers avoid making common mistakes eg using props initial state well reference able point others", "d": "10/2016"}, {"body": "oops forgot builtin thing take pr renaming", "d": "10/2016"}, {"body": "ok", "d": "10/2016"}, {"body": "pr tries fix symptoms", "d": "10/2016"}, {"body": "ragnaroek thanks report nt seem determinstic happens ie least share test case reproduces nondeterministically even nt consistent better nothing would say fixing symptoms issue nt good idea may hide deeper issue cause hard debug problems somewhere else code path", "d": "10/2016"}, {"body": "agree fixing symptom way bad idea turned problem react exception one promise handlers", "d": "10/2016"}, {"body": "ragnaroek thanks update glad figured", "d": "10/2016"}, {"body": "iirc often indication setting state lifecycle method reason end endlessly changing state remember even nt actually change values state still queue update unless proper runs stack", "d": "10/2016"}, {"body": "yeah looked code could nt find cases issue expect code shown stack trace happen lot couple different stack traces logs code never still likely explaination error side dig", "d": "10/2016"}, {"body": "found common modules react dependency rather peerdependency npm package using webpack got around creating alias perhaps something similar gulp", "d": "10/2016"}, {"body": "awesome helped sharing ref others thanks", "d": "10/2016"}, {"body": "also please file issues libraries gently ask use instead", "d": "10/2016"}, {"body": "want install packages resolving configure require key browserify object take care error", "d": "10/2016"}, {"body": "also ran one exclusively chrome", "d": "10/2016"}, {"body": "thanks issue report moesattler react throws error messages certain points app chrome chrome browsers work test latest version react least something newer know hard large applications might issue already resolved nt able pinpoint cause unfortunately lot without reproducible test case could share minimal test case exhibits issue would useful might something already resolved newer release", "d": "10/2016"}, {"body": "impacting dev builds app anyone experiencing dist builds also ideas would impact dev builds", "d": "10/2016"}, {"body": "getting errors mentioned trying upgrade apis changed somewhat requiring us rebuild lot app", "d": "10/2016"}, {"body": "yes encounter issue stack trace shows markupindex nan line placing conditional debugger line resolve issue mysteriously upgrading react fix since reactmultichild changed happens code base lot react components rendered example large table pagination render non react component inside react component use setinterval call react rendering function constantly issues occur pc mac working fine however since widely used production code still supported would like see fix thanks", "d": "10/2016"}, {"body": "dev team facing exact issue chrome dev proddist works great reproduce time seems redraws components react take actions render components third one throw error every time", "d": "10/2016"}, {"body": "us since chrome upgrade last friday", "d": "10/2016"}, {"body": "using react error occurs chrome debugging see get triggers error going back stack trace point manually adding also breakpoints see value variable moment like adding noticed happens array received always pair insertmarkup similar type removenode interestingly enough able narrow one case really small piece component mine triggers simply something like tests able see provokes error without breaks places able avoid error happening part breaks error part within external component fyi trying work reproducible scenario", "d": "10/2016"}, {"body": "company using react webpack dev server upgrading chrome production works perfectly fine occurs rerendering components react", "d": "10/2016"}, {"body": "issue chromium arch linux seems like probably bug since way see gets set result place breakpoint around nt seem happen ie return nan classic heisenbug probably wonky lowlevel stuff", "d": "10/2016"}, {"body": "would bet due bug mentioned developit twitter ends returning value pushed instead index", "d": "10/2016"}, {"body": "case fix already merged pushed next stable release meaning would nt actionable end wait fix land", "d": "10/2016"}, {"body": "yup canary work fine decent way verify seeing turbofan push issue", "d": "10/2016"}, {"body": "guess issue could confirmed since lots met situation anyone fixed simply upgrading", "d": "10/2016"}, {"body": "patch release chrome windows seems already chrome fixed issue us", "d": "10/2016"}, {"body": "upgrading chrome fixed", "d": "10/2016"}, {"body": "thanks verifying moesattler", "d": "10/2016"}, {"body": "confirmed upgraded chrome version problem disappeared", "d": "10/2016"}, {"body": "see bad idea implemented could nt unshift array another one", "d": "10/2016"}, {"body": "please report specific issue ideally provide idea solution example good example issue", "d": "10/2016"}, {"body": "scsherwood ca nt make google gpt request componentdidmount rerender results call react finish rendering markup sent server ad request happen separately initial rendering complete", "d": "10/2016"}, {"body": "jblok reason cant make componentdidmount tied react lifecycle script component bottom page server side rendered markup need ads appear immediately page load already server side rendered markup delay ads showing client side scripts", "d": "10/2016"}, {"body": "yes entire app nt downside really unclear mean script third party ad script runs page load regardless loading ads componentdidmount wo nt slow stated server sending empty div anyway", "d": "10/2016"}, {"body": "yes entire app nt downside really visually speaking app present first byte lifecycle client side ties firing gpt request unclear mean script third party ad script runs page load regardless script bundled javascript react miscellaneous vendor scripts app scripts etc gpt loaded head document let know questions clarify goal visually render full page ads seconds", "d": "10/2016"}, {"body": "trying get front react render get faster performance ads waiting react costs us around ms ad call made steven sherwood w e stevensherwood weathercom tue oct jonathon blok notifications githubcom wrote scsherwood ca nt make google gpt request componentdidmount rerender results call react finish rendering markup sent server ad request happen separately initial rendering complete receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "another option may offscreen rendering ad serverstate load time push rendered html store components simply grab html store set inside target component using assumes determine ad service finished rendering", "d": "10/2016"}, {"body": "use state js class mycomponent extends component constructor props super props thisstate hasmounted false componentdidmount thissetstate hasmounted true render return text rendered server thisstatehasmounted amp amp text appears mounting generally nt recommend causes extra rerendering case sounds exactly like need", "d": "10/2016"}, {"body": "ill prepare sample repo illustrate situation", "d": "10/2016"}, {"body": "recently opened discussion kevin lacker tried reproduce application smaller example repo able reproduce ads wipeout issue theory one libraries using causing rerender causes warning message continue digging determine exactly library causing issues", "d": "10/2016"}, {"body": "hi thynson thanks creating issue making sure understand question intend use instead", "d": "10/2016"}, {"body": "dud know oct pm keyan zhang notifications githubcom wrote hi thynson thanks creating issue making sure understand question intend use instead receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "keyanzhang right autocompletion provided wrong tag name actually related svg thanks hint", "d": "10/2016"}, {"body": "controlled inputs already sanctioned way resetting using purpose seems sloppy", "d": "10/2016"}, {"body": "disagree intuitive inputs already get significant treatment normalize change event behavior would trigger change form resets primary motivation course address edge cases special inputs types chrome also makes forms resilient instead fighting browser plays nice", "d": "10/2016"}, {"body": "updated title ended going alternative approach fix chrome input issues love keep talking", "d": "10/2016"}, {"body": "joearasin thanks issue currently documented jsx depth though much said react jsx uses upper vs lower case convention distinguish local component classes html tags might also something willcan addressed clearly new docs cc lacker hramos", "d": "10/2016"}, {"body": "cc lacker updating jsx depth guide", "d": "10/2016"}, {"body": "see perfectly documented section", "d": "10/2016"}, {"body": "yeah documented places", "d": "10/2016"}, {"body": "furthermore manually attached onchange event via reference input indeed get triggered js class myinput extends component constructor props super props thisstate value componentdidmount thiselemonchange gt consolelog changing changehandler evt gt consolelog changehandler triggered thissetstate value evttargetvalue render const value thisstate return setvalueclear triggers dom attached change handler", "d": "10/2016"}, {"body": "ca nt use incompatible versions react reactaddonsperf please either use", "d": "10/2016"}, {"body": "upgrade one use", "d": "10/2016"}, {"body": "oh right nt separate package get importing", "d": "10/2016"}, {"body": "looks like problem exist exhibit behaviour", "d": "10/2016"}, {"body": "eqyiel thanks report seems bug safari able reproduce without using react test jsfiddle", "d": "10/2016"}, {"body": "aweary welp thanks looking guess try find workaround", "d": "10/2016"}, {"body": "ended using test like applying different styles conditionally closing nt think interest react team sort safari bugs", "d": "10/2016"}, {"body": "lines last argument rather second message argument nt get cut automatically like fix please submit pr splits several calls different messages check makes build size smaller", "d": "10/2016"}, {"body": "proposal use message map apart js file message map easy use debug mode easy remove publish create message code example message sample message sample message sample message use reactjs message code", "d": "10/2016"}, {"body": "already exactly suggested done automatically use pass string second argument babel transform extracts second message argument however nt happen arguments suggested making multiple calls", "d": "10/2016"}, {"body": "talking reactdomminjs reactminjs gulp script extracting errorcodes part build run separately gaearon said actually make minified version bytes larger change lines reactmountjs currently errorcodes part codesjson gain places continue tomorrow", "d": "10/2016"}, {"body": "cleaning code table bring size reactminjs reactdomminjs however numbers code table contain gaps renumbering causes tests depend numbers fail fix", "d": "10/2016"}, {"body": "rickbeerendonk fixed improvements welcome", "d": "10/2016"}, {"body": "keyanzhang look", "d": "10/2016"}, {"body": "conclusion invariants second argument ending meaning text argument minified files changing code turn resources possible increases size minified files missing error messages fixed container old error messages cleaning remove bytes reactminjs bytes reactdomminjs removing unused error messages make unit tests fail due required renumbering fragile gulp task react extracterrors add error messages nt remove oldunused messages cleaning messages however gain bytes minified files new issue gulp task react extracterrors find error messages build messages error message item must set found current react version error map probably sync please run building react gaearon keyanzhang submit pull request updated old messages removed reducing size minified files job gulp task react extracterrors propose anything issue changing code increase minified files", "d": "10/2016"}, {"body": "thanks contribution however manually edited file designed appendonly ensure backward compatibility means existing code file never changedremoved readme file added contains information system gulp task also fixed however interesting mentioned removing old messages actually decreases build size could tell json file used reference included release build sure happens", "d": "10/2016"}, {"body": "keyanzhang backwards compatibility bit hidden docs due central system error messages old past versions", "d": "10/2016"}, {"body": "rickbeerendonk yeah exactly affect build size though", "d": "10/2016"}, {"body": "keyanzhang hmmm might due missing messages fixed", "d": "10/2016"}, {"body": "short answer need call method datetimenow variable date object string ie one objects error message referring said error message initially confusing since simply renders date string example replace object error message makes little sense", "d": "10/2016"}, {"body": "correct dates objects js render output may contain react elements strings numbers formatting string like method work find list methods mdn cheers", "d": "10/2016"}, {"body": "update rcs need update react reactdom package judging error message redboxreact old copy reactdom nodemodules delete issue fixed also bring maintainers reactdom needs peerdependencies rather dependencies closing something fix react hope helps", "d": "10/2016"}, {"body": "fixed need delete updating", "d": "10/2016"}, {"body": "issue solved updating redboxreact thank gaearon", "d": "10/2016"}, {"body": "cc zpao", "d": "10/2016"}, {"body": "thanks reporting yes mistake publish retagged latest fine", "d": "10/2016"}, {"body": "react runs javascript thus considered naturally map corresponding htmldom jsproperties htmlattributes artifact html attributes htmldom jsproperty boolean also html lot quirky stuff simplistic design legacy limitations legacy nt exist js intentionally bringing quirks along seems counterproductive note behavior official reactdom module renderer react naturally going opinionated", "d": "10/2016"}, {"body": "work", "d": "10/2016"}, {"body": "disabled attribute works expected react matches autofocus work", "d": "10/2016"}, {"body": "props meant mapping html attributes use camelcased version make clear javascript properties html attributes dom properties attributes including event handlers camelcased consistent standard javascript style intentionally break spec since spec inconsistent react docs dom differences something like corresponds directly disabled attribute works expected react matches autofocus work work need use camelcased attribute name works fine since attributes without values default since explicitly intentionally breaking spec going close really appreciate issue", "d": "10/2016"}, {"body": "weird camelcase single word", "d": "10/2016"}, {"body": "think consistency semantics making camelcase makes consistent think less confusing either way point would nt worth introducing breaking change like semantical reasons", "d": "10/2016"}, {"body": "would nt breaking change could updated allow ways", "d": "10/2016"}, {"body": "would introduce new inconsistency since nt support attributes currently", "d": "10/2016"}, {"body": "yeah might messed please send pr", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "problem specific jsxtransform using testing babeljs officially recommended one final code looks fine correct shadowing transformtool using", "d": "10/2016"}, {"body": "intended behaviour got investigate thanks", "d": "10/2016"}, {"body": "thanks pointing totally correct actually pr totally replacing doc updated one fixes reference finddomnode let go pr comment welcome btw", "d": "10/2016"}, {"body": "lacker", "d": "10/2016"}, {"body": "unless missing something nt actually make lot sense browsers perform encoding try read obvious reasons encoding take place runtime client react sets attributes via js exists server generate raw html rendered asis nt really value dealing broken parsers much quotes encoded attributes way around seems either changefix parser run preprocess step goes html decodes entities attributes feeds parser benefit react", "d": "10/2016"}, {"body": "hey thanks filing issue ca nt specify object different type values eg proptypesobjectof id proptypesnumber name proptypesstring nt think ever supported nt looking help cheers", "d": "10/2016"}, {"body": "hi may nt throw warnings used wrongly without realising update codebase use shape thanks", "d": "10/2016"}, {"body": "nt working around lack threads language yes true nt good option javascript run threads huge problem tried exploring various options running web workers parallel js tried propose shared immutable persistent data structures language experimented custom vm tweaks etc javascript language nt suitable mutable shared runtimes like prototypes ecosystem nt ready duplicate code loading module initialization across workers garbage collectors efficient currently thread safe vm implementors seem unwilling bare implementation cost persistent data structures shared mutable typed arrays seems moving along requiring data go layer seems unfeasible ecosystem today artificial boundaries different parts code base also nt work well introduces unnecessary friction even lots js code like utility libraries duplicated across workers leads slower start time memory overhead yes threads likely question target something like web assembly however interesting realization benefits fiber architecture applicable whether threads componentkit runs native work using threads example able start higher priority work one thread lower priority thread still happening leading much simpler implementation however limitations ca nt safely abort background thread aborting restarting thread cheap many languages also safe could middle lazy initialization work even though effectively interrupted continue spending cpu cycles one solution samething fiber make api yield points unwind stack safely check flag periodically abort effectively fiber another limitation since ca nt immediately abort thread ca nt sure two threads processing component time leads limitations able support stateful class instances like although might good thing reasons another thing threads nt automatically buy ability resume part work ca nt memoize part work done one thread reuse another certainly implement threads end similar complexity fiber top threads threads slight benefit start next work slightly earlier interject instructions background thread still powering however yield points frequent enough default nt think matter fiber therefore yes writing complex implementation lacking threads javascript forced deal end better features simply relied threads scheduling parallelism true threads get parallelism however nothing scheduling responsiveness generally nt want spend one cpu processing work already aborted higher priority work arrived nt buy anything instead really want calculate independent work different threads example two react siblings calculated parallel threads since disconnected access threads would however everything fiber still valid scheduling purposes architecture even use threads parallelism subtrees conclusion working around limitations language note say choose cooperative scheduling threads projectuse case particular use case made sense threads still make sense many cases", "d": "10/2016"}, {"body": "ok cooperative scheduling might benefits preemptive threads could nt use generator functions like scheduling frameworks done two reasons generators nt let yield middle stack wrap every single function generator adds lot syntactic overhead also runtime overhead existing implementation fair syntax might helpful perf issue still stands biggest reason however generators stateful ca nt resume middle want execute across multiple time slices step however get update b already completed way reuse value ie skip ahead different value still reuse result important react since lot memoization plausible add layer around really gaining much use generators also languages generators designed functional use case capability js one", "d": "10/2016"}, {"body": "ok ocaml algebraic effects bucklescript compile nontrivial overhead js version assuming would ok use algebraic effects ocaml way think would need clone fiber resume possible compiler could reuse immutable stack frame fiber without copying works without get limited benefits would also end lots nested handlers would add overhead also add linear search time find top handler yield besides support existing react api need set features overlap implementation fibers return pointers combining get benefits high hopes one day use effects use cases internally could also use make even simpler react api however think probably easier lower level control even though complexity higher look forward seeing implementations prioritize implementation simplicity using complex compilers solve problems", "d": "10/2016"}, {"body": "mistake using constructor instead", "d": "10/2016"}, {"body": "already works fiber backport existing reconciler fiber ready yet hope ship next year", "d": "10/2016"}, {"body": "submit traditional htmlformelement case need preventdefault event passed submit handler", "d": "10/2016"}, {"body": "currently validation using local json file client side event onclick added links components used need use preventdefault every time use predefined event", "d": "10/2016"}, {"body": "ca nt believe basic needed use preventdefault", "d": "10/2016"}, {"body": "updated fail case less code works node js use strict const react require react const enzyme require enzyme const jsdom require jsdom const doc jsdomjsdom globaldocument doc globalwindow docdefaultview class root extends reactcomponent componentwillmount work deferred settimeout thistestbreakbind testbreak work setstate thissetstate render work remove least one bug manifests multiple children nt matter children array return reactcreateelement div null reactcreateelement reactcreateelement enzymemount reactcreateelement root const testreactelement gt reactcreateelement div work use instead shallow rendering const testrender gt enzymeshallow reactcreateelement testreactelement work call testrender lt testrender testrender testrender edit updated code comments", "d": "10/2016"}, {"body": "another example uses pubsub eventemitter simulates test would look like hooked something like flux js use strict const react require react const enzyme require enzyme const jsdom require jsdom const transmitter require transmitter const bus transmitter const doc jsdomjsdom globaldocument doc globalwindow docdefaultview class root extends reactcomponent componentdidmount fluxlike bussubscribe gt thissetstate render work remove least one bug manifests multiple children nt matter children array return reactcreateelement div null reactcreateelement reactcreateelement works use shallow rendering enzymemount reactcreateelement root const testreactelement gt reactcreateelement section work use instead shallow rendering const testrender gt enzymeshallow reactcreateelement testreactelement work call testrender lt testrender testrender testrender call action separate test fail buspublish", "d": "10/2016"}, {"body": "things hope would also appended list featuresbugs fixing context making stateless functional components performant learning inferno provide stateless function components lifecycle hooks maybe revisingimproving reacts legacy build step try cut react size major rewrite", "d": "10/2016"}, {"body": "donnieflorence list things need get parity existing implementation finish might look adding new features", "d": "10/2016"}, {"body": "wickedrahul please fill issue report template provide steps reproduce andor demo reproducing issue unfortunately ca nt help without information", "d": "10/2016"}, {"body": "closing since information response", "d": "10/2016"}, {"body": "hey use issue tracker specifically bug reports feature requests usage questions directed somewhere else like stackoverflow thanks", "d": "10/2016"}, {"body": "multiple items name meant warning trivial efficiently correctly currently warned", "d": "10/2016"}, {"body": "syranide ok suggestions solve country example fiddle want favorite list beginning", "d": "10/2016"}, {"body": "jansoren want help code need use stackoverflow discussion board keep gh issues bugs simply need give separate name prefix use differentiate", "d": "10/2016"}, {"body": "want help code need use stackoverflow discussion board keep gh issues bugs simply need give separate name prefix use differentiate", "d": "10/2016"}, {"body": "technically pass context like normally react wrap rendered element element context providing component shortcut offered enzyme shortcut able pass context using regular react api", "d": "10/2016"}, {"body": "prefer use shortcuts case also ran problem trying use contextproviding component render", "d": "10/2016"}, {"body": "looks like duplicate react bundle could case", "d": "10/2016"}, {"body": "nt think found issues people saying seen could explain things try without", "d": "10/2016"}, {"body": "folder get duplicate react", "d": "10/2016"}, {"body": "thanks confirming currently using lerna webpack maybe something webpack module resolution config", "d": "10/2016"}, {"body": "going close since technically already pass context via usual means wrapping component error see appears related module resolution rather react", "d": "10/2016"}, {"body": "please someone confirm bug design", "d": "10/2016"}, {"body": "sure intentional likely matter projects observable difference reason matters", "d": "10/2016"}, {"body": "even getting", "d": "10/2016"}, {"body": "perhaps browser thing looking callstack nt really see would argument", "d": "10/2016"}, {"body": "reason matters yes implemented custom basic component jsx export class uicomponent extends reactcomponent got problem method method allows attach event handlers defined component classes extra data binding always first argument event object jsx class customlist extends uicomponent render return thispropsitemsmap item index gt return", "d": "10/2016"}, {"body": "ok actually react passing sure actually used somewhere anyway still got third argument assume comes browser nt seem like safe assumption anyway unless something else missed", "d": "10/2016"}, {"body": "syranide may ask version react use", "d": "10/2016"}, {"body": "point nt see reason react pass internal data event handler opinion garbage data makes event handlers inconsistent wrong", "d": "10/2016"}, {"body": "agree make sense pass garbage look call stack figure fix", "d": "10/2016"}, {"body": "quick look ca nt figure caused problem calls stack first calls cusstom methods onitemclick uikiteventhandler reacterrorutilsinvokeguardedcallback executedispatch executedispatchesinorder executedispatchesandrelease executedispatchesandreleasetoplevel foreachaccumulated processeventqueue runeventqueueinbatch handletoplevel handletoplevelimpl perform batchedupdates batchedupdates dispatchevent also found switched minified version regular version regular react build event handler got params syranide said", "d": "10/2016"}, {"body": "believe problem binds additional arugments case get looks like longer case master binds one argument binds event handler", "d": "10/2016"}, {"body": "purpose push event object event handler", "d": "10/2016"}, {"body": "aweary proxy syntheticevent", "d": "10/2016"}, {"body": "yes seems proxy", "d": "10/2016"}, {"body": "see syntheticeventjs proxy used dev supported", "d": "10/2016"}, {"body": "aweary good news waiting next release react team make serious refactor module look like mess code fix params variables naming", "d": "10/2016"}, {"body": "thanks advice perhaps could send pr help us", "d": "10/2016"}, {"body": "pr would much appreciated happy review keep mind meant general purpose module safe function invocation example use calling componentwillunmount argument names generic since represent almost generic argument though kind confusing use cases even though used outside event system know gaearon", "d": "10/2016"}, {"body": "guys complete picture react works inside situation little use", "d": "10/2016"}, {"body": "guys complete picture react works inside situation little use totally understandable codebase dense sometimes wanted give try would happy work pr otherwise one us try get going close issue think identified additional arguments expect see least native event browser passing changes master released", "d": "10/2016"}, {"body": "though kind confusing use dispatchevent cases dev even though used outside event system know gaearon understand abstraction exists \u30c4", "d": "10/2016"}, {"body": "aweary nt understand send native event second argument native event instance already attached property right", "d": "10/2016"}, {"body": "side effect current abstraction since actually dispatching empty event function called event handler gets passed event mock event see nt actually event used invoke event handler type react type case dev though kind weird actually going reopen either fully justify abstraction exists remove abstraction", "d": "10/2016"}, {"body": "four arguments ca nt find callsites call four arguments let remove argument issue resolved", "d": "10/2016"}, {"body": "create react component web component constructor give custom event support", "d": "10/2016"}, {"body": "long support attributes nt see problem heuristic concern would heuristic normalizing event name really fan converting things like mootools concern related handle capturebubblepassiveactive etc like better could pass props element properties seems like ship sailed since web components nt designed handle properties properly massive loss community imo", "d": "10/2016"}, {"body": "like better could pass props element properties seems like ship sailed since web components nt designed handle properties properly massive loss community imo feels like statement clumping web components single bag poor design many cases nt mean ca nt optimise ones designed well couple paradigms trying push community skatejs events props use props source truth sync attributes props monica dinculescu mentioned former rob dodson latter polymer summit talks think something trying espouse unfortunate primitives nt make obvious think comes nature browser builtins days react setting props supporting custom events reason maintain react integration library posted worth looking source patterns definitely working us production also worth noting patterns employed also used skate wrapper around incremental dom set props everything falling back attributes last resort integration lib events special convention similar react particular something pay attention adding event listeners without checking name something like prefer events propertiesyou could flip around set props leave web component property set creates little work component means nt prefix checking fan", "d": "10/2016"}, {"body": "treshugart people seem find counterintuitive preference would effectively call sounds like fan approach well maybe still hope change web components ecosystem prefer indeed react promoting style would perhaps help staltz think approach", "d": "10/2016"}, {"body": "sebmarkbage like approach think things consider probably already aware props nt work elements error set property example readonly attributes nt work elements needs set property example attribute sync property set user sets value web components may edgecases attributeonly handler necessary maybe attributes dashes myproperty reflected camelcased props myproperty behaviour probably fine worry case consumer use attributes name property happens property getter set writable false way consumer prefer attribute maybe something enforced component author must provide setter consumer would behaviour applied custom elements would detected something like following might little bit robust brainstorming case overall tend agree fine react seems like ways consumer get around potential design problems component using maybe still hope change web components ecosystem prefer indeed react promoting style would perhaps help sure hope trying know polymer team trying well think react massive help", "d": "10/2016"}, {"body": "like better could pass props element properties seems like ship sailed since web components nt designed handle properties properly massive loss community imo sure exactly referring polymer definitely prefer setting properties setting attributes web components nt handle properties way", "d": "10/2016"}, {"body": "sebmarkbage think definitely encourage folks write components support objectassign approach mentioned treshugart mentioned spoke polymer summit talk based previous twitter discussion easy event support react would also great", "d": "10/2016"}, {"body": "talk also mentioned need dispatch events state changes libraries like react revert changes similar way react handles native input checkbook element", "d": "10/2016"}, {"body": "events props yes think would benefits outside web components wonder see libraries rely less context api could emit custom event nt see problem heuristic typeof props propname function elementaddeventlistener propname props propname false sebmarkbage unless know current work happen stencil something", "d": "10/2016"}, {"body": "nhunzaker well think discussed would alternate strategy would support addeventlistener click fn would instead support elementonclick fn", "d": "10/2016"}, {"body": "yeah think ok idea understand proposed avoid translating reasons", "d": "10/2016"}, {"body": "problem properties attributes events children know one use end heuristics explicit namespaces nt think explicit namespaces ergonomic properties powerful attributes properties rich data types eg boolean complex objects like typed cssom let us specific data types individual style properties html properties always control represent current visible state element whenever diverge properties source truth like case htmlinputelement exception set indeterminate state oversight treshugart pointed exception mostly random things added carelessly outside normal process rdf custom elements built third parties svg properties ca nt set normal way usually using instead nested normal properties edge cases dealt library like react dom knows properties benefit reflected ca nt detect attribute event accepted accepted ca nt add runtime warnings wrong attribute names also use workarounds eg fallback something else property available one prefer properties leaves events use heuristic affects performance negatively since create mappings runtime also means claiming whole namespace means custom elements ca nt provide property wanted example infinite scrolls pattern like nt simple event callback invoked create row particular index think would unfortunate claim whole namespace prefix type precedence much simpler model course still leave us children special kind unique property react children components type value concede one constrained special case", "d": "10/2016"}, {"body": "took stab implementing model discussed sebmarkbage let know matches thinking javascript class xcheckbox extends htmlelement connectedcallback thisaddeventlistener click thisonclick disconnectedcallback thisremoveeventlistener click thisonclick onclick e thischecked thischecked thisdispatchevent new customevent checkchanged detail checked thischecked bubbles false set oncheckchanged fn thisremoveeventlistener checkchanged thisoncheckchanged thisoncheckchanged fn thisaddeventlistener checkchanged thisoncheckchanged get oncheckchanged return thisoncheckchanged set checked value thischecked value value thissetattribute checked thisremoveattribute checked get checked return thischecked customelementsdefine xcheckbox xcheckbox const props checked true oncheckchanged function e consolelog oncheckchanged called e const customcheckbox documentcreateelement xcheckbox objectassign customcheckbox props documentbodyappendchild customcheckbox one concern element authors optin defining setter expose handler every event dispatch may end bloating elements especially variety events expose react might make element author lives bit easier speaking personally knowing trade event name heuristic define setters everything choose heuristic", "d": "10/2016"}, {"body": "sebmarkbage get properties preferable attributes polymer defaults setting properties since web components days polymer elements polymer automatically supports properties think web components handle properties correctly wc libraries seen handle properties correctly well know large set components nt support properties let know glad see help fix massive loss robdodson nt think really feasible element authors write event handler properties events work fine event handler properties extra burden wo nt consistently implemented nt even sufficient many uses guess dom event handler properties would nt even exist vestige earlier time polymer angular believe skatejs well syntax conventions declaring binding property attribute adding event handler html attribute names nt know jsx seems like since html javascript lot leeway invent syntax unambiguously differentiate properties attributes events", "d": "10/2016"}, {"body": "react intentionally went back claims single event handlers better model use cases multiple event listeners better solved elsewhere since leads confusion events flow order flow additionally string based event system difficult type statically type systems like typescript flow optimizing adding lots event subscriptions runtime instead string based hash maps nt think fair say event handler properties strictly worse types firstclass event handlers like observables would nice support using properties important feature interop reflection without reflection ca nt make automatic wrappers providing firstclass observables properties available event something event listener system nt provide course like attributes nt really make sense since stringly typed event system broadcast string element bubbling", "d": "10/2016"}, {"body": "sebmarkbage good points moment take look sample code posted let know seems inline thinking", "d": "10/2016"}, {"body": "robdodson yes looks good", "d": "10/2016"}, {"body": "problem boilerplate think solvable initially user space terms libraries make easy create bestpractice custom elements later standard helper batteries included", "d": "10/2016"}, {"body": "problem boilerplate think solvable initially user space terms libraries make easy create bestpractice custom elements later standard helper batteries included yeah sounds good treshugart staltz guys think", "d": "10/2016"}, {"body": "looks awesome reiterate currently solves stuff userland might good spot start collaborating boilerplate", "d": "10/2016"}, {"body": "experience using vanilla web components reactlike architecture humble suggestions nt spray props directly onto element something like instead makes alot easier debug works better immutable paradigm time travel avoids clashes gives component chance interpret data especially important wc extends native element etc nt support attributes much better one good consistent way properties deal data several partial solutions scale little benefit gained trying make attributes work would offset confusion many devs hopefully eventually reflects back wc design component implements render function invoke updating world essentially except components stateless amp stateful would great wcs implement declarative render function rather deal change individually aforementioned agree standard helper binding events perhaps jsx syntax addition", "d": "10/2016"}, {"body": "hate chime thread like feel owe justin deminimus hard work patience someone building shard templating engine designed approximate functional groups unbelievable excuse french expletive json manage data looped layered attributed pass data strings makes even vaguest concept sacrificing speed ease use dom severability available via element properties alternative mapped property proxies anathema via shard templating granular web components hundreds inputs radically different configs fly changes handled fewer five fingers worth event handlers focus edge cases attempting dual focus one exception attribute based handlers make events specific element view image one simplest projects iuniversal dropdown takes items whatever input menu calls handle events via attribute binding window click touched listener creative refactoring focus manipulation text inputs excepted use chase handler passes listener active text field damned tab apple", "d": "10/2016"}, {"body": "minimum gon na burn wheel kill cpu complex app", "d": "10/2016"}, {"body": "robdodson yeah aligned think well speaking personally knowing trade event name heuristic define setters everything choose heuristic also choose action points issue willing something unsure confused whether robdodson sebmarkbage intentions act", "d": "10/2016"}, {"body": "clarify conclusion robdodson shows proposed bestpractice feasible direction web components ecosystem including event listeners properties react switch simply transferring props element properties next major release next actionable item would someone maybe polymer provides way make easy build web components see viable rawform web components community opposed big libraries", "d": "10/2016"}, {"body": "staltz discussing platform engineers chrome raised issues around native properties work builtins think worthwhile discuss working follow details points covered", "d": "10/2016"}, {"body": "checkbox example showed relatively simple bit verbose ce author wire event handler properties however turns currently impossible ce author implement event handler attributes match behavior platform builtins attribute handlers created ways exposed plain javascript raises concern make sense promote pattern ces uses existing semantics nt attribute property parallelism realize frameworkslibraries problem use properties general pattern ces troubling breaks html elements work could surprising anyone assuming would behave like builtin tags couple solutions team proposed spec api making easy ce authors mimic native behavior could generate properties attributes would work exactly builtins pursue propertiesonly approach use existing semantics basically use opportunity say stuff pretty weirdbroken instead encouraging let pioneer different system userland feed back spec personally lean toward option curious folks thread think options take time leaves question approach move forward near term think couple options similar staltz original proposal react could add event listeners dom events instead defining heuristic translating possible solution would express event name jsx eg element authors continue use properties events approach promote treshugart reactintegration lib improve interop react lean toward option reactintegration lib awesome option lowers barrier people use ces react together either case would continue encourage folks treat properties source truth may want encourage bubble events good reason know one critiques current event system might place agree best practice options avoid baking pattern hash would better long term alternative add motivated work think primary goal extensible web movement web components general take feedback library framework authors use improve platform", "d": "10/2016"}, {"body": "example would prefer", "d": "10/2016"}, {"body": "yes agree everything rob said could still bikeshed name need know sebmarkbage thinks", "d": "10/2016"}, {"body": "curious though react decide set props element opposed attributes could troublesome custom elements needing things set attributes", "d": "10/2016"}, {"body": "function expects three parameters pass documentation typescript code would compile source problem comes element creation react internal code missing argument inside shallowcompare shallowequal use strict compare end sth like always false use base class extends old way nt need write anymore warning dev react version would better optional parameter later add state component likely forget pass additional parameter therefore parameters required", "d": "10/2016"}, {"body": "bug safari support expose values could used accurately reliably polyfill fully either unless changed recently doubt however report correct values control keys like space enter arrows escape etc", "d": "10/2016"}, {"body": "control space arrow etc keys report correctly say guessing solution would essentially roll keymap keydown keyup events specific safari since nt normalized default side note probably note sytheticevent documentation keydown keypress keyup events react syntheticevent truly normalized safari browsers", "d": "10/2016"}, {"body": "guessing solution would essentially roll keymap keydown keyup events specific safari since nt normalized default doubt reliably polyfilled safari nt note refers virtual key code users keyboard layout use reliably turn characters hoping hence nt certain circumstances may acceptable say hotkeys side note probably note sytheticevent documentation keydown keypress keyup events react syntheticevent truly normalized safari browsers protectedvoid yeah perhaps applies many browsers many different types events also find browsers nt support similar features fully either truly normalized grey area regardless", "d": "10/2016"}, {"body": "definitely think added note documentation struggling issue right implicitly thought syntheticevent actually handled issue syntheticevent normalize browser event quirks issue restricted safari also browsers makes even important put note guess somebody would argue common knowledge keyboard events consistent cross browser one seldomly use keyboard events would definitely found useful react docu stated", "d": "10/2016"}, {"body": "syranide main thing looking using key keycode implementing method restricted input numeric values allowing tabs backspace delete shift home end arrow amp meta keys protectedvoid yeah perhaps applies many browsers many different types events also find browsers nt support key similar features fully either truly normalized grey area regardless reading documentation syntheticevent mistaken impression things like key events already normalized across modern browsers assumption made suggesting overly detailed explanation anything least something indicating properties syntheticevent available browsers even modern ones", "d": "10/2016"}, {"body": "doubt reliably polyfilled safari nt note keycode refers virtual key code users keyboard layout use reliably turn characters hoping hence nt syranide give example using would result incorrect results know replaced also refers virtual key code", "d": "10/2016"}, {"body": "aweary keyboardevent supports mostly keydownup mostly keypress reason distinction difference code represents button keyboard character code represents translated keyboard layout settings os important thing note pressing keyboard always generate whereas resulting may etc something else entirely say russiankorean keyboard layout resulting also depends shiftctrldeadkeyetcstate bad idea filtering characters pressing generate number hold shiftctrletc also generally good idea actively filter inputs destroys undo history even corrupts undo history chrome still fixed stuff may also pasteddraggedetc keydown insufficient regardless looked using normalization back concluded could nt used reliably nt remember exactly either represents keyboard button identifier ie universal code keyboard button reflect shiftctrldeadkeycompositionstate andor reported wrong keys cases also interesting note browsers natively support actually report wronginconsistent characters possibly due omissions specification even normalization perfect still could nt rely behaving perfectly", "d": "10/2016"}, {"body": "syranide thanks breaking agree nt seem safe way polyfill looks like work done getting safari cc lacker might want make mention docs since nt first time tripped people going close since ca nt resolve stands", "d": "10/2016"}, {"body": "cc lacker might want make mention docs since nt first time tripped people documenting normalizations proscons sounds like undeniably beneficial thing even knowing things normalized big win someone willing invest time", "d": "10/2016"}, {"body": "deferred may may affect otherwise work afaik called everything flushed dom nothing left react intuitively work however remember images may downloaded later increase size rows throwing applies webfonts stylesheets loaded script also throw measurements brief flickering see fiddle seems images presized thus throw initial measurements begin load", "d": "10/2016"}, {"body": "guaranteed update state immediately state updates batched whenwhere accessing state cases", "d": "10/2016"}, {"body": "aweary consolelog statements currently componentdidmount function however result render function find state updated class object thisstate", "d": "10/2016"}, {"body": "consolelog statements currently componentdidmount function guarantee state updates complete immediately since batched see docs setstate setstate immediately mutate thisstate creates pending state transition accessing thisstate calling method potentially return existing value guarantee synchronous operation calls setstate calls may batched performance gains logging state immediately calling likely give previous state since nt actually updated yet want perform side effect something state updated provide callback js thissetstate newstate gt callback called state updated however result render function find state updated class object thisstate saying contain updated state called", "d": "10/2016"}, {"body": "aweary correct read docs setstate saw state guaranteed updated right away saw state updated new state within function program thought strange behavior something wrong also said however result render function find state updated class object thisstate specific first render give output unexpected called showing stxchart state second render contain new chart object empty object initialized expected updated time inconsistency made question verbose output javascript class chartcontents extends reactcomponent constructor super thisstate stxx componentdidmount let stxxnew stxchart thischartcontainer stxxnewchart spy sampledata thissetstate stxx render const style height position relative width red arrows show inconsistent green arrow shows state match inconsistency concerned trying understand something wrong expected behavior", "d": "10/2016"}, {"body": "avakathrynshaw log chrome creating copy object actually reads data object expand console hence expand object console case seeing value value logged", "d": "10/2016"}, {"body": "syranide thank thought look browser worked well new react assumed something wrong close issue", "d": "10/2016"}, {"body": "hey totally agree get updated bunch folks working react docs week newdocs branch format little bit different take", "d": "10/2016"}, {"body": "ok newdocs branch", "d": "10/2016"}, {"body": "added visibility let track would like write", "d": "10/2016"}, {"body": "take stab sure", "d": "10/2016"}, {"body": "cc zpao", "d": "10/2016"}, {"body": "thanks catching need add packagejson field", "d": "10/2016"}, {"body": "closed tada", "d": "10/2016"}, {"body": "versions react addon match deleting nodemodules running npm install nt get extra copy react npm leave top level react module tree case", "d": "10/2016"}, {"body": "gaearon yes case using webpack bundle component leave react external bundle part lib file using component angular project load react separately react nodemodules folder problem however guessing comes fact requires specific reactlib file gets bundled separately loading react library separately requirement part ngreact library two versions react atleast two versions function noticed hope making sense trying create fiddle see communicate clear way", "d": "10/2016"}, {"body": "tl dr gaearon issue amp solution seemed work longer version issue issue seemed using internal apis react somebody using writing custom library define react external essentially two copies react one external reference react causes issue using custom library external react solution declare external dependencies custom library use external react source", "d": "10/2016"}, {"body": "yeah nt good story around umd bundles referencing addons right plan decouple addons completely perhaps hand community nt actively maintain anyway", "d": "10/2016"}, {"body": "ajainarayanan problem adding external dependencies nt helped confused referencing probably overlooking something small help would appreciated", "d": "10/2016"}, {"body": "grahamvo reactjs comes react alone reactwithaddonsjs packages react along necessary addons packaging reactaddonscsstransitiongroup external dependency library want use reactwithaddonsjs project using library hope helps", "d": "10/2016"}, {"body": "hi unfortunately nt look like issue related react like something wrong build setup hard guess exactly snippets use bug tracker bugs react close issue need help would encourage create publish project reproducing issue link stackoverflow forums hopefully somebody take look way also offer officially supported build setup react apps problem file issue help", "d": "10/2016"}, {"body": "oh sure way calling dibs one", "d": "10/2016"}, {"body": "alright getting ready send pr lunch pizza", "d": "10/2016"}, {"body": "dotch thanks report able reproduce outside react looks like issue safari js var container documentgetelementbyid container var root documentcreateelement root var documentcreateelement input var documentcreateelement input var svg documentcreateelementns svg var use documentcreateelementns use usesetattributens href icon svgappendchild use rootappendchild rootappendchild svg rootappendchild containerappendchild root verify issue still occurs submitted bug report apple", "d": "10/2016"}, {"body": "hi aweary thanks investigating link us bug report keep track", "d": "10/2016"}, {"body": "danburzo submitted report feedback form bug report category nt let track report nt personally developer account apple nt access might worth reporting anyone wants", "d": "10/2016"}, {"body": "reported bug nt think share url please find screenshot report like", "d": "10/2016"}, {"body": "thanks much sarbbottam", "d": "10/2016"}, {"body": "fyi deprecated one use however issue exist updated bug report", "d": "10/2016"}, {"body": "think intention move towards fiber completely different api use classes today friends fiber reconciler intentionally written opaque targets mind decoupled day one exposed package mature pitfalls today caused shared state renderers like meantime work custom renderer think encouraged ship copy react reconciler least react native far know means affected breaking changes react repo master update renderer time complicates setting custom renderer need script keep reconciler fork sync react repo would cool somebody contributed rn renderers could use meant longterm solution neither current renderer architecture", "d": "10/2016"}, {"body": "yeah looking something maintain release cycle primarily knowing fiber change world sound like saying rather see hack community sync react reconciler code codebase something react native avoid repo rather expose something explicitly new build format released fiber becoming official stable", "d": "10/2016"}, {"body": "sound like saying rather see hack community sync react reconciler code codebase something react native avoid repo react native nt plan avoid opposite open diff react native ship copy reconciler manually synced like described lets rn team experiment changing renderer code sync pace exposing renderer package pitfalls significant one unintentionally shared state different renderers like", "d": "10/2016"}, {"body": "link open diff chance find browsing", "d": "10/2016"}, {"body": "nt think submitted pr likely internal diff yungsters updates getting merged", "d": "10/2016"}, {"body": "close plans take extra steps support custom renderers stack reconciler changing everything fiber fiber firstclass custom renderer support", "d": "10/2016"}, {"body": "would like submit pr doc page", "d": "10/2016"}, {"body": "sure", "d": "10/2016"}, {"body": "might lead security issues potentially malicious thirdparty scripts selfxss treat data keep client javascript memory secure thirdparty script kinds things including overriding react global use one pretending react devtools overriding native object behavior react offers guarantees internal structures exposed third party code fact impossible perhaps extremely hard offer guarantee react example methods could altered order react leak internal data would use javascript runtime functions need protect data load javascript", "d": "10/2016"}, {"body": "using would work fixing issue course security guaranteed would preferable expose data directly instead keep closure imo", "d": "10/2016"}, {"body": "since offer guarantee eg devtools needs hook information anyway see point adding halfmeasures patch places better opinion guarantee something accept patch fixes one hundreds places might rely something like especially considering test suite guarding future changes might expose information", "d": "10/2016"}, {"body": "reason class vs classname valid properties web components warnings intended fixed case might impossible fix since already correct think solved custom components validate props", "d": "10/2016"}, {"body": "either scale say level although sure debug level update documentation personally big fan web components although evidently biased think developers run issue", "d": "10/2016"}, {"body": "mentioned documentation agree ideal adding warning would defeat purpose allowing", "d": "10/2016"}, {"body": "johnius nt show example hard evaluate solution looks like hack dom operations like focus valid without", "d": "10/2016"}, {"body": "think important came", "d": "10/2016"}, {"body": "ok react team working overhauling docs amp plan finish docathan october newdocs branch way get want via notsuperdisruptive changes like css feel free send pull request branch rather someone react team take look vjeux claims gon na hard think get next couple weeks", "d": "10/2016"}, {"body": "changes mostly css definitely superdisruptive send pr later tomorrow", "d": "10/2016"}, {"body": "lacker pr look", "d": "10/2016"}, {"body": "done thanks much", "d": "10/2016"}, {"body": "looks like bug sure high priority since concentrating fiber would great could turn failing test case", "d": "10/2016"}, {"body": "close since nt provide jsfiddle issue template explicitly asked thank time happy reopen provide fiddle demonstrating problem", "d": "10/2016"}, {"body": "indicates introduced change nt problematic seem triggered script engine bug sort resulting crash found small refactor fixes issue entirely sure", "d": "10/2016"}, {"body": "submitted pull request changes let know think", "d": "10/2016"}, {"body": "thank pr merged appear soon website working new docs another pr decided scrap tutorial completely nevertheless helpful meantime", "d": "10/2016"}, {"body": "oh great help new tutorial way love contribute documentation sometimes hard keep documentation sync code changes", "d": "10/2016"}, {"body": "lockdown rewrite messy state bit hard take outside contributions shakes however right merged sure plenty work possible around fixingamending things screwed think merged would helpful could keep eye new prs branch could comment example still work progress thoughts love hear", "d": "10/2016"}, {"body": "love help however", "d": "10/2016"}, {"body": "published installation use snapshot testing please report issues big change internals organized continuing split react reactdom internally release bunch internal modules moved never part public api valid minor version published rc chance assess whether libraries depend use private apis raise issues maintainers stable package depends react internal apis consider copying relevant code project react makes guarantees imports folders ever supported may technically break patch version even though taking extra steps make smooth quick fix replace likely work many modules might get removed renamed react please nt use internal modules react found issue popular reactrelated library breaks please post keep track", "d": "10/2016"}, {"body": "getting", "d": "10/2016"}, {"body": "faalsh nt mean install rc please run published latest mistake nt meant installed automatically trying rc purpose please look library tries import likely code file issue library", "d": "10/2016"}, {"body": "gaearon trying rc purpose thanks tip error caused reacthotloader", "d": "10/2016"}, {"body": "rhl one relying internal module unsupported year please migrate like keep using instructions linked first paragraph readme", "d": "10/2016"}, {"body": "hi gaearon currently react reactdom reacttestrenderer jest snapshot testing materialui components reacttestrenderer get following error repro needed insights thanks", "d": "10/2016"}, {"body": "thisbejim regression though ever work aweary look please intuition support mock dom refs moment", "d": "10/2016"}, {"body": "gaearon yupp support never implemented error technically new since would get error tests chance even call technically regression since never worked look would take implementing support", "d": "10/2016"}, {"body": "gaearon yeah bad looking issues wrongly assumed something planned fixed release thank taking look aweary appreciate time effort meantime workarounds cheers", "d": "10/2016"}, {"body": "thisbejim would interested fixing", "d": "10/2016"}, {"body": "gaearon work done towards nt chance finish last week said want work thisbejim feel free", "d": "10/2016"}, {"body": "also came report prevents usual usecase thisonfocus thisrefsvalueinputselect refs available yet using workaround", "d": "10/2016"}, {"body": "lezuse use simpler workaround fyi", "d": "10/2016"}, {"body": "syranide ha true thanks", "d": "10/2016"}, {"body": "removed outdated content docs deemphasized legacy practices added cautionary notes around versioning docs would great tangential issue", "d": "10/2016"}, {"body": "tutorial gone", "d": "10/2016"}, {"body": "better new docs please comment missing add", "d": "10/2016"}, {"body": "okay bad part word long write", "d": "10/2016"}, {"body": "intentionally long use sparingly easy search giant codebases safely replace automatically etc", "d": "10/2016"}, {"body": "rest mean http", "d": "10/2016"}, {"body": "close intentional design decision also documented discussed lifecycles likely change something declarative fiber shipped however whether something prefix nt affect whether api declarative thank concerns", "d": "10/2016"}, {"body": "seems closed", "d": "10/2016"}, {"body": "yep", "d": "10/2016"}, {"body": "could solution server provide initial state client side javascript use initial render common pattern serverclient react applications want client pick state server knows example could load user value object script tag server load component via props set initial state", "d": "10/2016"}, {"body": "problem initial state picking user input user entered html downloaded react initializing clientside initialize textbox empty user types something textbox react initializes clientside input wiped", "d": "10/2016"}, {"body": "gaearon recommend workaround prior release react case instance component uses ref one tested mocking entire component via meaningful approach", "d": "10/2016"}, {"body": "workaround prior release workaround added release try", "d": "10/2016"}, {"body": "fair enough checkout release candidate make sure everything working sit tight released also occurs could refactor component imperative interactions associated pulled separate component mocked", "d": "10/2016"}, {"body": "hi start want say great work aweary clap testing components stumbled fishy behavior basic everything works first render components rendered refs callbacks update add new components ref callbacks got error dummy example js const b reactcreateclass onrefel ref consolelog ref el ref renderel return onref ref consolelog ref b ref render return renderel const reactcreateclass render return function createnodemock element consolelog yee createnodemock called return ref object dummy test gt const component renderercreate createnodemock let tree componenttojson consolelog render tree componentupdate consolelog render tree typeerror optionscreatenodemock function tree componenttojson expect tree tomatchsnapshot imho correct behavior digging would say change allow pass maybe something like test pass options nt js dummy test gt const component renderercreate createnodemock let tree componenttojson consolelog render tree componentupdate createnodemock consolelog render tree typeerror tree componenttojson expect tree tomatchsnapshot get complicated want simulate async update setstate also missing options dummy look like js b component const reactcreateclass getinitialstate return array componentdidmount settimeout gt try thissetstate array catch error typeerror optionscreatenodemock function consolelog error render consolelog render return createnodemock dummy test done gt const component renderercreate createnodemock let tree componenttojson consolelog render tree settimeout gt consolelog render tree tree componenttojson expect tree tomatchsnapshot done part basic understating sets stored hard see quick dig code dancer maybe goo place start making sense think guys one time awesome work clap aweary gaearon", "d": "10/2016"}, {"body": "let reopen nt lose track", "d": "10/2016"}, {"body": "piecyk thanks details report look today see done", "d": "10/2016"}, {"body": "generally agree componentdidmount react lifecycle like getdefaultprops getiniitialstate componentwillmount render componentdidmount set state componentdidmount rerender component render called twice", "d": "10/2016"}, {"body": "guess moving set update order another workaround put property nt trust smile", "d": "10/2016"}, {"body": "way get ref component whose instance created component actually trying call function connected component use case wrapper calls method component component returns height going predetermined based logic need actual dom calculations", "d": "10/2016"}, {"body": "since merged closing thanks", "d": "10/2016"}, {"body": "likely wo nt focusing fiber nt even methods thanks suggestion though", "d": "10/2016"}, {"body": "like argue favor zemlanin use case purpose private property identifier collide another feels like much appropriate solution sort problem compared think useful simplifying guideline would react prop keys like object prop keys rather keys strings part exactly object keys dealing jsx use spread operator way objects slippery slope towards supporting manner exotic types prop keys object keys valid key types simply end list react tried stick close terms style far would nice continue along lines treating symbols way ie collisionproof private key identifiers use frameworks extension mechanisms never iterated usually copied eg turn perhaps terms jsx syntax implications nt see anything special would need done props always strings would nt able use symbols would either part spread object future allow prop name expressions using square bracket syntax eg would course also cover symbol prop names incidental random prop names long namespaced names like good enough solutions symbol seems like cleaner fit much like like move plain classes", "d": "10/2016"}, {"body": "think annotation removed apparently closurecompilerspeific currently serves purpose break minification", "d": "10/2016"}, {"body": "see also", "d": "10/2016"}, {"body": "please send pr removing gcc annotations think gcc support intended point broken ages", "d": "10/2016"}, {"body": "appreciate someone else could create pr nt want sign cla", "d": "10/2016"}, {"body": "probably", "d": "10/2016"}, {"body": "still failing react well closure compiler", "d": "10/2016"}, {"body": "since nobody worked issue advance like contribute please feel free", "d": "10/2016"}, {"body": "gaearon working removing gcc anotations plan create pr tomottow day", "d": "10/2016"}, {"body": "thanks shastel", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "docs gone let track separate manipulating children guide would like work", "d": "10/2016"}, {"body": "please turn failing test case", "d": "10/2016"}, {"body": "experimental proposal mentioned docs kevinsuttle nt solve issue us rebinds every render", "d": "10/2016"}, {"body": "gaearon great nice work docs dan", "d": "10/2016"}, {"body": "looks like fixed think work least says sure specifically set conditional wo nt attach click listeners buttons made version uses divs works though clear stepping code looks like might exception nt getting raised edit sorry interpreted compare wrong github reverse order", "d": "10/2016"}, {"body": "updated comment interpreted history wrong comparison feature think one might resolved", "d": "10/2016"}, {"body": "let track", "d": "10/2016"}, {"body": "issue closed original test case still produces warning using jsfiddle via", "d": "10/2016"}, {"body": "issue gets closed bug fixed master looking issue history see got closed open pr look milestone says means stable version issue fixed meantime already use", "d": "10/2016"}, {"body": "ah missed sorry thanks clarification", "d": "10/2016"}, {"body": "worries hopefully get within week two rc perfectly usable", "d": "10/2016"}, {"body": "dropped section completely new docs", "d": "10/2016"}, {"body": "gaearon look like issues last comment fixed plan release help us lot thanks time", "d": "10/2016"}, {"body": "rande open ticket next release rc soon based", "d": "10/2016"}, {"body": "try fix", "d": "10/2016"}, {"body": "gaearon thanks jest tests green good news hot reload component seem work anymore found check documentation", "d": "10/2016"}, {"body": "hot reload component seem work anymore react hot loader deprecated unsupported year", "d": "10/2016"}, {"body": "raphaguasta according code main difference purecomponent statelesscomponent statelesscomponent shouldupdate value always true purecomponent shouldupdate value equal result shallow equality check case shouldupdate value false purecomponent true statelesscomponent think cheaper make shallow equality check making virtual dom comparison may wrong", "d": "10/2016"}, {"body": "docs", "d": "10/2016"}, {"body": "fwiw even adding props allowed object stop warnings nt help issue appears react sets props element mounted results props present electron reads hacky workaround made would much prefer see way force react components attributesto set mount time rather slightly later", "d": "10/2016"}, {"body": "fwiw already implemented fiber wo nt bringing old reconciler", "d": "10/2016"}, {"body": "gaearon ran state searched found thread case error result copypaste transposition passing container state nested components prop works better nt paste leave like case error tricky track appeared error leading assume result timer error cause structure threw basically container initial state containing stateless child component passes prop child container grandchild child component middle layer completely stateless nt call getinitialstate thisstate undefined everything seems working intended except error order per attached screenshot huge deal definitely made debugging harder", "d": "10/2016"}, {"body": "mentioned warning nt show since react please update react", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "dantman creating third party renderers never advertised public api want safe changes reactdom best course action completely fork rather substitute modules nt guarantee wo nt break third party renderers future especially given new reconciler implemented completely different way", "d": "10/2016"}, {"body": "error almost always chore finding component referring help error message better identify component maybe help display everything known element props location element component hierarchy perhaps parent warning reactcreateelement undefined invalid value type string dom elements reactclass composite components something like feasible desirable", "d": "10/2016"}, {"body": "gravitypersists needs explicitly say undefined rather obscure error called", "d": "10/2016"}, {"body": "problem react nwjs environment", "d": "10/2016"}, {"body": "way find faq means link ca nt find navigation path ca nt search within codefacebookcom ca nt google ca nt google web sites linking", "d": "10/2016"}, {"body": "regard catsushi lt notifications githubcom neither hold hard copy acknowledgement duly registered apply pull requests approval face book registration example upcoming evostar event way find faq means link ca nt find navigation path ca nt search within codefacebookcom ca nt google ca nt google web sites linking receiving subscribed thread reply email directly view github mute thread catsushi notifications githubcom sent saturday october facebookreact subject facebookreact license clarification way find faq means link ca nt find navigation path ca nt search within codefacebookcom ca nt google ca nt google web sites linking receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "love see clear response adeelzaman question facebook infringe vr patent microsoft microsoft initiate legal action license react would revoked would stop using", "d": "10/2016"}, {"body": "catsushi luckily google caught searching facebook license faq brings page first result hanvyj gaearon said able provide clarifications right sorry even give interpretation license text actually binding court could disagree questions talk skilled lawyer interpret license text", "d": "10/2016"}, {"body": "spicyj thanks legal shame company work way patent troll main business engineering reasonably confident lawyers going err side caution potentially exposing companies ip tell keep well away simply due ambiguity clear risk pure software companies probably nt find much issue state software patents try somewhat optimistic mention google microsoft apple use react hopes approval", "d": "10/2016"}, {"body": "spicyj want hear facebook lawyers answer real intention facebook modification license", "d": "10/2016"}, {"body": "intention facebook matter written license matters sorry able give clarification", "d": "10/2016"}, {"body": "obviously issue interpretation facebook issue language andor purpose", "d": "10/2016"}, {"body": "may want use faq allay basic fears people lawyers example similar catsushi questions consequences termination additional patent grant allowed use react anymore", "d": "10/2016"}, {"body": "faq says things certain without legal precedent ultimately interpreting license always court something claim certainty took us quite work legal team get faq published please believe contains clarifications legally technically provide thanks", "d": "10/2016"}, {"body": "fat finger nt meant reopen", "d": "10/2016"}, {"body": "basically court matter users behave intention language facebook might want ask court judge effect binding force underlying lows hand language newly designed facebook time language might changed point free intention facebook know general licensers put almost regulation freely first matter intention facebook second might also matter ambiguous wording language contrast surely must matter interpretation third person least point think designer language lawyer supported appropriate person answer issue", "d": "10/2016"}, {"body": "catsushi replying rauschma comment possibly answer questions asked reasons explained patent grant intentional large companies want use react without explicit patent grant defensive clause also intentional facebook needs protect companies buy patent portfolios sue facebook feedback company uncertain using react feel free send thoughts james pearce touch legal team continuing asking questions issue spend lot time effort clarifying common misconceptions unproductive keep repeating points lock issue", "d": "10/2016"}, {"body": "gaearon really read comments yes unproductive nt think anybody facebook answered questions others unfortunately message got facebook facebook ca nt clarify incomprehensible reasons would contact james pearce colleague chance want use react significant products", "d": "10/2016"}, {"body": "closing documented context page wo nt documented pages part stable api", "d": "10/2016"}, {"body": "unlikely support something like close future best bet maintain fork system something similar facebook module forked happy revisit year right issue priority us", "d": "10/2016"}, {"body": "likely wo nt property initializers get language property rather use constructor problem nt think useful anyway constructor likely revisit lifecycles shipping fiber keep mind designing new ones", "d": "10/2016"}, {"body": "still experiencing running mocha execute tests", "d": "10/2016"}, {"body": "please file issue test case reproducing afraid ca nt help otherwise also run make sure", "d": "10/2016"}, {"body": "updated lifecycle docs order schema looks cool sure want add fiber make order much less deterministic close thanks suggestion", "d": "10/2016"}, {"body": "taints anymore", "d": "10/2016"}, {"body": "language makes sense thanks", "d": "10/2016"}, {"body": "closing seems like react got inconsistent state due user error still good least possible fix apps", "d": "10/2016"}, {"body": "update issue reactmode would useful toggle specific debug levels", "d": "10/2016"}, {"body": "update would issue", "d": "10/2016"}, {"body": "facing issue dont style tag code external css uses pseudo class therefore coming dom nodes invariant violation thrown solve", "d": "10/2016"}, {"body": "similar problem loading twitter button mutates dom throwing error deal kind issues third party libraries", "d": "10/2016"}, {"body": "gaearon error checked dont duplicated react besides made test require reactcsstransitiongroup error dont shows use component reactcsstransitiongroup inside component error throwed addcomponentasrefto thanks edit using almost example", "d": "10/2016"}, {"body": "possible would bug joke apart waiting react", "d": "10/2016"}, {"body": "removed starter kit altogether also using cdn anymore closing", "d": "10/2016"}, {"body": "getting error ideas narrow stack", "d": "10/2016"}, {"body": "brigand mostly indication dom modified outside react control parent null replacing child tries call replacechild null start looking", "d": "10/2016"}, {"body": "problem code undefined warning reactcreateelement getting undefined type reason development build unable reproduce jsfiddle", "d": "10/2016"}, {"body": "still active give try", "d": "10/2016"}, {"body": "wallacyyy open pr", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "aweary know asked last interaction months ago maybe pr could active anymore thx reply", "d": "10/2016"}, {"body": "spudly could render htmlwithoutprops server bootstrap step cache datareactchecksum subsequent renders thus avoiding double rendering point concerning indeed chance share prototype interesting nt seem much topic content static really slowly changing seems wasteful sending payloads twice initial load obviously legacy cms use cases already mentioned also case headless cms ability create application top without compromising initial load performance also think could case allowing optin checksum asynchronous would reduce bandwidth real time application likely rendering data server sending initial state receiving connecting websocket lot effort goes server side rendering applications optimising code crucial critical rendering path shouldcomponentupdate called initial render one could cancel delay rendering right obviously would potentially break lot code component lifecycle sounds like right place still bit new react though apologies missing something", "d": "10/2016"}, {"body": "personally understand problem double loading underestimated video facebook team tries implement new engine enhance rendering page say ms ms looks like team spends time attempt speed cheetah two gigantic hippos behind everybody wait hippos developers spend time create fix hack spend clients time wait loading duplicated data example need one customers create big static page two dynamic elements ui simple great build reusable react components also need make json request server texts images loading workaround content ui unique mostly static react page rendered server side sent client time react clientjs contains copy huge data common scenario really important problem someone please specify exact issues reactjs team facesforesees attempt resolve problem proposal clientjs source code initially rendered server way possible mark static blocks never change react restore points virtual dom whatever dom first rendering even stateful components dynamic properties still possible client side restore component would first place truth even whole dom page removed clientjs hold full source code later might possible write algorithm automatically understand part static without manual marking server model server manager knows rendered html looking rules game server eliminate parts clientjs complex scenarios server knows blocks eliminate marked blocks could rendered dom done example clientjs script dynamically created server request probably made fast enough versioning caching enhancements react amazing library really hope see even initialpartial solution good suggestions ps rename create new issue proper name doubled data real problem component mounting", "d": "10/2016"}, {"body": "added", "d": "10/2016"}, {"body": "someone working take stab", "d": "10/2016"}, {"body": "madhug definitely take imagine single guide combines use cloneelement reactchildren helpers", "d": "10/2016"}, {"body": "cool thanks start working weekend", "d": "10/2016"}, {"body": "update expect fix released", "d": "10/2016"}, {"body": "stopgap hiding clear input x", "d": "10/2016"}, {"body": "gaearon component prop time prop would regard uncontrolled component think explicitly declared examples form docs example write note situation would missunderstands react beginers", "d": "10/2016"}, {"body": "seems like unsupported pattern trying render something container already contains another component whose lifecycles currently executed want appear include render output", "d": "10/2016"}, {"body": "seeing well toonvanacker", "d": "10/2016"}, {"body": "yup think issue needs reopened jimfb easily reproduce windows maybe add test something thing still keeping", "d": "10/2016"}, {"body": "able reproduce using latest release reopen since still issue", "d": "10/2016"}, {"body": "able reproduce issue outside react see issue calling settextcontent node setting overwrite placeholder focusedblurred restore placeholder text case browsers tested look", "d": "10/2016"}, {"body": "recommendations new lifecycle docs took lot effort get new docs together nt expect us spend effort soon therefore issue like much likely addressed case case basis reviewing prs rather planning", "d": "10/2016"}, {"body": "think done", "d": "10/2016"}, {"body": "uglify things minify code webpack config development mode warning showed remove new webpackoptimizeuglifyjsplugin mangle false compress warnings false webpack development config get rid warning", "d": "10/2016"}, {"body": "think object approach options makes sense since options might needed combined sebmarkbage suggestion events passive default probably would nt cumbersome another approach comes mind would attach properties event handler allow opt passive mode toggle options something like jsx class foo extends reactcomponent constructor thishandlescroll thishandlescrollbind thishandlescrollpassive false handlescroll render return theory would work pretty nicely decorators land", "d": "10/2016"}, {"body": "thinking little think would better add event options property function instead individual options would allow react worry one property instead potentially many adjust example jsx class foo extends reactcomponent constructor thishandlescroll thishandlescrollbind thishandlescrolloptions passive false handlescroll render return another thought occurred might look like modified jsx syntax way allowed options passed via jsx random example nt put much thought also thinking whether events passive default bit fence one hand would certainly nice events like scroll handlers worry would cause much turbulence unexpected behavior many click handlers could make events passive default others would probably end confusing folks probably good idea", "d": "10/2016"}, {"body": "way pretty similar proposed earlier without modifying jsx syntax documentation would straightforward", "d": "10/2016"}, {"body": "react events passive default seems way touch events least able unless fall back vanilla documentlevel event listeners", "d": "10/2016"}, {"body": "joshjg react handlers passed synthetic events sort like native events different way someone knowledge correct say nt actually read code super familiar implementation details know works least long handlers preventing also react event handlers experience anyway likely luck eg click listener ca nt bound react want avoid bubbling click inside certain element case use mdn got slightly main topic short answer react nt use passive events sometimes handled strange order", "d": "10/2016"}, {"body": "ability tags inside react component respec css custom properties would ideal shadow dom spec currently handles polymer support would also solve issues missing pseudoclasses js varying syntax casing css js looked issues seen bunch related issues latest web components spec since updated ends coming", "d": "10/2016"}, {"body": "perhaps sanitation via tagged template strings could work parsing styles bit elegant say xml cdata escapes", "d": "10/2016"}, {"body": "detailed implementation notes detail somewhat simplified way stack reconciler works believe together contribute codebase overview design decisions covers ground likely wo nt time cover give somebody motivated enough information contribute eg glossary", "d": "10/2016"}, {"body": "update exact symptoms firefox input field focused resizing page triggers update states rerender", "d": "10/2016"}, {"body": "also reproduce would like dive figure happens", "d": "10/2016"}, {"body": "nt seem like common confusion sure worth making language complex docs say second parameter optional callback function executed completed component rerendered generally recommend using logic instead follow tip using instead would nt problem still see elegant way phrase without making sentence complicated please feel free send pr thanks", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "react way knowing intended render component empty value intended component uncontrolled source bugs see point might source bugs kind disagree first part value property part props object therefor use objectkeys figure key intentionally added props object nt key exist explicitely set property even value undefined going approach would controlled component would uncontrolled", "d": "10/2016"}, {"body": "found problem code like warning resourcelist changing uncontrolled input type checkbox controlled input elements switch uncontrolled controlled vice versa decide using controlled uncontrolled input element lifetime component info", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "closing favor umbrella issue", "d": "10/2016"}, {"body": "related fiber codebase different left fiber fiber ready yet", "d": "10/2016"}, {"body": "exciting see progress awesome chart tests passing unofficial may also helpful interested passerby curious fiber", "d": "10/2016"}, {"body": "looks like issue incorrect build setup rather something fix future separate addons completely wo nt issue", "d": "10/2016"}, {"body": "line numbers enable transform development already included default create react app", "d": "10/2016"}, {"body": "dylanpiercey attribute anyway information internet", "d": "10/2016"}, {"body": "halthammerzeit attribute partially removed basically used link dom react elements used link react using server side rendering", "d": "10/2016"}, {"body": "dylanpiercey well understand could used client article seems kinda explain nt see reason exist server client gets markup server without renders stuff client without compares two strings throws warning nt match including short uninformative piece diff like needed needed extract compare string", "d": "10/2016"}, {"body": "halthammerzeit plenty virtual doms nt need id attributes bootstrap existing dom definitely required unfortunately nt think react puts much effort ssr though according gaearon seem works leave attitude", "d": "10/2016"}, {"body": "dylanpiercey yeah guess facebook isolated ecosystem rather part internet nt need web documents concept thinking react server side rendering terms caching came conclusion would require rewrite current package drop favour assembling react page different totally independent pieces raw html markup like cache block also cache block assemble mix react elements pieces raw html markup currently react nt provide possibilty render whole thing one time guarding guess someone eventually develop mixed caching solution probably could big company hits performance issues rendering react serverside gon na stick strategy render seospecific blocks server side render variable blocks user bar comments etc client side way react wo nt complain attempted reuse warning pages safely cached server side raw html strings cache invalidated data changes supposed infrequent", "d": "10/2016"}, {"body": "currently react nt provide possibilty render whole thing one time guarding datareactids datareactchecksums guess someone eventually develop mixed caching solution probably could big company hits performance issues rendering react serverside might want check caching ssr", "d": "10/2016"}, {"body": "aweary thanks looks like way go future even though particular project seems abandoned nt support react", "d": "10/2016"}, {"body": "whoops nt notice issue created since becoming urgent deleted old localized content let track visible issue", "d": "10/2016"}, {"body": "know since closed running null owner issue breaking application already verified nt two reacts loaded via checking output checking chrome sources per gaearon blog post modifying react one components checking modification maintained react variable used new component trying use draftjsplugins verified one react application also gone entire component tree refactored things components one rendering created parent method still getting bug finding stackoverflow check owner property verified null component rendering going tree except components direct children data loading hocs createcontainer reactmeteordata classes defined using syntax sure would influence things seemed odd always null internal thing sure supposed behave tips still running invariantviolation even verifying listed reasons", "d": "10/2016"}, {"body": "please file issue minimal example reproduces", "d": "10/2016"}, {"body": "closing either works", "d": "10/2016"}, {"body": "hey jimfb fun running internet another bug fix function cause recent node versions particularly running tests new version node one changes node unhandled promise rejections result warning existing code vpontis separate calls base promise effectively creates two promises one handles success one handles errors means error first promise viewed node unhandled promise rejection fix pretty easy chain two calls makes one promise success error handler fixed code js const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promise val gt hascanceled reject iscanceled true resolve val catch error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true", "d": "10/2016"}, {"body": "closing wo nt changing", "d": "10/2016"}, {"body": "wo nt changing works please consider filing instead", "d": "10/2016"}, {"body": "closing docs use", "d": "10/2016"}, {"body": "closing old", "d": "10/2016"}, {"body": "jimfb zpao react svg issue still happening ie", "d": "10/2016"}, {"body": "react web components built solve different problems web components provide strong encapsulation reusable components react provides declarative library keeps dom sync data two goals complementary developer free use react web components use web components react", "d": "10/2016"}, {"body": "reactjs conf andrew rota wayfair complementarity react web components", "d": "10/2016"}, {"body": "wo nt also wrote alternatives inheritance", "d": "10/2016"}, {"body": "kill factories", "d": "10/2016"}, {"body": "bit late party also problems trying something similar hatched said created checkbox component want test checkbox something similar less details stripped simplicity render return onchange event gt thispropsonchange eventcurrenttargetchecked writing unit tests test behaviour find way test following checkbox defaultcheckedfalse checked execute simulated change event ckeckbox checked checkbox checkedfalse checked execute simulated change event onchange callback passed props called argument true problem simulatechange element nt actually modify checked state checkbox scenario testable simulatechange element currenttarget checked true nt work test scenario possible pass property currenttarget people mentioned thread note checkbox would listening target instead currenttarget simulatechange element target checked true would actually work however nt currenttarget", "d": "10/2016"}, {"body": "correct simulatechange change state inputs merely triggers event listeners react relies browser change input follow link case click etc anything avenue would reimplementing behavior incompatible way suggestion mutate actual dom node call simulatechange event handler run properly", "d": "10/2016"}, {"body": "thank explanation makes lot sense unfortunately actually using enzyme far know underlying uses testutils simulate write tests far know nt allow mutate actual dom node even simulate nt really change dom state inputs still allows pass custom data eventtarget object simulatechange node target value whatever would nt possible allow simulate currenttarget least would allow least test event handlers since impossible scenario ps using currenttarget instead target event handlers mainly using typescript know interested events html input compile time check eventcurrenttargetvalue typesafe manner since target definition dynamic known compiletime", "d": "10/2016"}, {"body": "closing since bug different documented behavior web components use", "d": "10/2016"}, {"body": "might related make breaking change switch properties would become classname", "d": "10/2016"}, {"body": "gone", "d": "10/2016"}, {"body": "andreypopp side question example using static class option makes sense method ie jsx class extends reactcomponent static childcontexttypes name reactproptypesstring static getchildcontext return name jonas render return", "d": "10/2016"}, {"body": "oliviertassinari needs prototype method nonstatic also use state props", "d": "10/2016"}, {"body": "brigand right nt work thanks issues rule eslint", "d": "10/2016"}, {"body": "closing aware compelling reason allow see good reason please send pr let discuss", "d": "10/2016"}, {"body": "confirm using keyword resolved issue chance progress issue looks ugly team totally mess le tests get written", "d": "10/2016"}, {"body": "sebmarkbage sort spurred wanting custom events prior work stripping attribute whitelist support custom attributes took stab pred hesitant submit pr another pr think happy lot event name munging already happening able lower move central location lean existing suggested feel like right track", "d": "10/2016"}, {"body": "let continue discussion", "d": "10/2016"}, {"body": "npm test clonewithprops", "d": "10/2016"}, {"body": "thanks xd notifications githubcom npm test clonewithprops receiving authored thread reply email directly view github mute thread \u6b63\u4e2d\u8d75 image \u6b63\u4e2d\u8d75 aboutme", "d": "10/2016"}, {"body": "changing internals longer relevant", "d": "10/2016"}, {"body": "closing yet officially supported document api", "d": "10/2016"}, {"body": "closing longer relevant", "d": "10/2016"}, {"body": "ok found promises anywhere project completely overhauled webpack configuration also webpack dev server configuration everything including errors showed expected still really sure issue obviously somewhere webpack configs", "d": "10/2016"}, {"body": "closing common issue caused wrong usage comes often feel free send pr adds better warnings", "d": "10/2016"}, {"body": "solved", "d": "10/2016"}, {"body": "another usecase popout video eg sits specific place dom activated moves root element becomes movement nt impact playback generated keys idea gist would work think would kind attribute", "d": "10/2016"}, {"body": "jakearchibald pretty sure affect playback iframes reload audio stops much hint going move", "d": "10/2016"}, {"body": "syranide talking moving video causes pause reload", "d": "10/2016"}, {"body": "tricky solution chrome call handlechange fired js handlecomposition event gt check demo", "d": "10/2016"}, {"body": "chenxsan find solution detect compositionstart let variable equal true use variable set onchange see fire query", "d": "10/2016"}, {"body": "wo nt changing semantics", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "hmm svg makes little trickier ideally know whether svg container need handful stuff nt right may wait information retagging", "d": "10/2016"}, {"body": "romulof looks like trying reference instance variable static method ca nt way tell talking definition static things always live outside context instance", "d": "10/2016"}, {"body": "romulof common object oriented languages fat arrow syntax binds context defined maybe could try using", "d": "10/2016"}, {"body": "sbussard exactly question implemented static object maybe allowing function called constructor", "d": "10/2016"}, {"body": "intentionally outside class optimizing compiler could inline call site", "d": "10/2016"}, {"body": "thanks everyone tweaked rebased almost prs thread prs make due unaddressed mistakes outdated content planning remove old articles completely rewrite scratch sorry also plan review tomorrow separately thank much everyone helped updating docs coming days stay tuned", "d": "10/2016"}, {"body": "docs updated syntax", "d": "10/2016"}, {"body": "added error codes inspect full errors production", "d": "10/2016"}, {"body": "class components must extend", "d": "10/2016"}, {"body": "removed", "d": "10/2016"}, {"body": "dear facebook jsx developers goes ecmascript decided consensus process inside ecma international guys part discussion regarding inclusion jsx syntax partially acting like parallel standards body definition ecmascript either might kinda see next paragraph everybody starts different javascripts one incompatible cool selfcontradiction according current facebook jsx specification website archived jsx intended implemented engines browsers proposal incorporate jsx ecmascript spec intended used various preprocessors transpilers transform tokens standard ecmascript intended used exactly way file extension", "d": "10/2016"}, {"body": "basically think potential experimental extensions javascript new language flowtype another one experimental syntax extension nt need whole new language support could argue annotated extension nt make sense combine long list file extensions every new experimental version language designed coexist extensions existing language compatible way fact might maybe one day part call javascript fact differentiates java coffeescript none features new language unlike typescript subsetsuperset javascript really new language like c developers saying c extension c therefore ok c files c extension", "d": "10/2016"}, {"body": "maratbn committee facebook associate member ecma international involved ecmascript process process involves multistage process starts lots exploration user space various contributors champions aim propose concrete proposals see ecmascript take many years needs lot evidence worth inclusion early experiments jsx may well adopted standard like one point clear form though would semanticless syntax defined runtime semantics would field still evolving another plausible route would include macro system language still unclear features would require stage ready formal proposal yet say never similarly flow typescript types ready become formal proposal yet evolving within space extension long overloaded various extensions early proposals implemented babel flow types etc also whole thing nodejs potentially requiring file extension ecmascript multiple ambiguous parsing interpretations file", "d": "10/2016"}, {"body": "sebmarkbage jsx may well adopted standard like one point stage ready formal proposal yet say never get adopted means rightfully deserve extension present time typescript people also ecma international committees happy using separate extension", "d": "10/2016"}, {"body": "given issue resolved close april let keep beating dead horse instead focus efforts making cool stuff web react jsx instead react agnostic extension plenty tooling available since filed issue make extension choice purely aesthetics issue days use like babel use feel help team js something anyone still feel strongly enough want debate place js spec appropriate places discuss nt javascript repo react javascript place discussion", "d": "10/2016"}, {"body": "pomax given issue resolved close april let keep beating dead horse instead focus efforts making cool stuff web react jsx instead repo react javascript place discussion number newer discussions pull requests bug reports related issue referencing arguments made using base supporting arguments issue dead horse since react javascript closely related appropriate place discussion conducted long stays topic reactjavascript relationship stray pure javascript topics completely unrelated react purpose public forum facilitate open sharing opinions analysis exactly happening", "d": "10/2016"}, {"body": "closed issues right place discussions want use thread reference great nt keep adding comments issue resolved thoughts based still open issues refer comments directed", "d": "10/2016"}, {"body": "pomax closed issues right place discussions open public forums right place closed discussions", "d": "10/2016"}, {"body": "may keep discussing like sure discussion affect anything react including maintaining jsx compiler compiler behavior issue like change behavior babel recommend instead file issue realistically discussion change anything whole issue actionable react team cheers", "d": "10/2016"}, {"body": "gaearon ok dan good insight", "d": "10/2016"}, {"body": "issue outdated close", "d": "10/2016"}, {"body": "afaik already support startingstopping outside top level", "d": "10/2016"}, {"body": "closing nt appear actionable us", "d": "10/2016"}, {"body": "ran times ended bad", "d": "10/2016"}, {"body": "brigand need flag compare props within furthermore solution could easily broken may prevent rerendering", "d": "10/2016"}, {"body": "oh cool thanks", "d": "10/2016"}, {"body": "closing tree considered implementation detail", "d": "10/2016"}, {"body": "still something team interested anyone using point", "d": "10/2016"}, {"body": "making changes createclass", "d": "10/2016"}, {"body": "removed tutorial longer applicable", "d": "10/2016"}, {"body": "since implemented babel plugin give full stacktrace unknown prop warning enabled default create react app", "d": "10/2016"}, {"body": "closing wo nt changing", "d": "10/2016"}, {"body": "closing nt use jsdoc new code anyway", "d": "10/2016"}, {"body": "nt support anymore", "d": "10/2016"}, {"body": "looks fixed", "d": "10/2016"}, {"body": "use web components react pass attributes", "d": "10/2016"}, {"body": "fixed since", "d": "10/2016"}, {"body": "wo nt changing mixins work nt recommend using new code", "d": "10/2016"}, {"body": "zpao jimfb take longer valid seems still exist", "d": "10/2016"}, {"body": "running issue using recompose example error apparently swallowed try finally block cc acdlite", "d": "10/2016"}, {"body": "tryfinally block possibly swallow exceptions likely trycatch calling code catch react errors promise handler common mistake", "d": "10/2016"}, {"body": "gaearon right mistake", "d": "10/2016"}, {"body": "neither maintained recommended please either use shallow rendering instead mock components jest gives ability pass anything", "d": "10/2016"}, {"body": "closing still consensus ecosystem figure", "d": "10/2016"}, {"body": "closing wo nt", "d": "10/2016"}, {"body": "closing outdated", "d": "10/2016"}, {"body": "still weird documented track changes jsx repo", "d": "10/2016"}, {"body": "jimfb post confusing draftjs drops warning", "d": "10/2016"}, {"body": "updated link", "d": "10/2016"}, {"body": "hi get following error try use unstablehandleerror error typeerror null object evaluating thisrenderedcomponentunmountcomponent anonymous function compjs line", "d": "10/2016"}, {"body": "closing old", "d": "10/2016"}, {"body": "supporting anymore", "d": "10/2016"}, {"body": "nt support anymore", "d": "10/2016"}, {"body": "specifying object supported please use explicit keys", "d": "10/2016"}, {"body": "closing unlikely working", "d": "10/2016"}, {"body": "probably relevant use client", "d": "10/2016"}, {"body": "fiber", "d": "10/2016"}, {"body": "new reference lists lifecycles phase think close", "d": "10/2016"}, {"body": "coroutines fiber make possible implement flexible layout primitives without breaking encapsulation wo nt go proposal issue thanks", "d": "10/2016"}, {"body": "closing nonactionable repo", "d": "10/2016"}, {"body": "gaearon ha thanks bringing old memories", "d": "10/2016"}, {"body": "create app react however html format fixed wrap first level child elements navbar searchbar div page class", "d": "10/2016"}, {"body": "component returns list rows used table ca nt wrap additional html tag allowed standard know tbody might multiple rows returned multiple child components may need combined single tbody technique mentioned prinzhorn wrapping children html comment actually implemented anybody tried implement component renders html comment nt seem work", "d": "10/2016"}, {"body": "fyi rewrite working already supports fragments track progress", "d": "10/2016"}, {"body": "closing since actionable us", "d": "10/2016"}, {"body": "think supported new reactperf", "d": "10/2016"}, {"body": "might consider future let continue discussion", "d": "10/2016"}, {"body": "closing outdated discuss let", "d": "10/2016"}, {"body": "officially supported closing", "d": "10/2016"}, {"body": "closing nt seem actionable us", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "seems like resolved", "d": "10/2016"}, {"body": "gaearon would nt say solved mean unofficial typings definitelytyped imho workaround example hard control typings prereleases react definitelytyped", "d": "10/2016"}, {"body": "actionable team", "d": "10/2016"}, {"body": "guess need statement team interested including typescript definitions would accept definitions inside pr requirements", "d": "10/2016"}, {"body": "zpao elgerlambert u guys awsome strugglling long time untill find issue", "d": "10/2016"}, {"body": "progress ticket dealing issue", "d": "10/2016"}, {"body": "share jsfiddle reproducing issue use starting point", "d": "10/2016"}, {"body": "hi would like work bug spicyj jgebhardt anyone point right direction working bug", "d": "10/2016"}, {"body": "literally lost hour debugging given amount assistance react provides users something unexpected suggesting camelcase using hyphenated class names etc would expected something console would awesome nondogmatic support people something unnecessary least warning", "d": "10/2016"}, {"body": "issue well reason need important override inline style project transition state still css applied using classes one using css important tag originally override jqueryui css believe support tag would prevent use another css class trying transition away css classes modifying old css class longer important tag pain since used globally would break areas ui still using old jquery rendering", "d": "10/2016"}, {"body": "moment wrote library address use case brigandreactwithimportantstyle uses set style modifier", "d": "10/2016"}, {"body": "said searching even question react supports course turns case use case like others trying get component play along nicely third party stuff really hope gets added", "d": "10/2016"}, {"body": "wo nt make changes anymore", "d": "10/2016"}, {"body": "want pass property children component part props got warning console normal property change fix found html property change another key please forgive ignorance", "d": "10/2016"}, {"body": "fwiw discovered clean way follows", "d": "10/2016"}, {"body": "kolodny would nt really call clean making hoc would better approach hijacking refs make side effect", "d": "10/2016"}, {"body": "slightly better position testutils documentation enzyme also good reference docs something missing please send pr suggestions start discussion", "d": "10/2016"}, {"body": "mostly fixed new docs", "d": "10/2016"}, {"body": "closing old", "d": "10/2016"}, {"body": "closing old nt seem important nt even seem bug", "d": "10/2016"}, {"body": "longer term encouraging people use flow typescript instead gaearon guide explains use flow instead proptypes especially checkcatch unknown prop types per issue thanks", "d": "10/2016"}, {"body": "install flowbin initialize config use javascript flow import react react type props foo string bar type state baz number nullable string export default class mycomponent extends reactcomponent props props state state baz nullable null componentwillmount thissetstate baz bleh fails told baz would number state type true fails told baz nullable state type componentwillreceiveprops nextprops props thispropsbaz fails told foo bar props type nextpropsbaz fails reason const fails needs foo const b fails baz nt const c cool use nuclide see errors atom", "d": "10/2016"}, {"body": "similar issue type defaultvalue type dot first time tried type failed cursor go front type still type multiple dot field empty", "d": "10/2016"}, {"body": "update issue", "d": "10/2016"}, {"body": "would like throw lobby builtin solution rollyourown counter solution used years requires manual perrequest reset server side order make isomorphic apps work properly feels completely acceptable context writing full app bit confusing first time encounter issue becomes huge pain writing dom component library consider following consider want write component package npm encapsulates nicer api awful choices bottle counter live fact lib wo nt work isomorphic app unacceptable make endusers bring counter unique id provide every component props unnecessarily verbose places requirements composing library components additional reusable ones force enduser components specific fluxish lib get unique dom ids simple ui library worth one halfway decent option come still nt love create package includes component whose descendants receive counter function via could fairly elegant could install via npm convenience functions decorating components receive context la still think little bit absurd include outofthebox support something comes frequently dom", "d": "10/2016"}, {"body": "years issue closed obviously still demand solution discussion see reason issue reopened", "d": "10/2016"}, {"body": "microdata microdata microdata microdata microdata hopefully find issue look attributes microdata attributes wanted issue findable online searching spec commenting add searchability issue awh heck rdfa even though rdfa implemented react kind useful result searching would good oh mention microdata", "d": "10/2016"}, {"body": "hello added additional component head serverside resolve situation class head extends reactcomponent render let dangerousinnerhtml string thispropschildrenmap value gt typeof value string return reactdomserverrendertostaticmarkup value else return value use maybe perfect solution requires additional code please review say think thanks", "d": "10/2016"}, {"body": "use unmountcomponentatnode documentbodyinnerhtml fixed ie", "d": "10/2016"}, {"body": "keeping bunch old issues around nt help visibility putting umbrella item", "d": "10/2016"}, {"body": "closing bug alternatives proposed", "d": "10/2016"}, {"body": "closing outdated think still relevant please submit pull request new documentation thank", "d": "10/2016"}, {"body": "closing gcc advanced mode nt really supported react point might supported set tests around nt regressed time", "d": "10/2016"}, {"body": "create react app sorta", "d": "10/2016"}, {"body": "closing old still nice nobody look issue", "d": "10/2016"}, {"body": "closing still consensus many things ecosystem figure eventually", "d": "10/2016"}, {"body": "closed still problem onchange fire testing forced use", "d": "10/2016"}, {"body": "many examples new docs codepen links nt think examples repo valuable closing", "d": "10/2016"}, {"body": "spent sensible time research result end library permanently solved problem check please would good know impressions everything", "d": "10/2016"}, {"body": "right way respond outside world events leave react event system add native dom listener bad since require mental overhead work need think event listener receiving native event react synthetic event also simply possible computed eg also makes hard react events handlers interrupt dom handlers issue mentioned consider following example intuitive react listener stop propagation spoiler react also listens use js class examplecomponent extends reactcomponent render return documentaddeventlistener keydown gt alert still fire reactdomrender documentgetelementbyid react example want deal outside events simple drawing tool must listen stop drawing process otherwise ui would feel broken right without leaving react event system could listen mosueup event root component pass callback child responsible drawing ca nt listen events outside component even outside browser although react event hub would capture listening lot solution ideas tied dom specific features like nt think way react would like go think make approach abstract think new public api something like behave like regular dom node callbacks receive created every root react component accessible inside components calling something like trivial migrate people currently relying dom event systems eg edit api could made declarative well eg eventroot get involved triggering twophase dispatch respects order well everything expect listening stopping propagation isolated specific react instance gt two react trees listen ca nt interfere api help abstract fact react listen people nt need rely fact anymore example replace new event root correctly applied love hear think could help shape future react event system", "d": "10/2016"}, {"body": "would like throw support issue couple usecases run dropdown menu needs listen outside automatically close menu clickanddrag functionality sometimes needs listen documentwide eg lasso select around elements user drags outside container element modal window handling close user hits esc like idea fake eventonly nodes nt render dom proposal handles listen events children usecase added additional props like listening globally could handle pretty much everything could even add prop constrains handling particular ref", "d": "10/2016"}, {"body": "continuation gaearon said feb year anyone wants make custom attributes bit tidy write babel plugin astbased transformer using babel quick working example change find appropriate js babel plugin var template require babeltemplate var refbody template moduleexports function types var visitor jsxattribute path pathnodenamename attrs return pathreplacewith tjsxattribute tjsxidentifier ref tjsxexpressioncontainer tfunctionexpression null tidentifier n tblockstatement refbody attrsmap pathnodevalueexpression return inherits require babelpluginsyntaxjsx visitor visitor generate required logic output js function mycomponent ref var size refsize var density refdensity var href refhref", "d": "10/2016"}, {"title": "support icu message xliff", "body": "submitting check one x current behavior using something like case prints expected behavior print omitting html part minimal reproduction problem instructions motivation use case changing behavior bug angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript node aot issues", "num": "12636", "d": "10/2016"}, {"title": "router read property outlets undefined", "body": "submitting check one x current behavior switching routes sometimes get following error thrown router digging source looks like null reference check missing expected behavior uh navigate without error minimal reproduction problem instructions unfortunately yet minimum repro routing configuration looks like export const routes route path redirectto home pathmatch full eagerly loaded modules path home component homecomponent global modules path profile loadchildren appprofileprofilemodule profilemodule canload authguard service modules path locations locationtag canactivatechild authguard resolve session sessionresolveguard children path child loadchildren appchildchildmodule childmodule path component nocontentcomponent error occurs navigating childmodule route please tell us environment angularcli node os darwin angular version router version browser language typescript node aot issues node", "num": "12634", "d": "10/2016"}, {"title": "date pipe time component extraction issues across locales", "body": "submitting check one x current behavior date pipe output incorrect custom formats used various locales current implementation use intldatetimeformat localize datetime information use string manipulation extract individual components output granular enough bugs come mainly assumptions format looks across locales provided unit tests repro expected results valid chrome necessarily ie different browsers format locales differently including order components number system alphabets used see full tests created investigating issue assume date new date day part output fails various locales see intlts hourclockextractor function digit formatting eg hh outputs mix numbering systems hard coded angular intljs digitmodifier function timezone output fails certain locales see intlts timezonegetter function era output nt work locale tried angular intlts assumes intldatetimeformat object output era nt motivation use case changing behavior broken please tell us environment windows angular version angular master browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome also details ie output gist", "num": "12632", "d": "10/2016"}, {"title": "aot error interface type", "body": "submitting check one x current behavior constructor uses get dependency references interface dep constructor inject firebaseapp fbapp firebaseappapp compile lib get error change type compilation succeeds expected behavior would expect able reference interface constructor conjunction minimal reproduction problem instructions thing typescript import ngmodule inject injectable angularcore import http angular export interface foo injectable export class myclass constructor inject http foo ngmodule providers myclass export class mymodule angular version node aot issues node", "num": "12631", "d": "10/2016"}, {"title": "support binding component outputs callbacks", "body": "submitting check one x current behavior angular directive called html submit directive would register click listener host host clicked directive would call event handler event handler could optionally return promise directive would apply animations host element based promise lifecycle flow roughly ts toggleanimation active true qwhen thisonasyncaction gt playanimation success catch gt playanimation error finally gt toggleanimation active false pattern simple expressive way directivescomponents declaratively delegate parts lifecycle consumers unfortunately appear supported angular event binding far limited inflexible tied class eventemitter requires rxjs approach precludes returning results handlers expected behavior angular support callback bindings callbacks eg component class looks like angular assign statement call template directly field motivation use case changing behavior expressiveness productivity angular parity angular version browser language", "num": "12630", "d": "10/2016"}, {"title": "dynamic routeroutlets", "body": "submitting check one x let say code chess class chess nt work right attribute routeroutlet directive like const modifier typescript set manually template develop application set routes outlets dynamically expensive allow routeroutlet directive dynamic", "num": "12629", "d": "10/2016"}, {"title": "lazyloading module error big project deep folder structure error systemjs xhr error found loading", "body": "submitting check one x current behavior poc hero ngmodule tutorial found structure project subfolder eg srcappheroheroemodulets implement lazyloading get error point module trying lazyload folder structure error expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment jetbrains webstorm windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language x typescript xx node aot issues", "num": "12628", "d": "10/2016"}, {"title": "allow canactivate child guards blocking", "body": "submitting check one x current behavior canactivate child guards run parentfirst parallel meaning way resolve data parent may needed child guards unless managed explicitly elsewhere expected behavior canactivate child guard behavior could possibly set block children guards minimal reproduction problem instructions motivation use case changing behavior loading server informationflags required guards done two ways severely hinders ux choicesflexibility making requests server data asynchronous making whole codebase needlessly complex certain branch routes behind authguard may need asynchronous loading components respect guard guards may require user identification complete wo nt necessarily access unless data made asynchronous mentioned angular version browser language", "num": "12627", "d": "10/2016"}, {"title": "router pauses execution template called notification onclick handler", "body": "weirdest issue hope title makes sense allow elaborate submitting check one x current behavior using notification api send notifications users created notify service wrap functionality takes care everything notifications clicked want visit certain part app accomplish use onclick handler notification feed url call routernavigate notify service works encountering strange behavior page navigated getting displaying data api reason execution seems halted notification displayed navigate using router experimented changing windowlocationhash since currently use hashbased routing app instead using router nt problems able replicate problem plunkr see expected behavior minimal reproduction problem instructions allow notifications click notification appears component accessed observe ngfor nt executed notification closed programmatically navigate components manually see difference motivation use case changing behavior please tell us environment windows vs code angular version browser reproduced chrome safari edge edge ngfor loop nt get executed even notification disappears language typescript", "num": "12624", "d": "10/2016"}, {"title": "activatedroute emitting change route data", "body": "submitting current behavior added static route data couple routes listen change component issue activatedroute never emits change data handler run app bootstrap first route loaded app navigated expected behavior expected activatedroute event handling work like described documentation fe section minimal reproduction problem instructions create new project angularcli generate components start amp header add routing module import appmodulets import ngmodule angularcore import routes routermodule angularrouter import startcomponent startstartcomponent import aboutcomponent aboutaboutcomponent const routes routes path component startcomponent data headerstyle transparent path component aboutcomponent data headerstyle default ngmodule imports routermoduleforroot routes exports routermodule providers export class approutingmodule home import component oninit angularcore import activatedroute angularrouter component selector appheader templateurl headercomponenthtml styleurls headercomponentcss export class headercomponent implements oninit constructor private route activatedroute ngoninit thisroutedataforeach data gt consolelog data please tell us environment macos angularcli angular version browser language typescript", "num": "12623", "d": "10/2016"}, {"title": "return", "body": "api work postman worked solve problem loginservicets import injectable angularcore import http response angular import observable rxjsobservable import headers requestoptions angular injectable export class loginservice private loginurl logincomponentts import component viewencapsulation oninit angularcore import formgroup abstractcontrol formbuilder validators angularforms import loginservice loginservice component moduleid moduleid selector login styleurls apploginlogincomponentcss templateurl apploginlogincomponenthtml providers loginservice export class logincomponent errormessage string name version scripts start tsc amp amp concurrently tsc w liteserver lite liteserver postinstall typings install tsc tsc tsc w tsc w typings typings licenses type mit url dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade angularinmemorywebapi bootstrap corejs materializecss reflectmetadata rxjs systemjs zonejs devdependencies concurrently liteserver typescript typings", "num": "12622", "d": "10/2016"}, {"title": "browser support results getting worse", "body": "checking times browser support results angular found android browsers fail internet explorer going fix gt thank work", "num": "12621", "d": "10/2016"}, {"title": "ca nt bind ngmodel even though formsmodule imported", "body": "following tutorial get part uses way binding ngmodel started getting error ca nt bind ngmodel since nt known property input searched web see error always resolved person importing forms module imported going back forth tutorial code copy pasted code component still encountered problem using node npm windows vista far everything else packagejson file files maints appmodulets appcomponentts indexhtml absolutely clue wrong submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12620", "d": "10/2016"}, {"title": "auxiliary routes taken account application start", "body": "submitting check one x current behavior resolving posting could nt get answer looks angular bug seems auxiliary routes nt taken account application start cf related plunk related question trying load auxiliary route app start everything works expected using routerlink entering url manually however ca nt get route load straight away way get around must use routes order resolve api data components expected behavior auxiliary route load application start minimal reproduction problem instructions please fork plunk removing auxiliary route named router outlet results app displaying correctly motivation use case changing behavior using resolvers child components application start please tell us environment mbp macos sierra atom editor typescript webpack angularcli angular version angular router version browser chrome safari language typescript node aot issues", "num": "12617", "d": "10/2016"}, {"title": "routerlinkactive working navigation imperatively", "body": "submitting check one x current behavior routerlinkactive working navigation imperatively eg thisrouternavigate hero heroid navigating components using thisrouternavigate seem set active class elements bound routerlinkactive even using exact true identical setup seems work using routerlink attribute html routerlinkactive behaves expected expected behavior active class bound element routerlinkactive minimal reproduction problem instructions reproduced simply excecuting router navigation imperatively motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12616", "d": "10/2016"}, {"title": "change value nt trigger validators model driven form approach", "body": "submitting check one x current behavior changing value enabled nt trigger validators need change type text everything working expected expected behavior changing value trigger validators minimal reproduction problem instructions view audio test creator component class export class soundtestcreatorcomponent implements oninit readonly abxsection abxform abxform formgroup creationform formgroup testmethods value soundtestenum soundtestenumabx display soundtestenum soundtestenumabx value soundtestenum soundtestenummushra display soundtestenum soundtestenummushra constructor private fb formbuilder thiscreationform thisfbgroup name validatorsrequired method validatorsrequired ngoninit onsubmit creationform consolelog test creation form submitted consolelog creationform onchange selectedmethod string thisremoveformsections selectedmethod soundtestenum soundtestenumabx thisaddabxformsection selectedmethod soundtestenum soundtestenummushra consolelog selectedmethod private addabxformsection thiscreationformaddcontrol thisabxsection thisabxform private removeformsections thiscreationformremovecontrol thisabxsection oninputchange val consolelog val consolelog thisabxformenabled customvalidator check calls function isemptyinputvalue value return value null typeof value string amp amp valuelength export class customvalidators static fileinputrequired c formcontrol return isemptyinputvalue cvalue fileinputrequired valid false null node version", "num": "12614", "d": "10/2016"}, {"title": "bootstrapped component default design issue primaryoutlet namedoutlet", "body": "submitting check one x current behavior parsing html design placed expected behavior parse html placed defult play get desire output parse html placed minimal reproduction problem instructions loads two named outlets load components respectively placed following order app runs output header component dashboard component footer component output expected note matter place remains top browser chrome xx firefox xx language typescript xx", "num": "12613", "d": "10/2016"}, {"title": "live example template syntax crashed", "body": "submitting check one x current behavior read guide angularjs template syntax page clicked live example see demo running loading show nothing happen please check link see detail expected behavior live example template syntax done minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12612", "d": "10/2016"}, {"title": "click event modifies child nested recursive component variable alters parent variable", "body": "submitting check one x current behavior built component nests recursively component contains boolean variable showsubform holds state ngif instance nested recursive component click event triggers function contains showsubform showsubform showsubform parent component modified well since boolean parent true child false clicking link toggles variable child toggles variable parent sets false hiding entire hierarchy components expected behavior event impacting component variable modify local component variable bubble impact value parent component variable class variable name minimal reproduction problem instructions motivation use case changing behavior see prevent parent component variables modifying recursively nested component variables modified please tell us environment aws linux angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12611", "d": "10/2016"}, {"title": "router way subscribe outlet url change way create virtual outlets custom routing", "body": "submitting check one x current behavior router allows using named outlets like interpreted easy way retrieve paths andor listen change paths per outlet case someone wants implement something completely custom outlet expected behavior allows retrieving subscribing change paths per outlet routing allows configuring routes ie named outlets exist urls html public devs retrieve current parsed url given time minimal reproduction problem instructions proofofconcept service wrote able subscribe outlet path change please note two problems important fact example javascript import injectable ondestroy angularcore import router navigationend angularrouter import observable subject subscription rxjs problem private import urlsegmentgroup angularroutersrcurltree injectable export class routeroutleturl implements ondestroy private outletsurlsegmentgroup new map private routersubscription subscription private emptyurlsegmentgroup urlsegmentgroup point currently required virtual router javascript export const approutes routes component template export class noopcomponent constructor html example outlet could declared virtual javascript export const approutes routes honest virtual outlet idea could replaced anything else would tell particular auxiliary route known even though html motivation use case changing behavior able create use routes trigger custom nonangularcomponent behaviour eg routes manipulate state party widgets like jqueryui accordion tabs widgets general means anything routable ca nt represented angular components please tell us environment angular version browser language node aot issues na thank", "num": "12610", "d": "10/2016"}, {"title": "dependency injection constructor provider overrides requestoptions nt work", "body": "submitting check one x current behavior want override requestoptions class followed instructions found net override need acquiring reference services make work constructor class added reference service quest try execute code nt get injected try override providers works expected expected behavior dependency injection honored whenever framework initializes provider override minimal reproduction problem instructions requestoptions overrided provider class import injectable angularcore import baserequestoptions headers angular import nonhttpservice servicesnon injectable export class defaultrequestoptions extends baserequestoptions headers headers new headers contenttype applicationjson injectable service class import injectable angularcore injectable export class nonhttpservice constructor service class using http import injectable angularcore import http response angular import observable rxjsobservable import rxjsaddoperatormap import rxjsaddoperatorcatch injectable export class logservice constructor private http injects defaultrequestoptions requestoptions parameter http module definition import ngmodule angularcore import browsermodule angularplatformbrowser import httpmodule requestoptions angular import appcomponent appcomponent import approuting approuting import logservice sharedserviceslogservice import defaultrequestoptions sharedoverridesdefaultrequestoptions import nonhttpservice sharedservicesnon ngmodule imports browsermodule httpmodule approuting declarations appcomponent bootstrap appcomponent providers nonhttpservice provide requestoptions useclass defaultrequestoptions logservice export class appmodule motivation use case changing behavior dependency injection providers always honored matter provider override based please tell us environment windows net core aspnet project using iis express nodejs version npm version angular version browser tested google chrome version microsoft edge language typescript compiled node aot issues", "num": "12608", "d": "10/2016"}, {"title": "changedetectionstrategyonpush breaks controlvalueaccessor functionality", "body": "current behavior controlvalueaccessor component used child component changedetectionstrategy set onpush current value always one change behind expected behavior controlvalueaccessor component used child component changedetectionstrategy set onpush work exactly changedetectionstrategy set default minimal reproduction problem instructions plnkr click button push changes see red bordered input control reflect current value please note blue bordered control component type used child component changedetectionstrategydefault motivation use case changing behavior custom controls working childs components changedetectionstrategyonpush angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12607", "d": "10/2016"}, {"title": "router data nt update matching", "body": "submitting check one x current behavior tried set route something like path component foobar resolve mydata myresolver allow urls like foobarbazpathtofiletxt works fine first load resolved data derived full path available path changed resolver called recalculate data foreach body called expected behavior body foreach would called time url changes minimal reproduction problem instructions motivation use case changing behavior want support fetching things based arbitrary paths routing please tell us environment plunker chrome linux angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12603", "d": "10/2016"}, {"title": "issue regexp mobile safari datepipe error browser stack", "body": "browser stack reports thanks dzmitryshylovich point probable culprit sometimes date pipe test fails following error regexp used date pipe probably related andyearnshawintljs ref", "num": "12597", "d": "10/2016"}, {"title": "getrawvalue returning object instead", "body": "submitting check one x current behavior method currently returns method inside returns expected behavior return type minimal reproduction problem instructions motivation use case changing behavior since property longer returns disabled controls page forced use troublesome cast object using object nt properties would exist value angular version browser language", "num": "12596", "d": "10/2016"}, {"title": "using backticks declaring string import produces error systemjs", "body": "submitting check one x current behavior using backticks declaring string first line produces error systemjs example first line declaration variation single double quotes work use backticks instead single double quotes like angularcore get error expected behavior declaration work like others angularcore minimal reproduction problem instructions minimal plunker steps reproduce go srcappts change angularcore angular app load motivation use case changing behavior nt since foo foo follow also use back ticks declaring string import sure accepted use case still trying learn angular encountered issue please tell us environment platform developer build neverware developerbuild angular version browser chrome language typescript", "num": "12595", "d": "10/2016"}, {"title": "allow route load module loadchildren property", "body": "submitting check one x motivation use case changing behavior given much easier configure routes provide module turn nested routes vs giving children manually say approach works nice even lazy loading example would import answersmodule answersanswersmodule const approutes path answers loadchildren answersmodule currently way pass function returns function feels bit hackish angular version", "num": "12594", "d": "10/2016"}, {"title": "candeactivate guard receives incorrect component", "body": "submitting check one x current behavior candeactivate guard receives component related first deactivated segment instead component guard attached case navigation crisiscenter called componentless component instead issue reproducible angular expected behavior candeactivate guard receive component guard attached parameter minimal reproduction problem instructions minimal plunker demonstrating issue based routing amp navigation live example steps reproduce go hero go crisis center actual result read property candeactivate null expected result confirmation dialog shown motivation use case changing behavior ways prevent navigation child component case unsaved changes etc please tell us environment windows vs code npm angular version browser chrome firefox language typescript", "num": "12592", "d": "10/2016"}, {"title": "reflectgetmetadata function", "body": "submitting check one x current behavior trying run testing angularjs change module commonjs get reflectgetmetadata function error people similar issue polyfills angularchi using neither expected behavior run angular tests without errors minimal reproduction problem instructions steps open command cd root call gulp test configured gulpfile config returns reflectgetmetadata function error shown get error runtime program compiles fine program running quite comprehensive familiar plunker tried minimally reproduce best ability note commented local resources indexhtml motivation use case changing behavior please tell us environment windows angular version browser allchrome language typescript node aot issues w commonjs", "num": "12591", "d": "10/2016"}, {"title": "child component input update timing problem", "body": "submitting check one x current behavior update input binding child component parent comp directly afterwards call function child comp values updated need add settimeout wait internal update occurs using viewchild template reference variable call function child component expected behavior updating parent comp input bindings updated child component immediately minimal reproduction problem instructions see plunker test check consolelog output angular version browser language typescript", "num": "12590", "d": "10/2016"}, {"title": "canactivate child another outlet", "body": "submitting check one x current behavior routing child defined canactivate another outlet canactivate works parent also expected behavior canactivate child separated minimal reproduction problem instructions angular version", "num": "12589", "d": "10/2016"}, {"title": "lazy loading modules router live example path repeatedly refresh page", "body": "submitting check one x current behavior follow advanced documentation lazy loading modules router chapter download live example code run locally open browser visit successfully redirect refresh page additional add url become refresh page errors show console expected behavior nt url already one minimal reproduction problem instructions exactly code live example motivation use case changing behavior please tell us environment node angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx node aot issues", "num": "12588", "d": "10/2016"}, {"title": "config uncompleted route", "body": "hi url like returnurlanyurl config route return login component tried one nt works path login returnurl component logincomponent thanks", "num": "12587", "d": "10/2016"}, {"title": "klasstrim function", "body": "submitting check one x current behavior code wrote follows slidercomponenthtml html reset link url enable disable add slidercomponentts typescript import component angularcore import moment moment declare const fetch component selector slider templateurl appslidercomponenthtml export class slidercomponent images constructor const self add thisimagespush eventurl imagepath null sort displaykbn addday moment updateday moment openday moment eventname event resort todo component successfully shown press add button slidercomponenthtml following error shown firefox developer console exception error caused klasstrim function original exception klasstrim function original stacktrace ngclasstoggleclass ngclassapplyiterablechanges lt defaultiterablediffermodules ngclassapplyiterablechanges ngclassmodules anonymouswrapperngclassprototypedetectchangesininputprops appviewmodules debugappviewmodules appviewmodules appviewmodules debugappviewmodules appviewmodules appviewmodules debugappviewmodules viewrefprototypedetectchanges applicationrefprototypetick lt applicationrefprototypetick applicationref lt next lt zonedelegateprototypeinvoke ngzonemodules zonedelegateprototypeinvoke zoneprototyperun ngzonemodules applicationref lt next eventemittermodules safesubscriberprototypetryorunsub safesubscriberprototypenext subscriberprototypenext subscriberprototypenext subjectprototypenext eventemittermodules ngzonemodules ngzonemodules ngzonemodules zonedelegateprototypeinvoke zoneprototyperunguarded ngzonemodules domeventspluginmodules zonedelegateprototypeinvoketask zoneprototyperuntask zonetaskthisinvoke error context object view object nodeindex tplrow tplcol error error caused klasstrim function expected behavior error shown appropriate error message shown minimal reproduction problem instructions sorry nt work plunkr download zip run open indexhtml motivation use case changing behavior make possible investigate problem code might caused wrong configuration ca nt investigate cause error message angular provides please tell us environment os debian jessie editor atom package manager npm server php builtin server angular version browser firefox chrome stacktrace current behavior section firefox almost message shown chrome language typescript node aot issues", "num": "12586", "d": "10/2016"}, {"title": "select multiple false ui multiple ngmodel return array", "body": "submitting check one x current behavior select multiple false ui multiple ngmodel return array expected behavior model return array minimal reproduction problem instructions motivation use case changing behavior trying make custome component multiple configureable angular version browser chrome language typescript", "num": "12585", "d": "10/2016"}, {"title": "using value errors", "body": "submitting check one x current behavior using value causes runtime error whereas instance results expected behavior expect runtime error patch version update runtime error minimal reproduction problem instructions please tell us environment plunker angular version browser chrome language typescript cc vicb", "num": "12583", "d": "10/2016"}, {"title": "upgrade missing upgrade injectable aot mode", "body": "submitting check one x current behavior missing ability upgrade service expected behavior able upgrade service minimal reproduction problem instructions motivation use case changing behavior using new upgradeadapter upgrade service ca nt use aot available using upgrademodule angular version", "num": "12582", "d": "10/2016"}, {"title": "custom value accessor angularforms", "body": "hope helps current behavior implementing controlvalueaccessor function value cloned object default makes accessor behave like binding using binding syntax like plunker expected behavior obj cloned object motivation use case changing behavior trying initialize component found change form value produces change model please tell us environment windows netbeans nodejs angular version browser language typescript", "num": "12581", "d": "10/2016"}, {"title": "need tool migrate code release", "body": "breaking changes future major releases announced advance users still able use former deprecated api giving time adapt code next major release deprecated apis removed however cases possible provide tool migrate user apps see pr example narrowing return types something adding generics", "num": "12579", "d": "10/2016"}, {"title": "browserstack timeout failures frequent", "body": "ref since browser stack account get expired activated many runs end error background info get bs reply support requests igorminar able see account got expired status activated status bs flacky since cc naomiblack", "num": "12578", "d": "10/2016"}, {"title": "named routeroutlets populated", "body": "submitting check one x current behavior given appcomponentts template route definition const route route path moduleid children path component dynamicmodule outlet one path viewid component dynamicview outlet two routerlinks throws match routes url segment expected behavior would ideal would clicking test one anchor tag would populate routeroutletmap one clicking test two anchor tag would populate routeroutletmap two minimal reproduction problem instructions see current behavior motivation use case changing behavior please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview windows language typescript xx typescript node aot issues", "num": "12577", "d": "10/2016"}, {"title": "translate input box placeholders material", "body": "submitting check one x current behavior using latest release best tell documented code process works great thank except placeholders md input boxes translate original enus text shows instead expected behavior since md input boxes label placeholder translate minimal reproduction problem instructions clear whether issue angular docs example input box code process create entry input elements like cases seems create empty transunit example text p elements input boxes translates correctly motivation use case changing behavior since md input boxes label placeholder translate please tell us environment atom node amp npm angular version yes browser chrome current firefox current language typescript node aot issues", "num": "12576", "d": "10/2016"}, {"title": "remove implementation hack depends bad closurecompiler behavior", "body": "submitting check one x current behavior depends incorrect current behavior closurecompiler causes evaluate newly created object extending expected behavior fixing compiler inheritance works expected need hack done googleclosurecompiler done believe definition changed minimal reproduction problem instructions na motivation use case changing behavior want change closurecompiler behavior match spec googleclosurecompiler please tell us environment na angular version browser language typescript xx node aot issues na", "num": "12575", "d": "10/2016"}, {"title": "call method ngfor", "body": "submitting check one x current behavior expected behavior hello guys try call method inside ngfor ngfor let day days gt day days consolelog check return executes template problem logs console times check calls function times", "num": "12572", "d": "10/2016"}, {"title": "aot ngupgrade breaks angular style guide", "body": "submitting check one x current behavior current code upgrade component aot fashion breaks style guide selector attributes directives unfortunately component decorators require templates nt know right answer expected behavior able upgrade component aot compiled follow style guide minimal reproduction problem instructions motivation use case changing behavior nt follow style guide ca nt properly lint code need disable part linting risk variation code please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language node aot issues", "num": "12571", "d": "10/2016"}, {"title": "ngmodel nt seem work", "body": "submitting check one x current behavior ngmodel nt work minimal reproduction problem instructions clone quickstart repository follow instructions add formsmodule appmodulets file import ngmodule angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import appcomponent appcomponent ngmodule imports browsermodule formsmodule declarations appcomponent bootstrap appcomponent export class appmodule modify appcomponentts file like import component angularcore component selector myapp template first angular app foo export class appcomponent run app displays following error environment windows virtual machine wwwmodernie behaviour occurs using compatibility mode angular version browser language typescript node aot issues", "num": "12568", "d": "10/2016"}, {"title": "hostlistener combined global hammerjs event throws exception", "body": "submitting check one x current behavior declaring hostlistener global hammerjs event throws exception example exception expected behavior expect work working nonhammerjs events minimal reproduction problem instructions motivation use case changing behavior building slideout side menu renders contents active able slide need listen pan events window please tell us environment macos sierra visual studio code npm angular version browser language possibly although tested using typescript node aot issues", "num": "12566", "d": "10/2016"}, {"title": "hashlocationstrategy routing nested child routeroutlet toplevel route fails", "body": "submitting check one x current behavior question within nested routeroutlet component tries use dom element navigate toplevel route example link topb router seems reject valid name instead fail toplevel redirect path matter try preceding route etc drop appmodule ie drop hashlocationstrategy define appbasehref ie static route indexhtml per tornado server routing behavior works expected downside longer reload browser within router hierarchy since url treated static file tornado server course find granted reload limitation might overcome level tornado configuration settings point issue issue using hashlocationstrategy nested child components navigate valid toplevel routes verified instance nested child toplevel even find named path trying traverse expected behavior nested child component able route defined route regardless locationstrategy minimal reproduction problem instructions please see post linked contains instructions motivation use case changing behavior right enabling hashlocationstrategy seems break ability router navigate parent routes even though instance router injected child indeed toplevel router configuration disabling hashlocationstrategy allows paths traversed please tell us environment centos vm running web server tornado macos running browser angular version angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome safari others tested language typescript xx typescript node aot issues", "num": "12564", "d": "10/2016"}, {"title": "internationalization plural rules", "body": "submitting check one x current behavior internationalization support plural forms expected behavior internationalization support natively plural form like gnu gettext minimal reproduction problem instructions use sentence like items selection english would plural forms item selection items selection lt gt language sentences different formula russian example would numbers ending numbers ending numbers ending check rules motivation use case changing behavior know language going translate handle formulas code always rely translation engine look gnu gettext way handle eg something mentioned please tell us environment ubuntu angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12563", "d": "10/2016"}, {"title": "redirect external url route without using component", "body": "would like create external redirect make routes consistent think would nice router states routes import injectable angularcore import resolve angularrouter injectable export class loginservice implements resolve resolve windowlocationhref return false", "num": "12562", "d": "10/2016"}, {"title": "currencypipe symboldisplay bug zar", "body": "submitting check one x current behavior using currency pipe format number specifying valid iso currency code south africa zar setting symboldisplay true currency code replaced currency symbol case r expected behavior expected behavior projected property display currency symbol instead currency code symboldisplay true currencycode set zar minimal reproduction problem instructions someamount currency zar true motivation use case changing behavior need format currency south african currency symbol please tell us environment macos sierra webpack ng serve angularcli template used angular version browser language node aot issues", "num": "12561", "d": "10/2016"}, {"title": "nesting ngmodel custom components implementing controlvalueaccessor nt register parent", "body": "submitting check one x current behavior nested components nt register parent build tree correctly expected behavior nested components parent set minimal reproduction problem instructions motivation use case changing behavior want use validators like required similar native elements like input parent component control propagate touched state child see validate method another way would iterating children nt possible children method perhaps misunderstanding forms concept missing detailed example ngmodel multiple levels components correctly possible could realated please tell us environment angular version browser chrome firefox language typescript", "num": "12560", "d": "10/2016"}, {"title": "isngmodulemetadata returning false decorator factory", "body": "submitting check one x current behavior built external angular module compiled typescript imported app module currently get error isngmodulemetadata returning false due decoratorfactory bootstrap undefined declarations array entrycomponents undefined exports undefined id undefined imports array providers undefined schemas undefined proto object equating instance ngmodule expected behavior decorator factory equal instance ngmodule minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version angularcore browser chrome language typescript compiled corejs shims node aot issues", "num": "12559", "d": "10/2016"}, {"title": "proposal optional namespaces property bindings", "body": "submitting bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see problem technically totally possible multiple directives element bind property name currently way explicitly tell angular directive property want bind especially problematic consumer nt control directive eg party directives example directive selector one class one input foo directive selector two class two input foo two directives used like looking template nt know directive actually binding ca nt explicit either current behaviour code binds directive properties proposals discussed cburgdorf came following possible solutions downsides directiveattributeproperty order defines binding receivers directiveattribute property order host element defines expression bound directive prop example works angular html parser actually identify order attributes browsers guarantee afaik upsides easy grok kinda intuitive downsides gets hairy directives applied one host element chances might rather low happens many directives tho introduce optional namespace property bindings another option would introduce explicit namespaces maybe taking advantage assuming directive selector one exportas one class one input foo directive selector two exportas two class two input foo notice directives use name could used consumer well would work order another possible syntax would canonical version say fact angular throws case final thought say boils always prefixing value might work eg forms directives exactly", "num": "12557", "d": "10/2016"}, {"title": "angularforms pattern directive shoud accept regexp", "body": "submitting feature request current behavior pass strings directive sometimes quite hard test becouse need escape ides dont test fly minimal reproduction problem instructions plank shows problem motivation use case changing behavior better code mantaining angular version thank", "num": "12556", "d": "10/2016"}, {"title": "error provider e error description", "body": "submitting check one x current behavior app works good desktop try run mobile version get error console system information cordova cli gulp version cli version gulp local ionic framework version ionic cli version ionic app lib version iosdeploy version iossim version os mac os x el capitan node version xcode version xcode build version", "num": "12554", "d": "10/2016"}, {"title": "unicode mangling caused aot compilation", "body": "submitting check one x current behavior word pok\u00e9dex site appearing site regardless use unicode character \u00e9 convert escape sequence \u00e9 characters look correct viewed text editors viewsource html expected behavior see pok\u00e9dex minimal reproduction problem instructions seems work fine plunker using jit platformbrowserdynamic ahead time compilation view featuring either strings seem cause view componentngfactoryjs generated converts \u00e9 \u00e9 accurately seems renderer mangles actually putting screen motivation use case changing behavior unicode support strong feature today web please tell us environment dev environment visual studio code npm ngc rollup liveserver works environment notice issue hosted godaddy currently subject change angular version browser language typescript way javascript generated aot compilation show \u00e9 \u00e9 correctly nt matter use browser chews node aot issues", "num": "12552", "d": "10/2016"}, {"title": "ngc complains optional number parameter component constructor", "body": "submitting check one x current behavior constructor component using last parameter pass number mostly testing purposes app works fine tests pass ngc gives error expected behavior compile passes meaningful error message given minimal reproduction problem instructions injectable constructor takes optional parameter type motivation use case changing behavior able pass optional parameters constructors di ignore please tell us environment ionic framework version ionic app scripts version os mac os x sierra node version angular version angularcore angularcompiler angularcompilercli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview command line compiling language typescript xx typescript node aot issues node version", "num": "12551", "d": "10/2016"}, {"title": "get bootstraped component instance new ngmodule pattern", "body": "hi previous versions able something like allow parent website obtain root component instance call method bootstrap appcomponent disabledeprecatedforms provideforms function ref componentref new ngmodule pattern get ngmoduleref module instance instead componentref component instance tell expose root component instance parent website", "num": "12547", "d": "10/2016"}, {"title": "animation callback throw change detection error property change", "body": "submitting check one x current behavior animation callback throw change detection error something changes expected behavior animation callback change properties without error minimal reproduction problem instructions motivation use case changing behavior wants set class durring animation please tell us environment windows intelij nodenpm angularcli server angular version browser windows nt khtml like gecko language typescript node aot issues", "num": "12546", "d": "10/2016"}, {"title": "fails running jasmine unit tests hybrid application inter dependencies components", "body": "submitting check one x current behavior fails running jasmine unit tests hybrid application inter dependencies components expected behavior able run unit tests components hybrid application minimal reproduction problem instructions following components service simple service without deps service uses service directive uses service specs specs written following components testservice simple injectable class using specs written testservice running specs getting following errors uncaught promise error unexpected zone angular plunker located also ref prev issue used similar usage bootstrap ref still fails since app large number components dep others components unit tests written ca nt migrate angular without able support testing appreciate help motivation use case changing behavior trying move enterprise application angular please tell us environment windows vs code npmbower nodeibm http server angular version angular angular browser chrome", "num": "12545", "d": "10/2016"}, {"title": "numbervalueaccessor exported angularforms", "body": "submitting check one x current behavior field template causes aot compilation fail issue described discussed angularangularcli expected behavior aot handle attribute minimal reproduction problem instructions see angularangularcli motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na aot language typescript xx typescript node aot issues", "num": "12544", "d": "10/2016"}, {"title": "variable replacement styles", "body": "submitting check one x motivation use case changing behavior fix idea would cool model binding inside css styles similar model bindings html templates would make things like theming runtime lot easier something like button backgroundcolor mycolorpropertyinmycompontent", "num": "12543", "d": "10/2016"}, {"title": "report rowcolumn template security sanitization", "body": "submitting check one x current behavior current template sanitizer emits warning messages always inconvenient multiple insecure points difficult look point template expected behavior report security warnings row column template idea minimal reproduction problem instructions motivation use case changing behavior make debugging easy angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "12541", "d": "10/2016"}, {"title": "number input fires valuechanges twice", "body": "may bug reactiveformsmodule input type number fires valuechanges event twice changed browser expect fire valuechanges plunkr example use ngrxstore manage state subscribe store valuecahnges observable change value input reducers fires twice optimal suppose angular version browser chrome", "num": "12540", "d": "10/2016"}, {"title": "aot generated scssshim imported path amp amp scss brackets bugs", "body": "submitting check one x current behavior following angulario docs using nodemodulesbinngc command generate aot code aot dir include path bugs example homengfatoryts shows actually structure aot dir structure app dir scss brackets bugs aot mode styles became mess componentscssshim shows pair needless brackets compared jit mode delete brackets head became normal expected behavior scss include expected behavior scss brackets expected behavior minimal reproduction problem instructions motivation use case changing behavior aot shows jit mode please tell us environment macos serria visual studio code npm angular version browser language typescript node aot issues webpack", "num": "12539", "d": "10/2016"}, {"title": "issue nested module", "body": "submitting check one x current behavior using angular build issue nested modules depiction structure app module app component routeroutlet defined group module group component routeroutlet routermoduleforchild grproute defined group module groupdetails module groupdetails component routeroutlet routermoduleforchild grpdtlroute defined trying navigate appgroupgroupdetails always generate error routeroutlet known element ensured include routermodule imported groupdetails well group module struggling past two days help would highly appreciated expected behavior based upon search posts available online nt issue nt encountered post similar problem lost go next minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12538", "d": "10/2016"}, {"title": "improvement viewcontainerrefcreatecomponent", "body": "want dynamic insert compoent compoent must add mrak host compont templete ex add created sibling want say smart ex hostviewcontainerref already tell host view normal thinking insert hostviewcontainerref add method viewcontainerref like insertcomponent", "num": "12537", "d": "10/2016"}, {"title": "ahead time ngc support lazyloading", "body": "ahead time ngc support lazyloading", "num": "12536", "d": "10/2016"}, {"title": "error uncaught promise", "body": "submitting check one x tried test angular week current behavior catalog app working error expected behavior trying get data services catalogcomponent module minimal reproduction problem instructions component calling service import component oninit input angularcore import stockservice stockservice import item item component selector shopcatalog templateurl catalogcomponenthtml styleurls catalogcomponentcss providers stockservice export class catalogcomponent implements oninit stocks item constructor private stockservice stockservice getstocks void thisstockservicegetstocks items gt thisstocks items ngoninit void thisgetstocks service import injectable angularcore import items mockstocksts import item item injectable export class stockservice constructor getstocks promise itemts motivation use case changing behavior please tell us environment currently developing angularcli node os linux angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12535", "d": "10/2016"}, {"title": "update npm deprecation warnings", "body": "legacy package npm packages currently shows prominently search results npm makes new people confused past deprecated package using deprecation warning nt show npmjscom site following update readmemd shows npmjscom deprecation warning point people quickstart doc remove text ensure versions package deprecated warning message pointing people quickstart update readme need cut new release package easiest way npm install change readmemd deploy package afterwards reissue command package", "num": "12532", "d": "10/2016"}, {"title": "formgroup reset code example typo", "body": "submitting check one x current behavior first code example semicolon instead colon last expected behavior code would updated correct code sample minimal reproduction problem instructions current code example compile since invalid motivation use case changing behavior correct documentation please tell us environment angular version browser language node aot issues", "num": "12531", "d": "10/2016"}, {"title": "ngcontent default content", "body": "submitting check one x current behavior add something inside ngcontent tag get error message element content expected behavior render html inside ngcontent tag default content given minimal reproduction problem instructions create component uses ngcontent somewhere put html inside rendered nothing else injected outside use component somewhere else motivation use case changing behavior cases need default behavior replaced case app header shows logo navigate subpage logo replaced back button feels strange add something like input property hide show logo default content ng content placeholders would feel much intuitive please tell us environment angular cli beta vs code angular version browser language ts node aot issues", "num": "12530", "d": "10/2016"}, {"title": "adding children route breaks redirects root", "body": "submitting check one x current behavior set nested routers root router defers another module declared route root router able resolve child route children lazy loaded fixed adding route redundantly root router module component referenced see examples expected behavior minimal reproduction problem instructions see plunker edited hero route slightly add redirecting child route app longer able resolve root redirect corrected adding redundant route root router see motivation use case changing behavior assuming behaviour unintentional incredibly confusing redundant root route required angular version router language typescript", "num": "12529", "d": "10/2016"}, {"title": "icu message variables replaced placeholders", "body": "today message id change variable name changes count variable name affect message id reuse message different variable names retranslate message var name changes", "num": "12528", "d": "10/2016"}, {"title": "select multiple selection clearing updating options", "body": "submitting check one x current behavior changing options multiselect box existing value sometimes loses selection expected behavior selected option remain selected minimal reproduction problem instructions created demo reproduce select option first select box select option second box notice selected value disappears motivation use case changing behavior app building takes large data set filtered selecting values different properties objects intent user filter data set single object selecting values also true selections limit select options please tell us environment windows visual studio node package manager iis web server angular version currently using angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview able reproduce browsers tried includes chrome firefox ie language typescript xx typescript", "num": "12527", "d": "10/2016"}, {"title": "touch event propagated parent one level nesting", "body": "submitting check one x current behavior works one nesting level see console log ontouched testcomponent touch callback methods registered levels nt called already looked source nt know wrong looks good expected behavior limitation log minimal reproduction problem instructions two level three level motivation use case changing behavior better encapsulation components required get working touched event propagation please tell us environment angular version browser chrome firefox language typescript", "num": "12526", "d": "10/2016"}, {"title": "directive inputs set empty string matching attribute present without value", "body": "submitting check one x current behavior attribute directive also optional input aliased name eg ngmodel input ngmodel model definition users decide use directive without setting input eg value input set empty string expected behavior since inputs stay undefined explicitly set user nt provide value attribute template one time string initialization skipped im sure would need distinction made skipping directive inputs scenarios familiar minimal reproduction problem instructions motivation use case changing behavior think expected behavior intuitive interested thoughts please tell us environment windows chrome angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome", "num": "12524", "d": "10/2016"}, {"title": "changing routeroutlet name variable attribute input type", "body": "submitting check one x current behavior expected behavior outletlist minimal reproduction problem instructions na motivation use case changing behavior requesting feature change routeroutlet name type attribute input property developers bind name dynamically routeroutlet currently developers need hard code string routeroutlet name attribute html template developer needs create multiple router outlets heshe would need create multiple router outlets manually add unique name routeroutlet would enable developers develop cleaner code use multiple routeroutlets please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node", "num": "12522", "d": "10/2016"}, {"title": "ngmodel select multiple nt detect options bound array change", "body": "submitting check one x current behavior ngmodel select multiple expects array store selected values switch array different one ui updated reflect values within new array add remove values currently bound array however ui update believe use ngonchanges within ngmodel detect changes looks reference equality array looking documentation perhaps ngdocheck needs implemented docs warn performance impact though expected behavior ui updates reflect model minimal reproduction problem instructions motivation use case changing behavior broken please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview repro chrome edge", "num": "12521", "d": "10/2016"}, {"title": "testing dom created innerhtml found testing query", "body": "submitting check one x current behavior create component alters innerhtml inside ngoninit fetching element testing injected gives null expected behavior able queryretrieve dom element testing injected innerhtml minimal reproduction problem instructions motivation use case changing behavior wrapping thirdparty library component thirdparty library accepts dom element target replace library instantiated longer element replace want run need router param change need able set innerhtml using element thirdparty replace please tell us environment os osx angular version os browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser chrome language typescript xx typescript", "num": "12520", "d": "10/2016"}, {"title": "triggering event listeners bound document custom events tests", "body": "submitting check one x current behavior currently triggering custom event listeners bound awkward passed event name match listener listener fired test expected behavior expect able pass take advantage passing custom objects event handler approaches satisfies ease testing custom event property values would also welcome minimal reproduction problem instructions na discussed situation robwormald able trigger event listener bound directive via motivation use case changing behavior would like easier way test event listeners bound directives ability pass custom event objects currently passing match listener listener fired test use case complex module dragging amp dropping built purely angular company intends open sourcing need test dom positioning amp logic involving mouse cursor trying hook directive listener bound order test repositions dragged element proper location currently hack around querying directive creating fake mouse event object using injector element get directive instance amp firing method directly awkward necessary currently ci setup uses phantomjs nt anything like headless chrome yet creating custom mouseevent using option please tell us environment macos sierra angular version browser phantomjs language typescript node aot issues", "num": "12518", "d": "10/2016"}, {"title": "lazyloading named router outlet leaves orphaned primary outlet content", "body": "submitting check one x current behavior lazy load module named auxiliary router outlet two bad things happen contents lazy loaded component inserted primary outlet named one existing contents primary outlet left place removed subsequent route changes expected behavior lazy loaded component placed named router outlet primary router outlet unaffected minimal reproduction problem instructions plunkr plunker reproduces bug described github repo git clone npm install ng serve follow instructions page motivation use case changing behavior want able lazy load auxiliary routes like primary ones please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12517", "d": "10/2016"}, {"title": "binding required inside component implementing controlvalueaccessor validator", "body": "submitting check one x current behavior trying follow pattern laid kara run problems fairly specific probably uncommon scenario reusable form control implements binds validation directive one control values wired parent form via scenario soon type field whose value bound validator get error expected behavior seems like work minimal reproduction problem instructions type first field check console please tell us environment angular version browser language typescript", "num": "12516", "d": "10/2016"}, {"title": "state name values stringified", "body": "number passed breaks things", "num": "12515", "d": "10/2016"}, {"title": "fail unit testing karma webpack build using nonangular html elements", "body": "try run tests non html elements component templates example components write class like example working another component template appear problem let appcomponent appcomponent let fixture componentfixture let page page component selector simplenotifications template class simplenotificationscomponent input options describe appcomponent gt beforeeach async gt testbedconfiguretestingmodule imports formsmodule declarations appcomponent simplenotificationscomponent routerlinkstubdirective routeroutletstubcomponent providers appcomponent baserequestoptions mockbackend provide router useclass routerstub provide http usefactory function backend connectionbackend defaultoptions baserequestoptions return new http backend defaultoptions deps mockbackend baserequestoptions compilecomponents createcomponent function createcomponent fixture testbedcreatecomponent appcomponent appcomponent fixturecomponentinstance class page get error described add description expect resolve issue insted project test completely failed even correct working comment tests working particular test failing use angularwebpackkarma versions becausesome test previously working correct failed assume problems karma working webpack error error previously correct working test", "num": "12514", "d": "10/2016"}, {"title": "allow embedding link original source files generated messages", "body": "generate something like take callback generated exact file path eg object similar users adjust path particular repository format", "num": "12513", "d": "10/2016"}, {"title": "plurals replace expression placeholder", "body": "plurals replace expression placeholder eg template html responsegetitemslist length plural found results one showing one result found responsegetitemslist length results produce message replaced form placeholder message", "num": "12512", "d": "10/2016"}, {"title": "generated xmb message ids decimal hexadecimal", "body": "apparently tooling expects decimal ids aim compatible", "num": "12511", "d": "10/2016"}, {"title": "web tracing framework longer working angular", "body": "submitting check one x current behavior navigate angular application turn wtf notice application goes constant refresh loop ie app renders refreshes etc expected behavior come wtf ui minimal reproduction problem instructions navigate angular application turn wtf notice application goes constant refresh loop ie app renders refreshes etc motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12509", "d": "10/2016"}, {"title": "jsonp injected script invoke callback", "body": "code jsonp error uncaught referenceerror jsoncallback defined exception response status ok url uncaught jsonp injected script invoke callback", "num": "12508", "d": "10/2016"}, {"title": "throws error shared module reexports directive", "body": "submitting bug report current behavior got working application reexported directive sharedmodule use get error error unexpected value mydirective exported module sharedmodule usersmyuserworkmyprojectnodemodules arrayforeach native compilemetadataresolvergetngmodulemetadata usersmyuserworkmyprojectnodemodules usersmyuserworkmyprojectnodemodules arrayforeach native objectanalyzemodules usersmyuserworkmyprojectnodemodules extractorextract usersmyuserworkmyprojectnodemodules extract usersmyuserworkmyprojectnodemodules objectmain usersmyuserworkmyprojectnodemodules object usersmyuserworkmyprojectnodemodules expected behavior works directives reexported modules angular version language typescript xx typescript", "num": "12506", "d": "10/2016"}, {"title": "ca nt run aot without file directory exist error", "body": "submitting check one x current behavior running ngc p tsconfigbuildjson minimal example create aot cookbook outputs following error error enoent file directory open c projectsaottestaotcomponentscalccalcmetadatajson error native objectfsopensync objectfswritefilesync metadatawriterhostwritemetadata c projectsaottestnodemodules metadatawriterhostwritefile c projectsaottestnodemodules objectwritefile c objectwritefile c writeemittedfiles c doemit c emitfile c compilation failed occurs typescriptjs calls hostwritefile line provides component compilerhostts checks line definition file skips writing transpiled jscomponent starts write metadata file line line tries write without path checks bad opinion file nt exists skipped within writefilefunction line expected behavior check directory exists without assumption create remove ifstatement within file compilerhostts issue typescript already solved merged compilerhostts swallows output js file expect written regardless choices made ngccompiler remove described ifblock move line thisdelegatewritefile call current line writemetadata works like charm also looks like race condition definition file written later jsfile metadata file written minimal reproduction problem instructions followed instruction aotcookbook case want write external component libary also seems occur want write declaration files aotmetadatajsonfiles minimal demo download plunkrzip following unzip run npm install run npm run aot steps reproduce want reproduce hand create new directory add packagejson minimal config typescript add tsconfig following flags declaration true angularcompileroptions skipmetadataemit false run npm install create smallest module structure least component shown plunkrdemo run ngc side notes also reproduced behavior another machine bug nt related machine file system rights also ran ngc local admin system motivation use case changing behavior aot nt work box writing external module library bad coding assume path already exists performance answer typescript already provides functions ensure specific directory exists please tell us environment windows enterprise visual studio code nodejs lts npm typescript angular browser browser related language typescript node aot issues", "num": "12505", "d": "10/2016"}, {"title": "register ngmodel inputs form custom components", "body": "submitting check one x x bug report gt search github similar issue pr submitting x feature request intentionally create duplicate issue one closed nt get answer urgend questions problem input ngcontrol custom component template driven form registered form kara adviced implement controlvalueaccessor interface custom component may misundeerstood concepts arguments karas statement least questions unclear nt talk custom form control talk custom component general placed inside form component may nothing model data may perform structuring tasks group one input elements special purpose would need controlvalueaccessor interface component component dealing data could controlvalueaccessor manage one input element component thought proposal bring full functionality forms using template driven forms ngmodel exiting applications need something like controlvalueaccessor interface migration seems complicated point", "num": "12504", "d": "10/2016"}, {"title": "check broken image url set default broken slimier angluar", "body": "", "num": "12503", "d": "10/2016"}, {"title": "router support split url segmentsparameters slash hyphen period", "body": "submitting current behavior router supports url segmentsparameters slash expected behavior mimic serverside behavior example using universal express router like able also split segmentsparameters hyphen period minimal reproduction problem instructions would allow routes like motivation use case changing behavior add additional options match existing seo routes create new combinations", "num": "12502", "d": "10/2016"}, {"title": "throw error message package nt use angular peer dep", "body": "ref npm package uses mistake version angular instead using angular peer dependency aot reflector able identify decorator result error example see located inside npm package throw angular symbols located top level", "num": "12501", "d": "10/2016"}, {"title": "xhr error found loading", "body": "submitting check one x current behavior attempting complete angulario tutorial made completing simulating web api app fails front end backend console report traceur understanding error pops quite bit things unrelated traceur potentially useful information follows first file appmodulets believe responsible import ngmodule angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import httpmodule angular import approutingmodule approutingmodule imports loading amp configuring inmemory web api import inmemorywebapimodule angularinmemorywebapi import inmemorydataservice inmemorydataservice import appcomponent appcomponent import dashboardcomponent dashboardcomponent import herodetailcomponent herodetailcomponent import heroescomponent heroescomponent import heroservice heroservice ngmodule imports browsermodule formsmodule httpmodule approutingmodule inmemorywebapimoduleforroot inmemorydataservice declarations appcomponent heroescomponent herodetailcomponent dashboardcomponent bootstrap appcomponent providers heroservice export class appmodule debugging facts packagejson initially set include angularinmemorywebapi commenting inmemorywebapimoduleforroot inmemorydataservice ngmodule imports array fixed error simply importing module without calling forroot ie imports inmemorywebapimodule fix issue reverting release fixes problem problem present expected behavior would minimal reproduction problem instructions follow instructions tutorial please tell us environment os x angular version see latest browser language typescript xx typescript gt node aot issues", "num": "12500", "d": "10/2016"}, {"title": "canrender feature render router link first place automatically", "body": "submitting current behavior router mostly selfaware also guard via one helper services route never renders via avoid creating nonstandard oneoff utility service expected behavior router also takes option none provided defaults render ensure backward compatibility minimal reproduction problem instructions example canrender typescript appauthrenderguardservice import injectable angularcore import canrender router angularrouter import authservice authservice injectable export class authenticatedrenderservice implements canrender constructor private router router private authservice authservice canrender options boolean return thisauthserviceisauthenticated motivation use case changing behavior would great put route validationinformationtitledata one place showing sensitive link may important guarding security via obscurity also help allowing logic live one place may result less code well helping dry please tell us environment macos sierra node angularcli", "num": "12499", "d": "10/2016"}, {"title": "issue period passing object child routes", "body": "submitting x bug report current behavior passing object child route initial navigation works error occurs page refreshed ie component want navigate routedisplay pass object type car price component load fine url matrix url notation something similar hostcomroutedisplaytypecar refresh page say invalid request believe issue period query parameters periods query parameters refresh works expected expected behavior page refresh request work like initially values passed component minimal reproduction problem instructions reproduce issue going following plunker notice initial page button clicked navigates different child route passes object first request works press enter break motivation use case changing behavior working properly please tell us environment operating system osx el capitan ide visual code studio package manager npm angular version browser chrome language node aot issues node version", "num": "12498", "d": "10/2016"}, {"title": "missing wrong api links", "body": "angulario got report missing wrong api links let take example compilerclass shows class methods links pointing concrete methods read something like link nt remember api pages internal links like gives hand componentstillloadingerror gives probably point case injectable link noannotationerror double check link foohtml like wrong generated link case documentation generated point probably discover soon update internal link checker bug sure side io", "num": "12497", "d": "10/2016"}, {"title": "add test reflector host", "body": "note", "num": "12496", "d": "10/2016"}, {"title": "feat platformnode create platformnode based angularuniversal", "body": "create platformnode inside repository consumed angular universal packages would rely platformnode inside repository package tested updated alongside core maintained core team api generally compatible existing inside angularuniversal repository universal would ideally able change dependency point npm package cc jeffwhelpley igorminar", "num": "12495", "d": "10/2016"}, {"title": "angular router", "body": "submitting check one x current behavior router outlet child element loaded click hyperlink expected behavior able trigger load content routeroutlet name minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12494", "d": "10/2016"}, {"title": "selection mode", "body": "way use multiselection mode grid", "num": "12493", "d": "10/2016"}, {"title": "problems upgrade new angular router", "body": "submitting check one x current behavior start project npm start im getting upgrade following error please tell us environment repository angular version browser language typescript node aot issues", "num": "12492", "d": "10/2016"}, {"title": "ngmodel prevent rendering name attribute", "body": "submitting check one x current behavior adding ngmodel input element prevents rendering name attribute ngreflectname rendered expected behavior expecting rendered name attribute using ngmodel minimal reproduction problem instructions four input fields first row uses ngmodel second row motivation use case changing behavior selecting elements via name attribute possible fe tests please tell us environment angular version browser chrome language typescript", "num": "12491", "d": "10/2016"}, {"title": "configure ngdoc like configuration angular js", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12489", "d": "10/2016"}, {"title": "get routeparams service", "body": "submitting check one x current behavior ca nt get routeparams service expected behavior get routeparams serivce minimal reproduction problem instructions motivation use case changing behavior shift logic component service please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12488", "d": "10/2016"}, {"title": "angular adding active class router link best practice", "body": "using inputrouterlinkactive add active class specific url want specific link always active detect chunck word let explain defined route template works url adress bar match defined route adds active class main navigation contains rent link active want routed definition tap url nt add active link main navigation found following solution every time match rent current url set property rent object active adds active rent navigation template mentionned change follow works sure good practice question routerlinkactive want keep specific link active even user changes page alternative way using", "num": "12487", "d": "10/2016"}, {"title": "defaultvalueaccessor touch event missing child component using controlvalueaccessor implementation", "body": "submitting check one x current behavior touch event handled component used child component seems defaultvalueaccessor nt registered child components expected behavior child containing component marked touched angular minimal reproduction problem instructions implement component controlvalueaccessor like described prepare later full example based motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "12486", "d": "10/2016"}, {"title": "di working properly extending component", "body": "submitting check one x current behavior extend component di constructor another component declares exact constructor di latter component seem work look reproduction case minimal reproduction problem instructions service param null", "num": "12485", "d": "10/2016"}, {"title": "button disabled state reflecting underlying variable ie", "body": "submitting check one x current behavior written signalr client app angular client implements function invoked signalr hub function simply sets boolean variable invoked hub using variable control enabledisable state button works fine firefox chrome ie button enabledisable state reflect value variable expected behavior button enabledisable state reflect value variable browsers minimal reproduction problem instructions function signalr hub class aspnet web api app following service signalrtestservicets import injectable angularcore export class signalrwindow extends window injectable export class siglalrtestservice private hubproxy private hubconnection private connected false constructor private window signalrwindow thiswindow undefined thiswindow hubconnection undefined throw new error variable hubconnection function defined please check signalr scripts loaded properly thishubconnection thiswindow hubconnection thishubconnectionurl thishubproxy thishubconnectioncreatehubproxy myhub start void thishubconnectionstart done gt thishubproxyinvoke connect fail error gt throw new error failed start connection error stop void thishubconnectionstop thisconnected false get isconnected boolean return thisconnected appcomponentts import component oninit angularcore import siglalrtestservice signalrtestservice component moduleid moduleid selector myapp templateurl appcomponenthtml export class appcomponent implements oninit constructor private signalrtest siglalrtestservice ngoninit void startsignalr thissignalrteststart stopsignalr thissignalrteststop get connectedtoserver boolean return thissignalrtestisconnected template file appcomponenthtml please tell us environment angularjs signalr aspnet web api net framework windows ie", "num": "12484", "d": "10/2016"}, {"title": "feature request add automated unit testing like elmlang", "body": "submitting check one x current behavior unit tests written manually expected behavior basic unit testing would happen automatically might done integrating existing features elmlang using something similar perhaps typescript library sort minimal reproduction problem instructions na motivation use case changing behavior minimise manual implementation needed unit tests please tell us environment user operating systems windows ubuntu lts ide nonevim package manager nodenpm http server ubuntu lts angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser specific request language typescript xx node aot issues", "num": "12483", "d": "10/2016"}, {"title": "animations states change transition nt run", "body": "submitting check one x current behavior component following animations configuration works fine used rendering process correctly state name changes question styled accordingly however styles final state applied transition animation runs styles question jump one state next difficult debug styles applied issue html properties transitions run example question goes inactive active immediately receives styles active without animation expected behavior animate apply styles list questions depending whether active inactive shown yet styles applied transitions run minimal reproduction problem instructions using redux pattern store list question states subscribe active question number new data received amongst things list states referred view updated motivation use case changing behavior since state final styles applied successfully question would like know transition effects shown please tell us environment fedora webpack angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox language typescript node aot issues", "num": "12482", "d": "10/2016"}, {"title": "animations bordercolor persisted iossafari", "body": "submitting check one x current behavior animation bordercolor starts returns previous state expected behavior animation consistent rest platforms apply end state minimal reproduction problem instructions please tell us environment iossafari angular version browser ios safari language typescript", "num": "12481", "d": "10/2016"}, {"title": "allow child components host change detection", "body": "submitting check one x current behavior child components ca nt go back plunkr one root component three child components asynchronous interval changes variable updates every offset nt update view updates every offset nt update view effect updates every offset updates everything motivation use case changing behavior able child onpush component updates automatically asynchronous tasks angular version browser language typescript", "num": "12480", "d": "10/2016"}, {"title": "sugestion new decorator use ngmodel", "body": "needed make input directive uses found solution way complicated tharefor suggestion add param decorator like easy clean", "num": "12479", "d": "10/2016"}, {"title": "angular browser support tests", "body": "curious angular browser support result passed ie android reasons going fixed soon", "num": "12478", "d": "10/2016"}, {"title": "aot work forwardref", "body": "submitting check one x current behavior building code ngc would compile errors actually aot angular templates use upgrade adapter upgrade adapter aot support added get following error expected behavior code builds successfully minimal reproduction problem instructions running ngc project includes following main module import appcomponent appcomponent import commonmodule angularcommon import ngmodule forwardref angularcore import browsermodule angularplatformbrowser import upgradeadapter ngupgradeadapter angularupgrade export const upgradeadapter new ngupgradeadapter forwardref gt appmodule ngmodule imports browsermodule commonmodule declarations appcomponent export class appmodule motivation use case changing behavior able use angular ca nt use jit prod due csp please tell us environment debian jessie inside docker os x el capitan angular version browser na language typescript node aot issues", "num": "12475", "d": "10/2016"}, {"title": "routerevents observable per docs", "body": "submitting check one x current behavior also see find accepted answer address actual issue using standard approach filtering router events get error relevant code expected behavior would expect implementation stuff instead get error minimal reproduction problem instructions implementation sufficient reproduce strange thing nt seem reproduce cases find reason two projects configured nearly identically provide different results motivation use case changing behavior mainly docs say routerevents observable however logging shows subject please tell us environment windows intellij idea ultimate npm using w webpackwebpackdevserver angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome ff ie edge language typescript xx ts", "num": "12473", "d": "10/2016"}, {"title": "proposal ngcache decoratorsannotations amp zone cache implementation", "body": "submitting proposal please consider proposal maybe introduce something like current behavior absent therefore reinvented wheel expected behavior export class service private id string private expiration string zonecached result cached within working zone public getexpirationdate date return thisexpiration new date thisexpiration null injectable export class ngzoneglobalcache extends memorycache constructor inject ngzone ngzone ngzone super motivation use case changing behavior wan na get solution box angular version browser language typescript", "num": "12472", "d": "10/2016"}, {"title": "forms sync patchvaluesetvalue call async validator emits statuschanges", "body": "submitting check one x current behavior please see plnkr called form created statuschanges emits status value pending statuschanges events another valid statuschanges event fired later patchvalue wrapped settimeout behavior happened use setvalue set initial value new formcontrol value also found wrap patchvalue settimeout runasyncvalidator formssrcmodeljs run name control call patchvalue synchronously runasyncvalidator called several times expected behavior patchvalue cause two statuschanges events fired value pending valid minimal reproduction problem instructions please check plnkr open dev console see console logs find pending printed formvalid changed ui motivation use case changing behavior want track status form statuschanges event convenient access form instance directly please tell us environment operating system os x ei capitan package manager npm angular version browser chrome canary mac safari firfox language typescript xx typescript node aot issues", "num": "12470", "d": "10/2016"}, {"title": "angular router navigate another url reseting outlet", "body": "route different outlet called compose example clicking link url fine clicking url still outlet expecting solution found reset outlet like verbose annoying need every link better way", "num": "12469", "d": "10/2016"}, {"title": "clarify dependencies amp polyfills", "body": "submitting current behavior clear dependencies angular requires dependencies vaguely mentioned docs quickstart page browser support helps also adds confusion clear actually dependencies polyfills clear ones really required expected behavior state clearly required afaik almost angular dependencies really polyfills proposed added browsers future real dependency seems polyfills recommended really covers people include nt need also clear features required clarifying kind stuff would helpful preferably one page flick quickstart browser support pages finally figured actually needed include minimal reproduction problem instructions na motivation use case changing behavior help new developers please tell us environment angular version browser chrome language na node aot issues na", "num": "12468", "d": "10/2016"}, {"title": "improve error message injectable missing", "body": "submitting current behavior component dependency service b service b decorator defined vague error message thrown exact error message dependencies ca nt loaded error message given use barrel files order importexports adjusted thus thrown trying fix problem expected behavior specific error message like minimal reproduction problem instructions create service omit decorator service dependency least one service defined correctly import injectable angularcore oops forgot decorator export class someservice constructor private otherservice otherservice injectable export class otherservice someservice injected used plnkr angular quickstart reproduce problem service simply removed decorator console immediately shows error edit documentation mentioned injector throw noannotationerror link noannotationerror results motivation use case changing behavior precise error message would direct problem instantly problem could fixed matter seconds message exact dependencies ca nt resolved due importexport order barrel files took minutes stripping dependencies order checking noticed simple tiny mistake please tell us environment windows chrome systemjs module loader angular version upwards still problem browser web application crashes browsers chrome edge clearly show error console firefox however shows able find specific error message language typescript node aot issues", "num": "12467", "d": "10/2016"}, {"title": "aot subset typescript language undocumented", "body": "submitting check one x could either depending interpretation actual behavior ahead time compiler incompatible number syntactic semantic features directly manifest typescript find official documentation formal specification could find numerous related issues including demonstrates problem clearly closed entirely without justification assert based following assumptions regarding professionally produced product used millions developers new language subset undocumented best thing could find incomplete suggestions bottom unofficial webpack angular repo readme subset typescript language defined aot compiler introducing new language within large community developers writing per official recommendation typescript massive change programming language formal specification programming language informal introduction programming language tutorial diverging existing standard tools officially promoted requires justification expected behavior introduction new language subset accompanied official documentation introduction new language subset formally specified introduction new language subset accompanied introductory material goals language subset use cases target developer audience problems solves intended scope declared minimal reproduction problem instructions applicable motivation use case changing behavior able write correct code requires knowing language one writing tools must able support new language name completely unacceptable new language refer using name another language tell use environment angular version gt browser language typescript versions update added request language name numbered list items better reference", "num": "12465", "d": "10/2016"}, {"title": "suggestion create api formcontrol focus input", "body": "submitting check one x suggestion create api formcontrol would easily allow input focused without resort bringing renderer elementref motivation use case changing behavior could used widely either easily focus first input form rendered focus inputs invalid data entered", "num": "12463", "d": "10/2016"}, {"title": "extending directives code reuse feature request", "body": "submitting trying extend routerlink directive append prefix link state value shared service right simple way see copypaste existing code change needs tried several obvious solutions nt work would great official way reuse code", "num": "12460", "d": "10/2016"}, {"title": "initial page loading taking time", "body": "current behavior page rendering taking time initial load loading time taking sec rendering ui elements every page load expected behavior requirement load page seconds motivation use case changing behavior trying open another page parent page ui rendering taking time initial load taking sec rendering ui element every refresh script execution creating ui element taking time build copy using angular build using gulp systemjs build file angular version using latest version angular node npm typescripts please share ideas amp suggestion reducing loading time angular thank advance", "num": "12459", "d": "10/2016"}, {"title": "routing", "body": "hi trying build small small taking templates anonymouse template authuser template design routing table certain views use anonymous templates views use authuser template assist regard thanks phani", "num": "12458", "d": "10/2016"}, {"title": "windowlocationhref works schemas customelementsschema", "body": "bug report gt resolve added schema configuration ngmodule current behavior changing value property redirects page expected behavior changing value property redirect page please tell us environment windows angular cli angular version angular final browser chrome xx firefox xx language typescript", "num": "12457", "d": "10/2016"}, {"title": "rendereranimate play resets animation initial state finish", "body": "submitting check one x current behavior rendereranimate play called animation played back correctly immediately jumps initial state finished default option passed constructor webanimationsplayer webanimationsdriver effect due explicit call performed within webanimationsplayerdestroy expected behavior finished animations reset destructor webanimationsplayer minimal reproduction problem instructions end animation element jumps right back initial position motivation use case changing behavior since fill used webanimationsdriver default animationfillmode animation completes target element must styles set specified respective end keyframe please tell us environment vs code npm node angular aspnetcore angular version browser chrome opera language typescript", "num": "12456", "d": "10/2016"}, {"title": "feature add target output decorator restrict parent", "body": "submitting current behavior moment component wants communicate another component directly related use service since parent subscribe event emitted children means scenario like wants talk use service dirty combination viewchild creating service simple click manages color would silly one creates service deals everything inside every components subscribe needed way parent nt dozen services related like solution lot boiler plate change color also breaks principle least privilege bit maybe would nt want able subscribe specific event another option break components mini components words bigger components deal yet another service nt like solution think current behavior somewhat encourages instances proposing easy opinion cleaner service angular version", "num": "12455", "d": "10/2016"}, {"title": "buildsh hangs bash shell", "body": "submitting check one x current behavior execution buildsh hangs bash shell provided git windows script loops packages angular directory building turn hang occurs uglify called first package see warnings unreachable code nothing cursor running script bash debug mode confirms call uglify last made nodeexe memory usage stays low fluctuate issue gets weird got build complete yesterday resolve issue changing line downside get noise terminal nt hung single time tests seem pass afterward well soon change line back script hangs every time expected behavior new devs get buildsh reliably complete change nt committed maybe note added dev guide minimal reproduction problem instructions build windows using git windows bash shell need fixes prs get past problems motivation use case changing behavior removing obstacles way new contributors building project good please tell us environment windows git windows node npm angular version angular master days ago browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx na node aot issues node", "num": "12454", "d": "10/2016"}, {"title": "move static upgrade code angularupgradestatic", "body": "submitting check one x static upgrade code currently upgradesrcaot publicly exported treeshake compiler currently symbols exported via brings compiler code reexports removed additionally create separate bundle static upgrade published summary x export static upgrade code via x remove reexports document breaking change since last beta x create new umb bundle x add new entry point api guardian add new entry point angulario dgeni entry point list move source code design discussed person mhevery alexeagle", "num": "12452", "d": "10/2016"}, {"title": "emulated viewencapsulation issue css pseudo classes host", "body": "submitting check one x current behavior encapsulation enabled component css pseudo class perhaps every pseudo class applied host encapsulated incorrectly expected behavior expected compiled instead compiled minimal reproduction problem instructions reproduce create component attribute selector like apply input element like css definition component something like turn placeholder red webkit browsers check style generated angular input element motivation use case changing behavior anywhere css pseudo classes applied host please tell us environment macos sierra vscode npm ng live development server part angularcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node", "num": "12451", "d": "10/2016"}, {"title": "recommended selector multiple content projection slots styleguide", "body": "submitting check one x documentation amp styleguide guidance selector multiple content projection slots best practice selectors multiple content projection given following projected component would selector work ie class selectors given right change html something else styleguide recommend best practice", "num": "12450", "d": "10/2016"}, {"title": "bug css selector", "body": "also submit help request stackoverlow think bug also issue using host gt nt target childrens host like elements dynamically generated routeroutput targeted changes style adding ngcontentxxxxx please refer post stackoverflow details", "num": "12448", "d": "10/2016"}, {"title": "ngcontent component routeroutlet", "body": "current behavior routeroutlet inside component like want use inside appleftnavbar order split html loaded component router two things matter try ngcontent select doesnt work inside leave without selectors displays content properly whole component notsplit course even normal component routeroutlet problem expected behavior able use since loaded component routeroutlet transformed html since normal without select works expect able select well minimal reproduction problem instructions create angular component inside another component try use parent inside parent use nothing shown course defined elements appropriate classes used without selecting component shown normally please tell us environment angular version", "num": "12447", "d": "10/2016"}, {"title": "router reuse component switching different routes use component", "body": "submitting check one x current behavior route declarations point component different route matches component dom component thrown away issue component stays around component disposed expected behavior able change route anything long results component routeroutlet stay around reference comments minimal reproduction problem instructions example component never discarded reinited motivation use case changing behavior example could tab name want cue could something ngif number things please tell us environment macos sublimet text npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12446", "d": "10/2016"}, {"title": "router canactivate directive", "body": "hello need next routerlink directive new one directive routerlinkcanactivate wonder correctly could help please important dont want pass argument directive get info defined routing module file", "num": "12444", "d": "10/2016"}, {"title": "missing steps build angular", "body": "submitting check one x current behavior additional steps required build angular included developer guide could scripted windows linux npm install fail fsevents requires mac b windows buildsh fails tries create symlink polymer directory nt exist dependency managed bower bower install never ran script fail linux directory missing expected behavior planning submit pr provide script remove fsevents dependency mac update dev guide advise running better solutions welcome bower install run automatically npm install ran using packagesjson postinstall step minimal reproduction problem instructions install build windows following guide motivation use case changing behavior make life easier us noobs please tell us environment windows node npm bower lubuntu node npm angular version angular master browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx na node aot issues", "num": "12443", "d": "10/2016"}, {"title": "router regular expression", "body": "submitting check one x current behavior understand highly recommended use tool looking support spending hours search attempts solve issue nt option ask community angular way use regular expression determine component used option available anymore angularrouter struggling redirect urls right component instance ca nt distinguish two routes path categoryurl producturl goes productcomponent path categoryurl page goes categorycomponent expected behavior router provide way let us specify regular expressions define route activated minimal reproduction problem instructions motivation use case changing behavior keep organization urls specially keep existing seo ranking please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12442", "d": "10/2016"}, {"title": "loading xmb unsupported", "body": "submitting check one x current behavior compiling app jit aot using xmb files throws error format unsupported successfully compile xlf files ngc p tsconfigaotjson localeja error unsupported xmbload workspacesitesitemaintypescriptnodemodules functiontranslationbundleload workspacesitesitemaintypescriptnodemodules workspacesitesitemaintypescriptnodemodules directivenormalizernormalizeloadedtemplate workspacesitesitemaintypescriptnodemodules directivenormalizernormalizetemplatesync workspacesitesitemaintypescriptnodemodules directivenormalizernormalizedirective workspacesitesitemaintypescriptnodemodules workspacesitesitemaintypescriptnodemodules arraymap native workspacesitesitemaintypescriptnodemodules arraymap native compilation failed expected behavior xmb files would supported compilation similar xlf files supported minimal reproduction problem instructions attempt use xmb files show behavior code deserializer shows unsupported motivation use case changing behavior would like use xmb files please tell us environment mac intellij angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues previous ticket xmb support indicates xmb files fully supported extraction compiling app extraction works compiling app appears still unsupported", "num": "12441", "d": "10/2016"}, {"title": "missing path rewrite redirects using hashlocationstrategy", "body": "submitting current behavior using changing directly path redirects correctly handled correct component loaded path hash rewritten accordance final route reached redirecting contrast path rewritten navigating anchor cases using expected behavior path hash always reflect route reached following redirects minimal reproduction problem instructions see plunkr open preview separate window may want cut paste plunkr url real browser tab edit copy url section anchor paste address bar correct component loaded path remains instead rewritten click section anchor path instead rewritten correctly motivation use case changing behavior consistency behavior path strategy links clicked also rewriting final location may important seo angular version browser chrome language", "num": "12438", "d": "10/2016"}, {"title": "matrix url bug use bracket param value", "body": "example url want use bracket search query angular encode bracket parse like auxiliary route found routeroutlet name value", "num": "12436", "d": "10/2016"}, {"title": "reduced visibility template variables", "body": "submitting check one x current behavior right template variables visible whole template two template variables sibling elements named way get expected behavior without changing current behavior could modifier argument adjust scope template variable sure syntactically would make sense idea also syntax local namespace could default somehow think guys decide far experienced minimal reproduction problem instructions fails compile motivation use case changing behavior know could name differently variables clean specially kind represent thing attempting write sort business templates people could use functional language clearer easier understand normal people besides could expect collisions names variables big templates people wondering variable named even refactoring templates could cause unexpected results picking another component variable one expected think kind makes sense", "num": "12434", "d": "10/2016"}, {"title": "error lazy loading", "body": "submitting check one x current behavior angular implementing lazy loading modules root parent child get found child module calling lazy loading root approutests export const approutes routes ngmodule export default class fleetmodule parent routes child module const uarouterconfig path component uacomponent children path uafunctionaladmin component uafunctionaladmin path uajobroleadmin component uajobroleadmin ngmodule imports commonmodule routermoduleforchild uarouterconfig declarations uacomponent uafunctionaladmin uajobroleadmin providers export class uamodule expected behavior implement lazy loading minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12433", "d": "10/2016"}, {"title": "error loadchildren routing webpack build", "body": "problem routing angular using webpack build core versions angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularupgrade angularinmemorywebapi try use webpack core versions lazyloading route configuration error system defined configurewebpack files use try use webpack core versions versions webpack already available error load module fix error using lazyloading unittesting components working asume issue cases loadchildren lazyloading route configuration shure suggestions error common fix error something wrong webpack", "num": "12432", "d": "10/2016"}, {"title": "exception call node module failed error typeerror read property selectormatcher undefined", "body": "submitting check one x current behavior recent update getting error bundling packages webpack exception call node module failed error typeerror read property selectormatcher undefined object c usersjohn expected behavior nt expect error bundling packages minimal reproduction problem instructions reproducable following dependencies packagejson net core starter template downloaded name version dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter typesnode aspnetprerendering aspnetwebpack bootstrap css cssloader exposeloader extracttextwebpackplugin fileloader isomorphicfetch jquery preboot rawloader rxjs styleloader tostringloader tsloader typescript urlloader webpack webpackexternalsplugin webpackhotmiddleware webpackmerge webpacknodeexternals zonejs devdependencies typesjasmine copywebpackplugin cssloader exportsloader exposeloader fileloader htmlwebpackplugin importsloader istanbulinstrumenterloader jsonloader karma karmachromelauncher karmacoverage karmajasmine karmaphantomjslauncher karmasourcemaploader karmawebpack phantomjs phantomjspolyfill protractor rawloader reflectmetadata remapistanbul rimraf styleloader tshelper tsloader tsconfiglint tslint tslintloader typedoc typescript typings urlloader webpack webpackdevserver", "num": "12431", "d": "10/2016"}, {"title": "", "body": "submitting check one x current behavior version include angularformssrcdirectivesnumbervalueaccessor generated factories include gendirnodemodules angular file missing expected behavior compiling angular version language typescript node aot issues", "num": "12428", "d": "10/2016"}, {"title": "\u7f51\u7ad9\u7684\u4e2d\u6587\u7248\u6709\u4e2a\u5f88\u5c0f\u7684\u8bcd\u8bed\u9519\u8bef", "body": "\u7f51\u5740 \u9519\u8bef \u7f51\u7ad9\u4e2d\u7684 \u6dfb\u52a0\u4e00\u4e2a\u540d\u53eb getheros \u5efa\u8bae\u4fee\u6b63\u4e3a \u6dfb\u52a0\u4e00\u4e2a\u540d\u53eb getheroes es", "num": "12426", "d": "10/2016"}, {"title": "unexpected behavior custom validator class", "body": "hi submitting current behavior registration form created standard angular form builder mentioned turns validator also class long implements validate c formcontrol method hence possible inject service acess remote data validator created validator import injectable inject forwardref angularcore import validator formcontrol angularforms useradapter wrapper around angular http retrieves data using every validation call return random successfail result code throws error browser error occured angular actually calls form control passed constructor instead provided useradapter service try use function instead class everything works fine tell angular use validation class properly thanks advance expected behavior expect angular call method custom class use function returned method form validation angular version thanks advance", "num": "12423", "d": "10/2016"}, {"title": "build failure windows caused bash script creating symlink", "body": "submitting current behavior building angular windows throws following error error error githubangularmodules find module facadelang missing symlink facade upgradesrc developer guide advises running scriptswindowscreatesymlinkssh create symlinks required reads packagestxt get list folders need links text file folder listed line upgradesrc folder last entry file however line end n bash script fails read newline could added packagestxt file likely someone could delete future bash script updated work either way expected behavior build proceed without error minimal reproduction problem instructions clone angular repo windows fixed yet add line benchpresssrc top scriptswindowspackagestxt run createsymlinkssh script observe symlink facade angularupgradesrc following instructions developer guide run buildsh see error listed motivation use case changing behavior broken best fix way issue nt likely reintroduced please tell us environment windows bash scripts run came git installation angular version angular master branch forked today browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx na node aot issues na", "num": "12422", "d": "10/2016"}, {"title": "build failure windows caused missing symlink facade benchpresssrc", "body": "submitting current behavior building angular windows throws following error error githubangularmodules find module facadelang missing symlink facade benchpresssrc developer guide advises running scriptswindowscreatesymlinkssh create symlinks required text file script uses input decide create missing entry benchpresssrc expected behavior build proceed without error minimal reproduction problem instructions clone angular repo windows run createsymlinkssh script observe symlink facade angularbenchpresssrc following instructions developer guide run buildsh see error listed motivation use case changing behavior broken please tell us environment windows bash scripts run came git installation angular version angular master branch forked today browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx na node aot issues na", "num": "12420", "d": "10/2016"}, {"title": "bind rowspan td", "body": "submitting check one x current behavior spread produces error unhandled promise rejection template parse errors ca nt bind rowspan since nt known property td expected behavior valid property html minimal reproduction problem instructions motivation use case changing behavior data parentchild relationship children need rowspan equal number children plus sometimes children td times one cell combined parent children bug way know present since using angular bind data table please tell us environment angular version browser language typescript xx node aot issues", "num": "12419", "d": "10/2016"}, {"title": "router enhancement support lazy component loading path defined route config", "body": "good feature support lazy loading component router try use angular router application application big want support lazy loading component path defined routes application boots quickly browser came approach support currently define route like way given change component property support string value also given load user accesses particular path already loaded way support lazy loading component loadchildren meaning good loading children component children need information support please get back thanks", "num": "12415", "d": "10/2016"}, {"title": "routing query parameters canload guard available", "body": "submitting check one x current behavior try implement simple app silent login via auth token sessionid sessionid provided fallback login via usernamepassword try navigate component synchronously loaded module protected canactivate guard activatedroutesnapshot query parameters try navigate lazily loaded component prtoected canload guard canload guard access query parameter amp parameter matrix notation browser address string activatedroutesnapshot parameter expected behavior expect query parameters matrix notation parameters available canload guard via activatedroute parameter minimal reproduction problem instructions possibility use many html pages prepared modified sample heroes app tutorial modified sample found load prepare app ng serve call browser use link first link works expected login page links must processed without login page login page displayed call app links sample app want proceed without loginscreen please tell us environment angularcli windows vs code angular version", "num": "12411", "d": "10/2016"}, {"title": "router canactivatechild guards triggered every descendant", "body": "submitting check one x current behavior guard attached route nonleaf children upon activation guard fire multiple times every generationlevel new activated route chain expected behavior naive developer would expect guard fire multiple times single activation sequence unless defined multiple parts tree minimal reproduction problem instructions see routes trigger root guard twice visible log triggers shown route would trigger times motivation use case changing behavior sideeffectladen guard operations unexpected extra runs problematic also probably never problem practice performance better branch n childguarded nodes current behavior runs quadratic checks instead linear single childguarded root runs linear rather constant please tell us environment mac osx atom npm webpack served via webpackdevserver dev amp nginx prod angular version browser tested chrome relevant language typescript", "num": "12410", "d": "10/2016"}, {"title": "testbedconfiguretestingmodule performance issue", "body": "submitting check one x current behavior importing modules slow tests substantially shared module parts lots components use including third party library two convenient import module rather cherry pick tests however testing small component yesterday saw test bootstrap taking two whole seconds cherrypick dependencies make tests run reliably expected behavior performant minimal reproduction problem instructions plunker go comment uncomment import observe time takes test run seeing jump slower multiply cases simple test takes whole second make shared module larger real problems motivation use case changing behavior slow tests hurt tdd workflow slow enough tests disconnect karma browser fail suite please tell us environment vscode webpack angular version yes browser locally phantomjs plunk tested chrome language typescript though tests transpiled prior running naturally note even write wonder reasonable expectation large modules go testbed quickly maybe something wrong architecturally use multiple smaller shared modules one big one etc however tests timeconsuming enough without track every individual dependency complex component get started", "num": "12409", "d": "10/2016"}, {"title": "documentation describe relation inject async functions testing", "body": "submitting check one x current behavior documentation describes use separately interact one users using found thread topic unsure information even date apparently one use inject instead async works tests least may expected behavior document relationship two motivation use case changing behavior async tests need get injected services many ways thing right vs vs slightly different", "num": "12407", "d": "10/2016"}, {"title": "way load different javascript different component", "body": "get way also load javascript files like css file component section though oon typescript angular", "num": "12406", "d": "10/2016"}, {"title": "default inputs values structural directives reset null", "body": "current behavior default input values structural directives reset null trying set default value input structural directive value reset null example js export class showtemplatedirective input showtemplate true constructor private templateref templateref private viewcontainer viewcontainerref ngoninit consolelog thisshowtemplate thisshowtemplate thisviewcontainercreateembeddedview thistemplateref else thisviewcontainerclear case showtemplate variable null true html true expected behavior variable needs set default value value supplied minimal reproduction problem instructions plunker", "num": "12404", "d": "10/2016"}, {"title": "unit test error ngform", "body": "directive exportas set ngform using version done template component per lastet form app working fine unit testing getting error already included formsmodule ngmodule nt added anything specific form spec anything extra include spec files looking solution", "num": "12403", "d": "10/2016"}, {"title": "combination host sibling selectors broken emulated encapsulation", "body": "submitting check one x current behavior behavior combination host sibling selectors eg different expected behavior behavior emulated encapsulation shadow dom encapsulation minimal reproduction problem instructions angular version browser chrome", "num": "12402", "d": "10/2016"}, {"title": "required checkbox inside form validating properly", "body": "submitting check one x current behavior checkbox inside form required attribute unchecked validation passing submit button always enabled unchecked field code inside form tag like expected behavior input required validation pass case button disabled minimal reproduction problem instructions able reproduce behavior even plunkr motivation use case changing behavior example use case terms conditions acceptance user accept check time please tell us environment el capitan macos atom npm browser sync angular version tried browser tried chrome probably browsers language typescript node aot issues", "num": "12401", "d": "10/2016"}, {"title": "using clearinterval error timeoutclose function", "body": "submitting check one x current behavior create interval setinterval try clear clearinterval expected behavior interval would cleared minimal reproduction problem instructions inside angular component class method thissessionnaginterval setinterval gt open modal consolelog nag em thisauthservicepromptsessiontimeoutbehaviornext startnagseconds motivation use case changing behavior displaying nag screen letting user know session going expire soon please tell us environment centos intellij webpack webpack dev server angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues error elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemacrotask eval eval eval settimeout eval createnamedfn eval currentusercomponentmanagesessionreminder eval safesubscribereval next safesubscribertryorunsub eval safesubscribernext eval subscribernext eval subscribernext eval behaviorsubjectsubjectnext eval behaviorsubjectnext eval authservicedonotifyloggedinstatus eval eval eval zonedelegateinvoke eval objectoninvoke eval zonedelegateinvoke eval zonerun eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval zoneawarepromisethen eval eval eval new zoneawarepromise eval authservicelogin eval currentuserresolveserviceresolve eval eval eval eval eval foreach eval waitformap eval preactivationresolvenode eval preactivationrunresolve eval mergemapsubscribereval project mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval arrayobservablesubscribe eval arrayobservableobservablesubscribe eval observablesubscribe eval mergemapoperatorcall eval observablesubscribe eval observablesubscribe eval reduceoperatorcall eval observablesubscribe eval observablesubscribe eval mapoperatorcall eval observablesubscribe eval objectsubscribetoresult eval mergemapsubscriberinnersub eval mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval everysubscribernotifycomplete eval everysubscribercomplete eval everysubscribersubscribercomplete eval mergeallsubscribercomplete eval mergeallsubscribersubscribercomplete eval mapsubscribersubscribercomplete eval mapsubscribersubscribercomplete eval arrayobservablesubscribe eval arrayobservableobservablesubscribe eval observablesubscribe eval mapoperatorcall eval observablesubscribe eval observablesubscribe eval mergealloperatorcall eval observablesubscribe eval observablesubscribe eval everyoperatorcall eval observablesubscribe eval objectsubscribetoresult eval mergemapsubscriberinnersub eval mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval objectsubscribetoresult eval mergemapsubscriberinnersub eval mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval lastsubscribercomplete eval lastsubscribersubscribercomplete eval mergeallsubscribernotifycomplete eval innersubscribercomplete eval innersubscribersubscribercomplete eval mapsubscribersubscribercomplete eval mapsubscribersubscribercomplete eval catchsubscribersubscribercomplete eval catchsubscribersubscribercomplete eval firstsubscriberemitfinal eval firstsubscriberemit eval firstsubscribertrypredicate eval firstsubscribernext eval firstsubscribersubscribernext eval mergeallsubscriberoutersubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval firstsubscriberemitfinal eval firstsubscriberemit eval firstsubscribertrypredicate eval firstsubscribernext eval firstsubscribersubscribernext eval mergeallsubscriberoutersubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval firstsubscriberemitfinal eval firstsubscriberemit eval firstsubscribertrypredicate eval firstsubscribernext eval firstsubscribersubscribernext eval mergeallsubscriberoutersubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval catchsubscribersubscribernext eval catchsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval objectsubscribetoresult eval mergemapsubscriberinnersub eval mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval scalarobservablesubscribe eval scalarobservableobservablesubscribe eval observablesubscribe eval mergemapoperatorcall eval observablesubscribe eval observablesubscribe eval catchoperatorcall eval observablesubscribe eval objectsubscribetoresult eval mergeallsubscribernext eval mergeallsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval arrayobservablesubscribe eval arrayobservableobservablesubscribe eval observablesubscribe eval mapoperatorcall eval observablesubscribe eval observablesubscribe eval mergealloperatorcall eval observablesubscribe eval observablesubscribe eval firstoperatorcall eval observablesubscribe eval observablesubscribe eval catchoperatorcall eval observablesubscribe eval observablesubscribe eval mapoperatorcall eval observablesubscribe eval objectsubscribetoresult eval mergemapsubscriberinnersub eval mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mapsubscribernext eval mapsubscribersubscribernext eval mergemapsubscribernotifynext eval innersubscribernext eval innersubscribersubscribernext eval eval eval zonedelegateinvoke eval objectoninvoke eval zonedelegateinvoke eval zonerun eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval resolvepromise eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval resolvepromise eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval zoneawarepromisethen eval runtimecompilercompilecomponents eval runtimecompilercompilemoduleandcomponents eval runtimecompilercompilemoduleasync eval moduleboundcompilercompilemoduleasync eval mergemapsubscribereval project mergemapsubscribertrynext eval mergemapsubscribernext eval mergemapsubscribersubscribernext eval eval eval zonedelegateinvoke eval objectoninvoke eval zonedelegateinvoke eval zonerun eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval resolvepromise eval eval eval eval eval zonedelegateinvoke eval objectoninvoke eval zonedelegateinvoke eval zonerun eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval resolvepromise eval eval eval zonedelegateinvoketask eval objectoninvoketask eval zonedelegateinvoketask eval zoneruntask eval drainmicrotaskqueue eval elapsed ms wed oct mdt objectonscheduletask eval zonedelegatescheduletask eval zoneschedulemicrotask eval scheduleresolveorreject eval resolvepromise eval eval eval webpackjsonpcallback", "num": "12400", "d": "10/2016"}, {"title": "flow type information across ngforlike directives", "body": "issues supersedes replaces proposals problem assume following code example personlast personfirst class myexample people person class person first string last string angular generated code type checked type generated type would also allow angular language service supply completions expression interpolations solution change type take type parameter change type change type modify code generation flow type input bindings type parameters modified would look like ts export class ngforrow constructor public implicit public index number public count number directive selector ngfor ngforof export class ngfor implements docheck onchanges input ngforof input ngfortrackby trackbyfn private differ iterablediffer null constructor private viewcontainer viewcontainerref private template templateref gt private differs iterablediffers private cdr changedetectorref input set ngfortemplate value templateref gt value thistemplate value similar example could generated flows types input properties type parameters ts user provided types class person first string last string class mycomp items string people person types representing relavant parts corresponding types angular class appview context interface templateref create context viewref contexttype interface viewref context class ngforrow implicit index number class ngfor constructor template templateref gt assume template index personfirst auto generate following function captures type relation property function ngfortemplate templateref gt return undefined function ngfort return undefined global variables flow type information var comp mycomp template row constructed var template ngfortemplate comp amp amp comppeople var row typeof templatecontexttype class rowview extends appview var rowview new rowview note type person people var person rowviewcontext implicit correct ngfor constructed var ngfort comp amp amp comppeople var ngfor new ngfor template try typescript playground", "num": "12398", "d": "10/2016"}, {"title": "change detection silently fails running outside zones", "body": "submitting check one x current behavior change detections running outside zones effect expected behavior either change detection succeed explicit error thrown minimal reproduction problem instructions demo cause event occur outside zonejs attempts effect changes resulting event angular component note also happens change detection strategy motivation use case changing behavior general events happen outside zones situation came result listening events video element apparently zonejs wrap properly wrap situation could also easily happen first thirdparty module initializes routine first imported events fired would substantially difficult debug happened deep party dependency please tell us environment irrelevant osx sierra vs code angular version browser language", "num": "12397", "d": "10/2016"}, {"title": "autocomplete nt trigger updates using safari", "body": "submitting check one x current behavior autocomplete form field using safari expected behavior update ngmodel variables autocomplete fires minimal reproduction problem instructions motivation use case changing behavior works chrome firefox please tell us environment macos el captian angular version browser safari", "num": "12395", "d": "10/2016"}, {"title": "reduced visibility template variables", "body": "submitting check one x current behavior fails expected behavior kind understand motivation behind seems bit inconsistent fact local variables structural directives course visible template perhaps global template variables visible whole template element template variables visible element children would definitely help writing functional templates", "num": "12394", "d": "10/2016"}, {"title": "exception thrown http response", "body": "current behavior exception thrown http response case request contains responsetype responsecontenttypejson error failed read responsetext property xmlhttprequest value accessible object responsetype text json exception thrown xhrconnection see var body ispresent xhrresponse xhrresponse xhrresponsetext xhrbackendts case xhrresponse null xhrresponsetext even exist expected behavior response attempted parsed case despite invalid responsecontenttype angular version language typescript", "num": "12393", "d": "10/2016"}, {"title": "candeactivate called children parent routes params change", "body": "submitting check one x current behavior candeactivate guard called child components params change parent route given general layout page user param change user maintaining subroute userform candeactivate called put path method called however receive first parameter method component expected behavior expected behavior would either implement similar called subroutes parent route changes children calls trigger parent route changes another alternative would make usage similar way worked directly implemented class minimal reproduction problem instructions minimal plunker demonstrating issue navigate user form currently subroute brevety could imagine routes attached route click another user want still maintain editing page however called motivation use case changing behavior check user navigating away unfinished form please tell us environment macos ubuntu vscode npm rails server angular version browser language", "num": "12392", "d": "10/2016"}, {"title": "feature request angular aot compilation without bundling", "body": "submitting check one x current behavior currently forced aot compile javascript bundle optimized size makes sense classical web scenario please tell us environment running server running site employs multiple angular applications per page example app menu app form please tell us requested feature currently development using systemjs load modules one one however overhead starting app extreme around minimum thinking aot would allow us compile views could drop angularcompiler completely thereby gain huge performance size reduction however aot currently setup bundling rollup bundling entrypoint file either hack entry point includes apps get gigantic file lots unused code per pageload make rollupconfig per app setup build builds app turn giving us bundle per app means going lot redundant code since library code included bundle like possibility simply compiling templates components typescript files load needed thus removing need runtime transpiler still keeping modular nature typescript personally tried getting ngfactory files work systemjs neverending battle even get work simple things since suddenly wants use sourcefiles angular components instead umdjs bundles meaning transpile sourcefiles runtime dumb counterproductive whole point aot comments information could help course welcomed angular version node aot issues", "num": "12390", "d": "10/2016"}, {"title": "feature request make angular safe use firefox addon", "body": "developing quite large browser extensionaddon chrome firefox outlook based angularjs last release got feedback firefox addon reviewers stated previous reviews angular longer approved reject version disable entire listing please retract submission avoid disabling entire listing old version work please use another library like reactjs next submission anybody information able get infofmation exactally problem seems enough love angular moving another framework would make sense already put years developer man years application", "num": "12388", "d": "10/2016"}, {"title": "exception uncaught promise typeerror read property visitexpression undefined", "body": "submitting check one x current behavior expected behavior show page correctly minimal reproduction problem instructions login component motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "12387", "d": "10/2016"}, {"title": "ngselectngoptions selecting ngmodel data type number", "body": "bug report current behavior ngoptions track data type number ngmodel data type number every time selectdropdown initialized dropdown created set default value ngmodel understand might key option already converted string workaround removing track leaves option value data type expected behavior since id data type number angular able pick ngmodel default value minimal reproduction problem instructions id motivation use case changing behavior legacy system really hard change data type string since behavior changes angular drop unable select default value change without track need change core system filterremove data type please tell us environment linux centos angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web", "num": "12385", "d": "10/2016"}, {"title": "docs doc pages link testsspec files", "body": "submitting check one x current behavior currently docs link code via exported defined eg expected behavior would really useful include link testspec file well since often best way see code work minimal reproduction problem instructions motivation use case changing behavior better docs please tell us environment vs code angular cli angular version latest browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12384", "d": "10/2016"}, {"title": "candeactivate called children parent routes params change", "body": "submitting check one x current behavior candeactivate guard called child components params change parent route given general layout page user param change user maintaining subroute userform candeactivate called put path method called however receive first parameter method component expected behavior expected behavior would either implement similar called subroutes parent route changes children calls trigger parent route changes another alternative would make usage similar way worked directly implemented class minimal reproduction problem instructions minimal plunker demonstrating issue navigate user form currently subroute brevety could imagine routes attached route click another user want still maintain editing page however called motivation use case changing behavior check user navigating away unfinished form please tell us environment macos ubuntu vscode npm rails server angular version browser language", "num": "12382", "d": "10/2016"}, {"title": "form construction component lifecycle sometimes breaks", "body": "submitting current behavior inputs change component create form using custom controlvalueaccessors break expected behavior break minimal reproduction problem instructions enter random value input box hit button enter another random value input box please tell us environment webstorm macos systemjs angular version browser probably sure chrome language", "num": "12381", "d": "10/2016"}, {"title": "enhance error messages category missing", "body": "submitting check one x kinda middle bug enhancement leave guys decide current behavior pipe fed pluralization map misses target category would result hardtodebug error message expected behavior either fallback category present informative message would point developer place problem fixed minimal reproduction problem instructions plunker run open console see ton errors usual starting neither given clues motivation use case changing behavior make easier debug errors please tell us environment windows npm webpack webpackdevserver although nt think matters angular version browser language typescript", "num": "12379", "d": "10/2016"}, {"title": "forms async validators change detection component using onpush", "body": "submitting check one x current behavior async validator http request return observable completes using correctly changes nt show actual error observable completes stays stuck blur input however work remove component also apart problem need ing validation observable confusing line expected behavior cd working properly angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx ts", "num": "12378", "d": "10/2016"}, {"title": "router guards fired order reusedbutchanged nodes", "body": "submitting check one x current behavior navigating routes reuse nodes ie different urls triggering route config branches guards fired order specifically guards reused node called guards checked expected behavior guard order universally deactivations leaf root activations root leaf minimal reproduction problem instructions see changing nodes navigation ie aa bb guards called order deactivate branch activate branch deactivate leaf activate leaf order deactivate leaf deactivate branch activate branch activate leaf motivation use case changing behavior maintaining consistent ordering guards deactivating service tied parent route service tied child could break programmers expectations flow please tell us environment mac osx atom npm webpack served via webpackdevserver dev amp nginx prod angular version plunker demonstrates browser tested chrome relevant language typescript relevant", "num": "12377", "d": "10/2016"}, {"title": "aot compilation fails requirejs webpack module bundler", "body": "added aot compilation webpack projectwe using require js template stylesheet files added bundle file webpack project add aot compilation error requirejs used places want reqirejs aot compilation use reqirejs aot compilation time", "num": "12376", "d": "10/2016"}, {"title": "router candeactivate guards fire componentless routes", "body": "submitting check one x current behavior componentless routes specifically cases treenode reused trigger guards always trigger underlying cause seems behavior conditional router deactivation componentless routes handled calling however afaict parent outlet map going map outlet directly component contains effectively skipping intermediary routes without components never calling cleanupdeactivation expected behavior completely certain intent guards apply components routes case activatedeactivate behavior probably symmetric either routes call navigated away componenthaving routes check guards highly partial first option could understand either argument noted another issue current routing documentation sounds like implying first option multiple guards every level routing hierarchy router checks guards first deepest child route top checks guards top deepest child route minimal reproduction problem instructions demonstration available difference two main routes component branch defined component merely dumb shell leaving component branch display shows leaving motivation use case changing behavior application different resources types need loaded unloaded server side resources mapped directly routing hierarchy since strict amp universal ordering natural put release logic deactivation guards however levels nt need components silly create empty shell components everywhere support deactivation please tell us environment mac osx atom npm webpack served via webpackdevserver dev amp nginx prod angular version plunker demonstrates browser tested chrome relevant language typescript relevant", "num": "12375", "d": "10/2016"}, {"title": "datepipe treat date datetime", "body": "submitting check one x current behavior brst locale using format string output previous day day used expected behavior expect using datepipe format string output date format changed minimal reproduction problem instructions run plnker look two dates showed first one show wrong formated date second one shows date right format look variables see difference first second one space end string think space makes pipe think input format first date without space processed datetime time using brst utput shows previous day motivation use case changing behavior application showing wrong dates please tell us environment ubuntu atom npm angularcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version firefox version language typescript xx node aot issues node", "num": "12373", "d": "10/2016"}, {"title": "testability remains unstable using requestanimationframe ngzone always pending macro tasks", "body": "submitting check one x current behavior testability service remain unstable using requestanimationframe zone always pending macro tasks leaves testability unstable state expected behavior testability service return stable using raf minimal reproduction problem instructions clone branch contains example using threejs run npm install run test application run protractor configuration tests timeout testability returning unstable motivation use case changing behavior testability returns stable using raf running protractor test upgrading applications crucial please tell us environment windows atom npm node express angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview", "num": "12372", "d": "10/2016"}, {"title": "routerlink literal escapes semicolon character aux routes", "body": "submitting check one x current behavior create link like get output like expected behavior unescaped href minimal reproduction problem instructions go hoveroverinspect link see generated href motivation use case changing behavior routerlink used like feel like also possible specify auxiliary routes well wanted specify get around pending issues please tell us environment os osx sierra angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version firefox safari version language typescript xx typescript node aot issues", "num": "12371", "d": "10/2016"}, {"title": "aux routerlink definition inside routeroutlet fails", "body": "submitting check one x current behavior specify routerlink inside primary home produces link like outside primary produces link like creates different link depending location button clicking link nt take account section inside outlet expected behavior clicking button left open account section minimal reproduction problem instructions go click button left nt go account clicking exact button top right menu motivation use case changing behavior inside primary route want open account section right hand side feel like able pass object saying want account load right outlet please tell us environment os osx sierra angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version firefox safari version language typescript xx typescript node aot issues", "num": "12369", "d": "10/2016"}, {"title": "date pipe handle empty date string", "body": "submitting check one x current behavior currently usecase iterating data create table one fields optional date field value empty string ie currently invalid argument error occurs error uncaught promise error error app class app inline caused invalid argument pipe datepipe expected behavior would expect date pipe return empty string ignore processing empty string passed date pipe minimal reproduction problem instructions motivation use case changing behavior optional date fields use date pipe please tell us environment operating system windows ide webstorm package manager npm angular version browser firefox ie language typescript", "num": "12368", "d": "10/2016"}, {"title": "css html supplied external source ie firebase applying", "body": "submitting check one x current behavior css compiled stylesbundlejs user sees hello world expected behavior css compiled stylesbundlejs user sees hello world minimal reproduction problem instructions store html content external cmscdn retrieve html script mycomponentcomponentts export class mycomponent myhtml hypothetical html returned cdnexamplecomhtml using firebase use case css mycomponentcomponentcss foo fontstyle italic html mycomponentcomponenthtml rendered html less ngreflect attr hello world motivation use case changing behavior css dynamic html applied whether html compiled component template retrieved external source please tell us environment os os x el capitan darwin ide atom typings npm http server default dev server contained angularcli angular version ng cli browser browsers language tsc node aot issues attached screenshot see use case unordered list receiving css html content retrieved firebase db component css file contains rule reset css applying ol ul liststyletype none initial page load ulrequirements liststyletype disc edit added plunkr example", "num": "12367", "d": "10/2016"}, {"title": "abstractcontrol enabledisable pass emitevent thisupdateancestors", "body": "submitting check one x current behavior enablingdisabling descendant emits new value stream regardless value passed object parameter expected behavior new object emitted valuechanges minimal reproduction problem instructions create form controls subscribe form valuechanges stream function disable second control based value first control causes valuechanges emit next object motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx language typescript node aot issues similar issues", "num": "12366", "d": "10/2016"}, {"title": "page found vs amp", "body": "click navigation refreshing page getting error current behavior getting error amp expected behavior refresh page atleast navigate url minimal reproduction problem instructions motivation use case changing behavior get page maintaining state angular version version angularcommon language node aot issues", "num": "12365", "d": "10/2016"}, {"title": "feat currencypipe injectable default formatting code", "body": "submitting check one x current behavior default formatting code expected behavior default formatting code could overrided di motivation use case changing behavior developer usa country good enough economy system use usd common currency wan na setup local currency code please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues related", "num": "12364", "d": "10/2016"}, {"title": "ca nt bind ngpluralcase since nt known property ngcontainer", "body": "submitting check one x current behavior using ngpluralcase directive throw exception ca nt bind ngpluralcase since nt known property ngcontainer expected behavior work minimal reproduction problem instructions used documentation base build nt try aot fails browser maints check plnkr typescript import platformbrowserdynamic angularplatformbrowserdynamic import component ngmodule angularcore import browsermodule angularplatformbrowser component selector myapp template styles class appcomponent ngmodule imports browsermodule declarations appcomponent exports appcomponent bootstrap appcomponent class appmodule platformbrowserdynamic bootstrapmodule appmodule please tell us environment angular version browser chromium nt test others language typescript", "num": "12363", "d": "10/2016"}, {"title": "ca nt navigate login", "body": "submitting feature request check one x current behavior authguardservicets login expect app redirect page appmodulets registered routermoduleforroot login thismessage trying log login url stays also tried navigatebyurl tried give absolute url doesnt work think problems thisrouternavigate partners want authentication windows webstorm angular version browser chrome chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript typescript xx node aot issues", "num": "12362", "d": "10/2016"}, {"title": "\u82f1\u96c4\u6307\u5357\u8def\u7531\u7ffb\u8bd1bug", "body": "routes gt routeconfig", "num": "12361", "d": "10/2016"}, {"title": "lazy loading aux routes", "body": "submitting check one x current behavior created perfectly working example aux routing soon transform item primary outlet lazily loaded throws errors open aux route navigate away lazyloaded route aux route disappears throws following error expected behavior lazily loaded state opening aux route inside outlet navigating away keep outlet visible without errors thrown minimal reproduction problem instructions go land lazily loaded modulecomponent click right right outlet click left navigate away lazily loaded item primary outlet motivation use case changing behavior want navigate around site multiple outlets loading different items always visible unless navigate away please tell us environment os osx sierra angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version firefox safari version language typescript xx typescript node aot issues disable lazyloading commenting outin items inside appmodulets see works perfectly lazy loading getting different behaviour locally whole application lazy loaded items nt able reproduce inside plnkr yet locally outlet disappears previous navigating away item remains new item loaded time", "num": "12360", "d": "10/2016"}, {"title": "router query string always stringified", "body": "submitting check one x current behavior want implement custom url serializer router query string params urltree stringified expected behavior original query string values accessible custom serializer minimal reproduction problem instructions example serialized object export class propertysearch implements favorite relatedsearchobject fromgeo latlng ignorekeys number create custom serializer import defaulturlserializer angularrouter export class customurlserializer extends defaulturlserializer serialize tree urltree string pairs treequeryparams map p gt psecond always string eg array passed input serialize way motivation use case changing behavior want serialize recursively object query string custom object arrays etc simple keyvalue pairs default implementation router example way param started implemented customserializer urltreequerystring always stringified key string string key string implement custom logic instead stlike implement tostring methods obtain another result think better way thanks please tell us environment windows chrome angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12359", "d": "10/2016"}, {"title": "testing entry points hard configure via systemjs", "body": "current behavior currently modules contain core contents well testing content somewhat structural hack leads unecessary complexity comes module loading publishing library bundle package always consist one single entry module current structure case modules core content entry point testing need rely mapping top level paths would look something like could already lead path mapping resolution issues depending module loading system since denormalized subpath pointing different bundle also noticed angular module contains file root folder next import adding confusion expect expected behavior know lot module overhead would nt make much sense extract testing separate packages way would following approach packages would structure path resolution would much simpler minimal reproduction problem instructions motivation use case changing behavior lot trouble mapping paths testing systemjs please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12358", "d": "10/2016"}, {"title": "ngmodel control registration template driven forms working custom components", "body": "submitting check one x x bug report gt search github similar issue pr submitting current behavior use custom component template driven form ngmodel control registration form work expected behavior custom components ngmodel working like native inputs template driven forms minimal reproduction problem instructions plnkr see two controls first one native input second created component would expect controls control surrounding form covered angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "12357", "d": "10/2016"}, {"title": "asyncpipe nt update changedetectorrefdetach", "body": "submitting check one x current behavior nt update given component detached sure bug feature probably likely feature looking way change detection implemented seems like nt run detached also confirmed motivation full control change detection occurs using exclusively alike mvvm pattern working performancesensitive code full control inputs using fires change detection input changes also control event fires like click events degrades performance greatly rerunning unwanted change detection sweep every click opted detach completely stops working expected behavior way work around perhaps way make fire control event fires", "num": "12356", "d": "10/2016"}, {"title": "could reset animation state animations callbacks", "body": "submitting check one x current behavior set button initiate animation instance value trigger animation created animationdone function reset instant return initial state clicked button first time animation triggered clicked button second time animation triggered obviously animation state reset back initial state animationdone function sure issue related expected behavior animationdone function animation state reset back initial state case able run animation several times minimal reproduction problem instructions motivation use case changing behavior instant return initial state animate based animation able run animation several times please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12355", "d": "10/2016"}, {"title": "nthchild css selector broken", "body": "selector cssstyles like compiled result function nthchild selector broken angular shadowdom selector used wrong shadowdom selectors compiled styles tested angular", "num": "12354", "d": "10/2016"}, {"title": "aot generate code typechecks elvis operator", "body": "submitting check one x current behavior template cmp html foo crazypropertynamethatdoesntexist compiles aot compiler expected behavior type error aot compilation cc tbosch", "num": "12352", "d": "10/2016"}, {"title": "ca nt use css class constructor", "body": "css class constructor defined template alike got error line empty map object still object hence constructor successfully matched via selector fix issue need rename css class name tested angular source seems still actual lazy fill forms etc might close issue without investigating notice unobvious sideeffect takes time debugging code", "num": "12351", "d": "10/2016"}, {"title": "error property binding", "body": "submitting bug report check one x current behavior two components want pass object one component another first component appcomponent import component angularcore component selector approot template export class appcomponent myvar name john surname doe component import component input angularcore component selector template personname export class input person work error read property name undefined debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchangesinternal debugappviewappviewdetectchanges expected behavior code good error log angular version angular browser chrome", "num": "12349", "d": "10/2016"}, {"title": "optional parameters routes", "body": "submitting check one x nt see option supporting optional parameters nt want use query params current behavior right adding multiple routes component path test component component path test component component path test component component expected behavior want specify optional parameters something like path test component component optional nt want use query params minimal reproduction problem instructions module import ngmodule modulewithproviders angularcore import route routermodule angularrouter import browsermodule angularplatformbrowser import formsmodule angularforms components pipes import testcomponent landinglandingcomponent setup routing export const routes route path develop component testcomponent path develop component testcomponent ngmodule imports browsermodule formsmodule routermoduleforroot routes providers declarations testcomponent export class testmodule static forroot modulewithproviders return ngmodule testmodule would like route configuration change export const routes route path develop component testcomponent path develop component testcomponent motivation use case changing behavior annoying create multiple routes component different parameters option optional paramters would make dynamic please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "12347", "d": "10/2016"}, {"title": "unable lazy load protocol relatively source", "body": "submitting check one x current behavior using webpack instantiate server deliver static files django application also running within application attempting lazy load component tries load chunk http gives mixedcontent error within browser would love load chunk protocol relative would possible already doable asked stack overflow havent received answers yet expected behavior lazy load component retrieved relative protocol application either supplying flag main application automatically minimal reproduction problem instructions motivation use case changing behavior work mixed environment still pythondjango application must consume static resources external source static deployment server houses angular application builds please tell us environment os x webstorm pycharm pythondjango angular version angular browser language typescript node aot issues", "num": "12345", "d": "10/2016"}, {"title": "router provider found using lazy load mode provide component", "body": "submitting check one x current behavior trying provide service configured component declaration module use children loaded router module child modulecomponent instantiated fails service provided parent component nt found expected behavior possible inherit providers parent modules andor components minimal reproduction problem instructions see plunkr open console see error trying load app parent modulecomponent service provided route child module placed parent template motivation use case changing behavior use component scoped service children loaded router module please tell us environment windows nodejs angular version browser chrome language typescript node aot issues", "num": "12344", "d": "10/2016"}, {"title": "router resolve provide way handle errors obsevablespromises", "body": "submitting check one x current behavior application breaks observererror called expected behavior able handle errors observerspromises minimal reproduction problem instructions motivation use case changing behavior application needs load data api component service used call api calls observererror resource found breaks entire application app able survive api call error using data resolver router please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12343", "d": "10/2016"}, {"title": "candeactivate changes url even rejected", "body": "submitting check one x current behavior currently even official example candeactivateguard triggered url instantly changes even reject whatever promise attached guard expected behavior url change promise resolved minimal reproduction problem instructions motivation use case changing behavior confusing maybe even nt check could mess relative links please tell us environment using windows npm liteserver official quickstart guide angular version browser chrome language typescript", "num": "12342", "d": "10/2016"}, {"title": "router hashlocationstrategy use history api", "body": "router hashlocationstrategy use history api using router hashlocationstrategy results following error", "num": "12341", "d": "10/2016"}, {"title": "component style apply display", "body": "submitting check one x current behavior adds background style component adding css class browser inspector shows class applied style nt appeared screen way make work set display block bug tell wrong expected behavior want comportement component tag html elements minimal reproduction problem instructions motivation use case changing behavior please tell us environment macos visual studio code angularcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview test safari firefox language typescript xx typescript", "num": "12340", "d": "10/2016"}, {"title": "double compiling", "body": "want element attribute behaves like atribute ui bootstrap module created simple directive automatically puts atribute removes one like converts attributes compiles problem appears example element bootstrap design html appropriate controller since recompiles function executes twice click way change element attributes compilation", "num": "12339", "d": "10/2016"}, {"title": "animations transition nt support truefalse values trigger boolean", "body": "submitting check one x current behavior using animation component boolean trigger setting transition false gt true wo nt transition set gt transition work fine expected behavior using animation component boolean trigger setting transition false gt true specified transition minimal reproduction problem instructions motivation use case changing behavior since state supports true false values sake consistency transition support well please tell us environment macos sierra npm angular version browser language typescript node aot issues", "num": "12337", "d": "10/2016"}, {"title": "safari invalid argument pipe datepipe safari parse date offsets", "body": "submitting current behavior error shows safari expected behavior expected error show google chrome works fine minimal reproduction problem instructions go following plunkr safari google chrome chrome works perfectly plunkr motivation use case changing behaviour works safari well chrome please tell us environment max os x el capitan angular version browser chrome latest safari ios safari language typescript", "num": "12334", "d": "10/2016"}, {"title": "angular lts version", "body": "submitting check one x motivation use case changing behavior building rather large project take months years finish although really pleased semver versioning always list potentially breaking changes might big step know also thinking lts versions specially described halfyear cycle big changes try pick lts versions servers server side scripts anything work way still time focus developing app longer period angular important special really great tool looking point view one tools update new version would nt time anything else", "num": "12331", "d": "10/2016"}, {"title": "requestoptioins working", "body": "visit one api use angular visite api successfully successfully using jquery ajax visit api bearer authtoken", "num": "12329", "d": "10/2016"}, {"title": "datauri pdf always displaying object tag", "body": "current behavior trying display pdf object tag pdf nt always display expected behavior always display pdf minimal reproduction problem instructions created plunker behavior strange sometimes pdf displayed sometimes wo nt need upload many pdf files one see nt get displayed tried different versions pdf even stranger particular error nt find way consistently reproduce issue always get problem point computer pdf starts displayed pretty quickly fifth senventh honest sure angular issue chrome issue angular version browser chrome", "num": "12328", "d": "10/2016"}, {"title": "router ambiguity empty path child routes multiple outlets", "body": "submitting current behavior given following declared routes going path correctly loads components outlets however navigating renders two components sidebar outlet expected behavior would expect routeroutlet barring animations ever single component rendered given time would also expect outlet render best matching read explicit match based provided url though understand may interpretation explicitly provided outlet route override pathless child active route minimal reproduction problem instructions see plunker motivation use case changing behavior trying sidebar navigating page renders default content page however inside sidebar links clicked change content appears sidebar override url include sidebar specific path currently nt appear reasonable way given current router limitationbug please tell us environment angular version angular router browser appears language", "num": "12320", "d": "10/2016"}, {"title": "change detection working correctly upgrade adapter propagating changes descendent components", "body": "submitting check one x current behavior using change detection propagate properties descendent components zone either setters instead propagates changes zone causes problems child component performs asynchronous operation end async operation change detection trigger async changes seen dom note problem exist using place expected behavior using instead changes propagate child components zone correct bug happen minimal reproduction problem instructions reproduction plnkr explanation plnkr loaded click button see parent component appcomponent updates well child component synchronous value however see value changed async promise resolution updated dom note inside comment uncomment see correct behavior general steps reproduce create parent component passes input attribute child component click button anything parent component modify value propertyattribute create setter child component attribute resolve promise setter child component updates another child component property see property change dom motivation use case changing behavior angular app process upgraded angular one angular components trigger change angular component change detection breaks inside angular component tree children try asynchronously retrieve data server essentially nt see data populated angular components server requests complete zone nt trigger change detection please tell us environment os mac osx el capitan windows ide intellij visual studio code plnkr package manager npm angular version browser osx chrome osx safari internet explorer language typescript node aot issues", "num": "12318", "d": "10/2016"}, {"title": "ngmodel change binding input type number working", "body": "submitting check one x current behavior component following reflect change ui export class eznumfieldcomponent input index input element elementvalue onchange event expected behavior use clicks cancel confirm elemenetvalue changed back ui still shows number changed change inout type type text works fine keep type number change class force change detection like works export class numfieldcomponent input index input element constructor private cdref changedetectorref onchange event believe issue exists type checkbox minimal reproduction problem instructions motivation use case changing behavior consistency across input types please tell us environment osx web storm npm node angular version using quick start browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx node aot issues", "num": "12316", "d": "10/2016"}, {"title": "error running angular cordova ipad attempted assign readonly property", "body": "hey guys getting error try run angular cordova ios ipad run app xcode simulator ipad thanks unhandled promise rejection systemjs attempted assign readonly property execute invoke file run file file invoketask file runtask file drainmicrotaskqueue file g file file k file error loading file zone task promisethen value error systemjs attempted assign readonly property execute invoke file run file file invoketask file runtask file drainmicrotaskqueue file g file file k file error loading file systemjs attempted assign readonly property execute invoke run invoketask runtask drainmicrotaskqueue g k anonymous function consoleerror drainmicrotaskqueue g anonymous function k packagejson name clientapp version description client author scientific learning license unlicensed private true scripts tsc tsc tsc w tsc w clean gulp clean compile gulp compile test gulp test junittest gulp junittest start concurrent npm run tsc w gulp connect postinstall typings install dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap bootstrapsass corejs countupjs jquery odometer reflectmetadata rxjs systemjs shelljs tether typescript zonejs devdependencies concurrently del devbridgestyleguide gulp gulpclean gulpautoprefixer gulpconnect gulplogcapture gulpsass gulpsourcemaps gulptslint gulptypescript gulpwar gulpzip jasminecore jasminejquery karma karmachromelauncher karmacli karmajasmine karmajunitreporter gitssh git runsequence tslint typescript typings", "num": "12315", "d": "10/2016"}, {"title": "uncaught typeerror read property forroot undefined", "body": "current behavior app runtime error expected behavior bug minimal reproduction problem instructions installing angular material using npm command documentation imported placed expression module imports received error app runtime refers please tell us environment xampp apache windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx type script node aot issues", "num": "12314", "d": "10/2016"}, {"title": "forcing change detection unit testing onpush components", "body": "submitting check one x tbh sure bug feature request product ignoranceincomplete docs current behavior component using create test fixture via ca nt figure force change detection altering one input properties calling like would component nt seem also tried conjunction still luck however wrap onpush component another component testing purposes works expected expected behavior way force change detection onpush component changing inputs directly via component fixture rather via wrapper component minimal reproduction problem instructions testcomponent typescript import component input changedetectionstrategy angularcore component selector mytest template content changedetection changedetectionstrategyonpush export class testcomponent input content string testcomponentspects test fails w onpush passes default typescript import testbed angularcoretesting import angularplatformbrowser import testcomponent testcomponent describe test component gt beforeeach gt testbedconfiguretestingmodule declarations testcomponent render bound content within p element gt const fixture testbedcreatecomponent testcomponent fixturedetectchanges const p fixturedebugelementquery bycss p expect pnativeelement htmlparagraphelement innertext tobefalsy fixturecomponentinstancecontent test fixturedetectchanges expect pnativeelement htmlparagraphelement innertext toequal test testcomponentwrappedspects passes onpush default typescript import component angularcore import testbed angularcoretesting import angularplatformbrowser import testcomponent testcomponent component selector mywrapper template class wrappercomponent content string describe test component wrapped gt beforeeach gt testbedconfiguretestingmodule declarations testcomponent wrappercomponent render bound content within p element gt const fixture testbedcreatecomponent wrappercomponent fixturedetectchanges const p fixturedebugelementquery bycss p expect pnativeelement htmlparagraphelement innertext tobefalsy fixturecomponentinstancecontent test fixturedetectchanges expect pnativeelement htmlparagraphelement innertext toequal test motivation use case changing behavior would prefer use roughly testing patterns regardless change detection strategy using please tell us environment angular version browser language ts", "num": "12313", "d": "10/2016"}, {"title": "aot provider ngzone error aotcompiled scripts", "body": "submitting current behavior followed recipes aot webpack official docs original ticket opened help community able fix transpilation issues experiencing new issue angular aot webpack produces output files error got redirected back according thread related aot compilation constraints expected behavior aotcompiled scripts behave functionally nonaot counterparts minimal reproduction problem instructions clone repo npm install npm postinstall npm run build open nonaothtml works open aothtml please tell us environment angular version browser language ts node aot issues", "num": "12312", "d": "10/2016"}, {"title": "order css classes applied ngclass complementary", "body": "submitting check one x current behavior two css classes containing attribute eg color apply element ngclass attribute value selected seems indeterministic expected behavior applying css classes attribute element ngclass use duplicated elements known order minimal reproduction problem instructions plnkr two css styles one red colour red one green colour green applying styles element colour text red used first followed green text red green first followed red test still green expectations one style take priority another based order applied using ngclass motivation use case changing behavior applying event based styles override previous styles within element please tell us environment macos chrome opera angular version browser", "num": "12308", "d": "10/2016"}, {"title": "view refresh redux internet explorer", "body": "submitting check one x current behavior using save application state informations displayed application come redux state weird behavior ie ie nt know bug angular redux use async pipe display data state observables components html title async title update redux state view updated click anywhere page case wondering change detection strategy default one push force update view run expected behavior view updated please tell us environment virtual machines windows angular version browser internet explorer language typescript", "num": "12307", "d": "10/2016"}, {"title": "router resolved data persist activatedroute data navigation", "body": "submitting check one x current behavior router resolved properties persisted inside activatedroute data unlike data properties expected behavior router resolved properties persisted inside activatedroute data like data properties minimal reproduction problem instructions motivation use case changing behavior motivations preload data application wide reuse preloaded data please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12306", "d": "10/2016"}, {"title": "tool compiles typescript files", "body": "submitting current behavior webpack project angular cli running tool compile typescript files result directory full files expected behavior tool generate messages file motivation use case changing behavior directory without files please tell us environment linux angular version browser language typescript node aot issues", "num": "12305", "d": "10/2016"}, {"title": "read property injector null testbedcreatecomponent", "body": "submitting check one x current behavior testbedcreatecomponent crashes running tests karma browserify beforeeach crashing import componentfixture testbed angularcoretesting import angularplatformbrowser import debugelement angularcore import aboutpage beforeeach gt error received help appreciated please tell us environment operating system osx angular version angular version zonejs browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12304", "d": "10/2016"}, {"title": "extend tool sourcelanguage argument targetlanguages argument", "body": "submitting current behavior running tool create file attribute attribute expected behavior please extend tool argument argument argument control attribute every language provided created created file attribute set motivation use case changing behavior create multiple files correct attribute correct attribute please tell us environment linux angular version browser language typescript node aot issues", "num": "12303", "d": "10/2016"}, {"title": "renderersetelementstyle important", "body": "x feature request current behavior currently renderersetelementstyle set important renderersetelementstyle el styleproperty stylevalue expected behavior renderersetelementstyle el styleproperty stylevalue important important could optional boolean motivation use case changing behavior able set important programmatically angular browser language", "num": "12302", "d": "10/2016"}, {"title": "systemjs dependency error http request buffer", "body": "submitting check one x upgrade angular application tries http get request buffer reason get internal server error resource nt exist server systemjs dependency need change anything systemjsconfigjs redirect resource packagejson systemjsconfigjs files packagejsontxt systemjsconfigjstxt", "num": "12301", "d": "10/2016"}, {"title": "forms submitted state", "body": "nice submitted bool property formgroup angular useful performing validation want display error user tried submit form eg nt want display invalid email format error user typing email first time user submitted form field lost focus valid pristine nt help additionally question form invalid perform ngsubmit form ready submitted angular version", "num": "12300", "d": "10/2016"}, {"title": "web full misleading content regarding learning", "body": "could please rename angular give new codename seems stupid learning web polluted posts tutorials stackoverflow questions relate various betas compatible production version without talking webpages regarding angular shows even seek angular issue help version number used keyword powerfull enough make difference already lost lot time struggling outdated documentation notice friends work mates problem wanted give feedback sorry place first time realize bad idea give public beta name final version way thank framework", "num": "12299", "d": "10/2016"}, {"title": "bootstrap least one component injecting router", "body": "unable require dependencies constructor service angular note clear constructor dependencies defined works like charm dependencies loaded problem sudo facade authservice siteservice class injectable export class authservice constructor private http private storageservice storageservice private siteservice siteservice private router router injectable export class siteservice constructor private http private storageservice storageservice also app module ngmodule decorator", "num": "12298", "d": "10/2016"}, {"title": "angularrouter semver", "body": "submitting angularrouter version semver one angular package like know makes big breaking change rc series require increment major version important know semver angular package important come back semver router package earlier come back semver easier accepted community angular version router", "num": "12296", "d": "10/2016"}, {"title": "routertesting errors tests appear router", "body": "submitting check one x current behavior given module using routermodule uses template whereas plain html repro testing simple component using angular router component using template like add imports testing module import testbed angularcoretesting import routertestingmodule angularroutertesting import appmodule appmodule import userscomponent userscomponent describe component users gt beforeeach gt testbedconfiguretestingmodule imports appmodule routertestingmodule create component gt let fixture testbedcreatecomponent userscomponent let app fixturedebugelementcomponentinstance expect app tobetruthy whereas dumb component like import testbed angularcoretesting import appmodule appmodule import usercomponent usercomponent describe component user gt beforeeach gt testbedconfiguretestingmodule imports appmodule create component gt let fixture testbedcreatecomponent usercomponent let app fixturedebugelementcomponentinstance expect app tobetruthy using router test throws fixed adding imports testing module dumb component regressionbreaking change compared behavior used expected behavior able test component rely without import used minimal reproduction problem instructions see please tell us environment macosx angular version angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12295", "d": "10/2016"}, {"title": "feature request date pipe support narrow form weekdays", "body": "submitting check one x current behavior current implementation date pipe possible render weekdays narrow form w f expected behavior would useful able render weekdays narrow form motivation use case changing behavior date pickers often use narrow format display days week moment want achieve need create intldatetimeformatter component pass weekdays string ideal use actual dates date pipe template since supported js intl api imagine trivial change format string feel ee appropriate please tell us environment macos sierra npm angular version browser language node aot issues", "num": "12294", "d": "10/2016"}, {"title": "build windows npm ebadplatform error", "body": "submitting check one x current behavior trying build angular following steps suggested developermd doc cloned project executed node npm readablestream zonejs npm err windowsnt npm err argv c myprogramsnodejsnodeexe c myprogramsnodejsnodemodulesnpmbinnpmcli js install npm err node npm err npm npm err code ebadplatform npm err notsup unsupported platform fsevents wanted os darwin arch current os arch npm err notsup valid os darwin npm err notsup valid arch npm err notsup actual os npm err notsup actual arch npm err please include following file support request npm err c mydevsnippetsangularnpmdebuglog npm fails install deps expected behavior expect ebadplatform error installing deps tried cmd git bash shells result minimal reproduction problem instructions see reproduce error similar cloned project motivation use case changing behavior cloned locally repo contribute please tell us environment windows version build node npm angular version master browser applicable language applicable node aot issues applicable", "num": "12293", "d": "10/2016"}, {"title": "aot upgrade adapter", "body": "possible use aot upgrade adapter time configured build process work around breakage caused csp nt seem made difference application still stalls indefinitely blocker us since stuck upgrade adapter least angular material supports everything currently use material kind workaround avoid reverting pure implementation would really appreciated", "num": "12292", "d": "10/2016"}, {"title": "loading splash removed ui zonejs still serving files", "body": "submitting current behavior porting application final release realized loading splash screen removed browser zonejs file finishes serving necessary resources current route using lazy loading feature new router expected behavior loading splash removed ui necessary files htmls js css served reproduction problem create angular application configure splash screen wrapped angular app directive configure nested path routing using lazy loading navigate full path browser refresh browser page inspect console browser splash screen removed component files served zonejs following see example one modules route path composes blade blade scenario something similar blade concept azure portal blade angular module user may see one many blades ui time url path reflects blade state dynamically composable lazy loading modules important const bladeroutes routes path component emptycomponent path overview id component tripoverviewbladecomponent loadchildren appmodulesbladeslegslegoverviewbladelegoverviewblademodule legoverviewblademodule export const currentbladerouting routermoduleforchild bladeroutes ngmodule imports currentbladerouting commonmodule formsmodule globaldirectivesmodule declarations tripoverviewbladecomponent tripoverviewcomponent legdetailscomponent departmentcomponent export class tripoverviewblademodule plunker reproduces reported issue see issue happening need open preview separe window windowed mode navigate routes reload browser window realize first module related components loaded removing loading splash rest lazy loaded route components gets attached dom problem may take long time depending deep user gone far url fast current network even network fast enough reduce rtt may plenty files need served user know going motivation use case changing behavior different behavior version angular version browser chrome", "num": "12290", "d": "10/2016"}, {"title": "feature robust module loader router", "body": "submitting check one x current behavior router current default module loader tries crashes app fails retrieve module good mobile environment latency connectivity may intermittent poor always robust designing data requests ship default loader robust face connectivity failures counter argument browser scripts fail argument continues loading data different loading module disagree script fails load app never even starts lost connectivity cause html fails load user sees familiar user accumulated unsaved work lazy loading even preloading modules occur app running time user may deep work flow connectivity drops data operation developer would prepared possibility found way keep app alive preserve unsaved work reasoning failed module loading one might argue developer cares create custom loader fine response talking unusual circumstances think talking environment common handle outofthebox expected behavior ship default loader robust things might distinguish among failures perhaps giving special treatment connectivity failure possibly authorization failure potentially curable user fail fast module connectivity failure could retry n times progressive delay loader activity loadingloadedload failed distinctive events dev handle app fail loader fails least option fail course nt navigate dev detect handle failure dev able handle event establish try connectivity restored dialog dev able take kind corrective action retries run offline user reestablishes connection dev able hook loadloaded events order show spinner router loading one would loading data minimal reproduction problem instructions victor confirmed behavior request repro motivation use case changing behavior top angular priority running mobile environments mobile environments plagued connectivity issues angular version browser language", "num": "12289", "d": "10/2016"}, {"title": "getter returning date ngmodel causes browser crash", "body": "submitting check one x current behavior currently return new date getter ngmodel freezes browser expected behavior would cause infinite loop minimal reproduction problem instructions getter method returns new date put ngmodel motivation use case changing behavior able use generated date ngmodel please tell us environment ubuntu apache angular version also browser chrome language typescript", "num": "12288", "d": "10/2016"}, {"title": "runtime error aot build read property replace undefined", "body": "submitting check one x current behavior app works fine built ng build prod build ng build prod aot completes successfully app wo nt start following exception exception read property replace undefinedthandleerror anonymous function anonymous function original stacktrace thandleerror anonymous function anonymous function typeerror read property replace undefined new etrendercomponent trendercomponent et new e ecreateinternal etcreate tcreate expected behavior app start minimal reproduction problem instructions get code projects start standalone node server auctioncli npm run build open browser app works add aot build script auctioncli npm run build open browser app gives exception motivation use case changing behavior please tell us environment os x nodejs server angular version browser language typescript xx node aot issues", "num": "12287", "d": "10/2016"}, {"title": "corr issue", "body": "submitting check one x current behavior access remote rest service different domain local via http post getting following error response preflight request nt pass access control check accesscontrolalloworigin header present requested resource aware thsi corr issue teh rest service calling adding required http headers accesscontrolalloworigin allowmethods get put post delete also passing required http headers thru http headers well via http post still getting corr error help appreciated expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node", "num": "12285", "d": "10/2016"}, {"title": "viewchildren querylist population declarationorderdependent", "body": "submitting current behavior appears querylists generated viewchildren decorator populated based order listed class definition independent domview order viewchildren class expected behavior would think declared viewchildren would populated firing change detection discovered filing angularissues could related minimal reproduction problem instructions plunker", "num": "12284", "d": "10/2016"}, {"title": "viewchildren querylistchanges nt detect changes", "body": "submitting current behavior subscribing querylistchanges created viewchild changes bound variables detected expected behavior template updated wai debug change detector detect bound variable changed throw similar updating bound variables ngafterviewchecked minimal reproduction problem instructions plunker", "num": "12283", "d": "10/2016"}, {"title": "bootstrapping applicationrefbootstrap additional components breaks routerbacknavigation", "body": "submitting check one x current behavior bootstrapping applicationrefbootstrap additional components breaks routerbacknavigation expected behavior routerbacknavigation works even additional component bootstrapped minimal reproduction problem instructions plunker reproduces issue need open plnkr new window see url please open console trace router activated steps see homeroute ok click themes ok navigate back browser back button see home ok click themes ok click badges ok see router events fires twice moment additional component bootstrapped via applicationrefbootstrap navigate back browser back button ok see theme content window url still badge also console logs navigationcancel events example navigation id equal current navigation id navigate back browser back button ok still see themes content window url theme router state step motivation use case changing behavior need bootstrap additional component somewhere html please tell us environment mac node webpack plnkr systemjs angular version browser language typescript xx typescript", "num": "12282", "d": "10/2016"}, {"title": "calling markastouched formgroup nt affect children controls", "body": "submitting bug report current behavior calling markastouched formgroup nt mark children controls touched expected behavior calling markastouched formgroup set touched flag children controls actually opposite method markasuntouched affecting children controls markastouched nt work way minimal reproduction problem instructions repro motivation use case changing behavior styles rely touched state cases need set manually touched state controls example user clicks save button angular version", "num": "12281", "d": "10/2016"}, {"title": "docs need updated angular", "body": "submitting check one x current behavior docs code appmaints import platformbrowserdynamic angularplatformbrowserdynamic import gettranslationproviders import appmodule appmodule gettranslationproviders providers gt const options providers platformbrowserdynamic bootstrapmodule appmodule options longer compatible bootstrapmodule signature angularcoresrcapplicationrefdts angularcoresrclinkercompilerdts expected behavior appmaints updated follows appmaints import platformbrowserdynamic angularplatformbrowserdynamic import gettranslationproviders import appmodule appmodule gettranslationproviders providers gt const options providers providers platformbrowserdynamic bootstrapmodule appmodule options minimal reproduction problem instructions follow steps cookbook motivation use case changing behavior fix documentation minimize developer frustration please tell us environment angular version browser language", "num": "12280", "d": "10/2016"}, {"title": "angular accessing nested formarrays using formbuilder", "body": "brocco jmachnik first begin angular trying build nested form validate iti posted question stackoverflow dint got reply raising question bug please revert solution soon possible thank part ts file ngoninit thismyform thisformbuildergroup projects thisformbuilderarray thisinitprojects initprojects return thisformbuildergroup name validatorsrequired validatorsminlength somearray thisformbuilderarray thisformbuildergroup name validatorsrequired attr validatorsrequired someid validatorsrequired addproject void const control lt formarray gt thismyformcontrols projects controlpush thisinitprojects view nome \u00e9 requerido submit form value myformvalue json form value projects name somearray name attr someid name somearray name attr someid well see arrays called projects array inside one problem able validate control somearray array actually getting following error original exception find control path projects controlssomearraycontrolsname ps already tried put div also got error find control path projects somearray thanks advance help would appreciated", "num": "12279", "d": "10/2016"}, {"title": "need whenstable fakeasync synchronous", "body": "fakeasync tests need helper waits synchronously ngzone stabilize continuing test would essentially otherwise people seem putting arbitrary values tick functions nt read well", "num": "12278", "d": "10/2016"}, {"title": "angular nested form validation", "body": "first begin angular trying build nested form validate iti posted question stackoverflow dint got reply raising question bug please revert solution soon possible thank part ts file ngoninit thismyform thisformbuildergroup projects thisformbuilderarray thisinitprojects initprojects return thisformbuildergroup name validatorsrequired validatorsminlength somearray thisformbuilderarray thisformbuildergroup name validatorsrequired attr validatorsrequired someid validatorsrequired addproject void const control lt formarray gt thismyformcontrols projects controlpush thisinitprojects view nome \u00e9 requerido submit form value myformvalue json form value projects name somearray name attr someid name somearray name attr someid well see arrays called projects array inside one problem able validate control somearray array actually getting following error original exception find control path projects controlssomearraycontrolsname ps already tried put div also got error find control path projects somearray thanks advance help would appreciated", "num": "12277", "d": "10/2016"}, {"title": "router issue encoding characters refreshing page multiple time", "body": "current behavior issue angular space url initially url look like duediligencecorporate first refresh url get changed duediligencecorporate next refresh url get changed duediligencecorporate expected behavior url always look like duediligencecorporate regard less many time refresh page using code authguardservice provided stateurl giving double encoded value", "num": "12276", "d": "10/2016"}, {"title": "router canactivatechild ca nt find guard provided module", "body": "submitting check one x current behavior trying use children guard canactivatechild module guard provided guard fails injected provide guard parent module works provide canactivate guard module used works expected behavior guard injected work like canactivate guard minimal reproduction problem instructions demo found click go route child guard button see error console error provider childguard happens click button router navigates admin adminmodule provides childguard service default route adminmodule empty uses childguard motivation use case changing behavior protect child routes using guard known module loaded lazymode please tell us environment windows enterprise chrome iis angular version angular version router browser chrome language typescript node aot issues", "num": "12275", "d": "10/2016"}, {"title": "required select multiple always true", "body": "submitting check one x current behavior select multiple required validator always nt matter value empty array expected behavior select multiple required validator valid gt minimal reproduction problem instructions motivation use case changing behavior fine working framework please tell us environment angular version browser language node aot issues relates", "num": "12274", "d": "10/2016"}, {"title": "router parent params children", "body": "submitting check one x current behavior route parent params empty object child route lazy loaded module expected behavior parent params minimal reproduction problem instructions parent module routes child component constructor consolelog logging empty object please tell us environment angular version browser language typescript node aot issues", "num": "12273", "d": "10/2016"}, {"title": "url updating using browsers navigation", "body": "submitting check one x current behavior using navigation arrows updating url expected behavior navigate different page link button later click back button browser also change url taking back without refreshing url remain minimal reproduction problem instructions clone npm npm start try navigate another page clicking signin hen go back browser button see url updateing motivation use case changing behavior user wish navigate browser navigation buttons also update url please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues thanks help advance", "num": "12272", "d": "10/2016"}, {"title": "ngdisabled wont prevent ngclick button", "body": "submitting check one x current behavior currently ngdisabled affects ngclicks inputs buttons expected behavior would nice could apply elements regardless button minimal reproduction problem instructions personally used ngclick tag also including ngdisabled example motivation use case changing behavior received custom designed buttons using tags design please tell us environment os windows ide brackets angular version angular browser language", "num": "12271", "d": "10/2016"}, {"title": "unbind global listener rendererlistenglobal", "body": "submitting check one x current behavior unlisten renderedlistenglobal expected behavior able unlisten minimal reproduction problem instructions component motivation use case changing behavior may want able kill listener please tell us environment angular version find documention feature later angular version using browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12269", "d": "10/2016"}, {"title": "throwing exception", "body": "submitting check one x current behavior hi followed documentation implementation within application throw exception attribute places like please tell us environment windows sublime text npm angularcli webpack angular version language typescript version node aot issues", "num": "12268", "d": "10/2016"}, {"title": "typeerror read property animations undefined upgrade angular", "body": "submitting check one x current behavior angular version language typescript node aot issues", "num": "12267", "d": "10/2016"}, {"title": "router typeerror read property filter undefined", "body": "submitting check one x current behavior app throws following exception expected behavior rendered displaying minimal reproduction problem instructions router rxjs nt work tried also withr rxjs nt work router rxjs works correctly similar case rxjsoperatorfilter undefined var navigations rxjsoperatorfilterfiltercall thisrouterevents function e return e instanceof navigationend motivation use case changing behavior upgrade angular router rxjs angular router please tell us environment angular version router browser language node aot issues", "num": "12266", "d": "10/2016"}, {"title": "named router outlet working", "body": "submitting check one x current behavior named router outlet show component specified named router path expected behavior named router outlet show component specified named router path minimal reproduction problem instructions trying use named outlets approutes following path appcomponenthtml contains home outlet never displays home component remove outlet name router path unnamed outlet show homecomponent using latest angular idea named outlet nt work working plunkr need look appcomoponentts click links crisis center hereos would expect navigated components appear inside red named outlet zone forked plunkr using beta motivation use case changing behavior trying find concrete example plunkr named outlet used latest angular named router outlet yet available angular please tell us environment windows visual code npm angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome latest language typescript xx typescript node aot issues", "num": "12265", "d": "10/2016"}, {"title": "ngmodule dynamically loaded check already presentloaded", "body": "submitting check one x current behavior load lot modules systemjs angular compiler example would like know next cycle example module already loaded compiled angular could get directly right componentfactory create new one without load modules think tbosch already implemented motivation use case changing behavior control compiler", "num": "12264", "d": "10/2016"}, {"title": "use disabled required reactive form", "body": "current behavior currently impossible use required disabled reactive forms motivation use case changing behavior many forms fields depend fields reactive forms makes extremely difficult verbose require disable field conditionally another field angular version read future version reactive forms add required html validation attribute dom element perhaps ariarequired attribute control required validator function mean required disabled supported future versions important users understand limitations reactive forms take best decision reactive vs template based future needs", "num": "12263", "d": "10/2016"}, {"title": "better error message using service generic parameter", "body": "submitting check one x current behavior compiling application aot ngc compiler gives error expected behavior compile created repro without ionic compiles fine however generated code underline ide believe right something like minimal reproduction problem instructions repro project motivation use case changing behavior please tell us environment windows npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12262", "d": "10/2016"}, {"title": "undefined access custom validator class properties", "body": "submitting check one x current behavior create custom validator want access instance thissomevariable undefined customvalidator function inside streetvalidator function dont access class variables expected behavior minimal reproduction problem instructions motivation use case changing behavior want extendedcollapse forms user choose extended form basic form need create formgroup input fields nt want validatorsrequired set input field hidden user choose basic extended form form valid set validatorsrequired input field shown extended form version please tell us environment windows angular version angular final browser language node aot issues", "num": "12261", "d": "10/2016"}, {"title": "add animation ngfor entry leave element", "body": "", "num": "12260", "d": "10/2016"}, {"title": "timeout operator nt work extended http", "body": "submitting check one x extend class add timeout setter using rxjs operator nt work import like works load entire rxjs library live plnkr", "num": "12258", "d": "10/2016"}, {"title": "perf update polymer benchmarks preview", "body": "", "num": "12257", "d": "10/2016"}, {"title": "benchpress get firefox support", "body": "big changes angular repository firefox driver added back ci needs verified", "num": "12256", "d": "10/2016"}, {"title": "aot uses lot resources browser jit", "body": "submitting check one x current behavior use aheadoftime compiler along build app consumes lot cpu cycles browser justintime resulting bundle also significantly larger expected behavior aot treeshaking result smaller less resourcehungry application shocked observation rerun tests dozen times minimal reproduction problem instructions started browser let sit idle couple minutes loaded app open tab let app sit idle minute recording cpuio activity using windows performance monitor aot build resource hungry addition js bundle minified treeshaken larger jit compiled counterpart aot compiled bundle made aot cpu io operations starting seconds load app extending minute app optimized following directions docs also tried bundling aot build avoid altogether performance differential remained checkout exact app using inbrowser justintime compilation templates styles inlined js bundled one minified file using buildstatic jit compiled bundle lighter aot treeshaken minified bundle even though former includes jit cpu io operations starting seconds load app extending minute anyone replicate find happening app motivation use case changing behavior like use aot builds although load faster latent power consumption makes nonstarter please tell us environment", "num": "12253", "d": "10/2016"}, {"title": "integration chrome lighthouse metrics benchpress", "body": "see", "num": "12252", "d": "10/2016"}, {"title": "feature request default encapsulation aot compiler", "body": "submitting check one x current behavior current implementation aot allow us set defaultencapsulation compileroptions expected behavior able pass flag type option available tsconfigjson specify defaultencapsulation motivation use case changing behavior using jit option pass compileroptions bootstrapmodule function like compile templates use factory option specify compileroptions obviously case cause factories precompiled defaultencapsulation tsconfigjson compiler option would fantastic please tell us environment windows angular version browser language node aot issues", "num": "12251", "d": "10/2016"}, {"title": "generated ngfactory files sometimes use incorrect import path", "body": "happening attempting aot compile application consumes components ngfactory files generated sources app files material package problem ngfactories generated sources attempting import ngfactories material components files live tool outputted ngfactories material components inside specified steps reproduce clone creates release output runs test app errors see node version compilercli version", "num": "12249", "d": "10/2016"}, {"title": "provide syntactic sugar custom form components", "body": "experience could use improvement least probably simplify provide ngvalidators ngvalueaccessor perhaps decorator support relevant issues starting list", "num": "12248", "d": "10/2016"}, {"title": "bootstraping multiple component instances possible", "body": "current behavior using component selector multiple time first one bootstraped event one initialized correctly expected behavior occurrences component fully bootstraped read input data minimal reproduction problem instructions motivation use case changing behavior migrating single page applications multiple components may live independent bigger older application may dispatch events get input outside work together outside jquery environment please tell us environment nothing special angular version given base plnkr browser language typescript", "num": "12246", "d": "10/2016"}, {"title": "paths imports outside root directory updated target compiled files", "body": "submitting check one x current behavior compiling project imports outside root directory sharedcomponents path ngfactory file targeting generated ngfactory import source directory import instead directory compiled expected behavior import paths adjusted order properly target compiled files minimal reproduction problem instructions motivation use case changing behavior working intended files compiled looked wrong locations please tell us environment fedora release twenty three webstorm reproduced os x angular version browser language typescript xx node aot issues", "num": "12245", "d": "10/2016"}, {"title": "dynamiccomponentloader migration notes missing", "body": "changelog says core deprecated dynamiccomponentloader removed see deprecation notice migration instructions migration notes", "num": "12244", "d": "10/2016"}, {"title": "newly created embedded view forced render using private api", "body": "submitting check one x current behavior use private api order render newly created embedded view dom workaround prevents seems like view created parent children dirty checked error occur js directive selector mytemplate inputs mytemplate export class mytemplatedirective constructor private templateref templateref private viewcontainerref viewcontainerref return new instance dom call rendertemplate templatedata let viewdata implicit templatedata let childview thisviewcontainerrefcreateembeddedview thistemplateref viewdata expected behavior recommended documented way using public api minimal reproduction problem instructions comment workaround see issues motivation use case changing behavior necessary integrate thirdparty libraries accept templates render functions data gt dom probably cases necessary access template dom right embedded view created please tell us environment os npm nodejs angular version browser language typescript", "num": "12243", "d": "10/2016"}, {"title": "unit test component template updating click test angular final comp testing", "body": "submitting check one x current behavior able click something template change registered either template variables associated component example neither avar binding template fixturecomponentinstanceavar show changes expected behavior component variable template binding would change something clicked component template test minimal reproduction problem instructions describe statement use testbed configuretestingmodule declare component beforeeach async statement testbedcompilecomponents create component assume component actual template loaded grab html element queryselector something similar click using nativeelementclick use queryselector something similar grab div html element see changed due click example variable html element changed bug nothing changes easy code snippet start describe testmecmp unit tests gt beforeeach gt unit tests async gt testbedcompilecomponents gt let fixture testbedcreatecomponent testmecmp const elwithvar elqueryall bycss td elwithvar nativeelementclick expect elwithvar nativeelementtextcontent tobe variable binding changed easy code snippet end motivation use case changing behavior imagine angular team expects direct template interaction updates working unit test feature please tell us environment mac osx phpstorm npm using systemjs module loader angular version final browser chrome browser running tests karma test runner electron browser running tests karma test runner language typescript xx tests run specjs files hence originally written typescript", "num": "12242", "d": "10/2016"}, {"title": "feature request route root modules", "body": "submitting check one x current behavior option route root modules one expected behavior option route root modules would replace content indexhtml motivation use case changing behavior websites feature two startpoints public interface admin admin interface mostly totally different components styles etc services data layers common much stuff differs makes sense lazy load admin public modules contain respective subroutes like adminaccounts admin news public face limitations one root module lazy loaded child modules ca nt use bootstrap option ca nt root component respective layout see possible solutions totally different angular projects admin public b create adminhtml indexhtml root src would different root modules bad lot code still common b input url like configure web server fail url translations necessary project please tell us environment windows atom webpack angular version browser chrome latest stable language", "num": "12241", "d": "10/2016"}, {"title": "ca nt bind ngclass since nt known property div", "body": "remove works ok window angular version browser chrome language typescript node aot issues", "num": "12240", "d": "10/2016"}, {"title": "angular code generator", "body": "language full copying configuration files add imports define policies repetitive tedious would helpful automate focus application yaomangenerator useful thank much", "num": "12238", "d": "10/2016"}, {"title": "improve async pipe single object observables", "body": "submitting current behavior main motivation print multiple object properties using async pipe network request array observables use async pipe following way code end network request single object observables use async pipe following way myobjects async myobjects async myobjects async code end network requests sure could cache observable network request together looks odd expected behavior add support local template variable eg motivation use case changing behavior beautiful code printing multiple object properties using async pipe network request please tell us environment linux angular version browser language typescript node aot issues", "num": "12237", "d": "10/2016"}, {"title": "children routes work firefox", "body": "problem firefox load component content routeroutlet children routes page empty except static main template elements everything works perfect using chrome safari sample routing config file chat component content loaded fine component content loaded environment osx angular router firefox node", "num": "12236", "d": "10/2016"}, {"title": "compile directive angularjs", "body": "dynamiccomponentloader use", "num": "12235", "d": "10/2016"}, {"title": "binary download", "body": "hi opening issue asked gitter days without answer need download binary file aspnet core api start download angular app looked around samples found samples stating time support nt ready none examples works nt know something wrong samples valid anymore find infos", "num": "12234", "d": "10/2016"}, {"title": "angular ngfor supports add elements time inline template", "body": "submitting bug current behavior wanted repeat particular element several amount time using directive hardcoded array like got worked awesome achieved wanted code demo plunkr soon increased array size start getting error really annoying zonejs unhandled promise rejection unsupported number argument pure functions zone task promisethen value error unsupported number argument pure functions error unsupported number argument pure functions template expected behavior curious know error happening soon array size increase another interesting thing put array component inside variable used got worked angular version browser language typescript", "num": "12233", "d": "10/2016"}, {"title": "using custom pipes lazy modules", "body": "submitting check one x current behavior custom pipes declared main app module seen lazy module components pipe xxx could found error pipes declared lazy module instead angular behaves expected expected behavior declarations top level modules propagate components please tell us environment os x angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12231", "d": "10/2016"}, {"title": "syntaxerror unexpected token import import changedetectionstrategy", "body": "submitting check one x current behavior nodemodules import changedetectionstrategy changedetectionconstants syntaxerror unexpected token import objectexportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require expected behavior minimal reproduction problem instructions motivation use case changing behavior use input nested component please tell us environment vscode nodejs angularuniversal angular starter kit angularclass angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview compile language typescript xx typescript node aot issues node version issue nodemodules import changedetectionstrategy changedetectionconstants syntaxerror unexpected token import objectexportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object webpackrequire", "num": "12229", "d": "10/2016"}, {"title": "issue eventemitter working plunkr using local copy", "body": "angulareventemittertestzip hi think need reopen tried multiple machine code event emitter really working properly write code plunkr yes working fine attached sample code excluded nodemodules folder instead modified systemjs point regardless using local copy nodemodules still working", "num": "12228", "d": "10/2016"}, {"title": "secondary routessegments nt map browser buttons lazy loading module defines routes", "body": "submitting check one x current behavior scenario lazy loaded module defines secondary routesegment secondary route triggered pressing back button browser reflects url change content secondary route stays page pressing forward afterwards replace current content instead adds copy content page expected behavior pressing back button remove content loaded lazy loaded module minimal reproduction problem instructions see plnkr click blue button topright preview section launch preview separate window allow go forward back browser click lazy link lazy load module heading display page url home lazy press backspace altleft depending browser go previous page url home content module remains page angular version language node aot issues", "num": "12226", "d": "10/2016"}, {"title": "firefox issue property decorators", "body": "submitting current behavior name property property marked property decorator input output firefox see issue like found line code returns watch function instead property metadata expected behavior point view reserved name variables properties able create properties name minimal reproduction problem instructions firefox issue chrome works fine plunker reproduce please tell us environment windows firefox angular version browser firefox language typescript", "num": "12224", "d": "10/2016"}, {"title": "aot compilation produces failing js output ngmodulefactoryjs uncaught syntaxerror unexpected token import", "body": "submitting check one x current behavior current app combination webpack aot cookbook based angular docs working poc replicate issue repo done compilation bundling open files aothtml file fails nonaothtml nonaot version app loads fine expected behavior expected behavior aothtml nonaothtml behavior minimal reproduction problem instructions clone repo run commands working directory open aothtml reproduce issue motivation use case changing behavior able run aot webpack localization please tell us environment os windows angular version browser browsers language ts node aot issues node", "num": "12220", "d": "10/2016"}, {"title": "add support undefined number items form builder array", "body": "bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see using form builders reactive form impossible create array objects undefined number objects let say form array ca nt really patch form like batch first item array way iterate form array create controls function", "num": "12219", "d": "10/2016"}, {"title": "using routermodule multiple bootstrapped components gives weird navigation", "body": "current behavior working component component displays login status dependency routing picked also component displays proper page defined ngmodule annotation need bootstrapped part static html page press next button go different page go page split second go back previous step subscribe routerevents see navigate page page disabled id changed line seems login status component also listens routing disables page receive feedback subscribe router events expected behavior expect routing navigation handled number components bootstrapped minimal reproduction problem instructions create plunkr required motivation use case changing behavior even way use modules incorrect would expect get least feedback navigation blockedfailed angular version browser language", "num": "12218", "d": "10/2016"}, {"title": "able render child controll based component", "body": "submitting check one x current behavior get error console expected behavior render form minimal reproduction problem instructions custom made formcontroll based component wich supposed render form field proper validation use component inside registercomponent like sign styleurls registercomponentcss changedetection changedetectionstrategyonpush export class registercomponent registerform thisformbuildergroup firstname validatorsrequired lastname validatorsrequired login validatorsrequired password validatorsrequired confirmpassword validatorsrequired output authenticate new eventemitter constructor private formbuilder formbuilder private toastr toastsmanager private router router onsubmit void thissbregister thisregisterformvalue subscribe gt thistoastrsuccess registro con exito thisrouternavigate notes course register component ngmodule import ngmodule customelementsschema angularcore import browsermodule angularplatformbrowser import appcomponent appcomponent import notesmodule notesnotesmodule import coremodule corecoremodule import routing approuting import indexmodule indexindexmodule import registermodule registerindexmodule import toastmodule import formsmodule reactiveformsmodule angularforms import httpmodule angular import formgrouptextbox commoncomponentsformformgrouptextboxformgrouptextboxcomponent ngmodule imports browsermodule formsmodule reactiveformsmodule httpmodule notesmodule indexmodule registermodule new feature modules loaded nt add coremodule notesmodule designated first approuting routing toastmodule declarations appcomponent formgrouptextbox lt lt lt lt bootstrap appcomponent schemas customelementsschema export class appmodule get error ca nt bind label since nt known property formgrouptextbox formgrouptextbox angular component label input verify part module formgrouptextbox web component add customelementsschema ngmoduleschema component suppress message", "num": "12217", "d": "10/2016"}, {"title": "output eventemitter working properly", "body": "im following tutorial output child component parent component communication sample link tutorial working properly first button call parent function code mankind colonize universe agree agreed disagree disagreed export class votetakercomponent agreed disagreed name export class votercomponent input name string output onvoted new eventemitter false voted false vote agreed boolean consolelog emit child thisonvotedemit agreed thisvoted true code child working parent triggered", "num": "12216", "d": "10/2016"}, {"title": "viewencapsulationemulated working dynamically created components", "body": "submitting check one x current behavior angular nt set attribute components created using used expected behavior angular sets attribute components created using used minimal reproduction problem instructions see reproduction example updated reproduction angular change view encapsulation native browser supporting become red expected behaviour emulated view encapsulation stays green attribute set dynamically created component host element motivation use case changing behavior emulated behaviour works different native assume bug please tell us environment angular version browser language typescript may relevant others well", "num": "12215", "d": "10/2016"}, {"title": "using moduleid component makes load", "body": "trying follow angular tutorial used webpack instead systemjs error occurred app herocomponent code typescript import component oninit angularcore import hero sharedhero import heroservice heroservice component moduleid moduleid selector qsheroes templateurl herohtml export class herocomponent implements oninit title heroes heroes hero selectedhero hero webpack config javascript use strict let webpack require webpack let htmlwebpackplugin require htmlwebpackplugin moduleexports entry dirnameconcat srcappmaints cache false devtool sourcemap output path dirname sourcemapfilename name map chunkfilename id chunkjs filename name js resolve extensions js ts module loaders test ts loaders awesometypescriptloader plugins new htmlwebpackplugin template indexhtml typescript config finally screenshots", "num": "12214", "d": "10/2016"}, {"title": "add optin change tracking form", "body": "submitting feature request like see optin change tracking mechanism forms ie improved version ngdirtyngpristine based upon initial value instead boolean flag example maybe also nice way implement without write cumbersome logic components eg sort interceptor one could apply", "num": "12213", "d": "10/2016"}, {"title": "external links fragment identifiers work", "body": "submitting current behavior browsers nt jump directly id given fragment link outside details see expected behavior browsers jump directly id given fragment url minimal reproduction problem instructions took min quickstart replaced code appcomponent simple divs ids import component angularcore component selector myapp template export class appcomponent paste address bar firefox stays top page user hits enter deselecting chrome stays case top page edge seems go randomly motivation use case changing behavior links outside work without special handling code one nt know advance element page user pick set deep link element therefore difference whether divs placed indexhtml would work course appcomponentts working please tell us environment windows visual studio code npm default quickstart configuration without changes besides mentioned divs heared appcomponent file behaves correctly part angularcli project angular version browser see reproduction language typescript node aot issues", "num": "12212", "d": "10/2016"}, {"title": "routerlink work mobile safari mobile chrome", "body": "current behavior routerlink work mobile safari mobile chrome expected behavior routerlink works minimal reproduction problem instructions open website routerlink phone mobile safari chrome click link work go side desktop everything works example site would devcraigsmenucom click nearby recently uploaded top angular version mobile safari language typescript xx", "num": "12211", "d": "10/2016"}, {"title": "perf create inbox app benchmark", "body": "see corresponding polymer app measure performance similar way see", "num": "12206", "d": "10/2016"}, {"title": "line column numbers template compilation errors one", "body": "submitting check one x current behavior line column numbers errors expected behavior line column numbers minimal reproduction problem instructions error notice please tell us environment angular version browser language", "num": "12204", "d": "10/2016"}, {"title": "activatedroute dropping params", "body": "submitting check one x current behavior url route defintion app path inside component ngoninit retrieving path activatedroute let path string params path path undefined expecting sample reservation expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview firefox language typescript xx typescript node aot issues", "num": "12202", "d": "10/2016"}, {"title": "add novalidate default forms formsmodule reactiveformsmodule", "body": "able turn default behavior cc igorminar", "num": "12201", "d": "10/2016"}, {"title": "perf remove use", "body": "user already specifies whether wants dev production build application compiler setting right ask user tell angular runtime via setting agree used compiler setting otherwise angular work instead remove flag triggered generate right providers app injector might need new properties providers eg allow tree shakers remove angular core production builds", "num": "12200", "d": "10/2016"}, {"title": "angular ngfor directive dom memory leak", "body": "submitting check one x current behavior apply directive ngfor dom item old dom items cleaned memory causing memory leak ever increasing memory footprint site expected behavior detached dom items cleaned longer dom minimal reproduction problem instructions copy changes wrote demonstrate leak nt use plunkr nt want deal plunkr noise mapping memory usage run app npm install npm start run code without directive attached ngfor allocation timeline looks like replicate remove empty directive ngfor file run apply empty directive see allocation timeline changes investigate snapshot see detached dom items loop nt cleaned dom kept found file allocation capture files found repo angular version", "num": "12199", "d": "10/2016"}, {"title": "synchronous test sharing stub service", "body": "tests needs service using stub service named inject testing reset userservicestub test tests executed asynchronous reset userservicestub injectable singleton class test already initialized tests weak asserts wrong would like synchronous test different userservicestub instance test nt know tried define method userservicestub called resets stub service asynchronous nt work also executed method method work either method property using called overwritten tests method one typescript let fixture componentfixture let settingscomponent settingscomponent beforeeach gt testbedconfiguretestingmodule declarations settingscomponent imports providers translateservice appservice provide mockbackend useclass mockbackend provide httptoolsservice usevalue httptoolsservicestub provide baserequestoptions useclass baserequestoptions provide userservice useclass userservicestub stub userservice test hope answers got question ask thanks smile", "num": "12198", "d": "10/2016"}, {"title": "fragment working", "body": "demo appcomponentts fragmentcomponentts component", "num": "12197", "d": "10/2016"}, {"title": "styles parser handles import statements comments tries load invalid resources", "body": "submitting check one x current behavior results expected behavior nt try load minimal reproduction problem instructions motivation use case changing behavior actually works please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview funny still edge language typescript xx node aot issues", "num": "12196", "d": "10/2016"}, {"title": "invalid dependency angular quick start guide", "body": "submitting check one x current behavior angularinmemorywebapi listed quick start guide valid version error lists latest version expected behavior version angularinmemorywebapi would install running minimal reproduction problem instructions try install dependencies using latest version quick start guide motivation use case changing behavior quick start easy follow beginners please tell us environment ubuntu server vim node liteserver angular version introduced browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser issue language typescript xx na node aot issues", "num": "12195", "d": "10/2016"}, {"title": "simplify microsyntax variable assignment", "body": "submitting current behavior two oddities using microsyntax set variables structural directives unused input named exactly like selector required structural directives extraneous character followed space required beginning work nt work works expected behavior nt require automatically insert extraneous input allow variable assignment without required character space minimal reproduction problem instructions plunker example motivation use case changing behavior allow richer initialization use structural directives", "num": "12194", "d": "10/2016"}, {"title": "ca nt use aot mode", "body": "jit path use relative wwwroot aot use relative path jit templateurl appapphtml aot templateurl apphtml bothers everytime change aot compile", "num": "12193", "d": "10/2016"}, {"title": "page loaded trying navigate using constant route path", "body": "submitting check one x current behavior page loaded error thrown expected behavior router navigates proper page minimal reproduction problem instructions define export constant string route url export class variable import constant route url class contains instance call router method imported constant plunker sample checks user signed navigates error page motivation use case changing behavior bug fix please tell us environment os windows ide webstorm npm angular version browser chrome microsoft edge language typescript node aot issues", "num": "12192", "d": "10/2016"}, {"title": "possible typo ngmodule tutorial docs", "body": "submitting check one x ngmodule tutorialdocs see following line export contactcomponent modules import contactmodule include component templates makes sense thing exported related code seems like read something like export module others import include contents also note way currently phrased specifically components since contents module might included many places templates", "num": "12191", "d": "10/2016"}, {"title": "aot nt work rxjs map windows", "body": "submitting check one x current behavior rather successful compile get terminal output ngc p clienttsconfigaotjson error error c property map exist type observable error c parameter res implicitly type error c parameter data implicitly type error c parameter error implicitly type check c usersgeorgesourcereposdocsnodemodules tsctypecheck c usersgeorgesourcereposdocsnodemodules c usersgeorgesourcereposdocsnodemodules processtickcallback modulerunmain run startup compilation failed expected behavior ngc work successfully mac travis linux builds exact repo minimal reproduction problem instructions see successfully build seems windows thing motivation use case changing behaviour bug fix please tell us environment windows pro npm angular version language typescript node aot issues", "num": "12189", "d": "10/2016"}, {"title": "debugging improvement add way access entry components via", "body": "submitting check one x current behavior symbol global namespace running production mode nt offer triggering change detection accessing entry components expected behavior improve debugging experience method would trigger change detection entry components b array components contains registered entry components minimal reproduction problem instructions create angular project bootstrap components ie ngmodule would look like following import ngmodule angularcore import browsermodule angularplatformbrowser import componentonecomponent componentone import componenttwocomponent componenttwo ngmodule imports browsermodule declarations componentonecomponent componenttwocomponent bootstrap componentonecomponent componenttwocomponent export class easierdebuggingexamplemodule motivation use case changing behavior debugging easier way article recommends following obtaining component useful requires selecting component elements tab chrome beforehand easier instead always able access first entry component angular also list entry components known angular point time super useful b triggering change detection much typing struggle remember also triggers change detection selected component would trigger change detection every entry component effectively redrawing whole page please tell us environment angular version browser language node aot issues na thanks", "num": "12188", "d": "10/2016"}, {"title": "variables animation metadata fails interpolate using compiler aot", "body": "submitting check one x minimal reproduction problem instructions something like export cardstates static string static string component animations trigger frontstate state cardstatesin style transform rotatey fails following error expected behavior sure expected behaviour case think fail descriptive message debugging error start tracing compilerumdjs still clear line use try compile aot also ca nt understand ca nt use functions metadata perhaps related clear motivation use case changing behavior please tell us environment ngcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "12187", "d": "10/2016"}, {"title": "detectchanges executed animationdone event", "body": "current behavior detectchanges executed animationdone event expected behavior detectchanges executed animationdone minimal reproduction problem instructions motivation use case changing behavior make animations callbacks works well without adding extra linese code please tell us environment windows xampp angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12186", "d": "10/2016"}, {"title": "angular problem get paragraph mysql", "body": "", "num": "12185", "d": "10/2016"}, {"title": "angular aot heep errors", "body": "aot compilation resulting javascript heap memory error trying compile project following aot guide available angulario typesccript configuration file aot compiling using command takes times compilation ends errors lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort gc ms marksweep gt mb ms last resort gc lt js stacktrace gt js stack trace security context copyproperties objecttyperelatedto myprojectnodemodulestypescriptlibtypescriptjs fatal error callandretrylast allocation failed javascript heap memory myprojectnodemodulesbin gt project trying compile files", "num": "12184", "d": "10/2016"}, {"title": "exception using dynamic module wildcard route", "body": "submitting check one x current behavior try load dynamic module wildcard get null pointer exception import ngmodule angularcore import browsermodule angularplatformbrowser import routermodule angularrouter import appcomponent appcomponent ngmodule imports browsermodule routermoduleforroot path redirectto login pathmatch full path login loadchildren apploginloginmodule loginmodule path notfound loadchildren appnotfoundnotfoundmodule notfoundmodule path redirectto notfound pathmatch full declarations appcomponent bootstrap appcomponent export class appmodule error get minimal reproduction problem instructions find ready project angular version browser language node aot issues", "num": "12183", "d": "10/2016"}, {"title": "one component different templateurl", "body": "submitting check one x current behavior component selector login templateurl loginhtml expected behavior component selector login templateurl function route activatedroute return routesnapshotname html function execute executing component minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12182", "d": "10/2016"}, {"title": "property exist type key string abstractcontrol", "body": "submitting check one x current behavior compiling form aot get first thought bug ionic reported stated code issue looks like something aot people reported error see expected behavior create variable store type nt error minimal reproduction problem instructions recoverpasswordform formgroup constructor changing solves problem motivation use case changing behavior used forms please tell us environment osx vscode npm angular version browser chrome language typescript node aot issues", "num": "12181", "d": "10/2016"}, {"title": "lazy load module package", "body": "modules published package project need lazy load module module target project ok like export const routes routes path redirectto pathmatch full path loadchildren load modules package like path loadchildren using angularcli angular thank touch", "num": "12180", "d": "10/2016"}, {"title": "animations animation callback excuted", "body": "submitting check one x code import component oninit animate transition trigger state style angularcore component selector appindex templateurl indexcomponenthtml styleurls indexcomponentcss animations trigger amone state style left state style left transition gt animate easein transition gt animate easeout trigger amtwo state style left state style left transition gt animate easein transition gt animate easeout export class indexcomponent implements oninit private winobj onepro string twopro string constructor amonefn thisonepro thisonepro amtwofn e consolelog amoneend e efromstate void consolelog thistwopro thistwopro thistwopro consolelog thistwopro twoend e consolelog amtwoend e thistwopro indexcomponenthtml \u52a8\u753b\u6d4b\u8bd5amone amone amtwo current behavior following link demo click button testanimation first green block amtwo ca nt excute animationi nt know wrong code expected behavior hope animations finished callback previous animation excuted minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser language typescript node aot issues", "num": "12179", "d": "10/2016"}, {"title": "feature text formatting reference cause translation crash mangled", "body": "submitting check one x feature request current behavior using dev prod environments minification uglification mangling generate performance wise bundle causes translation crash expected behavior refering string casesentitive manner instead formatting minimal reproduction problem instructions motivation use case changing behavior developing mangling avoid order keep bug tracking simple prod everything must done engage performance wise practices translation id based formatting textnode must bypass minificationuglification must angular version language", "num": "12177", "d": "10/2016"}, {"title": "angularcli using wrong path", "body": "submitting check one x current behavior trying perform aot compilation get error error compilation failed resource file found c usersgeorgesourcereposdocsclientcomponentshomeclientcomponentshomehomehtml homehtml file compiler getting paths wrong despite tsc working fine expected behavior ngc would work advertiseddescribed docs minimal reproduction problem instructions nt successfully use compiler yet sure issue clone repo run ngc client directory motivation use case changing behavior getting ngc work please tell us environment windows pro angular version browser language typescript xx node aot issues tsconfigaotjson compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany true suppressimplicitanyindexerrors true types exclude nodemodules angularcompileroptions gendir aot skipmetadataemit true", "num": "12176", "d": "10/2016"}, {"title": "aot inherited lifecycle callbacks called", "body": "submitting check one x current behavior lifecycle callbacks depend metadata thus separate issue see comment expected behavior inherited lifecycle callbacks called motivation use case changing behavior several reasons use inheritance automatic clearing rxjs subscriptions automatic removal listeners adding common initialization code others angular version language", "num": "12175", "d": "10/2016"}, {"title": "ngswitchcase directive work multiple values", "body": "submitting check one x current behavior using multiple values expression ngswitchcase directive works first value give errors expected behavior show view matches second value expression minimal reproduction problem instructions show status either loaded selected motivation use case changing behavior make everyone happy need use multiple values please tell us environment windows angular version browser language node aot issues", "num": "12174", "d": "10/2016"}, {"title": "find module angularcompiler using ngc", "body": "submitting check one x current behavior ngc nt work run ngc get response c usersgeorgesourcereposdocs gt ngc throw err error find module angularcompiler functionmoduleresolvefilename functionmoduleload modulerequire require object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload expected behavior ngc work described docs minimal reproduction problem instructions assume something system dir motivation use case changing behavior use aot compilation please tell us environment windows pro command prompt npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12173", "d": "10/2016"}, {"title": "undefined variable var template", "body": "hi learn tutorial found strange thing typescript import component angularcore class hero id number name string const heroes hero id name mr nice id name narco id name bombasto id name celeritas id name magneta id name rubberman id name dynama id name dr iq id name magma id name tornado component selector myapp templateurl tplapphtml styleurls stylesheroescss export class appcomponent selectedhero hero title fwefwe hero hero id name windstorm heroes heroes onselect hero hero void thisselectedhero hero template html title heroname details id heroid name heroname heroes heroid heroname selectedheroname details id selectedheroid name throw exception message error error caused read property name undefined first line debug second place ignore error template like django templater thanks", "num": "12170", "d": "10/2016"}, {"title": "consolelog breaks sites older ies", "body": "angular references places facadesrclangts srcbrowserbrowseradapterts presence places breaks sites several things need decide need want references different places comment would suggest want workaround angular decide people use polyffill change open issue change", "num": "12169", "d": "10/2016"}, {"title": "bug router update primary route secondary outlet changed", "body": "submitting check one x current behavior change secondary route primary route cleared cases parentcomponent holds outlets primary aux url parentchild primary child aux empty navigate aux url parent aux problem primary route one big segmentgroup primary route split segmentgroups parent child see plunkr everything works expected expected behavior secondary route change navigate aux url parent childaux childs minimal reproduction problem instructions motivation use case changing behavior outlet called modal use show modals add content modal outlet current primary route change please tell us environment osx chrome safari windows chrome firefox angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12168", "d": "10/2016"}, {"title": "problem contentchildren injection parent directive child directive", "body": "submitting check one x current behavior sample code contentchildren documentation one modification child directive injects via constructor javascript import aftercontentinit contentchildren directive querylist angularcore directive selector childdirective export class childdirective constructor private somedir somedir directive selector somedir export class somedir implements aftercontentinit contentchildren childdirective contentchildren querylist ngaftercontentinit contentchildren set run get swap directives declarations get expected behavior fail minimal reproduction problem instructions use code angular angularcli motivation use case changing behavior please tell us environment angular version find similar issue browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12167", "d": "10/2016"}, {"title": "host nt work", "body": "submitting current behavior using css selectors versions nt work host also tried applying expected behavior host host add element dom minimal reproduction problem instructions create component stylesheet add styles host host nt see styles show motivation use case changing behavior undocumented perhaps bug please tell us environment angular version browser chromium language typescript node aot issues", "num": "12165", "d": "10/2016"}, {"title": "aot compilation failed unexpected value imported appmodule", "body": "submitting current behavior using ngsemantic module works well far however aot compilation fails expected behavior aot successful minimal reproduction problem instructions works well jit module exported class imported appmodule looks like good side reported similar issue github though motivation use case changing behavior use ngsemantic aot please tell us environment angular version browser language node aot issues", "num": "12164", "d": "10/2016"}, {"title": "using chrome visite occurred error", "body": "like wrong chrome", "num": "12163", "d": "10/2016"}, {"title": "fix router bootstrap finishes routes resolved", "body": "submitting check one x current behavior router requires resolving async data bootstrap complete router finished resolving rendering parent components already loaded rendered waiting children load behavior problematic prerendered applications user first see prerendered content bootstrap complete route resolution still pending see either blank page partiallyrendered page routes resolved full page content render match prerendered content expected behavior expect complete route resolution rendering complete minimal reproduction problem instructions clone gh repo point browser watch console logs bootstrap done items component initialized motivation use case changing behavior smooth transition prerendered page dynamic page preboot compatibility angular version router", "num": "12162", "d": "10/2016"}, {"title": "problems using angular router angular", "body": "submitting check one x current behavior using npm install angularrouting local routerdts following import statement import componentresolver injector ngmodulefactoryloader type angularcore file latest angular routerts following import statement import compiler componentfactoryresolver injector ngmodulefactoryloader reflectiveinjector type angularcore causes problems try run angular solve problem reverted angular expected behavior import statements would match minimal reproduction problem instructions download following dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter motivation use case changing behavior use latest angular router please tell us environment windows intellij npm angular version browser chrome language typescript xx node aot issues", "num": "12159", "d": "10/2016"}, {"title": "query params always purport empty page load even though provided", "body": "submitting check one x current behavior injected query parameters present url fire empty object immediately query params expected behavior would expect fire second time provided query params minimal reproduction problem instructions component inject call constructor navigate path see alert even though query param provided happens run code component constructor motivation use case changing behavior logic place appends query param url present subscription wrongly tells query param current workaround use may introduce race conditions please tell us environment operating system macos sierra version ide atom package manager npm based angular version browser chrome version safari version language typescript xx typescript version node aot issues sure aot means worth node version", "num": "12157", "d": "10/2016"}, {"title": "aot compiler errors", "body": "updated project beta using angular instead longer able compile getting error error error encountered resolving symbol values statically calling function createstore function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c ionicionicreduxtesttmpappappmodulets resolving symbol appmodule c ionicionicreduxtesttmpappappmodulets modifications made appmodulets order use redux store think giving errors ngmodule redux reduxthunk rootreducer import store createstore applymiddleware redux import reduxthunk reduxthunk import rootreducer modulesrootreducer const appstore createstore rootreducer applymiddleware reduxthunk adding providers array node aot issues node npm ideas done differently", "num": "12156", "d": "10/2016"}, {"title": "custom urlresolver latest version", "body": "submitting check one x current behavior customurlresolver project manipulation templateurl working rc something similar expected behavior replace url logic mentioned custom code angular version", "num": "12155", "d": "10/2016"}, {"title": "allow dependency injection class properties inheritance cleaner", "body": "submitting check one x current behavior currently inject services constructor ie extend class would get dependencies pass super eg get tedious need add change dependency expected behavior lets use optional class property annotation leave di constuctor want eg export class simple inject element elementref inject inject custom constructor export class complex extends simple inject customservice", "num": "12152", "d": "10/2016"}, {"title": "testing service testbed angular", "body": "hello still fighting testbed test service component test service mocks service needs service via injection inject services null sample non working test describe loginservice tests gt let service loginservice let tokenhandler async gt testbedcompilecomponents inject loginservice xhrbackend service loginservice mockbackend mockbackend gt consolelog inject mockbackend mockbackend consolelog inject service service following output log inject mockbackend null log inject service null please help injection working", "num": "12149", "d": "10/2016"}, {"title": "child component resolver wait parent component resolver finish", "body": "submitting current behavior two nested components parent child separate resolvers routing config javascript const routes path redirectto pathmatch full path parent resolve parent parentresolver children path component parentcomponent path child component childcomponent resolve child childresolver entering directly url corresponding child component two resolvers start resolving concurrently leads conflict depends state modification made parent component expected behavior entering directly url corresponding child component expected behavior get resolved first resolution take place minimal reproduction problem instructions go plunker open browser console see finished look implementation see resolution timeout shorter resolution timeout means resolvers concurrent motivation use case changing behavior looks valid routing configuration supported please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12148", "d": "10/2016"}, {"title": "locaction change events fired twice using hashlocationstrategy", "body": "submitting check one x current behavior app uses url hash changed manually observable service fire two events change also occur browser backforward buttons used clicking traditional anchor expected behavior service emit exactly one event discrete change location minimal reproduction problem instructions see plunkr click one two anchors see events logged may also want open plunkr separate window change hash manually see two events logged change motivation use case changing behavior although may cause trouble main issue location change event scheduling new router navigation appearently router remember already process changing url issues second navigation url end result two router navigations running parallel experience least causes double invocation guardsresolvers angular version browser chrome firefox language", "num": "12146", "d": "10/2016"}, {"title": "ngswitch running migrate", "body": "hi upgrading code read first changelog ngswitch seem breaking change ngswitchwhen ngswitchcase final code submitting check one x current behavior seleccting value ignoring html tags inside expected behavior depending variable xxx angular put data sometimes etc minimal reproduction problem instructions download repo switch brach follow built instructions connect server motivation use case changing behavior version upgrade please tell us environment os debian linux ide atom package manager npm http server self made package based golang macaron angular version working fine browser chrome language typescript node aot issues", "num": "12145", "d": "10/2016"}, {"title": "enable resolving data loadchildren dynamically loaded modules", "body": "submitting check one x current behavior seems data resolved dynamically loaded modules injectable export class resolvefn implements resolve constructor resolve const routes routes path component somecomponent children path component component path somepath resolve data resolvefn loadchildren somedynamicmodule dynamicmodule dynamicmodule component support planned", "num": "12144", "d": "10/2016"}, {"title": "property updated outside class view updated", "body": "submitting check one x current behavior property updated outside class view updated expected behavior property updated outside class view updated respectly minimal reproduction problem instructions property updated every view updated motivation use case changing behavior data comes websocket connection update related property view nt change please tell us environment mac vs code npm nodejs angular version browser chrome language typescript", "num": "12143", "d": "10/2016"}, {"title": "ca nt populate viewchildren querylist children directives init", "body": "see problem event fired init see console child change visibility status event fired constructor parameter viewquery templatesectionitem childrensections querylist list success populated childrensections instantiated never populated", "num": "12142", "d": "10/2016"}, {"title": "bug aot provider preloadallmodules aot mode", "body": "submitting check one x current behavior use preloadallmodules routermodule config create compiling building aot works perfectly fine jit mode expected behavior work without error aot jit mode minimal reproduction problem instructions tried create minimal branch reproduce error use git clone branch install use reproduce error start server see error browser create jit build use dev server see work fine without errors jit mode remove preloadallmodules aot mode compile boot fine please tell us environment osx angular version router browser language typescript node aot issues", "num": "12141", "d": "10/2016"}, {"title": "proposal rename decorator appropriate name", "body": "summary intuitive name name tell actual behavior problem currently angular many decorators dependency injection named nicely explain job marks dependency optional dependency resolution start parent injector retrieve dependency intuitive complex name retrieve dependency injector reaching host element current component two problems least name nt tell us nt work regular providers name used proposal sure name appropriate ideas", "num": "12140", "d": "10/2016"}, {"title": "required atteibute mising formbuilder validatorsrequired", "body": "submitting check one x current behavior using formbuilder formgroup formcontrol validatorsrequired required ngreflectrequired attributes missing input guide use signing inputs ok erroneous sounds wrong maintain validators two different places expected behavior validatorsrequired added formcontrol synchronous validators ngvalid required ngvalidrequired fire minimal reproduction problem instructions motivation use case changing behavior sounds wrong maintain validators two different places css selector nice please tell us environment arch linux apache angular version browser chrome xx firefox xx language typescript xx node aot issues", "num": "12134", "d": "10/2016"}, {"title": "router provide option make matching forgiving", "body": "currently given following configuration router throw trying match following url one forces developer add fake blank component consider relaxing first router configuration matches one url", "num": "12133", "d": "10/2016"}, {"title": "extraction tool creating transunit tag", "body": "submitting check one x current behavior expected behavior create tag minimal reproduction problem instructions motivation use case changing behavior doesnt work please tell us environment visual studio windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "12131", "d": "10/2016"}, {"title": "form considered valid despites autocompletion", "body": "submitting check one x current behavior form submit button disabled form valid form contains username input password one page loaded inputs automatically filled chrome button stays disabled input contains valid data expected behavior button become enabled form automatically completed chrome valid data minimal reproduction problem instructions run plunkr select option open plunkr separate window form automatically filled fill submit form close window run plunkr separate window normally form automatically filled browser button grayed note even though button grayed click send form obvious user motivation use case changing behavior concrete use case would prevent form sent empty however user able send form one completed automatically browser please tell us environment windows phpstorm npm webpack angular chrome typescript node", "num": "12130", "d": "10/2016"}, {"title": "asyncpipe nt work rxjs subject", "body": "submitting check one x current behavior asyncpipe works properly behaviorsubject nt work rx subject info expected behavior works subject minimal reproduction problem instructions export class appcomponent foo new subject gt constructor settimeout gt thisfoonext getfoo return thisfooasobservable motivation use case changing behavior use subject somethines need subscribe service data loaded make decisions behaviorsubject forces initialize object empty data please tell us environment required angular version angular browser language node aot issues", "num": "12129", "d": "10/2016"}, {"title": "typo canactivatechild api reference", "body": "submitting check one x canactivatechild example code implemented canactivate instead canactivatechild current behavior expected behavior motivation use case changing behavior api documentation errors please tell us environment os windows au ide vs code angular version language", "num": "12127", "d": "10/2016"}, {"title": "upgrading throws", "body": "submitting check one x current behavior upgrading app error thrown components expected behavior everything compile without errors minimal reproduction problem instructions checkout repo see error thrown console angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12126", "d": "10/2016"}, {"title": "pin angular amp dependency versions plunkers repros", "body": "refer developers reproducing issues currently refers latest npm release instead developers using version plunker pinned specific versions angular eg dependencies rxjs zones etc plunker could autogenerated part builddeployment process need update issue template use generated plunkers use intermediate wiki markdown page referring latest versions", "num": "12123", "d": "10/2016"}, {"title": "sugar syntax support output exportas", "body": "submitting check one x current behavior using sugar syntax could nt find way register expression handle output possible put output element since element actual directive would also like point supported directives expected behavior allow register events directive motivation use case changing behavior sugared directives par regular directives might cause confusion least support parsing output expression angular version", "num": "12121", "d": "10/2016"}, {"title": "bug tslint", "body": "submitting current behavior updating angular tslint get error present nodemodules templateanimationsforeach function entry triggerlookupadd entryname typeerror read property animations undefined templateparsevisitorvalidateelementanimationinputoutputs nodemodules templateparsevisitorvisitelement nodemodules elementvisit nodemodules nodemodules arrayforeach native visitall nodemodules templateparsertryparse nodemodules objectexportsparsetemplate arrayforeach native expected behavior works worked minimal reproduction problem instructions install angular common compiler core forms htpp tslint please tell us environment windows angular version", "num": "12120", "d": "10/2016"}, {"title": "low priority sp prolyfill", "body": "submitting check one x current behavior error say polyfill prolyfill expected behavior angular app builds fine webpack etc run produce error minimal reproduction problem instructions build angular application nt use ngzone constructors remove import zonejsdistzone maints motivation use case changing behavior please tell us environment windows webstorm angular version latest browser chrome language typescript node aot issues", "num": "12119", "d": "10/2016"}, {"title": "animations triggering using ngfor components", "body": "submitting check one x current behavior animations shown upon creationdeletion component ngfor expected behavior animations work components html elements ngfor minimal reproduction problem instructions add animation component created using ngfor example please tell us environment macos sierra webstorm angular version browser chrome stable firefox stable language typescript", "num": "12117", "d": "10/2016"}, {"title": "pristine state class removed value changed via ngmode input", "body": "submitting check one x current behavior hope yet mentionned could find issues value input changed via ngmodel pristine state removed expected behavior since doc says pristine control value changed expect pristine removed minimal reproduction problem instructions see plunkr click setname pristine changed type anything box pristine state removed motivation use case changing behavior case pristine used css informational purpose ux side please tell us environment max os x chrome latest angular version browser tested chrome expect browser change anything could test needed language typescript", "num": "12116", "d": "10/2016"}, {"title": "using async one test cause weird behaviour", "body": "submitting check one x current behavior js tslint disable nousebeforedeclare import commonmodule angularcommon import testbed componentfixture fakeasync async angularcoretesting import advance testing import activatedroute angularrouter import component input ondestroy oninit angularcore describe component async weird issue gt let fixture componentfixture let component beforeeach async gt testbedconfiguretestingmodule imports commonmodule declarations apppagecomponent hostcomponent providers provide activatedroute usevalue activatedroutestub fixture testbedcreatecomponent hostcomponent component fixturedebugelementchildren componentinstance succeed gt expect component nottobenull case empty nginit never happened fakeasync gt advance fixture expect component nottobenull component template class hostcomponent public entities randomvalue const activatedroutestub queryparams subscribe function return unsubscribe function component template selector apppage class apppagecomponent implements oninit ondestroy input entities private queryparam constructor private route activatedroute ngoninit thisqueryparam thisroutequeryparamssubscribe ngondestroy thisqueryparam unsubscribe crash use get expected behavior fail minimal reproduction problem instructions use code angular angularcli motivation use case changing behavior forced use async async necessary imho please tell us environment stated angular version find similar issue browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview local language typescript xx node aot issues", "num": "12115", "d": "10/2016"}, {"title": "docs angularcommon directive ngcontainer", "body": "submitting check one x current behavior docs ngcontainer however used api documentation ngpluralcase ngplural ngswitch mentioned use ngcontainer group multiple root nodes referenced stackoverflow answer expected behavior separate entry angular docs presumably section angularcommon listed directive along whether stable experimental minimal reproduction problem instructions search look docs site motivation use case changing behavior given presumably public directive would good know usage well stability please tell us environment angular version browser language node aot issues", "num": "12114", "d": "10/2016"}, {"title": "function route generation causes lazy module unreachable", "body": "submitting check one x current behavior using function tidy route generation eg setup logs correctly functional however routing module causes module found errors giving correct path error log eg copied outputs functions used directly route configs instead abstracting functions app successfully loads runs perfectly expected behavior would expect able abstract repetitive route definitions function allow better cleaner dx minimal reproduction problem instructions motivation use case changing behavior provide better dx creating many routes much nicer able generate custom function complete route definition boilerplate repeated please tell us environment angular version angular angular cli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome canary language typescript xx typescript node aot issues", "num": "12113", "d": "10/2016"}, {"title": "input testing issue nt trigger input inside form", "body": "submitting check one x current behavior hi testing components forms able trigger input changes input inside form otherwise input inside form input event nt trigger ngmodelchange plunker angular reproducing error", "num": "12112", "d": "10/2016"}, {"title": "using template strings templateurlproperty component", "body": "submitting check one x current behavior using template strings backticks fill component template url uses string template expected behavior filling template url kind string would suppose uses string url minimal reproduction problem instructions make component like import component angularcore component templateurl export class mycomponent content component shall literal string mycomponenthtml motivation use case changing behavior maybe using variable base template url nt really need seems logical able use kind string templateurl please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome language typescript xx typescript node aot issues", "num": "12111", "d": "10/2016"}, {"title": "inject service test spec jasmine", "body": "upgraded application services like angularcache injected componentit working fine running componentbut writing test case component able inject getting error error provider angularcacheservice", "num": "12110", "d": "10/2016"}, {"title": "angular defer templateurl loading route activated", "body": "current behavior application initially loads components routes templateurl resolved loaded server means client comes server async request cap reached waiting views nt used instead loading assets view currently activated expected behavior components templateurl loading deferred route first activated done done minimal reproduction problem instructions motivation use case changing behavior browser limit many async requests pending budget used loading views nt shown instead loading assets view shown page loading speed slowed please tell us environment angular compiled typescript running nodejs components use templateurl property requests nodejs server render jade templates angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12108", "d": "10/2016"}, {"title": "deep link feature promised implemented tutorial", "body": "submitting check one x current behavior routing around app chapter tutorial talks new requirement deep linking clicking deep link email opens detail view particular hero however sample code tutorial seem enough actually implement feature reaching end chapter leaves app support deep linking expected behavior pasting deep link like take hero detail view instead get http error minimal reproduction problem instructions live example linked chapter actually exhibits problem open routing around app chapter click link sentence run live example part click button topright corner preview frame open preview window see url like reload page chrome rightclicking page clicking reload point would expect dashboard appear instead get http motivation use case changing behavior excited see deep linking included part new angular tutorial since expected feature web app believe included tutorial would love see tutorial updated others learning angular really get head start building usable web apps please tell us environment bash mac os x el capitan node version npm version node version", "num": "12107", "d": "10/2016"}, {"title": "internet explorer always redirecting page enter url address bar", "body": "submitting check one x current behavior application always redirecting enter url address bar internet explorer sometimes works sometimes see problem chrome browser expected behavior user enters url address bar application always redirect page associated url minimal reproduction problem instructions provide minimal demo problem via plnkr need enter value address bar application functionality supported plnkr reproduce first get build starter project like one angular class application ready open internet explorer browser enter url address bar press enter click hyperlink detail page select ctrla copy ctrlc url address bar copied click hyperlink index page return home page internet explorer address bar replace entire url pasting ctrlv url step press enter redirect internet explorer detail page sometimes see detail page repeat steps see bug usually see error third repetition please tell us environment angular version browser ie language typescript", "num": "12100", "d": "10/2016"}, {"title": "service injectable without injectable decorator", "body": "submitting check one x current behavior documentation injectable says marker metadata marks class available injector creation injector throw noannotationerror trying instantiate class marker cli also adds injectable services creates tutorial explains service must annotation however simple experiment component using service annotated injectable works fine see example seems injectable annotation actually needed service dependencies must injected constructor nt match documentation says expected behavior angular throw error injector trying create instance service decorated injectable documentation fixed explain injectable really minimal reproduction problem instructions launch plunkr note fooservice successfully created injector injected app component even though nt injectable decorator motivation use case changing behavior make documentation match actual behavior angular viceversa please tell us environment na happens environments angular version browser language typescript", "num": "12098", "d": "10/2016"}, {"title": "web worker ngc aot compilation error web worker scenario", "body": "submitting check one x current behavior change modules angularcompilerclisrcstaticreflectorts broke ngc web worker scenario error expected behavior error minimal reproduction problem instructions using repository master branch either run npm start npm run ngc motivation use case changing behavior please tell us environment windows vscode angular version browser na language typescript node aot issues", "num": "12097", "d": "10/2016"}, {"title": "hgroup known element", "body": "submitting check one x current behavior attempting group header tags using hgroup tag template parser returns error hgroup known element expected behavior hgroup tag recognized element template compiler minimal reproduction problem instructions create template add foo motivation use case changing behavior like leverage semantics hgroup tag please tell us environment windows visual studio code typescript webpack angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12096", "d": "10/2016"}, {"title": "unable use contentchildren ngfortemplate", "body": "submitting check one x current behavior getting directives work directives created using expected behavior directives inside repeated templates using picked like would using minimal reproduction problem instructions check see directive repeated template passed use query motivation use case changing behavior general seems like work specific use case making pair components use one used inside others template together allow filtering collection whose items subitems one feature items filtered ie matching results message shown would assume way would query items parent subscribe changes please tell us environment reproducible plunker angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome language typescript node aot issues", "num": "12094", "d": "10/2016"}, {"title": "search docs quickstart page work", "body": "submitting check one x x bug report gt search github similar issue pr submitting current behavior go expected behavior enter angular term top left search docs text field nothing foundtriggered seems search broken minimal reproduction problem instructions motivation use case changing behavior want working search please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried search latest ff chroem language typescript xx node aot issues", "num": "12093", "d": "10/2016"}, {"title": "form template variable gets updated click function gets triggered", "body": "submitting check one x current behavior template variable points ngform gets updated user action angular event triggered eg uncheck checkbox click event handler event handler called template variable points ngform still stale value checkbox ie says checkbox checked expected behavior template variable points ngform get updated event handler triggered minimal reproduction problem instructions plunkr set motivation use case changing behavior change page user want submit form fields backend json request parameters legacy code process request normal separate request parameters page dynamic fields driven metadata known upfront fields page want submit form fields use urlsearchparams submit request parameters value stale shown plunkr please tell us environment os windows ide visual code package manager npm http server lite server angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome edge firefox language typescript xx typescript tried others node aot issues", "num": "12092", "d": "10/2016"}, {"title": "intellisense errors rebuilding application angular version", "body": "trying rebuild application latest angular version everything works fine except intellisense errors observables issue rxjs module error throwing get rid error reason paste image getting somethign went wrong uploading providing link stackoverflow", "num": "12089", "d": "10/2016"}, {"title": "load component route depending asynchronous condition", "body": "submitting check one x bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior nt seem possible easy way without use framework core stuff expected behavior able determine asynchronous condition condition resolved later component load route motivation use case changing behavior say following common behavior expected medium size app let say dashboard login wan na keep different components userdashboard admindashboard filling template code ngif condition resolved immediately role comes api right away conditionally pass one component another specific route nt seem answer implies compile load component please check angular version", "num": "12088", "d": "10/2016"}, {"title": "dynamic component final", "body": "hi tried create component dynamic like file dynamiccomponentts import directive input viewcontainerref component reflectiveinjector componentfactory componentfactoryresolver angularcore export function createcomponentfactory resolver componentfactoryresolver metadata component promise const cmpclass class dynamiccomponent const decoratedcmp component metadata cmpclass return new promise resolve gt resolve resolverresolvecomponentfactory decoratedcmp directive selector dynamichtmloutlet export class dynamiccomponent input src string constructor public vcref viewcontainerref public resolver componentfactoryresolver ngonchanges thissrc return declare component declarations file appmodulets got error exception uncaught promise error component factory found dynamiccomponent declare entrycomponents file appmodulets got another error uncaught error could compile dynamiccomponent component tried change annotation directive component like component selector dynamichtmloutlet template got error unhandled promise rejection template parse errors ca nt bind src since nt known property dynamichtmloutlet dynamichtmloutlet angular component src input verify part module dynamichtmloutlet web component add customelementsschema ngmoduleschemas component suppress message anyone help give tuto explain create dynamic component using finale please", "num": "12087", "d": "10/2016"}, {"title": "navigate aux route child componentless parent", "body": "submitting check one x current behavior trying activate child aux route routing config try navigate get expected behavior navigate route without errors minimal reproduction problem instructions go click navigate button motivation use case changing behavior looks valid routing configuration supported please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12086", "d": "10/2016"}, {"title": "template parsing error binding data data attribute js plugin fails", "body": "submitting check one x current behavior use ngfor render images bind image src data attribute like whole application fails bootstrap following error messages expected behavior angular still bind corresponding directive found minimal reproduction problem instructions motivation use case changing behavior bind data data attribute js plugins please tell us environment macos x angular version browser language typescript node aot issues thanks investigating", "num": "12085", "d": "10/2016"}, {"title": "tutorial http page", "body": "submitting check one x current behavior bug documentation tour heroes tutorial expected behavior tutorial work http page minimal reproduction problem instructions copy code http page tutorial page motivation use case changing behavior finishing tutorial please tell us environment macbook pro el capitan angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome browsers language typescript xx node aot issues page tour heroes tutorial mention import appappmodulets file import inmemorywebapimodule angularinmemorywebapi import inmemorywebapimodule per packagejson dependency sorry comment wrong page area could find easily", "num": "12084", "d": "10/2016"}, {"title": "use rather", "body": "given use case seems like could away type use instead symbols immutable unique polyfills symbol generally lightweight information symbol", "num": "12082", "d": "10/2016"}, {"title": "allow pipes substituted passthrough tests", "body": "submitting check one x current behavior currently pipes used components imported tests declared part testing module time nt necessary testing decreases isolation expected behavior would like pipes could easily substituted tests simple pass throughs even custom transform function would help improve isolation component tests motivation use case changing behavior less dependencies tests", "num": "12080", "d": "10/2016"}, {"title": "look supporting entrycomponents testbedconfiguremodule", "body": "right supported yet sure reason behind todo julie investigate", "num": "12079", "d": "10/2016"}, {"title": "angularcoreindex exported member query implementation query experimental api development", "body": "submitting check one x current behavior bug manifests developer tools angular cli developer tools say typeerror webpackrequirei function wds errors compiling client default c module c devnodemodules angularcoreindex exported member query expected behavior reporduction demo app animations angular connect searched query function internet angular copied bits project seems server renders web application angularcli aot compilation also complains find member query component decorator property animations trigger transition invoking query function passing element style apply element minimal reproduction problem instructions bug feature request implementation query function angular import query angularcore ca nt find query motivation use case changing behavior use case changing behavior richer animation experience angular please tell us environment angular angularcli node os angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript features node aot issues node", "num": "12078", "d": "10/2016"}, {"title": "example links directivets outdated", "body": "angularmastermodules angularcoresrcmetadatadirectivests came across example live demo valid angular version latest pull thanks fk", "num": "12077", "d": "10/2016"}, {"title": "docs archive angulario site content releases", "body": "adding angulario site snapshot tagging angulario repository push release maintain archives docs automated release task", "num": "12076", "d": "10/2016"}, {"title": "reactive forms", "body": "support reactive forms current behavior following template standard app component select item itemname throws additionally control never marked invalid added creating form following plunkr shows issues expected behavior value associated form control hold array items selected list alternate way tracking selected items applying validations element motivation use case changing behavior common html element team plan supporting element reactive forms supported already correct implementation element reactive forms", "num": "12074", "d": "10/2016"}, {"title": "router fails load child component specified named outlet", "body": "submitting check one x current behavior router fails load child component specified outlet error configuration follows link navigates route expected behavior expect component load specified outlet without error minimal reproduction problem instructions go click ok link component fails load motivation use case changing behavior want load component aux outlet nt obvious reason configuration fail named outlet exists right next primary one please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12072", "d": "10/2016"}, {"title": "formcontrol default value initialized ternary operator shows object object", "body": "submitting check one x current behavior got following code initialize form component let editmode boolean thistemplatetemplateid thisedittemplateform thisformbuildergroup templateid value editmode thistemplatetemplateid validators validatorsrequired thistemplateidvalidator datastoragetime value editmode thistemplatedatastoragetime thisglobalparameterdatastoragetime validatorsrequired validatorspattern value variable thistemplatetemplateid undefined editmode false datastoragetime correct default value set linked input form hovewer templateid input set object object instead empty string using final realease npm chrome browser version", "num": "12070", "d": "10/2016"}, {"title": "candeactivate executes routing routes guarded canactivatechild", "body": "hi route whenever navigate dashboard candeactivate executes execute right navigating different route unrelated signin", "num": "12069", "d": "10/2016"}, {"title": "router animations events without event", "body": "submitting check one x current behavior component displayed router want use animations component move code base class extended component stops working im sure problem router animations also use listening animation start event event parameter passed callback expected behavior scenarios work minimal reproduction problem instructions motivation use case changing behavior please tell us environment win vscode npm systemjs aspnetcore angular version browser language typescript", "num": "12068", "d": "10/2016"}, {"title": "angular domsanitizer bypasssecuritytrusthtml svg", "body": "using domsanitizer svg html string previous current version angular worked fine getting object back called new way access output domsanitizer receiving safehtml type something point bypasssecuritytrusthtml still filters html answers postcard please", "num": "12067", "d": "10/2016"}, {"title": "packagejson branch wrong version", "body": "generate angular api docs local copy angularangular pinned branch footer docs wrong version packagejson set use version packagejson construct url fixed branch see context note apparent live docs manually changing packagejson issue request fix part release process sets version packagejson branch repository", "num": "12066", "d": "10/2016"}, {"title": "angularfire problem", "body": "problem npm installation angularfire released versioni attached snap packagejson npm installation cmd mode packagejson kindly give solution", "num": "12065", "d": "10/2016"}, {"title": "testing angular using jasmine", "body": "submitting check one x current behavior angular component testing rc works accurately using jasmine karma produces desired results executing tests spects file component service application migrated angular final release browser testing fails testhtml viewed browser iechromefirefox following error typeerror read property spies undefined currentspies spyregistryclearspies clearresourcesforrunnable zonedelegateinvoketask zoneruntask drainmicrotaskqueue zonetaskinvoke expected behavior expected accurate behavior browser show test either passed failed per test data minimal reproduction problem instructions create application using visual studio code install necessary dependencies using npm install packagejson following dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter reflectmetadata corejs rxjs systemjs zonejs bootstrap jquery express ws devdependencies typesexpress typesjasmine typesws jasminecore karma karmachromelauncher karmafirefoxlauncher karmajasmine nodemon typescript component import component viewencapsulation angularcore component selector myapplication templateurl appapplicationhtml export default class appcomponent test spec appspects import appcomponent app describe appcomponent gt true gt let app new appcomponent expect app instanceof appcomponent toequal true references testhtml follows var testmodules appappspec promiseall systemimport angularcoretesting systemimport angularplatformbrowserdynamictesting function modules var cp modules cptestbedinittestenvironment browserbrowserdynamictestingmodule browserplatformbrowserdynamictesting load spec files return promiseall testmodulesmap function module return systemimport module windowonload catch consoleerrorbind console please tell us environment os windows professional ide visual studio code node package manager express http server even tested koa angular version angular final release browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome ie firefox language typescript xx typescript language used node aot issues", "num": "12064", "d": "10/2016"}, {"title": "final component class inheritance", "body": "hi everyone trying extend component using class inheritance component feedts component selector feed templateurl feedhtml providers provide baselistcontainer useexisting baselistcontainer export class feed extends baselistcontainer classe baselistcontainer like export class baselistcontainer input key string feed component used html like error received unhandled promise rejection template parse errors ca nt bind key since nt known property feed schema worked fine final detail iam using rc typescript thanks help", "num": "12063", "d": "10/2016"}, {"title": "ng upgrade silently fails bootstrap hybrid application", "body": "submitting check one x current behavior upgrade adapter silently fails bootstrap hybrid application following cases invalid dependency components see reproduction plunk bellow template errors angular component see reproduction plunk bellow expected behavior errors reported upgrade adapter minimal reproduction problem instructions first plunk illustrates scenario invalid dependency requested component open browser developer tools open plunk see message bootstrapping fix bootstrapping issue comment lines srcappts comment fix bootstrapping issue constructor foo bar second plunk illustrates scenario invalid template used angular component open browser developer tools open plunk see message bootstrapping fix bootstrapping issue comment line srcappts motivation use case changing behavior improve development experience please tell us environment angular version browser language typescript node aot issues na", "num": "12062", "d": "10/2016"}, {"title": "component selector unable select element id", "body": "submitting check one x current behavior component decorator unable select id expected behavior component selector able select id minimal reproduction problem instructions simply change component selector using motivation use case changing behavior currently need select like please tell us environment ubuntu sublime webpack apache angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript", "num": "12061", "d": "10/2016"}, {"title": "router work rxjs bundle", "body": "submitting current behavior rxjsobservableofof undefined applyredirectsprototypeexpandsegment using rxjs bundle expected behavior rxjsobservableofof defined operator motivation use case changing behavior unable use router using bundle load time application slow operators loaded one one please tell us environment packagejson name angularquickstart version description quickstart packagejson documentation supplemented testing support scripts start tsc amp amp concurrently tsc w liteserver npm run webdriver update tsc amp amp concurrently protractor protractorconfigjs killothers success first lint tslint applicationts verbose lite liteserver test grunt build amp amp concurrently grunt watch karma start buildkarmaconfjs testonce tsc amp amp karma start karmaconfjs singlerun tsc tsc tsc w tsc w webdriver update webdrivermanager update keywords author license isc dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter systemjs corejs reflectmetadata rxjs zonejs bootstrap systemtext fontawesome jquery normalizecss underscore devdependencies typescorejs typesjasmine typesjquery typeskarma typesmoment typesunderscore canonicalpath concurrently extend grunt gruntcli gruntcontribclean gruntcontribconnect gruntcontribcopy gruntcontribless gruntestewatch gruntts grunttslint jasminecore karma karmachromelauncher karmacli karmahtmlfilereporter karmajasmine karmajasminehtmlreporter liteserver lodash protractor rimraf tslint typescript repository angular version browser chrome language typescript", "num": "12060", "d": "10/2016"}, {"title": "formcontrol multi select", "body": "submitting current behavior use add multi select element ca nt make working get error exception uncaught promise error error class categorycomponent inline caused valuesmap function expected behavior use bind multi select selected items variable example could add tag get selected items minimal reproduction problem instructions use works problems use select multiple nt work plunker motivation use case changing behavior use case select menu users select choice please tell us environment linux mint using webstorm ide gulp build pipeline angular version using angular browser tried chromium firefox language typescript", "num": "12059", "d": "10/2016"}, {"title": "incorrect formatting date datepipe", "body": "submitting check one x current behavior date incorrectly formatted datepipe expected behavior formatted input format minimal reproduction problem instructions motivation use case changing behavior work expected please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview ie edge language typescript xx", "num": "12058", "d": "10/2016"}, {"title": "improvement externalizing environment angular cli build process", "body": "great article externalizing environment file build deployment phase responsible providing app correct environment variables build deploy anywhere project get work externalize environment parameters way article imported variables environmentdevts file like export const environment production false environment window env environment build window env build sitename window env sitename also referred real environment file indexhtml via javascript import submitting check one x current behavior bug expected behavior bug minimal reproduction problem instructions environment files compiled app build phase angular cli ideally outside motivation use case changing behavior build deploy anywhere angular version language typescript", "num": "12055", "d": "10/2016"}, {"title": "aot compiler creating ngfactory files nonproject files linking nonexistent paths", "body": "submitting check one x current behavior aot compiler processing creating files use include directory compilation succeed expected behavior may wrong expected project components styles templates processed minimal reproduction problem instructions fact aot compiler fail nt access files instance edit change get errors kind compilation include dir compilation resulting directory structure output folder badly structured see details along tsconfig even include dir allow compilation run completes without error app fails browser trying load files angularcorebundlescoreumdjssrclinkerngmodulefactoryjs angularcommonbundlescommonumdjssrccommonmodulejs suspiciouslooking imports import nodemodules angularmaterialdialogdialogcontainerngfactory import nodemodules angularmaterialtooltiptooltipngfactory motivation use case changing behavior get aot work please tell us environment windows phpstorm angular version language typescript node aot issues", "num": "12053", "d": "10/2016"}, {"title": "code page disabled back forward caching", "body": "submitting check one x current behavior ie windows os child component see information see error message click back button navigating back child component expected behavior back forward buttons work child routes minimal reproduction problem instructions motivation use case changing behavior please tell us environment win os enterprise angular version browser ie edge safari latest language typescript node aot issues", "num": "12052", "d": "10/2016"}, {"title": "documentation incorrect", "body": "submitting check one x current behavior header service isolation states nt need want domain specific service used outside feature module recommends providing via feature module rather app module expected behavior would expect recommend placing provides inside feature highest chain component believed provides worked way module global way make scoped service would via definition root level component feature still learning could wrong sure case cheers would include pr idea contrib doco module angulardocs nt page looking cheers", "num": "12050", "d": "10/2016"}, {"title": "conflict style guide app structure demo code", "body": "submitting check one x current behavior style guide file folder structure shows appcomponentts file srcapp demo code appmodulets resides root src line code expected behavior line code would say minimal reproduction problem instructions navigate scroll appmodulets file code motivation use case changing behavior prevent new developers use awesome copy code feature docs experiencing unnecessary errors please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12049", "d": "10/2016"}, {"title": "onsubmit submits form handler function error", "body": "whish basic sign form error occurs method submits form possibility preventing default action first", "num": "12048", "d": "10/2016"}, {"title": "docs error module providers scope", "body": "submitting check one x current behavior docs inconsistent regards providers module scope two contradictory explanations contactservice provider applicationscoped angular registers module providers application root injector might expect angular offer modulescoping mechanism enforce design nt angular module instances unlike components injectors ca nt provider scopes crisisservice neither needed wanted outside crisis center domain instead registering appmodule providers makes visible everywhere register crisisservice crisiscentermodule providers array limits scope crisisservice crisis center routes module outside crisis center access expected behavior either provider scope limited module declared expect docs reflect correct behavior everywhere one paradigms real mccoy angular version", "num": "12047", "d": "10/2016"}, {"title": "module defined error browser using bundled js file produced aot rollup", "body": "submitting check one x current behavior already lot talk issues moduleid issues arises specifically aot rollup following aot tutorial angulario website steps successfully completed whole application one buildjs file running application browser throws error uncaught referenceerror module defined aware obviously happening plain javascript nt know module expected behavior shouldt ngc rollup take care build process browser nt complain seen similar question stackoverflow unanswered question google groups ca nt seem find solution please tell us environment angular version browser chrome nt tested elsewhere language typescript node aot issues", "num": "12046", "d": "10/2016"}, {"title": "rfc elements schema add support custom schemas", "body": "schemas currently use following values allow property allow tag property need implement way defined custom schemas ie defining polymer elements properties events mprobst would available discuss integrate security schema", "num": "12045", "d": "10/2016"}, {"title": "error messages make message red", "body": "submitting check one x current behavior error messages appear massive amount red text intimidating especially new developers often take one look post questions help instead realizing message contain help need expected behavior consider displaying actual error message potential fixes red display file names system messages stack trace color helps developers focus actual error recommended fix minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12044", "d": "10/2016"}, {"title": "urlsearchparams plus sign bug", "body": "submitting doind urlseachparams append object containing sign tostring function replaces spaces eg code obj timestamp import urlsearchparams export function urlencode obj object string let urlsearchparams new urlsearchparams let key obj urlsearchparamsappend key obj key return urlsearchparamstostring consider looking time work around except avoiding plus sign params", "num": "12043", "d": "10/2016"}, {"title": "input number validation letter e", "body": "submitting check one x current behavior user type letter e input type number fields value containing one many letters e considered valid also letters e input breaks pattern validation expected behavior assume possible use exponential notation number inputs value still tested valid number pattern validation still applied minimal reproduction problem instructions try type eeeeeeeeee considered valid number try type pattern validation works intended field invalid add letter e field considered valid conclusion letter e taken account number validation breaks pattern validation motivation use case changing behavior silent failure validation process number inputs currently needs manually adressed input event handlers please tell us environment windows angular version browser chrome language", "num": "12042", "d": "10/2016"}, {"title": "control class angularcommon removed", "body": "hello using version angularcommon version tried angularcommon control class gone sample code import control angularcommon static ispositiveintegercontrol control control test controlvalue return null else return ispositiveinteger false find class fix problem regards", "num": "12041", "d": "10/2016"}, {"title": "multiple select issue binding ngmodel formcontrol", "body": "submitting check one x current behavior expected behavior select multiple option array provided model reproduction works remove ngmodel formcontrol directives objselectedrole data db angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12040", "d": "10/2016"}, {"title": "error importing componentresolver component", "body": "trying import componentresolver error fix", "num": "12039", "d": "10/2016"}, {"title": "unable use external javascript file inside applications", "body": "submitting check one x current behavior trying use theme app somehow theme javascript file working inside application expected behavior able execute load external js files minimal reproduction problem instructions none motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12038", "d": "10/2016"}, {"title": "feat official list angular modules", "body": "submitting check one x official list different modules provided angular api official list angular documentation reference trying figure modules one needs import functions", "num": "12036", "d": "10/2016"}, {"title": "ngupgrade executes digest outside angular zone causing issues", "body": "submitting current behavior running hybrid application ngupgrade subscribes executes digest within behavior introduced pull request order try fix problem infinite digests issue expected behavior angular digests must happen inside angular zone digest could potentially setup timeouts intervals oveservables etc cause change detection trigger digest cycle running outside angular zone things forever leak root zone never trigger future change detections minimal reproduction problem instructions motivation use case changing behavior cause lot subtle bugs weird behaviors due change detection triggering please tell us environment angular version browser language", "num": "12034", "d": "10/2016"}, {"title": "compiler generates duplicate entry router guard declared submodule via static field component", "body": "current behavior let suppose following modules routes definitions component router guard resolve component declares resolves via static field keep one place declares route lands component resolves given guard runtime browserdynamic everything works expected compile angularcompiler among imports duplicate entry appears resolver wrong path although resolution via static fields aot cases works fine could figure fails case minimal reproduction problem instructions created repository minimal code reproduce source code reproduce please tell us environment angular version language node aot issues", "num": "12033", "d": "10/2016"}, {"title": "resolve data parent componentless route nt get merged child case promise", "body": "submitting current behavior resolve data parent componentless route nt get merged child route data resolve function returned might related expected behavior router merge resolve data componentless parent data children routes minimal reproduction problem instructions open plunk click four links shown notice fourth link nt display resolve data correctly motivation use case changing behavior fix bug please tell us environment os ubuntu node npm angular version browser language typescript node aot issues", "num": "12032", "d": "10/2016"}, {"title": "angular socket io safari", "body": "submitting check one x current behavior angular work pushing new information array displays ngfor request scoket io appear actions array check test website open different tabs press invite second tab expected behavior appeared array appropriate information minimal reproduction problem instructions example code check console console everything appeared html thissocketson called duel opponent gt consolelog got duel let caller userinformation new userinformation opponentname opponentid thisallcallsonduelpush caller display new push motivation use case changing behavior safari please tell us environment angular socket io safari node js webstorm angular version using last version angular cli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview safari language typescript xx typescript node aot issues node", "num": "12031", "d": "10/2016"}, {"title": "way bind html properties children elements", "body": "submitting check one x something like mydirective something like fails div property control generated external jquery library also modify otherwise would put annotation element expected behavior way bind html properties children elements case least way tell apply property first child property runtime works right find difficult integrate existing jquery libraries modify dom mainly dynamic project yet available issue going", "num": "12030", "d": "10/2016"}, {"title": "control controlgroup api missing", "body": "submitting feature request check one x current behavior tsc loader compilation bugs parsing control controlgroup problem early bird user rc want migrate apis like control controlgroup missing leads big problem customize formcontrol validators request desperately want control controlgroup back ide ide webstorm using angular typescript", "num": "12028", "d": "10/2016"}, {"title": "forms radio buttons nt function correctly dynamic type modeldriven form", "body": "submitting check one x current behavior building form inputs dynamically property button binding radio inputs nt function correctly expected behavior binding input element dynamically set form still functions minimal reproduction problem instructions open plunker note first form generated input fields functions correctly note second form generated input fields binding nt function correctly motivation use case changing behavior simple form generation reuse input element providing different values please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12025", "d": "10/2016"}, {"title": "router lazy loading wildcard route nt render component", "body": "submitting check one x current behavior wildcard route setup lazy load module navigate invalid route expected behavior navigating wildcard route lazy loads module render correct route minimal reproduction problem instructions open plunker click away link click note component displayed error occurs motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12024", "d": "10/2016"}, {"body": "ping vicb", "d": "10/2016"}, {"body": "pls add minimal working repro plunkr", "d": "10/2016"}, {"body": "problem happens trying navigate away componentless route", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "dzmitryshylovich issue states mostly summarize issues intlapi discussion new specific issues might make sense add brief overview leave details", "d": "10/2016"}, {"body": "add new issues forever nt change anything need real alternative design doc", "d": "10/2016"}, {"body": "cc chuckjaz", "d": "10/2016"}, {"body": "work following implemented", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "proposed introduce strategy sequential parallel parentchild resolving mechanisms seems hard express right way describe strategy route may something like", "d": "10/2016"}, {"body": "reminds uirouter resolution inspiration comes valid solution making guard resolution blocking would mean specify every subsequent child explicitly", "d": "10/2016"}, {"body": "also something like", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "ah see thought activatedroute would behave every component inject since di injects instance service apparently thats case though discussed guess considered bug solution desired use case global route data handled referenced issue closing one solving workaround discussed", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "solved", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls provide plunker reproduction", "d": "10/2016"}, {"body": "darn please disregard working expected issue exact true using optional parameters", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "dzmitryshylovich said thnx", "d": "10/2016"}, {"body": "works close correctly routeroutlet tag", "d": "10/2016"}, {"body": "question nt angular throw template parse exception", "d": "10/2016"}, {"body": "ericmartinezr dzmitryshylovich thanks answering question question nt angular throw template parse exception compliant spec check", "d": "10/2016"}, {"body": "pls report docs issues", "d": "10/2016"}, {"body": "stated issue template please provide plunker reproduction problem impossible debug troubleshoot otherwise", "d": "10/2016"}, {"body": "pls provide minimal working reproduction plunkr", "d": "10/2016"}, {"body": "add repro searched similar issue tracker", "d": "10/2016"}, {"body": "hi dzmitryshylovich vicb repro shortly explained added injectservice class marked injectable added module providers added defaultrequestoptions class extends baserequestoptions constuctor injectservice parameter modified app class injectservice parameter constructor show di works places executed defaultrequestoptions class log error console injectservice parameter constructor null vicb tried search could nt find recording similar issue best regards rune", "d": "10/2016"}, {"body": "extending instead solve issue note repro decorating class also calling nt seem make difference code desired behaviour", "d": "10/2016"}, {"body": "thanks answer seems work however documentation states used since typical defaults ref documentation also shows overriding using ref super mistake real world code example updated checked source code nt really anything want think ok extend base class instead however still think bug ca nt extend class extends another one use explanation nt supposed work intended like sanity check framework avoid things like happen", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "issue intljs fixed", "d": "10/2016"}, {"body": "error systemjs syntaxerror invalid unexpected token please report error systemjs thanks", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "issue guys please take look", "d": "10/2016"}, {"body": "beta version please tell us environment windows npm angular version language typescript", "d": "10/2016"}, {"body": "issue since angular router works correctly angular router", "d": "10/2016"}, {"body": "hit well angular router works switch router mentioned", "d": "10/2016"}, {"body": "ericmartinezr thumb constructive criticism always welcome", "d": "10/2016"}, {"body": "pls provide minimal reproduction problem", "d": "10/2016"}, {"body": "added complete minimal reproduction problem", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation probably loading metadata package test env", "d": "10/2016"}, {"body": "thanks help anyway discovered even though including reflectmetadata project still call require reflectmetadata gulpfile hopefully help someone else line", "d": "10/2016"}, {"body": "wo nt say working expected chrome latest stable version tested edge amp ff latest version problem", "d": "10/2016"}, {"body": "think working designed skuriles child component implementing onchanges interface instead want call method directly reason need use timeout like pointed", "d": "10/2016"}, {"body": "sorry sure issue could clarify trying show plunkr", "d": "10/2016"}, {"body": "hi pls report documentation issues", "d": "10/2016"}, {"body": "ok sorry trouble", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "thanks quick responding works typing mistake", "d": "10/2016"}, {"body": "incorrect syntax", "d": "10/2016"}, {"body": "dzmitryshylovich thank helping fix problem", "d": "10/2016"}, {"body": "problem solved possible want better error message angular novices save time investigation", "d": "10/2016"}, {"body": "think probably check property change behavior method", "d": "10/2016"}, {"body": "tbosch clear error message events bound undefined want assume nullundefined", "d": "10/2016"}, {"body": "let later fall back old behavior ignoring cases", "d": "10/2016"}, {"body": "glad know bug expected behavior", "d": "10/2016"}, {"body": "mariolenis using ngmodel part formsmodule template also implementing control value accessor part reactiveformsmodule writevalue function called control value changed writevalue function fact never called", "d": "10/2016"}, {"body": "michaelchiche sure mix think control value accessor made used two models definetly writevalue called twice time control registered time receives de ngmodel initial value check plunker added consolelog witness", "d": "10/2016"}, {"body": "imo correct expected behavior object binding angular pass reference rather clone", "d": "10/2016"}, {"body": "mattdistefano thought first realized syntax ngmodel means binding", "d": "10/2016"}, {"body": "right oneway bindings work objects passing reference object see note toward end", "d": "10/2016"}, {"body": "mattdistefano true plunker code whole object user nt change understand point discussing forms module behavior using controlvalueaccesors javascript makes reference objects", "d": "10/2016"}, {"body": "nt think split js treats object references works want clone object make one someone doe nt want behavior", "d": "10/2016"}, {"body": "would nt make sense use cases work way binding", "d": "10/2016"}, {"body": "get binding assigns value control change property object see change also places reference object related binding", "d": "10/2016"}, {"body": "zoechi check plunker specifically line using run time model nt change changes form properties value expected behavior thing trying point using syntax value accessor changes model value point view cva available create custom inputs behave standard inputs saying", "d": "10/2016"}, {"body": "create property assign use instead get expected behavior", "d": "10/2016"}, {"body": "tool tslint f applyfixes however doubt expressive enough accomplish needed refactorings also want package differently ng update something recommend start merging breaking changes using tslint refactoring need package tslint command external users cut first release thu oct pm victor berchet notifications githubcom wrote assigned alexeagle receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "vicb get back", "d": "10/2016"}, {"body": "thanks nakula seems like naomiblack tried contact browser stack possible channels without chance", "d": "10/2016"}, {"body": "follows", "d": "10/2016"}, {"body": "input box code truncated submitted without tag marks gt mdinput id country name country class required arialabelledby country select country placeholder placeholder country type text mdinput", "d": "10/2016"}, {"body": "fixed original message see source learn syntax looking meant markup translate content", "d": "10/2016"}, {"body": "vicb thanks added mdinput boxes things puzzling something change prior code without used translate available items longer translates anything gives console errors missing ok get used translate available items new code gives related errors ending esmsxlf file error message says mdbutton code near lines mdradiogroup mdradiobutton elements mdbutton last lines file end pair similar starting tags console errors unhandled promise rejection xtb parse errors unexpected closing tag body statuson hold future use error gt mdbutton unexpected closing tag file error mdbutton unexpected closing tag xliff error mdbutton zone task promisethen value error xtb parse errors error xtb parse errors provide info post new bug let know", "d": "10/2016"}, {"body": "please express issues clearly", "d": "10/2016"}, {"body": "fyi mprobst", "d": "10/2016"}, {"body": "looks lot nicer right work executing browser directly though would write code correctly calls", "d": "10/2016"}, {"body": "cc mhevery understands corner case better", "d": "10/2016"}, {"body": "mprobst inheriting error works correctly true classes code run browser without transpilation inheritance error work exactly wanted extend error class provided constructor would look also thrown setting field prototype", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "please open issue angularangulario feel important thanks", "d": "10/2016"}, {"body": "pls provide working reproduction plnkr", "d": "10/2016"}, {"body": "probably missing polyfill make sure check open issue mentioned polyffil added setup", "d": "10/2016"}, {"body": "classlist polyfill indeed missing works fine add thanks help", "d": "10/2016"}, {"body": "bug feature request", "d": "10/2016"}, {"body": "happy modify though still think bug since global listeners working literally events hammerjs defined ones eg works fine without throwing exceptions", "d": "10/2016"}, {"body": "pls provide minimal working reproduction plnkr", "d": "10/2016"}, {"body": "seriousness closeddeleted apologize wasting anyone time plnkr patched together link works methods accused working hashlocationstrategy went digging code think iteration lack coffee method managed insert kept overlooking naturally clicking link would kick back default route deleted post since came typo code leave plnkr though since reasonable example showing nested child routes etc apologies", "d": "10/2016"}, {"body": "using icu format however strings extracted xmb xliff implementation support yet idea pointer serialized xliff could help", "d": "10/2016"}, {"body": "gave idea serialize link provided map formula array sentences", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "hi pls provide reproduction plnkr", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "browser tested delegate intl api kinf stuff browser might support full list symbols", "d": "10/2016"}, {"body": "vicb experience browsers tested chrome latest firefox latest safari latest macos sierra edit process works fine use usd ie displays plunker provided demonstrates bug", "d": "10/2016"}, {"body": "aotjit pls provide working reproduction", "d": "10/2016"}, {"body": "getting similar error lib created compiled w ngc every js file dts jsmap metadatajson compile errors bring lib angularcli aot build get lib lives spent past days trying get work know something wrong nt know pulling hair nt helped", "d": "10/2016"}, {"body": "please try report", "d": "10/2016"}, {"body": "lib uses updated project specifically mgechev project use aot works leave lib aot also works import lib shared module think something wrong maybe issue w tscwrapper bring reusable lib get errors even done helloworld lib module simple component get error nt understand wrong ngc nt show output metadatajson files created", "d": "10/2016"}, {"body": "please adda minimal repro otherwise close issue thanks", "d": "10/2016"}, {"body": "working helloworld lib nt anything differently build process guess overlooked code lib statically analyzable please close one think issue directly related problems thanks", "d": "10/2016"}, {"body": "fyi used npm link test helloworld lib app aot failed w error unexpected value published lib npm installed app aot compilation worked seems like publish libs npm ready want test", "d": "10/2016"}, {"body": "nevermind running worked thought commenting", "d": "10/2016"}, {"body": "everything works incomplete files array packagejson nt feel silly", "d": "10/2016"}, {"body": "pascalprecht make sure case directives sure getting copyclonereference default behaviour really makes sense actually expecthope currently happens actually would expect put directives element std html example input element attributes min max required work value property element compose achieve different behaviour element attach directives directives conflict actually developers error something angular fix understand bad naming real problem however nothing angular party provider aware issue comply real dom access property really need exclusive access property make sure prefix use case directive inputs mostly twofold use directives addmodify behaviours existing property like min max require etc influence value property input tag need exclusive property usually put extra options directive think really ca nt come scenario warrants shared commongeneric property name demands exclusivity open suggestions though perhaps use case currently aware", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "duplicate already fixed master thnx dzmitryshylovich", "d": "10/2016"}, {"body": "run app without minifying see full error message", "d": "10/2016"}, {"body": "tried find make u say disable command line", "d": "10/2016"}, {"body": "ask ionic support", "d": "10/2016"}, {"body": "seems garble text hardcoded view upper left garbled pokedex hard coded view lower right text fetched ajax request bound controller", "d": "10/2016"}, {"body": "please create minimal repro investigate send us ngfactory generated component ngc help us investigate fix issue", "d": "10/2016"}, {"body": "hate person fully research problem submitting bug exactly happened godaddy nt serving js files simple htaccess rule fixed library compiler working exactly thank hard work", "d": "10/2016"}, {"body": "love always person closing issues", "d": "10/2016"}, {"body": "hi u pls provide minimal repository reproduction", "d": "10/2016"}, {"body": "guess sth like fail aot agree might better error message super wired usage pattern would want di ignore param const class would mind elaborating case agree least descriptive err message", "d": "10/2016"}, {"body": "tried aot let pass optional parameters functions general scenario might workaround idea pass value somehow example optional input forroot method provider registered use value passed nt pass creates another layer might work", "d": "10/2016"}, {"body": "iirc native types supported di already issue opened close one solution usually instance", "d": "10/2016"}, {"body": "dzmitryshylovich pkozlowskiopensource reason optional parameter primarily testability purposes class configuration value normal bootstrapping gets default value testing gets another value imaging sec delay getting delay passing config object production vs testing values single value workaround issue actually passing object rather primitive adds bit overhead see nt work run time fails compilation preferably would want di completely ignore param would nt want specify default value specified providers declaration might nicer", "d": "10/2016"}, {"body": "hi reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "bad sorry", "d": "10/2016"}, {"body": "see case seems fix already", "d": "10/2016"}, {"body": "yeah try compilerbuilds module", "d": "10/2016"}, {"body": "ericmartinezr according issue must admit edge understanding", "d": "10/2016"}, {"body": "sorry dumb issue", "d": "10/2016"}, {"body": "latest build solves problem still issue inconsistent exports forms module value accessors exported cursory examination numbervalueaccessor rangevalueaccessor appear outliers see", "d": "10/2016"}, {"body": "clydin agree different issue", "d": "10/2016"}, {"body": "different exporting also fixed original issue", "d": "10/2016"}, {"body": "little unclear consequences publishing want people use seems like reasonable thing modules sounds like essentially redundant fix", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "duplicate indeed thnx dzmitryshylovich", "d": "10/2016"}, {"body": "cc mprobst", "d": "10/2016"}, {"body": "vicb tbosch afaict nt information around runtime point way obtain current component location original source least developmentdebug mode somehow", "d": "10/2016"}, {"body": "martin change codegen pass see object call already pass renderer call", "d": "10/2016"}, {"body": "hmm yeah looks like bug listening events depending browser fire twice certain scenarios cc kara", "d": "10/2016"}, {"body": "hi u pls provide minimal repository reproduction", "d": "10/2016"}, {"body": "also running scss compilation components point", "d": "10/2016"}, {"body": "dzmitryshylovich try make demo nt think aot files could generated online robwormald webpack configuration runs well jit mode using scss compilation component code", "d": "10/2016"}, {"body": "robwormald dzmitryshylovich know use scss styleurls webpack sassloader app runs well jit mode using webpack aot mode run ngc command first ngc compiled scss files scssshimts directly without scss compilation scssshimts include path wrong also scssshimts scss grammer exists thought shim means scss compiled", "d": "10/2016"}, {"body": "zhaxi means issue closed", "d": "10/2016"}, {"body": "vicb think bug cause ngc realize scss style files add shim scss files include path style code correct", "d": "10/2016"}, {"body": "dupe", "d": "10/2016"}, {"body": "probably due fact router module imported hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation submitting real issues pls provide repro requested issue template", "d": "10/2016"}, {"body": "vicb close give reason", "d": "10/2016"}, {"body": "keyiis removed issue template create issue begins message", "d": "10/2016"}, {"body": "x support request gt please submit support request instead see get chances good answer follow read link", "d": "10/2016"}, {"body": "yes sorry didnt really know first time posting like delete post", "d": "10/2016"}, {"body": "remember correctly thats way multi slot transclusion works ng", "d": "10/2016"}, {"body": "ok finally figured happening list children paths also need provide root ie route subroutes longer works design behaviour seem bit confusing however least clear error message would help immensely note docs might good short term solution", "d": "10/2016"}, {"body": "thank submitting issue issue talking asking", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "could related", "d": "10/2016"}, {"body": "imo options debatable point changing would breaking change", "d": "10/2016"}, {"body": "nodes created known angular", "d": "10/2016"}, {"body": "router version", "d": "10/2016"}, {"body": "sounds like issue locally could nt reproduce quite plnkr see example lazy loading plnkr issue similar one", "d": "10/2016"}, {"body": "vicb router version intellix thanks showing lazy loading works plunker plunker reproduces bug described", "d": "10/2016"}, {"body": "oct pm victor berchet notifications githubcom wrote router version receiving authored thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "recent changes router plunker created throws error instead loading auxiliary content primary outlet created work around plunker uses shell component content load things correctly routing looks like appmodulets accountmodulets still think pain nonobvious create shell component severity mind dropped blocker mild annoyance", "d": "10/2016"}, {"body": "issue fixed master reason need shell component described", "d": "10/2016"}, {"body": "please attach minimal repro", "d": "10/2016"}, {"body": "also specify line number ranges like yes commaseparated line numbers onebased grep", "d": "10/2016"}, {"body": "gnoack could please confirm list multiple", "d": "10/2016"}, {"body": "yes multiple tags supported", "d": "10/2016"}, {"body": "work issue asap", "d": "10/2016"}, {"body": "angular issue pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "expected callback name see", "d": "10/2016"}, {"body": "let complement build directive aka component without creating new scope case model binding done direct directives parent share scope build components isolated scope forward bindings need component form validated controls independent concept shared scope may longer available expected possibility forward arbitrary bindings component using inputs find handled parent form", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "sure issue bug anglure thir option check img url broken thanks", "d": "10/2016"}, {"body": "see also contributing got question problem", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "fuck bug report", "d": "10/2016"}, {"body": "may find clues issue", "d": "10/2016"}, {"body": "mstrofbass u think bug provide working reproduction plunkr", "d": "10/2016"}, {"body": "mstrofbass please make sure nt imports exports commented code requests traceur means sysmtemjs thinks one files es module happens nt transpiler configured correctly likely following tutorial code comments contain es imports exports nt get transpiled confuse systemjs also please aware violated code conduct please nt", "d": "10/2016"}, {"body": "igorminar even read wrote", "d": "10/2016"}, {"body": "issue related configuration provided quickstart needs corrected", "d": "10/2016"}, {"body": "feel free file issue", "d": "10/2016"}, {"body": "made tweak inmemwebapi better support tree shaking aot means library published esm code cause traucer error using esm directly since contains import statements want jit build use umd bundle instead sample systemjs confgiruation use inmemwebapi jit apps", "d": "10/2016"}, {"body": "dzmitryshylovich given amount time spent trying debug issue lack interest anyone associated angular project either ensuring basic tutorial actually functional helping solve related issues pass", "d": "10/2016"}, {"body": "mstrofbass issue thelgevold sample systemjs config solution igorminar since change thelgevold mentioned affects systemjs config set angulario get started page beginners change would affect everyone trying follow tutorial see get started page uses incorrect way load angularinmemorywebapi", "d": "10/2016"}, {"body": "weakness quickstart doc displays trimmed copies actually use neglected resync copies sorry pains really care fixed latest republish soon btw documentation issues receive quicker attention raised angulario please close", "d": "10/2016"}, {"body": "dzmitryshylovich works expected relativeto activatedroute sets query parameters url", "d": "10/2016"}, {"body": "notes merged mainbrowser fork nodeplatform nt live nodeplatform mostly ignore pipeline lifecycle hooks view utils component id problems check app stable injecting preboot dehydrate resources serialize document dispose ignore rxjs correct way manage pipeline rather promises platformlocation ca nt live platform due service state need platformlocation platform multiple application use state platformnodedynamic created way due limitation core broke universal due exports privates change compiler nodedomrenderer needs refactored remove lot code dealing converting props attributes ensuring attributes strings whitelist needs reworked reflect attributes setting prop nodelocation problems dealing baseurlrequesturloriginurl correct way manage compared browser way handling nodedocument merged parse add serialize need grab new references html component fix title needs correctly set text node zonejs workaround context impossible otherwise since methods made one document mind sort fixed reworking services core needs updated gethistory getcookie etc also impossible without zone workaround core change context service configuration zonecontext strategy refactor zone current solution way work aot work problem run constants providers created platform application bootstrap dynamic config values used dynamic configs set class definition time causes problem example url document constant values need dynamic per user problem pain location state also view old fork commits show convert browser version node", "d": "10/2016"}, {"body": "mental model router links right load components outlets transition application new state read clicking link affect outlets child ones eg absolute links", "d": "10/2016"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "prsolucoes issue angular bug webpackconfigprodjs wrong fix remove webpack configuration angularcli later typescript loader outputs ngfactroyts directives", "d": "10/2016"}, {"body": "hi man thanks working hot replace module working contents replaced running version still change reload page see error ty", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "documentation", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "ca nt reproduce closing issue", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "sure expecting di work parent class understand", "d": "10/2016"}, {"body": "forget u use decorators inherited class cyclic dependency", "d": "10/2016"}, {"body": "removed right cyclic sorry still see miss", "d": "10/2016"}, {"body": "also tested say specify parent one works annotation parent component makes di child work weird", "d": "10/2016"}, {"body": "miss", "d": "10/2016"}, {"body": "annotation parent component makes di child work weird angular nt support inheritance yet pointed u", "d": "10/2016"}, {"body": "right fixing problem fully understand aware thought supporting mixing expecting mixing work makes impossible inherit matter component declares right", "d": "10/2016"}, {"body": "avoid inheritance resolved hard predict kind issues u face using inheritance", "d": "10/2016"}, {"body": "wow pretty significant close thanks", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "vicb thanks suggesting alternate way change state however still believe something wrong hood replacing observed need click start button twice make work also modified hub class added another function given client side modified code like injectable export class siglalrtestservice omitted already posted code previous post sake brevity greetings string constructor private window signalrwindow omitted already posted code previous post sake brevity thishubproxyon greeting greetmessage string gt thisgreetingspush greetmessage omitted already posted code previous post sake brevity getgreeting void thishubproxyinvoke greetme title mr username ahmad appcomponentts finally template added lines msg need click get greeting button twice get message displayed however nt see behavior firefox chrome please note sample application created post issue however actual application need resize ie window make messages appear post complete sample hub angular application code needed", "d": "10/2016"}, {"body": "complete example required plunker minimal amount code allows reproduce issue sounds like code runs outside angulars zone use ensure code called signalr hubproxy runs inside angulars zone looks like support question asked one channels instead contributing got question problem", "d": "10/2016"}, {"body": "nt make sense kill whole idea nt use parent componentuse manually", "d": "10/2016"}, {"body": "thought magic zonejs detecting async tasks finish update requester component children nt know child inherit change detection behavior parent behavior currently also prevents async method working template", "d": "10/2016"}, {"body": "feature request design close maybe add hands child components directives", "d": "10/2016"}, {"body": "agree docs updated good article change detection tell angular skip change detection component subtree none inputs changed setting change detection strategy onpush like", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "issue bug sugestion make angular user friendly read article get want", "d": "10/2016"}, {"body": "sounds like temporary problem saucelabs restarted", "d": "10/2016"}, {"body": "fact issues since merged keeps disconnecting saucelabs also happens sporadically browsers android symptoms looks similar issues past solved sure cause cc tbosch", "d": "10/2016"}, {"body": "news going fix", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "got thanks idea might causing error case changed upgradeadapterforwardref code export function appmodulefunction return appmodule export const upgradeadapter new ngupgradeadapter forwardref appmodulefunction far luck", "d": "10/2016"}, {"body": "u nt need u use inside decorator decorated class already available", "d": "10/2016"}, {"body": "hm mean tried change export let upgradeadapter ngupgradeadapter ngmodule imports browsermodule commonmodule declarations appcomponent export class appmodule upgradeadapter new ngupgradeadapter appmodule jit builds successfully get runtime error aot fails compile exact error message", "d": "10/2016"}, {"body": "well tried well managed change error message slightly export function appmodulefunction return appmodule export const upgradeadapter new ngupgradeadapter forwardref appmodulefunction export const ngmodule imports browsermodule commonmodule declarations appcomponent export class appmodule new error message still sure many ways try modifying file could actual problem file appmodulets go trying debug maybe bug new upgrade adapter aot support", "d": "10/2016"}, {"body": "nt use upgradeudapter ca nt help think bug pls provide minimal repository reproduction", "d": "10/2016"}, {"body": "got update minimal test case later today", "d": "10/2016"}, {"body": "okay minimal repository reproduces result output copied look like ngc bug something wrong cc petebacondarwin", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "pkozlowskiopensource dzmitryshylovich sorry clearly getting referenced ticket exact answer would give answer confusing importing filter operator magically turn routerevents subject observable import get new errors asking clarification also explanation docs say one thing reality different docs say going something nt technically bug bug please explain us nt understand", "d": "10/2016"}, {"body": "referenced ticket exact answer would give answer confusing please provide minimal plunker reproduce scenario otherwise confusing exact issue", "d": "10/2016"}, {"body": "ok figured anyone else confused importing filter operator anywhere patch globally seems answer question subject observer observable issue nt importing operator wo nt work since importing filter operator patches observables therefore subjects support operator pkozlowskiopensource nt change fact docs state observable subject confusing particularly docs sparse since developers effectively need understand rxjs subjectobservable relationship sorry used importing functionality class already imported confusing", "d": "10/2016"}, {"body": "entirely clear goal expand specifically zone caching cache zone first place", "d": "10/2016"}, {"body": "consider simple example template component component zonecached parsevalue datevalue string return new date datevalue called three times value result new date cached memory cleared tick life cycle finished gt ngzoneonstablesubscribe gt memorycacheclear memory cache map keys defined automatically argumentsjoin using another smart strategy via override tostring complex object passed argument zonecached method", "d": "10/2016"}, {"body": "could please describe trying plain english enough spare time spend trying understand people want every single issue", "d": "10/2016"}, {"body": "ok understood proposal needs detailed proposal", "d": "10/2016"}, {"body": "best would write design spec ie google docs thanks", "d": "10/2016"}, {"body": "understanding correctly trying avoid calling parsevalue repeatedly general avoid binding methods way check value changed call said method using pure pipe another way handle", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "info already covered think info needs expanded upon please open separate issue documentation located thnx", "d": "10/2016"}, {"body": "ok thanks", "d": "10/2016"}, {"body": "quite things using aot far know comprehensive list amongst things whatever use inside template public nt understand code instead use instead mentioned suppose quite offputting", "d": "10/2016"}, {"body": "whatever use inside template private compiler generates separate class knows render template ngfactory needs reach context class component class write get fields const foo gt use function foo instead code statically analyzable ngc nt execute", "d": "10/2016"}, {"body": "dzmitryshylovich example docs state written typescript perfectly valid typescript regardless difference latter hoisted mutable dynamically scoped declarations fxck quite thanks linking indeed referring", "d": "10/2016"}, {"body": "robwormald expect change angular tend say issue angulario closed wdyt", "d": "10/2016"}, {"body": "think leave open solved documentation issue indeed something comes fairly regularly point rather repeated issues getting opened", "d": "10/2016"}, {"body": "issues tracker actionnable issues make searching difficult aluanhaddad please reopen thanks", "d": "10/2016"}, {"body": "vicb technically interpreted documentation issue doubt resolved without direct attention core developers specifically asking technical specification implicitly defined language subset mean something level typescript language specification least typescript handbook also asking issues closed without resolved reason given closing issues always roughly something along lines aot works satisfactory resource defining aot technical sense resource requires level detail analogous typescript documents linked also asking existence subset language widely publicized discussed promoted complicated question questions resolved handling happily open issue update regarding whether issue actionable example actionable item provide toolchain supports language example create ide official ide plugin understands indicates following programming error declare private property component used component template using decorator syntax completely different semantic implications decorator part angular aot decorators something else following different semantics first broken", "d": "10/2016"}, {"body": "aluanhaddad calling documentation issue general conceptual problem rather technical one example regarding private properties classes simple component ts import component angularcore component selector myapp template export class app name rob run ngc important understand thus needs documenting generated code modify replace original component acts host wrapper original component job communicate dom application code ts class extends private constructor viewutils parentinjector declarationel super rendertypeapp viewutils parentinjector declarationel snip detectchangesinternal throwonchange boolean void thisdetectcontentchildrenchanges throwonchange thiscontext component instance const hello thiscontextname throwonchange thisrenderersettext thisdetectviewchildrenchanges throwonchange would agree upon seeing code clearer private properties nt work component must expose properties available host normal typescript semantics generate new ts code code runs vanilla typescript transpiler behavior fact get type checking templates accidentally mistyped binding template generated factory would reference property derived template run vanilla typescript fails expected regular ts error request creating official ide plugin architecture already progress many months see progress leverages exact toolchain discussed provide reusable languageservice sorts plugins leverage crux static analysis desired ability override modify behavior builtin decorators currently unsupported certain limitations kinds things including things decorators like ngmodule given everything statically analyzable serialize portable json format shippable npm consumable angular compiler option pass compiler warn things statically analyzable resource requires level detail analogous typescript documents linked compiletime warnings plus list common errors suggested resolutions would significantly useful developers complex languagelevel specification basically nobody going read fully understand point limited subset simplification needs documented way function call investigate requests enable things casebycase basis reason static analysis limiting factor precisely desire toolingide support executing code compute dynamic values far slower static analysis consider fast support things like template autocompletion ide possible via static analysis operating ast level limitation applies desire override builtin angular decorators sort wrapper decorator would generally require decorator executed compute modified metadata used code generation believe one usecase discussed enforcing uniqueness selectors across application exactly kind thing looking enable imo makes far sense kind check done via static analysis nt pay runtime cost checks absolutely want enable extensibility compiler pipeline number interesting use cases publicly discussed template transforms implementation early exploration plugin architecture however generally conservative early stages want angular live long time want paint corner allowing feature support forever want developers implementing plugins would entirely rewrite solidified underlying architecture also asking existence subset language widely publicized discussed promoted complicated question answer quite simple something still evolving exploring learning something entirely new model front end web applications learning experience everyone involved example ability pass config ngmodules via static properties la direct result developer feedback collaboration core team hope clarifies thinking absolutely board getting better documented prs collaboration documentation team greatly appreciated something care making better everyone cc wardbell hopefully wall text serve starting point explainer doc", "d": "10/2016"}, {"body": "technically interpreted documentation issue doubt resolved without direct attention core developers much less doubts first documentation issue tool issue linter one mgechev probably able help might specific actionable addressed core makes sense open specific amp actionnable issue guess rob saying similar things comment", "d": "10/2016"}, {"body": "robwormald thank information appreciate would agree upon seeing code clearer private properties nt work component must expose properties available host normal typescript semantics generate new ts code code runs vanilla typescript transpiler sorry definition leaky abstraction code private members works fine jit mode highlights sharply choice implement views generating typescript code acts proxy implementation detail users writing code directly given errors typescript checks generated views code developer write emits errors name static checking meantime typescript gives pass typescript developer write work angular angular interpreting typescript differently hence request documentation regarding new language semantics subset writing views get typescript error checking parts write directly longer get semantic checking typescript code write directly ngc interpret way emitting javascript another tier another language hence request acknowledgement specification documentation subset compiletime warnings plus list common errors suggested resolutions would significantly useful developers complex languagelevel specification basically nobody going read fully understand point need write specification ide nt introduce new language introduce new framework specific language typescript already compiler errors static analysis ide support already formally specified angular lost things introducing aot typescript support go noted angular applications need written unspecified dialect typescript supports arbitrary subset features arbitrary semantics others would want learn new language works one framework angular need programming language offering much competitors warrants entire toolchain involving multiple abstractions multiple languages angular custom html parser interprets another nonstandard dialect html custom typescript compiler generates additional thanks explaining typescript uses custom subset typescript tools available say custom needs talk code generated angular typescript compiler ngc one heard months ago forget needing support closure via tsickle end massive number transformations neither hidden developer within control justifies complexity serious question amount complexity angular worrisome", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "duplicate related moving thread closing one", "d": "10/2016"}, {"body": "reduce start time u several options server side rendering universal aot compilation lazy loading issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "working reproduction plunkr click signout link executes function url redirected also observed remove routes command works remove schemas customelementsschema ngmodule routes works fine logout windowlocationhref", "d": "10/2016"}, {"body": "go fixed problem default action happening function chance happen action redirecting", "d": "10/2016"}, {"body": "see discussion", "d": "10/2016"}, {"body": "yes duplicate thnx ericmartinezr", "d": "10/2016"}, {"body": "pr partially solves", "d": "10/2016"}, {"body": "based feedback alexeagle tried deep importing ngupgrade dependencies hopes would enable tree shaker shake compiler completely adding deep imports appear include less compiler compiler still makes abut rollup bundle predeep import result peeked generated bundle using sourcemapexplorer result tell compiler still accounts size code found repo relevant code upgrademodulets import component ngmodule angularcore import browsermodule angularplatformbrowser import reactiveformsmodule angularforms import platformbrowserdynamic angularplatformbrowserdynamic deep import import upgrademodule angularupgradesrcaotupgrademodule import downgradecomponent angularupgradesrcaotdowngradecomponent import texteditor componentstexteditortexteditor import algorithms componentsalgorithmsalgorithms import surveydemo componentssurveysurveydemo import survey componentssurveysurvey import insertionsort componentsinsertionsortinsertionsort declare var angular ngmodule declarations algorithms insertionsort surveydemo survey texteditor entrycomponents algorithms insertionsort surveydemo survey texteditor imports browsermodule upgrademodule reactiveformsmodule export class angularmodule ngdobootstrap upgradets import component ngmodule angularcore import browsermodule angularplatformbrowser import reactiveformsmodule angularforms import platformbrowserdynamic angularplatformbrowserdynamic deep import import upgrademodule angularupgradesrcaotupgrademodule import downgradecomponent angularupgradesrcaotdowngradecomponent import texteditor componentstexteditortexteditor import algorithms componentsalgorithmsalgorithms import surveydemo componentssurveysurveydemo import survey componentssurveysurvey import insertionsort componentsinsertionsortinsertionsort import angularmodulengfactory upgradeaotupgrademodulengfactory declare var angular angularmodule angularlegacy directive algorithms downgradecomponent component algorithms angularmodule angularlegacy directive survey downgradecomponent component surveydemo angularmodule angularlegacy directive editor downgradecomponent component texteditor platformbrowserdynamic bootstrapmodulefactory angularmodulengfactory ref gt const adapter refinjectorget upgrademodule upgrademodule consolelog bootstrapping adapterbootstrap documentbody angularlegacy rollup import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify import closure googleclosurecompilerjs export default entry upgradejs dest distupgradebuildjs sourcemap true sourcemapfile distupgradebuildjsmap format iife plugins noderesolve jsnext true module true commonjs include nodemodulesrxjs uglify said suspect going want smaller repro nt one moment maybe provide one later including fyi since believe setup correct upgrade refs updated deep import cc robwormald mhevery petebacondarwin event progress great app otherwise working relatively complex components version", "d": "10/2016"}, {"body": "still import platformbrowserdynamic depends compiler remove mon oct pm torgeir helgevold notifications githubcom wrote based feedback alexeagle tried deep importing ngupgrade dependencies hopes would enable tree shaker shake compiler completely adding deep imports appear include less compiler compiler still makes abut rollup bundle predeep import result peeked generated bundle using sourcemapexplorer result tell compiler still accounts size relevant code found repo relevant code upgrademodulets import component ngmodule angularcore import browsermodule angularplatformbrowser import reactiveformsmodule angularforms import platformbrowserdynamic angularplatformbrowserdynamic import upgrademodule angularupgradesrcaotupgrademodule import downgradecomponent angularupgradesrcaotdowngradecomponent import texteditor componentstexteditortexteditor import algorithms componentsalgorithmsalgorithms import surveydemo componentssurveysurveydemo import survey componentssurveysurvey import insertionsort componentsinsertionsortinsertionsort declare var angular ngmodule declarations algorithms insertionsort surveydemo survey texteditor entrycomponents algorithms insertionsort surveydemo survey texteditor imports browsermodule upgrademodule reactiveformsmodule export class angularmodule ngdobootstrap upgradets import component ngmodule angularcore import browsermodule angularplatformbrowser import reactiveformsmodule angularforms import platformbrowserdynamic angularplatformbrowserdynamic import upgrademodule angularupgradesrcaotupgrademodule import downgradecomponent angularupgradesrcaotdowngradecomponent import texteditor componentstexteditortexteditor import algorithms componentsalgorithmsalgorithms import surveydemo componentssurveysurveydemo import survey componentssurveysurvey import insertionsort componentsinsertionsortinsertionsort import angularmodulengfactory upgradeaotupgrademodulengfactory declare var angular angularmodule angularlegacy directive algorithms downgradecomponent component algorithms angularmodule angularlegacy directive survey downgradecomponent component surveydemo angularmodule angularlegacy directive editor downgradecomponent component texteditor platformbrowserdynamic bootstrapmodulefactory angularmodulengfactory ref gt const adapter refinjectorget upgrademodule upgrademodule consolelog bootstrapping adapterbootstrap documentbody angularlegacy rollup import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify import closure googleclosurecompilerjs export default entry upgradejs dest distupgradebuildjs sourcemap true sourcemapfile distupgradebuildjsmap format iife plugins noderesolve jsnext true module true commonjs include nodemodulesrxjs uglify said suspect going want smaller repro dont one moment maybe provide one later including fyi since believe setup correct upgrade refs updated deep import cc robwormald mhevery petebacondarwin event progress great app otherwise working relatively complex components version receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "doh makes sense importing wrong platform browser object curious need public bootstrapmodulefactory method platformbrowserdynamic nt always using jit scenarios thought bootstrapmodulefactory method makes sense aot made mistake calling method wrong object could method removed platformbrowserdynamic guarantee wo nt make mistake valid use case missing", "d": "10/2016"}, {"body": "imagine could mixedmode application bootstrap entry points compiled aot others mhevery could confirm", "d": "10/2016"}, {"body": "thanks help alexeagle totally works trace compiler bundle", "d": "10/2016"}, {"body": "curious size app getting compression fri oct pm torgeir helgevold notifications githubcom wrote thanks help alexeagle totally works trace compiler bundle receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "noticed similar problems beforeafter pseudo elements css generated compiler notice must either", "d": "10/2016"}, {"body": "nt fixed incremental update see issue fix", "d": "10/2016"}, {"body": "using angular still get issue switch nested elements fix", "d": "10/2016"}, {"body": "plunker pseudo element handled properly", "d": "10/2016"}, {"body": "got problem updating project", "d": "10/2016"}, {"body": "upgraded problem solved clarify problem longer would compile instead nt tested pseudo classes would guys kindly upgrade confirm fixed well make sure upgrade well packages", "d": "10/2016"}, {"body": "still problem simple example css class next css code css host content component classes color red hostactive content component active class compiled css content component classes color red active content component active class invalid selector skreborn think problem fixed first selector", "d": "10/2016"}, {"body": "mrshaq try add class code like guess broke", "d": "10/2016"}, {"body": "sure actually valid css see specifications correct syntax seems still generates output see updated plunker", "d": "10/2016"}, {"body": "skreborn plunker also compiles well still problem", "d": "10/2016"}, {"body": "exactly said still produces wrong output even selector valid specifications", "d": "10/2016"}, {"body": "related issues", "d": "10/2016"}, {"body": "holiber tested said right issue still exists mixed selector example compile incorrect instead scenario issue fixed upgrading version selector pseudo class combination result bug", "d": "10/2016"}, {"body": "johnpapa igorminar wardbell", "d": "10/2016"}, {"body": "please report docs issuequestions", "d": "10/2016"}, {"body": "closed stackoverflow", "d": "10/2016"}, {"body": "docs make sound like expected behavior reuses component component respond parameter changes exactly going see example logging router params info see", "d": "10/2016"}, {"body": "expanded example notice first time click person fact reinit component disposes component reuses component", "d": "10/2016"}, {"body": "oh see probably reuse mechanism improved", "d": "10/2016"}, {"body": "nt dug source yet sure rules setup reuse think simple rule would work route changes resulting component already present routeroutlet nt rerender currently would seem rule applicable exact matching route", "d": "10/2016"}, {"body": "pls update issue title clear issue", "d": "10/2016"}, {"body": "well example still navigating routes ie triggered different node route configuration tree happens route renders component outlet parameter change stuff irrelevant different node think docs nt saying implying get component reuse navigation triggers exact configuration node said team member idea ultimate intent", "d": "10/2016"}, {"body": "see also", "d": "10/2016"}, {"body": "background currently router reuses activated routes components activated route associated item router configuration since activated route injected component constructor reuse component instance switching activated routes least without introducing new primitives planning introduce custom route reuse strategies following issue talks", "d": "10/2016"}, {"body": "get chances good answer following link", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "translation files xtb", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "think bug handle user input contains brackets parameter angular think axulaty route", "d": "10/2016"}, {"body": "u think bug pls fill issue template provide working reproduction plunkr", "d": "10/2016"}, {"body": "solved problem snippet", "d": "10/2016"}, {"body": "hope clear closed missing information", "d": "10/2016"}, {"body": "introducing new local keyword change scope would confusing really useful use different name might want export div think makes things clearer", "d": "10/2016"}, {"body": "pls provide minimal working reproduction plunkr", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "use usage example issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "ok try report results later", "d": "10/2016"}, {"body": "notice would nice add info docs write systemjs", "d": "10/2016"}, {"body": "feel free file issue docs repo", "d": "10/2016"}, {"body": "working fine thanks", "d": "10/2016"}, {"body": "u pls provide minimal repository reproduction", "d": "10/2016"}, {"body": "sure try start visual studio prerequisites update net core typescript visual studio", "d": "10/2016"}, {"body": "got error backboned universalstarter may due package angularcompiler works well", "d": "10/2016"}, {"body": "issue universal see universal issue previously using amp also looks like got renamed work progress pr selectively taking either new public values importing older private ones backwards compatibility take look let know think igorminar", "d": "10/2016"}, {"body": "closing bug unversal", "d": "10/2016"}, {"body": "u pls provide repo reproduction", "d": "10/2016"}, {"body": "experiencing issue happens form element", "d": "10/2016"}, {"body": "created repository reproduces bug", "d": "10/2016"}, {"body": "seems duplicate previous bug components however also generate files directives bug becomes severe", "d": "10/2016"}, {"body": "tbosch appear works well number value accessor missing generated factories forms module", "d": "10/2016"}, {"body": "think wrong repo", "d": "10/2016"}, {"body": "please report docs issue", "d": "10/2016"}, {"body": "validator function impl interface validatorfnasyncvalidatorfn", "d": "10/2016"}, {"body": "proper way inject service custom validator", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "thank reply example uses possible use templatedriven way", "d": "10/2016"}, {"body": "yes pass", "d": "10/2016"}, {"body": "similar problem trying build validator use dni values spanish acronym national document identification want validate dni values service also want reuse service form control validator follow steps first implemented service hold validation logic wrote class use validator directive well constructor reactive forms javascript injectable export class customvalidators constructor private service validationservice dni control abstractcontrol key string boolean return thisserviceisvaliddni controlvalue null dni true finally implemented directive javascript export const dnivalidator provide ngvalidators useexisting forwardref gt dnivalidator multi true directive selector dni formcontrolname dni formcontrol dni ngmodel providers dnivalidator export class dnivalidator implements validator constructor private validators customvalidators validate control abstractcontrol return controlvalue thisvalidatorsdni control null works perfectly templatedriven forms try use reactive forms like javascript constructor private customvalidators customvalidators private builder formbuilder ngoninit thisform thisbuildergroup dni thiscustomvalidatorsdni framework returns following error working expected see plunker thank much", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "hi vicb im going submit prs issues kept separate intended one commit add directory packagestxt file update bash script ignore last line packagestxt doesnt n make changes commit regards", "d": "10/2016"}, {"body": "im assuming always want commit per pr", "d": "10/2016"}, {"body": "late ill push one commitpr see happens", "d": "10/2016"}, {"body": "pr contain multiple commits pb", "d": "10/2016"}, {"body": "try", "d": "10/2016"}, {"body": "angular version pls update latest angular provide working reproduction plunkr", "d": "10/2016"}, {"body": "per link attribute used syntax html attributes properties different things future please include reproduction plunker instructions deleted specified", "d": "10/2016"}, {"body": "lazy load components modules", "d": "10/2016"}, {"body": "need information support please get back thanks please provide info requested issue template", "d": "10/2016"}, {"body": "make child module route like", "d": "10/2016"}, {"body": "dzmitryshylovich understand lazy load module want components loaded lazily component write module think overhead clean real world scenario components loaded lazily application loaded quickly web browser also help reducing network traffic delagen understood solution also thought solution perfectly work solution look clean due overhead creating additional ngmodule class adding required dependencies also thought component class also annotated ngmodule class work component ngmodule class know side impact engine handle tried giving error adding annotations class", "d": "10/2016"}, {"body": "general lazy loading component nt conceptually work unlikely real app ever going standalone component without child components andor associated services directives restricting lazy loading ngmodules means get necessary functionality single shot runtime cost creating modules minimal consider creating module reasonable tradeoff", "d": "10/2016"}, {"body": "robwormald know high level module concept good want create module many components take long time load web browser wan na reduce network traffic along fast module loading add flexibility lazy component loading router become awesome router beat router", "d": "10/2016"}, {"body": "loading individual components work aot mode closing issue", "d": "10/2016"}, {"body": "possibility use many html pages true", "d": "10/2016"}, {"body": "use official sample tutorial launch preview sepatated window following link works navigated app fails called direct", "d": "10/2016"}, {"body": "adoris provide activatedroute canload guard canload guards nt constructed point provide instead urltree", "d": "10/2016"}, {"body": "router version", "d": "10/2016"}, {"body": "plunkr current atm work moment believe work environment also demonstrates seems maps activated node guards every one ancestors cf routerts function could accept exclusion array passed scoped tomanaged perhaps way tracking guards visited", "d": "10/2016"}, {"body": "canactivatechild guard called every child route defined specific runs every child activated design look signature canactivatechild first parameter child route activated could changed make first parameter array chlid routes activated think dev ergonomics design worse want guard called activation use also use filter routes nt care", "d": "10/2016"}, {"body": "seems like goal really fresh component instance time part testing module going static particular spec file also seems like configuring module iteration part really adding time better pattern could configuring module multiple times calling module multiple times nt work though maybe missing obvious way preserve module state iterations edit fwiw tried logging timestamp looks like time passes however still suspect related module configuration since adding things imported modules adds time whether imports used component tested", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "please report docs issue", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "workaround setter want pass nullundefined input", "d": "10/2016"}, {"body": "dzmitryshylovich agreed situation yesterday needed pass null input however also find behavior op described confusing would think instantiated value would true", "d": "10/2016"}, {"body": "compiler distinguish false", "d": "10/2016"}, {"body": "always written least design", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "please note goal exact semantics shadow dom need stay fast case probably doable vicb think", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "thanks ericmartinezr issue already", "d": "10/2016"}, {"body": "closing duplicate", "d": "10/2016"}, {"body": "reproduce effectively code pasted could please reproduce plunker", "d": "10/2016"}, {"body": "code executed subscription behavior subject might something like public somethingcool behaviorsubject new behaviorsubject null thiscoolsubscription myservicesomethingcoolsubscribe message gt thissessionnaginterval setinterval gt open modal consolelog nag em thisauthservicepromptsessiontimeoutbehaviornext startnagseconds", "d": "10/2016"}, {"body": "plunkr", "d": "10/2016"}, {"body": "well turns ide betray using intellij idea point coding ide added import import clearinterval timers file idea timers module removed import everything works", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "think issue change detector makes sense something changed outside zone nt picked default requesting change detector run think either run correctly throw error saying unable suggesting resolution", "d": "10/2016"}, {"body": "thiscdrmarkforcheck nt run change detection nt see issue everything works intended", "d": "10/2016"}, {"body": "ah see need called running outside zones might make sense document explicitly changedetectorref page method fairly sparse happy put pr something folks interested", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "great article know look see infer one code snippets situations would use clearly laid docs would hurt", "d": "10/2016"}, {"body": "size screen capture video experiencing", "d": "10/2016"}, {"body": "issue exists chrome ios choose one autocomplete options show top keyboard", "d": "10/2016"}, {"body": "declaring component variable myapp available siblings children within template want global variables suggest creating class holds properties inject everywhere need since get instance long declared root app value changes reflect throughout app", "d": "10/2016"}, {"body": "declaring component variable myapp available siblings children within template nope available whole template", "d": "10/2016"}, {"body": "ahh wondering new change misinformed thanks clarification", "d": "10/2016"}, {"body": "global template variables visible whole template element template variables visible element children use different name variable", "d": "10/2016"}, {"body": "missing current behavior expected behavior repro thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "nothing inherent aot requires build bundle could absolutely load files one one though even loading hundreds modules illadvised suggest look would allow bundle vendor code one systemregister bundle retain ability bring individual features", "d": "10/2016"}, {"body": "except tried loading aot files one one loading main file bootstraps ngfactory module nt work starts requesting ngfactory js files nodemodules angularcoresrc transpiling nt edit sorry meant starts requesting js files nodemodules angularcoresrc amongst places ngfactory files one called componentfactoryresolver misremembered nt want use umd package used normally using tsc compile app instead ngc", "d": "10/2016"}, {"body": "interesting systemjs builder would handy could get aot work without rollup look bit also saying illadvised load hundreds modules well fine like least try see kind performance get without bundling much need bundle fact unable even make work focus", "d": "10/2016"}, {"body": "tried use systemjsbuilder nt transpile views back square one since ngfactory bootstrapped angular nt work systemjs", "d": "10/2016"}, {"body": "angular issue sry", "d": "10/2016"}, {"body": "purely speculation think may issue case writing angular ahead time compilation solve", "d": "10/2016"}, {"body": "goes direction concerns based following slidedeck pete engaged mozilla lets see happens already looked angular like lot obviously support update current application near future", "d": "10/2016"}, {"body": "need working reproduction plunker copy pasted code", "d": "10/2016"}, {"body": "reported similar issue loooong time ago see", "d": "10/2016"}, {"body": "nt see empty selectors code", "d": "10/2016"}, {"body": "found another cause gitter commas makes basically empty routing rule look approutingmodulets", "d": "10/2016"}, {"body": "ca nt provide codes use panel errors uncaught promise typeerror read property visitexpression undefined typeerror read property visitexpression undefined jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitwritepropexpr writepropexprvisitexpression jitemittervisitorabstractemittervisitorvisitexpressionstmt expressionstatementvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractemittervisitorvisitifstmt ifstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractjsemittervisitorvisitclassgetter arrayforeach native jitemittervisitorabstractjsemittervisitorvisitdeclareclassstmt classstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitstatements runtimecompilercompilemodule runtimecompilercompilemoduleandcomponents runtimecompilercompilemoduleasync moduleboundcompilercompilemoduleasync mergemapsubscriberproject mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue stacktrace errorhandlerhandleerror uncaught promise typeerror read property visitexpression undefined typeerror read property visitexpression undefined jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitwritepropexpr writepropexprvisitexpression jitemittervisitorabstractemittervisitorvisitexpressionstmt expressionstatementvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractemittervisitorvisitifstmt ifstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractjsemittervisitorvisitclassgetter arrayforeach native jitemittervisitorabstractjsemittervisitorvisitdeclareclassstmt classstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitstatements runtimecompilercompilemodule runtimecompilercompilemoduleandcomponents runtimecompilercompilemoduleasync moduleboundcompilercompilemoduleasync mergemapsubscriberproject mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue resolvepromise zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue elapsed ms wed oct iran standard time objectonscheduletask zonedelegatescheduletask zoneschedulemicrotask scheduleresolveorreject resolvepromise zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue elapsed ms wed oct iran standard time objectonscheduletask zonedelegatescheduletask zoneschedulemicrotask scheduleresolveorreject resolvepromise safesubscribererror safesubscribertryorunsub safesubscribererror subscribererror subscribererror mergemapsubscribersubscribererror mergemapsubscribersubscribererror mergemapsubscribersubscribererror mergemapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mergemapsubscribersubscribererror mergemapsubscribersubscribererror catchsubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror lastsubscribersubscribererror lastsubscribersubscribererror mergeallsubscriberoutersubscribernotifyerror innersubscribererror innersubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror catchsubscribererror firstsubscribersubscribererror firstsubscribersubscribererror mergeallsubscriberoutersubscribernotifyerror innersubscribererror innersubscribersubscribererror catchsubscribererror mergemapsubscribersubscribererror mergemapsubscribersubscribererror mergemapsubscriberoutersubscribernotifyerror innersubscribererror innersubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mapsubscribersubscribererror mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue elapsed ms wed oct iran standard time objectonscheduletask zonedelegatescheduletask zoneschedulemicrotask scheduleresolveorreject resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue elapsed ms wed oct iran standard time objectonscheduletask zonedelegatescheduletask zoneschedulemicrotask scheduleresolveorreject resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue elapsed ms wed oct iran standard time objectonscheduletask zonedelegatescheduletask zoneschedulemicrotask scheduleresolveorreject resolvepromise webpackjsonpcallback promise rejection read property visitexpression undefined zone angular task promisethen value typeerror read property visitexpression undefined typeerror read property visitexpression undefined jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitallobjects jitemittervisitorabstractemittervisitorvisitallexpressions jitemittervisitorabstractemittervisitorvisitliteralarrayexpr literalarrayexprvisitexpression jitemittervisitorabstractemittervisitorvisitwritepropexpr writepropexprvisitexpression jitemittervisitorabstractemittervisitorvisitexpressionstmt expressionstatementvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractemittervisitorvisitifstmt ifstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitemittervisitorabstractjsemittervisitorvisitclassgetter arrayforeach native jitemittervisitorabstractjsemittervisitorvisitdeclareclassstmt classstmtvisitstatement arrayforeach native jitemittervisitorabstractemittervisitorvisitallstatements jitstatements runtimecompilercompilemodule runtimecompilercompilemoduleandcomponents runtimecompilercompilemoduleasync moduleboundcompilercompilemoduleasync mergemapsubscriberproject mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue uncaught promise typeerror read property visitexpression undefined consoleerror", "d": "10/2016"}, {"body": "nt need code minimal reproduction", "d": "10/2016"}, {"body": "issue solved put extra file import routes routermodule angularrouter import login logincomponent noinspection typescriptvalidatetypes const routes routes path component login gt gt two commas export const routing routermoduleforchild routes hope error messages better explain problem", "d": "10/2016"}, {"body": "wrong repo pls reopen", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "duplicate indeed thnx dzmitryshylovich", "d": "10/2016"}, {"body": "u need reconstruct whole form every change detection cycle", "d": "10/2016"}, {"body": "example plunkr contrived real world example component reused routes navigate resource resource page think nextprev record component containing form never unloads data changes resource changes reinitialize form something similar supposedly fixed", "d": "10/2016"}, {"body": "use reset initial value setvaluepatchvalue", "d": "10/2016"}, {"body": "initialize form twice blank values real values seems silly considering nt think supposed happen", "d": "10/2016"}, {"body": "think problem runs change detection setting expecting change detection pass directive wo nt happen cd already run approach recreating form every change detection cycle flawed", "d": "10/2016"}, {"body": "blessed way create form ton use instead something feels messy listing fields form twice know going breaking changes forms module regret nt designed like many libs completely separate form values validation structure", "d": "10/2016"}, {"body": "also add one last thought pattern specifically addressed earlier prs simply seem broken custom components", "d": "10/2016"}, {"body": "underlying issue seems placement line router pushes guards onto check stack traversing node children submit pr sometime evening cst", "d": "10/2016"}, {"body": "guide repo test tools supposed get browser windows say karma connected command line halted try click debug button get blank page inspector indicates ca nt find terminal also shows bunch ts warnings also saw build seem complaint duplicate identifiers note current master make changes", "d": "10/2016"}, {"body": "tdsmithatabc try following cd dirwithangular npm buildsh cd modules angularrouter scriptsbuildsh open new terminal scriptskarmash", "d": "10/2016"}, {"body": "use instead feed css templates aot compiler aot runs need load html css files browser thus nt need requirejs purpose", "d": "10/2016"}, {"body": "nt see difference", "d": "10/2016"}, {"body": "dzmitryshylovich would assume timezone related might see end needs investigation indeed", "d": "10/2016"}, {"body": "vinagreti u add screenshot", "d": "10/2016"}, {"body": "look bottom right see new date outpus see output think utc locale problem occur", "d": "10/2016"}, {"body": "dzmitryshylovich think triming string solves problem look code using space workaround get right date remove using trim neither workaround pr work case nt think", "d": "10/2016"}, {"body": "u paste screenshot without space", "d": "10/2016"}, {"body": "screenshot two inputs without space space end space end", "d": "10/2016"}, {"body": "pkozlowskiopensource intl nt support time zones thus nothing angular side", "d": "10/2016"}, {"body": "tests found problem used calculate point time piping string string think angular could use hack remove give us right angular used act like see plunker something like", "d": "10/2016"}, {"body": "works expected fails", "d": "10/2016"}, {"body": "created pr fix problem", "d": "10/2016"}, {"body": "router links relative ie router link expression produce different results depending used link used home component produces whereas link outside produces relative links relative links relative links make components reusable make fewer assumptions structure application update link used home component look like link still relative create right url absolute links also make link absolute like bug closing issue", "d": "10/2016"}, {"body": "apologies lack understanding thanks explanation makes sense updated plnkr includes example say works", "d": "10/2016"}, {"body": "please provide small reproduction problem eg plunker", "d": "10/2016"}, {"body": "manklu plunkr example provided", "d": "10/2016"}, {"body": "sorry overlooked", "d": "10/2016"}, {"body": "seeing angular view encapsulation emulated shadow dom component css scoped matches elements included component template elements added via outside scope angular thus nt match shimmed selectors generated component css want component css apply either turn view encapsulation component use disable shimming example closing angular behavior wai reported", "d": "10/2016"}, {"body": "believe avoiding problem template defines structure content fit inside regardless content behavior referring working expected putting hinderance every single enterprise uses type cms cdn pull dynamic content angularjs provides behavior expected saying correct working properly causes component scope issues sounds like may working expected rather another solution implemented far augury concerned interpolated html scope component using host bad practice used sort hack required styling fix deep also hack disabling view encapsulation defeats purpose angular components styles plug play", "d": "10/2016"}, {"body": "logic alxhub css never applied shadow dom unless would nt mean css never applied html shadow dom last checked angular rely heavily shadow dom templates rendering yet every angular app somehow nt look like plain text web page", "d": "10/2016"}, {"body": "u provide reproduction plunkr", "d": "10/2016"}, {"body": "plunkr show browser debug console type first input field", "d": "10/2016"}, {"body": "u provide working reproduction sounds like server configuration issue", "d": "10/2016"}, {"body": "added sample application repository please download url application routingrar repository url versions vs update angular stable version latest note included files nodemodules folder please restore using packagejson configuration file", "d": "10/2016"}, {"body": "use hash strategy page refresh work want go path strategy support demos use liteserver supports historyapifallback refresh works case iis something like webconfig info", "d": "10/2016"}, {"body": "amp dzmitryshylovich wow working thanks quick fix", "d": "10/2016"}, {"body": "u please provide working reproduction plunkr", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please provide small reproduction problem eg plunker", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "dzmitryshylovich right please file bug docs repo thanks", "d": "10/2016"}, {"body": "tried solution see example serialized object query string way recursive serialization created object contains properties serialized values pass router serialization stringify params make urltree work opinion better way customurlserializer var queryparam decodeuricomponent param search produces st like amp amp fromgeo lat amp fromgeo lng queryparamsplit amp foreach keyvalue gt convert object var item keyvaluesplit queryparam item item queryparamtype", "d": "10/2016"}, {"body": "think use shared service pass data point serializing objects url bar", "d": "10/2016"}, {"body": "problem fix", "d": "10/2016"}, {"body": "want custom form control recognized ngmodel implement controlvalueaccessor otherwise form wo nt know interact custom control see issue example", "d": "10/2016"}, {"body": "kara thank fast answer may misundeerstood concepts arguments statement least questions unclear nt talk custom form control talk custom control general placed inside form control may nothing model data may perform structuring tasks group one input elements special purpose would need control value accessor component component dealing data control value accessor help one input element component thought proposal bring full functionality forms using template driven forms ngmodel exiting applications need something like control value accessor migration seems easy expected", "d": "10/2016"}, {"body": "kara thanks response example trick already frustrated spending days get done", "d": "10/2016"}, {"body": "kara would great could answer last questions", "d": "10/2016"}, {"body": "u provide minimal working reproduction plunkr", "d": "10/2016"}, {"body": "danishin expected behavior reattach cdr call detach", "d": "10/2016"}, {"body": "dzmitryshylovich yes would work", "d": "10/2016"}, {"body": "danishin u see plunker async pipe nt receive new values detached mode everything complicated thought", "d": "10/2016"}, {"body": "sure related forked plnkr running animation callback zone works pd look output animation callback runs outside zone change detector nt see", "d": "10/2016"}, {"body": "could create repro using latest angular", "d": "10/2016"}, {"body": "chuckjaz could add comment loose types suggested solution", "d": "10/2016"}, {"body": "currently lose type save intermediate result temporary variable declaring type temporary variable requires type information nt time generate code case however nt need temporary generating expression see error", "d": "10/2016"}, {"body": "playing bit typescript came following assume following interfaces ts interface zoo string interface goo z zoo undefined interface bar g goo undefined interface foo b bar undefined component something like could generate following ts function defined v undefined null return undefined var undefined amp amp componentgetfoo var undefined amp amp defined b var undefined amp amp defined g var undefined amp amp defined z var value componentgetfoo null null null null null null null null would nt need helper would legal could generate ts var undefined amp amp componentgetfoo var undefined amp amp var undefined amp amp var undefined amp amp var value componentgetfoo null null null null null null null null unfortunately types one version works without strict null checks code drawback generates code includes expression twice though one form executed would nice implemented would give us believe implement immediately detect version typescript using generate correct version code", "d": "10/2016"}, {"body": "seems like one way tackle would use object instead use", "d": "10/2016"}, {"body": "someone also suggested could help may simpler backwards compatible solution would still argue using safer choice long term either way thought would mention", "d": "10/2016"}, {"body": "probably solved ver", "d": "10/2016"}, {"body": "yep thanks", "d": "10/2016"}, {"body": "reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "implicitly support optional segments well mean complete case would could specify segment optional like common scenario routing granted come php background people always preffered nicer plus sites already mature might get away changing fewsome routes changing routes actually started rewrite already mature php developed website angular right modules routes config routes possible optional segments course generate separately copypaste output routes config case performance would issue generate app many routes pointing component pretty", "d": "10/2016"}, {"body": "one issue pagination articlecomponent ngoninit set first article stream go paginated route articlecomponent reinstantiates lose state config like essentially looking way share articlecomponent routes state maintained", "d": "10/2016"}, {"body": "stack overflow question", "d": "10/2016"}, {"body": "recite vicb question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request since must add providers module parent servicevalue value export class parent value string constructor private service service thisvalue servicevalue ngmodule imports commonmodule declarations parent exports parent providers service", "d": "10/2016"}, {"body": "manklu works well eagerload mode need component scoped provider module scope ca nt find reference provide injectable component declaration deprecated", "d": "10/2016"}, {"body": "multiple ways handle errors data resolution catch errors resolver catch error resolver instance navigate error page show dialog error message something like class userresolver implements resolve constructor private router router private backend backend resolve route activatedroutesnapshot state routerstatesnapshot promise return thisbackendfetchuser routeparamsid catch e gt thisrouternavigatebyurl error catch errors invoking navigation resolver returns rejected promise corresponding navigation fails navigation failure catch follows nt want promise rejected pass custom error handler routermoduleforroot listening navigationerror events navigation failures listen navigationerror events routereventsfilter e gt e instanceof navigationerror subscribe e gt default error handling behavior simple fail navigations router provides multiple ways change", "d": "10/2016"}, {"body": "vsavkin thanks clarification", "d": "10/2016"}, {"body": "issue", "d": "10/2016"}, {"body": "yes bad thought searched thoroughly existing issue", "d": "10/2016"}, {"body": "discussion closed see decision", "d": "10/2016"}, {"body": "thx link says obsolete would breaking change breaking change means obsolete understand modification impact lots existing code something place queue", "d": "10/2016"}, {"body": "special behavior add css tag", "d": "10/2016"}, {"body": "maybe update documentation prevent person lose time would interesting", "d": "10/2016"}, {"body": "feel free open issuepr angularangulario nt see anything angular specific", "d": "10/2016"}, {"body": "wrong repo", "d": "10/2016"}, {"body": "thnx dzmitryshylovich miqueliu repository angular angular lives", "d": "10/2016"}, {"body": "please provide repro plunker make sure issue already reported", "d": "10/2016"}, {"body": "plunkr updated original post try google chrome try safari mac os x el capitan", "d": "10/2016"}, {"body": "found cause ts work safari date string works safari date string work google chrome course line source", "d": "10/2016"}, {"body": "strong feeling somewhat related", "d": "10/2016"}, {"body": "sounds like", "d": "10/2016"}, {"body": "think typically project would select final close version major version sequence lts maybe right final might end lts matter even need version lts ends backwardcompatible perhaps deprecation warnings applications may final first time version needs promoted lts", "d": "10/2016"}, {"body": "agreed new angular versions backward compatible really need lts really nt think want angular keep tons code bc ok break things release new major number never case wondering versions planned lts release released know lts release still getting least security fixes", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "honest sure angular issue chrome issue could add plunker based angular behavior browsers", "d": "10/2016"}, {"body": "seems chrome issue tried jquery got problem", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "dzmitryshylovich tried event fires keypress change fired blur going back seems like bug works fine type text doesnt type number work forced", "d": "10/2016"}, {"body": "fyi", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "run actions demonstrate run notice value input populates showing initial binding working change value confirm dialog come hit cancel change function sets ui update change inout type text run test works change type back type number uncomment change value say cancel updated", "d": "10/2016"}, {"body": "adds event listener invoked method executed within stack value getting detected change detection chance run yet instead overwritten current input value listener manual change detection works slightly better option use seems possible intercept event listener added directive makes sense default would better control similar bug event listener execution order preventdefault", "d": "10/2016"}, {"body": "thanks detailed explanation guess ill run", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "wrong repo pls reopen", "d": "10/2016"}, {"body": "sorry sure material repo", "d": "10/2016"}, {"body": "every single one components using nt noticed behavior using angular looking provided example nothing jumps though theory based something odd noticed certain actually check see visible block noticed issue declared inside component implementation initialized value nt showing inside test example input like would show however would wasted quite bit time one noticed initializing anything perhaps running oddity experiencing would explain works wrapper component though since set something wrapper verify behavior say reasonable defect hate go back change component declarations gt lt update oddly enough whatever causing condition described sigh seems gone away change made end working instead clue", "d": "10/2016"}, {"body": "thanks take look let know also glad hear supposed work asis", "d": "10/2016"}, {"body": "mattdistefano example unit test seems behave angular import componentfixture testbed angularcoretesting import http angular import list immutable import translatemodule translateloader translatestaticloader import paymentstepsmethodcomponent paymentstepsmethodcomponent import svgiconcomponent sharedcomponentssvgiconsvgiconcomponent import enumpaymentmethodtype paymentmethodstate storepayments suite related tests describe payment steps method component gt let fixture componentfixture comp paymentstepsmethodcomponent element paymentsmethods list component displays couple buttons user selects payment method clicking either buttons etc component one paymentmethods one paymentmethodselected", "d": "10/2016"}, {"body": "well setting default value nt seem make difference suggestion example help narrow issue bit seems like first works subsequent calls typescript import testbed angularcoretesting import angularplatformbrowser import testcomponent testcomponent describe test component gt beforeeach gt testbedconfiguretestingmodule declarations testcomponent render bound content within p element gt const fixture testbedcreatecomponent testcomponent fixturecomponentinstancecontent foo fixturedetectchanges", "d": "10/2016"}, {"body": "try moving inside block instead calling inside first block know first call init component call etc maybe odd timing issue", "d": "10/2016"}, {"body": "still luck initial value flows dom updates iirc onpush change detection given component less runs within parent component evaluates bindings rather child component correct would sort make sense initial would work initialize component bindings within parent fixture case subsequent calls nt anything guys test examples updating component initialized", "d": "10/2016"}, {"body": "let try reproduce seeing test example posted strengthinnumbers", "d": "10/2016"}, {"body": "okay definitely seeing behavior end initial binding picked call subsequent ones changing component works", "d": "10/2016"}, {"body": "probably mixed angular umd bundle module format code make sure imports resolved", "d": "10/2016"}, {"body": "interpreting correctly jit compiler uses angularcorebundlescoreumdjs based package definition angularcorepackagejson aot compiler expects angularcoreindexjs modules instead mean search replace means angular library imports alternative way compiler use src files instead pointed use umd bundles seems default behavior angular repo npm use bundles", "d": "10/2016"}, {"body": "mean search replace must configure loader correctly", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "priority seems deterministic lexicographical order css standard behaviour nothing angular could change", "d": "10/2016"}, {"body": "quick observation angular applies classes given order order occurrence css determines outcome default behaviour doubt angular handle easily", "d": "10/2016"}, {"body": "angular applies classes given order order occurrence css determines outcome default behaviour doubt angular handle easily yes css classes seem applied exactly order supplied user great works like least chrome imo ca nt guarantee afaik ca nt guarantee order iteration object case seem css specific something could handled angular thnx manklu npx looking one", "d": "10/2016"}, {"body": "minimal plunker reproduce problem would helpful", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "michaelchiche access data parent try replace thisdata thisroutesnapshotdata get real question first resolved data data flatted go upward url tree must access data exactly node defined", "d": "10/2016"}, {"body": "olegdunkan say true looking hack works simple routes happens different nesting levels children understand supposed able access data resolved navigation inside data property case", "d": "10/2016"}, {"body": "michaelchiche hack way access data parents write simply function go upward level parent public property route snapshot nt see reasons use right way get data parents think implement data levels let say n levels levels resolves data first level one property data next level adds one finally n properties complexity course use prototyping like parent property function getparentdata snapshot level number var ref snapshot level ref refparent return refdata", "d": "10/2016"}, {"body": "olegdunkan point asking filing bug report documentation says suppose work without additional work", "d": "10/2016"}, {"body": "michaelchiche could please give link described documentation", "d": "10/2016"}, {"body": "olegdunkan serious nt know talking please pollute issue thanks information said also check plunker", "d": "10/2016"}, {"body": "question asked vsavkincom blog answered use parent property want say works path component resolve aresolver gouard gourds children path b component b resolve b bresolver children path c component c resolve c cresolver component oninit thisroutedatasubscribe data gt data b component oninit thisroutedatasubscribe data gt data b data b thisrouteparentdatasubscribe data gt data c component oninit thisroutedatasubscribe data gt data c data c data b c thisrouteparentdatasubscribe data gt data b thisrouteparentparentdatasubscribe data gt data repeat real question get data first would nt way documentation says common words ca nt conclude exactly data gathered levels wait officials say", "d": "10/2016"}, {"body": "repeat real question get data first would nt way real issue", "d": "10/2016"}, {"body": "dzmitryshylovich olegdunkan talking vssavkin blog want gist shows share resolved data child components look plunker please", "d": "10/2016"}, {"body": "correct plunker expected behavior write anything data availability blog", "d": "10/2016"}, {"body": "michaelchiche victor shows us share access data access resolved data shape via data property define resolve section parent get data parent define section parent parent please patient get parent parent", "d": "10/2016"}, {"body": "explain access data defined data property parent without calling data inside resolver since repeat supposed merged data", "d": "10/2016"}, {"body": "explain access data defined data property parent without calling parentdata actual bug u access initial navigation may feature need feedback victor", "d": "10/2016"}, {"body": "understanding way around maybe vsavkin help us one", "d": "10/2016"}, {"body": "michaelchiche tried explain data merge good idea seems likely bug feature store data although first navigation likely feature feature every navigation along path accompanied collection data let say abcde let first navigate abcde e data abcd e cost nothing get go along b e preserve resolved data next navigation abc upward resolved b c already need access get b c keep c node merged form collect c get user necessary many cases data levels every level api get parent property choice use", "d": "10/2016"}, {"body": "olegdunkan always merge done amp", "d": "10/2016"}, {"body": "michaelchiche try check way name data properties different levels conflicts resolved path component resolve part aresolver children path b component b resolve part bresolver b component oninit thisroutedatasubscribe data gt gt data part aresolver bresolver last difficult maintain", "d": "10/2016"}, {"body": "michaelchiche checked look lines say us router reusing path add checks canactivate routes passed", "d": "10/2016"}, {"body": "set outdir field tsconfigjson dump files somewhere else", "d": "10/2016"}, {"body": "thanks reply setting property works odd workaroundhack acceptable solution", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "extraction tool think produce one file localization system one produces file language sets targetlanguage", "d": "10/2016"}, {"body": "extraction tool assume english name localization system angular please", "d": "10/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "10/2016"}, {"body": "indeed duplicate thnx dzmitryshylovich", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "valid pristine nt help valid control looses focus", "d": "10/2016"}, {"body": "kamarouski actually submitted property exists form directives rather really makes sense top level nested ex templatedriven html invalid email reactive ts viewchild formgroupdirective formgroupdir formgroupdirective get showerror return thisforminvalid amp amp thisformgroupdirsubmitted looking", "d": "10/2016"}, {"body": "thanks kara exactly looking", "d": "10/2016"}, {"body": "excellent case closing issue", "d": "10/2016"}, {"body": "angular coming months", "d": "10/2016"}, {"body": "sebastiencaunes check plans versioning releasing strategy dzmitryshylovich pointed going see angular months angular year etc", "d": "10/2016"}, {"body": "thank answers could possible put explicit convention name example without space give version codename like android gingerbread jellybean way result better search result help find relevent content web framework awesome finding reliable help painfull look answer comments imagine beginner", "d": "10/2016"}, {"body": "update router version duplicate", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "thanks update", "d": "10/2016"}, {"body": "first may seem like good idea keep subpackages semver sooner later subpackages changed often others let say router package developed much eg forms package release lots new versions router forms even changes forms version number slow release process router drop rule version number release packages need unfortunately lost track packages belongs together compatible none options perfect", "d": "10/2016"}, {"body": "castamir actually versions angular move together except router major version upper release version module likes compilercli comes others modules angular want platform platform commons best practices said versions platform modules semver eg spring say sad one module different version number think angular team forget made router semver come back others modules", "d": "10/2016"}, {"body": "paulcayon downgrade bad idea months new major version introduced end users confused already existing router platform semver angular team wants suggest skipping major version cleanest solution", "d": "10/2016"}, {"body": "castamir said", "d": "10/2016"}, {"body": "yep missed one since supported intlapi really hard change", "d": "10/2016"}, {"body": "osxonly module install windows", "d": "10/2016"}, {"body": "dzmitryshylovich maybe would good idea mention platform requirements build angular inside", "d": "10/2016"}, {"body": "dzmitryshylovich usually installing packages windows get following messages dep npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch warning error deps installed point build angular windows", "d": "10/2016"}, {"body": "albertosantini trying build angular following steps suggested developermd doc look prerequisites nodejs version gt lt nodejs get warning dzmitryshylovich mentioned think could closed", "d": "10/2016"}, {"body": "yeh require nodejs version gt lt", "d": "10/2016"}, {"body": "thanks reply sorry noise node lt indeed read doc nodejs version gt lt thought typo outdated info", "d": "10/2016"}, {"body": "still wip see", "d": "10/2016"}, {"body": "ah nice perfect timing thanks", "d": "10/2016"}, {"body": "duplicate indeed something needs covered proper solution come kara mentioned previously lack parserrs formatters like mechanism dealbreaker controls want work elaborate data model would like extend offer collaborate topic meantime closing one duplicate", "d": "10/2016"}, {"body": "see bug aot", "d": "10/2016"}, {"body": "brandonroberts thank brandon commenting viewencasulationnone app built aot works styles screwed making styles global fixed rendering app", "d": "10/2016"}, {"body": "closing duplicate thnx brandonroberts", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "sorry work intended queries calculated compilation time ie contain elements present template compilation excludes elements projected via components dynamically created via views created via different place", "d": "10/2016"}, {"body": "sorry clarify queries expected executed order declared achildren expected populated bchildren bchildren expected populated achildren", "d": "10/2016"}, {"body": "change detection works angular see explanation", "d": "10/2016"}, {"body": "dzmitryshylovich well aware change detection works case angular fills viewchildren view checked case updating template forbidden template modification nt result appropriate debug warning addition compiler might able batch calls launch change handlers via zoneschedulemicrotask though sure guarantees querylistchanges makes terms observable emitted undocumented", "d": "10/2016"}, {"body": "thanks attaching plunker describe expected behavior actual behavior", "d": "10/2016"}, {"body": "sure expected clicking populate button adds child component foo gated ngif directive viewchildrengenerated querylistchanges observable subscribed add message template array event arrives message says element added actual button clicked foo component appears changes event fired message added template however change detection run causing disconnect model template disconnect rectified clicking button force change detection via changedetectorrefmarkforcheck warning message changing checked shown desired observable ever used changes template subscribe function correctly causes change detection occur querylist generated via contentchildren works fine new plunker suspect timing viewchildren query firing content checking opposed new microtask", "d": "10/2016"}, {"body": "experiencing similar problems sounds pretty serious similar real case scenario template gets projected time query tabspanel get notified new tab", "d": "10/2016"}, {"body": "actually legit determine content earlier still change content view", "d": "10/2016"}, {"body": "want dynamically create component use componentfactoryresolver", "d": "10/2016"}, {"body": "dzmitryshylovich far know true components part app eg childs root app element stated want need bootstrap additional component somewhere html", "d": "10/2016"}, {"body": "repro nt work", "d": "10/2016"}, {"body": "router needs basehref obviously url changes plnkr please correct indexhtml needs adjusted dynamic path dzmitryshylovich plnkr updated base href set dynamically match plnkr session url", "d": "10/2016"}, {"body": "similar problem url changed correctly history becomes corrupt browser button back locationback windowhistoryback reproduce provided plunker work expected", "d": "10/2016"}, {"body": "johannesatgit u also bootstrap cmp outside angular", "d": "10/2016"}, {"body": "use angularcli maints looks import polyfillsts import platformbrowserdynamic angularplatformbrowserdynamic import enableprodmode angularcore import environment appenvironment import appmodule appappmodule environmentproduction enableprodmode platformbrowserdynamic bootstrapmodule appmodule appmodulets ngmodule imports browsermodule formsmodule httpmodule routing declarations appcomponent aboutcomponent providers authenticationservice authguard baserequestoptions provide window usevalue window bootstrap appcomponent export class appmodule", "d": "10/2016"}, {"body": "url changed correctly history becomes corrupt seen behaviour people call time", "d": "10/2016"}, {"body": "dzmitryshylovich thanks look", "d": "10/2016"}, {"body": "thank much hero best wishes works fine", "d": "10/2016"}, {"body": "welcome", "d": "10/2016"}, {"body": "vsavkin found reason issue factory created used listener current code fact listener called componentref bootstrapped componentref must componentref apps root component think missing check bootstrapped component app component router initialized code might export function initialrouternavigation router router ref applicationref preloader routerpreloader opts extraoptions return bootstrappedcomponentref componentref gt worth creating pr", "d": "10/2016"}, {"body": "duplicate see detailed discussion referenced issue", "d": "10/2016"}, {"body": "works intended", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "close one open docs repo", "d": "10/2016"}, {"body": "brocco difficult read also refer", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "manklu even solution", "d": "10/2016"}, {"body": "answer provide least plunker someone might willing take look", "d": "10/2016"}, {"body": "opening multiple issues problem going get answers faster closing duplicate", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "dzmitryshylovich question reported stackoverflow already dint got reply redirect development team", "d": "10/2016"}, {"body": "provide least plunker someone might willing take look", "d": "10/2016"}, {"body": "manklu think question self explanatory", "d": "10/2016"}, {"body": "dzmitryshylovich reposted questionyou redirect development team thank", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls provide working reproduction", "d": "10/2016"}, {"body": "onkark please provide plunkr repro", "d": "10/2016"}, {"body": "working sample day two", "d": "10/2016"}, {"body": "u pls simplify plunkr remove unnecessary componentsservices", "d": "10/2016"}, {"body": "dzmitryshylovich plunkr fork official demo minimal changes changes see first message order reproduce problem", "d": "10/2016"}, {"body": "cc kara pkozlowskiopensource mention add part add new validator prefer option option pr back home", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "ok sorry everything works fine mistake part closedelete", "d": "10/2016"}, {"body": "pls update angular dependencies issue still persist", "d": "10/2016"}, {"body": "yes latest dependencies issue still persist", "d": "10/2016"}, {"body": "error app", "d": "10/2016"}, {"body": "sorry never pushed latest code yet pushed sorry happened", "d": "10/2016"}, {"body": "reproduce issue lot errors code import browsermodule appmodule routermoduleforroot called etc pls read router docs", "d": "10/2016"}, {"body": "fixed config everything works expected issue closed", "d": "10/2016"}, {"body": "ok check close issue thanks lot helping", "d": "10/2016"}, {"body": "wrong repo pls reopen", "d": "10/2016"}, {"body": "apologies moved", "d": "10/2016"}, {"body": "thislistener thisrendererlistenglobal document click event gt something happens ngondestroy thislistener thislistener", "d": "10/2016"}, {"body": "dzmitryshylovich dont know trying point may want remove listener component destroyed", "d": "10/2016"}, {"body": "brunsten thislistener lt unsubscribes", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "issue fixed upgrading angular due also sure angularcompilercli updated took bit realize updated", "d": "10/2016"}, {"body": "looks like duplicate nt using codelyzer chance", "d": "10/2016"}, {"body": "thx pkozlowskiopensource use codelyzer added comment", "d": "10/2016"}, {"body": "appears like comes observableprototypefilter operator excluded rollup build would easy pr anybody wants attack cc vsavkin", "d": "10/2016"}, {"body": "update fix bug", "d": "10/2016"}, {"body": "estimated date fix release", "d": "10/2016"}, {"body": "afnpires bug fixed nt know release use way pilot resolve", "d": "10/2016"}, {"body": "hstarorg sorry workaround nt seem work", "d": "10/2016"}, {"body": "afnpires try file processed routerumdtxt", "d": "10/2016"}, {"body": "hstarorg nt work error", "d": "10/2016"}, {"body": "problem related something bundled rxjs work", "d": "10/2016"}, {"body": "afnpires hstarorg works", "d": "10/2016"}, {"body": "atiertant", "d": "10/2016"}, {"body": "new package angularrouter still bug rxjs concatmap fix", "d": "10/2016"}, {"body": "hstarorg finnaly understand nt work instead specifying rxjs systemconfigjs map using paths could avoid loading rxjs operation individually", "d": "10/2016"}, {"body": "newer problem working also modify umd code", "d": "10/2016"}, {"body": "hstarorg already pr fix", "d": "10/2016"}, {"body": "ericmartinezr release version", "d": "10/2016"}, {"body": "pr merged yet stucked due kind errors", "d": "10/2016"}, {"body": "albertosantini bad idea", "d": "10/2016"}, {"body": "may related fact moment one outlets need defaultprimary outlet see issue discussion fix coming claim would breaking may want work around", "d": "10/2016"}, {"body": "router long gone replaced router want see use named outlets see", "d": "10/2016"}, {"body": "thanks feedback problem leave path property empty like", "d": "10/2016"}, {"body": "sound like support request got resolved thnx brandonroberts", "d": "10/2016"}, {"body": "nt return promise ca nt listen", "d": "10/2016"}, {"body": "bstrauss reply regarding feature request mean call user wants add new widget compile module", "d": "10/2016"}, {"body": "way recompile component recompile module contains nothing changed use existing moduleref something changed recompile module", "d": "10/2016"}, {"body": "tbosch nt want recompile module would like know module already compiled get load dynamically another component way save module ref way ask compiler already present", "d": "10/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue", "d": "10/2016"}, {"body": "dzimitryshylovich know issue closed clear path future supported migrate template model would good details", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "vicb team decide someone address issue team decid remain short answer telling us plans would really help us take best decision", "d": "10/2016"}, {"body": "vicb nobody wants give even short answer", "d": "10/2016"}, {"body": "sounds like ionic issue please follow provide reproduction problem using angular feel free reopen issue", "d": "10/2016"}, {"body": "hi getting error graphicsxp actually alxhub think repo posted nt reference ionic error reproducible type argument absent generics ts code ngfactory causing issue", "d": "10/2016"}, {"body": "graphicsxp simosalmi okay looked repo posted issue passing generic class attempting provide confusing angular nt know type argument meant use chuckjaz may insight believe need give better error message case", "d": "10/2016"}, {"body": "alxhub right removing baseservice list providers make compiles crashes runtime following error provider baseservice added baseservice list providers idea", "d": "10/2016"}, {"body": "issue us angular typescript webpack web application ie ionic involved development build goes fine production build aot uglifyjs complains error default generic type restapiservice requires type argument codegen output directory ngc compiled factories looking original code ts appmodulets ngmodule imports sharedmoduleforroot sharedmodulets export class sharedmodule static forroot modulewithproviders return ngmodule sharedmodule providers restapiservice course generic class used throughout app dependency different types passed", "d": "10/2016"}, {"body": "related explanation might come final comments issue", "d": "10/2016"}, {"body": "braincrumbz look issue link sentence made jump chair technical challenges must overcome typescript features need added implemented correctly currently nt believe adding support provides enough value justify cost implementation generics typescript feature provides value nt know maybe missed something", "d": "10/2016"}, {"body": "tried also registering typed classes providers already highlighted vs code building gives error like error invalid provider ngmodule relaxingmodule instances provider type allowed got myprovider myotherprovider false myprojnodemodules", "d": "10/2016"}, {"body": "tried also declaring specific classes inheriting generic one registering providers one example ts injectable export class authrestapiservice extends restapiservice providers myprovider myotherprovider authrestapiservice error highlighted ide compiling building error default myprojcodegensrcappmodulengfactoryts xxx yyy supplied parameters match signature call target looking factory code error hint popup says ts supplied parameters match signature call target constructor authrestapiservice looks like type parameter ignored newing service instance", "d": "10/2016"}, {"body": "graphicsxp believe taking comment general indictment generics intended implementation challenges make supporting generics context difficult difficulty trying convey slight generics find useful believe problem inheriting constructor metadata produced declares constructor nt take parameters try repeating constructor calling constructor workaround reason nt work valid typescript context interpreted comparing two types instead using type parameter results runtime noticed trailing reported syntax error elided output instantiations generic types reified erased following java like erasure model means way runtime distinguish translate reference function even valid typescript could nt support creating subclass binds type parameter creates concrete reified class used token dependency injection di supports using concrete reified types tokens must manufacture instance type constructor function must unique type token instantiated generic type ambigious type parameters discarded runtime constructor function used instantiations", "d": "10/2016"}, {"body": "chuckjaz way compilermetadata extractor give better error message attempting use class generic type parameter injection token instead current situation generated ngfactory code incorrect causes typescript error given issue title", "d": "10/2016"}, {"body": "alxhub static reflector host able figure asked produce reference", "d": "10/2016"}, {"body": "chuckjaz totally missed constructor thing c point view classic base class contain constructor takes arguments error would nice typescript thanks hint worked", "d": "10/2016"}, {"body": "leaving issue open assigned interpret request better error message recommended alxhub", "d": "10/2016"}, {"body": "hi thanks contributions solve original issue imho provide generic injectables thanks simone oct chuck jazdzewski notifications githubcom wrote leave issue open assigned interpret request better error message recommended alxhub receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "simosalmi supported di tokens bug tracking producing error message explicit limitation need create concrete type binds type parameters", "d": "10/2016"}, {"body": "chuckjaz got point difficulty implementing feature implemented planning nt understand workaround suggested case baseservice used generics tried inheritance approach since parent constructor injected dependencies http service child constructor needed inject dependencies well passing super method found silly means dependency http service base class inherited classes reason went generics way make sense", "d": "10/2016"}, {"body": "implemented chuck said typescript reified generics possible within language use generic type di token", "d": "10/2016"}, {"body": "something nt understand would much like answer di works generics nt use aot meantime code ended writing since di used generics followed recommendations used inheritance export interface ibase id number injectable export abstract class baseservice private loadingservice loadingservice public serviceurl constructor private http inject loadingservice loadingservice loadingservice thisloadingservice loadingservice getall observableloadingservicepresentloading return map response response gt inherited class injectable export class requestservice extends baseservice constructor http inject loadingservice loadingservice loadingservice super loadingservice thisserviceurl buildrequestsjson getall observable nt like solution inject dependencies base class inherited classes least works aot", "d": "10/2016"}, {"body": "di works generics nt use aot works long one instantiation generic used provider token two use token one obscure words appears work soon try introduce another instance application subtly break code moved works regardless number derived classes way could support would way reifying generic type typescript currently provide way aware plans change", "d": "10/2016"}, {"body": "chuckjaz thanks clarification although usage working application development build several occurences generic class injected dependency different type parameters guess marks difference type parameters interfaces classes", "d": "10/2016"}, {"body": "hi guys please help code getting error data correct format component export class homecomponent public homebigsilder bigslider public topvideosmodels topvideosmodels constructor private dataservice topvideosservices ngoninit thisgetvedios private getvedios void thisdataservice getall subscribe data topvideosmodels gt thistopvideosmodels data error gt consolelog error gt thistopvideosmodels model export class topvideosmodels mediadata mediadata export class mediadata public category string public imageurl string public likes string public mediaid string public section string public synopsis string public title string public urlcategory string public urltitle string public videoid string public videourl string public views number services export class topvideosservices private actionurl string private headers headers constructor private http private urlconfig urlconfig thisactionurl urlconfigcrossbaseurl urlconfigdatabaseurl servgetdata cmdgettopvideos amp thisheaders new headers thisheadersappend accept applicationjson currently getting data format object data mediadata array object error want get response get mediadata object list c sharp nested property class main public string id get set public list userdetails get set", "d": "10/2016"}, {"body": "comment issue nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "slyerrr difficult determine exactly reporting given demo code closing insufficient info feel free open new issue minimal repro plunker", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "ok sure", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "problem", "d": "10/2016"}, {"body": "reduce size bundle lazy loading gziping large app party libs u use u post link github repo", "d": "10/2016"}, {"body": "dzmitryshylovich thanks nt think could make app public tell would measure app size happy provide metric dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularmaterial", "d": "10/2016"}, {"body": "look dependencies ngrx aot build final bundle size minified gziped discussion smallest possible bundle see", "d": "10/2016"}, {"body": "side note aot nt need reflectmetadata corejs implementation", "d": "10/2016"}, {"body": "ericmartinezr interesting dzmitryshylovich thanks tip", "d": "10/2016"}, {"body": "addition js bundle minified treeshaken rollup larger jit compiled counterpart aot bundle contains code generated jit would expect aot build larger jit application large enough without application hard tell would expect case", "d": "10/2016"}, {"body": "using windows cpu profiler pretty poor metric anything related js measuring browser code running within suggest tracing chrome developer tools would give us much better picture actually occurring application export share trace devtools link", "d": "10/2016"}, {"body": "take peek bundle make sure contains expected modules often found useful inspect bundle using ensure bundle contains intended bits section aot article", "d": "10/2016"}, {"body": "thelgevold aot jit packages exact app built differently robwormald thanks tip hopefully info help guide discussion running tests issue aot app requiring much cpu work jit occurs collected data fresh install browsers default settings addons plugins restart browser tests load one tab contains app let browser sit idle least seconds record performance seconds chrome cpu profiler firefox performance profiler screenshots firefox browser sitting idle app waterfall chart app waterfall chart called infinitely sequentially timelines overlap app call tree app call tree lot function calls seen app flame chart excerpt interval app flame chart excerpt interval attaching zip file four files jit cpu profile recorded chrome matching aot profile jit performance profile recorded firefox matching aot profile performanceprofileszip inspect data import files dev tools tool chrome tool firefox interestingly soon minimize browser window cpu usage goes back jitcompiled levels return focus window usage goes", "d": "10/2016"}, {"body": "mdspinner component reason aot compilation consumes tons cpu template includes component even removed dom jit compilation", "d": "10/2016"}, {"body": "thinking adding flag configuration jit aot would would fit use case", "d": "10/2016"}, {"body": "yes reasonable addition long jit aot use configuration good", "d": "10/2016"}, {"body": "related longrunning issue mhevery working since nt use tsconfigjson get version rewrites paths based directory would fix paths relative fall imported location dist nt nodemodules path beneath directory containing", "d": "10/2016"}, {"body": "multiple root elements selector would work like root component inputs", "d": "10/2016"}, {"body": "worthless create web components nonspa insane giant backstep angular strange angular ngmetadata works much better looks like developed utopia real world", "d": "10/2016"}, {"body": "possible even using make body wrapper preserving content page nt work ngcontent removes components total mess really curious angular developed apps hero turorial", "d": "10/2016"}, {"body": "daschtour able turn components web components using dynamic component creation via factory apis dzmitryshylovich said though match multiple elements bootstrap pass properties root components going close issue wai far angular concerned", "d": "10/2016"}, {"body": "way complicated looks like angular ngmetadata better angular angular", "d": "10/2016"}, {"body": "seems", "d": "10/2016"}, {"body": "closing duplicate", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "use componentfactoryresolver instead dcl example", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "thanks provided link also seems working", "d": "10/2016"}, {"body": "vasuneet works fine try reload several times", "d": "10/2016"}, {"body": "changedetectorrefdetectchanges", "d": "10/2016"}, {"body": "dzmitryshylovich causes stack overflow", "d": "10/2016"}, {"body": "clear problem creating template ie change detection already went past component therefore change detect newly created template asking way force detect changes kind cases", "d": "10/2016"}, {"body": "right case makes sense since know sure nothing changed template created scratch", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pkozlowskiopensource believe bug cloned official angular testing guide refers tried real template updates tests nt work hope reopen", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "need call reallife example still believe support question nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "10/2016"}, {"body": "github repo run template change test", "d": "10/2016"}, {"body": "import commonmodule issue nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "dzmitryshylovich thank", "d": "10/2016"}, {"body": "look", "d": "10/2016"}, {"body": "afaik robwormald thinking good issue tracking thnx opening", "d": "10/2016"}, {"body": "sure could cache observable publishreplay refcount shortcut agree would useful", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "dzmitryshylovich nt think direct duplicate could solution issue hand could useful regardless pipe could think different solutions async pipe issues described going keep issues opened good linked thnx", "d": "10/2016"}, {"body": "useful feature myobjects pluck async myobjects pluck async myobjects pluck async ngoninit thissubscribtion myobjectsobservablesubscribe object gt thismyobjectsobject ngondestroy thissubscribtionunsubscribe", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please provide plunker reproduces problem would also recommend follow issue template closely possible make easier process development team", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "turns falut basecomponent used different selector name myapp works fine wonder working safari chrome berfore", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "plunker link missing another one nt know limit caused function checks array maybe someone angular team explain", "d": "10/2016"}, {"body": "mxii thanks response already saw code forgot mention description ca nt find reason allow array size", "d": "10/2016"}, {"body": "defined numerous discussions regarding past notably joeherold get error ngclass object items robwormald think hard limit mostly performance reasons based say design considered bug hope helps", "d": "10/2016"}, {"body": "workaround easy case hello name item export class app name string constructor thisname items", "d": "10/2016"}, {"body": "manklu thanks already knew thing mentioned op", "d": "10/2016"}, {"body": "expected behavior template parser recognize directive component pipe listed array current exported module current imports wish pipe accessible multiple modules declare module imported others instance could exports directives components pipes want share root list array modules including lazyloaded modules list arrays", "d": "10/2016"}, {"body": "roxkilly indeed expected behaviour module declarations separate template parser recognize directive component pipe listed declarations array current ngmodule exported module current ngmodule imports put pipe declaration lazy child module angular complaining xxx part declarations modules appmodule ordersmodule please consider moving xxx higher module imports appmodule ordersmodule", "d": "10/2016"}, {"body": "supposed declared one time use shared module", "d": "10/2016"}, {"body": "pardon find bit inconsistent one hand reuse module declarations define modules shared hand seem interdependent overlap declarations could please elaborate", "d": "10/2016"}, {"body": "may find informations", "d": "10/2016"}, {"body": "oh man framework really becoming overcomplicated web frontend keeps going may die sophistication fatigue p", "d": "10/2016"}, {"body": "homofortis docs state components directives pipes belong one module one module", "d": "10/2016"}, {"body": "roxkilly nonshared declarations private errors type xxx part declarations n modules", "d": "10/2016"}, {"body": "homofortis bet designers discussed pros cons coming current architecture never built framework advanced coder wo nt pretend strong understanding issue trying help get past original error", "d": "10/2016"}, {"body": "roxkilly thanks efforts believe place identify issues rectify place help someone get past original error building frameworks experience irrelevant helping process", "d": "10/2016"}, {"body": "issue imported wrong module apologize mistake", "d": "10/2016"}, {"body": "recite vicb question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request bootstrap part module definition invalid", "d": "10/2016"}, {"body": "hi manklu thank bad", "d": "10/2016"}, {"body": "aot producing typescript needs transpiled packaged loading browser issue seems related tooling setup getting yesterday everything rollup ex issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation believe documentation updated please open separate issue documentation lives", "d": "10/2016"}, {"body": "yeah would nice create controls yet exist current control list short want think bit whether part method though design ignores controls recognize rather creating throwing error mostly benefit formgroups supersets forms contain properties like id createdat affect form would nt want id added control list example could either make formarray version behave differently support case create new method needs thought meantime impossible achieve care creating controls array value longer current control list add loop creates necessary controls pushes array patching ts thisformget persons length lt thispersonsarraylength thisformget persons push thisbuildperson thisformpatchvalue persons thispersonsarray see full plunker example either way good feature request put list thanks commenting", "d": "10/2016"}, {"body": "kara adding formarray would awesome temporary solution works would add tons loops simple forms guess priorities", "d": "10/2016"}, {"body": "create plunkr required yeah pls", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "pkozlowskiopensource duplicate one router registered listener bootstrapped components one bootstrap component router events fireing multiple times mentioned issue describes technical problem solution detail", "d": "10/2016"}, {"body": "thnx mseemann", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "ezequielzacca dzmitryshylovich asked please provide minimal reproduce scenario plunker otherwise one actionable please check submission guidelines understand ca nt act issues lacking important information", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "pjaymagat dzmitryshylovich reproduction plunker uses nearly code one found docs changes selector component name works expected edit one uses pjaymagat code entirely minor modifications still works expected", "d": "10/2016"}, {"body": "hello skreborn tried plunkr yes working somehow copy everything using visual studio aspnet core mvc project working child triggered parent try different project thanks help", "d": "10/2016"}, {"body": "issue tracker suitable support requests next time please post issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "thnx skreborn dzmitryshylovich helping issues", "d": "10/2016"}, {"body": "hi tried using vs code well code changes first vote really working local vote working using plunkr working think time revisit try use using local plunkr trying use service communicate child gt parent component", "d": "10/2016"}, {"body": "moduleid required systemjs remove issue tracker suitable support requests please next time file issue stackoverflow using tag", "d": "10/2016"}, {"body": "removed moduleid still arise error forced use absolute path templateurl", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "would easy angular store initial value would result increased memory cpu consumption especially elements initial value needs saved compared current value every single time latter changes another method solve might save hashes initial values compare hashes new ones instead would mostly result even memory cpu consumption hash usually longer value except rare cases hashing cpu intensive task middle ground would store values everything would store hashes instead still believe price outweighs value case would nt recommend going also sounds useful actually become optin solution could document downsides people could choose live keep using default change detection", "d": "10/2016"}, {"body": "skreborn yes absolutely right nt default behavior due increased memory cpu consumption still believe would nice feature would nice candidate optin approach additional middleground users could also optin use system fieldblur basis instead evaluating state keypress dzmitryshylovich see feature request kind bot reply", "d": "10/2016"}, {"body": "drauch think dzmitryshylovich simply wants use issue template provided create one think feature requires fill issue template", "d": "10/2016"}, {"body": "duplicate relates routerlinks internal links easily handle code workaround available deep links outside handled code know advance", "d": "10/2016"}, {"body": "pkozlowskiopensource interest sake add router label router involved example least visually", "d": "10/2016"}, {"body": "jostschmithals including application router takes url handling therefore scrolling happening", "d": "10/2016"}, {"body": "definitely routermodule imported starting freshly copied quickstart code changed absolutely nothing besides two lines template appcomponentts specified", "d": "10/2016"}, {"body": "bad something touch touch twice works", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "use snapshot thisroutesnapshotparams path", "d": "10/2016"}, {"body": "ogix instance route snapshop property following code read parameter queryparameters path thisactivatedroutequeryparamssubscribe params gt thispath params path matrix parameters path route parameters thisactivatedrouteparamssubscribe params gt thispath params path", "d": "10/2016"}, {"body": "case variable instance time nt need subscribe params observable could use cached value property suspect author trying directly access property instance", "d": "10/2016"}, {"body": "get latest value parameter following closing issue", "d": "10/2016"}, {"body": "thanks reporting narrow screen shots attached conclude running application debug mode could try confirm whether also problem prod mode ie add call imported calling", "d": "10/2016"}, {"body": "hi changed application add item every ms let application run timeline result tracing memory see memory goes back way eventually iteration though", "d": "10/2016"}, {"body": "closing bug", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "pls fill issue template thx", "d": "10/2016"}, {"body": "dzmitryshylovich wanted confirmation bug", "d": "10/2016"}, {"body": "vicb nt bug", "d": "10/2016"}, {"body": "would say miss configuration", "d": "10/2016"}, {"body": "dzmitryshylovich could please help resolve configuration talking bug recreate need confirmation first", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "would leverage following solution", "d": "10/2016"}, {"body": "relates", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "yes agree really trivial difference makes changing aot harder makes components etc look much messier", "d": "10/2016"}, {"body": "normalize paths jit aot would use moduleid however side effect causing runtime error aot saying module defined get around error though adding following indexhtml page though", "d": "10/2016"}, {"body": "pls provide working reproduction", "d": "10/2016"}, {"body": "moving constants separate file fixes problem", "d": "10/2016"}, {"body": "ngmodule tutorialdocs see following line pls reopen docs repo", "d": "10/2016"}, {"body": "using config aot vs jit question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "vicb sure talking jit aot works fine linux windows exactly tsconfigaotjson every file bug tsconfigaotjson reference compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany false suppressimplicitanyindexerrors true exclude nodemodules angularcompileroptions gendir aot skipmetadataemit true", "d": "10/2016"}, {"body": "sounds like nt use functions decorators directly", "d": "10/2016"}, {"body": "zoechi point plunker example uses aot write one function variable also case think compiler complain got split error", "d": "10/2016"}, {"body": "things unsure cardstates supposed class yes failing variable nt available due import issue able read fine since string value passed unless null", "d": "10/2016"}, {"body": "repo reproduce error", "d": "10/2016"}, {"body": "matsko generally way build set reusable animations still compile aot jit simply exporting bunch animationentrymetadata objects referencing component decorator eg nt work aot animations state metadata generated correctly nt want redeclare animation every component decorator lines always", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "sure bug aot compiler", "d": "10/2016"}, {"body": "even really bug still fill template presented opening issue apparently deleted", "d": "10/2016"}, {"body": "anyone found solution ngc runs fine first time things jit mode maints first run change main ts aot mode ngc takes compile process ends memory could nt find solution anywhere questions stackoverflow unanswered tried compiling windows mac process runs memory month still solution problem help appreciated thanks", "d": "10/2016"}, {"body": "giving node memory setting", "d": "10/2016"}, {"body": "along ngc tried nt work", "d": "10/2016"}, {"body": "hmm could give memory perhaps something application building causes ngc leak memory consume great amount memory build angular nt seen nt project compiles large number components single pass idea reproduce issue", "d": "10/2016"}, {"body": "alexeagle thanks helping previous comment meant unable assign memory node probably correctly command line script packagejson npm run ngc gives syntax error following c basedir dirname echo sed e g syntaxerror missing argument list exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup probably right project size yes consider project large lot html dom lot two way data binding aot folder first ngc compile comes size input project size another project written exactly way followed proper typescript syntaxes angular best practices far fewer modules aot folder size project nt heap issues project reproduce guess projects lot html data binding issue repo private otherwise would given", "d": "10/2016"}, {"body": "seeing activity issue recompiled project following official aot guide exact tsconfigaotjson file guide except noimplicitany false app folder files including components modules directive guards services templates compilation aot folder files size updating maints get error mentioned one thing app using lazyloading btw error modifying maintx lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort gc ms marksweep gt mb ms last resort gc lt js stacktrace gt js stack trace security context gettypeofvariableorparameterorproperty projectnodemodulestypescriptlibtypescriptjs checkvariablelikedeclaration projectnodemodulestypescriptlibtypescriptjs fatal error callandretrylast allocation failed javascript heap memory alexeagle email app folder would able compile since dependence backend aspnet nt share wont able run project arent using lazyloading try compile project using angular cli see works angular cli compile project using command ng build prod aot working since app using lazyloading", "d": "10/2016"}, {"body": "thanks reporting issue luckily already fixed", "d": "10/2016"}, {"body": "thank dzmitryshylovich check release", "d": "10/2016"}, {"body": "try", "d": "10/2016"}, {"body": "tried unfortunately problem persists", "d": "10/2016"}, {"body": "released yet options wait next release", "d": "10/2016"}, {"body": "tried first solution problem remains maybe different problem", "d": "10/2016"}, {"body": "pkozlowskiopensource confirm still issue latest router error config also reproduce works fine navigating using routerlink fails entering url directly browser url bar error config router version", "d": "10/2016"}, {"body": "angular nt work like change component template runtime ngif ngswitch options", "d": "10/2016"}, {"body": "template know compile time", "d": "10/2016"}, {"body": "paste full component template would assume somewhere probably template access control like", "d": "10/2016"}, {"body": "tried five different ways access component value unfortunately raised error code component template component import navcontroller navparams ionicangular import component angularcore import formgroup formbuilder validators angularforms component templateurl recoverpasswordhtml export class recoverpassword template", "d": "10/2016"}, {"body": "replace also see", "d": "10/2016"}, {"body": "thanks also link aot dont communicate solution ionic forum", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "nt found tag either angularjs", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "dzmitryshylovich demo plunkr click button testanimation first green block amtwo ca nt excute animationi nt know wrong code thank help", "d": "10/2016"}, {"body": "try add constructor execute end animation", "d": "10/2016"}, {"body": "theunreal write code demo effect colude copy code help make demo give link demo thanks lot", "d": "10/2016"}, {"body": "sure seems change detector triggerd expert think somehting observable let changedetector know something changed forked plnkr forcing render event seems behaviour look working still sure issue case issue related changedtector plnkrco working", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "relates ie angular would trim ws making minification useless", "d": "10/2016"}, {"body": "pls reopen cli repo", "d": "10/2016"}, {"body": "looks like wrong", "d": "10/2016"}, {"body": "many pitfalls issue valid", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "vicb read description issue", "d": "10/2016"}, {"body": "inheritance issue tackled together nt see problem closing issue issue also nt contain plunker even code demonstrates problem", "d": "10/2016"}, {"body": "decorators metadata may need special rules inheritance believe rules method inheritance already well defined altered also aot issue plunker possible also reflected ticket title proposal support welldefined rules inheritance angular decorators", "d": "10/2016"}, {"body": "provide plunkr reproduction", "d": "10/2016"}, {"body": "work however probably undefined runtime time statusenum ts enum one way solve would method would basically component closing work expected repro", "d": "10/2016"}, {"body": "also work string values see plunkr", "d": "10/2016"}, {"body": "looking plunk works expected expression always evaluate since switch var value never matches", "d": "10/2016"}, {"body": "yep right afaik recently added support multiple values maybe issue changed feature request", "d": "10/2016"}, {"body": "maybe issue changed feature request maybe feel free open new issue clear description feel like would valuable addition framework", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "solved", "d": "10/2016"}, {"body": "yes pr merged plunk working", "d": "10/2016"}, {"body": "part part example anyway problem explained article info asking", "d": "10/2016"}, {"body": "ok close issue thanks quick response", "d": "10/2016"}, {"body": "would great provide plunker something demonstrates issue", "d": "10/2016"}, {"body": "pkozlowskiopensource happens angular translates correct order would far tell happens pseudoselectors used together see plunker", "d": "10/2016"}, {"body": "probably linked change made recently tag selectors appear shim attribute selector", "d": "10/2016"}, {"body": "seems like problem still exists plunker pseudo element handled properly", "d": "10/2016"}, {"body": "lib issue already opened issue angular ca nt anything", "d": "10/2016"}, {"body": "thanks quick response close one see vlado fixes", "d": "10/2016"}, {"body": "\u4e2d\u6587 translate version authentic real", "d": "10/2016"}, {"body": "sorry ca nt reproduce problem following instructions provided works fine problem persists please open new issue provide steps reproduce version number browser thanks", "d": "10/2016"}, {"body": "notes currently trigger initial navigation bootstrap listener angular wait bootstrap listeners completemoving logic naively application listener work root component created point router successfully run run split preactivateactivate bootstrap listener", "d": "10/2016"}, {"body": "angularrouting module try", "d": "10/2016"}, {"body": "sorry angularrouter", "d": "10/2016"}, {"body": "sorry angularrouter would like stick angular use stable release going patch going close issue migrate stable version router", "d": "10/2016"}, {"body": "activated routed uses behaviorsubject query params u see docs observers subscribe subject receive last initial value subsequent notifications first time u get initial value second time u get query params nt think bug", "d": "10/2016"}, {"body": "think good call use behaviorsubject saying initial value wrong page opened query params point time page query params words open foobar initially tells query params accurately reflecting current state url first thing tells otherwise makes impossible reliably determine page opened without query params without introducing clunky workaround using something query params begin first wrongly tell nt", "d": "10/2016"}, {"body": "plunker", "d": "10/2016"}, {"body": "let get right", "d": "10/2016"}, {"body": "fan plunkr repository simple start instructions reproduce bug readme", "d": "10/2016"}, {"body": "cause issue", "d": "10/2016"}, {"body": "unfortunately work way instantiation root component static controlled router means always activated route inject component activated route exist regardless url always start empty state navigate current url empty state always allowed eg nt guards avoid race conditions use following workaround closing issue", "d": "10/2016"}, {"body": "work reasons described able capture user actually page query params subscription would fire case least make empty object returned second time case really query params actually works", "d": "10/2016"}, {"body": "try use instead see", "d": "10/2016"}, {"body": "thanks quick reply gave errors line got highlighted red visual code", "d": "10/2016"}, {"body": "take look create aotfriendly reducer project", "d": "10/2016"}, {"body": "thanks looking able solve following change appmodulets const appstore createstore rootreducer applymiddleware reduxthunk", "d": "10/2016"}, {"body": "close issue resolved", "d": "10/2016"}, {"body": "able build use appstore homets export class homepage constructor inject appstore public appstore getting error thisappstoregetstate function typeerror thisappstoregetstate function ideas could coming", "d": "10/2016"}, {"body": "appstore method", "d": "10/2016"}, {"body": "appstore redux store created function createstore getstate method info store", "d": "10/2016"}, {"body": "sounds like function called", "d": "10/2016"}, {"body": "take look ngrxstore difference projects", "d": "10/2016"}, {"body": "thank link exactly problem facing process creating redux store middleware using actual redux library maps poorly angular di providers project working angular aot hard time tried applied written post making angular library statically analyzable aot following aot best practise changing const lambda export function getting stuck using store const appstore createstore rootreducer applymiddleware reduxthunk export function appstore return createstore rootreducer applymiddleware reduxthunk one idea exploring take createstore appmodulets independent provider found project took route angularredux complex ui example going try see happens", "d": "10/2016"}, {"body": "able solve di problem thank helping shifted createstore independent provider", "d": "10/2016"}, {"body": "provide minimal reproduction plunkr rc lower", "d": "10/2016"}, {"body": "plunker see templateurl defined hellohtml maints manipulated dynamically customurlresolverts anything plunker working", "d": "10/2016"}, {"body": "used compiler provide earlier module bootstrap time appts", "d": "10/2016"}, {"body": "avoid inheritance resolved", "d": "10/2016"}, {"body": "yup duplicate", "d": "10/2016"}, {"body": "ahh believe duplicate maybe feature request related definition angular support inheritance everything works today inherit inputs outputs would like class param inject injectable service property instead constructor", "d": "10/2016"}, {"body": "hi problem probably object passed particularly property think want even case best match", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "nt got fixed master via", "d": "10/2016"}, {"body": "seems like fix indeed fixed issue thanks reference", "d": "10/2016"}, {"body": "provide minimal reproduction plunkr", "d": "10/2016"}, {"body": "see line angular expects variable want string constant correct way notice single quotes think documentation clear thus confusing syntax also confusing used", "d": "10/2016"}, {"body": "yes kemsky right need provide string constant ngswitchcase", "d": "10/2016"}, {"body": "hi kemsky thanks lot fast response added sigle quotes nt seem fix problem updated branch see code variable itemtype switch click navigation sidebar see following screenshot logic switch content main view homets snmpdevices thisitemtype snmpdevice consolelog snmpdevices snmpmetrics thisitemtype snmpmetrics consolelog snmpmetrics iflxmeasurements thisitemtype ifluxmeas metricgroups thisitemtype metricgroup influxservers thisitemtype influxserver idea", "d": "10/2016"}, {"body": "problem way use together make sure use directive use tag want use tag wrap directive within information found code snmp devices change lt lt lt also note snmpdevice snmp devices play solves problem please close issue", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "hi micronyks finally fixed error following example vicb sorry issue looking examples info ngswitch first official angular site api section also github changelog example ngswitchcase instead ngswitchcase newbie angular thousands breaking changes last releases scenario ii thought issue might code bug finally leak documentation thank much everybody", "d": "10/2016"}, {"body": "observable", "d": "10/2016"}, {"body": "observable yes plucked data directly done intermodule routing try resolve data modules value lost see", "d": "10/2016"}, {"body": "provide reproduction plunkr", "d": "10/2016"}, {"body": "much luck plnk hopefully illustrate problem thanks", "d": "10/2016"}, {"body": "everything within app runs angular zone timeout started global space runs root zone make websocket connection within application work expected except ie due bug needwant create connection outside angular need either call change detection manually run func ngzone like fork plnkr", "d": "10/2016"}, {"body": "thanks works real case complicated used socketio raw websocket works debug mode use work ngzone fix", "d": "10/2016"}, {"body": "list populated subscribe changes get notification list changes would example put ngafterviewinit method would see list contains items already", "d": "10/2016"}, {"body": "right subscribing changes initial change done closing works expected", "d": "10/2016"}, {"body": "get list constructor subscribe event instance exist list already populated", "d": "10/2016"}, {"body": "get list constructor nope wo nt work point children component processed change detection nt run etc subscribe event instance exist list already populated got access initialized list subscribe changes means got bot state component initialization access subsequent mutations part missing maybe describe functional usecase", "d": "10/2016"}, {"body": "maybe describe functional usecase agree component children directives get render dynamic components ie get elementref children components constructor replace componentinstance via return someobject way get instance constructor subscribe change event list populated render dynamic components children directives", "d": "10/2016"}, {"body": "clarify replace component instance need replace component data context singleton many components page", "d": "10/2016"}, {"body": "made think correct componentinstance one object many components page afraid behavior unpredictable", "d": "10/2016"}, {"body": "hope help current problem", "d": "10/2016"}, {"body": "appears fixed latest release", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "good name think much meaning angular context", "d": "10/2016"}, {"body": "much meaning", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "yep duplicate thnx manklu", "d": "10/2016"}, {"body": "provide plunkr reproduction", "d": "10/2016"}, {"body": "hi edited original post provide link plunkr tried yesterday complicated reproduce however discovered launch preview separate window option thanks could reproduce issue thanks", "d": "10/2016"}, {"body": "ca nt reproduce", "d": "10/2016"}, {"body": "problem calling method template means every time change detection runs calling getfoo function returns new instance observable resets async pipe dzmitryshylovich example shows generally preferable bind properties component", "d": "10/2016"}, {"body": "project service collection wrapped behaviorsubject retrieve collection service used following method inject service components component variable used method getdata directly ngfor point everything worked properly problem came changed word behaviorsubject subject code failed tried subscribe service component could check data arriving point concluded async pipe problem robwormald weird behavior nt happen behaviorsubject maybe cause initialized beginning", "d": "10/2016"}, {"body": "robwormald think improve docs thinking angulario", "d": "10/2016"}, {"body": "could please add simple plunker", "d": "10/2016"}, {"body": "nt issue one least error message", "d": "10/2016"}, {"body": "oh yeah codelyzer causing thanks pointer", "d": "10/2016"}, {"body": "mhevery tbosch know issue similar bit important anyway main issue imo par regular directives also blocks pr", "d": "10/2016"}, {"body": "clarify tslint run linting umd bundle file", "d": "10/2016"}, {"body": "oh see codelyzer uses angular private apis changed sorry much please file issue codelyzer cc mgechev", "d": "10/2016"}, {"body": "thanks help", "d": "10/2016"}, {"body": "already opened issue workaround fixed remove template related rules", "d": "10/2016"}, {"body": "pull latest changes seed everything work expected", "d": "10/2016"}, {"body": "mgechev yes everything working thanks", "d": "10/2016"}, {"body": "mgechev changed seed fix took fork sometime back dont want pull rest changes", "d": "10/2016"}, {"body": "remove angular specific rules take look", "d": "10/2016"}, {"body": "prollyfill probably polyfill ie polyfill something standard yet", "d": "10/2016"}, {"body": "looking thank", "d": "10/2016"}, {"body": "bug shortcoming angular components since nt known html tag custom component need put somewhere within global styles website put file", "d": "10/2016"}, {"body": "see plunkr click setname pristine changed type anything box pristine state removed works like intended flag reflect user interaction model mutation since mutating model programatically already set arbitrary flag use set appropriate classes", "d": "10/2016"}, {"body": "ok thanks pkozlowskiopensource close expect model mutation reflected guess decision already made maybe small change would change control value changed control value changed via user interaction thanks", "d": "10/2016"}, {"body": "close yeap", "d": "10/2016"}, {"body": "solution", "d": "10/2016"}, {"body": "cc juliemr vikerman seem remember seen issue used know pouja soldiercorp please search issue tracker report find thanks", "d": "10/2016"}, {"body": "soldiercorp work around every use used", "d": "10/2016"}, {"body": "pls reopen documentation site lives thx", "d": "10/2016"}, {"body": "dzmitryshylovich", "d": "10/2016"}, {"body": "reproduce plunkr issue might related cli", "d": "10/2016"}, {"body": "see actually pretty sure cli related sure successful plunkr see edit get reproduce plunker meaning probably related however cli handling", "d": "10/2016"}, {"body": "pls reopen cli repo", "d": "10/2016"}, {"body": "moved angularangularcli", "d": "10/2016"}, {"body": "yjaaidi using ngmodel form initial registration occurs asynchronously preserve unidirectional data flow call tick fakeasync zone ensure form control events set change value see updated plunker example", "d": "10/2016"}, {"body": "works intended", "d": "10/2016"}, {"body": "ca nt reproduce please add reproduce scenario plunker requested issue template", "d": "10/2016"}, {"body": "weird tried couple components application outcome using angularcli build application could cause", "d": "10/2016"}, {"body": "using angularcli build application could cause maybe investigate narrow eventually open issue", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "francosioquim please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "components templateurl loading deferred route first activated done", "d": "10/2016"}, {"body": "recommended way shipping angular applications using aot mode using mode compile templates javascript bundle rest code templateurl template work way use lazy loading instead closing issue", "d": "10/2016"}, {"body": "documentations issues opened", "d": "10/2016"}, {"body": "yup belongs please reopen", "d": "10/2016"}, {"body": "thanks tip zoechi pkozlowskiopensource created issue correct repo", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "duplicate closed comment referenced ericmartinezr", "d": "10/2016"}, {"body": "closing internet explorer issue internet explorer issue work times", "d": "10/2016"}, {"body": "think ie bug enter address changes hash fragment ie probably reloading page however different host eg googlecom paste url ie reload page", "d": "10/2016"}, {"body": "thank explanation think issue ie saying work correctly ie supposed reload page expected behavior angular expects browser way prove ie reloading page", "d": "10/2016"}, {"body": "create simple page contains following consolelog loaded datenow detail index serve maybe via npm package retry example look browser console check reload behavior", "d": "10/2016"}, {"body": "took modified version sample moving anchor links script tags hosted liteserver like angular quick start results get new console log entries retrying example tried tests chrome got result still lost results causes issue ie chrome", "d": "10/2016"}, {"body": "angular throw error injector trying create instance service decorated injectable documentation fixed explain injectable really think documentation issue", "d": "10/2016"}, {"body": "think documentation issue yes documentation fixed needed want inject things service jnizet please open documentation issue thnx", "d": "10/2016"}, {"body": "documentation issue created", "d": "10/2016"}, {"body": "nt think documentation issue necessarily could well argue decorator poorly named given new name like", "d": "10/2016"}, {"body": "looks issue", "d": "10/2016"}, {"body": "pr resolve sent", "d": "10/2016"}, {"body": "according standard hgroup obsolete feature must used authors", "d": "10/2016"}, {"body": "earth miss blargh", "d": "10/2016"}, {"body": "afaik initially part later removed", "d": "10/2016"}, {"body": "obviously need better job reading release notes thanks link though", "d": "10/2016"}, {"body": "want observe changes directives rolled example would like query plunker content view found markers length marker content children", "d": "10/2016"}, {"body": "pkozlowskiopensource suspected tried well see updated plunker issue update issue reflect edit example closer actual usecase would also consider actually part view since unrolled", "d": "10/2016"}, {"body": "think ran exploring using within custom structural directives appears ca nt see views created plunker parent ca nt see grandchild either viewchildren contentchildren directive child see anything except templateref see console logs", "d": "10/2016"}, {"body": "pls reopen", "d": "10/2016"}, {"body": "bastienjs could please open documentation site lives thnx", "d": "10/2016"}, {"body": "vandanagopal thanks detailed issue clarify templatedriven forms value always updated asynchronously necessary avoid changed checked errors template unfortunately reason order ca nt changed check value next tick work expected see also might consider switching reactive forms value updated synchronously", "d": "10/2016"}, {"body": "related angular", "d": "10/2016"}, {"body": "support question already asked need duplicate top nt seem related angular pointed dzmitryshylovich", "d": "10/2016"}, {"body": "use canactivate guard redirect appropriate page based user role", "d": "10/2016"}, {"body": "means redirecting another route let say like userdashobard admindashboard wanted keep dashboard maybe way done case drawbacks approach", "d": "10/2016"}, {"body": "maybe way done case drawbacks approach imo would superconfusing completely different pages url imagine someone admin copies url sends someone else nt person would able access page would see completely different content intended one", "d": "10/2016"}, {"body": "means redirecting another route let say like userdashobard admindashboard wanted keep dashboard know limitation lot real bugs router nt think requested feature implemented nearest future", "d": "10/2016"}, {"body": "pkozlowskiopensource nt see way makes sense", "d": "10/2016"}, {"body": "wanted feature time well", "d": "10/2016"}, {"body": "need feature different applications written angular route takes itemid parameter item looked id templatecontroller selected based itemtype accomplished using uirouter templateprovider controllerprovider soon upgrading applications need figure accomplish equivalent angular better way type thing", "d": "10/2016"}, {"body": "anyone help give tuto explain create dynamic component using finale please sure turn help one existing support channels github issues bug reports feature requests support requests answered", "d": "10/2016"}, {"body": "finally worked fine thanks example", "d": "10/2016"}, {"body": "reason means property exist want", "d": "10/2016"}, {"body": "reopen", "d": "10/2016"}, {"body": "done", "d": "10/2016"}, {"body": "mentioned slack advantages using symbol symbols completely unique immutable one else module collide symbol symbols used directly keys hash tables might improve di perf depending impl reusing type already exists language optionally provide symbols shared globally", "d": "10/2016"}, {"body": "totally agree teach angular beginners ask many many times create key provider use instead string beginner angular api like beginner nt use nt right answer introduced compatibility", "d": "10/2016"}, {"body": "think reason may dart compatibility dart symbol minimizing string literal like lispruby one js one dart comparing string content comparing identity", "d": "10/2016"}, {"body": "planning add type type return right eg const mytypedtoken new opaquetoken somename variable mycar type const mycar injectorget mytypedtoken", "d": "10/2016"}, {"body": "tbosch runtime class exists support buildtime typing ergonomics nt seem good allow generics get method vs", "d": "10/2016"}, {"body": "think symbol lot advantages opaquetoken nt seem add value symbol provides", "d": "10/2016"}, {"body": "also true directives case pipes might relevant cases eg pipe changing data type oping would break template make tests simpler define already includes pipe import test module", "d": "10/2016"}, {"body": "saying noop ideal solution one possibility default substitute however pipes allow test substitutes provided allowing substitution really dependency seems goes testfirst principles angular appears promote", "d": "10/2016"}, {"body": "submitting check one x current behavior currently pipes used components imported tests declared part testing module time nt necessary testing decreases isolation expected behavior would like pipes could easily substituted tests simple pass throughs even custom transform function would help improve isolation component tests motivation use case changing behavior less dependencies tests receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "think supported scenario wanted test dynamically created component workaround declare customtestmodule instead inside testbed", "d": "10/2016"}, {"body": "iiuc experimental feature matsko delivered merged yet", "d": "10/2016"}, {"body": "process improving docs track internally", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "fixed plunk ericmartinezr faster seconds ericmartinezr nt even know say thank hard work helping issues great stuff", "d": "10/2016"}, {"body": "ericmartinezr pkozlowskiopensource thanks clarification still nt see control marked although first item value empty string removed attribute first option passed still marked invalid missing", "d": "10/2016"}, {"body": "configuration tells router load container component nt outlets router throws change template container component like everything work intent siblings following const routes routes path nokcontainer component okcontainercomponent path foo component outlet secondary closing issue", "d": "10/2016"}, {"body": "aha vsavkin mean router looks named outlets parent component higher apply primary outlets must missed documentation", "d": "10/2016"}, {"body": "please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request think bug please fill issue template provide reproduction pls format code", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "avoid component inheritance resolved", "d": "10/2016"}, {"body": "yeh proper inheritance support needs designed tracking closing duplicate thnx dzmitryshylovich", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request think bug please fill issue template provide reproduction", "d": "10/2016"}, {"body": "go read docs think still pb fill thetemplate creating issue thanks", "d": "10/2016"}, {"body": "naomiblack please add labels creating issue", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "looks like angularzonejs", "d": "10/2016"}, {"body": "could issue still present firefox exact behaviour chrome devtools problem expect firefox work fine think issue introduced ngmodule added really sure also problems reported correctly pure angular app", "d": "10/2016"}, {"body": "right andreiivanovici nt real issue missing submit pull request later tonight", "d": "10/2016"}, {"body": "awesome btrigueiro thanks", "d": "10/2016"}, {"body": "bug big priority makes upgrading apps close impossible happen things like somewhere template bootstrapped app apparently errors app instead produces error fails load altogether makes debugging pretty much impossible", "d": "10/2016"}, {"body": "andreialecu meantime apply patch manually local installation one line code see changes associated pull request also surprised taking long accept pull request", "d": "10/2016"}, {"body": "andreiivanovici thanks however seems like fix nt complete see comment", "d": "10/2016"}, {"body": "andreialecu tried example looks like simplification set reject util second argument nt fix error original solution catch works give try let know change", "d": "10/2016"}, {"body": "interesting seems work simplified wonder since seem equivalent get error logged change andreiivanovici errors logged several times errors filling console much would crash every single time tried load example case nonupgrade bootstrapped app error much concise", "d": "10/2016"}, {"body": "andreialecu maybe error thrown resolve handler suppose second argument misses errors catch use error handler resulting promise think errors caught stack looks like log handlers different points promise chain print contextual stack trace", "d": "10/2016"}, {"body": "appears duplicate", "d": "10/2016"}, {"body": "works intended duplicate", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "think need compile bundle", "d": "10/2016"}, {"body": "indeed duplicate thnx", "d": "10/2016"}, {"body": "pls provide working reproduction plunkr", "d": "10/2016"}, {"body": "tried create plunker find cdn forms addition latest cdns beta", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "updated first post thank much", "d": "10/2016"}, {"body": "passing string default value pass either nothing array work see", "d": "10/2016"}, {"body": "yes trick thank", "d": "10/2016"}, {"body": "thnx fxck dzmitryshylovich helping issues", "d": "10/2016"}, {"body": "ideas need part validation however failed accomplish", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "please reopen cli repo thanks", "d": "10/2016"}, {"body": "tbosch issue working cc chuckjaz", "d": "10/2016"}, {"body": "yes test implementation almost ready mon oct pm victor berchet notifications githubcom wrote tbosch issue working cc chuckjaz receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "tbosch accurate say aot compiler generating linking files dependency folders like ie experienced bug need info let know", "d": "10/2016"}, {"body": "roxkilly aot process ship files optimize compiler without component authors needing redistribute components problem seeing described working closing duplicate", "d": "10/2016"}, {"body": "minimal reproduction plunkr", "d": "10/2016"}, {"body": "please reopen repro available", "d": "10/2016"}, {"body": "please report docs issue", "d": "10/2016"}, {"body": "please reopen angularangulario", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please complete issue template want report bug", "d": "10/2016"}, {"body": "issue pretty clear", "d": "10/2016"}, {"body": "kemsky nt think clear plunker nt even contain code initial comment also instructions reproduce plunker also contains much code minimal example", "d": "10/2016"}, {"body": "zoechi press submit see reload console two problems null even triggered submit button listener throws error form submitted wrapped general behavior wrong", "d": "10/2016"}, {"body": "pls reopen docs repo", "d": "10/2016"}, {"body": "migrated", "d": "10/2016"}, {"body": "tsconfigaotjson compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany false suppressimplicitanyindexerrors true files appappmodulets appmaints typeroots nodemodules types types corejs jasmine node fb jquery materializecss nouislider include app exclude nodemodules spects aot dist angularcompileroptions gendir aot skipmetadataemit true rollupjs import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify export default entry appmainjs dest distbuildjs output single application bundle sourcemap false format iife plugins noderesolve jsnext true module true main true commonjs include nodemodules namedexports cookie uglify", "d": "10/2016"}, {"body": "using components", "d": "10/2016"}, {"body": "yes components application similarly defined nt problems jit mode console screenshot", "d": "10/2016"}, {"body": "purely commonjs thus nt work rollup bundle using commonjs using webpack probably jit mode use aot", "d": "10/2016"}, {"body": "robwormald aware purely commonjs jit mode using systemjs development need run application jit mode question generate rollup bundle code need make changes components time need generate rollup build thanks help", "d": "10/2016"}, {"body": "issue use systemjs jit trying generate rollup bundle", "d": "10/2016"}, {"body": "okay rollupconfigjs set format cjs systemjsconfigjs html importing appbuild production deployment rollup bundle loaded systemjs nt know better approach seemed working", "d": "10/2016"}, {"body": "around tomorrow victor berchet notifications githubcom schrieb mo okt ngcompoent schemas currently use following values customelementsschema allow customtag property noerrorsschema allow tag property need implement way defined custom schemas ie defining polymer elements properties events mprobst would available discuss integrate security schema receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "right current special cased right", "d": "10/2016"}, {"body": "roberto fischer would interested feature", "d": "10/2016"}, {"body": "trying context please add repro", "d": "10/2016"}, {"body": "trying minimize number emailsquestions get new angular developers intimidated angular error messages therefore nt read angular error messages clearly state issue needs done solve much red text new developers especially bit overwhelmed instead post questions solve problem", "d": "10/2016"}, {"body": "screen shot example notice amount red text actual problem somewhat lost within red", "d": "10/2016"}, {"body": "nt use consoleerror browser rest formatting including coloring exception red sure much terms error msg formatting way works crossbrowser substantial differences way exception message represented example short browser makes things red custom formatting would nontrivial", "d": "10/2016"}, {"body": "ah nt way add styles maybe could accomplish something similar formatting adding primary issue first line empty line detail", "d": "10/2016"}, {"body": "looks like might possible support firefoxchrome without much effort", "d": "10/2016"}, {"body": "pkozlowskiopensource right nt think want implement browser specific behavior cf arciisine plus people probably start complaining red enough", "d": "10/2016"}, {"body": "red enough nt think issues angular developers especially newer angular developers finding actual error message within page red text", "d": "10/2016"}, {"body": "nt think issues angular developers especially newer angular developers finding actual error message within page red text issue course big blob text representing exception stacktrace might hard scan visually especially people new web development exception js code logged way browser issue specific angular web developers already familiar way exception look trying format exceptions nonstandard way hard mean really hard crossbrowser way trying custom formatting would mean shipping code browser slower startup time nt think vicb trying say things could nt better better case really hard would mean code shipped browser tradeoff", "d": "10/2016"}, {"body": "looking something like think simple polyfill could added consolelog anticipate angular stacktrace format sure belongs core could easily tool used development keep production builds small possible", "d": "10/2016"}, {"body": "thank pkozlowskiopensource clarifies reasoning wish could help getting web development angular many business devs need get job done quickly seems angular team spent time defining good useful error messages shame ca nt make easier findsee sea red", "d": "10/2016"}, {"body": "zonejs output helpful never able make sense error missing httpprovider begin uncaught promise error error user learn provider http means nt think answer questions ca nt anything think better answers least optionally suppress zonejs errors stacktraces error messages links web pages explain explaining good docs task real point creative complacent good evidence error message output significant impediment understanding adoption proceed better ways let pursue", "d": "10/2016"}, {"body": "wardbell comments possible targeted making less red course many ways making entire messages different better would suggest opening small focused issues seem different things small focused issues much better chance getting solved compared one big error message sucks ticket nothing actionable end care lot error messages pushed number commits improve let precise want improve", "d": "10/2016"}, {"body": "folks going lock comments let discuss team meeting afternoon general tracking issue ongoing work improve error messages", "d": "10/2016"}, {"body": "issue tracked", "d": "10/2016"}, {"body": "ericcarraway ok thanks closed", "d": "10/2016"}, {"body": "close", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "per stackoverflow link would explain single e allowed eeeeeeee allowed nt valid number eeeeeee input allowed chrome without angular breaks firefox firefox like input e unless single e followed least one number boils issue chrome specifically angular though angular could attempt work around", "d": "10/2016"}, {"body": "firefox let user enter eeeeee consider field invalid shown red outline angular still consider field valid think related numbervalueaccessor", "d": "10/2016"}, {"body": "crux issue passing invalid number etc result nan propagated control value validation mechanism built pattern validator nt taking nan account surprising one validating invalidnumber really proper solution come write custom validator closing duplicate", "d": "10/2016"}, {"body": "renamed", "d": "10/2016"}, {"body": "migration guide", "d": "10/2016"}, {"body": "ok many thanks", "d": "10/2016"}, {"body": "pls provide minimal working reproduction plunkr", "d": "10/2016"}, {"body": "looks like duplicate", "d": "10/2016"}, {"body": "duplicate indeed thnx nertzy look scenarios tomorrow closing duplicate", "d": "10/2016"}, {"body": "deprecated removed use instead question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "thanks suggestion started gitter tell common issue", "d": "10/2016"}, {"body": "dzmitryshylovich pointed right forum types questions please use one mentioned support channels", "d": "10/2016"}, {"body": "seems want please reopen issue doc repo", "d": "10/2016"}, {"body": "think need different solution preventing infinite loop digest cycles nt involve currently naive solution implemented project setting guard variable resetting falsereturning digest already run might good enough sure edgecases thinking probably robust solution would way tell last run digest triggered microtasks cause fire guaranteed digest cause fire naive solution work fine concern naive case digest cycle queue microtasks fire result flag stay true unrelated digest cycle future might unnecessarily skipped someone comment possible fixes submit pull request pretty quickly", "d": "10/2016"}, {"body": "seems related", "d": "10/2016"}, {"body": "try", "d": "10/2016"}, {"body": "work", "d": "10/2016"}, {"body": "part code sample fact half application work well safari", "d": "10/2016"}, {"body": "nt think actionable without reproduction", "d": "10/2016"}, {"body": "please add minimal repro ie code strictly required reproduce issue", "d": "10/2016"}, {"body": "found one solution force render page constructor private zone ngzone thiszonerun gt consolelog done need however sure right way way make minimal git repo error", "d": "10/2016"}, {"body": "added min repo page", "d": "10/2016"}, {"body": "work internet explorer also bugs websockets working ie see also", "d": "10/2016"}, {"body": "actionable get hold div element navigate children", "d": "10/2016"}, {"body": "sure understood perhaps clear either course always inject elementref browse children jquery apply properties subscribing changedetector current component somehow could even everything need hostbinding hostlistener think way low level right proposing hostbinding could bind method current component child element attribute component hostlistener somehow goes principle make sense would like learn reality would need implemented sort support dynamically setup binding current component think trying explain experience learnt want components isolated depend mess things right within context assuming inner html component always generated projection also generated anytime external source jquery find difficult make play nicely external tools libraries apply directives dynamically bind dynamically anything dynamically sorry clear enough beginning still clear make plunkr real case", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "vicb checked angular docs one time finally got find api names seemed changed formgroup formcontrol thank u anyway", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "issue di nt handle lifecycle events providers created using usefactory", "d": "10/2016"}, {"body": "insist checking issue passed entire day debugging angular find issue found cases like one described constructor class reflectts called twice informations stored weakmap metadata lost cause issue described post clearity behaviour talking angular start try map decorators components app angular map decorators angular try map decorators point constructor reflect called informations stored map lost angular continue map decorators finishes mapped angular try check decorators component ok angular try check decorators component ok angular try check decorators component ko angular find mapping rejection unexpected value declared module appmodule raised still debugging angular find constructor called twice attach screenshots calls first startup second mapping validatets class created importing reflectmetadata", "d": "10/2016"}, {"body": "added plunker example tourofheroes", "d": "10/2016"}, {"body": "solved issue adding line components raised errors fixed version plunker example post stackoverflow", "d": "10/2016"}, {"body": "quick advice people trying used override declaration incluing declarations set element using attribute way override almost never need add directly element makes little sense div color blue red blue need important time need css already already bad practice stylesheet sure want actual attribute still bug bug stops writing spaghetti styles", "d": "10/2016"}, {"body": "think possible use bootstrap css framework css classes set display none important override classes important even spaghetti css styles code use important hard avoid bootstrap css framework", "d": "10/2016"}, {"body": "reason nt want overwritten also said still bug saying nt fixed wanted give heads people think necessary bootstrap consider ngbootstrapgithubio instead", "d": "10/2016"}, {"body": "need figure user bind directive used via see", "d": "10/2016"}, {"body": "like nt see drop one vs", "d": "10/2016"}, {"body": "agree important keep interoperability web standards collaborations libraries technologies", "d": "10/2016"}, {"body": "agree confusing ways thing need preserve needs desugar something desugar drop think rfc augmented propose deprecation template attribute style useful anything alternative drop desugaring keep sugar form happy consider need make sure usecases desugared form required", "d": "10/2016"}, {"body": "words desugaring forms valid html forms example htmlloader needs special configurations minify angular templates parse casesensitive symbols template valid html bring benefits tooling interop think bad two forms one easyandspecial way another rawandstandard way", "d": "10/2016"}, {"body": "sugar form also valid html angular templates valid html even content case sensitive tools however diverge spec nt speccompliant parser thu oct pm suguru inatomi notifications githubcom wrote words desugaring forms valid html forms example htmlloader needs special configurations minify angular templates parse casesensitive symbols template valid html bring benefits tooling interop think bad two forms one easyandspecial way another rawandstandard way receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "need keep expanded version enforce input naming ie someone comes way syntax used drop special meaning html need special meaning use parser hurt interoperability proposition would wrong", "d": "10/2016"}, {"body": "consistency etc case people nt want use special characters html explaining reasoning arguing anything think different meanings groups whereas defines template could used someplace else nt want collide maybe", "d": "10/2016"}, {"body": "fine ngtemplate original reason using template element inert piece dom nt trigger image downloads script execution longer problem parser thu oct mi\u0161ko hevery notifications githubcom wrote think ngcontainer template different meanings ngcontainergroups whereastemplatedefines template could used someplace else nt want collide withtemplatethen maybe havengtemplate receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "preferred root element used need get explicit template ref ie stamp rows also works advertised works today deprecated amp removed works today deprecated amp removed mhevery consistency etc addressed", "d": "10/2016"}, {"body": "actually revisit original premise think problem yes may used wc given template never interpreted polymer angular mistaken could come example collision could happen", "d": "10/2016"}, {"body": "course polymer interprets element initial example uses template list items stamps data item like prevents adding tag dom therefore way pass one component template polymer element components template like demonstrated initial comment", "d": "10/2016"}, {"body": "mhevery see initial report top", "d": "10/2016"}, {"body": "yes defined somehow consider another example declarative column configuration name department template renders name department", "d": "10/2016"}, {"body": "robwormald since lot official angular documentation uses nt massive pit failure developers new typescript considering component class conceptually cohesive unit anyone understanding properties private runtime intuition code longer works aot fan typescript keyword somewhat misleading sounds like jit compiled components working precisely privacy enforced runtime would suggest removing visibility modifiers properties aot transformations changing constructor parameter properties edit issue reopened", "d": "10/2016"}, {"body": "agree inconsistency nasty pitfall developers aluanhaddad says lot samples use di constructor developers get habit especially since one taught never expose something nt need exposing believe issue reopened addressed", "d": "10/2016"}, {"body": "robwormald another deeper problem emerging many issues aot angular code written typescript written subset typescript far seen formally specified documented acknowledged capacity brings mind fair number questions including limited following language language introduced language introduced designed credentials b languages worked c intended general purpose language domain specific language improve typescript language new abstraction mechanisms offer b tasks simplify c motivating usecases formally specified adopt", "d": "10/2016"}, {"body": "related", "d": "10/2016"}, {"body": "aluanhaddad big misunderstanding subset typescript one said using jit aka common way angular since day transpile code run browser say generate less something like notice contains property nt matter whether put concept exist end code angular runs code say ok html code template see code value let grab display far good end care well typescript compiler editor complain try access private variable ca nt class foo private bar let f new foo consolelog fbar editor tell access typescript compiler give error trying access private variable back component example nt complain compile time one tries access field template databinding runtime code typescript anymore visibility modifier said aot sort convert template code typescript typescript subset imagine previous component generate something like typescript code template converted typescript code create placeholder binding aka bit later accessing property context get placeholder assign value aka mind public set private raise error since private access outside class tl dr typescript subset jit convert code runtime bindings visibility modifiers lost process nt matter say public private hand aot generate typescript code templates try access fields private simply access properties hence put public achimha applies template lt component interaction template part component class template access public properties component hand inject stuff using di use private use injected object within component class never template said use case need inject something needs used template yes need public well far case doc example", "d": "10/2016"}, {"body": "foxandxss fantastic explanation thanks taking time", "d": "10/2016"}, {"body": "minimal plunker reproduction error thrown compiler errors printed console", "d": "10/2016"}, {"body": "note behavior every ng application", "d": "10/2016"}, {"body": "note behavior every ng application mean every application nonhybrid app reports compile error console removed still get unhandled promise rejection", "d": "10/2016"}, {"body": "solution problem requires breaking change improved error message pr closing issue", "d": "10/2016"}, {"body": "router takes routes defined imported modules concats nt prepend modulea moduleb set routes router receives nt expect rather change route definitions work expected closing issue", "d": "10/2016"}, {"body": "experience polyfill even adding still gives trouble example old firefox polyfill works got error animating border radius newer versions use polyfill threw javascript error also get random errors partial keyframe supported happen app limbo application stops working consider animations fancy critical enough block execution nt possible animation properly executed skips animation instead keep application working", "d": "10/2016"}, {"body": "vicb yeah likely make friendlier add list pain points thanks", "d": "10/2016"}, {"body": "got similar issue working custom errorhandler find solutions far", "d": "10/2016"}, {"body": "inject get dependeny using", "d": "10/2016"}, {"body": "yes manage find solution nt really understand removing router dependency declaration appmodulets export function loadcustomhttp backend xhrbackend defaultoptions apprequestoptions router router datahelper datahelperservice return new customhttp backend defaultoptions router datahelper ngmodule declarations imports providers services provide http usefactory loadcustomhttp deps xhrbackend requestoptions datahelperservice hope helps", "d": "10/2016"}, {"body": "meant direct children probably report error though situation", "d": "10/2016"}, {"body": "updated bug description well", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "igorminar reproduction already weeks provided progress", "d": "10/2016"}, {"body": "kostyatretyak explain want id without value preserved hard time understanding actually asking please explain mean check validation", "d": "10/2016"}, {"body": "igorminar yes clarity experiment substitute value nothing change id deleted check validation removed without presence malicious code", "d": "10/2016"}, {"body": "also bit unsure going post issue extremely frustrating basically following html stopped working upgrading angular errors console lost finding issue remembered sanitise iframe url days ago long story short found post adding pipe able get working solution looked like kostyatretyak hope helps explains issue clearly rest ps one like strict sanitizer surprised iframe gave error innerhtml nt", "d": "10/2016"}, {"body": "thank pipe want done without deleting attributes", "d": "10/2016"}, {"body": "yes got link posted pipe name sanitizehtml class sanitizehtml implements pipetransform constructor private sanitizer domsanitizer transform v string safehtml return thissanitizerbypasssecuritytrusthtml v pipe trusts html using domsanitizer sure mean fields disappearing issue innerhtml maybe empty string unsafe need pass pipe", "d": "10/2016"}, {"body": "vicb valid value position syntax error key type position either left hand side must type alias syntax error value correct forms property typed array initialized b except initial value c nonsense unless declaring type alias array instances terribly named type case would class property would require keyword would mean something else entirely", "d": "10/2016"}, {"body": "think still need add ngmodule faq says components added ngmodule automatically loaded need import new component add entries ngmodule thing like btw part quickstart import appcomponent appcomponent ngmodule imports browsermodule declarations appcomponent bootstrap appcomponent", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "also generate files directives bug becomes severe", "d": "10/2016"}, {"body": "awesome thanks bunch vicb fixing", "d": "10/2016"}, {"body": "actually team work together tbosch chuckjaz tested fix app", "d": "10/2016"}, {"body": "ah thanks well tested nt actually seem working failing error minimal repro", "d": "10/2016"}, {"body": "issue actually code went debug session tbosch problem nested module packagejson happens module version angularcore annotations recognized change would make module use annotations single angular install improve ux printing error message case thanks reporting issue", "d": "10/2016"}, {"body": "ah npm would deduping using nightly builds github thanks bunch looking apologies wasting time published new version party lib confirm everything getting codegen properly", "d": "10/2016"}, {"body": "error posted seems dependency issue upgrading following dependencies version seems trick may run errors like resolve install following believe errors due issues code filed separately", "d": "10/2016"}, {"body": "team stuff right angular ill try suggestion aot later run issues corejs vs seem see lot repos latter right compiler issues finding promiseresolve corejs tried adding corejs types array tsconfigjson dice", "d": "10/2016"}, {"body": "nt run issues typings errors definitely mess debug using corejs typescorejs would suggest trying well upgrading typescript next upgrading typings definitions typingsjson file would think promiseresolve would common enough would definition would", "d": "10/2016"}, {"body": "facing issue node version everything working fine node", "d": "10/2016"}, {"body": "something needs fixed working", "d": "10/2016"}, {"body": "issue causing isanimating update view", "d": "10/2016"}, {"body": "try run code inside callback inside zone", "d": "10/2016"}, {"body": "running changedetectordetectchanges works", "d": "10/2016"}, {"body": "problem example call load javascript json files css files angular would use relative url via relative component class see", "d": "10/2016"}, {"body": "bit brainstorming taking look lexerts lexer nt keep state reading currently stands needs order skip attempting icu tokenization seems root issue two ways keep tabs tags open closed flag set corresponding closing tag opening one parsed tags approaches would make life easier lexer harder user break current api seems nono anyway feel good understanding approach issue using first approach say vicb submit pr work conflicting", "d": "10/2016"}, {"body": "please go ahead submit pr thanks", "d": "10/2016"}, {"body": "reason single braces must escaped project working includes lot templates latex math expressions sort frac x inconvenient escape realize double braces binding single braces used okay since upgrading hundreds templates broken", "d": "10/2016"}, {"body": "due parsing icu expansion forms nt need nt know whether way remove altogether vicb know much way opting might make sense regardless options either escape strings altogether characters individually related pr available using forms inside ngnonbindable would work see less ideal use case still", "d": "10/2016"}, {"body": "sorry currently way optout", "d": "10/2016"}, {"body": "take seconds couple hundred empty event listeners think valid bug", "d": "10/2016"}, {"body": "might related setup zones event listeners see", "d": "10/2016"}, {"body": "still clear part clear guide files need listed tsconfigaotjson three mentioned entry point application need list ts files app seconded please clarify", "d": "10/2016"}, {"body": "jlcjensen mentioned files enough need list additional files since compiler find rest files following trail import statements", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "investigate possibility roll without breaking changes", "d": "10/2016"}, {"body": "could bc define fe method signature detailed", "d": "10/2016"}, {"body": "update", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "could provide plunkr reproducing problem", "d": "10/2016"}, {"body": "issues creating plunkr reproduces problem narrowed observables changing route even complete things appear functioning normally plunkr", "d": "10/2016"}, {"body": "okay figured issue pretty sure bug intended behavior change auxiliary route main route resolve nt completed yet simply reroutes back current route effectively canceling inprogress route", "d": "10/2016"}, {"body": "nosideeffects please provide plunkr reproducing issue", "d": "10/2016"}, {"body": "ngoninit triggered click different crisis list items normal behaviour crisisdetailcomponentts", "d": "10/2016"}, {"body": "ngoninit called per component instantiation reason note debugger call clicking different crisis item due nature observable parameters approach using reusing component click item parameter changed neither debugger statement called change item parameters change call debugger within observable list note outer debugger statement called case visit another component get back", "d": "10/2016"}, {"body": "sure issue related angular could pb webpack", "d": "10/2016"}, {"body": "vicb could related following webpack usage guide angulario hoped work", "d": "10/2016"}, {"body": "please report issue please include versions used packages ie webpack", "d": "10/2016"}, {"body": "vicb issue angular web site", "d": "10/2016"}, {"body": "try adding inside includes list though might need fixing problem also started getting error missing add method added second pollyfill working properly appear additional polyfill dependencies introduces around rtm", "d": "10/2016"}, {"body": "treated part", "d": "10/2016"}, {"body": "could create demo project branch issue github otherwise hard reproduce", "d": "10/2016"}, {"body": "experience webpack angularcli think reproduce issue using code advanced animations tutorial using webpack", "d": "10/2016"}, {"body": "tomgeorge yes tried css ca nt find show image really like use css angular way", "d": "10/2016"}, {"body": "tomgeorge good", "d": "10/2016"}, {"body": "seen angularclass repo nt use url css put image location component class owns image way access runtime contextdependency graph webpack creates", "d": "10/2016"}, {"body": "since many meaningful ways partition list imports similarly many meaningful ways partition list providers angular nt prescribe one pointed partitioning explicit grouping imports array", "d": "10/2016"}, {"body": "closing issue works expected", "d": "10/2016"}, {"body": "vsavkin may work expected hardly optimal", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "could provide plunkr reproducing issue", "d": "10/2016"}, {"body": "tried upgrade repo configuration bug still try find time morning make plunkr reproducing issue", "d": "10/2016"}, {"body": "vsavkin plunkr embed view editor view preview see changes url", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "sorry late update error vanished cleared nodemodules folder downloaded files", "d": "10/2016"}, {"body": "panuruj yes tried p tsconfigjson help chuckjaz started working repro yet feeling wiredprogrammer suggestion going one keep posted", "d": "10/2016"}, {"body": "wiredprogrammer right problem default exports", "d": "10/2016"}, {"body": "good write look make app aot friendly", "d": "10/2016"}, {"body": "hi changing default exports code individual nodemodules funny errors exact line numbers switching angular using rollup project ngc error typeerror read property kind undefined maybegetsimplefunction c xxxnodemodules c xxxnodemodules visiteachnode c objectforeachchild c metadatacollectorgetmetadata c xxxnodemodules reflectorhostgetmetadatafor c xxxnodemodules staticreflectorgetmodulemetadata c xxxnodemodules codegeneratorreadfilemetadata c xxxnodemodules c xxxnodemodules arraymap native", "d": "10/2016"}, {"body": "change code", "d": "10/2016"}, {"body": "rootreducerts file using export default know changed named export import combinereducers reducer redux import song reducerssongreducer export default combinereducers song anyone successful taking error take error right thing import combinereducers reducer redux import song reducerssongreducer export var combinereducers song", "d": "10/2016"}, {"body": "created minimum project reduxreduxthunk git steps build project tab starter redux amp reduxthunk installation starter tab project using changes starter project appmodulets ngmodule redux reduxthunk rootreducer import createstore applymiddleware redux import reduxthunk reduxthunk import rootreducer modulesrootreducer const appstore createstore rootreducer applymiddleware reduxthunk adding providers array creating module folder two files incrementreducerts rootreducerts incrementreducerts import action redux const initialstate counter export default function state initialstate action action switch actiontype case increment let newstate objectassign state newstatecounter return newstate default break return state rootreducerts import combinereducers reducer redux import increment incrementreducer export default combinereducers increment final changes homets homehtml homehtml homets constructor public navctrl navcontroller inject appstore public appstore testredux consolelog thisappstoregetstate incrementcounter thisappstoredispatch dispatch gt dispatch type increment consolelog thisappstoregetstate incrementcounter import inject homets running project gives error hope help", "d": "10/2016"}, {"body": "article linked examples migrate named exports default exports", "d": "10/2016"}, {"body": "seen link stuck changes finally able solve everything thanks", "d": "10/2016"}, {"body": "case error article describe solution", "d": "10/2016"}, {"body": "linked comments top", "d": "10/2016"}, {"body": "closing issue", "d": "10/2016"}, {"body": "get issue node", "d": "10/2016"}, {"body": "see also first paragraph modules list", "d": "10/2016"}, {"body": "hello updated application using rc application attempt loadcreate component dynamically worked fine debugging tried build android error problem declared compilerproviders providers appmodule like workaround ou another method use compilerproviders aot", "d": "10/2016"}, {"body": "importing error described issue besides without import using also leads success debugging fails building error ionic version idea", "d": "10/2016"}, {"body": "nt use runtime compiler aot", "d": "10/2016"}, {"body": "dzmitryshylovich idea answer need way need able dynamically create component based runtime configuration", "d": "10/2016"}, {"body": "answer jit", "d": "10/2016"}, {"body": "okay want build component time really experienced", "d": "10/2016"}, {"body": "use componentfactoryresolver", "d": "10/2016"}, {"body": "okay interesting thank sharing looking api reference wondering could give arguments configuring component like template maybe know andor go deal depth", "d": "10/2016"}, {"body": "found article seems answer need", "d": "10/2016"}, {"body": "finally hardly following radimkohler hope able use compilerproviders aot maybe additionnable configuration aware drawbacks", "d": "10/2016"}, {"body": "seems like two concerns play calculating dirtiness markasdirty etc controlling whenhow validation runs regarding first agree pkozlowskiopensource worth noting dirty pristine state nt contract children group dirty means least one children dirty contrast group pristine children pristine reset group children must marked pristine maintain model true untouched less clear dirtiness one needs marked dirty satisfy model marking one would arbitrary marking group dirty nt necessarily mean want every single child dirty ambiguity method conservative mark children inclined leave nt think changing behavior would sufficient benefits justify breaking people said might consider adding additional methods proves pain point second concern manual validation valid one think better appears duplicate let continue discussion", "d": "10/2016"}, {"body": "closing questions addressed", "d": "10/2016"}, {"body": "fixed yet use reactive forms radio buttons ca nt seem able disable individual radio buttons template using attribute disabling entire control seems work fine however", "d": "10/2016"}, {"body": "found similar issue radios basically use attrname name works ok formcontroll used starts select radios value even name different noticed underlaying model changed radios changed looks visual issue anyway form values ok", "d": "10/2016"}, {"body": "matod seems radios formcontrol nt play together nicely instead use formcontrolname", "d": "10/2016"}, {"body": "adharris thanks reporting radio buttons intended used correct normal name attribute nt mirrored using workaround confusing great accessibility form control directives handle attribute mirroring put list matod want use part parent form like standalone control nt registered plunker appears try mix using also registering worth noting need bind want selection work properly cases mentioned also want tab stops work correctly", "d": "10/2016"}, {"body": "anybody needs workaround follow steps use rxjs operator reuse created observables create map guard save created observables map add cleanup code remove url map observable completes operators", "d": "10/2016"}, {"body": "sure common use case would recommend provide custom url strategy use history api class myurlstrategy implements urlstrategy component imports routermoduleforroot routes providers provide urlstrategy useclass myurlstrategy class myapp closing issue", "d": "10/2016"}, {"body": "hi see supposed use aot scss css files font path reference also working work around add styles manually", "d": "10/2016"}, {"body": "submitting check one x x bug report gt search github similar issue pr submitting current behavior project include bootstrapsass import statements underscore found compilercli example sass file following content produce following error expected behavior error ist correct file exists normal sass compiler looks also file suffix scss prefix compiler also take care find file motivation use case changing behavior angular version language typescript node aot issues receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "please provide plunkr reproducing issue", "d": "10/2016"}, {"body": "closing issue please reopen repro", "d": "10/2016"}, {"body": "hi vsavkin create plunker reproducing issue soon get spare time work probably end week thanks", "d": "10/2016"}, {"body": "hello vsavkin requested plunker reproduces reported issue see issue happening need open preview separe window windowed mode navigate routes reload browser window realize first module related components loaded removing loading splash rest lazy loaded route components gets attached dom problem may take long time depending deep user gone far url fast current network even network fast enough reduce rtt may plenty files need served user know going appreciate help thanks", "d": "10/2016"}, {"body": "reopened issue", "d": "10/2016"}, {"body": "chrisnicola conditionally bootstrap components calling check whether component already page want continue failreport error bootstrap component found users want", "d": "10/2016"}, {"body": "tbosch thanks really ideal solution though work sure users would want way take word say considering still early days already located examples people asking suspect would make sense allow optional bootstrap components method easier documented", "d": "10/2016"}, {"body": "skycoding thanks comment made day known better smile", "d": "10/2016"}, {"body": "happening uncaught typeerror reflectgetmetadata function using angular npm node macos kingsdevelopment using ngbootstrap quick verification use ngboostrap get error", "d": "10/2016"}, {"body": "btinoco much point commenting closed issues need help support please turn one support channels regarding issue might reflect metadata polyffil certain configurations see means specific ngbootstrap assuming talk tl dr reach help one support channels", "d": "10/2016"}, {"body": "btinoco get fixed also issue", "d": "10/2016"}, {"body": "encountered issue aot output aoe error package json dependencies", "d": "10/2016"}, {"body": "figured main issue tsconfigjson version tsconfigjson fails version tsconfigaotjson works question default tsconfig file would trigger particular compilation error", "d": "10/2016"}, {"body": "since signature registeranimationoutput changed issue longer observable side angular compiler output", "d": "10/2016"}, {"body": "cool also working angular", "d": "10/2016"}, {"body": "given animation outputs codegen internally compile please reopen issue still", "d": "10/2016"}, {"body": "aot js feasible nt require huge changes interested helping new compiler codebase though would need direction", "d": "10/2016"}, {"body": "aot requires typescript least tree shaking part since targets js modules typescript rollup tree shaker work plain js long give js tree shaking section docs work plain js project well notice input rollup js ts obviously nice able aot tree shaking least better nothing", "d": "10/2016"}, {"body": "makes aot require ts curious", "d": "10/2016"}, {"body": "understanding ngc compiler wrapperenhancement regular tsc compiler therefore assumes typescript still think possible support aot js though nt seem like concept aot tied typescript reasons current tooling wait feedback angular team feasible though", "d": "10/2016"}, {"body": "decoupling ngc tsc requires huge effortrewrite usecase definitely nt merit", "d": "10/2016"}, {"body": "provides service", "d": "10/2016"}, {"body": "thx current behavior need title service described set document title cookbook", "d": "10/2016"}, {"body": "time create new route new component router creates new observables consequently subscribe first child route expect observable emit changes changing child get want something like export class crisislistcomponent implements oninit crises crisis public selectedid number private subscription private child constructor private service crisisservice private route activatedroute private router router isselected crisis crisis return crisisid thisselectedid ngoninit thisrouteparamsforeach params params gt thisselectedid params id thisservicegetcrises crises gt thiscrises crises think common pattern could open feature request outlining use case", "d": "10/2016"}, {"body": "got error using prerelease build typescript via typescript next using angularcompiler filing new issue unless want acknowledge somewhat long shot expect setup work first place nonetheless wondering anyone gotten work prerelease build typescript", "d": "10/2016"}, {"body": "yuanfeiz way go", "d": "10/2016"}, {"body": "get problem solution yet", "d": "10/2016"}, {"body": "igorminar seen flagged issue need repro available comment zip file aedensixty tried running issues aot seems css files affected hence renaming scss css changing webpack config accordingly could make trick", "d": "10/2016"}, {"body": "krisa gulpsass build create css refer begin workaround moment fix", "d": "10/2016"}, {"body": "osxonly module install windows", "d": "10/2016"}, {"body": "yeah bad problem really node reading need node lt", "d": "10/2016"}, {"body": "fyi good response pkozlowskiopensource expand bit answer two main fixes configure module property property helps configure document schema defines elements properties valid bound two values add array customelementsschema allows elements properties hyphens noerrorsschema suppresses schema errors alternatively attribute take css selector types elements means could instead select would grab fourctv approach works course selectors defined loaded directives nt need checked dom schema makes semantic sense define alongside component feel unnecessary might also able something crazy dynamically generating empty directives selectors need via factory injector something feels like abuse system outstanding question though whether future support custom schema extensions love take route explicitly add tag names schema without allowing hyphenated ones", "d": "10/2016"}, {"body": "future support custom schema extensions yep planned", "d": "10/2016"}, {"body": "problem transpilation code works like result", "d": "10/2016"}, {"body": "hey implementing similar functionality described feature much appreciated way tell semverwise calendarwise changes commit published want know bump released would think best way find change going upcoming release preview builds milestones etc", "d": "10/2016"}, {"body": "yes closing duplicate", "d": "10/2016"}, {"body": "think get behavior need using already master coming soon closing issue", "d": "10/2016"}, {"body": "could somebody provide example resolved using canactivatechild candeactivatechild", "d": "10/2016"}, {"body": "pshpak ca nt resolved yet nt released vsavkin implying router documentation incorrect multiple guards every level routing hierarchy router checks guards first deepest child route top checks guards top deepest child route note separately placement sentence nt seem correct nt highlighting ear implies router finds common ancestor current route target route walks tree checking walks ancestor target performing alternating checks actual behavior seems like deactivate current leaf leap ancestor try descend activations behavior seems even stranger changing route parameters nt gotten investigating fully plan put together plunker eod cst get back demonstration", "d": "10/2016"}, {"body": "ok exploring issue seems problem slightly different involved componentless routes whereas issue guards reused nodes without changing parameters whose parents changing parameters documented problems separately though certainly behavior relevant underlying code", "d": "10/2016"}, {"body": "pshpak anyone else looking temporary solution learned node target route shallowequality config node source route check guards parameters differ example plunker moving would trigger guards node node reused parameter changed future would come could specify node could couple things nt using resolver anything depends parameter parent move parameter tree documentation routes indicates routes without components merged children nt need component layer something like since children inherited parameters parameter changes cause guards nodes fire also need component level could insert extra parent empty path cheers", "d": "10/2016"}, {"body": "progress", "d": "10/2016"}, {"body": "think closed reopened documentation issue", "d": "10/2016"}, {"body": "nt officially support defines one internally sims support work box", "d": "10/2016"}, {"body": "done", "d": "10/2016"}, {"body": "vlodko work either deleted get following error angularcommonindexjs module build failed error enoent file directory open c angularcommonindexjs error native srcappappmodulets srcappindexts srcmaints multi main error angularcoreindexjs module build failed error enoent file directory open c angularcoreindexjs error native srcappappmodulets srcappindexts srcmaints multi main delete directory get error module found error ca nt resolve angularcommon c developmentangu srcappappmodulets srcappindexts srcmaints multi main error module found error ca nt resolve angularcore c srcappappmodulets srcappindexts srcmaints multi main error module found error ca nt resolve angularcore c srcappappmodulets srcappindexts srcmaints multi main error module found error ca nt resolve angularcore c srcappappmodulets srcappindexts srcmaints multi main error default c find module angularcore delete directory get error module build failed error enoent file directory open c error native srcappappmodulets srcappindexts srcmaints multi main error default c find module angularcore", "d": "10/2016"}, {"body": "darkedges please see one work around remove nodemodules typings folders linked module folder move linked module folder nodemodules folder parent module start webpack also issues tslint config file renamed tslintconfjson linked module", "d": "10/2016"}, {"body": "closed issue description clear actively monitor closed issues someone clear description issue please open new issue", "d": "10/2016"}, {"body": "vicb already opened new one", "d": "10/2016"}, {"body": "steveblue see project using rollup working issue closed please", "d": "10/2016"}, {"body": "mlaval well sure issue closed simple hello world works another application stuck rollup still still trying diagnose issue let get back", "d": "10/2016"}, {"body": "think resolved likely code one projects making build fail upgrading rollup past every project seems work", "d": "10/2016"}, {"body": "exactly issue using upgradeadapter angular version", "d": "10/2016"}, {"body": "updating angular routes solved case", "d": "10/2016"}, {"body": "works angular router well use angular cli uses versions close", "d": "10/2016"}, {"body": "im still getting problem angular router angularcli", "d": "10/2016"}, {"body": "vicb agree general principle supporting sugar syntax everywhere sure applicable directive might reaching incorrect conclussions misunderstanding intention let share think directive first start observing currently tag used mean radically different concepts content capturing everything got gets captured insertion point way get sth nt render final dom syntax makes sense content capturing much marking content insertion point trouble today usages today ngif ngfor etc see used capturing mechanism insertion point marker kind hard see concepts really distinct consider distinction crucial typical usage always goes like follows html capturing content mentioned previously sure sugared syntax makes sense context try use would get really equivalent static content tl dr feel like missing intention currently nt see sugared syntax could useful directive", "d": "10/2016"}, {"body": "marking critical since affects every app want aot compile almost every app", "d": "10/2016"}, {"body": "wrong people want use jit systemjs aot side side affected eg cli inlines external templates jit mode moduleid needed", "d": "10/2016"}, {"body": "found link work anyone try", "d": "10/2016"}, {"body": "usecase template switching selector ts class itemview input item dosomething component selector itemview typegrid templateurl class griditemview extends itemview component selector itemview typelist templateurl class listitemview extends itemview", "d": "10/2016"}, {"body": "wonder update one think common practice inherit reuse common behavior properties otherwise endup allot duplicate code hard maintain started refactoring mycode feature really needed eg works would fine support following usecase fdescribe inputs inherited parent components gt abstract class parentcomponent visible boolean false editable boolean false valid boolean false abstract class childwidgetcomponent extends parentcomponent formgroup formdata name string defaultname id string defaultid component selector justwidget inputs value id name visible editable formgroup template editable formgroup class concretewidget extends childwidgetcomponent value component selector wrappercomp template export class wrappercomponent viewchildren concretewidget widget concretewidget make maintainable code", "d": "10/2016"}, {"body": "think also parameter decorators like", "d": "10/2016"}, {"body": "concrete example ca nt imagine parameters superclasses taken account injecting subclasses parameters need passed subclass using call way decorators meaningless", "d": "10/2016"}, {"body": "seeing broken behavior extending ngc transpiled component typescript transpiled component encountered extending timepickercomponent switched ngc compilation appears extended class descriptors totally ignored favor parent selector template component extended component", "d": "10/2016"}, {"body": "zoechi agree think inherited say either way define correct behavior think discussion", "d": "10/2016"}, {"body": "hit bump trying great thanks whoever working issue", "d": "10/2016"}, {"body": "trying extend routerlink directive append prefix link myregionphotos myregion state value shared service right simple way see copypaste existing code change needs tried several obvious solutions nt work would great official way reuse code way", "d": "10/2016"}, {"body": "note possible work around limitation runtime good luck getting aot compilation work inheritance feel bit cheated ts classes inheritance top language seems get way tooling example ngc difficult time generating code requires lot monkey patching work eg changing accessibility props public incidentally think languagelevel support partial classes help scenarios ngc aiming", "d": "10/2016"}, {"body": "tsvetomir note agree typescript classes inheritance much serious see", "d": "10/2016"}, {"body": "really feature maybe mixings extending metadata able extend component see sounds like bug", "d": "10/2016"}, {"body": "issue using angular webpack without angularcli webpackcontextreplacementplugin trick nt problem webpack inputs issue", "d": "10/2016"}, {"body": "clementvidal solution commented sep", "d": "10/2016"}, {"body": "official solution temporary fix context plugin nt needed webpack thanks", "d": "10/2016"}, {"body": "clementvidal really nt know issue never closed therefore temporary fix", "d": "10/2016"}, {"body": "moving track one place", "d": "10/2016"}, {"body": "looks like support request looks like need formarray formgroup rather formgroup wo nt able pass array specifics achieve please ask gitter stackoverflow vicb mentioned", "d": "10/2016"}, {"body": "could nt figure reason yet nt use require", "d": "10/2016"}, {"body": "nether api intuitive model driven style many things specified typescript markup even worse apis abysmally typed place nt even get good tooling angular amazing libraries like angularformly elegant powerful simple dry use proven ideas libraries know job exceptionally well", "d": "10/2016"}, {"body": "angular amazing libraries try", "d": "10/2016"}, {"body": "error happens add new files source directory", "d": "10/2016"}, {"body": "tdinar u restart dev server u use indexts files", "d": "10/2016"}, {"body": "vicb think closed", "d": "10/2016"}, {"body": "using indexts cause originally work ngmodule also restarted dev server error persistent reckoned importing classes directly hosts ts files declaring ngmodule read something cyclic inheritance removed import newly added file appmodule ngmodule declarations works import somewhere else would explain cyclic inheritance would work webpack aware issue feedback appreciated thanks", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "hi also similar issue svg angular component template viewbox set correct case dom angular produces viewbox lower case angular", "d": "10/2016"}, {"body": "elesueur different issue could please open separate issue repro thanks", "d": "10/2016"}, {"body": "vicb ca nt seem reproduce outside app ideas might lead issue occurring", "d": "10/2016"}, {"body": "sorry taken long reply looking pr updated remove rx looks like works fine let know missing something", "d": "10/2016"}, {"body": "hello matsko cool thanks completing said post get import observable rxjs working use text template img tags pointing svg images guess resolve work however think problem lies animations blur svg combined meaning works moment yes blurring tags remove tags use tags instead add valid svgurl image nt know see normally work think", "d": "10/2016"}, {"body": "thoes using reactive forms method needing quick hacked fix", "d": "10/2016"}, {"body": "pkozlowskiopensource second solution validator seems reasonable time take", "d": "10/2016"}, {"body": "working angular", "d": "10/2016"}, {"body": "could provide plunkr reproducing issue", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "still issue", "d": "10/2016"}, {"body": "yes tried using code cli beta project result", "d": "10/2016"}, {"body": "would impact changing private properties public", "d": "10/2016"}, {"body": "gjorocks technically properties already public runtime typescript compiler removes typescript annotations emits javascript impact change api surface affects typescript code idea ngc behaves way breaks semantics typescript implying subset fork prevents language service even warning problem consider writing library using typescript publishing consumption typescript javascript consumers standard way distributing file prevent either accessing private members provide better design time experience consumer marking certain properties allows typescript user see public api surface exposed choose use file completely optional regardless consumer language choice none affects code emitted microsoft typescript compiler emits code regardless accessibility modifiers ngc behaves differently typescript implies using aot longer writing typescript see", "d": "10/2016"}, {"body": "vicb helpful use case able specify output file directory", "d": "10/2016"}, {"body": "somebody knows workaround please let know awful bug", "d": "10/2016"}, {"body": "corrected sending crazy", "d": "10/2016"}, {"body": "hi guys great feature request suggested workaround translate ts texts", "d": "10/2016"}, {"body": "fbobbio create hidden elements template ex bind using retrieve translated value looks retarded works needs", "d": "10/2016"}, {"body": "already processes entire tscode implement decorator like string properties could filled translated value like used oneway data binding untranslated value easily extracted code place argument like feed source property translation target", "d": "10/2016"}, {"body": "essential item whole internationalization cycle imo shop accustomed like tool extension xgettext crawls types source files looking marked text put dictionary files translators love clean easy markup html templates expecting typescript code", "d": "10/2016"}, {"body": "current status supporting default exports", "d": "10/2016"}, {"body": "suggested approach aot lazy loaded modules doesnt work", "d": "10/2016"}, {"body": "updates problem angular typescript use export default class useful know must remove default exports thank u", "d": "10/2016"}, {"body": "breaking change think benefits wo nt justify cost closing issue", "d": "10/2016"}, {"body": "two cents using aspnet core use nt know also works", "d": "10/2016"}, {"body": "decision controversial different backends interpret query string part url differently nt see disadvantage angular parse query string way maintains much information possible query string parsed interpreted simpler scenario could expressed lot precedent interpreting query strings http headers way", "d": "10/2016"}, {"body": "least expect remove url", "d": "10/2016"}, {"body": "getting error angularcommon error parameters received filepath usersfoomyprojectnodemodules angularcommonsrclocationlocationdts name location staticsymbol staticreflectorparameters usersfoomyprojectnodemodules compilemetadataresolvergetdependenciesmetadata usersfoomyprojectnodemodules compilemetadataresolvergettypemetadata usersfoomyprojectnodemodules usersfoomyprojectnodemodules arrayforeach native compilemetadataresolvergetprovidersmetadata usersfoomyprojectnodemodules usersfoomyprojectnodemodules arrayforeach native compilemetadataresolvergetprovidersmetadata usersfoomyprojectnodemodules compilemetadataresolvergetngmodulemetadata usersfoomyprojectnodemodules extraction failed guess angularcommon related angular using angular angularcompilercli", "d": "10/2016"}, {"body": "better open new issue referencing one case since get attention", "d": "10/2016"}, {"body": "function global systemconfig paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app app angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs angularmaterial npm angularmaterialmaterialumdjs libraries rxjs npm rxjs angularinmemorywebapi npm angularinmemorywebapi npm firebase npm firebase packages tells system loader load filename andor extension packages app main mainjs defaultextension js rxjs defaultextension js angularinmemorywebapi main indexjs defaultextension js defaultextension js main firebase defaultextension js main firebasejs systemconfigjs file issue console fine traceur error found", "d": "10/2016"}, {"body": "got working changing tsconfig initially changed notice module option change module target helped getting stack trace console catching error loading systemjs systemimport app allow information systemimport app catch function err consoleerror err mentioned another thread error gave alot information work hope helps spent hours", "d": "10/2016"}, {"body": "vote multiple reason behind error sometimes comments mentioned top appcomponentts file pointing incorrect umd file using ts transcript version please mention transpiler options configjs file compile ts file js file using transpiler reference js file code function global systemconfig transpiler ts typescriptoptions tsconfig true paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app app angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs libraries rxjs npm rxjs angularinmemorywebapi npm angularinmemorywebapi packages tells system loader load filename andor extension packages app main main defaultextension ts rxjs defaultextension js angularinmemorywebapi main indexjs defaultextension js", "d": "10/2016"}, {"body": "one design constraints used build router multiple teams able build application sections independently sections encapsulated introducing new parameter one affect one activatedroute global need something like traverse routerstate object however used carefully discouraged", "d": "10/2016"}, {"body": "still relevant final", "d": "10/2016"}, {"body": "pr improves situation still need test default view created value change still triggers default case ngswitchspec simplify logic wrt switch value change amp case values changes improve creation time", "d": "10/2016"}, {"body": "error ng serve p pc proxyjson prod aot error parameters received filepath c angularcommonsrclocationlocationdts name location staticsymbol staticreflectorparameters c usersiminardevangularmodules compilemetadataresolvergetdependenciesmetadata c compilemetadataresolvergettypemetadata c c arrayforeach native compilemetadataresolvergetprovidersmetadata c c arrayforeach native compilemetadataresolvergetprovidersmetadata c compilemetadataresolvergetngmodulemetadata c c arrayforeach native offlinecompileranalyzemodules c codegeneratorcodegen c usersiminardevangularmodules ngcwebpackpluginmake c compiler c compilerapplypluginsparallel c compilercompile c watching c next c compilerinvalidasyncplugin c next c compiler c compilerapplypluginsasync c watchinggo c watching c compilerreadrecords c new watching c compilerwatch c moduleexports c new server c classrun c c processtickcallback", "d": "10/2016"}, {"body": "could someone please add minimal repro case", "d": "10/2016"}, {"body": "vicb reproduce cloning qdouble starter removing running behavior qdouble get error mentioned", "d": "10/2016"}, {"body": "vicb threw required code updated branch pushed origin even easier repro case clone see error", "d": "10/2016"}, {"body": "also vicb case helpful issue happens gets passed object methods matches interface proper properties like see errors happens strict instance despite perfectly compatible object example line replace everything compiles runs expected obviously solution inelegant helpful see something either cloning creating static symbols using staticsymbol constructor perfectly compatible staticsymbol objects tried poking around source happens unfortunately nt find anything obvious hope info still helpful", "d": "10/2016"}, {"body": "cc chuckjaz", "d": "10/2016"}, {"body": "qdouble also happening manually create call also get error locationdts using cli calling compiling hand works", "d": "10/2016"}, {"body": "qdouble ok found works though nt really understand going add property maints works typescript still compiles files nt understand compileroptions files maints angularcompileroptions gendir aot skipmetadataemit true removing filesproperty aotbuild crashes", "d": "10/2016"}, {"body": "choeller basically got around issue making aot tsconfig ignore spec files", "d": "10/2016"}, {"body": "choeller false default typescript walk anything accumulate sources program typechecked emitted thus still compile files discover tests reference graph presented compiler looks files", "d": "10/2016"}, {"body": "case helpful looks issue", "d": "10/2016"}, {"body": "poking around believe error pretty simple interface class properties also includes one optional property exported function use instead checking clearly cases eg perhaps reading metadatajson files interop objects adhering interface instances class perfectly compatible used rather throwing errors open pr change shortly", "d": "10/2016"}, {"body": "pr resolve sent", "d": "10/2016"}, {"body": "yep proper patterns one instance service documented properly already", "d": "10/2016"}, {"body": "oh crying loud get decent load times apps need use ngc use ngc need every every vendor libs include metadatajson file dependent well going since allows people write components pure js since js typescript librariesmodules never metadatjson thus never used aot tried three different ways shrink app decent size reduce download times bundling stuff one module three dead ends various errors poor documentation app takes seconds start due hundreds npm deps loads boot angularcli buggy go angular aot compiler every already shipping lib metadatajson files rollup issues libs shipped various incompatible module formats npm commonjs amd etc rollup handle others sane works way make single js bundled app file even aot release maddening jump hopes would finally single file nearly single app need find bundler would work everything else use", "d": "10/2016"}, {"body": "danieljoyce third party libs aoted integrated aot compiled application third party library publish js files dts files metadatajson files point non angular libs published commonsjs use rollup plugin convert commonjs aot cookbook shows tour heroes specific example uses commonjs plugin convert commonjs rxjs code", "d": "10/2016"}, {"body": "seeing error trying migrate using ngmodule routing configurations removed busted code nevermind see goofed nt export feature module routing config", "d": "10/2016"}, {"body": "faced problem fixed jasedwards solution thanks", "d": "10/2016"}, {"body": "aaronngray aot proper answer", "d": "10/2016"}, {"body": "perfect would preferred something like separate xml like templates possibly along lines xaml october pawel kozlowski notifications githubcom wrote aaronngray aot proper answer receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "actually still see error", "d": "10/2016"}, {"body": "jenan case ca nt extract access token url loaded part automatically removed extract accesstoken", "d": "10/2016"}, {"body": "found solution imports constructor", "d": "10/2016"}, {"body": "sorry necroposting bug fixed ca nt reproduce thank", "d": "10/2016"}, {"body": "incredibly frustrating error debug frustrating distinction aot jit building processes clearly explained effort put documenting convert jit build aot build", "d": "10/2016"}, {"body": "shlomiassaf seen feature request think missing also dynamically set properties event listeners allow write something like think", "d": "10/2016"}, {"body": "joelrich think powerful addition also add complexity setting properties listening events something achieve current implementation listening event using set properties register event streams however done programatically properties bound change detection trigger assigned property change observables must also unsubscribed manually pain point perfect candidate memory leaks probably unsubscribe automatically component registered destroyed using proposed declarative syntax might cause confusion support change detection well sugarhelper setting properties events described directive confusion caused developer setting propertiesevents template heshe might think bound support bindings template must reflect propertiesevent explicitly component element compiler create appropriate component factory class ngfactory possible since component known might change since feature supported current implementation programatic work think first iteration feature might want keep simple approved consider adding opinion might missed something able support binding would love get corrected already blocker pr due need support sugar syntax able use takes longer expected vicb thoughts", "d": "10/2016"}, {"body": "shlomiassaf fully agree change detection would work far understand least four maybe cases would supported object changes property value object changes property added object property removed object optional property getter value changes first case easy implement would need utility similar functionality already utility angular code base cases covered otherwise solution would either require lot code would ideal copy amp compare know already utility similar angular code base", "d": "10/2016"}, {"body": "joelrich work change detection angular managed component factory class also implements change detection done hard way creating code explicitly checks change possible due meta instruction done compiler every property checked every property checked reference iterating child properties set user select change detection strategy component component might different one issues bunch nt make sense angular team allow anyway add lot code issues much strongly recommend deeply understand cd work make life easy angular anyway think better stick current proposal adding feature get approval", "d": "10/2016"}, {"body": "btw think binding properties sort abuse since component intended use case use case requires binding use template switch directive list components support", "d": "10/2016"}, {"body": "shlomiassaf opened concrete use case impossible implement switch require static known compile time well dynamic properties know normal change detection work like since use find another solution utility like see three options require implement custom change detector possible today change detector runs first time copies whole object runs compares two objects differences sets new values component either creates new object adjusts existing object detect future changes change detector runs first time iterates input names target component copies property values name object array array used comparisons array easily reused component instance used comparison long component inputs mapped normal properties without getters third option would best getters could problematic second option predictable option although may slower first option ideal cases therefore would implement second option think", "d": "10/2016"}, {"body": "joelrich lot work specific use case lot code write logic manage course picky performance tests required component component part package means general purpose components general use component package quite easy implement proposal implemented third party package sure angular team accept offer implement custom change detector lot noise particular use case like idea powerful might want make third party package opinion nt call shots feel free nag guys", "d": "10/2016"}, {"body": "vicb mhevery think suggestion able bind properties component outlet think special use case react example could easily writing", "d": "10/2016"}, {"body": "seems problem loading page direct url use case would using router ensure loading dependencies say serverside configuration using configuration child route guard", "d": "10/2016"}, {"body": "vicb good point inclined keep hear users painful may reconsider line", "d": "10/2016"}, {"body": "brandonroberts pointed guard used handle use case closing issue", "d": "10/2016"}, {"body": "thelgevold find solution close issue", "d": "10/2016"}, {"body": "problem uiroutermodule done", "d": "10/2016"}, {"body": "thanks reporting issue issue obsolete due changes function name mangling problems resolved however need aot want mangle properties way around aot support ngupgrade investigated expect land one future releases", "d": "10/2016"}, {"body": "thanks igorminar closing issue", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "bug still anyone luck lazy loading aot code much alike choeller code using aot rollup using system js load additional dependencies", "d": "10/2016"}, {"body": "rollup support codesplitting could nt lazy loading without sort rollup plugin aot lazy loading working fine webpack", "d": "10/2016"}, {"body": "thank qdouble question webpack though expecting feature moduleslazy modules external modules separate bundle example bundled single file ram following", "d": "10/2016"}, {"body": "lazy module separate file third party modules bundled together allows webpack treeshake effectively sun oct balamurali sundaramoorthy lt notifications githubcom wrote thank qdouble question webpack though expecting feature moduleslazy modules external modules separate bundle example bundled single file ram following npm run ngc npm run build aot prod receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "updates really frustrating jit slow clear direction aot lazy loading application decent size application around forms form around form fields app module module module module sub module module sub module routing path loadchildren", "d": "10/2016"}, {"body": "ran similar issue lazy loaded module see srchomehomecomponenthtml receive provider scope error trying use upgraded component within lazy loaded module ideas", "d": "10/2016"}, {"body": "also running issue seeing upgrade adapter multiple ngmodules robwormald mhevery plan natively support multiple ngmodules ngupgrade workaround needed avoid circular dependency problem", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "tracked", "d": "10/2016"}, {"body": "becomes space php implementations also tomcat thus servers use behind scenes", "d": "10/2016"}, {"body": "addition issue param urlsearchparamsappend tostring makes sign spaces given issue complicated good workaround", "d": "10/2016"}, {"body": "yes workaround use ghqueryencoder see encoder would fit needs probably need compliant instead using workarounds", "d": "10/2016"}, {"body": "bolza tinchou encodevalue v string string uses superencodekey superencodevalue particular reason updated ok difference export class queryencoder encodekey k string string return standardencoding k encodevalue v string string return standardencoding v", "d": "10/2016"}, {"body": "angular urlsearchparams behave like standard urlsearchparams default tested angular test typescript import urlsearchparams angular function test fn function text string fn function assertequals consoleerror equals test function var params new urlsearchparams paramsappend b c assertequals params abc paramsdelete paramsappend b c assertequals params abc serialize space test function var params new urlsearchparams paramsappend assertequals params paramsappend assertequals params amp paramsappend b assertequals params amp amp b paramsappend assertequals params amp amp b amp paramsappend assertequals params amp amp b amp amp serialize empty value test function var params new urlsearchparams paramsappend b assertequals params b paramsappend b assertequals params b amp b serialize empty name test function var params new urlsearchparams paramsappend assertequals params paramsappend assertequals params amp serialize empty name value test function var params new urlsearchparams paramsappend bc assertequals params ab paramsdelete paramsappend ab c assertequals params serialize test function var params new urlsearchparams paramsappend assertequals params paramsappend b assertequals params amp b serialize test function var params new urlsearchparams paramsappend amp assertequals params paramsappend b amp assertequals params amp b serialize amp test function var params new urlsearchparams paramsappend assertequals params paramsdelete paramsappend c assertequals params c serialize test function var params new urlsearchparams paramsappend b c assertequals params ab paramsdelete paramsappend b c assertequals params serialize test function var params new urlsearchparams paramsappend assertequals params ab paramsdelete paramsappend c assertequals params serialize test function var params new urlsearchparams paramsappend assertequals params ab paramsdelete paramsappend c assertequals params serialize unicode character pile poo test function var params urlsearchparams params new urlsearchparams ab amp cd amp amp e amp amp assertequals paramstostring ab amp cd amp e params new urlsearchparams b amp ab amp cd assertequals paramstostring ab amp ab amp cd lone survive roundtrip params new urlsearchparams amp ab assertequals paramstostring amp ab urlsearchparamstostring result want test browser", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "pkozlowskiopensource think closed", "d": "10/2016"}, {"body": "ie well simple fix", "d": "10/2016"}, {"body": "still relevant final", "d": "10/2016"}, {"body": "dzmitryshylovich updated plnker sure means still working need try local project", "d": "10/2016"}, {"body": "get error pushing one page another added appmodulets import ngmodule angularcore import ionicapp ionicmodule ionicangular import myapp appcomponent import import import import import import import ngmodule declarations myapp imports ionicmoduleforroot myapp bootstrap ionicapp entrycomponents myapp providers export class appmodule ionic application gives error", "d": "10/2016"}, {"body": "error inline template append", "d": "10/2016"}, {"body": "sadamchami post gist got component factory trying add new page able solve adding appmodulets sure working", "d": "10/2016"}, {"body": "hey sadamchami solve problem facing problem push another page anybody help pretty new angular ionic import component angularcore import navcontroller ionicangular import signuppage signupsignup component selector pagehome templateurl homehomehtml providers apiservices entrycomponents signuppage export class homepage private navctrl constructor public navctrl navcontroller thisnavctrl navctrl navigate thisnavctrlpush signuppage firstpassed value secondpassed value homets code click button go signup home page trigger navigate function nothing happen console print string getting lot error console", "d": "10/2016"}, {"body": "try separate main problem first mix amp ionic create working plunk pimplest possible finding problem others without guessing", "d": "10/2016"}, {"body": "hey mlcmlapis thanks reply seen mentioned told getting exact error like sadamchami getting error guess also using ionic", "d": "10/2016"}, {"body": "hi yes know solution know happens tried simplify way find answer anyone wants help icluding many things could influence", "d": "10/2016"}, {"body": "fond solution add page pushing parent directory also included ngmodule also", "d": "10/2016"}, {"body": "hmm maybe works still something wrong origin normally filling entrycomponents property ngmodule enough want switch need something like", "d": "10/2016"}, {"body": "yes still nt know agree ngmodule needed one ionic worked also", "d": "10/2016"}, {"body": "plunk demo would helpful could something see could evident like case sensitive names javascript already case source problems", "d": "10/2016"}, {"body": "facing issue using tabs example error get exception error homepage class homepage inline caused component factory found postdetails import component angularcore import postdetails postdetailspostdetails import navcontroller navparams ionicangular import http angular import rxjsaddoperatormap component templateurl homehtml export class homepage url string items itemtapped event item thisnavpush postdetails item item", "d": "10/2016"}, {"body": "leafdropco open appmodulets import postdetails thelocation also add declarations entrycomponents", "d": "10/2016"}, {"body": "lwu thank", "d": "10/2016"}, {"body": "hi sadamchami follow solution tell need add exactly home page button click button want go signup page comment shown homets code signupts code import component angularcore import navcontroller navparams ionicangular component selector pagesignup templateurl signupsignuphtml export class signuppage public firstparam public secondparam constructor public navctrl navcontroller public params navparams thisfirstparam paramsget firstpassed thissecondparam paramsget secondpassed added signup page appmodulets entrycomponents array ngmodule import page beginning appcomponentts file working", "d": "10/2016"}, {"body": "omarfaruksust component add like", "d": "10/2016"}, {"body": "faced problem surprisingly realized component gets different instance activatedroute unexpected sure di creates instance injects time trying change title root component thisroutedatasubscribe data gt thistitle title nt work also injecting service nt make sense subscribe parse url", "d": "10/2016"}, {"body": "alexbyk see inject activatedroute root component access entire tree activated routes", "d": "10/2016"}, {"body": "brandonroberts thanks pointing examples issue outdated least got idea", "d": "10/2016"}, {"body": "ended solution opinion complex simple thing", "d": "10/2016"}, {"body": "alexbyk plans make setting page titles easier router goal access activated route data outside component", "d": "10/2016"}, {"body": "sounds like support request got resolved", "d": "10/2016"}, {"body": "given already listen reset event notify inclined think nt necessary ngsubmit extra value allows form directive submitted state updated reset parallel state set prefer add api surface unless really necessary use cases come future may reconsider closing", "d": "10/2016"}, {"body": "kara could give quick example catch form event eg reset", "d": "10/2016"}, {"body": "mvar github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "10/2016"}, {"body": "quite lot people nice enough provide support appropriate channels", "d": "10/2016"}, {"body": "behavior amp router updated plunkr", "d": "10/2016"}, {"body": "found another solution dynamic number items less verbosive nt need much boilerplate template component private get checkboxlist formarray return thisformget checkboxlist formarray constructor thisform new formgroup checkboxlist new formarray ngonchanges changes simplechanges changes items changes items currentvalue return remove array first form get items input updates thischeckboxlistlength gt thisformremovecontrol checkboxlist thisformaddcontrol checkboxlist new formarray thisitemsforeach gt thischeckboxlistpush new formcontrol works really well thing really annoying must click twice checkbox updates nt know happens bug fault", "d": "10/2016"}, {"body": "works check something async gt testbedcompilecomponents inject mockbackend backend mockbackend gt let output abc expect output tomatch xxx", "d": "10/2016"}, {"body": "return promise beforeeach hook otherwise tests run components compiled", "d": "10/2016"}, {"body": "frederikschubert post code example makes sense sure implement", "d": "10/2016"}, {"body": "yes think discussion moved gitter stackoverflow support request bug report usually structure tests like note written mobile might syntax error somewhere idea clear ts describe greeting component gt let fixture componentfixture beforeeach gt return testbedconfiguretestingmodule declarations testcomponent providers userservice compilecomponents gt fixture testbedcreatecomponent testcomponent fixturedetectchanges aftereach gt fixturedestroy create component inject userservice service userservice gt perform test using fixture service", "d": "10/2016"}, {"body": "issue docs showing eg docs notice docs site near empty info bunch extra info lookup noticed atomtypescript finds docs use also happens", "d": "10/2016"}, {"body": "first sorry submitting wrong project bug reference documentation nt know submit angulario somewhere else please forgive wrong place please report docs issue angularangulario", "d": "10/2016"}, {"body": "fact reversed keyvalue nt matter case still nt work setting looks totaly ignored driving crazy either simple missed sth either obvious think nt see days try example plunker github project hope someone help", "d": "10/2016"}, {"body": "coorter happened gave thought would worth effort look documented victor savkin talk angular connect regarding router lazy loading nt find time watch entirely talks lazy loading bundling well might helpfull", "d": "10/2016"}, {"body": "getting error production seed project implementing lazy loading appjs error uncaught promise typeerror systemimport function u shimsjs shimsjs tinvoke shimsjs objectoninvoke appjs tinvoke shimsjs nrun shimsjs shimsjs tinvoketask shimsjs", "d": "10/2016"}, {"body": "embed systemjs bundles", "d": "10/2016"}, {"body": "really big problem spas long list cardsitems opinion hate scroll meet problem using web app would think nt use simple web pages scroll problem destroy good feelings problem specific angular angular react many frameworks suffer problem google photos nt scroll problem hides elements switch routes instead destroying recreating used implement service record scroll positions components need restore scroll positions user click back checked popstate determine whether back action click link solution works user still feel position jumping browser needs time scroll saved position know problem difficult solve clean way maybe angular could simply provide option keep components live hide switch routes instead destroying could get similar behaviour google photos hope make sense", "d": "10/2016"}, {"body": "implement exactly described save position current page using hot listener popstate happens set interval check height page gt saved height true scroll positon destroy interval struggling find workaround contentious issue try code bellow find code could better want improve please hesitate comment post version help others export class app implements oninit private static previousroutesurl new array public scrollpos public interval public lastroute string constructor private router router ngoninit thisroutereventssubscribe event navigationstart gt event instanceof navigationstart thissavescroll thislastroute thisroutename thisrouterurl error gt consoleerror error public resolvescroll public scrolltotop consolelog jquery body html scrolltop public scrollto position thisinterval return public destroyscrolllistener clearinterval thisinterval thisinterval null private routename url string url return null hostlistener window popstate event public onpopstate event savescroll let url thisroutename thisrouterurl let position mathfloor windowpageyoffset documentdocumentelementscrolltop documentbodyscrolltop hostlistener window scroll event public logscrollposition event", "d": "10/2016"}, {"body": "felipedrumond solution considered final release angular", "d": "10/2016"}, {"body": "amauryprieto nt nt even think would worth pr since code workaround missing native solution great solution issue", "d": "10/2016"}, {"body": "thanks felipedrumond", "d": "10/2016"}, {"body": "felipedrumond first place thanks raised flag even share workaround second place trying implement code function resetclass missing share please", "d": "10/2016"}, {"body": "everyone welcome resetclass part feature get rid", "d": "10/2016"}, {"body": "felipedrumond thanks", "d": "10/2016"}, {"body": "still issue final", "d": "10/2016"}, {"body": "fixed see plunker", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "brandonroberts many thanks man", "d": "10/2016"}, {"body": "duplicate able use discussion making easier people", "d": "10/2016"}, {"body": "fixed master coupe weeks ago closing issue", "d": "10/2016"}, {"body": "alexeagle chuckjaz still issue", "d": "10/2016"}, {"body": "still issue currently workarounds like bunch similar things never want reflect tsgenerated metadata", "d": "10/2016"}, {"body": "able remove workaround actual application thanks", "d": "10/2016"}, {"body": "related", "d": "10/2016"}, {"body": "able fixe error typeerror attempted assign readonly property sitting problem works browsers safari", "d": "10/2016"}, {"body": "issue solution", "d": "10/2016"}, {"body": "issue closed missing repro open new issue able come simple repro thanks", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "hi getting error ngc error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol appmodule tmpappappmodulets resolving symbol appmodule tmpappappmodulets code looks like ideas thank", "d": "10/2016"}, {"body": "likely complicated evaluate statically implementation", "d": "10/2016"}, {"body": "sosnet need latest version name changed supports aot", "d": "10/2016"}, {"body": "brandonroberts hm could solution unluckily newest version throws really strange error use chuckjaz idea", "d": "10/2016"}, {"body": "sosnet found solution similar problem", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "duplicate related broader issue", "d": "10/2016"}, {"body": "thanks plunker helpful possible list allowed components module entrycomponents get created needed fly mean getting something like title lorem ipsum text api right using something like view would render response create components", "d": "10/2016"}, {"body": "dynamic template say coming rules etc use approach hardcode templates way dynamically define template component", "d": "10/2016"}, {"body": "reason plunker run anymore", "d": "10/2016"}, {"body": "issue specify provider configuretestingmodule nt get injected test falls back concrete class call overridecomponent immediately calling configuretestingmodule specify exact provider injected expected", "d": "10/2016"}, {"body": "router escapes url segments constructing urls issue using routerlink routernavigate construct urls means need escape", "d": "10/2016"}, {"body": "vsavkin snippet project route make work", "d": "10/2016"}, {"body": "merged master", "d": "10/2016"}, {"body": "current workaroundapproach jit typescript const platform platformbrowserdynamic platformbootstrapmodule basemodule function module ngmoduleref const zone moduleinjectorget ngzone platforminjector moduleinjector platformbootstrapmodulewithzone zone platformbootstrapmodulewithzone zone aot typescript const platform platformbrowser platformbootstrapmodulefactory basemodulengfactory function module ngmoduleref const zone moduleinjectorget ngzone platforminjector moduleinjector platformbootstrapmodulefactorywithzone zone platformbootstrapmodulefactorywithzone zone jit plunkr", "d": "10/2016"}, {"body": "huyaxiong could tell us error problem component would like know fix thanks", "d": "10/2016"}, {"body": "pedrostrabeli said checked code import related ngmodule found module didnt import correct solved problem", "d": "10/2016"}, {"body": "update really headache", "d": "10/2016"}, {"body": "seems pretty silly extra work able use component thats meant shared feels like extra layer configuration top configuration thats needed", "d": "10/2016"}, {"body": "brandonroberts saids create shared module like import ngmodule angularcore import commonmodule angularcommon import formsmodule angularforms import sharedcomponenta sharedcomponenta import sharedcomponentb sharedcomponenta ngmodule imports commonmodule formsmodule export class sharedmodule use sharedmodule like import ngmodule angularcore import commonmodule angularcommon import formsmodule angularforms import sharedmodule sharedmodule ngmodule imports commonmodule formsmodule export class personmodule", "d": "10/2016"}, {"body": "domo arigato gozaimasu m\u00e9xico", "d": "10/2016"}, {"body": "solved", "d": "10/2016"}, {"body": "issue fixed router", "d": "10/2016"}, {"body": "mlcmlapis control depends sibling control chances validator moved level parent access names zoechi mentioned wrap validator use case wo nt work huge pain please open new issue detailed description plunker without hard evaluate necessity feature request closing insufficient information", "d": "10/2016"}, {"body": "kara thanks info understand previous problem description enough still think real cases including projects vision beneficial return thema open new issue enough free time collect descriptions would good enough explain convince", "d": "10/2016"}, {"body": "daixtrose could please confirm still case add plunker happens nt added plunker one linked default one got quite bunch code please provide minimal reproduce scenario plunker please check submission guidelines understand ca nt act issues lacking important information", "d": "10/2016"}, {"body": "already fixed via", "d": "10/2016"}, {"body": "mchamo thing need", "d": "10/2016"}, {"body": "martinwegner correct needed angulario webpack introduction docs solved issue late last night others ran issue referencing compiledminified js files webpack places dist folder pollyfills vendor app original indexhtml outside dist folder already configured site iis routing iis url rewrite use original indexhtml worked fine dev webpack build prod build get work needed instead rely indexhtml webpack creates dist folder thus update iis settings url rewrite settings routing use distindexhtml file done everything works fine errors thrown webpack prod build", "d": "10/2016"}, {"body": "issue newest dev reason component nt declared appmodule wanted use appmodule dependencies moving toplevel module fixed problem", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "relative assets tracked", "d": "10/2016"}, {"body": "currently emits every time status calculated necessarily changes see might misleading however changing behavior would pretty big breaking change forms users could possibly add new event emitter distinguish two like get sense would use establishing priority people feeling pain use cases", "d": "10/2016"}, {"body": "way keep attempted url using canload guard currently nt want use canactivate guard prevent module loading", "d": "10/2016"}, {"body": "able use observable get last event contain attempted url", "d": "10/2016"}, {"body": "brandonroberts ca nt subscribe router events canload since asynchronous right canload returns value observable return value", "d": "10/2016"}, {"body": "similar need n password complexity rules needed retrieved server implemented manually fairly easily since take array validators simply accumulate validators array using pass array builder retrieve list server also promisify validator accumulation gt form initialization gt template activation steps add prevent form built everything ready adding template setting end promise chain failing got formbuilder expects formgroup instance please pass one hardtodiagnose doublecalling bug", "d": "10/2016"}, {"body": "gwulior rebinding form groups nt yet supported issue posted work however worth noting initially populating form setting value would likely sufficient still encountering issues rebinding feel free open new issue minimal plunker repo", "d": "10/2016"}, {"body": "robwormald thank reply regarding ngc want know whether control typescript compiler version settings pass pass typescript ngc use specific version wraps specific typescript version coupled regarding decorators issue tracking support user defined decorators abstract angular decorators orthogonal set decorators decorators enforce patterns conventions angular apps wrapping angular decorators obvious use case automatically create enforce package wide component name prefixes others well since ngc support know decorators angular specific match angular decorators name hope would violate javascript lexical scoping simple scenario awesomecomponentdecoratorsts typescript import component angularcore import template awesomecomponenthtml import style awesomecomponentless export const awesomecomponet target gt component template styles style selector snakecase targetname target consumerts typescript import awesomecomponet appsharedawesomecomponentdecorators awesomecomponent export class anawesomecomponent awesomecomponent export class anotherawesomecomponent", "d": "10/2016"}, {"body": "use case large form potentially tabs hides visually errors becomes unclear form invalid might go tab tackle error hence summary errors top form level helps lot making form valid", "d": "10/2016"}, {"body": "along krisa mentioned summary errors easily available nice trying log common problems users encounter via analytics", "d": "10/2016"}, {"body": "krisa create form group tab based group validity provide hints tab contains errors need details", "d": "10/2016"}, {"body": "manklu would work something simple case tabs actually dynamic sense placed within formarray unknown length even tabs tabs formarray formarray end one massive form need summary errors", "d": "10/2016"}, {"body": "got problem extremely confusing understand need distinguishing group errors could extra property containing child errors would help status child pending parent group know", "d": "10/2016"}, {"body": "kamarouski hey find solution need create remove arbitrary components dynamically want animate enter leave", "d": "10/2016"}, {"body": "oh actually working components insert display block style", "d": "10/2016"}, {"body": "entryroot component nt present page rather erroring maybe consolewarn would suffice even catching promise multiple exceptions occur respectfully disagree basically load js code browser saying bootstrap angular application element specific selector failing silently case could lead lot headscratching developers side thnx suggestion going pass got situation root component might exist check dom query presence bootstrapping know bootstrap know components css selectors", "d": "10/2016"}, {"body": "closed favor", "d": "10/2016"}, {"body": "opens couple interesting issues would create strong link coupling directives one directive would assume another present element make work component directives handle shadowing property bindings example plunker seems bit convoluted could make things working simply sure brings picture", "d": "10/2016"}, {"body": "pkozlowskiopensource might wrong sorry would create strong link coupling directives one directive would assume another present element would actually true since introduction ngmodule system generally say module already declares requirements directives components within module example example provided could simply say module contains directive would set property host element import statement example plunker seems bit convoluted could make things working simply sure srckeydirective brings picture think example might show usefulness well could nt reason explore possibilities since quite use cases think functionality would extremely useful another argument option example already sets properties even native properties like developers would seem natural would also work component directive well added example gave like vicb said longer works", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "repro gt closing issue", "d": "10/2016"}, {"body": "vsavkin vicb supposed add repro feature nt exist problem described clearly first comment ticket really nt understand got closed without statement", "d": "10/2016"}, {"body": "choeller flawed way quickly cleaning issues less deal", "d": "10/2016"}, {"body": "cause error component declared one module paths property see correct solution", "d": "10/2016"}, {"body": "choeller impression need add components may wrong repro would help", "d": "10/2016"}, {"body": "vicb nt put component error aot compiler remove error given strange way organizing code plunker see would get impression declaring components nt necessary", "d": "10/2016"}, {"body": "think example could way init value implement docheck see pagecomponent", "d": "10/2016"}, {"body": "tacked closing duplicate", "d": "10/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2016"}, {"body": "hello anyone know something release version use solve mythis problem thank", "d": "10/2016"}, {"body": "giancarloa reading entire thread even lot text sure understand real lifeuse case abstract examples given seem want get access parent given example like clear would like injected dom element instance component matches selector things could go even complicated got directive instances parent ex shell inject case feeling got idea angular internals way working nt match current design hard see could bridged since whole issue clear seems like looking publish parent component well known token di use token child components feel like crux issue mental model injection angular based directive instances elements multiple directives one parent element design injecting parent nt make sense one thing choose going close issue support request would suggest reaching one existing support channels others suggest angularway solving functional usecase", "d": "10/2016"}, {"body": "hello pkozlowskiopensource first foremost thanks taking time read respond frankly appeared dead request anyways thought explained real life use case certainly repeat different way order hopefully make clear several relatively new web apps whose views fully composed custom element directives created house mean example views instead seeing code like instead see code like custom element directive created runtime among many things produce simple based markup one example many directives like fngdropdownlist fngtypeahead fngcheckbox etc basically created layer abstraction views layer made web components implemented using directives understand part please let know try explain differently want course port web apps definitely many good reasons want relatively brand new apps many still active development going long life span provide lot value business makes sense think convert note face challenge reimplementing web components using words example want create versionimplementation fngtextbox web component ultimately trying create components implement interface directives understand part please let know clarify however important goal conversion process force consuming apps change viewshtmltemplates example following example nt want consuming apps notice markup two binding syntax embedded understand perfectly well box implementation would require using syntax nt want web apps number different reasons first important reason would lot work since total thousands views think amount work alone would cause various project managers reject idea upgrading second reason architectural want keep markup plain vanilla clean framework specifics future perhaps deal etc frankly although like lot fans new binding template syntax point want convert note problem becomes get data binding work much research believe answer involves using dynamic componenttemplates throughout short life many different time similar solutions dynamic componenttemplate problem plunkr posted initially thread uses looks like since final release came longer correct way instead looks like api correct choice regardless dynamic componentstemplates created problem remains obtain correct data binding context dynamic componenttemplate purpose request solve problem look link see author solves problem creating input binding obtain reference parent component order use reference binding context dynamic component although clever seems got ta better way opinion better way would framework inject parent component requested understand finish please allow clear doubts nt want dom element want parent component nt want instance component matches selector want parent component case would inject parent since parent parent component things could go even complicated got directive instances parent ex shell inject case look title request say parent component parent directive expert far actually understanding components thing directives believe component specializations directives template semantics believe components make app believe app tree components like tree structure child node one parent node suspicion want exactly correct publish parent component well known token di use token child components allow obtain reference parent component inside child component use reference data binding context dynamic componenttemplate guessing clean solution problem everything new known would appreciate greatly pkozlowskiopensource someone else could provide solution problem could point code documentation could use create wonders ca nt imagine ca nt thanks", "d": "10/2016"}, {"body": "sure removed provider combination trick", "d": "10/2016"}, {"body": "never first place tried without", "d": "10/2016"}, {"body": "inside component put sass gjuchault confused sass component ng compiler runs nt transformed css already could please try reproduce css top plunker linked empty default really hard see real issue need minimal reproduce scenario order act please check submission guidelines understand ca nt act issues lacking important information", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "sorry using routers time supported also router deprecated longer supported removed cut final", "d": "10/2016"}, {"body": "closing issue seems solution otherwise please reopen plunker reproduce", "d": "10/2016"}, {"body": "looking example passing decorator make sense supported angular also nt see using inheritance example closing issue ca nt act upon", "d": "10/2016"}, {"body": "keatontech could please verify still issue latest compilercli angular many changes past angular still issue could please put together minimal repository github reproduce little hope act one reproduce scenario thnx", "d": "10/2016"}, {"body": "oh sorry closed fixed ngmodule rolled thanks", "d": "10/2016"}, {"body": "eliezerreis add turn angular form registration helpers words directive never activated directive knows interact custom value accessors without using forms top level course wo nt know anything custom input expected behavior going close", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "generating flattened files check whether changed lot efficient easier debug however could create tool", "d": "10/2016"}, {"body": "sorry wo nt support use case", "d": "10/2016"}, {"body": "luchillo still issue", "d": "10/2016"}, {"body": "dunno using explicit however side issue repo suffice", "d": "10/2016"}, {"body": "problem persists final", "d": "10/2016"}, {"body": "spent time trying find changed chromium introduced crashing working crashing narrowed seems following commit updated given seeing crashes happening within chromium reports version builds links snapshots trials nt crash tab whereas builds memory balloons guessing oom takes care closest build", "d": "10/2016"}, {"body": "closing pipes use disclaimer bugs handled issues", "d": "10/2016"}, {"body": "fyi managed fix issue patching zonejs noeventtarget array also include websocket like looks like bug zonejs", "d": "10/2016"}, {"body": "yes annoying problem us null ngvalue would useful currently lot extra work deal nulls like kemsky stated looks like may fixed problem future release", "d": "10/2016"}, {"body": "submitting check one x current behavior set na produce empty string na produce na na produce null expecteddesired behavior able set motivation use case changing behavior nt want clean values manually every nullable field please tell us environment angular version browser language typescript receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "kara hey kara idea make release important issue us", "d": "10/2016"}, {"body": "amurtola issue following restart visual studio restore packages option appeared rightclicking packagesjson", "d": "10/2016"}, {"body": "seems general problem ie independent angular javascript application intercept user entering url address bar", "d": "10/2016"}, {"body": "still valid", "d": "10/2016"}, {"body": "actually duplicate based throw ngswitchcase ngswitchdefault direct children ngswitch closing duplicate", "d": "10/2016"}, {"body": "might circular dependency class yet declared try right declare check", "d": "10/2016"}, {"body": "seem related angular rather module system closing actionable", "d": "10/2016"}, {"body": "places compiler looking generally nt like many meanings angular closing please reopen feel strongly", "d": "10/2016"}, {"body": "seems work version typescript get following output", "d": "10/2016"}, {"body": "think issue fixed", "d": "10/2016"}, {"body": "brandonroberts sorry missing something considered broken nt importing routermodule bring rxjs observable stuff documented import additional functionality get component work seems weird one projects issue reason words exact bug situation works fine importing filter operator another project breaks", "d": "10/2016"}, {"body": "dudewad framework imports needs using observable need import operator rxjs used framework done importing function patching observable treeshaken needed likely reason works projects somewhere project already imported operator patched observable", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "problem also security issue case user supplied data break routes thinking treated bit urgency progress workaround speed things think one could change function modules hope right place code may also needed query params even places proper decoding params may also needed params injected component essentially want looking turned reasoning explained see last paragraph section called description going submit pr legal nonsense ruined anyone needing workaround use following pipe typescript import pipe pipetransform angularcore pipe name encodeuricomponent export class encodeuricomponentpipe implements pipetransform transform uricomponent string string return encodeuricomponent uricomponent replace g c gt also encode return ccharcodeat tostring fixes would nice see adopted angular correct solution may well wrong", "d": "10/2016"}, {"body": "really show stopper attempting utilize uri state eg examplecom sessionid gt wwwexamplecom match routes sessionid removes parenthesis error eta would helpful least notify manager issue", "d": "10/2016"}, {"body": "started using instead problem release version encodes url", "d": "10/2016"}, {"body": "something funky going look", "d": "10/2016"}, {"body": "getting compilation pug templates expressions template expressions never html element like plnkr snippet pug navbar navnavbarnavbardarkbginverse container anavbarbrand routerlink mdiconlogo svgsrc assetssvglogosvg ulnavnavbarnav routerlinkactive active ngif authisauthenticated async linavitem routerlinkactive active anavlink routerlink accountdashboard mdicon svgsrc assetssvghomesvg spanhiddensmdown account translate lang linavitem routerlinkactive active anavlink routerlink accountbusiness mdicon svgsrc assetssvglocationsvg spanhiddensmdown business translate lang linavitem routerlinkactive active anavlink routerlink accountcardreader mdicon svgsrc assetssvgdonglesvg spanhiddensmdown cardreader translate lang linavitem routerlinkactive active anavlink routerlink accountbank mdicon svgsrc assetssvgbanksvg spanhiddensmdown bank translate lang ulnavnavbarnavpullxsright linavitem ngif authisauthenticated async anavlink click clearbusinessdata track login loginmodalshow login translate lang linavitem ngif authisauthenticated async anavlink click authlogout logout translate lang hrhr separator container main routeroutlet fails using angular remove last expression making works", "d": "10/2016"}, {"body": "also valid directives also use docs need changed also fires directives notified components template processed", "d": "10/2016"}, {"body": "anybody community wants submit docs pr shlomiassaf", "d": "10/2016"}, {"body": "version latest doc stil throwing error tried everyting none working angularquickstart postinstall c typings install typings err message unable connect typings err caused getaddrinfo eaiagain typings err cwd c typings err system windowsnt typings err command c program filesnodejsnodeexe c install typings err node v typings err typings v typings err code eunavailable typings err need help may report error typings err npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch npm warn angularquickstart description npm warn angularquickstart repository field npm warn angularquickstart license field npm err windowsnt npm err argv c program filesnodejsnodeexe c install npm err node npm err npm npm err code elifecycle npm err angularquickstart postinstall npm err exit status npm err npm err failed angularquickstart postinstall script typings install npm err make sure latest version nodejs npm installed npm err likely problem angularquickstart package npm err npm npm err tell author fails system npm err typings install npm err get information open issue project npm err npm bugs angularquickstart npm err nt available get info via npm err npm owner ls angularquickstart npm err likely additional logging output npm err please include following file support request npm err c", "d": "10/2016"}, {"body": "bug made final version", "d": "10/2016"}, {"body": "think fixed moved seems nt need workaround anymore", "d": "10/2016"}, {"body": "based comments looks like issue fixed", "d": "10/2016"}, {"body": "pkozlowskiopensource angular still issue safari updates observable detected example using async pipe", "d": "10/2016"}, {"body": "angular still issue safari updates observable detected example using async pipe please open new issue fill issue template", "d": "10/2016"}, {"body": "metzc zonejs version u use", "d": "10/2016"}, {"body": "dzmitryshylovich", "d": "10/2016"}, {"body": "pkozlowskiopensource could narrow problem please tell think issue still angular related create new ticket using pouchdb custom change event call observernext within change callback angular stays blind safari template var async pipe gets updated next change detection run tried wrap observernext zonerun call starts working chrome also works without", "d": "10/2016"}, {"body": "metzc sorry ca nt say issue related angular without reproduce scenario", "d": "10/2016"}, {"body": "using pouchdb custom change event call observernext within change callback run callback inside", "d": "10/2016"}, {"body": "dzmitryshylovich yes thats thanks strange works perfectly chrome without zonerun", "d": "10/2016"}, {"body": "experienced essentially problem trying debug setup based ngrxobservables tl dr solution using tracking function ie unique identifier within immutable object ngfor iterates thanks vicb skycoding hint main reason going add little following case immutable array store slice fed observable using pipe custom component input custom component turn child components take properties input immutable inputs immutable reactive forms emit change events back component hierarchy dispatched back store reduction full circle unusual hard debug implication issue chrome edge crashed app somewhere inafter child components event handler ie stack traces consolelogs like angularcli hot reloaded firefox showed every hit essentially brand new render uninitialized always behavior occurred regardless whether change detection strategy used latter tried debug sure caused crashes suspect might something interaction reactive formgroupsformcontrols child components fixed across browsers nested new immutable parts overall data structure get refreshed already amazing docs angulario might worthwhile call immutables explicitly ngfor documentation content dom teardown already might extra prominence use case additionally callout implications using ngfor conjunction immutables lifecycle hooks section advanced topics cautionary tale warning api docs change detection strategy last two bullets checked first figure going crashes occurred hitting child components ngfor iteration said glad found issue solution", "d": "10/2016"}, {"body": "tomwanzek said solution use", "d": "10/2016"}, {"body": "removed angular final issue actually independent", "d": "10/2016"}, {"body": "thank tobias looking since old plunker nt work anymore updated angular final astonishment pleasure problem longer occurs global keyboard event one test longer handled two ones nt know problem vanished replacing based component creation reason since gone close issue", "d": "10/2016"}, {"body": "please use new method", "d": "10/2016"}, {"body": "think worth described official documentation nt find anything related except changelog", "d": "10/2016"}, {"body": "closing since well underway", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "way easily find name offender kemsky noted value right", "d": "10/2016"}, {"body": "issues error well issue occurs adding another element ngfor collection also instantiates layers child components way found debug comment lines code lines html error nt happen anymore surround settimeout able resolve errors changedetectorrefdetectchanges settimeout seems work consistently message get angular error actually completely different component also caused ngif check time consuming track caused expression changed checked previous value false current value true outputting property name error edit sometimes binding combination multiple properties may harder expected output ex ngif modelbooleanone amp amp modelbooleantwo", "d": "10/2016"}, {"body": "pkozlowskiopensource closed moved docs repo", "d": "10/2016"}, {"body": "thnx could please check still problem move case thnx", "d": "10/2016"}, {"body": "release version problem already ty", "d": "10/2016"}, {"body": "pretty serious surprising limitation mocked http calls using angularinmemorywebapi apparently uses setinterval behind scenes use angular async test try test fails use setinterval within async zone test feels like somewhat joke docs really pushes rxjs one actually listen use rxjs resulting code easily test using angular supported methods use plain old jasmine support done callbacks get tests observables running quite surprise much complicated expected", "d": "10/2016"}, {"body": "confirm still bug angular pretty annoying", "d": "10/2016"}, {"body": "would good guidance angular team regarding handle situation unit tests", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "foxandxss plnkr generator docs get created include polyfill example files need edit plnkrs manually", "d": "10/2016"}, {"body": "bit lost concrete plunker animation polyfills work everywhere others nt nt animations elsewhere", "d": "10/2016"}, {"body": "mistake looks like fixed", "d": "10/2016"}, {"body": "yep bug checking whether group pending calculate status rather descendants", "d": "10/2016"}, {"body": "shared form controls supported right naturally grouped controls like radio buttons shared registry text inputs sharing controls ngmodel option like synced likely add functionality reactive forms given workaround closing feel use case solved way please feel free open issue info use case", "d": "10/2016"}, {"body": "problem safari ie final release solution", "d": "10/2016"}, {"body": "also affects current extended support release esr mozilla firefox version mozilla offer extended support release esr based official release firefox desktop use organizations including schools universities businesses others need extended support mass deployments using angular workaround hook lifecycle event call repeat changing model select options afterwards temporarily fixes issue ff esr edge ie related", "d": "10/2016"}, {"body": "still getting behavior rc changedetectionstrategy set onpush ngoninit called module lazily loaded dynamic resolution fix", "d": "10/2016"}, {"body": "might want open another issue noticed issue appears fixed plunker created issue bit mess nt pin versions systemjs configuration pinned created another another plunker using plunker using plunker using issue nt reproducible closing still problem likely differs one prompted issue", "d": "10/2016"}, {"body": "would mind sending pr thanks rush would due breaking change", "d": "10/2016"}, {"body": "hi using recently released version issue still happening removed prevent submit fire twice", "d": "10/2016"}, {"body": "tbosch working", "d": "10/2016"}, {"body": "matsko trying getting error import component directive input output eventemitter hostlistener hostbinding trigger transition animate style state angularcore directive selector swuioverlay host class swuioverlay styles animations trigger overlaytransition state active style opacity visibility visible state inactive style visibility hidden opacity transition gt active animate easein transition gt inactive animate easeout export class overlaydirective hostbinding overlaytransition get animationstate return thisvisible active inactive input visible boolean false hostbinding stylezindex input zindex number output onclick new eventemitter hostlistener click backdropclick thisonclickemit true gives coursing switching works fine", "d": "10/2016"}, {"body": "edit found workaroundsolution found workaroundsolution return false submit function html type script stackoverflow stackoverflow origin history hi problem wan na submit form modal using forms refresh navigate another route probleme case using modal nt want refreshnavigate url url updated form fields without form tag ca nt submit enterpresskey without naming fields form url still updated workaround welcome thanks", "d": "10/2016"}, {"body": "preventing default event returning false prevent native behavior form submit closing seems like support request", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "seems like issue reopened accident please let us knowthanks", "d": "10/2016"}, {"body": "filed issue quickstart please follow status updates issue", "d": "10/2016"}, {"body": "routerconfig providerouter available anymore change", "d": "10/2016"}, {"body": "routerconfig providerouter deprecated removed prior release", "d": "10/2016"}, {"body": "brandonroberts thank comment similar problem calling method bootstrapping app using upgrade adapter know would workaround thank advance", "d": "10/2016"}, {"body": "brandonroberts updating angular solved issue", "d": "10/2016"}, {"body": "yes restrictions longer exists version router", "d": "10/2016"}, {"body": "sroucheray thanks detailed issue describe certainly common valid use case ways support current system jmcgoldrick mentioned generally correct level handle validations require checking sibling controls parent group either write validator group level disable one location options user interacts zoechi suggested given alternatives nt think breaking change huge confers enough benefit current behavior make sense forms", "d": "10/2016"}, {"body": "throw", "d": "10/2016"}, {"body": "working angular still meeting issue", "d": "10/2016"}, {"body": "dharders plunker reproducing issue", "d": "10/2016"}, {"body": "vicb listed see workaround gets implemented issue would go away", "d": "10/2016"}, {"body": "nt think issue makes sense context new router angularrouter think case please reopen", "d": "10/2016"}, {"body": "fixed master", "d": "10/2016"}, {"body": "according documentation activatedroutesnapshot contains future route activated routerstatesnapshot contains future routerstate application pass guard check right shows current url future one bug feature request vsavkin seems linked ticket bug report sample plunker correct one keep open fix nt", "d": "10/2016"}, {"body": "hi maduser similar problem find suitable solution child nested routes", "d": "10/2016"}, {"body": "able implement artificial solution dummy component", "d": "10/2016"}, {"body": "general problem bit another need animate reusable card component route chanages eg tree routable components app page page page page page page page routing accordingly template components consists need animation mycardcmp component creationdestruction route changed eg transform scale vice versa expect behaviour like go gt mycardcmp page component page page page scaled page press link aka got gt mycardcmp components going destroyed route change page page scaled mycardcmp page scaled matsko possible implement animation behaviour somehow latest angular version possible implement future functionality estimates push request main angular repo thank advance", "d": "10/2016"}, {"body": "hello everyone first suggestions helpful afraid facing issues implementing smooth page transition angular highly appreciate anyone share thoughts around currently background component able configure based page transition outside routeroutlet whenever route change happens change file name background image b route change see content current route leaving screen new content arriving top ideally happen current screen slide left new screen slide left right hand side lt sliding left lt current route lt new route lt screen display c way outofthebox order route parentchildgrandchild go parent child lt sliding left lt parent child lt child route lt screen display go child parent sliding right lt parent child lt child route lt screen display", "d": "10/2016"}, {"body": "could use custom routeroutlet adds removes animation completed supported box receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "feature coming soon", "d": "10/2016"}, {"body": "exact feature mean function returns animation trigger used host binding routable component interested functionality child components animation provide functionality eg context angularconnectdemos possible collapse content route changed matsko please comment matter thx", "d": "10/2016"}, {"body": "readme matias demo repo states animations use demo using custom api still developed also matias talking demo repo animationqueryast thing yet available file changelog also mentions animations commit introduces aliases used instead nt see anything nt remember hearing anything specific coming conference video either sure got information", "d": "10/2016"}, {"body": "yes referring routing demo yes development part animation hoping coming soon changed original post regards", "d": "10/2016"}, {"body": "news", "d": "10/2016"}, {"body": "almost api allow finding route view containers inserted removed via trying get work like also looking getting api together allows child components animate well within context view change", "d": "10/2016"}, {"body": "one quick question background component controls background images outside routeroutlet gents new angular love working b currently middle major rewrite emberjs c current ember page transition done already spent hours angular animations get solution thumbs post helping nt like anything please let know stop", "d": "10/2016"}, {"body": "matsko thank answer pls clarify one thing used child reusable components animation described", "d": "10/2016"}, {"body": "guess contributing got question problem", "d": "10/2016"}, {"body": "one thing noticed components may absolutely positioned dom animate animating nt seem issue", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "right native way router renavigate active route common ux use case user wants reload content page clicking current active nav item feature put back router chance thanks help", "d": "10/2016"}, {"body": "love angular comes ca nt believe feature many people probably relying would dropped like really hope future release router bring back routercanreuse feature meantime come following code get thoroughly tested someone might find useful basically created abstract class basecomponent components create inherit basecomponent provides two purposes solves routercanreuse issue calling abstract init method inheriting class every time params change abstracts away need subscribe activatedroute get params queryparams inheriting classes simply access params queryparams variables instead worry subscribing fyi code work aot pointed dzmitryshylovich export abstract class basecomponent paramssub null params null queryparamssub null queryparams null constructor protected router router protected route activatedroute ngoninit thisparamssub thisrouteparamssubscribe params gt thisparams params thisinit thisqueryparamssub thisroutequeryparamssubscribe queryparams gt thisqueryparams queryparams abstract init ngondestroy thisparamssubunsubscribe thisqueryparamssubunsubscribe", "d": "10/2016"}, {"body": "code work aot u simplify code see subscriptions also put together call unsubscribe one subscription may unsubscribe multiple subscriptions adding one subscription another", "d": "10/2016"}, {"body": "dzmitryshylovich thanks feedback nt started using aot yet curious code would nt work aot thanks", "d": "10/2016"}, {"body": "angular nt support inheritance yet", "d": "10/2016"}, {"body": "dzmitryshylovich ah thank pointing", "d": "10/2016"}, {"body": "reading issue confused docs say routes mapping component reuse component default without throwing away existing dom confirm code router ngoninit rerun every route change extra confusing since routeparams observable since gets scrapped every reload might well use snapshot bug docs wrong either answer fine need know whether patch locally gets fixed upstream architect app differently update correction behavior multiple entries pointing component works expected situation collection master detail component reinits example groups heroes route setup would reinits component even though multiple route entries resolve component docs make sound like router smart enough know scrap dom", "d": "10/2016"}, {"body": "jamesmfriedman expected behavior parameter values change component reloaded please provide plunker allows reproduce probably better create new issue exactly issue", "d": "10/2016"}, {"body": "router nt work like angular", "d": "10/2016"}, {"body": "angular", "d": "10/2016"}, {"body": "features must changed even work fine xd", "d": "10/2016"}, {"body": "complete rewrite quite different works better nobody forces", "d": "10/2016"}, {"body": "jonijnm u nt like official router impl u use ui router", "d": "10/2016"}, {"body": "obviously completely new framework default reuse behavior extremely surprising bug prone whether used older versions angular expect complaints issue threads continue default made sensible", "d": "10/2016"}, {"body": "please provide minimal plunker repro thanks", "d": "10/2016"}, {"body": "agree nt really know way solve problem since waiting system callback point test pointer instruction since invoked delegete calls back way unless tell wait nt way back", "d": "10/2016"}, {"body": "pointed use shared service pass data implemented able set arbitrary data navigating", "d": "10/2016"}, {"body": "moving nt multiple related issues", "d": "10/2016"}, {"body": "sod still bad idea u care performance ofc", "d": "10/2016"}, {"body": "dzmitryshylovich like point pretty awesome feature vuejs computed values computed properties cached recomputed reactive dependency changes would holy grail use functions angular change detection optimizes performance", "d": "10/2016"}, {"body": "vicb updates issue", "d": "10/2016"}, {"body": "michaelchiche custom value accessor dictate internal state includes control status classes inner workings encapsulated parent form sometimes may beneficial keep everything synced especially case value accessor contains multiple child controls like address accessor keep classes needs explicitly implemented case always like custom control required minlength validators add validators inner input provide ngvalidators top parent simply input properties builtin validators closing works intended said looking simplify writing value accessors future keep case mind potential pain point thanks reporting", "d": "10/2016"}, {"body": "use mechanism inject locale content components templates served server side cms would nice override sanitizer level", "d": "10/2016"}, {"body": "sure thing fixing takes time time anyone know workaround find children components initialized", "d": "10/2016"}, {"body": "issue add components dynamically querylist get updated even calling length manually reflect new component", "d": "10/2016"}, {"body": "moniuch workaround go get element init import directive eventemitter output oninit angularcore directive selector init export class initdirective implements oninit output init eventemitter new eventemitter", "d": "10/2016"}, {"body": "rather complex application components react series global events event history changed ie undo waay complicated atomic undos reload everything new event history currently working around simply calling", "d": "10/2016"}, {"body": "updates", "d": "10/2016"}, {"body": "looking forward runtime control animation styles currently rely jquery custom animations messy available soon", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "fix something like", "d": "10/2016"}, {"body": "someone looking working solution based previous examples never blindly trust code snippets internet sunshineo might help", "d": "10/2016"}, {"body": "alexbyk forwarding project kind code used", "d": "10/2016"}, {"body": "closing duplicate", "d": "10/2016"}, {"body": "confirm still issue release usergivenname userfamilyname routine never triggered observed item never fires network request", "d": "10/2016"}, {"body": "done", "d": "10/2016"}, {"body": "hi work started one", "d": "10/2016"}, {"body": "gon na done", "d": "10/2016"}, {"body": "plans guard properly handle observable problem need wait login happen telling guard true false user goes straight url defined route say admin canactivate called nt user rights yet default false login check made triggered automatically comes back saying yes admin rights set observable true router determined accessible router component show user click link manually get admin page since canactivate true works annoying ca nt go straight admin page typing url", "d": "10/2016"}, {"body": "crowmagnumb would try following approach service determines whether user admin able access canactivate function guard class method declare canactivate function guard class method security service determines user admin privileges would set value something similar case user information comes part page load server initial value provide therefore using behaviorsubject instead replaysubject capacity sense two different exception former requires initial value constructor latter allows value also performed test introducing delay canactivate method proved router wait value observable becomes available decide whether navigate respective route based value hope helps", "d": "10/2016"}, {"body": "shoud closed", "d": "10/2016"}, {"body": "vicb agree closing issue however please look comment think current pull request missing important ability set dynamic properties event listeners cmiagssh since suggested look well", "d": "10/2016"}, {"body": "using two directives element resizable draggable binds mousedown event host element passes event parameter resizable directive mousedown runs first draggable calling eventstopimmediatepropagation resizable draggable mousedown event still running whats solution", "d": "10/2016"}, {"body": "need sanitize name browsers happy", "d": "10/2016"}, {"body": "take one current line thinking form reversible escaping necessary wo nt conflicts components withwithout special characters", "d": "10/2016"}, {"body": "still problem template expression causes exception real way catch far know understand lot cases would due code defensive enough nobody wants rely upon ultra defensive coding think use case op absolutely valid", "d": "10/2016"}, {"body": "solution guys use displays time times pm", "d": "10/2016"}, {"body": "felipedrumond seeing issue edge sure referenced issue closed due fixed issue still exists", "d": "10/2016"}, {"body": "also experiencing issue datepipe angular ie formatted", "d": "10/2016"}, {"body": "provide solution creating pipe simple solves problem fix issue import pipe pipetransform angularcore pipe name customdate export class datapipe implements pipetransform transform value string type string string dd mm yyyy pipe displays ddmmyyyy ddmmyyyy hh mm ss", "d": "10/2016"}, {"body": "also another work around folks uses date pipe something project perfect better broken recommend using short pm shortdate shorttime pm formats seem work ie edge well browsers also support locale get formatted datetime area good workaround gets fixed", "d": "10/2016"}, {"body": "another workaround moment available following creates datex pipe uses moment formatter instead angular one import pipe pipetransform angularcore import moment moment pipe name datex export class datexpipe implements pipetransform transform value string format string string value value return return moment value format format usage work correctly exampledate something parsed default moment parsing rules see moment documentation return empty string something falsey passed", "d": "10/2016"}, {"body": "user provides custom format string like mm ss angular intlts file call intldatetimeformatformat multiple times extract time component individually aside proposed ecmascript internationalization api formattoparts method would probably eliminate need calls along minute seconds issues described also seems always get minutes component back requesting format hour edgeie got fix locally issues using date get timecomponent functions broken scenarios vicb would approach like suitable pr", "d": "10/2016"}, {"body": "breaking change make end nt think cost justifies benefit closing issue", "d": "10/2016"}, {"body": "issue fixed master", "d": "10/2016"}, {"body": "maybe relevant append method urlsearchparams", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "currently nt really good idea current mode work simple things one language", "d": "10/2016"}, {"body": "sure bug systemjs rxjs angular really annoying workaround work might incorrect configuration systemjs even tried create sfx bundle ended error original bundle run special edge case tutorial gulp script copy moment js files rxjs build directory let systemjs load one piece another real solution problem", "d": "10/2016"}, {"body": "currently pycharmwebstorm suggests import observable rxjs selfbundled version rxjs systemjs find rxjs get following error anybody systemjs configuration solves problem works inconvenient change imports manually find problem facing error", "d": "10/2016"}, {"body": "created plunker shows issue fork tour heros router live example three modifications link add script indexhtml add rxjs paths sytemconfigjs comment rxjs npm rxjs systemconfigjs", "d": "10/2016"}, {"body": "unlight really great advice works angular rebundled rxjs kb", "d": "10/2016"}, {"body": "problem still exist angular router vicb update labels nt think accurate bug opinion major issue since occurs even tutorial using bundled rxjs file verify bug rxjs", "d": "10/2016"}, {"body": "mhdev rebundled file works sure", "d": "10/2016"}, {"body": "quote workaround work might incorrect configuration systemjs blocked bug since workaround loading sub file change issue labeled correctly", "d": "10/2016"}, {"body": "mhdev sure wanted know problem systemjs config contain rxjs loading rebundled rxminjs script tag indexhtml interesting problem side simplicity", "d": "10/2016"}, {"body": "upload rebundled file test maybe something wrong creation bundle back home created bundle nothing systemjs file related rxjs either test still issue", "d": "10/2016"}, {"body": "mhdev version used minify kb mangle originally kb maybe difference rxzip", "d": "10/2016"}, {"body": "seems miss something needs done using file created plunker based router tutorial live example adds file disables rxjs system js config see", "d": "10/2016"}, {"body": "comment lines systemjsconfigjs commented plunk working", "d": "10/2016"}, {"body": "ok use fix problem local setup setting package triggered default rxjs thanks help bug remains still open opinion", "d": "10/2016"}, {"body": "yes sure think problem original package rxminjs somewhere due mangling evident bug issue created idea place exactly wrong without understanding hard describe properly", "d": "10/2016"}, {"body": "another issue directly related thread using bundles app beginning dev particularly using bundle together rxjs bundle unit tests issue directly imports rxjsoperatorstake exported rxjs bundle ended following error fixed like reexport back one source files map export systemjs config worked well still believe import fixed code", "d": "10/2016"}, {"body": "exit transition also ignored component detached ngif", "d": "10/2016"}, {"body": "problem moz prefixs mozilla ignoring use", "d": "10/2016"}, {"body": "facing similar challenge posted question wanted reference", "d": "10/2016"}, {"body": "already fixed", "d": "10/2016"}, {"body": "even issue replaced click event ngmodelchange event working fine", "d": "10/2016"}, {"body": "hello zoechi hello ericmartinezr recent release anyone know solution problem thanks", "d": "10/2016"}, {"body": "currently facing kind error typescript error friendknowsneonfriendknows salesfriendknowssalesappui componentsfileuploadfileuploadmodulets error module fr iendknowsneonfriendknows salesfriendknowssalesappuinodemodules angularc ommonindex exported member commonmodule related angular upgradations", "d": "10/2016"}, {"body": "would nice could host binding tho got several places like", "d": "10/2016"}, {"body": "fixed pr automatic angulario generate plnkrs", "d": "10/2016"}, {"body": "nt think build something core something could enforce external tools ie codelyzer", "d": "10/2016"}, {"body": "chuckjaz still issue", "d": "10/2016"}, {"body": "yes", "d": "10/2016"}, {"body": "thanks reporting issue able reproduce problem believe issue obsolete due changes recent releases please update recent angular version problem still persists please file new issue ensure provide version angular affected include steps reproduce problem filling issue template", "d": "10/2016"}, {"body": "ensure compatibility latest stable version via dts file transformations tests angular guarantee compatibility ts something dts files nt work typescript please file new issue provide steps reproduce problem thanks", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "seems issue opened last router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "vsavkin actually issue still makes sense router would suggest reopen sure op illustrates valid case route reloading reasons reload routes angularjs still one beauties resolvers inherited unwrapped route component init available eg need unwrap promises observables manually works alternating routes route fired twice even different params route resolvers fire route component refreshed circumstances route component view needs refreshed resetting forms destructive dom manipulations nonangular code etc currently manual suggests hacky way regular component becomes even messier packed yes option methods necessary cases empirically found route considered dirty gets new object relevant route object workaround use ugly works", "d": "10/2016"}, {"body": "issue specifically ability refresh scenario following let say route shows companies associated account thus requires fetches companies shows employees selected company thus requires fetches employees selected company problem route user navigated first select company go good correctly resolved companies navigate back still problem arises say user goes say page directly without going page resolved correctly parent route never actually instantiated angular nt chance inject returns user finally navigates back problem occurs say user switches company say already resolved companyid nt bother trying reresolve end wrong data injected issues think ability purge caches largely reset route configs bisubus workaround works nice support builtin feature", "d": "10/2016"}, {"body": "christiandreher fank ckemmler marcalj dagerber esinek cookbook release angulario", "d": "10/2016"}, {"body": "ocombe new web angular reload app runtime", "d": "10/2016"}, {"body": "plans making work modules far get empty messagesxlf", "d": "10/2016"}, {"body": "sorry cookbook says copy files manually", "d": "10/2016"}, {"body": "yandreiy think possible moment read comments select define html attributes elements tagged texts get extracted ps wrote blog post workflow angular amp angular", "d": "10/2016"}, {"body": "modules main app module import directly lazy loaded module would make difference nt think app module want use component sense make shared module plus sure would fix though nt tried available use anywhere template component running fails complete log open issue bug need different approach", "d": "10/2016"}, {"body": "summarized automatic workflow blog everything automatically like copying files merging existing translations etc hope helps", "d": "10/2016"}, {"body": "mrcroft precise issue", "d": "10/2016"}, {"body": "mrcroft issue please create new ticket first polluting one pay attention said problem fixed latest commits offline compiler extractor release coming days try", "d": "10/2016"}, {"body": "pls provide working reproduction", "d": "10/2016"}, {"body": "answer since june think closed", "d": "10/2016"}, {"body": "thnx dzmitryshylovich", "d": "10/2016"}, {"body": "reproduce closed", "d": "10/2016"}, {"body": "dzmitryshylovich thanks help details see original comment closed fix reverted introduced issue fix reverted still fixed proper way", "d": "10/2016"}, {"body": "need use eventemitter child component emit event said way communicate child parent eventemitter alternatively could also use kind message bus", "d": "10/2016"}, {"body": "anyone stumbling later like things seem changed bootstrap process seems like add provider core module updated example implementation typescript export function initapp firstservice firstservice secondservice secondservice initing services required app loads note factory needs return function returns promise return gt firstserviceload services ngmodule providers firstservice secondservice provide appinitializer usefactory initapp deps firstservice secondservice multi true export class coremodule", "d": "10/2016"}, {"body": "issue nt closed problem still present update notice npm package renamed current name angularinmemorywebapi versions shipped name sure update packagejson import statements", "d": "10/2016"}, {"body": "fix end making sure httpmodule added first inmemorywebapimodule", "d": "10/2016"}, {"body": "indeed static compile time content projection selector known compile time", "d": "10/2016"}, {"body": "feature probably come angular job css preprocessors said investigating using postcss css parser angular could help making simpler", "d": "10/2016"}, {"body": "activation done via guards new router closing issue", "d": "10/2016"}, {"body": "angular repository angular supports support complex selectors eg please file issue githubcomangularangularjs repository angular", "d": "10/2016"}, {"body": "landed master although without support custom decorators", "d": "10/2016"}, {"body": "seems issue opened last router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "problem memory freed using much", "d": "10/2016"}, {"body": "one looks pretty stale given using still problems ie postfinal version please open new issue updated plunker worth noting pr right range value accessor might want wait get case resolves issue", "d": "10/2016"}, {"body": "seems issue opened last router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "hi scott thanks reaching particular issue suitable issue tracker want systemjs reuse resources across iframes please file issue system", "d": "10/2016"}, {"body": "thanks reporting looks like dupe keep one open since activity", "d": "10/2016"}, {"body": "believe issue obsolete ca nt reproduce issue still persists please open new issue provide steps reproduce problem", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "thanks reporting issue issue obsolete due changes recent releases please update recent angular version problem still persists please file new issue minimal repro plunker", "d": "10/2016"}, {"body": "dynamic forms try angular formly", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "kelvinrolex tks much worked", "d": "10/2016"}, {"body": "proposed solution issue albeit angular version idea instead ability add directives compilation framework would new extensibility point called hosttransforms case angular nodetransforms would access unmodified unfiltered component declaration original uncompiled component host node whenever component first encountered compiler prepared insertion dom way developer could extend component decorators custom properties use nodetransforms convert custom properties something angular framework familiar compilation check feature request thread examples familiar angular source code angular source code sure implementation process would since seems pretty popular request love see either implemented angular backported implemented angularjs forwardported thing", "d": "10/2016"}, {"body": "try corejs instead fix issue please include small repro latest angular version thanks", "d": "10/2016"}, {"body": "yes issue nt occur corejs used closing", "d": "10/2016"}, {"body": "think issue relates parameter decorator inheritance", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "hi facing issue even router v trying redirect oninit routernavigate returns false ca nt find insert settimeout works idea would appreciated", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "ngondestroy hook notifies component destroyed decision destruction already made ca nt changed however question remains possible emit events via emitter component first sight nt look unreasonable need make sure provide guarantee events always fire fire right time needs investigation", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "aot compilation squashing modules via rollup addresses problem cli features enabled default future releases meantime possible set via build pipeline", "d": "10/2016"}, {"body": "igorminar looks like current build cli thank helping make sure got fixed", "d": "10/2016"}, {"body": "issue made obsolete router particular feature available router", "d": "10/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "10/2016"}, {"body": "issue adams workaround", "d": "10/2016"}, {"body": "u share details ca nt seem able reproduce", "d": "10/2016"}, {"body": "project submodules submodule modulnameroutingmodulets file example userroutingmodulets file looks like const routes routes path user pk component consultcomponent canactivate authguard path home component homecomponent canactivate authguard children path redirectto coachs pathmatch full path coachs component homecoachscomponent path athletes component homeathletescomponent path settings component settingscomponent path firstsignin component firstsignincomponent canactivate authguard ngmodule imports routermoduleforroot routes exports routermodule export class userroutingmodule usermodulets file looks like ngmodule imports commonmodule formsmodule userroutingmodule lt user routing imported declarations providers exports export class usermodule finally appmodule import user module nothing else code concerning routing works well appart problem backforward navigation", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "yeah tested repro plunker definitely major problem essentially possible extend core pipes far tell", "d": "10/2016"}, {"body": "updated repro vicb let know open new issue", "d": "10/2016"}, {"body": "chrisnicola thanks update description plunker amp analysis", "d": "10/2016"}, {"body": "relates", "d": "10/2016"}, {"body": "already fixed", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "issue fixed please try latest angular zonejs problem persists please open new issue thank", "d": "10/2016"}, {"body": "relates", "d": "10/2016"}, {"body": "import component build using cli get safeurl found angularplatformbrowser missing", "d": "10/2016"}, {"body": "fixed master", "d": "10/2016"}, {"body": "sorry nt understand problem problem still exists please open new issue provide plunker reproducing problem use template", "d": "10/2016"}, {"body": "hi guys sounds interesting looking improve performance website current status custom angular builds making making build angular v", "d": "10/2016"}, {"body": "try update ngeurope fri oct gerard lamusse notifications githubcom wrote hi guys sounds interesting looking improve performance website current status custom angular builds making making build angular v receiving assigned reply email directly view github mute thread", "d": "10/2016"}, {"body": "hi took crack getting upgraded angular couple weekends ago got way example works simple optimizations advanced optimizations longer actively working another team lucid spoke today wants take crack soon get another free weekend like finish moving whoever gets first meantime would like bit info check blog post wrote hope helps run issues want bounce questions please feel free likely going bit adventure hooking build system though best luck", "d": "10/2016"}, {"body": "update ngeurope chance realizing tree shaking tree shake reexports angular requires importing reexports quite bummer obvious thought oh tsickle thought pipe ngc tsickle webpack gcc advanced instead ngc webpack gcc simple realize tsickle converts importrequire googrequire easy webpack nongoogle bundler really integration currently angular core forms router platformbrowser common taking main bundle ngc minified gzipped ouch love see tsickle working webpack clearly even angular cli team think webpack great choice open suggestions one otherwise take deeper look jjudd work hate waste time official solution horizon perhaps", "d": "10/2016"}, {"body": "twitter feed seems content get outlook android fri oct steve sewell notifications githubcom wrote update ngeurope chance realizing webpack tree shaking tree shake reexports angular requires importing reexports quite bummer obvious thought oh tsickle thought pipe ngc tsickle webpack instead ngc webpack realize tsickle converts importrequire googrequire easy webpack integration currently angular core forms router platformbrowser common taking main bundle minified gzipped ouch open suggestions one otherwise take deeper look jjudd work hate waste time official solution horizon receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "update serious discussion ngeurope robwormald hansl others pkozlowskiopensource skeptical external community would embrace new toolchain rather improving existing one think first step angularcli work improve webpack better job time would still like canonical seed project demonstrates using closure compiler sure mean breaking bundler since closure compiler bundler statements appear output jjudd anyone lucidchart interested collaborate unroll hacks make possible external community repro app", "d": "10/2016"}, {"body": "alexeagle currently use webpack lot things bundling code splitting preprocessing linting hashing gzipping similar angular cli lot popular open source angular webpack starters really love keep webpack everything esp bc leverage lot community plugins make complex tasks simple configurable rather reimplement everything currently say gcc gulp love able able swap tsickle tsc add jsdoc annotations transpilation needed advanced mode minification currently use webpack gcc plugin simple mode minification really appreciate update though eager track progress angularcli team makes webpack toolchain", "d": "10/2016"}, {"body": "tools want able operate closureannotated googmodule code hand gcc plugin", "d": "10/2016"}, {"body": "alexeagle thanks update talk people see interest example example repo built thinking", "d": "10/2016"}, {"body": "sounds like great thing cli wraps webpack bunch plugins existing new would awesome cli could use closure compiler hood instead uglifier abstracted away user either way", "d": "10/2016"}, {"body": "jjudd yeah best right pinned particular old version dependencies right also need explain use externs nonclosurecompatible dependencies", "d": "10/2016"}, {"body": "true actively working moving latest version angular right hopefully done soon post update get done", "d": "10/2016"}, {"body": "alexeagle well frankly webpack built around modules lot features nt work properly modules nt format quick ones come mind url loader import assets typescript html simply webpack handles copying hashing compressing loading images needed automatic code splitting eg using router loader like one systemimport throughout code easy lazy loading content various loaders example use import loader material material currently window references find typescript helpers like must rewrite example even things like really work elegantly less hackily webpack handling bundling intended various plugins example html plugin produce base indexhtml running full buildbundle since aware entry javascript files created including full paths hashes produces root html template correct script urls hashes etc appropriately frankly implemented similar stuff plenty times anything makejakefiles grunt gulp etc never nearly seamless solid build tooling experience using webpack esp amount code must write maintain build love see tsickle allowing common open source land module formats integrate tools like webpack tl dr webpack depends using commonjs amd es imports quite awesome system loaders plugins lot great things long webpack understand modules common javascript formats unfortunately include modules lmk anything else help answer even code contributions make try use tsickle tools webpack eager get going however possible thanks", "d": "10/2016"}, {"body": "reason currently hand syntax closure compiler bugsmissing features modules last time checked support example team indicated interested supporting modules since nt work natively browsers need take ts code steps bundlingtreeshakingminifying closure compiler need fix module support closure compiler nt think anyone owns right", "d": "10/2016"}, {"body": "good know thanks alexeagle found docs suggesting gcc supports commonjs modules well test bit find maybe implemented less buggy modules currently poke around see maybe possible make goog module conversion optional tsickle way get benefits gcc advanced minification jsdoc type annotations pulled typescript commonjs modules think would certainly nice rest community thanks info helpful", "d": "10/2016"}, {"body": "discussed inperson bug closure compiler could easily make tsickle option flatten postprocessing step could also add jsdoc annotations include distributions", "d": "10/2016"}, {"body": "designed work input property including currently required probably going stay way terms priority benefit weighs actual work tricky keep open", "d": "10/2016"}, {"body": "issue obsolete testcomponentbuilder replaced testbed still face similar issue testbed please file new issue describe steps reproduce problem thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "implemented new router", "d": "10/2016"}, {"body": "feel pretty cumbersome create shared service pass object route", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "error angularcompiler npm registry suggests visual studio using older version npm update latest installed version npm tools options open options dialog tree left select projects solutions external web tools right move path entry devenvdir entries tells visual studio use external tools npm found path using version external tools click ok close dialog restart visual studio change take effect", "d": "10/2016"}, {"body": "issue fixed master possible use new router hybrid applications", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "solved", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "pkozlowskiopensource said create nested component", "d": "10/2016"}, {"body": "issue made obsolete router believe case please file new issue updating description router thank", "d": "10/2016"}, {"body": "relates", "d": "10/2016"}, {"body": "ok good watched thousand times seen sign equality lol thank", "d": "10/2016"}, {"body": "plunker latest ng version could anyone within est time zone confirm still issue", "d": "10/2016"}, {"body": "yes still problem est formatted mar actual thu apr eastern daylight time formatted apr actual fri apr eastern daylight time alternate extra hour formatted apr actual thu apr eastern daylight time", "d": "10/2016"}, {"body": "interesting note try call gets called expected shown snippet edit quick guess dirty temporary workaround could", "d": "10/2016"}, {"body": "year writing components using component approach making heavy use lifecycle methods understanding would simplify conversion process upgrade documentation angulario recommends explicitly find upgrade adapter nt even bridge events left open issue months hell going anybody supposed upgrade reasonably sized app basic stuff like broken", "d": "10/2016"}, {"body": "obsolete removed", "d": "10/2016"}, {"body": "vicb timeline fix suggested workarounds happy assist fix well context get started would helpful", "d": "10/2016"}, {"body": "zachcarroll help would appricated issue event structure across browser would need normalize key events probably resources libs already needs research", "d": "10/2016"}, {"body": "also think difference handling according event downup amp press see example", "d": "10/2016"}, {"body": "alright vicb thanks context get started next day two", "d": "10/2016"}, {"body": "google javascript normalize key events seems like interesting results", "d": "10/2016"}, {"body": "dupe please subscribe", "d": "10/2016"}, {"body": "ticking twice working confirm still issue testing observable debounce seemingly impossible current state play ps also tried testscheduler luck either issues time based observables", "d": "10/2016"}, {"body": "closed still experiencing issue", "d": "10/2016"}, {"body": "please add repro based", "d": "10/2016"}, {"body": "vicb see previous comment choeller example failing test", "d": "10/2016"}, {"body": "reproduce using express server looks like issue related webpack dev server treated urls dots file names issue cli tl tr add webpack dev server config", "d": "10/2016"}, {"body": "seems issue opened router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "closing reproduce", "d": "10/2016"}, {"body": "vicb issue resolved latest release", "d": "10/2016"}, {"body": "please provide details still error obvious demo wrong", "d": "10/2016"}, {"body": "tbosch demo first click button text update click text update time text current click time last", "d": "10/2016"}, {"body": "pkozlowskiopensource given sure want reflect certain validation rules back dom reflect aria attributes validations", "d": "10/2016"}, {"body": "awiseman actually planning support see initial discussion closing dupe", "d": "10/2016"}, {"body": "seems issue opened router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "seems issue opened router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "luck still also facing problem running prod mode used corejs instead shimjs still cant find major differences render time", "d": "10/2016"}, {"body": "see also", "d": "10/2016"}, {"body": "seems issue opened router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "nt think issue still makes sense context new router angularrouter think please reopen plunkr reproducing issue", "d": "10/2016"}, {"body": "added latest stable version site less things processing memory leak high even removing components", "d": "10/2016"}, {"body": "ralfesoftware possible create twoway binding local template variable want bind domain model directly eg items item still able bind objects options using ngvalue though", "d": "10/2016"}, {"body": "thanks clarification greetings ralf von kara notifications githubcommailto notifications githubcom antworten angularangular reply replygithubcommailto reply replygithubcom datum oktober angularangular angular noreplygithubcommailto angular noreplygithubcom cc ralf ehlert ralf ralfesoftwarenetmailto ralf ralfesoftwarenet mention mention noreplygithubcommailto mention noreplygithubcom betreff angularangular ngmodel within ngfor results exception reassign variable binding closed receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "seems issue opened router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "e phone home", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "try running command npm run tsc check typescript mentioning error code error resolved able start", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "could please add repro plunker", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "outdated", "d": "10/2016"}, {"body": "templth would advise customcomponent friends break offline compile please look discussed depth basic gist composition better inheritance would love see blog post discusses composition intended work would willing work article yes would happy explain details limitations work mhevery seem contradictory statements addition severe limitation fact custom decorators work aot completely orthogonal questions inheritance composition completely agree composition preferable inheritance fact composition far superior point decorators literally conceptually composition technique inheritance technique one thing decorators literally syntactic sugar function composition chained sugar composition produce new values aggregate information return decorator basically saying inheritance problematic thusly inheritance decorators problematic buy argument need use decorators classes extends clause wrap common behavior abstracting decorators since inheritance decorators supported since abstract angular decorators conclude two things saying work around issue copy paste coding completely unacceptable since framework nt support custom decorators using aot infer decorators foundation frameworks entire syntactic api subset typescript first class citizens angular framework encourages use basically aot relegates static annotations something typescript plenty syntax ignoring fact designed augment structures dynamically furthermore tscwrapped aot part original design typescript semantics changed limited altered angular feel like script debacle", "d": "10/2016"}, {"body": "johnchristopherjones scratching surface recently messed around plnkr found see would happen seems handle class extension better const object approach javascript root app component import component ngmodule angularcore import browsermodule angularplatformbrowser export class metadata protected readonly selector string myapp protected readonly template string test export class metadatachild extends metadata protected readonly template string thistemplate child component new metadatachild export class app name string constructor thisname ngmodule imports browsermodule declarations app bootstrap app export class appmodule", "d": "10/2016"}, {"body": "fully agree aluanhaddad also agree composition better inheritance always problem solved composition true would need inheritance seen recommendation rule seen recommendation rule used argument recommendation justify limitation libraryi agree always limitations agree limitations key features inheritance large library look scenario library using third ui component primeng development require specific behavior dropdown component library source dropdown component example make query directly database filter options behavior implemented ability register external event choice shortterm extend component implement method according need possibility solve composition unique possibilities see extend component overwriting methods required implementation behavior change component customization possible event register way filter implemented latter feasible third component extension support inheritance decorators component would duplicated extended component good practice possibly worse equivamente using inheritance example extends dropdown component plunker question way without changing original component duplicate code extended component", "d": "10/2016"}, {"body": "fernandocode agree indeed cases inheritance necessary even elegant solution say code duplication bad practice indeed frameworks like angular real practical need constrain literally hundreds adhoc augmentation patterns exist javascript ecosystem equally strong need provide bless structured subset patterns introduce allow developers reuse code example angularjs notion service customization slightly intimidating newcomers extremely powerful composition mechanism great service shared needed reused slightly modified client app also reusable chunk code well abstracted sense simply function need inject target directly simply injecting service aliased service modifying even customization could reused modify multiple services worked really well angularjs typescript apps contracts could formally specified solution copy paste recommended approach flat wrong", "d": "10/2016"}, {"body": "reading almost issues inheritance try avoid comment working angular time would like say totally imagine complicated even impossible could make something works correctly said mhevery talking full inheritance component need came across time mostly overriding styletemplate maybe animate build libraries component let final user decide least style actual component libs includes css style want apply different one really tricky concern also style template post using reaction emoji see worth focusing properties full inheritance components", "d": "10/2016"}, {"body": "issue resolved et", "d": "10/2016"}, {"body": "could provide plunkr reproducing issue", "d": "10/2016"}, {"body": "closing please reopen issue plunkr reproducing", "d": "10/2016"}, {"body": "use case", "d": "10/2016"}, {"body": "workaround viable option want create component uix designers use markup create layout short need keep simple rather sending tons options init function ex using get tabs children return children using code tabstab downgrading working way getting children currently blocker", "d": "10/2016"}, {"body": "even minifying file still getting", "d": "10/2016"}, {"body": "bugissue fixedresolved getting errors third party libraries minified", "d": "10/2016"}, {"body": "ganeshkbhat case loading wrong static files example instead template html file getting root indexhtml file file upon loading requesting resources going loop", "d": "10/2016"}, {"body": "problem using resolved switched", "d": "10/2016"}, {"body": "dpdonohue nniiinnja know problem usage minified files using minfied rightjs tabs get small footprint dynamic tabbed structure add files indexhtml using script tags gives error put files map systemjsconfig object rightjs found even declaring object ts file", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "pkozlowskiopensource handle case", "d": "10/2016"}, {"body": "seems issue opened last router rewrite nt look like issue still makes sense closing please reopen think still makes sense", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "easy fix underlying fn memoized adapter instanciated", "d": "10/2016"}, {"body": "issue closed based fact workaround available however original problem solved really seems bug angular different behaviour compared one real shadow dom faced issue solved provided workaround nevertheless bug solved think issue reopened", "d": "10/2016"}, {"body": "came across issue reopen", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "robwormald", "d": "10/2016"}, {"body": "vicb closed duplicate link comes back issue", "d": "10/2016"}, {"body": "link comes back issue see duplicate meant", "d": "10/2016"}, {"body": "meligy currently ngsubmit event emitted based native form submit event nt really designed work without form tags said think would nice look make work", "d": "10/2016"}, {"body": "seems remember scroll position chrome firefox ie idea", "d": "10/2016"}, {"body": "smaugthegreat yes work even possible remembers last scroll position", "d": "10/2016"}, {"body": "strange using smaugthegreat solution ie windowscroll remembers scroll position using windowscroll windowsetinterval nt remember scroll position", "d": "10/2016"}, {"body": "use npm", "d": "10/2016"}, {"body": "use angular longer getting error installing typings corejs", "d": "10/2016"}, {"body": "fix angular angularcli remove devdependencies", "d": "10/2016"}, {"body": "splaktar hey thanks suggestion worked clearing errors got moving explanation typescorejs needed using reason one less dependency nothing worry", "d": "10/2016"}, {"body": "wuno also mentioned related answers explanations nt clear answer seems give hint seeing seems imported automatically typescript using corejs types override get conflict details perhaps proper fix using importing corejs types", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "solution provided templth brandonroberts nt work latest router version solution", "d": "10/2016"}, {"body": "zasuk", "d": "10/2016"}, {"body": "relates closing duplicate", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "nt think issue makes sense context new router angularrouter think please reopen plunkr reproducing", "d": "10/2016"}, {"body": "also might well upgrade typescript typescript never end browser always compile typescript project years future depending long project last understand people want use time line turn transpiler continue developing code right compliant browser", "d": "10/2016"}, {"body": "angular start announced typescript focused also dart ways show something suppose typescript better way vision perhaps usefull change vision towards", "d": "10/2016"}, {"body": "guess people reading aware case issue published hacker news may explain people voting comments angular github issues less supportive typescript usual btw people nt use nt contribute discussion well even downvotingupvoting reactions makes difficult angular devs get feedback users hn thread good place rest us", "d": "10/2016"}, {"body": "oelmekki voice future angular makes sense speak eg never used main reason strong focus typescript sway devs decision add docs would lower barrier entry food thought", "d": "10/2016"}, {"body": "jamesharrington fair enough least mention nt use doubt thread actual angular users", "d": "10/2016"}, {"body": "strong believer angular amp javascript using amp production even seed project uses pure legacy babel plugins see know much hurts ca nt find decent documentation", "d": "10/2016"}, {"body": "nt realize got downvoted like crazy nt mean negative way typescript nothing code banascript kidding whatever want could wrong sure effort create documentation since pascal saying well basically mirror typescript one one major changes think instead using dependency injection like basically disregard types things documentation would identical maybe foxandxss could provide better answer thread though curiosity makes want stay away typescript jamesharrington besides types relatively minor things basically thing minus tooling benefits code readability valerarozuvan totally get eventually could completely remove transpiler always sure next one holding everyone back using latest amp greatest features javascript ca nt imagine time without using transpiler kind development miss days live editing browser agree would nice", "d": "10/2016"}, {"body": "sure effort create documentation since pascal saying well basically mirror typescript one please nt forget comes without decorators ca nt use things like pure could use legacy babel plugin like using typescript adds sugar standard want use pure need things like class dashboardcomponent constructor thismessage hello world dashboardcomponentannotations new component selector app templateurl componentsdashboarddashboardhtml styleurls cssdashboardcomponentcss things documented well go internet find bits pieces things", "d": "10/2016"}, {"body": "true almost forgot maybe least could try throw together bestpractices interpret ts things documentation way could try help put something like together benefit people update apparently something works nt know specific details though", "d": "10/2016"}, {"body": "maybe least could try throw together bestpractices interpret ts things documentation way examples metadata decorators dependency injection directives interact elements components services handle communication components different parents inputsouputs etc", "d": "10/2016"}, {"body": "lot things docs difference features totally angular independent learn another way angular role teach know reading docs enough figure things", "d": "10/2016"}, {"body": "valerarozuvan documentation apparently something works positive exactly entail something geared towards least jamesharrington voice course", "d": "10/2016"}, {"body": "fyi progress already", "d": "10/2016"}, {"body": "someone post clear solution problem researching issue approaches mentioned release candidates mhevery jpleclerc new updates ngincude angular also mostly old approaches linked web rc versions help highly appreciated", "d": "10/2016"}, {"body": "make clear point blocks current project migration angular rather simple component implements strategy pattern choose template suites best data given service simply returns template id previously added angular templatecache simple fast safe really nt get everything angular designed around aot compiler nt seen performance issues angular non angular would nt hurt anybody features angular marked caution ca nt used aot compiler nt tell make switch case template include different component strategy already thought ugly solution point hate jsp switch case select kind view suites data ugly feels wrong", "d": "10/2016"}, {"body": "daschtour templates html use ngtemplateoutlet load desired template html template textdata template textdata implement component decide use perhaps want use strings mark templates like angular well create like typescript import templateref angularcore export class templatecontainer private static templates name string templateref static hastemplate id string boolean return thisgettemplate id create directive store templates indexed id something like typescript import directive input templateref oninit angularcore import templatecontainer templatecontainer directive selector template templateid export class emtemplatedirective implements oninit input templateid id string way html template textdata template textdata getdesiredtemplate guys think needed port component outlet ngtemplateoutlet needed port equivalent component outlet loading html equivalent", "d": "10/2016"}, {"body": "tolemac thank mentioning sorry given dynamic template compilation aot friendliness", "d": "10/2016"}, {"body": "think thread nginclude alternative nt aot angular", "d": "10/2016"}, {"body": "byebye good friend guess even loop could possible determine possible variations runtime nt see reason work aot list templates known compilation frightening much code needed add trivial functionality", "d": "10/2016"}, {"body": "daschtour agree moment way nt know core contributors think future", "d": "10/2016"}, {"body": "tolemac like idea component outlet loading html require equivalent could give example would", "d": "10/2016"}, {"body": "tolemac nvm think got", "d": "10/2016"}, {"body": "yes charliebrink charliebrink planning add nginclude feature would like know think read issue", "d": "10/2016"}, {"body": "closed reason plans", "d": "10/2016"}, {"body": "please fix breaking issue using form ie", "d": "10/2016"}, {"body": "someone post repro case plunkr delagen nt worry radar issue important feel free submit pr otherwise priority evaluated priorities queue", "d": "10/2016"}, {"body": "kara plunker open run frame ie try change input changing value using backspace delete keys update model spent lot time try run ie seems systemjs cause many issues manually load bundles use destruction import angular routines", "d": "10/2016"}, {"body": "root cause nt fire events backspace delete angular working around listening change event well", "d": "10/2016"}, {"body": "pkozlowskiopensource yes right found learn code ngmodel directive", "d": "10/2016"}, {"body": "kara going remove need repro label issue known see", "d": "10/2016"}, {"body": "pkozlowskiopensource rob gitter said actual anymore think u close", "d": "10/2016"}, {"body": "use asyncpipe handle errors adding catch operator observable object elegant solution imo async pipe cool presentations conferences real world development subscribe better option besides testing prospective less magic done inside template better", "d": "10/2016"}, {"body": "people reach page regarding error sure include component class declarations array passed upgrade adapter", "d": "10/2016"}, {"body": "supported use instead supported implied", "d": "10/2016"}, {"body": "closed receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "chuckjaz mhevery billti many thank great feature excited integrate feature inside eclipse idea release typescript include tsserver plugin extension release provide plugin language service many thank answer", "d": "10/2016"}, {"body": "angelozerr would happy work get eclipse currently early version working external templates instead template strings vs code integration neither ready prime time yet getting closer currently planning support template strings using hooks vs code instead waiting hooks available typescript believe hooking typescript right long term solution using vs code hooks expedient", "d": "10/2016"}, {"body": "angelozerr would happy work get eclipse great thanks using tsserver inside typescriptjava understand well possible today provide language server want use work need develop java client consumes language server would like really using tsserver perhaps need wait extensibility typescript", "d": "10/2016"}, {"body": "believe right need create another client extending tsserver half solution would provide completions template strings inside loose template files project referenced provide completions contexts", "d": "10/2016"}, {"body": "believe right need create another client would like avoid using tsserver clean avoid clients one typescript editor one template best performance avoid parsing twice typescript file one provide completion inside typescript editor one template extending tsserver half solution would provide completions template strings inside loose template files tsserver able parse ml files", "d": "10/2016"}, {"body": "agree avoiding multiple services currently working microsoft able unify servers probably going happen year current proposal extensibility model extend file types still provide services ts similar files", "d": "10/2016"}, {"body": "agree avoiding multiple services currently working microsoft able unify servers great probably going happen year ok understand wish use tsserver work work ts files think good start", "d": "10/2016"}, {"body": "update content original message reflect current state language service", "d": "10/2016"}, {"body": "could somebody add minimal repro thanks", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "see pr nt address part issue head service sure global service solves rest issue reopened", "d": "10/2016"}, {"body": "head service work tracked", "d": "10/2016"}, {"body": "jeffwhelpley great thank reference", "d": "10/2016"}, {"body": "repository longer maintaining dart version benchpress angular dart angular ts split see", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "pkozlowskiopensource using offline compiler keeps whitespace embeds js html minification still relevant angular templates said angular still wants require quotes around attribute values nt really mind", "d": "10/2016"}, {"body": "using following also works tried typescript", "d": "10/2016"}, {"body": "base app contains tsconfigjson nt compatible ionic option use compiler recognize promise objects", "d": "10/2016"}, {"body": "rubimazaki able find solution compile nodemodules excluded breaks intellisense ide phpstorm", "d": "10/2016"}, {"body": "mistaken enable typescript lint settings typescript tslint compiler click enable set load lint nodemodulestslint project folder tsconfigjson sure exactly important note want breakpoints work working css keep distance get back took two weeks understand many new issues really nt want mess simply registered nt waste time", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "ihateglamour select controls appear empty value matched one option values change option value list form control value longer matches options blank ca nt display value item longer list like select value list new options change list want set value programmatically change list", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "still get hash parameters someone give example trying connect facebook redirect app url part removed extract extract parameters", "d": "10/2016"}, {"body": "found solution imports constructor", "d": "10/2016"}, {"body": "closing duplicate relates", "d": "10/2016"}, {"body": "closing updated", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "work done pick", "d": "10/2016"}, {"body": "currently using something like broker load instantiate modules still work aot compilation needs done javascript import injector ngmodule component compiler angularcore import browsermodule angularplatformbrowser ngmodule imports browsermodule export class coremodule constructor private compiler compiler private injector injector ngdobootstrap thisload appsamplemodulets samplemodule samplemodulecomponent documentqueryselector bootcontainer load modulepath string modulename string componentname string node htmlelement system import modulepath module gt module modulename appmodule gt thiscompilercompilemoduleandallcomponentsasync appmodule factories gt const appmoduleinstance factoriesngmodulefactorycreate thisinjector", "d": "10/2016"}, {"body": "please add repro plunker thanks", "d": "10/2016"}, {"body": "closing repro please reopen minimal repro", "d": "10/2016"}, {"body": "relates", "d": "10/2016"}, {"body": "tracked", "d": "10/2016"}, {"body": "please add repro plunker", "d": "10/2016"}, {"body": "please reopen minimal repro available", "d": "10/2016"}, {"body": "liquidboy concern error messages displayed user types early considered using property control marked blur event error message would appear html nt yet support actually running validation blur instead value change besides error message display use cases trying get read priority", "d": "10/2016"}, {"body": "kara work user reset manually delete input problem back thks still better", "d": "10/2016"}, {"body": "ghetolay resetting actually set field back untouched nt run problem right user leaves input comes back deletes still touched", "d": "10/2016"}, {"body": "telling user need least characters even chance enter badly designed ui works certain something wrong story even fiddling works feels like chore fiddle back forth nt feel like correct way developers nt know touched might used internally eg directives app moment creating input components later uses push validator error works quite well certainly possible get around issue quirks introduced editing field instantly clicking submit button might allow event trigger eg used disabling buttons manually ask valid allow update top view quite complex ui inputs divided components components react changes data components update inputs thought store using update data nt feel like performant solution updating onblurchange would better", "d": "10/2016"}, {"body": "ok found way myctrl update part model honestly would like something like onmoduleblur pass job rather call change well reason come need find validateshow message need onmoduleblur bluechanges like valuechanges convert site angular site bit strange user changes controlvalue business rules decide change post backend user anything else", "d": "10/2016"}, {"body": "kara imagine email input asynchronously checking whether unique matter much debounce checking event never ever makes sense check user done blurs input", "d": "10/2016"}, {"body": "still issue ng", "d": "10/2016"}, {"body": "hmm think still working plunker option select category immediately readable selected select tag blank instead form correctly disabled since option selected", "d": "10/2016"}, {"body": "similar issue binding select control option scalar opposed option property", "d": "10/2016"}, {"body": "clarify source truth select value form control model setting value form control model initialize select element value nt support attribute addition would create two conflicting sources truth select value like select empty sod solution work want initial select category value show still disabled want initialize form control model null well example", "d": "10/2016"}, {"body": "kara example submit button still enabled disabled option selected edit ok removing string initial works well disabling button", "d": "10/2016"}, {"body": "kara example default text control two way binding ngmodel add following select control default selection disappears ngmodel cat image inline image thu oct davide violante notifications githubcom wrote kara example submit button still enabled disabled option selected receiving commented reply email directly view github mute thread", "d": "10/2016"}, {"body": "solved via", "d": "10/2016"}, {"body": "remaining docs corrections separate issue even better pull request shell opened", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "closing nt heard back opener", "d": "10/2016"}, {"body": "belongs", "d": "10/2016"}, {"body": "try value date ddmmyyyy value produces general formatting one day earlier", "d": "10/2016"}, {"body": "time zone", "d": "10/2016"}, {"body": "sorry showing ddmmyyyy local date correct", "d": "10/2016"}, {"body": "value date hh mm rendering latest chrome firefox safari", "d": "10/2016"}, {"body": "angular release seems working fine firefox chrome custom format strings however fails edge interpreting etc different long formats suppose edge might nonstandard implementation nt even work safari due lack", "d": "10/2016"}, {"body": "schungx safari need add script indexhtml", "d": "10/2016"}, {"body": "problem edge ticket closed stay away datepipe create custom pipe", "d": "10/2016"}, {"body": "bug edge see fixed probably one option", "d": "10/2016"}, {"body": "pascalprecht could please provide plunker thanks", "d": "10/2016"}, {"body": "seems like issue opened deprecated router could please verify still happens latest router point open new issue still problem thank", "d": "10/2016"}, {"body": "pkozlowskiopensource issue anymore", "d": "10/2016"}, {"body": "thnx coming back info much appreciated", "d": "10/2016"}, {"body": "related", "d": "10/2016"}, {"body": "actually tracking", "d": "10/2016"}, {"body": "still", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "closing duplicate specific usecase added please comment", "d": "10/2016"}, {"body": "sounds like support request nt belong see", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "fredgate thanks detailed issue posted february lot changed forms directives longer activated automatically optin need imported explicitly regardless like create form control accepts integers example creating custom value accessor preferred solution custom accessors always override builtin accessors numbervalueaccessor would become noop krzysztofbogdan describe definitely use case want support sounds like would encompassed parserformatter solution see track progress closing seems original concerns addressed issue pretty old moreupdated feedback feel free open new issue plunker examples api falls short also welcome helpful", "d": "10/2016"}, {"body": "ran yesterday work like type something debounced fires actually happens type something waits fires keystroke pretty much undebouncable", "d": "10/2016"}, {"body": "issue clear nt plunker likely obsolete please open new issue following bug report template still face problems latest version", "d": "10/2016"}, {"body": "already exported well apis seem public marked stable", "d": "10/2016"}, {"body": "hi reproduced issue plunkr seems work fine template change", "d": "10/2016"}, {"body": "adding refs", "d": "10/2016"}, {"body": "hi also facing problem ngoninit calling twice component input property assigned null first time getting actual value time ngoninit input property assigned null please look want skip second time call cant create plunkr shared component code used two times component console log appcomponent true appcomponent true angular running development mode call enableprodmode enable production mode appcomponent undefined angular running development mode call enableprodmode enable production mode import component oninit input elementref angularcore import datetime datetime component selector datetimepicker providers datetime directives templateurl appdatetimetplhtml styleurls appdatetimecomponentcss export class datetimepickercomponent implements oninit input public dateandtime boolean public variables public selecteddate date currently selected date public hour number public minute number public el htmlelement component element public monthdata month calendar data public formattedstrdate public dateformat public showpicker public comptop public compleft public get year number return thisselecteddategetfullyear public get month number return thisselecteddategetmonth public get day number return thisselecteddategetdate public get today date let dt new date dtsethours dtsetminutes dtsetseconds dtsetmilliseconds return dt constructor elementref elementref public datetime datetime try thisel elementrefnativeelement catch error consolelog error ngoninit try consolelog appcomponent thisdateandtime thisformattedstrdate pm thisdateformat yyyymmdd hh mm thisshowpicker false thisinitdatetime new date var item thiselqueryselector datetextid thiscomptop itemoffsettop thiscompleft itemoffsetleft catch error consolelog error pickerclickhandler thisshowpicker true thisgetdatefromtext var item thiselqueryselector datetimepickerid itemstyletop thiscomptop itemstyleleft thiscompleft getdatefromtext thisselecteddate thisdatetimemomentparse thisformattedstrdate thisdateformat thismonthdata thisdatetimegetmonthdata thisselecteddategetfullyear thisselecteddategetmonth public todate year number month number day number date return new date year month day public todateonly date date return new date dategetfullyear dategetmonth dategetdate updatemonthdata num number thismonthdata thisdatetimegetmonthdata thismonthdatayear thismonthdatamonth num updateyear var yearselector thiselqueryselector yearselector thismonthdata thisdatetimegetmonthdata parseint yearselectorvalue thismonthdatamonth public selecttoday var date new date thisselecteddate new date dategetfullyear dategetmonth dategetdate thismonthdata thisdatetimegetmonthdata dategetfullyear dategetmonth thisselectdate public selectdate daynum number daynum thisselecteddate new date thismonthdatayear thismonthdatamonth daynum thisdateandtime var hoursstepper thiselqueryselector hoursrange thishour parseint hourssteppervalue var minutesstepper thiselqueryselector minutesrange thisminute parseint minutessteppervalue thisselecteddatesethours parseint thishour thisselecteddatesetminutes parseint thisminute thisformattedstrdate thisdatetimemomentformatdate thisselecteddate thisdateformat thisshowpicker false public initdatetime date date date date new date thisselecteddate date thishour thisselecteddategethours thisminute thisselecteddategetminutes thismonthdata thisdatetimegetmonthdata thisyear thismonth", "d": "10/2016"}, {"body": "tbosch work around issue skip second time call thanks advance", "d": "10/2016"}, {"body": "still reproducible", "d": "10/2016"}, {"body": "get issue tried pass object one component another using input decorator using parameter build another object passed component ngoninit lifecycle method first iteration able get value second iteration nt happen reinitialized values back null receiving subscribed thread reply email directly view github", "d": "10/2016"}, {"body": "francosioquim prabhatsharma dileepkumarebix really need plunker shows otherwise super hard reproduce problem", "d": "10/2016"}, {"body": "francosioquim inputs undefined null retriggered oninit", "d": "10/2016"}, {"body": "let centralize discussion inheritance closing duplicate", "d": "10/2016"}, {"body": "docs correct reads warning pipe uses internationalization api yet available browsers may require polyfill see browser support details also correct info supported browsers required polyfills", "d": "10/2016"}, {"body": "part response class see feel free open new issue specific usecases reproduction scenario plunker see nonworking specific scenario", "d": "10/2016"}, {"body": "part public api feel free open new issue following issue template minimal reproduce scenario still hitting problems", "d": "10/2016"}, {"body": "specific plans add back pipe point", "d": "10/2016"}, {"body": "yep get bad framework provide pipe since filter pipe awarded framework slow reputation guess better developer specialized fast filter pipes specific use case least pipe api well documented", "d": "10/2016"}, {"body": "let centralize discussion inheritance", "d": "10/2016"}, {"body": "closing issue looks stale forms testing changed lot since january still seeing weirdness feel free open new issue plunker updated", "d": "10/2016"}, {"body": "make directive fires required events", "d": "10/2016"}, {"body": "planned near future", "d": "10/2016"}, {"body": "sounds like support request discussed one support channels", "d": "10/2016"}, {"body": "sorry going happen would requiring watching dom properties slow default certain properties like mentioned superslow merely reading would cause reflow closing requesting would bring perf knees", "d": "10/2016"}, {"body": "still issue", "d": "10/2016"}, {"body": "exposes array guess root component might need shlomiassaf since talked topics lot think usecase modallike feel pain could modalrelated discussion instead", "d": "10/2016"}, {"body": "sounds like support request got answered", "d": "10/2016"}, {"body": "public see", "d": "10/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "10/2016"}, {"body": "duplicate afaik work progress", "d": "10/2016"}, {"body": "use", "d": "10/2016"}, {"body": "problem exists must somehow solve example project modified router settings result access token nt handled router configured usehash true vsavkin temporary workaround working fyi", "d": "10/2016"}, {"body": "please use crossorigin backend side java spring boot controller either class level method level solution chrome errorno accesscontrolalloworigin header present requested resource solution working example class level crossorigin controller public class uploadcontroller example method level crossorigin origins maxage requestmapping value loadallcars responsebody public list loadallcars ref", "d": "10/2016"}, {"body": "would hit build performance right creating form components share inner templates divs classes conditions like labels descriptions ca nt concatenate const variables inside template must copy paste piece code components uses change something would component avoid copy paste somehow", "d": "10/2016"}, {"body": "issue nt relevant anymore", "d": "10/2016"}, {"body": "obsolete dart related", "d": "10/2016"}, {"body": "hi trying create translate directive like following import directive elementref angularcore understood discussion possible alternatives", "d": "10/2016"}, {"body": "think wrong use pipe directives handle translations know library handle translation angular falko notifications githubcom hi trying create translate directive like following import directive elementref angularcore translatedirective translates innerhtml dom element usage directive selector translate export class translatedirective static get parameters return elementref constructor el elnativeelementinnerhtml translationtable elnativeelementinnerhtml en understood discussion possible alternatives receiving commented reply email directly view github mute thread", "d": "10/2016"}, {"body": "thanks also discovered implementation included latest release works exactly like described", "d": "10/2016"}, {"body": "enzoaeneas found solution kendo splitter also looking", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "closed", "d": "10/2016"}, {"body": "related angular", "d": "10/2016"}, {"body": "related", "d": "10/2016"}, {"body": "jessieamorris facing issue please post snippet solution thanks", "d": "10/2016"}, {"body": "much going issue longer clear root cause anything remains fixed still issues corrected please open new issue following bug report template importantly minimal reproduce scenario plunker", "d": "10/2016"}, {"body": "update angular final release routerprimarycomponent longer angularrouter", "d": "10/2016"}, {"body": "stevefarwell angular final already released", "d": "10/2016"}, {"body": "mohammedzamakhan guess rephrase question angular final release routerprimarycomponent longer angularrouter brandonroberts update fix", "d": "10/2016"}, {"body": "fail aot well supported add getter", "d": "10/2016"}, {"body": "closing per", "d": "10/2016"}, {"body": "tbosch anything remains done could one closed", "d": "10/2016"}, {"body": "tracking inheritancerelated issues", "d": "10/2016"}, {"body": "immediate workaround wrapping component test unit tests wondering angular team thinks proper solution problem would wrapping way go guarantees component test executes environment identical one production app cases want test input outputs best done reallife registration bindings output listeners particular plans add new testing api cater use case unit test ca nt call ngonchanges would perilous would know exactly lifecycle hooks called particular points time roughly means duplicating internal angular logic", "d": "10/2016"}, {"body": "pkozlowskiopensource given doc page explaining lifecycle hook sequence creating component nt understand angular uses components ngonchanges called databound input properties change called ngoninit sure want know tests catch issues logic angular component tests calling fixturedetectchanges nt also duplicating angular change detection strategy", "d": "10/2016"}, {"body": "nt think issue makes sense context new router angularrouter think please reopen plunkr reproducing issue", "d": "10/2016"}, {"body": "ngprojectas address example posted", "d": "10/2016"}, {"body": "nt think issue still makes sense context new router think please reopen plunkr reproducing issue", "d": "10/2016"}, {"body": "hi could guys throw warning components without selector exception thing chrome says click router link exception nullerror method found q null took whole day figure seriously almost made drop project", "d": "10/2016"}, {"body": "dart repo", "d": "10/2016"}, {"body": "pkozlowskiopensource build amp ci component meant build ci angularangular think request changed ask devprod mode enableddisabled based environmental variables change title appropriately", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "still applicable yes could please update plunker describe current behavior describe expected behavior thanks", "d": "10/2016"}, {"body": "hello nt use angular anymore nt know current behavior since condition seems still guess still applicable expected behavior custom directives similar would nt write conditions words apply twoway data binding property directive directive emits change event event returns back directive least used work assume change wish would mechanism maybe flag assigned event directive binding leave tell angular deliver events emitted directive back directive sorry worth updating plunker since nt use angular anymore since seems close rfe anyway", "d": "10/2016"}, {"body": "trying understand issue thanks providing information probably linked", "d": "10/2016"}, {"body": "issue run npm run lite instead npm start works", "d": "10/2016"}, {"body": "yup works also conf works", "d": "10/2016"}, {"body": "closing per", "d": "10/2016"}, {"body": "interesting idea way would large breaking change nt think benefit justifies cost closing issue", "d": "10/2016"}, {"body": "obsolete gone please open new issue following template still problem", "d": "10/2016"}, {"body": "pkozlowskiopensource please help example codes unable compile template cell grid", "d": "10/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2016"}, {"body": "closing implemented implemented ago", "d": "10/2016"}, {"body": "finished implementing simple file upload using http module find good documentation bit trial error able produce working solution made gist available helps", "d": "10/2016"}, {"body": "pkozlowskiopensource still idea invoked one input changes u give explanation implement progressbar component without setting parent compoent found execution two times know first one executed really confused second", "d": "10/2016"}, {"body": "mhevery design spec somewhere describe far actually currently implemented sure changed past months", "d": "10/2016"}, {"body": "refs", "d": "10/2016"}, {"body": "short syntax examples valid templates", "d": "10/2016"}, {"body": "examples defending use showing edge cases using make sense nt show example represents common use case using example standard request read code understand following result returns going transform update property result ever return one result subscribing one update misleading defend type code instead ca nt get head around", "d": "10/2016"}, {"body": "works subscribe case literally using promises wo nt ever foreach work like inside array stream", "d": "10/2016"}, {"body": "forcing use stream events handle unlimited events one event handle", "d": "10/2016"}, {"body": "yes consumer care performance wise apart using function instead nt want use extra handy features comes observable nt use promise even turn promise also none forcing use use whatever else whole framework written way allows easily swap libraries", "d": "10/2016"}, {"body": "vs second one ca nt cancelled trap errors single page app cancellation important change routes nt need finish loading data previous route wasted computational cycles garbage collection memory allocation etc etc promises nt right type http single page app want sort resiliency network going want retry every second failure add one line rxjs total control promises case fxck correct use promises angular lib choose fact even rxjs code anything takes observable also accept promise interop friendly design much ado nothing really discussion many times ca nt count nt want engage much wanted point basic points argument favor promises think actually merit multicast default something optinto observables", "d": "10/2016"}, {"body": "using observables almost exclusively angular cases promises would worked equally well question group becoming thing perhaps start debate back understand asyncawait nothing bridge functionality gap promises observables maybe new syntax appealing view asyncawait aims make async code flow feel synchronous might easier junior developers grasp mentioned arguments favor observables obviously still stand even asyncawait", "d": "10/2016"}, {"body": "async await currently lacks cancellation finally support cancellation via tokens observables also support tokens seemlessly things promises always asynchronous observables synchronous makes easier deal performant regards ssr additionally wrt ssr observables nt trap errors completely means node services opt panic behavior desirable better debugging node processes via core dump analysis really long thought decision volumes blogs talks benefits observables promises common web app scenarios also nothing stopping using async await promises wherever want", "d": "10/2016"}, {"body": "second one ca nt cancelled trap errors blesh got stop saying plenty real reasons use observables angular promise cancellation asspecced observables promises nt trap errors retrying trivial async await cancellation also far ahead observables spec disagree ssr point meh argument observables unified api push spec enough", "d": "10/2016"}, {"body": "blesh got stop saying nt \u30c4", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "still relevant final", "d": "10/2016"}, {"body": "regular js behavior probably documented better created issue angularangulario", "d": "10/2016"}, {"body": "love provide changing property values observable like robwormald decorator always feasible parent components pass observables especially migrating existing angular application able contain observables within single component makes leveraging power elegance rxjs much harder though unfortunately rob nt kidding said use version problem running observables created classlevel terminology makes sense hence shared across instances component good obviously creating observables instantiation time work either seems angular nt correctly wire change detection case anyone managed better implementation news official support", "d": "10/2016"}, {"body": "lephyrus official decorator would nice strictly necessary order get observable changing property values decorator would simply elegant sugar already lifecycle event inside use rxjs create observable changes ie input inputstring string private subject inputstring new subject ngonchanges changes key string simplechange changeshasownproperty inputstring thisinputstring next changes inputstring currentvalue constructor inputstring subscribe x gt consolelog inputstring x want something reusable could create base class component import simplechange angularcore import observable connectableobservable observer rxjs export interface typedsimplechange previousvalue currentvalue export class reactivecomponent private changesobserver observer lt key string simplechange gt private changes connectableobservable lt key string simplechange gt could used follows component export class yourcomponent extends reactivecomponent input inputstring string using approach official decorator available", "d": "10/2016"}, {"body": "thank wmaurer welcome using impeccable code safe typing boot really nice importantly also behaves well test still allows using change detection strategy happy wait official sugar also sure learn something figure use logic nt found time look yet merci g\u00e4ll wink", "d": "10/2016"}, {"body": "lephyrus welcome g\u00e4rn gescheh used get hold order able could used believe generally bad practice expose", "d": "10/2016"}, {"body": "antonmoiseev mentioned best way conduct validations require multiple sibling controls parent group level", "d": "10/2016"}, {"body": "situation service authenticatedhttpclient needs use different implementations na authtokenresolver depending configuration currently two solutions far understanding goes component consumes authenticatedhttpclient implement provider decides authtokenresolver instance use constructor authenticatedhttpclient consult configuration explicitly create correct authtokenresolver ie simple angular could define custom provider would used throughout services directives components read thread seems people talking crosspurposes someone clarify whether behavior intentionally missing preferred approach", "d": "10/2016"}, {"body": "example would welcome", "d": "10/2016"}, {"body": "obsolete", "d": "10/2016"}, {"body": "still reproducible", "d": "10/2016"}, {"body": "tracking inheritancerelated issues", "d": "10/2016"}, {"body": "also need otherwise replicate throughout entire application sure working", "d": "10/2016"}, {"body": "putting tedsander comments together following example shows metadata inherited even small workaround waiting proper solution ts class basecomponent decorators currently inherited left put compiler ease viewchild somecomponent comp input someinput output someoutput new eventemitter added child component component metadata static metadata queries comp new viewchild somecomponent inputs someinput outputs someoutput component objectassign selector mycomponent templateurl mycomponenthtml basecomponentmetadata class mycomponent extends basecomponent constructor super", "d": "10/2016"}, {"body": "please reopen reproducer issue persists final router", "d": "10/2016"}, {"body": "please add repro still issue", "d": "10/2016"}, {"body": "still relevant everywhere example according polyfills mandatory", "d": "10/2016"}, {"body": "still relevant question polyfills mandatory equivalently browserversions supported without polyfills", "d": "10/2016"}, {"body": "use", "d": "10/2016"}, {"body": "folks question running process memory issues running ngc ngc runs fine first time things jit mode maints first run change maints aot mode ngc takes compile process ends memory way increase running ngc", "d": "10/2016"}, {"body": "please file new issue unrelated old issue fri oct pm sukhdeep singh notifications githubcom wrote folks question running process memory issues running ngc ngc runs fine first time things jit mode maints first run change maints aot mode ngc takes compile process ends memory way increase maxoldspacesize running ngc receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "issue also closed could nt find solution anywhere", "d": "10/2016"}, {"body": "uncaught securityerror failed execute pushstate history history state object url file e design created document origin null url file e importanthtmlwebsitegtghtmlanimationhtml help please thanks much", "d": "10/2016"}, {"body": "luongvancuong use http server instead direct file access", "d": "10/2016"}, {"body": "longer reproduce", "d": "10/2016"}, {"body": "agree builtin solution would ideal component names unique within app also used generate unique id minimalistic function concatenates component name either given identifier unique id generated lodash ts export class getid protected getid id numberstring uniqueid string return lowerfirst thisconstructorname id class mycomponent extends getid used throughout template generate appwide unique ids", "d": "10/2016"}, {"body": "actually wo nt unique minification component selector stored metadata could used instead ie may survive aot compilation words builtin solution would much appreciated", "d": "10/2016"}, {"body": "really like typescript rx webcomponent architecture also plus want use ngfor etc like things currently template jsx much better uses javascript jsx show stopper sure many people feel way update think wrong ng compiler basically get kind functionality still like ngfor directives understand reasoning reading statement robwormald", "d": "10/2016"}, {"body": "doubt emulated mode encapsulate styles encapsulation maintain parent child hierarchy expected behavior definitions flow top bottom encapsulation course stops flow bottom top", "d": "10/2016"}, {"body": "zoechi understand mention ca nt encapsulation styling outside together also understand specification thought purpose view encapsulation prevent styles outside bleeding nt purpose prevent bleeding instead bleeding think nt want replace component style accidentally purpose right parent style get component styles affect outer world would wanted completed isolated area would rather go native option create native shadow dom none parent style get inside unless explicitly specified", "d": "10/2016"}, {"body": "longer case see", "d": "10/2016"}, {"body": "still case fact cf plnkr", "d": "10/2016"}, {"body": "using final release", "d": "10/2016"}, {"body": "nt view cache issue stale", "d": "10/2016"}, {"body": "actually need separation user defined metrics", "d": "10/2016"}, {"body": "properly escaped", "d": "10/2016"}, {"body": "youngplussoft thx replace work", "d": "10/2016"}, {"body": "see expected behavior media query template present style tag added actual behavior media query template present style tag added ie info note also flow", "d": "10/2016"}, {"body": "closed favor", "d": "10/2016"}, {"body": "hi guys tried testing issues angular final work code json data", "d": "10/2016"}, {"body": "calvinkg suggestion try rename variable ngfor duplicated eg sure help", "d": "10/2016"}, {"body": "caselit still ca nt get selected option html get", "d": "10/2016"}, {"body": "ca nt get selection work well html updating ngmodel selection working set selectedoffice variable option nt selected form control", "d": "10/2016"}, {"body": "got weird could similar issue got series selectsdropdowns generated ngfor number dropdowns varies based another dropdown issue rendering intial value binded variablemodel weird thing change one value dropdown reflects well dropdown next binded model though correct updated value", "d": "10/2016"}, {"body": "caselit managed work around got selected value", "d": "10/2016"}, {"body": "hi facing problem using even", "d": "10/2016"}, {"body": "dart repo", "d": "10/2016"}, {"body": "dup", "d": "10/2016"}, {"body": "worked final", "d": "10/2016"}, {"body": "lib published someone wants experiment decorators", "d": "10/2016"}, {"body": "sure find", "d": "10/2016"}, {"body": "fxck", "d": "10/2016"}, {"body": "vicb already implemented nt", "d": "10/2016"}, {"body": "think localeid way docs marked like experimental", "d": "10/2016"}, {"body": "half angular marked experimental", "d": "10/2016"}, {"body": "people mentioned using event best practice want ensure value updated jessedhillon curious specific case need info look still issues please open new issue minimal plunker take look", "d": "10/2016"}, {"body": "running angular final definitely intuitive", "d": "10/2016"}, {"body": "using angular via npm styling take effect", "d": "10/2016"}, {"body": "use angular standard data pipe ie nt working console nt show errors also tried use polyfillservice intljs localedatajsonprurujs nt work also tried use cdn link polyfilljs featuresintllocaleen amp unknownpolyfill also nt work missed kinda start thinking safe create pipe use inside momentjs something well reall world people use ie nt think something changed near years", "d": "10/2016"}, {"body": "szykov try browsers try add intl polyfill still working attach plunker", "d": "10/2016"}, {"body": "vicb thanks advising fixed issue seems messed order loading scripts first add polyfills start loading angular libraries make sense kinda messed loading scripts different html pages loading libraries part looks like also small note using link nt work also alwasy empty case using ie browser result something like polyfill service detailed credits licence information see ua detected features requested intllocaleen", "d": "10/2016"}, {"body": "ran using npm installed intl added following polyfilljs", "d": "10/2016"}, {"body": "problem applying solution jit environment fine aot still failing import intlindex import intllocaledatajsonpenjs working us unfortunately failing example entryvalue currency usd true itemexpirydate date mmyy", "d": "10/2016"}, {"body": "guys made lowfootprint minimalist enus date formatting library suitable custom pipe using gets sorted", "d": "10/2016"}, {"body": "hi simon thank", "d": "10/2016"}, {"body": "see earlier answer", "d": "10/2016"}, {"body": "grapemix aware solution holy cow going crazy app silently failing took days figure world going trying use currency pipe problem huge pita", "d": "10/2016"}, {"body": "moved link found robwormald", "d": "10/2016"}, {"body": "applicable", "d": "10/2016"}, {"body": "question issue closed resolution see state needs design mean anyones priority list might get back future angular version", "d": "10/2016"}, {"body": "gund fkolar looks like robwormald replaced issue issue http module issue still open might want comment", "d": "10/2016"}, {"body": "jansturenielsen gt sure", "d": "10/2016"}, {"body": "issue http repo jansturenielsen", "d": "10/2016"}, {"body": "understand happens set class debugappview function rethrowwithcontext cdmode status errored changes applied class appview function detectchanges cdmode compared changedetectorstatuserrored function simply returns without invocation case cdmode errored changes ignored", "d": "10/2016"}, {"body": "exception thrown every time clicking button written console since errorhandler unsubscribed first exception", "d": "10/2016"}, {"body": "going maptoiterable pipe default commons", "d": "10/2016"}, {"body": "agree megalucio really looking forward would allow take advantage build robust collections awesome appreciate work team put", "d": "10/2016"}, {"body": "going ngfor enforcing developer shape collection correctly ngfor time around enforcing best practices currently discovered case thing case write code without benefits", "d": "10/2016"}, {"body": "opinions good example reverting control viewmodel developer concern template assuming something like pipe html managing subscription observable value comes time value emitted convert model viewmodel keys model problem occurs trying grab model html key asyncitems async key get model async pipe created template operation template another problem occurs developer unaware subscribed request creating new subscription fix telling observable multicast observable via time subscribe observable receive reference first value developer controls modelviewmodel would create subscription component create reference viewmodel observable key model key class home asyncitems observableof model viewmodel sub constructor thissub asyncitems subscribe model gt thismodel model thisviewmodel objectkeys model notice able reason going template since simpler understand since logic simple understand problems potentially templatedriven approach nt exist handling complexity async value component full control expose template want determine order model would create order component either subscribe", "d": "10/2016"}, {"body": "guide also hmig fix make", "d": "10/2016"}, {"body": "bootstrap angular around existing html major use case eg immediate use case adding dialog boxes static content documentation site looks like upgrade adapter hope wo nt burned going route", "d": "10/2016"}, {"body": "sample worked", "d": "10/2016"}, {"body": "folder quickstart still mb crazy large", "d": "10/2016"}, {"body": "hey guys got interesting video angular beginners", "d": "10/2016"}, {"body": "think rename component overriding selector must enterprise grade applications anything ever implemented components could registered configurable selector searched docs could nt find anything", "d": "10/2016"}, {"body": "understanding correct one bootstrap means one run modules application case need initialise service possible run service module module fully initialised", "d": "10/2016"}, {"body": "put work constructor module", "d": "10/2016"}, {"body": "commandline well runtime api get major minor full version information", "d": "10/2016"}, {"body": "mhelvens match requirement use json schema nt tested yet", "d": "10/2016"}, {"body": "cschulz looks good face value though seems build broken look thanks", "d": "10/2016"}, {"body": "mhelvens new version works", "d": "10/2016"}, {"body": "running benchmarks internally google", "d": "10/2016"}, {"body": "tbosch see running benchmarks easily browser somewhere like firebasehosting", "d": "10/2016"}, {"body": "benchmarks running internally google calibrated machines", "d": "10/2016"}, {"body": "stale issue closing", "d": "10/2016"}, {"body": "stale issue closing", "d": "10/2016"}, {"title": "switch value keys back vue", "body": "vuejs version first would like compliment vuejs library looking choices frontend frameworks vue came top much bet major quarterly release framework rebuilding tools integrate amazing framework documentation community solid feature request revert using since coming vue library desire slowly update vue switching would greatly assist us upgrading vuejs expected value keys vue thank consideration", "num": "4077", "d": "10/2016"}, {"title": "feature request map parent attributes events binding component child element within component", "body": "using example message wanted add html attributes placeholder input box without adding placeholder new prop wanted bind keypress event input box without adding component like following currently result test label div element hope provide new feature routemap event bindingattributes attachment specific child element instead always root element like following test label", "num": "4075", "d": "10/2016"}, {"title": "createelement work well transition component", "body": "vuejs version reproduction link steps reproduce click click button nt show transition expected show fade transition actually happening nt show transition transition also working make render funtion compiled jsx", "num": "4074", "d": "10/2016"}, {"title": "works dev nothing build", "body": "vuejs version reproduction link steps reproduce execute code build badalejo component wo nt appear errors shown expected dev behaviour build display newly added component elements array actually happening new component nt shown", "num": "4073", "d": "10/2016"}, {"title": "vue vfor working element dataprop", "body": "vuejs version reproduction link steps reproduce html vmessage javascript var new vue el data items message foo message bar expected html foo bar actually happening html foo bar", "num": "4072", "d": "10/2016"}, {"title": "destroy beforedestroy send wrong component", "body": "components inside loop remove component data ui works expected beforedestroy always get last component property value test fiddle clicking remove button removes data index however beforedestroy method alert message ie last index html remove lt div gt lt span vtext aid gt lt span gt lt span vtext name gt lt span gt lt span vtext power gt lt span gt lt div gt javascript code vuecomponent demogrid template gridtemplate replace true props aid name object power object beforedestroy alert destroy thisaid creating new vue instance pass options object var demo new vue methods destoryele function aid thisgriddatasplice aid", "num": "4071", "d": "10/2016"}, {"title": "vhtml working iframes", "body": "vuejs version reproduction link steps reproduce add iframe vhtml rendered field expected iframe render actually happening clear looks like vue tries render iframe", "num": "4070", "d": "10/2016"}, {"title": "ref component returning element", "body": "hi new documentation vue states used normal element ref dom element used component ref component instance try access properties expected component get errors log logs element previously vue would logged component instance docs vue says also getting element need access instance properties", "num": "4068", "d": "10/2016"}, {"title": "feature request add reference vmodel directive hook signature", "body": "currently vue use directive element options know allows update vmodel within directive functions hooks first option modify html template pass vmodel name parameter like problem approach first dry vmodel name right repeat also errorprone verbose importantly poses difficulties used loop second option far better opinion keep html simple semantic accessing name via variable lists attached element one iterate array find named directive lastly access name attribute created helpers function javascript export function findvmodelname vnode return vnodedatadirectivesfind function search vmodel name attached element return oname model expression export function setvmodelvalue value vnode vnodecontext findvmodelname vnode value works well also loops know name beforehand feature request would simply modify directive hook function signatures add reference vmodel object new signature would like javascript bind el bindings vnode oldvnode vmodel would able modify vmodel attached element directive declared using vmodel would automatically update vmodel accordingly think would help lot think see example needed access vmodel following forum thread", "num": "4065", "d": "10/2016"}, {"title": "use parent methods properties component", "body": "component want access methods parent without props html vue code var usersdata firstname john lastname doe firstname martin lastname bust var vm new vue el el data users usersdata parenttext parent methods getfullname function user return userid userfirstname userlastname components user template fullname parenttext props item computed fullname function return getfullname thisitem vuejs version", "num": "4064", "d": "10/2016"}, {"title": "vif dynamically updated", "body": "plunk vif work dynamic data vif answer question must see comment question vif reload data view new isshow variable", "num": "4063", "d": "10/2016"}, {"title": "option support readonly object", "body": "vuejs version reproduction link steps reproduce componentsindexjs export foo bar etc import components components export default name app components expected show ok without errors actually happening browser throw error reasons", "num": "4062", "d": "10/2016"}, {"title": "composing templates slots", "body": "say layout component follows normally would one items inside element however avoid huge components like compose however try move child component stuck use wrapper element nt work case due strict css rules nt think move full element child component would apply parent element way circumvent composition limitation lt trying avoid wrap like way tell template use kind virtual wrapper node limitation web components wtf menu", "num": "4061", "d": "10/2016"}, {"title": "problem literal object props template", "body": "vuejs version reproduction link steps reproduce template literal object props may cause template rerender expected actually happening usage common vue however causes problem vue warning recommendation easy debug find cause warning message usage description vue guide helpful", "num": "4060", "d": "10/2016"}, {"title": "xx keyed data accessible thisxx access vm dataxx", "body": "vuejs version reproduction link steps reproduce run expected thismydata child component printed console actually happening undefined printed", "num": "4058", "d": "10/2016"}, {"title": "vmodel component error", "body": "vuejs version actually happening hi new vuejs making chat following tutorial tutorial guy puts vmodel component work component shown console answer text defined used jsfiddle want https request server nt put dontpad repository problem input id problem thanks", "num": "4057", "d": "10/2016"}, {"title": "watch invoked elements adding new element array", "body": "vuejs version reproduction link steps reproduce create watch every array element created adding new array element watch invoked original elements available although change done jsfiddle click multiple times add record button text changes reported watches contains notifications watch function invoked items array adding new one expected text changes reported watches empty individual elements change new element added array actually happening text changes reported watches contains notifications watch function invoked items array adding new one click add record click add record invoked watch item click add record invoked watch item invoked watch item click add record invoked watch item invoked watch item invoked watch item click add record invoked watch item invoked watch item invoked watch item invoked watch item etc", "num": "4056", "d": "10/2016"}, {"title": "style custom component generate code using vueserverrenderer", "body": "vuejs version reproduction link steps reproduce assume two custom components template use inline styles render browser render server compare expected inline styles work consistently browser server environments actually happening server render attribute browser server workaround template added root element passed style prop eg obvious docs valid code suppose argument could made custom properties defined accepted", "num": "4055", "d": "10/2016"}, {"title": "vue typescript types module nodemodulesvuetypesindex default export", "body": "ca nt import vue within typescript file types ok testts ts import vue vue compiler shows module nodemodulesvuetypesindex default export packagejson", "num": "4054", "d": "10/2016"}, {"title": "property method defined instance referenced render", "body": "error background issues getting vuejs work laravel application errors whenever run know components compiling happens runtime whenever try render components full error gets logged file defined tried steps outlined github issue work also deleted ran avail applicationvue import clients clientsvue export default mounted consolelog component ready components clients clientsvue import client clientvue export default data return clients components client mounted gt thisclients responsebody appjs require bootstrap vuecomponent app require componentsapplicationvue vuecomponent clients require componentsclientsvue vuecomponent client require componentsclientvue", "num": "4053", "d": "10/2016"}, {"title": "render funciton missing using avts vuerouter", "body": "vuejs version reproduction link steps reproduce npm install npm run dev expected see worked browser actually happening get warning browser console vueuse vuerouter line maints commented code work uncomment line project work get error browser console vue warn failed mount component template render function defined found component problem resolveconstructoroptions method vueloader avts used component created ts file using vueextend render function added object vueloader component created render function part extendoptions vuerouter used suprtoptions changed logic resolveconstructoroptions completely ignores options happens believe options must merged extendoption thing done still get render function added vueloader", "num": "4052", "d": "10/2016"}, {"title": "transition class bind null values domexception addclass function", "body": "vuejs version animatein bind value empty string null addclass function exception semantically binding null value intended remove transition effect null check made addclass function transition ignored case null values", "num": "4050", "d": "10/2016"}, {"title": "objects array prototype reactive", "body": "vuejs version reproduction link steps reproduce press buttons expected counters increment actually happening simply vue reactivity works objects objects prototype happening vue js fancyarrayprototype function fancyarray new vue data normalarray objectwitharrayprototype new fancyarray watch normalarray function consolelog normal array triggered objectwitharrayprototype function watch never triggered consolelog object array prototype triggered created function thisnormalarraypush hey gt prints normal array triggered hey thisobjectwitharrayprototypepush hello gt prints nothing mount app problem easily circumvented assigning property object array would nice able use objects array prototype", "num": "4049", "d": "10/2016"}, {"title": "code relative path error", "body": "srccoreconfigjs import noop sharedutil import noop sharedutil", "num": "4048", "d": "10/2016"}, {"title": "ca nt get old value use object literal directive", "body": "vuejs version reproduction link steps reproduce use object literal directive change expected old value actually happening value object", "num": "4047", "d": "10/2016"}, {"title": "uncaught promise typeerror intermediate value function", "body": "vuejs version vuerouter version webpack version steps reproduce \u4f7f\u7528vuecli", "num": "4045", "d": "10/2016"}, {"title": "camelcased custom event name working", "body": "vuejs version reproduction link modified custom event example documentation example steps reproduce create custom event name custom event using camelcase call custom event ie using emit child component custom event wo nt listened nothing happened jsfiddle example incrementone custom event name buttoncounter component wo nt work clicking button change incrementone custom event name increment back normal everything work properly expected camelcased custom event name called parent component child component calling using emit actually happening use camelcased name custom event respond call change lowercased event name order respond call", "num": "4044", "d": "10/2016"}, {"title": "interpolation inside attributes removed deprecated", "body": "brought forums first phanan agreed deprecated misleading warning message logged trying use interpolation inside attributes interpolation inside attributes deprecated use vbind colon shorthand instead example instead use suggests feature still present removed future avoided however already removed seems deprecated replaced removed happy create pr helpful repro steps use mustache html attribute view messages logged console fiddle nt show console warning demonstrates feature removed", "num": "4042", "d": "10/2016"}, {"title": "suggestion warn user overrides vue internal methods", "body": "currently properties start proxied vue instance may conflict vue internal nt apply methods leading problematic cases like one users may accidentally define methods override vue internal api suggestion though arguably belongs userland might helpful vue introduce console warning cases", "num": "4041", "d": "10/2016"}, {"title": "request feature bowerjson vue", "body": "thanks", "num": "4040", "d": "10/2016"}, {"title": "", "body": "", "num": "4039", "d": "10/2016"}, {"title": "vuecli", "body": "\u5b89\u88c5\u4e86sudo npm install g vuecli init webpack vuecli helpersifeq amp amp helpermissing call function", "num": "4038", "d": "10/2016"}, {"title": "functional components rerendered props unchanged", "body": "vuejs version reproduction link steps reproduce open jsfiddle click button multiple times expected component rerendered props changing actually happening functional component rerendered props unchanged regular component exhibits expected behaviour optimise avoid expensive renders complex application moving html logic functional components expect rerendered data passed nt change intended perhaps docs reflect quirk nt see reason always call render function safely assume resulting html unchanged input output", "num": "4037", "d": "10/2016"}, {"title": "ssr typeerror h function", "body": "trying implement serverside rendering faced problem try make ps using functional component project view", "num": "4036", "d": "10/2016"}, {"title": "ref name multiple item create array refs render function", "body": "vuejs version reproduction link steps reproduce expected refsa dom node list actually happening refsa single dom", "num": "4035", "d": "10/2016"}, {"title": "infinite loop custom component object properties", "body": "vuejs version reproduction link note loops number steps reproduce create custom component able use vbind create watcher updates local data variable based value prop create watcher local variable emit updated value back parent set value local variable object expected local value gets updated event emitted parent update bound value prop actually happening watcher value keeps firing keeps calling local variable watcher turn updates parent updates value basically work like works fine vmodel value stringintbool etc issue starts value object array understand javascript b b stands reason watcher nt called new value old value equivalent eg jsonstringify newvalue jsonstringify oldvalue missing something", "num": "4032", "d": "10/2016"}, {"title": "feature request check iterator vfor first last", "body": "need check iterator vfor firstlast example html key val problem arrayobject keys numeric vue", "num": "4031", "d": "10/2016"}, {"title": "triggering method child component broadcast", "body": "hi found users similar issue far solution please look code calls child component vfor childitem component method called toggle want trigger toggle method specific child component instance know cant dynamic ref el using index moreover children coming created broadcast defined suggestion solution thanks bala", "num": "4030", "d": "10/2016"}, {"title": "react contextlike feature", "body": "would react contextlike feature ever added context implicit way pass data component without pass props every level generally good idea use context applicationspecific logic useful objects like stores currently working helper mixin achieves something similar would prefer see baked core", "num": "4029", "d": "10/2016"}, {"title": "", "body": "", "num": "4028", "d": "10/2016"}, {"title": "truevalue falsevalue working like expected", "body": "following form binding request params directly bound vue data model thus expect following gt case empty string lead false positive tested vuejs", "num": "4027", "d": "10/2016"}, {"title": "\u5efa\u8bae\u6539\u8fdbconfig ignoredelements", "body": "ignoredelementsindexof tag \u8fd9\u4f1a\u5bfc\u81f4\u5f53 ignoredelements \u90fd\u53ef\u4ee5\u901a\u8fc7", "num": "4026", "d": "10/2016"}, {"title": "compile function", "body": "vuejs version miss self compile self el way rebuild page easy way realize many public js components base jquery selfrender function event listener although use jquery way bind function bla bla bla things vue think vue way better could u help found many others puzzle", "num": "4025", "d": "10/2016"}, {"title": "\u52a8\u6001 props\u5904\u5c11\u7684data \u662f\u9057\u6f0f\u4e86\u5417", "body": "\u8bf7\u95ee\u52a8\u6001 props \u662f\u5426\u5e94\u8be5\u52a0\u4e0a data", "num": "4024", "d": "10/2016"}, {"title": "embeddable apps", "body": "far understand many things vue bound vue prototype instance vuex router etc call bound extension prototype problem standalone vuedriven application makes impossible build encapsulatedembeddable apps modern techniques availability cors support browsers web trends growing market stuff widgets sort like button support chats weatherstock widgets fullfeatured embeddable applications one drop site page provide services emberjs provides option set without prototype overloading fully isolated configured route via history api base url case vue one main stopper target page already uses vue problems feature considered roadmap nt know amount work needed unbound extensions prototype break existent extensions think beneficial many cases", "num": "4023", "d": "10/2016"}, {"title": "feature request vonce databound", "body": "method restrain data responsive mean since vonce directive seems restrain data responsive like ever databound indicate restrain data responsive dom wo nt rerender data true data false dom still data responsive making search result page want hold search result static user entering new search term page fetching search result fulfill autocomplete user hit return key click search button search result refreshed pseudocode html", "num": "4020", "d": "10/2016"}, {"title": "vue work use", "body": "code used iframe tag value span tag turned hello world problem", "num": "4019", "d": "10/2016"}, {"title": "model number modifier fails cast selected value select element", "body": "vuejs version reproduction link steps reproduce change selected option look output element expected selected number type element bound variable model modifier actually happening vue fails cast selected value remains workarounds people suggested binding value workaround fix great modifier worked least would notice documentation", "num": "4018", "d": "10/2016"}, {"title": "allow css variable style binding object syntax", "body": "sure intentional would like able instead able find workaround quickly thanks doc search bit different important would like push feature thanks lot good work work pr agree proposition", "num": "4017", "d": "10/2016"}, {"title": "using class names instead attributes would make scoped styles faster", "body": "vuejs version vue per docs using generated attribute names scoped styles example turns selectors hover hover matching tracking invalidation attribute selectors slow though get much better recalcstyle see chrome devtools timeline performance use generated class name like hover", "num": "4013", "d": "10/2016"}, {"title": "strange behavior using conditional operator textxtemplates", "body": "hello working private project came across strange error simplified code reproduce anyways makes sense problem exists using replacing tag tag makes versions work applies dont use template eg use custom element component vuejs version reproduction link working working steps reproduce change concertbandslength gt index index lt concertbandslength expected version work actually happening latter version throws error parsing template", "num": "4012", "d": "10/2016"}, {"title": "suggestion schema management", "body": "hi know project frontend based manycomponentsforcreatingoneform vuejs good innovation pole would like raise feature schema management cooperation one however technical js enough coding project also interested meteor already sent message aldeed simple schema package maintainer think could good lever object oriented frontends would improve everything fast word file enclosed let know prefer another format updated version next post thanks marc", "num": "4009", "d": "10/2016"}, {"title": "\u5728django\u4e2d\u4f7f\u7528vuejs list \u7684 index defined", "body": "\u62a5\u9519 index defined", "num": "4008", "d": "10/2016"}, {"title": "official ducumented support ajaxxhrfetch requests", "body": "got vue loving however wanted simple ajax request things kind stopped ducked vue ajax request got lot different results non official used lib obvious choise seems vueresource reports people getting work etc another issue vueresource non promise api catch also nt seem support new fetch api guess issues vueresource mention project looks official request would official vue docs include example best ajax call newcomers nt spend hour searching best practice would recon apps use ajaxrequest think docs thanks great alternative react", "num": "4006", "d": "10/2016"}, {"title": "include", "body": "hi guys want include scipts page contactvue mode work working removed please help tks", "num": "4005", "d": "10/2016"}, {"title": "problem type console", "body": "document description document know open browser javascript console set appmessage different value see rendered example update accordingly code html message value", "num": "4004", "d": "10/2016"}, {"title": "use wechat jssdk fail", "body": "", "num": "4003", "d": "10/2016"}, {"title": "ssr possible scopeid interference two components rendering", "body": "vuejs version steps reproduce javascript import vue vuedistvuecommonjs import createrenderer vueserverrenderer const rendertostream createrenderer const padding new array join x const new vue template scopeid const new vue template scopeid var rendertostream var b rendertostream var res aon data text gt res texttostring replace xg aon end gt consolelog res aread bread expected scopeid independent thus log html actually happening scopeid goes html found reading server rendering code problem shared across render functions returned nt know nodejs schedules stream flowing might pernicious bug two streams calls interleaved", "num": "4002", "d": "10/2016"}, {"title": "vue router routerlink update properly using tag", "body": "vuejs version vue version vuex version vuerouter version reproduction link steps reproduce hover link see click button see site id changed link expected click button see actually happening see fix remove tag", "num": "4001", "d": "10/2016"}, {"title": "list rendering vhtml nt work well", "body": "html elements always get replaced working intended anyone know workaround allow stay instead going back external plugins return arbitrary html rendered list good example embedded youtube videos unwatchable keep getting replaced", "num": "4000", "d": "10/2016"}, {"title": "local components inheritance", "body": "topic discussed long time ago want return think many developers benefit feature try make apps modular possible moreover component approach forces us make many simple mostly stateless components components set treelike hierarchy often leads situation set components used one branch tree case registering components globally bad thing obviously register globally truly global used app hand registering locally lead code overbloat repeatings rises possibility errors makes app support harder show real example app currently working many cases structure cutted illustrate case app considered sort subapplication thing like keynote powerpoint consists various components key used builder various subcomponents lots tens templates never used outside builder obviously good register globally also obviously repeated local registration components many places horrible yes probably could collect components single file export object require file several places object destruction work bad fact way forced html editorvue export default components require componentsslides default really nt think proper solution like hack work granular cases also nt think local components inheritance break dependency tree lucidity especially vue inspector could tip component came maybe type components b registered property something like thing think suggest feature make life easier many scenarios", "num": "3999", "d": "10/2016"}, {"title": "index defined", "body": "someone help index defined code x methods removeelement function e index epreventdefault thiselementssplice index", "num": "3998", "d": "10/2016"}, {"title": "overwriting style attribute vue", "body": "hello vue style attribute merged vue completely overwritten design following jsfiddle remove style attribute apply style within component definition long style present main html window completely overwrite component style thanks", "num": "3997", "d": "10/2016"}, {"title": "\u539f\u6765vue\u7684\u6570\u636e\u8fd8\u53ef\u4ee5\u8fd9\u4e48\u54cd\u5e94", "body": "", "num": "3996", "d": "10/2016"}, {"title": "template vfor item items \u4e0d\u80fd\u5168\u90e8\u6e32\u67d3\u4fe1\u606f", "body": "itemtitle", "num": "3995", "d": "10/2016"}, {"title": "events components bubble parent", "body": "vue componentavue componentbvue componentcvue", "num": "3994", "d": "10/2016"}, {"title": "dom rendering first time flashing use vif vshow vcloak", "body": "vuejs use correctly", "num": "3993", "d": "10/2016"}, {"title": "select option value ca nt rendered expected", "body": "got problem project render select like use string value first option could caught vuevalidator user nt select one options use default value formdatatype vue object wondering vuejs ca nt render first option chosen page default value choose first option value formdatatype vue ca nt render select first option chosen formdatatype", "num": "3992", "d": "10/2016"}, {"title": "vuejs", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3991", "d": "10/2016"}, {"title": "vue vbind class work", "body": "render div class binding something wrong result chrome like child div anyone help", "num": "3990", "d": "10/2016"}, {"title": "ignore vmodel", "body": "vuejs version reproduction link vmodel use vuejs chrome console output vue warn failed compile template use vueminjs information outputed console empty webpage steps reproduce expected ignore case dont compile like von click cause problem actually happening", "num": "3989", "d": "10/2016"}, {"title": "strange component communication", "body": "vue data object without defined property fail property receive event another component triggered event step reproduce type fail field type success field vue fine reaction success field nt receive text property", "num": "3987", "d": "10/2016"}, {"title": "input dont want reactivity", "body": "hi typing input model effect e reactivity orderwhotook export default props list json list objects", "num": "3986", "d": "10/2016"}, {"title": "problem custom directive update callback", "body": "vuejs version reproduction link steps reproduce write something input watch console expected updatefunction excuted change input value actually happening updatefunction excuted change input value", "num": "3985", "d": "10/2016"}, {"title": "use key prop name component", "body": "vuejs version reproduction link steps reproduce sample expected thiskey key actually happening thiskey undefined vue problem", "num": "3984", "d": "10/2016"}, {"title": "data pushed array trigger update view", "body": "data pushed array trigger update view", "num": "3983", "d": "10/2016"}, {"title": "emit component work", "body": "create events component created vue component code work create component trying call event jquery work work app", "num": "3982", "d": "10/2016"}, {"title": "inlinetemplate issues", "body": "inlinetemplate components must exactly one child element", "num": "3981", "d": "10/2016"}, {"title": "unable watch nested data", "body": "vuejs version reproduction link steps reproduce create component nested data property object object containing array set watcher property specifying deep flag expected value array changes watcher runs actually happening watcher nt getting triggered code seemed work fine vue nested objectsarrays correct way managing view lots inputs", "num": "3979", "d": "10/2016"}, {"title": "templates functional components", "body": "like able write templates files functional components way standard components made proofofconcept fiddle quite hacky maybe template compiler could option make resulting functions adapted object would look like propsmsg static content n export default functional true props msg test margin", "num": "3977", "d": "10/2016"}, {"title": "removing element iterated array chekbox update model containing values selected checkboxes", "body": "vuejs version reproduction link steps reproduce select last checkbox click button remove last checkbox expected expected remove value checkbox removed selecteds variable actually happening value removed checkbox remains array selected checkboxes thank effort", "num": "3976", "d": "10/2016"}, {"title": "class binding removes dynamically added classes", "body": "vuejs version reproduction link steps reproduce see fiddle create vbind class dynamically add class using js elementclassname change vbind class binding value overwrite class added using elementclassname expected vue possible dynamically add classes important mdl support dynamically adds classes like isupgraded actually happening class names added manually removed", "num": "3975", "d": "10/2016"}, {"title": "allow mode transitiongroup", "body": "standalone demo repo shows issue click button click second notification appears first one disappears meant solve tag equivalent leads unattractive transition effect example could use instead except fact click button button vue gives error saying need use", "num": "3974", "d": "10/2016"}, {"title": "lt pug nt work", "body": "env macos beta nodejs vuejs steps reproduce init test vue project default options edit srccomponentshellovue div div vif lt export default run dev server actually happening got error test dev usersxiaoxiaotest node builddevserverjs listening webpack wait bundle finished indexhtml webpack built hash version webpack time asset size chunks chunk names appjs kb app error srccomponentshellovue module build failed error error parsing template lt export default babelloader vueloaderlibselectorjs typescript amp srcappvue child htmlwebpackplugin indexhtml asset size chunks chunk names indexhtml mb webpack bundle valid description similar issue however situations replace lt wo nt trigger error bug pug error occurs pug called fact error happens even pug installed thanks time review issue", "num": "3973", "d": "10/2016"}, {"title": "vuecompile function", "body": "using vuejs webpacksimple template would compile template render code appvue javascript msg export default name app mainjs javascript import vue vue import app appvue const res vuecompile app const vm new vue el app data msg hello render resrender staticrenderfns resstaticrenderfns start server got error please help make work", "num": "3972", "d": "10/2016"}, {"title": "", "body": "child msg export default data return msg hello vue parent import hello componentshello export default components hello methods handleclick consolelog handleclick \u8fd9\u662f\u4f7f\u7528vue", "num": "3971", "d": "10/2016"}, {"title": "slog component working render function", "body": "vuejs version followed babelplugintransformvuejsx using jsx project everything goes well except get component working use function code child component jsx imagepreviewjsx export default vueextend mounted consolelog use template work template hi parent componentapp jsx import imagepreview imagepreviewjsx new vue el app inspect element devtool element", "num": "3970", "d": "10/2016"}, {"title": "empty value property causes template compilation fail", "body": "vuejs version reproduction link steps reproduce bind prop empty string value provide json object string would work use empty string template fail compile sure expected behaviour vue used work vue however feels little counterintuitive example providing content prop serverside need check exists return literal string otherwise expected application still renders property becomes empty string null actually happening warning shown console application fails render found root instance", "num": "3969", "d": "10/2016"}, {"title": "view updated wechat browser", "body": "update project find data updated settimeout nt update view occur wechat browser", "num": "3968", "d": "10/2016"}, {"title": "component templates render first element", "body": "vuejs version reproduction link expected render renders fails works actually happening component template rendering first element discarding rest nt matter whether inline result", "num": "3966", "d": "10/2016"}, {"title": "vue problem slot", "body": "hello using vue standalone problem components slot always render default value inside slot never render content inside custom component packagejson name webcomponents description vuejs project author private true scripts watchify watchify vd p browserifyhmr e srcmainjs distbuildjs serve c localhost dev npmrunall parallel watchify serve lint eslint ext js vue src testunit test karma start karmaconfjs build crossenv nodeenvproduction browserify g envify p vueifypluginsextractcss distbuildcss e srcmainjs uglifyjs c warningsfalse gt distbuildjs browserify transform vueify babelify aliasify aliases vue vuedistvue dependencies vue devdependencies aliasify babelcore babelplugintransformruntime babelruntime babelify browserify browserifyhmr crossenv envify eslint eslintconfigstandard eslintpluginhtml eslintpluginpromise eslintpluginstandard jasminecore karma karmabrowserify karmajasmine karmaphantomjslauncher karmaspecreporter npmrunall phantomjsprebuilt proxyquireify uglifyjs vueify watchify mainjs show failed mount component template render function defined import vue vuedistvue import vue vue import hello componentshellovue vuecomponent hello hello new vue eslintdisableline nonew el app hellovue html msg defect export default name hello data return msg welcome vuejs app indexhtml html webcomponents change value", "num": "3965", "d": "10/2016"}, {"title": "vonce nt work list rendering", "body": "like", "num": "3964", "d": "10/2016"}, {"title": "watched input old value new value", "body": "vuejs version reproduction link steps reproduce write something input watch console expected new value old value different actually happening new value old value", "num": "3962", "d": "10/2016"}, {"title": "feature request add maxstack component keepalive", "body": "like vue cache switchedout components", "num": "3961", "d": "10/2016"}, {"title": "localregistration data vue data must function", "body": "", "num": "3960", "d": "10/2016"}, {"title": "add function reset component state", "body": "function vue core reset component state like simplify common pattern lead clearer code code function getinitialdata return b export default data getinitialdata methods reset data getinitialdata submit stuff thisreset would become", "num": "3959", "d": "10/2016"}, {"title": "vue vmodel updating using array", "body": "process migrating application vue application several selects vmodel binds individual index array without problems vue version update believe potential bug reproduced problem vuejs version reproduction link steps reproduce expected actually happening", "num": "3958", "d": "10/2016"}, {"title": "mixins props correctly mixed registered globally", "body": "vuejs version reproduction link steps reproduce register mixin props globally pass prop value component expected myprop becomes prop hellovue value myprop foo actually happening value myprop undefined notes props correctly mixed registered directly component using default values passed correctly never change clone provided git repository run see bug repo contains two components hellovue hellowithlocalmixinvue demonstrate apparently buggy behavior also see appvue mainjs", "num": "3957", "d": "10/2016"}, {"title": "problem updating array key binding element", "body": "vuejs version reproduction link steps reproduce click change button update array expected dom update display james bill actually happening james displayed following warning logged console exception raised uncaught promise typeerror read property tag undefined lign", "num": "3955", "d": "10/2016"}, {"title": "compile", "body": "sorry ask question asked gitter vuejs forum nt receive answer really stuck feel free close thinks asked wrong place currently using trying migrate technical reason components loaded inserted dynamically call inserted components rendered correctly notice looks like nt help thanks", "num": "3954", "d": "10/2016"}, {"title": "computed property changing", "body": "asked vue gitter room said looks good verify prop component receiving changing looking vue devtool problem computed property change component export default name postable props items computed empty function newitems return objectkeys newitems length methods mapactions addtopos props passed parent even tried moving computed used store value directly thing always", "num": "3953", "d": "10/2016"}, {"title": "installation docs link version", "body": "", "num": "3952", "d": "10/2016"}, {"title": "vmodel textarea tag rendering time long", "body": "vmodel textarea long data case rendering time long browser blocked form tags problem", "num": "3951", "d": "10/2016"}, {"title": "component data reset inside vfor", "body": "vuejs version reproduction link description hello guys problem stupid doubt bug researches led nothing vfor component problem update array used vfor everything alright except data component keeps values also created called like components sort recycled bug using wrong thanks", "num": "3950", "d": "10/2016"}, {"title": "using element using vue makes element disappear dom errors console", "body": "version vueminjs vue library based recommended template working ok vue using element using vue makes element disappear dom errors console", "num": "3949", "d": "10/2016"}, {"title": "runtimeonly build cdn contain references processenvnodeenv offer alternative build", "body": "bundling code using vue unpkg even using option forced use standalone build runtimeonly one node variables like uncaught referenceerror process defined", "num": "3948", "d": "10/2016"}, {"title": "inheritbind props parent", "body": "allow child component auto inherit props parent html hello export default props hello string html world world import componenta componentavue export default props componentaprops components componenta", "num": "3946", "d": "10/2016"}, {"title": "nexttick nt guarantee el indocument", "body": "vuejs version steps reproduce try use chrome logs error mounted nexttick gt thiscalendarheight elqueryselector calendar getboundingclientrect height", "num": "3945", "d": "10/2016"}, {"title": "data attribute point function defination", "body": "hi want set data attribute point function definition set methods like possible data return handler thismethodshandler methods handler consolelog", "num": "3944", "d": "10/2016"}, {"title": "vueset nt support sparse array", "body": "jsfiddle expected would bug got instead", "num": "3942", "d": "10/2016"}, {"title": "vue packages version mismatch", "body": "vuejs version reproduction link app ci log app console says use ci build app bug happens ci log shows fyi used template create app reinstalled weird thing use works well", "num": "3941", "d": "10/2016"}, {"title": "allow root nodes vif velse", "body": "ver macchrome \u770b\u4e0a\u9762\u7684\u5730\u5740\u8bf4 \u4fee\u590d\u4e86 \u4f46\u662f \u5f53vif\u6761\u4ef6\u6210\u7acb\u65f6 vif\u80fd\u6b63\u5e38\u6e32\u67d3\u51fa\u6765 \u5f53vif\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6 velse\u5e76\u4e0d\u4f1a\u6e32\u67d3\u51fa\u6765 test \u4ee3\u7801\u4e2d\u7684button \u5e76\u6ca1\u6709\u6e32\u67d3\u51fa\u6765 code render", "num": "3940", "d": "10/2016"}, {"title": "vue working ios", "body": "render ios lt ios work fine", "num": "3939", "d": "10/2016"}, {"title": "vuetransition function webpack vue project", "body": "import vue vue vuecomonent test template test ok blow code run got error uncaught typeerror vuetransition function vuetransition fade css false enter function el done el css opacity animate opacity done entercancelled function el el stop leave function el done el animate opacity done leavecancelled function el el stop", "num": "3938", "d": "10/2016"}, {"title": "ca nt seem bind value attribute inputs", "body": "following works results following enter foobar field however try thing value nt behave results", "num": "3937", "d": "10/2016"}, {"title": "strange dom behaviour", "body": "preface read docs think done right thing ie proper oneway flow passing data props emitting events properly content changes might something really dumb please accept apologies really super clear going wrong vuejs version reproduction link visit steps reproduce swap blocks around using updown arrows note everything fine add new block set content eg add second new block notice content copy previous block data correctly blank move top block one notice renders correctly empty move back data looks fine dom displays content previous block eg set content top block eg move top two blocks display data ok move block back everything looks fine expected see description actually happening top block displays copy second block despite correct data", "num": "3935", "d": "10/2016"}, {"title": "trim whitespaces texts vuetemplatecompiler output", "body": "love feature single file components allow proper syntax highlighting write html without putting everything awkward javascript strings proper indentation within template useful improve readability files consider example compile webpack resulting bundle contains compiled version template find following line option described configure webpack get following note one array entry gone ie whitespace removed leading trailing whitespaces string feature rrequest allow trim texts compilation result look like changing line follows achieves want know whether might break complex layouts posted issue discussion", "num": "3934", "d": "10/2016"}, {"title": "flow directory missing installing vue npm", "body": "please publish flow directory delcaration files npm see types folder typescript users would try switch typescript flow also vuerouter missing flow directory installed npm thank advance", "num": "3933", "d": "10/2016"}, {"title": "inlinetemplate component compile slot use", "body": "vuejs version reproduction link", "num": "3931", "d": "10/2016"}, {"title": "transition leave hooks getting triggered", "body": "vuejs version reproduction link steps reproduce toggle button console displayed expected leave hooks triggered enter ones actually happening enter hooks getting triggered", "num": "3930", "d": "10/2016"}, {"title": "duplicate attribute class edge ie", "body": "vuejs version reproduction link steps reproduce load page edge internet explorer console open vue display warning duplicate attribute class removing attribute warning goes away expected warnings expect vue use regular attribute attribute merge together attribute", "num": "3929", "d": "10/2016"}, {"title": "", "body": "vuejs version steps reproduce \u4fe1\u606f\u4e3a message index var vmnew vue el vuedemo data message hello vuejsindex url wwwbaiducom expected \u6211\u60f3\u8ba9id\u7684 index actually happening index \u5e76\u6ca1\u6709\u663e\u793a", "num": "3928", "d": "10/2016"}, {"title": "ca nt receive event global child component event emit router beforeeach method", "body": "vuejs version steps reproduce expected receive event child actually happening received nothing event stickywhen emit child component may created", "num": "3927", "d": "10/2016"}, {"title": "", "body": "\u4fe1\u606f\u4e3a message index", "num": "3926", "d": "10/2016"}, {"title": "", "body": "\u4fe1\u606f\u4e3a message index", "num": "3925", "d": "10/2016"}, {"title": "initial inline input value", "body": "vuejs version reproduction link switching realize possible define model initial value template anymore let say serverside validated form preview powered vue brings back user validation detected error like populate form previously typed values get corresponding preview simply set inline value anymore vue warns took look migration guide found confirmation possible anymore ca nt find workaround course simple solution would modify initial value model within vue instantiation children component vue file webpacked scripts got solution working seems little bit overkill regarding usual elegance vuejs aim issue way pass initial value vmodel template vue used", "num": "3924", "d": "10/2016"}, {"title": "use keyword vuetemplatecompiler", "body": "exactly bug feature request apologies advance appropriate post inquired gitter chat nt able figure trying understand use deprecated keyword templaterender functions use strict mode basically nil means templated render functions work limits packagability vue components unless created exclusively virtualdombased render functions ran across issue trying webpacktogether bunch vue components spread across different modules webpack complains use keyword use strict context nt possible refactor template compilation use would slow massively real question recommended way packaging vue components render functions imported natural way without running afoul webpack strict guidelines", "num": "3923", "d": "10/2016"}, {"title": "set already created unmounted component", "body": "gone docs got response chat room forum starting wonder currently possible create dynamic component via setting component ca nt seem set existing component instance example working non working case components need setting shown setting data calling methods", "num": "3920", "d": "10/2016"}, {"title": "render functions behaviour changed without notice", "body": "since version subtle changes createelement behave createelement first argument string html tag prior accepting globally registered components render function must return value getting rendered without rising errors examples raise error jsfiddle link", "num": "3919", "d": "10/2016"}, {"title": "issues templates jsfiddle require updating", "body": "noticed issues template states default vue would nicer state additionally follow fiddle link provided nt execute example setting body element forbidden", "num": "3918", "d": "10/2016"}, {"title": "multiple select elements change event problem", "body": "multiple select box work vue instance vuejs version vuejs reproduction link steps reproduce change second select box value method testmethod called infinite times even bonded second select box change first select box value later change second select box value everything works expected expected update different models select actually happening infinite call assigned change method", "num": "3917", "d": "10/2016"}, {"title": "ca nt change select box arrow keys certain cases", "body": "uploaded simple standalone project explains situation focus select dropdown try use updown arrow keys change nt work console oninput get printed though every key press comment work leave uncommented instead remove class part work well working latest stable chrome tried figure could causing strange behavior luck", "num": "3916", "d": "10/2016"}, {"title": "template syntax error vmodel support dynamic input types use vif branches instead", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3915", "d": "10/2016"}, {"title": "get props value code", "body": "hi guys may know get props value code template vbind want get props value control css class data function like", "num": "3914", "d": "10/2016"}, {"title": "nested vfor bug", "body": "vuejs version reproduction link steps reproduce use vfor render component component write vfor template wrapped root element open console run test function expected open console run success function actually happening throw warning error uncaught promise typeerror read property tag undefined situation however one contains two templates vif nested vfor one contains three templates vif project contain also want know template nested vfor run good", "num": "3913", "d": "10/2016"}, {"title": "style affect value update", "body": "vuejs version reproduction link written example jsfiddle steps reproduce style opacity isshow default value isshow dom hidden change value another property second expected nt effect style renderer results value changed actually happening change value another property second hidden dom show", "num": "3912", "d": "10/2016"}, {"title": "ios safarichrome multiselect vue", "body": "yet run fiddle ios safari chrome see first items selected open select item unselected click done items remains open item unselected click done items selected openclose items selected repeat sequence items items keep changing without selecting deselecting anything", "num": "3911", "d": "10/2016"}, {"title": "transition children created vfor triggered appear", "body": "vuejs version reproduction link steps reproduce list vfor transition item expected transition triggered adding item runtime actually happening transition triggered removing item adding", "num": "3909", "d": "10/2016"}, {"title": "transitiongroup working tables", "body": "transitiongroup appears ignored applied table furthermore keep pressing shuffle button rows getting cut", "num": "3907", "d": "10/2016"}, {"title": "vif amp amp operator working", "body": "vuejs version steps reproduce give error could problem pug render engine translating", "num": "3906", "d": "10/2016"}, {"title": "style value ignored", "body": "related vuejs version steps reproduce problems reproducing jsfiddle even projects inconsistent html expected div actually happening property style add runtime shows rerender missing vue inspector also shows string works expected", "num": "3905", "d": "10/2016"}, {"title": "", "body": "child parent", "num": "3902", "d": "10/2016"}, {"title": "chromevue multiple select items selected correctly", "body": "addition issue via opened issue also another problem know related looking solution tried right away multiple selections nt work last item selected preselected items ps vue works fine already downgraded apps", "num": "3901", "d": "10/2016"}, {"title": "migration vm destroy nt apply leave transition", "body": "vm destroy take one parameter remove set true related dom element removed dom important apply leave transition well seems way trigger leave transition case since remove deprecated simple example content class toast show msg var comp new vue toastcomp compcontent msg comp mount appendto body settimeout gt comp destroy true called create new vue instance append body removed automatically see version", "num": "3900", "d": "10/2016"}, {"title": "entities encoding problem ssr", "body": "vuejs version reproduction link steps reproduce open browser expected basicrenderingentitiesencoding function done var renderer require vueserverrenderer createrenderer actually happening entities codes rendered page contains entities codes like", "num": "3899", "d": "10/2016"}, {"title": "mounted hook nt triggered instantiated parent", "body": "vuejs version reproduction link steps reproduce instantiate vue parent mounted triggered nt know normal behavior think tell missed something noticed mounted hook called createcomponentjsinsert nothing going executing code thanks vue btw awesome lib", "num": "3898", "d": "10/2016"}, {"title": "data variables accessed computed property filter function", "body": "see code pen demonstrating data variable accessible within list filter accessible assign temporary variable filter", "num": "3897", "d": "10/2016"}, {"title": "issue inside component", "body": "vuejs version reproduction link steps reproduce expected actually happening shows button element browser chrome", "num": "3896", "d": "10/2016"}, {"title": "issue rendering certain unicode characters", "body": "vuejs version reproduction link steps reproduce run jsfiddle see content nt displayed errors console expected would expect app run regardless unicode characters without errors actually happening found root instance uncaught typeerror set property isstatic undefined background sure right place feeling bug vue also point knowledgable character encodings information testing vue upgrade website lot usergenerated content appears usergenerated contains uncommon unicode characters like line separator appear invisible standard however appear content vue page vue fails completely removes entire dom node tree leaving page bare jsfiddle demonstrates issue notice jsfiddle highlights unicode character question remove character app runs correctly", "num": "3895", "d": "10/2016"}, {"title": "typing chinese ime vmodel bound input keydown listener", "body": "issue concerns chinese ime think affects chinese users following chinese vuejs version reproduction link steps reproduce \u4f7f\u7528 macos \u81ea\u5e26\u7684\u4e2d\u6587\u8f93\u5165\u6cd5\u5728\u8f93\u5165\u6846\u8fdb\u884c\u8f93\u5165 expected actually happening \u4ee3\u7801\u7684\u7b2c \u81f3 vue \u5728 macos \u6ca1\u6709\u6d4b\u8bd5", "num": "3894", "d": "10/2016"}, {"title": "add warning trim event handler extra space template", "body": "vuejs version reproduction link steps reproduce see extra space click link output expected console warn event handler nt exist execute directly actually happening console output nothing even webpack dev environment vue nt show warning expect vue give warning situation trim execute method", "num": "3893", "d": "10/2016"}, {"title": "views created inside components put global scope", "body": "vuejs version reproduction link steps reproduce set template component tag attribute create view components field components firstview vuecomponent firstview render function createelement return createelement div slotsdefault create second component render expected documentation states components created object component available component scope actually happening view becomes global component makes code reuse tricky gives unexpected results using somewhat generic view names", "num": "3892", "d": "10/2016"}, {"title": "vue compile template string browsers", "body": "vuejs version standalone build reproduction link steps reproduce expected link url compiled actually happening vue compile template string tencent qq mobile wechat uc mobile browsers", "num": "3891", "d": "10/2016"}, {"title": "vue single letter key aliases key modifiers nt work", "body": "vuejs version reproduction link steps reproduce type v first textbox expected expected see alert actually happening alert shown info type v second textbox uses keycode instead key alias works expected", "num": "3890", "d": "10/2016"}, {"title": "bug use amp amp directive transfrom amp amp", "body": "use amp amp directive transfrom amp amp gt nt want use compiled cause simple", "num": "3889", "d": "10/2016"}, {"title": "nt bind chrome extension", "body": "vuejs version steps reproduce use vuejs chrome extension revert nt problem expected vuejs initializes fires ready method data event binding occur template actually happening ready fires binding nt occur", "num": "3888", "d": "10/2016"}, {"title": "v two waybind doesntwork", "body": "worked get mistake v js function html child \u65b0\u589e x \u8f93\u51fa", "num": "3886", "d": "10/2016"}, {"title": "hover work", "body": "work listgroupitem hover function find dask stop delay animate top function find dask stop animate top", "num": "3884", "d": "10/2016"}, {"title": "array directly inside array get watched", "body": "vuejs version reproduction link steps reproduce press create text press button expected text appeared right pressing create text instead press actually happening first instantiation vuejs app observer initial data see inner array nt watchers assigned inner loop template iterates array expect watcher created interestingly vue method triggered watched vue view appears refresh texts added inner array appear apparently longer example commit fixed issue real world case using empty array directly within array empty array nt watchers automatically set even though iterating template changing inner array instead object property empty array able get watchers watch empty array think bug nt wrap arrays objects nt want think edit updated description according jsfiddle reproduction", "num": "3883", "d": "10/2016"}, {"title": "lifecycle broken nested keepalive components", "body": "vuejs version reproduction link steps reproduce open reproduction link go authregister play step buttons console see components correctly activateddeactivated click login button redirected home view console see authloginregister components properly destroyed except components inside register component destroyed hook nt called expected dynamic component inside nested component always properly destroyed case redirecting see following logs console auth component destroyed login component destroyed register component destroyed destroyed step x actually happening destroyed hook step component never called means component never destroyed", "num": "3882", "d": "10/2016"}, {"title": "working working", "body": "working working without errors recently switched giving multiple warnings errors get warnings declaring initial values select components app data option ignored warning getting error app working works switch back fix", "num": "3881", "d": "10/2016"}, {"title": "conditional statements paths may exist", "body": "vuejs version reproduction link steps reproduce see could use computed property changing statements eg vif mydata amp amp mydatapath amp amp mydatapathexists ideal would add lot unnecessary code expected vue would fail property path exist actually happening typeerror exception thrown", "num": "3880", "d": "10/2016"}, {"title": "multitype prop validation consistent", "body": "vuejs version reproduction link steps reproduce create component prop type instantiate boolean value shorthand prop notation expected booleans accepted passed validator boolean value actually happening see validate booleans shorthand prop notation defining reversed seem work expected except able pass false value observations noticed following magic nt seem take option array types account", "num": "3879", "d": "10/2016"}, {"title": "multiple root components could allowed vif velse used", "body": "vuejs version reproduction link steps reproduce set standalone component template computed field computed iscomplex return false true expected following resolves exactly component believe could allowed throw error missing root component making return example display would display actually happening component template contain exactly one root element", "num": "3878", "d": "10/2016"}, {"title": "vmodel dynamic input type", "body": "vuejs version reproduction link building form component given radio check inputs similar like reuse component type dynamic ismulti flag turning checkbox rather radio nt seem work vmodel vuejs", "num": "3877", "d": "10/2016"}, {"title": "word emitted written emit ted migration vue doc", "body": "vuejs version reproduction link steps reproduce read first line listening native events components von chapter migration vue used component von listens custom events ted component expected used component von listens custom events emitted component actually happening ted", "num": "3875", "d": "10/2016"}, {"title": "suggest props used without declare better", "body": "case always define component suit almost scene always extend component fit one project vue props declared component makes complex need declare props like rect props used validation", "num": "3874", "d": "10/2016"}, {"title": "mistake code sample documentation", "body": "line removed initialize instances", "num": "3873", "d": "10/2016"}, {"title": "functional component used named slot another component", "body": "vuejs version reproduction link steps reproduce run demo expected default slot fallback inner actually happening inner named slot fallback replace part instead replaces part seems attribute working works fine deleted line functional component supposed named slot another component using wrong", "num": "3872", "d": "10/2016"}, {"title": "computed class bug originally designed", "body": "found bug using computed props class changed data generation always class default node merges maybe manually added class removed class vue help add eg fix js function updateclass oldvnode vnode updatevnodestaticclass vnode fix custom addclass elclassname var cls genclassforvnode vnode fix function updatevnodestaticclass vnode var el vnodeelm var data vnodedata var classlist arrayprototypeslicecall elclasslist var staticclass datastaticclasssplit find diff class elclassname classlistforeach function item var vnodeclass objectkeys dataclass vnodeclassindexof item amp amp staticclassindexof item staticclasspush item vnodedatastaticclass staticclassjoin", "num": "3871", "d": "10/2016"}, {"title": "child components hook called hook", "body": "vuejs version reproduction link steps reproduce open jsfiddle open devtools click show modal result view click ok modal observe consolelog statement order expected components hook always last hook fired actually happening hook getting called first hook later note makes difference component applied remove attribute modal hook order stays using tool like selectizejs inside modal want selectize stay modal offscreen destroy use events fire modal transitioned effect see flash destroyed selectize control", "num": "3870", "d": "10/2016"}, {"title": "vue null data causes render errors", "body": "vuejs version steps reproduce set data entry null instance mounted use vueresource request stats object replace template use stats item need statsproducts products actually happening idea make work without error console tried setting stats object default vue ideal tried use vif prevent rendering data properly available working either", "num": "3869", "d": "10/2016"}, {"title": "compatibility problem ssr", "body": "bundle rendering nt work exports function using instead server entry point throws error looks like compatibility problem bundle rendering changed codes nodemodulesvueserverrendererbuildjs following typeof mexports function resolve mexports context return var res objectprototypehasownpropertycall mexports default mexportsdefault works", "num": "3867", "d": "10/2016"}, {"title": "router routerstart either migration andor migrationhelper", "body": "old code var app require componentappvue var router new vuerouter routertransitiononload true routermap component frontcomponent routerredirect routerstart app app running migration tool code var app require componentappvue var router new vuerouter routes path redirect path component frontcomponent path station component boardcomponent path station url component journeycomponent routerstart app app im getting looked vue router migration routerstart defined anywhere looked docs router routerstart defined anywhere getting started use vue file generate app bit lost", "num": "3865", "d": "10/2016"}, {"title": "compile dynamic template bind vue event listeners", "body": "datatable component using many different componentspages different data pass object columns renders datatables action buttons edit delete nt action button trigger function component called code var datatablecomponent template datatabletemplate props columns default function return type array url default null type string data function return data mounted function thisgetdata methods getdata function fetch data api using defined url thisdata items id title test id title test id title test vuecomponent datatable datatablecomponent new vue el app data function return columns key id title id key title title title key id title options html function item return edit methods edititem function item alert editing item lt div gt datatable title would cool able somehow compile html content given columns object use vue provided elements directivespluginsmixins etc tried turning column definition components sure good idea define global components every column html field vue logic vue used partials handled problem well gotten little harder p guys idea think way solve problem also people wondering possible", "num": "3863", "d": "10/2016"}, {"title": "possible tag feature", "body": "tags reserved easy handle items like group container eg vif validations vfor cycles parent content extention dynamic component nt simplest need let mutate single element choice create depending container create dinamic element let choice create examples think could create reserved tag like component call eg know vue using render think render harder handle something simple choice use", "num": "3862", "d": "10/2016"}, {"title": "serverside rendering broken due render callback invoked multiple times situations", "body": "creating serverside rendering benchmark found benchmark breaking render callback passed invoked multiple times problem occur component rendered times rendering exact component large number times benchmark caused error created minimal repo reproduce problem additional docs please let know missing something looks like bug", "num": "3861", "d": "10/2016"}, {"title": "computed value parent child component props reactive", "body": "like title describe parent component parent component computed value set cache false reactive dependency getter like datenow want send computed value child component props fact computed value child component reactive example show resize editor click button see think normally computed value reactive component", "num": "3860", "d": "10/2016"}, {"title": "page found readmemd", "body": "links readmemd page working github page found info file found site configured address contain requested file site make sure filename case matches url root urls like must provide indexhtml file read full documentation information using github pages vuejs version reproduction link steps reproduce expected get respective docs page actually happening getting error", "num": "3857", "d": "10/2016"}, {"title": "vue nt understand cdata cdata gt", "body": "vuejs version reproduction link steps reproduce use cdata gt slot expected vue treats content inside cdata plain text actually happening vue attempts parse cdata content strange things", "num": "3856", "d": "10/2016"}, {"title": "vendorjs load slow", "body": "project builded vuecli vendorjs loaded slow somebody please help", "num": "3855", "d": "10/2016"}, {"title": "vfocus work official document", "body": "vuejs version reproduction link steps reproduce run expected input focused actually happening focus happen input element", "num": "3854", "d": "10/2016"}, {"title": "\u5347\u7ea7\u4f7f\u7528vue \u540e laravel elixir gulp \u51fa\u9519", "body": "vuecommonjs vue warn failed mount component template render function defined found root instance uncaught typeerror read property appendchild null uncaught typeerror read property addeventlistener null \u5b89\u88c5vueloader \u548c laravelelixirvueloader\u672a\u80fd\u89e3\u51b3", "num": "3853", "d": "10/2016"}, {"title": "chrome vue multiple select item unwantedly selected displayed", "body": "wasted much time investigate problem made new fresh installs etc result safari vue problem chrome vue problem chrome vue multiple select item selected displayed element show selected tag chrome debugger shows selected true ideas please screenshot added simple multiple select thanks", "num": "3852", "d": "10/2016"}, {"title": "ca nt sanitizemodify vmodel inputs", "body": "vuejs reproduction link seems clear way simply transform input data say simply notice workaround could create custom would overkill lot least lot use cases tried various setups computed properties also mentioned thread without success honestly convinced bug seem functionality missing area also kind hoping totally missing something simple understand attribute ignored using also seems make sense explicitly bind value expression would want take precedents speak particularly surprising example calling method transform model value using nt seem work either intentional update well sitting around messing quite realized couple implementations worked specifically using computed values getter setter sure missing", "num": "3851", "d": "10/2016"}, {"title": "camelcase capitalized abbreviation prop name works breaks", "body": "vuejs version reproduction link steps reproduce lt pass prop name like naming parent component idea intended consequence suggested conventionpractice work example gt break example finding ticket guessed fix would involve passing prop name totally makes sense retrospect would parser know meant sectionid sectionid solved note fix break code vue lt example words definitely edge case said break existing code work better worse prior patch version expected continuity passing props names like reiterate idea intended consequence suggested conventionpractice work actually happening nt know tiny manifestation smaller bug even worthy bug fix assuming even possible seem like warning somewhere andor slightly explicit docs", "num": "3850", "d": "10/2016"}, {"title": "problem ordering array sortablejs component", "body": "created vue sortable component takes javascript array emits event new ordering array item dropped weird issue nt work situations thought related images vfor able reproduce without images jsfiddle see list left break reordering items several times whereas list left never breaks position property update reflect new order item dropped hoping something simple missing using sortable fiddle", "num": "3849", "d": "10/2016"}, {"title": "directives break replacing item array using splice", "body": "vuejs version reproduction link steps reproduce click remove next expected result page rendered without vuejs throwing error info working small app twolevel hierarchy items item contains subitems rendered group contained items rendered recursively thus group item result different html rendered different directives elements replace group item using splice virtual dom nt notice html element changed directives tries update items directives group", "num": "3848", "d": "10/2016"}, {"title": "strange error reload", "body": "vuejs version reproduction link steps reproduce chrome push times ctrlshiftr expected actually happening", "num": "3847", "d": "10/2016"}, {"title": "invalid expression error due javascript keyword inside string expression", "body": "vuejs version reproduction link steps reproduce replace following inline expression total number tasks list one total number tasks list one extra task added expected expected list tasks including new one actually happening fails following error vue warn failed compile template invalid expression vfor todo body amet enim maxime sint corrupti velit voluptatem vel quis non eum assumenda omnis nemo nemo aperiam sequi vel repellat et createdat updatedat body alias non quae dolores debitis quia libero earum fuga rem provident esse consequatur facere enim laudantium quia et tempora et pariatur animi porro createdat updatedat body mollitia eaque doloremque esse fuga magnam qui non distinctio quam expedita et possimus commodi cupiditate illo modi suscipit qui id aut createdat updatedat body corrupti recusandae libero aut cupiditate illo aperiam fugit voluptas laboriosam rerum soluta doloremque nulla praesentium eos magnam aut qui magnam createdat updatedat body est et inventore est minus qui aut veritatis et vitae beatae doloremque ut veniam autem ad tenetur enim dolorem aut ea createdat updatedat body est voluptas dicta et ipsam blanditiis eveniet quaerat reiciendis tempore dolor qui repudiandae adipisci explicabo facilis harum ducimus consequatur aut itaque et facere aspernatur accusantium qui assumenda createdat updatedat found root instance notes error occurs injecting list view server eg using laravelblade backend requesting tasks everything works ok client request fails", "num": "3846", "d": "10/2016"}, {"title": "vuecommonjs uncaught typeerror read property tolowercase undefined node", "body": "seems happen assign value component data property within beforemount method component references data object like hello beforemount thisuser storestateuser error thrown inside vuecommonjs line function assertnodematch node vnode vnodetag consolelog assetnodematch node vnode interesting note error thrown actually assign thisuser within beforemount leave vif reference template nt assign anything property ever nothing thrown consolelog put shows right error thrown assetnodematch vnode tag div data undefined children array text undefined elm seeing node plain nodeopstagname ca nt find tagname property given node throws error node generated vue sure maybe server browser template state matching using ssr regardless error maybe handled differently anyone suggestions", "num": "3844", "d": "10/2016"}, {"title": "cannt use vmodel customs components", "body": "updated app happens cannt use vmodel component example warning property method address defined instance referenced render make sure declare reactive data properties data option found component thanks", "num": "3843", "d": "10/2016"}, {"title": "refs reactive able use computed properties", "body": "refs longer reactive need emit events payloads child components fine works well becomes hard maintain following scenario create custom form input component basically wraps input reusable component longer access input value props reactively eg computed prop parent take following usecase isvalid valid invalid previously could create computed prop like since refs nt work reactively anymore need use inform parent changes however emits handled methods need separate handler per input deal events something like handlevalidemail value thisemail value thisemailisvalid true handlevalidpassword value thispassword value thispasswordisvalid false could refactor bit nice way dealing assuming using forms quite common occurence lot devs think better solution something like", "num": "3842", "d": "10/2016"}, {"title": "docs missing slot option render function data object", "body": "referring part doc writing render function want pass something named slot component write something like currently documentation data object nt mention field cc chrisvfritz", "num": "3841", "d": "10/2016"}, {"title": "compile cleanup", "body": "currently migrating vue however compile clean methods longer exist component dynamically creates layouts include component html taken look vuecompile see replace existing component template render function one compiled", "num": "3840", "d": "10/2016"}, {"title": "vue refuse invalid prop values", "body": "vuejs version reproduction link steps reproduce open link expected text shown actually happening text shown description document says prop validation fails vue refuse set value behaves refuse invalid prop values shows warning", "num": "3839", "d": "10/2016"}, {"title": "vmodel custom element wrap checkbox", "body": "hi using vuejs want create component looks like api page vmodel syntactic sugar combinding write template props name value method input event like nt work nt know special care checked attribute checkbox tried exact thing worked aspect though suggestion", "num": "3838", "d": "10/2016"}, {"title": "allow template root element name", "body": "component like obviously causes stack overflow would nice terms nice output html different component name like mycell cellcomponent wondered would make sense vue could ignore root elements name terms recursing j", "num": "3837", "d": "10/2016"}, {"title": "computed property updated dependencies binded inline data", "body": "vuejs version reproduction link steps reproduce replace inline list eg expected expected remaining computed property updated user clicks task ie toggle complete state viceversa happens case binding data prop actually happening computed property reevaluated dependency ie taskcompleted changes note jsfiddle code works fine vue replacing inline list", "num": "3836", "d": "10/2016"}, {"title": "refs available parent component", "body": "vuejs version reproduction link steps reproduce check console expected expected refs available parent component actually happening available available root sure bug", "num": "3834", "d": "10/2016"}, {"title": "add function get plain object data", "body": "feature request get plain json data use application bootstrap bootstrap dependant jquery nt see reason add new external library like vueresources ajax helper basically comes ractivejs framework basically kind function get pojo viewmodel object way easy use situation specially ajax guess jquery library used often readable method get plain object data better jsonparse code point view snippet jsonparse jsonstringify sounds like workaround study better performant deep cloner data many reason moment nt figure suggest implement function simply return reactive copy data click test get better performance result jsonparse jsonstringify vuejs version reproduction link", "num": "3833", "d": "10/2016"}, {"title": "let vuetemplatecompiler work strict mode", "body": "hi really love vue would like use customize user interface salesforce problem salesforce recently introduced security feature called lockerservice enforces strict mode party libraries included project near future enforce also csp done tests seems thing prevent salesforce developer using vue compiler renders templates using functionality using inline templates option use new function violating csp seems possible modify compiler strict mode compliant improvement roadmap thank awesome work", "num": "3832", "d": "10/2016"}, {"title": "improve warning message information", "body": "says vue warn handler event click undefined got error somewhere related event click hundreds component click events componentfile get error", "num": "3831", "d": "10/2016"}, {"title": "applied range input vmodel directive use string value type instead number", "body": "vuejs version reproduction link steps reproduce given input range vmodel directive click input range change value expected updating type value number actually happening type value string", "num": "3830", "d": "10/2016"}, {"title": "passing json objects properties longer works", "body": "vuejs version reproduction link steps reproduce using laravel trying pass property currently logged user worked properly vue get source output seems correct however property checking vue devtools expected expect able pass json objects components even vue instance using property bindings actually happening get property", "num": "3829", "d": "10/2016"}, {"title": "vue render anything version fine", "body": "vue rendering correctly code vue ok render fine phrase none rendered sample code real code nothing renders inspect element appear place appear code im using brunch manage javascript file normal import inspecting element see vue loading correctly image well information vue loading inside iframe return version try things nothing worked hope help thanks much", "num": "3828", "d": "10/2016"}, {"title": "extra information transition guide might help", "body": "upgraded app stubbed toe things list items might help others added transition guide mention option gone implied obvious mention directive modifier gone handle mention directives filters converted component wrapping least seems case use migration tool project small enough nt seem worth effort", "num": "3827", "d": "10/2016"}, {"title": "execute npm run build failure", "body": "got following error message let builds require config getallbuilds syntaxerror blockscoped declarations let const function class yet supported outside strict mode exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup", "num": "3825", "d": "10/2016"}, {"title": "unable work create property isstatic string", "body": "vuejs version reproduction link template tag able use group multiple elements inject component slot used work", "num": "3824", "d": "10/2016"}, {"body": "order switched arrays consistent javascript objects consistent arrays object iterators order switched back would major breaking change", "d": "10/2016"}, {"body": "simplesmiler pointed intended major breaking change switching back would another breaking change existing users unfortunately happen", "d": "10/2016"}, {"body": "using correct createelement syntax fixed transition names specified translated works fine provide code snippet since possible put jsbin please follow issue", "d": "10/2016"}, {"body": "hi thanks filling issue clarify mean build dev using npm build system like webpackbrowserify need provide github repo us look", "d": "10/2016"}, {"body": "yes using vue webpack kit works nt repo private", "d": "10/2016"}, {"body": "using vue webpack kit vueloader would require vue standalone version dev runtimeonly version build assume caused problem using option components need use vue standalone version please check section", "d": "10/2016"}, {"body": "right exception would appreciated template var supported client making use", "d": "10/2016"}, {"body": "toberorla normally would build exceptions messages stripped dev wo nt throw exception create issue vueloader later", "d": "10/2016"}, {"body": "interpolation within attribute removed please use instead refer migration guide", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "iterate components need provide key otherwise vue implicitly keys index instance actually dies fact last one list unless instances stateless causes issues like one describe demo", "d": "10/2016"}, {"body": "hi thanks filling issue repro link nt seem show problem please fix", "d": "10/2016"}, {"body": "apologies corrected fiddle", "d": "10/2016"}, {"body": "iframe rendering fine also original src wo nt work inside jsfiddle changed bingcom", "d": "10/2016"}, {"body": "original src might causing problem double check get home", "d": "10/2016"}, {"body": "yes sorry nt read src carefully enough believed normal twitter embed frame looks like kind custom ajax call breaking rendering apologies wasting time", "d": "10/2016"}, {"body": "update tried another project nt issues suspect unsure proceed component used two way thus far issue device app pure presentation datafunctionality floorplan data editor cms cms needs use compiler mode since need populate props php cms usage indexhtml actual app usage indexhtml used route component previously vue able access anything component via however seems possible using compiler mode html level need cms dump php data confirm expected behaviour vue", "d": "10/2016"}, {"body": "also get event tho always name property component importing log name clearly visible import floorplanviewer componentsfloorplanfloorplanviewer consolelog floorplanviewer floorplanviewername floorplanviewer export default components floorplanviewer", "d": "10/2016"}, {"body": "created new component extra code name imported behaviour methods fail use name register explicit still nt work", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "think worked whats going nt know one component breaks one nt version ive always array works vue finds property however unexplained reason vue finding thumbnails component viewer even tho definitely trial error tried shorthand vue camelkabab conversion works fine weird thing nt array method used work work works one component even array method dropped nt make sense getting error viewer component could easily dismissed viewer missing name prop typo always know vue could use array method object method cant find stated vue docs array method dropped favour object method ways thats probably better", "d": "10/2016"}, {"body": "use parent", "d": "10/2016"}, {"body": "oh vif dynamically updated vuejs worked", "d": "10/2016"}, {"body": "shmasya need declare data data function like bellow info could take look", "d": "10/2016"}, {"body": "defcc use vue set", "d": "10/2016"}, {"body": "ok", "d": "10/2016"}, {"body": "could please provide jsfiddlejsbincodepen demonstrate issue", "d": "10/2016"}, {"body": "seems webpack treats imported object read", "d": "10/2016"}, {"body": "ktsn think esspec conforming behavior also new spec properties writable easiest workaround default export typescript export default import components components", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "10/2016"}, {"body": "problem within watch two things make deepequal val amp oldval emit content really changed nt use literals props maybe pass computed value instead", "d": "10/2016"}, {"body": "using object literals template prop indeed warned since means creating new object every time component updates though ca nt seem think way detect runtime maybe add warning docs chrisvfritz", "d": "10/2016"}, {"body": "fnlctrl parsing template could add objectarray literals component instancescoped cache reference remained updates", "d": "10/2016"}, {"body": "chrisvfritz hmm seems possible familiar template compiler defcc ideas", "d": "10/2016"}, {"body": "seems impossible vue parse simple regex scanner recursive descendant parser optimized payload size real javascript expression parser included source expression like supported imho adding warning doc probably enough longer term think check better integrated vuetemplatevalidator", "d": "10/2016"}, {"body": "think need cache literals misusage binding props maybe could introduce warning instead parsing dev mode", "d": "10/2016"}, {"body": "use case clear example changing number reaches introduce warning check using object literals quite usual class style bindings warn user kind forcing fix nobody wants leave warning console think good tell user use computed property instead wanted point", "d": "10/2016"}, {"body": "means nondynamic value object literals example", "d": "10/2016"}, {"body": "think objects arrays problem though pass reference js strings numbers booleans immutable equal values always share reference either way like avoid adding notes like docs even nt fix edge case resulting behavior nothing vue specifically would expected behavior js lib render functions", "d": "10/2016"}, {"body": "per manual properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty print value", "d": "10/2016"}, {"body": "thanks explanation pzanitti", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "10/2016"}, {"body": "thanks pzanitti resolved issue future reference corrected version explanation pablo enzo zanitti pzanitti anyway problem put function gon na behave sort like computed property first ca nt array arraylength value bounds second set computed property every time arraylength changes computed property going change watcher going fire", "d": "10/2016"}, {"body": "think considered bug causes inconsistence client side render server side render looking props declared child component undocumented behavior document clearly", "d": "10/2016"}, {"body": "hi special module available elements components nt think undeclared props issue problem compiler print render functions text problem runtime every instance style module patch element module find vnode element set style case server rendering render function trigger module code thus bug quite hard fix renderstyle inspect parent node parent node indicates component tag append styles parent", "d": "10/2016"}, {"body": "exactly typescript equivalent use", "d": "10/2016"}, {"body": "difference way transpile typescript babel exported commonjs style need write typescript like herringtondarkholme said", "d": "10/2016"}, {"body": "thanks guys guess common knowledge kind new typescript sat oct katashin notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide reproduction repo github thanks", "d": "10/2016"}, {"body": "nt create router instance please refer docs", "d": "10/2016"}, {"body": "create router effect vue instances created vueuse vuerouter cause components fail router created anyway created router made commit still work", "d": "10/2016"}, {"body": "vueloader nt support usage html moduleexports require users default simply change html everything work", "d": "10/2016"}, {"body": "great thanks suggestion made changes still luck", "d": "10/2016"}, {"body": "tested fix computer nt error anymore problem still facing", "d": "10/2016"}, {"body": "import vue vue import vuerouter vuerouter import users usersvue vueuse vuerouter commenting make work const routes const router new vuerouter routes const app new vue el root router components users render h gt h users still error commenting vueuse vuerouter makes user component render properly", "d": "10/2016"}, {"body": "try putting import statement still investigating works minimal repro typescript import vue vue import vuerouter vuerouter var users vueextend users options render h gt h hhhh vueuse vuerouter use break render const app new vue el root components users users render h gt h users", "d": "10/2016"}, {"body": "yes putting import statement works", "d": "10/2016"}, {"body": "refer point mentioned method vue code think problem adding render later vue totally ignoring options superoptions changes happens move vueuse vuerouter component import", "d": "10/2016"}, {"body": "actually ca nt reproduce provide fiddle", "d": "10/2016"}, {"body": "jsfiddle repro", "d": "10/2016"}, {"body": "thanks imho functions check falsy values warn development work pr", "d": "10/2016"}, {"body": "looked source code see happening basically code uses false objects array however easily solved evaluating well tough call", "d": "10/2016"}, {"body": "please read doc object must plain native objects browser api objects prototype properties ignored think recursively watched every nested object also plain object", "d": "10/2016"}, {"body": "lgdexter works though whole picture might bit complex pinging decision herringtondarkholme believe different issue object till plain case", "d": "10/2016"}, {"body": "herringtondarkholme point nt purely plain object using array prototype shame might nice add feature future let know guys decide phanan", "d": "10/2016"}, {"body": "thing still determines one", "d": "10/2016"}, {"body": "got similar issue another project replaced", "d": "10/2016"}, {"body": "basically replaced object using everywhere ideal thanks clarification phanan would make tests pass", "d": "10/2016"}, {"body": "working adding extension library mine ran problem well first guess also override use still errors vuejs replaces extended array plain array loosing original object ended something similar vuejs already arrays decorate array functions new functions call needed well defined collections trigger events solution could similarly applied anyone else extended array", "d": "10/2016"}, {"body": "imho best two alternatives support native array collection vue currently roll full schema watching collections set map observable user defined collections", "d": "10/2016"}, {"body": "also another gotcha uses well array class passed object iteration uses need make sure functions amp classlevel variables defined enumerable inefficient workaround use slice like", "d": "10/2016"}, {"body": "objects creating fact arraylike objects real arrays vue supports native arrays arrays real proper subclass array available pass check assumption made multiple locations entire framework adapting involves lot complexity little gain unlikely supported also custom arraylike objects likely far worse performance real arrays personally recommend pattern", "d": "10/2016"}, {"body": "intentional build system configured aliases", "d": "10/2016"}, {"body": "expected nt change reference mutate property way tell property got mutated", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "html attributes csseinsensitive anything use kebapcase template however work either discuss weithet want change convert kebapcase camelcase like props", "d": "10/2016"}, {"body": "thanks regularmike suggestion working chrisvfritz", "d": "10/2016"}, {"body": "defcc fixed earlier today docs migration helper pr fix vue warnings reopen merged", "d": "10/2016"}, {"body": "recommended package manager npm use bower whatever reason afaik bowerjson required install vue", "d": "10/2016"}, {"body": "mintui\u8fd8\u4e0d\u9519", "d": "10/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "10/2016"}, {"body": "\u997f\u4e86\u4e48\u5f00\u6e90\u7684 \u53d1\u81ea\u6211\u7684 iphone \u5728 notifications githubcom receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue \u95ee\u95ee\u9898 \u8fd8\u662f\u7528 \u7684 \u7684 template \u7528", "d": "10/2016"}, {"body": "wonder whether bug intended feature according doc functional components cheap render imho rendering expense computing reactivity required functional components misleading think functional components magically cheaper less ordinary components functional components reactive props cheap nature preserved users keep function stateless functional yes pure function code stateful pure need state functional components use components", "d": "10/2016"}, {"body": "herringtondarkholme respectfully disagree use date example intended good way check whether render function called inputs unchanged force pure function change output keeping inputs unchanged call impure function case poor man debugging tool point use date thisrender called functional component even necessary bug imo even functional components cheap render free render mean render cases purpose reason exist give us simple way determining whether safely skip rendering safely skip rendering conditions appropriate", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks name usually given argument render function necessary name way using jsx hope helps", "d": "10/2016"}, {"body": "working expected creates array loops see could useful form elements element different nature needs function applied however something already achieve manually specifying different references different elements", "d": "10/2016"}, {"body": "example abrove creates array render function working expected vfor loop achieve render function", "d": "10/2016"}, {"body": "add refinfor attribute", "d": "10/2016"}, {"body": "thanks defcc work well", "d": "10/2016"}, {"body": "hi imho desired behavior described noticed understand javascript b b vue relies object identity tell whether change happens fundamental behavior changed easily saves lot bytes diffing algorithm change detection strategy pain point understandable changing behavior incur edge case say passing function props importantly introduce breaking change hard impossible user migrate", "d": "10/2016"}, {"body": "easily achieve adding custom equality check start watcher", "d": "10/2016"}, {"body": "nonnumeric keys notion order first last element easily achieve converting data numericallykeyed array computed property", "d": "10/2016"}, {"body": "first simplesmiler pointed guaranteed key iteration order objects notion first also depend keys named implementation dependent use case suggest create custom methods like use like", "d": "10/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests stated contributing guidelines thanks", "d": "10/2016"}, {"body": "would need contexts vue", "d": "10/2016"}, {"body": "afaik currently nt way implicitly pass props current options explicitly passing props nt clean object like stores application state plugins kind solve issue applied globally option forced set data root component", "d": "10/2016"}, {"body": "possibly interesting alternative context plugins mixins apply component descendants instead globally", "d": "10/2016"}, {"body": "sebastiandedeyne functional components already context feature though currently normal components nt guess useful normal components get access", "d": "10/2016"}, {"body": "context functional components provides data direct parent nt think provides anything normal component would nt solve problem passing data deeper context react name something different", "d": "10/2016"}, {"body": "think feature nice vue libraries actually implement behavior vuerouter vuex global mixin also use case userland eg passing event bus instance descendants", "d": "10/2016"}, {"body": "get ball rolling needed feature recent project solved writing two mixins apply parent component would create object vm whatever data want next calling child component would recursively look parent component exposes certain property set child component prefixed js vuecomponent parent vuecomponent child", "d": "10/2016"}, {"body": "sebastiandedeyne quite interesting approach maybe something like js var parent expose user var child inject user", "d": "10/2016"}, {"body": "would passing props still unsure utility context vue looks like context issue either solved state management library injecting something every instance plugin inherits context parent overriding properties looking sebastiandedeyne", "d": "10/2016"}, {"body": "let say hypothetically vuex would nt implemented global plugin something applied percomponent basis passing store prop every single child component would counterintuitive way inject object set specific component instance looking mechanism property based something defines necessarily direct parent", "d": "10/2016"}, {"body": "course thing explicitly passing values props think sometimes need implicit data propagation case example writing canvas rendering abstraction library components shapes rect circle etc rendered canvas shape components descendants context component canvas dom element example data shape components updated notify context component event bus rerender canvas need react contextlike feature propagate event bus quite verbose write props shape components needs event bus instance context component instance nt want manage global state management local view concern", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "vuejs\u6027\u80fd\u4f18\u5316\u6709\u4ec0\u4e48\u65b9\u6cd5\u6ca1", "d": "10/2016"}, {"body": "looking", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "using yet besides fact curious solve problem circumstances", "d": "10/2016"}, {"body": "providing repro makes easier us check actually required bug report", "d": "10/2016"}, {"body": "ignoredelements\u6ca1\u6709\u6253\u7b97\u652f\u6301string\u7c7b\u578b\u7684", "d": "10/2016"}, {"body": "use get component use", "d": "10/2016"}, {"body": "need bundle vuevuexvuerouter along app webpackbrowserify global never affect anything outside app", "d": "10/2016"}, {"body": "nt need refresh data holds results user hits return feature still discussed another use case", "d": "10/2016"}, {"body": "hold data ai nt data vue responsive mean deep clone result", "d": "10/2016"}, {"body": "yes decide change data use different variables hold results autocomplete suggestions need help encourage open topic forums", "d": "10/2016"}, {"body": "see thanks", "d": "10/2016"}, {"body": "use firame close iframe tag vue work", "d": "10/2016"}, {"body": "yanzhenzeng right", "d": "10/2016"}, {"body": "thanks work yanzhenzeng", "d": "10/2016"}, {"body": "thanks gskema looking", "d": "10/2016"}, {"body": "fix problem later", "d": "10/2016"}, {"body": "color valid css property name object style binding could take look key valid css property name", "d": "10/2016"}, {"body": "defcc variable syntax", "d": "10/2016"}, {"body": "sure supported current style binding supports css properties afaik reopening however members chime ideas", "d": "10/2016"}, {"body": "mistake nt used google", "d": "10/2016"}, {"body": "phanan believe correct syntax", "d": "10/2016"}, {"body": "afaik usage definition syntax sure nt affect main issue anyway", "d": "10/2016"}, {"body": "scoped style nt vue feature please open issue vueloader repo instead thanks", "d": "10/2016"}, {"body": "also experiencing works nt work", "d": "10/2016"}, {"body": "updated version suggestions simple schemadocx", "d": "10/2016"}, {"body": "hi marcte thanks proposal however nt think issue best place discussion proposal nt include concrete implementation suggestions vue yet involves serverside data layer scope repo eg meteor apollo feel free submit forum invite members meteorapollo community join discussion", "d": "10/2016"}, {"body": "js vue index \u53bb\u9664\u4e86 \u7528 index \u66ff\u6362", "d": "10/2016"}, {"body": "hi thanks filling issue newcomers nt spend hour searching best practice best practice use whatever ajaxhttp lib suits need example fetchaxios etc even jquery fine ajaxhttp layer frameworkagnostic fact react nt official http lib either unfortunate frameworks like angularember left people impression http libs bundled frameworks truth use whatever like", "d": "10/2016"}, {"body": "quick sidenote another issue vueresource non promise api catch really also nt seem support new fetch api well fetch guess issues vueresource mention project looks official yeah vueresource open issues atm like vuex vuerouter vuevalidator supporting libs provide free use use alternatives lockin many people situations libs may better suited ones maintain", "d": "10/2016"}, {"body": "fnlctrl ok thanks quick answer still think would helpful least mention docs somewhere kind wrongly expected part vue spend hourse searching best lib task still sure one choose cases like helpfull tips experience found superagent qwest reqwest bunch others yea best etc linusborg talking example readme modern promise way would would nt agree", "d": "10/2016"}, {"body": "would agree ways speccompliant would work example hand yet different catch catch errors whole chain ofthen calls multiple error callback second argument catches errors previous stage", "d": "10/2016"}, {"body": "found superagent qwest reqwest bunch others yea best etc universal way deciding lib better comparing github starsissues count npm downlods", "d": "10/2016"}, {"body": "ask team members prefer would get three different replies minimum", "d": "10/2016"}, {"body": "fractalf use fetch fetchival", "d": "10/2016"}, {"body": "bestsuperlative subjective always misused opinion using best makes comparisons feeling like competition", "d": "10/2016"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "took freedom make example readable", "d": "10/2016"}, {"body": "wrong repository please open vuerouter repository thanks", "d": "10/2016"}, {"body": "linusborg thanks ill", "d": "10/2016"}, {"body": "works intended data essentially html case reevaluated patched dom causing elements replaced workaround might simple turning returned html reactive data one edge cases directly manipulating html might preferred btw please use forum gitter questions like", "d": "10/2016"}, {"body": "ca nt directly manipulate html arbitrary html string given plugin tried gitter stackoverflow coming gitter nt helpful stackoverflow eventually solved though component anyone else issue checkout stackoverflow linked", "d": "10/2016"}, {"body": "make sure would correct tldr importing individual components large application becomes troublesome registering globally may break things components defined parent component available children components", "d": "10/2016"}, {"body": "posva well yes maybe even component optionally available children components", "d": "10/2016"}, {"body": "terionname sorry hold think nice idea needs discussion though let discuss team come back proposals imo custom properties ideal rather default behaviour components properties components able use declared components parent components", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks check", "d": "10/2016"}, {"body": "sorry man know first post know problem version vue", "d": "10/2016"}, {"body": "define static attribute vue attempt dynamically merge provide binding vue", "d": "10/2016"}, {"body": "ok nice know vue merge regardless static dynamic attribute would nice behavior continued vue quite important writing librariesframeworks vue elaborate needed thoughts thanks answer", "d": "10/2016"}, {"body": "yeah look sure", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "10/2016"}, {"body": "reemit componentb", "d": "10/2016"}, {"body": "possible something like", "d": "10/2016"}, {"body": "please use dedicated gitter forum ask questions thanks possible templates use render functions", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "tried evaluating expression chrome console please use forum questions", "d": "10/2016"}, {"body": "phanan oops sorry fault", "d": "10/2016"}, {"body": "firstly always use development version duh develop error pretty much obvious secondly think writing much different syntax error silently ignoring errors good idea", "d": "10/2016"}, {"body": "explained phanan", "d": "10/2016"}, {"body": "intentional amigo", "d": "10/2016"}, {"body": "explained required vmodel longer implicit create nonexistent paths intentional decision", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "update function seems invoked actually browser os using", "d": "10/2016"}, {"body": "chrome os", "d": "10/2016"}, {"body": "works chrome windows tested incgnito window ensure exptensions sth interfer", "d": "10/2016"}, {"body": "test incgnito window chrome windows still nt work maybe one give demo invoke custome directive update callback xd", "d": "10/2016"}, {"body": "hi thanks filling issue counterpart reserved used prop name", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "issue", "d": "10/2016"}, {"body": "thanks reporting issue vuejsvuejsorg update document soon possible", "d": "10/2016"}, {"body": "problem resolving problem allistera could use object workaround jsfiddler", "d": "10/2016"}, {"body": "ah done better job searching thanks deffc awesome work", "d": "10/2016"}, {"body": "closing duplicates", "d": "10/2016"}, {"body": "already option roadmap however pospone current postrelease phase work left ecosystem done involve considerable amount work get right tested also making vueloadervueify work etc pp thanks poc seems helpful", "d": "10/2016"}, {"body": "nt think expectation code right removing items removeitem function vmodel selected added values vmodel items removed deleted items model data affected way best", "d": "10/2016"}, {"body": "deulos check issue seems problem could use workaroud", "d": "10/2016"}, {"body": "defcc check uncheck checkboxes model containing values selected checkboxes updated properly rajibahmed problem checked checkbox binded model remove feels logical remove value model also", "d": "10/2016"}, {"body": "deulos vue declarative less magic faced problem would write code solve add watcher guess solve problem best", "d": "10/2016"}, {"body": "deulos might seem logical usecase might someone elses maybe someone whant hide inputs vif keep selected values question application logic something vue decide", "d": "10/2016"}, {"body": "expected behaviour since changes ca nt reflected virtualdom get therefore overriden updates", "d": "10/2016"}, {"body": "dealing multiple places item notion transition mode unclear mean one animated item every moment mean incoming items batched deferred outgoing ones mean items within key follow regular rules transition mode meanings converge one dealing single place item", "d": "10/2016"}, {"body": "think would mean removals happen additions example shows new item gets added existing one gets removed items intended appear time", "d": "10/2016"}, {"body": "problem pug please refer issues hints open issue pug repository", "d": "10/2016"}, {"body": "posva mentioned bug pug error occurs pug called fact error happens even pug installed", "d": "10/2016"}, {"body": "version vueloader installed", "d": "10/2016"}, {"body": "linusborg vueloader", "d": "10/2016"}, {"body": "may issue related pug xmllike templting engine contain anything like script tag style tag without specific treat lt may break htmlparser parsing procedure", "d": "10/2016"}, {"body": "think fixed seems like nt", "d": "10/2016"}, {"body": "imports runtimeonly build compiler adjust template include standalone build version default", "d": "10/2016"}, {"body": "done", "d": "10/2016"}, {"body": "linusborg thanks reply mentioned added alias webpack config nt resolve problem got another error vuejs line", "d": "10/2016"}, {"body": "oh different problem mistake part nt catch expects template string pass object component options defined tag file template already compiled render function vueloader", "d": "10/2016"}, {"body": "ok linusborg get point main goals separate component content keep code clean nt want html content script tag keep content inside tag app component way get content", "d": "10/2016"}, {"body": "keep content inside tag app component way get content whole point vue files keep everything one place want appvue component want template string nt really understand trying despite explanation sorry maybe save install htmlloader", "d": "10/2016"}, {"body": "ok clear thanks lot linusborg detailed explanation", "d": "10/2016"}, {"body": "\u7ed9\u7ec4\u4ef6\u7ed1\u539f\u751fdom\u4e8b\u4ef6\u7684\u65f6\u5019\u9700\u8981\u52a0native\u4fee\u9970\u7b26", "d": "10/2016"}, {"body": "use", "d": "10/2016"}, {"body": "thanks changed works", "d": "10/2016"}, {"body": "hi thanks filling issue use empty string template fail compile setting empty string correct way recall vbind expects javascript expressions example providing content prop serverside need check exists return literal string null otherwise need give empty string", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "10/2016"}, {"body": "templates single root node see warnings console maybe nt show inlinetemplates", "d": "10/2016"}, {"body": "nt see warnings ran migration helper might case", "d": "10/2016"}, {"body": "bug browserify template today submitted pr assume reason problem likely fixed tomorrow meanwhile fix easy packagejson look like use original line commented", "d": "10/2016"}, {"body": "hello tried change packagejson use import vue vue error failed mount component template render function defined found root instance use import vue vuedistvue render content inside slot", "d": "10/2016"}, {"body": "please provide live reproduction repository ask forums help forum stack overflow gitter", "d": "10/2016"}, {"body": "repository problem", "d": "10/2016"}, {"body": "use npm run build instead nrpm run dev work fine", "d": "10/2016"}, {"body": "got take look issue linusborg", "d": "10/2016"}, {"body": "please nt mix runtime build standalone build incompatible suggestion digging buildjs comment fyi use standalone build use html template adapt runtime build use render option instead writing html info please see need complex entry point template write entry component render render function info problem vuehotload api vueify uses runtime build user code uses standalone build two builds mount component agnostic slots children lost two conflicting builds", "d": "10/2016"}, {"body": "herringtondarkholme metioned two vue versions app indeed standalone runtime version run npm run dev standalone required appjs used compile template html resolved vuedistvuejs internal runtime version used vueify compile vue files hotreload resolved vuedistvuecommonjs bundled compiled js files fails prototype checks runtime one vuejs vuecommonjs get default slot node npm run build nodeenv set production run hotreload logic eliminated works issue could select runtimeonly version init app vuecli move codes vue files make pr update related docs specifiy problem maybe best way could ensure one vue version browserify template looking", "d": "10/2016"}, {"body": "problem explained installation page guide maybe improved also mentioned migration guide", "d": "10/2016"}, {"body": "linusborg think also upgrade browserify template try", "d": "10/2016"}, {"body": "browserify template also updated uses aliasify standalone selected", "d": "10/2016"}, {"body": "linusborg seems working expected vue files processed duiring aliasify transformation open pr add vue file jsextensions merged update template well", "d": "10/2016"}, {"body": "issue browserify template submited pr fix forked repo updated could adjust packagejson like", "d": "10/2016"}, {"body": "pr merged close issue problem still exists could report issue", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue looking", "d": "10/2016"}, {"body": "repro adding vonce nt render", "d": "10/2016"}, {"body": "posva repro", "d": "10/2016"}, {"body": "koronero nt understand message nt asking repro provided one", "d": "10/2016"}, {"body": "met similar probably issue vonce found updated repo case thanks", "d": "10/2016"}, {"body": "koronero seekerlee think used element element executed therefore variable nt exist yet side note nt use nt need yet", "d": "10/2016"}, {"body": "posva case reference working en email app emails rendered vuejs since version emails conversation stored array like since email html content could huge nt want updated since born need lots dom operation html content using custom directive inserted example add ellipsis hide quoted content highlight text add link process mentions symbol etc also nt want operations executed requirement vonce vfor version use emailcontent works good spent time updated vuejs version found issue", "d": "10/2016"}, {"body": "using vonce vfor work case nt", "d": "10/2016"}, {"body": "posva using vonce vfor nt run error want example group email show use vfor vonce user mark email starred ui reflect show use vonce vfor ui change user star email", "d": "10/2016"}, {"body": "seekerlee using vonce inside component fixes problem", "d": "10/2016"}, {"body": "try let know", "d": "10/2016"}, {"body": "example", "d": "10/2016"}, {"body": "thanks much fiddle works case simplified fiddle bit reference later searched change vue template use custom component", "d": "10/2016"}, {"body": "watching object mutated newval oldval point original object case watch instead", "d": "10/2016"}, {"body": "update demo object dynamic keys problem", "d": "10/2016"}, {"body": "use approach whenever dynamic key changes also nt forget unwatch old one", "d": "10/2016"}, {"body": "come handy fnlctrl", "d": "10/2016"}, {"body": "things like infinite listvirtual scroll could many many detached keptalive components mon oct eduardo san martin morote lt notifications githubcom wrote come handy fnlctrl receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "10/2016"}, {"body": "might nice addition indeed something find regularly well might get core use", "d": "10/2016"}, {"body": "think would super useful something forever", "d": "10/2016"}, {"body": "imo easily done userland linusborg demonstrated hand practice might need small variations works eg reseting part data original state like form object overall adding trivial convenience utilities core opens precedence core nt b also follow end api surface bloated tiny util functions absolutely nt want see", "d": "10/2016"}, {"body": "yeah valid concern", "d": "10/2016"}, {"body": "looking seems selections get observered correctly", "d": "10/2016"}, {"body": "peterkorgaard update fiddler could use like workaround info take look", "d": "10/2016"}, {"body": "got question defcc solution solve already know many items model change model array object", "d": "10/2016"}, {"body": "use object type model binding uses model index internal implementation use array type value could observed could init selections created update selections selectboxes data updated update fiddler", "d": "10/2016"}, {"body": "defcc bravo solution worked fine thank much", "d": "10/2016"}, {"body": "thank defcc clarifying use workaround problem gets solved thanks great work everybody vue really amazed", "d": "10/2016"}, {"body": "passes objects attribute stringify keys duplicated pass", "d": "10/2016"}, {"body": "go note method work standalone build", "d": "10/2016"}, {"body": "getteronly computed property nt receive arguments please reread section fix", "d": "10/2016"}, {"body": "ooops sorry last suggestion one users gitter originally please reconsider update little bit info export default computed mapgetters itemsfromstore vue devtools shows updating remains true works turning cache property false seems proper data reactive expect computed property react need set false update moved statement element nt work solved vue react even level deep object use instead", "d": "10/2016"}, {"body": "need help suggested use forums also provide live example jsfiddlecodepen etc people really look problem", "d": "10/2016"}, {"body": "yes posted forums asked gitter said seems good thought time post thanks anyway", "d": "10/2016"}, {"body": "thanks much iabdulin issue vuejsorg could report make pr fix", "d": "10/2016"}, {"body": "iabdulin problem fixed", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "leyec similar issue vue vmodel child component wraps input input changed browser chrome froze restart browser issue emit input thissomevalue child input solved issue changing thissomevalue string emit input thissomevalue issue solved", "d": "10/2016"}, {"body": "closing due inactivity", "d": "10/2016"}, {"body": "arthurmaurer perfect question gitter chatroom would fixed fiddle time smile called component instantiated data changes increment value click event updating value scoped inside component update data list nt update data scoped within component updated fiddle think trying accomplish follow close issue gets close solving issue good luck", "d": "10/2016"}, {"body": "thanks gitter nt know solution gave works fine way around would pain use everytime face problem vfor refreshes changes data nothing else could notify data change aside watching", "d": "10/2016"}, {"body": "components actually get recycled use lifecycle hook listen changes data could also watch changes prop data nt change component wo nt updated rerendered much purpose part optimizations make vue fast", "d": "10/2016"}, {"body": "explained danieldiekmeier arthurmaurer", "d": "10/2016"}, {"body": "example nt using valid syntax corrected get errors nt know really happened side", "d": "10/2016"}, {"body": "would want use runtimeonly build inside browsers sure nt need templatejsx compilation want write render functions hand", "d": "10/2016"}, {"body": "build system configured support files nt use option", "d": "10/2016"}, {"body": "since build system use runtimeonly build instead loading vue separately browser", "d": "10/2016"}, {"body": "nt want one single big bundled file would better load frameworks libraries separately code webpack commonschunkplugin using rollup", "d": "10/2016"}, {"body": "nicolasparada fix add script tag adds global namespace html windowprocess env nodeenv production fnlctrl sure weither variables supposed present build cdn least inconvenient offer cdn access files require workaround like use think discuss internally deal", "d": "10/2016"}, {"body": "think runtime meant used bundler using rollup use", "d": "10/2016"}, {"body": "linusborg gave problems posva yeah couple solutions since cdn browser ready minified version", "d": "10/2016"}, {"body": "nicolasparada automatically added cdns normal browser ready andor without minified version", "d": "10/2016"}, {"body": "wanted start using cdn version vue inside rails app today met issue building upon linusborg amp nicolasparada input version works javascript windowprocess env nodeenv production windowmodule wonder version hosted somewhere used without tweak", "d": "10/2016"}, {"body": "hi thanks filling issue inheriting everything antipattern removed vue long ago please declare props specifically", "d": "10/2016"}, {"body": "totally agree btw something like", "d": "10/2016"}, {"body": "use vbind sure target browser supports object literal extensions simplified", "d": "10/2016"}, {"body": "could add jsfiddler provide context", "d": "10/2016"}, {"body": "nt seem related wether indocument query returned nt component template component mounted bug however seems highly unlikely repro needed", "d": "10/2016"}, {"body": "ops bad using computed property", "d": "10/2016"}, {"body": "please ask questions forum stackoverflow probably nt need add data already methods need add bit context forum post stackoverflow question people help better solve problem", "d": "10/2016"}, {"body": "reinstall vueloader", "d": "10/2016"}, {"body": "reinstall still ca nt work switched works", "d": "10/2016"}, {"body": "using lock likely either npm registry date explicitly upgrading", "d": "10/2016"}, {"body": "chrisvfritz might want look", "d": "10/2016"}, {"body": "\u53ef\u80fd\u662f\u6253\u5305\u7684\u95ee\u9898 \u7528vueminjs \u6709\u8fd9\u4e2abug \u4f46\u662f\u7528vuejs \u5e76\u6ca1\u6709\u8fd9\u4e2abug using bug use bug \u53e6\u5916 webpack\u7684\u5f00\u53d1\u73af\u5883\u4e5f\u6ca1\u8fd9\u4e2abug \u7528\u751f\u4ea7\u73af\u5883\u5c31\u4f1a\u51fa\u73b0", "d": "10/2016"}, {"body": "pretty sure already know right simple fix", "d": "10/2016"}, {"body": "reproduction important opening issue please describe problem instead adding labels", "d": "10/2016"}, {"body": "remove comment incule company info", "d": "10/2016"}, {"body": "nt ios device hand see errors use", "d": "10/2016"}, {"body": "yes alreay install vconsole test page find error ios", "d": "10/2016"}, {"body": "oct aviggngyv notifications githubcom wrote yes alreay install vconsole test page find error ios receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "reverting work", "d": "10/2016"}, {"body": "think vue using arrow functions supported ios", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "using already using already binds value also bound property instead attribute nt show markup", "d": "10/2016"}, {"body": "want value name attributes input nt plan submit form using ajax mainly using vue case control many inputs form think invoice line items using vue addremove line item fields final form submitted regular form using ajax", "d": "10/2016"}, {"body": "somazx evan said value bound property attribute value attribute reflect current value input reflects initial value submitting html form takes current value initial one work correctly", "d": "10/2016"}, {"body": "simplesmiler ohhhhh thank explaining understand sorry", "d": "10/2016"}, {"body": "hello thanks filing issue happening relying tracking index unsuitable case described key documentation give items identifiers vue track properly something like recommend use dedicated id generating library avoid collisions closing bug", "d": "10/2016"}, {"body": "strange thing problem persists key applied thought autokeying bug edit actually may dom patching bug", "d": "10/2016"}, {"body": "believe nokey applies equivalent implicitly", "d": "10/2016"}, {"body": "simplesmiler nt know behavior thought nokey means key applied would kindly provide source reference", "d": "10/2016"}, {"body": "vuejs updating list elements rendered default uses inplace patch strategy similar behavior vue interpreted implicit key index may wrong assumption still surface level understanding mechanics remember tracking index causing exact issue", "d": "10/2016"}, {"body": "fact tried reproduce default tracking reference appears behave expected nt know valid use though", "d": "10/2016"}, {"body": "oh god love hours cried bug fixes buy several pints", "d": "10/2016"}, {"body": "guess already added vuetemplatecompiler exposed preservewhitespace option", "d": "10/2016"}, {"body": "fnlctrl please reread entry post option mentioned wink", "d": "10/2016"}, {"body": "fnlctrl means leading trailing whitespaces html tag looking", "d": "10/2016"}, {"body": "fyi nt think good idea sense could unsafe user may want ignore whitespaces tags necessarily trimming plain text eg inside whitespace tags whitespace around plain text different sense hand nt see practical advantage ignoring additional whitespace nodes small perf gain trimming text nt much aspect", "d": "10/2016"}, {"body": "working providing flow typings people use ones source ready yet example exports vue module declared yet typings internal development export package complete suitable use", "d": "10/2016"}, {"body": "actually ie messed outerhtml duplicating attribute disabled warning ie", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "\u5347\u7ea7\u524d\u8bf7\u5148\u9605\u8bfb\u5347\u7ea7\u6307\u5357", "d": "10/2016"}, {"body": "id messageindex", "d": "10/2016"}, {"body": "expected behavior actually explained", "d": "10/2016"}, {"body": "plan support sticky event eventbus", "d": "10/2016"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b\u8fc7\u5f00 issue", "d": "10/2016"}, {"body": "\u8bf7\u53c2\u8003\u65b0\u5efa issue", "d": "10/2016"}, {"body": "vue template like function gets called every time something changes mind inline basically saying input value static never change nt make sense using makes use case bit complicated render form state server html output initialize component data", "d": "10/2016"}, {"body": "surprised hard instanciate simple html element understand reasons anyway thank support thank much vuejs", "d": "10/2016"}, {"body": "allowed strict mode inside modules nt mean deprecated valid use greatly simplifies compiler removing need expression parserewrite scope analysis makes possible get compiler slim mingzipped unless bundler wraps entire application bundle use strict function scope presence cause issue fact works fine official webpack templates sure ran problem first place maybe provide reproduction also note strict mode perfunction scoped generated output bundle actually look something like", "d": "10/2016"}, {"body": "thanks ludicrously fast response wrestling vue since later beta phases trying get things work waaay ready trying get things work library nt fully support vue yet got error building things clearly normal use case sufficiently confused situation want clarify things said able bundle render functions modules unfortunate though understand respect tradeoff however need serverside compiler small perhaps could different version compiler prepares functions inclusion modules much work would entail", "d": "10/2016"}, {"body": "dts yep something definitely consider alternative compiler generates strictmode compliant code even source map support suspected quite bit work like focus stability areas stack get close hope helps figure solution trying achieve", "d": "10/2016"}, {"body": "hey buble compiler injecting mode passed js files compiling components contain keyword users components running trouble using uses uses think bad design side open issue link back however maybe could need argumentative help edit buble issue", "d": "10/2016"}, {"body": "built component want use laravel project come issue using laravel elixir webpack plugin seems also use buble paulpflug exclude vue component getting processed buble quite familiar frontend techs lol stuck week", "d": "10/2016"}, {"body": "paulpflug think toplevel may injected rollup usestrict option turned might something needs go laravel default rollup configuration", "d": "10/2016"}, {"body": "prop accepts string names constructor functions always avoid manually creating components instead drive parent state", "d": "10/2016"}, {"body": "would best way handle case app element contain arbitrary component component known runtime may anything currently creating vue instance calling function set active go", "d": "10/2016"}, {"body": "please use dedicated gitter forum ask questions thanks pass component constructor via prop use", "d": "10/2016"}, {"body": "thanks moved response existing unanswered forum thread idea would much appreciated", "d": "10/2016"}, {"body": "discussion continued forum thread", "d": "10/2016"}, {"body": "correction point still support custom components could documented btw correction point functional components able return anything even empty string required right", "d": "10/2016"}, {"body": "thanks jsfiddle template fixed", "d": "10/2016"}, {"body": "reproduce windows chrome firefox edge everything works fine specify system browser using", "d": "10/2016"}, {"body": "windows chrome happens least one select element model initialized existing value select options specified model default solution suggested line chat", "d": "10/2016"}, {"body": "happens least one select element model initialized existing value select options specified model default ok see problem looks like bug", "d": "10/2016"}, {"body": "problem tis component forced rerrender change class select happens event listens event comes input component rerenders initial value vmodel tries save data point selected option initial one rerender use event instead input value written class changed component rerenders new value", "d": "10/2016"}, {"body": "actually nt work chrome works firefox specific reason might case", "d": "10/2016"}, {"body": "based explanation would nt see problem changing dropdown mouse problem appearing trying change value keyboard", "d": "10/2016"}, {"body": "actually nt work chrome works firefox specific reason might case appearantly firefox issue event case event tried callback console show anything store update would running class would changing rerender think firefox right select simply emit first place nt know specs actually say based explanation would nt see problem changing dropdown mouse happen mouse well least reproduction fiddle", "d": "10/2016"}, {"body": "happen mouse well least reproduction fiddle fiddle first fiddles demonstrating problem select different element dropdown mouse update along appears checkbox try select different dropdown element updown keyboard changes seeing behavior recent stable chrome linux", "d": "10/2016"}, {"body": "latest stable chrome mac tested windows well replied nt see describing error happens mouse keyboard", "d": "10/2016"}, {"body": "error suggested vmodel support dynamic input types nt use", "d": "10/2016"}, {"body": "stuck error someone help thx", "d": "10/2016"}, {"body": "ok thank change implement", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks use directly", "d": "10/2016"}, {"body": "thanks feedback quickly little fixed fine", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "nt know commits fixed issue included latest build wait next release clone repo build vue", "d": "10/2016"}, {"body": "right tought included already vuejs dev ok lets wait next release", "d": "10/2016"}, {"body": "tested fiddle locally interestingly bug ios messed weird behavior exists even without vue involved", "d": "10/2016"}, {"body": "youre right seems multiselect special item century waiting selfdriving cars", "d": "10/2016"}, {"body": "list items need use", "d": "10/2016"}, {"body": "fix updating way browser wo nt get grumpy sees unusual element inside table", "d": "10/2016"}, {"body": "ahh yes using indom template browser parses first either fix chrisvfritz solution use pure string templates subject browser parsing restrictions", "d": "10/2016"}, {"body": "thank guys", "d": "10/2016"}, {"body": "actually jsfiddle everything works transfer code get warning children must keyed actually could problem fact working templates code vue entry key toprice key export default data return configheader first second third fourth fifth collapsed true props loc name index methods total function col thisloc return col stationname return thisname var sumthislocmap el gt el col reduce acc cur gt col payback return sumthisloclength return sum togglecollapsed function thiscollapsed thiscollapsed appreciate help ps debugger see transitiongroup rawchildren array gets created vnodes first four tr fifth one undefined", "d": "10/2016"}, {"body": "reason nt see warning fiddle using minified production build warnings stripped must unique object constancy animations", "d": "10/2016"}, {"body": "bet pug since works default html template try escape ampersant", "d": "10/2016"}, {"body": "supposed use computed value instead understand docs right look documentation one single expression found microsoft javascript docs performs logical conjunction two expressions", "d": "10/2016"}, {"body": "yields using computed values instead verbose fast", "d": "10/2016"}, {"body": "pretty sure pug problem works vanilla vue templates properly way make pug escape special chars attribute values", "d": "10/2016"}, {"body": "problem vuemultiselect vue gulpbabelify without pug switching webpack solves", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "somehow hack detailed explanation poc", "d": "10/2016"}, {"body": "pathing dom mutliple attribute select dose nt apply first mutli selected option dose nt work", "d": "10/2016"}, {"body": "transitions handled differently please read docs", "d": "10/2016"}, {"body": "toastjs var toastcomp require toastvue class toast show msg var comp new vue toastcomp compcontent msg documentbodyappendchild comp mount el settimeout gt comp destroy one trigger leave transition comp elremove moduleexports new toast toastvue content require toastscss moduleexports data return content toastenteractive toastleaveactive transition opacity ease toastenter opacity toastleaveactive opacity attribute used trigger enter transition initial render way trigger leave need destroy vm remove element dom fyi updated version please suggest trigger leave transition case", "d": "10/2016"}, {"body": "hello oliverzy thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "changed codes following works problems encodes html entities encode chinese special characters", "d": "10/2016"}, {"body": "thisodd inside iterator function nt point vue instance", "d": "10/2016"}, {"body": "template must one root element", "d": "10/2016"}, {"body": "want one another button dev branch already feature", "d": "10/2016"}, {"body": "marceloliberton works internet explorer", "d": "10/2016"}, {"body": "bug need root element template works like reactjs without root component render properly see anything working try forum docs first working ie maybe ie buggy best", "d": "10/2016"}, {"body": "hi abdulkhamidov marceloliberton rajibahmed mentioned fragment instance unsupported", "d": "10/2016"}, {"body": "according line terminators could cause problem special chars replaced gentext func try make pr", "d": "10/2016"}, {"body": "maybe better replacement phases chars parsing", "d": "10/2016"}, {"body": "hechentao curious find spaces around handle", "d": "10/2016"}, {"body": "posva find handler called look code find spaces important need warning dev environment", "d": "10/2016"}, {"body": "hechentao spaces introduces first place", "d": "10/2016"}, {"body": "posva yes made mistake wrote code like adding warning case make vue friendly", "d": "10/2016"}, {"body": "registered globally vuecomponent call unnecessary", "d": "10/2016"}, {"body": "see another way inline simple component nt require clientside template rendering specifically want saw pr coming fix would allow vifvelse conditional root main template would nice know anyway", "d": "10/2016"}, {"body": "use render function please make sure read docs opening issues asking questions", "d": "10/2016"}, {"body": "already using render function missing piece seems simply pass object component options also explained docs course", "d": "10/2016"}, {"body": "thanks linusborg works thought tried think forgot wrap object render ran problems", "d": "10/2016"}, {"body": "tencent support template string currently use template", "d": "10/2016"}, {"body": "crossjs know since vue supports according readmemd nt support occasion", "d": "10/2016"}, {"body": "vue supporting nt mean use js features supported expressions use templates must take target browsers account", "d": "10/2016"}, {"body": "valid keycode aliases", "d": "10/2016"}, {"body": "want support custom keys define global keycodes", "d": "10/2016"}, {"body": "example posted jsfiddle taken vue guide key aliases either removed guide added keycode object", "d": "10/2016"}, {"body": "oh indeed may need amend doc ping chrisvfritz", "d": "10/2016"}, {"body": "way think usage sample could better support builtin custom submit pr repo", "d": "10/2016"}, {"body": "applies guide submit pr", "d": "10/2016"}, {"body": "wrong works according docs", "d": "10/2016"}, {"body": "yes works single letter key aliases come back wo nt", "d": "10/2016"}, {"body": "custom mind something like nt case", "d": "10/2016"}, {"body": "mean single letter key aliases coming back feature removed believe need amend doc reflect change question please see keycodes api link documentation need help suggest using forum instead", "d": "10/2016"}, {"body": "mean deprecated bug could come back say feature removed wo nt weird though since ca nt find deprecation vue changes maybe missing", "d": "10/2016"}, {"body": "reproduce make sure using latest version vue", "d": "10/2016"}, {"body": "looking build chrome extension check", "d": "10/2016"}, {"body": "soviut build extension amp csp versions mac os chrome error occurs could provide info issue", "d": "10/2016"}, {"body": "longer works iterator value iterated primitive value eg string number similar affect local variable function scope use array objects instead", "d": "10/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "10/2016"}, {"body": "posva alright trying reproduce turned whether initial array empty nt matter however issue watching still fiddle steps reproduce press create text press button actual see pressing button new text appears expected text appeared right pressing create text", "d": "10/2016"}, {"body": "working intended find better explanation smile", "d": "10/2016"}, {"body": "posva read docs see example see using push whose changes vue supposed detect also nt explain works changing inner array object contain array push instead also using push include example", "d": "10/2016"}, {"body": "directly access element array", "d": "10/2016"}, {"body": "seems indeed working", "d": "10/2016"}, {"body": "bad sorry amcsi", "d": "10/2016"}, {"body": "hey thanks fix looks like issue still persist updated jsfiddle steps reproduce go authregister switch steps go back authlogin click login button", "d": "10/2016"}, {"body": "follow migration guide", "d": "10/2016"}, {"body": "aphofstede thanks nt checked let try", "d": "10/2016"}, {"body": "nt support either implicitly eating nonexistent paths lead hard debug scenarios eg make typo everything fails silently also breaking change question", "d": "10/2016"}, {"body": "working migrating lots components breaking change behaviour different maybe documentation warning message sent console rather exception actually failing silently vue warn error evaluating expression mydatapropertydoesnotexists typeerror read property undefined forked example point vue", "d": "10/2016"}, {"body": "looking code version try catch within function watcherprototypeget outputs warning message", "d": "10/2016"}, {"body": "frizzauk warning means supported try catch done component level instead expression level causes affected component output nothing nt affect components", "d": "10/2016"}, {"body": "understood surely statement within template engine handle whether property path exists granted javascript nt really support behaviour hence third party libraries lodash provide basic functions get plug gaps seems shame write verbose statements wrapping function call eg vif doespathexist datapropertydoesnotexists", "d": "10/2016"}, {"body": "frizzauk make typo everything fails silently component consider using higher node", "d": "10/2016"}, {"body": "gettype func seems deal multitype props returns first type try make pr", "d": "10/2016"}, {"body": "sure understand issue expecting value cast boolean although said either string boolean would using order specify prop cast nonconsistent", "d": "10/2016"}, {"body": "consistent behaviour differs expectations using magic convert eventual boolean type multiple allowed types caller passes booleanable value would expect boolean type also passed custom validator resolved boolean conforms another type array allowed types passes custom validation also valid otherwise invalid", "d": "10/2016"}, {"body": "mean magic refer value say normal differ types differents order array matters", "d": "10/2016"}, {"body": "referred piece code mentioned observations order matter interpret x z", "d": "10/2016"}, {"body": "share rest team", "d": "10/2016"}, {"body": "workaround export default components buttonview vuecomponent buttonview render function createelement return createelement parentiscomplex button div slotsdefault computed iscomplex return true false make sense", "d": "10/2016"}, {"body": "nt added already chrisvfritz aphofstede using jsx would also work nt fit use cases well template", "d": "10/2016"}, {"body": "distinctly remember adding feature investigate probably later today", "d": "10/2016"}, {"body": "supported never supported binding performed creation time different types binding expects different bound data types would add huge amount complexity internal implementation need use branches", "d": "10/2016"}, {"body": "intended function name", "d": "10/2016"}, {"body": "define functions signature use", "d": "10/2016"}, {"body": "simplesmiler mean", "d": "10/2016"}, {"body": "understand convenience react world however props vue components assigned react dedicated property allowing pass props without declaration possibly occur naming conflict", "d": "10/2016"}, {"body": "ktsn yeah problem opinion especially use jsx style issue usefully besides use props validation avoid problem like react put props props object also vue great use restructure app want get", "d": "10/2016"}, {"body": "like ktsn explained feasible vue imo maintainable always declare props", "d": "10/2016"}, {"body": "nice catch thank added pr case next time prefer submitting pr", "d": "10/2016"}, {"body": "work indeed bug", "d": "10/2016"}, {"body": "vue support manually addingremoving classes already using vuemanaged class binding want manage class vue nt mix implementation intentionally using string ensure class order", "d": "10/2016"}, {"body": "ok thanks sometimes use thirdparty library change class update data cover sometimes makes library work", "d": "10/2016"}, {"body": "template rendered immediatly wait whatever api calls might started usual solution using keep parts rendering data eg", "d": "10/2016"}, {"body": "linusborg mentioned try work still sent error statsproducts products", "d": "10/2016"}, {"body": "actually seems work component gives error main vue instance", "d": "10/2016"}, {"body": "issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "needed could supply test case function rendercode code context callback var createbundlerenderer require vueserverrenderer createbundlerenderer var renderer createbundlerenderer code rendererrendertostring context callback function done var bundlecode var vue require vue moduleexports function context return new promise function resolve reject resolve new vue template app join n rendercode bundlecode function err html err done err return try htmlshouldequal app catch e done e return done", "d": "10/2016"}, {"body": "hi thanks filling issue open migration helper repo instead thanks question simply", "d": "10/2016"}, {"body": "addressed via template slots basically slot element serves template given data child component similar passing render function instead passing alreadyrendered elements open issue discussing feature details start working", "d": "10/2016"}, {"body": "said done render functions trivially easy implement think best left userland", "d": "10/2016"}, {"body": "said easy things like mutate single items need events something else look harder render well idea", "d": "10/2016"}, {"body": "testing discovered attribute reserved components exactly need", "d": "10/2016"}, {"body": "read common pitfalls chapter async documentation please check synchronous iteration functions section specially multiple callbacks section seems case", "d": "10/2016"}, {"body": "jbruni thanks response adding fix problem looks like might couple things play nt notice error hidden appeared much earlier output think still bug within causing error never invoke provided callback multiple times side note benchmark test project already using avoid error nt used warmup phase", "d": "10/2016"}, {"body": "hmm branch ca nt seem reproduce even using node close feel free provide information ensure reproduction", "d": "10/2016"}, {"body": "working expected reactive bindings works js end open question forums help", "d": "10/2016"}, {"body": "posva think working expected make sense make computed data call component last get value never computed make confuse computed value cached value although cache false", "d": "10/2016"}, {"body": "docs however note affects programmatic access inside javascript databindings still dependencydriven therefore doenst work pass computed property prop databinding works execute", "d": "10/2016"}, {"body": "fnlctrl oh see means way bind computed value child component thx", "d": "10/2016"}, {"body": "nt mean bind computed value prop child component nt work case computed value nt dependencies nt dependency reactive", "d": "10/2016"}, {"body": "yeah get sorry lost point", "d": "10/2016"}, {"body": "thanks reporting fixing", "d": "10/2016"}, {"body": "upon investigation cdata actually xml type usage supported without vue", "d": "10/2016"}, {"body": "hi vopjie vue problem problably vuecli problem either webpack problem issues github reserved bug reports please use forumvuejsorg ask webpack experts stakc overflow", "d": "10/2016"}, {"body": "ok thank much", "d": "10/2016"}, {"body": "hi thanks filling issue actually belongs vuejsorg repo please open issue instead thanks", "d": "10/2016"}, {"body": "fnlctrl mean belongs vuejsorg repo nt bug", "d": "10/2016"}, {"body": "longer bug way old problem docs nt updated", "d": "10/2016"}, {"body": "\u5df2\u7ecf\u627e\u5230\u89e3\u51b3\u65b9\u6848", "d": "10/2016"}, {"body": "reproduction please", "d": "10/2016"}, {"body": "problem thanks answering fiddle remove body id vue initialization select works like problem exists chrome pc mac included autofocus text input well fiddle nt see mean take testhtml load locally chrome see input gets focus appjs loading loaded losts focus vue works fine setup", "d": "10/2016"}, {"body": "behaviour firefox safari works well", "d": "10/2016"}, {"body": "unless sure vuerelated bug please use forum supportreleted questions forumvuejsorg", "d": "10/2016"}, {"body": "hi samgre thanks report look seems adding key topmost vfor seems make work docs recommended provide key vfor whenever possible unless iterated dom content simple intentionally relying default behavior performance gains think may nonetheless considered bug ping", "d": "10/2016"}, {"body": "thanks fast reply somehow missed attribute learning vue vfor worked nicely without submitting issue noticed also work around bug changing element name either reproduction example", "d": "10/2016"}, {"body": "please make sure follow issue reporting guideline provide reproduction jsfiddlecodepen etc thanks", "d": "10/2016"}, {"body": "updated nueko u using laravel elixir yes something browsersync delay", "d": "10/2016"}, {"body": "yes hot reload", "d": "10/2016"}, {"body": "according phanan length tasks interestingly sixth reserved keyword causes vue template parser fail reproduce issue easily using one task reproducing fiddle", "d": "10/2016"}, {"body": "keywords breaks foraliasre regexp expression try make pr", "d": "10/2016"}, {"body": "iraklisg update fiddler could assign server data variable initalize app would better way", "d": "10/2016"}, {"body": "seemed setting user main app component also component underneath component still thought element seems weird", "d": "10/2016"}, {"body": "keep experiencing seemingly simple cases template tries access data property wants render data exists component data return somedata null however setting somedata method besides initial data property causes error thrown happen anyone else seems like bug vue either improper error handling something end maybe correctly seems pretty straightforward seeing individual node think rendered serverside rendering match clientside seems verified remove typeof window undefined check created method set data client server everything matches error thrown way around update error produced set data within mounted method reason way scenario serverside rendering coupled clientside rerender seen projects try prefetch data would nt seem ordinary set data within created activated beforemount methods throwing error try", "d": "10/2016"}, {"body": "really know hydration part codebase well seems asking app break rendering component server therefore div rendered server app booting client change state component component virtualdom rendered essentially means server nt render div virtualdom client expects exist reason happen case change component state initial clientside render virtualdom virtualdom renders without div like server change components state triggering rerender includes div", "d": "10/2016"}, {"body": "linusborg thanks trying understand error produced sounds like solid reason", "d": "10/2016"}, {"body": "hi thanks filling issue please provide repro jsfiddlecodepen etc thanks", "d": "10/2016"}, {"body": "example linked function look fine outside thatyou using deprecated vue functionality everywhere ready vel debounce dispatch please clean code vue copatible syntax see problem persists", "d": "10/2016"}, {"body": "closing since looks like usage question encourage follow linusborg instructions still trouble open topic forums forumvuejsorg", "d": "10/2016"}, {"body": "actual component one showed yesterday jus referentially js export default props class placeholder data function return address return input bound autocomplete address google autocomplete object autocomplete google inputs retrieved inputs route longname country longname longname locality longname postalcode shortname api domain key libraries places mounted function consolelog mounted windowonload thisloadscript thisapidomain key thisapikey amp libraries thisapilibraries thisbindautocomplete controls address changes send listeners return void watch address function emit setaddress thisaddress methods load google class given library param src param callback return void loadscript function src callback var script documentcreateelement script documentbodyappendchild script callback scriptonload callback scriptsrc src bind autocomplete property return void bindautocomplete function thisautocomplete new googlemapsplacesautocomplete refscomplete types geocode thisautocompleteaddlistener placechanged thispipeaddress look places dispatch event return void pipeaddress function var data var place thisautocompletegetplace placeaddresscomponents undefined var lt placeaddresscomponentslength var input placeaddresscomponents types thisinputs input data input placeaddresscomponents thisinputs input data jsonstringify data emit setaddress jsonparse data get user location return void geolocate function navigatorgeolocation var vm navigatorgeolocationgetcurrentposition function position var geolocation lat positioncoordslatitude lng positioncoordslongitude var circle new googlemapscircle center geolocation radius positioncoordsaccuracy vmautocompletesetbounds circlegetbounds mounted method even fired thanks", "d": "10/2016"}, {"body": "better asking question forums", "d": "10/2016"}, {"body": "forums", "d": "10/2016"}, {"body": "appreciate help want leave anyone may problem take reference needed uninstall elixir compiler vue install new one problem installed started using new version without uninstalling old one thanks", "d": "10/2016"}, {"body": "using one handler multiple parameters handlevalid value type type value type valid true inside components emit valid value email emit valid value password", "d": "10/2016"}, {"body": "multiple type fields maybe could use id case instead", "d": "10/2016"}, {"body": "try something like vue isvalid valid invalid export default data return fields email value valid false password value valid false computed isvalid return objectvalues thisfields every field gt fieldvalid input components value input validity status", "d": "10/2016"}, {"body": "get confused model update part thought update value something works would good certainly great main issue need fields state whereas previously nt could use refs state pretty major pain ass clutters state without good reason", "d": "10/2016"}, {"body": "main issue need fields state whereas previously nt could use refs thedutchcoder inconvenient indeed something mind situations like", "d": "10/2016"}, {"body": "add context could previously need add additional state handler deal js data return email value isvalid false password value isvalid false method dynamically handles input changes computed prop computed isready return thisemailisvalid amp amp thispasswordisvalid mainly extra useful state handler bit pain would great could alternative used refs remain reactive sure implications would deprecated trying illustrate use case old refs useful", "d": "10/2016"}, {"body": "would ok rename issue something like refs reactive able use computed properties", "d": "10/2016"}, {"body": "sure go thanks discussion guys appreciated vue amazing framework open conversations around make better", "d": "10/2016"}, {"body": "get confused model update valid part thought update value component emits event accepting prop vmodel update value parent component would need something like vue props value oninput event emit value eventtargetvalue valid thissomevalidatorfunction imagine better way though without reactive refs perhaps using mixins somehow still reactive refs though super useful thing general", "d": "10/2016"}, {"body": "alright least example works added state real issue combination vuex since vuex getters nt yet available state defined ca nt use populate values could use something quite dirty", "d": "10/2016"}, {"body": "two repos compare two scenarios hope clearly illustrates current problem biggest issue right fact ca nt use computed props child component anymore even nt work emit event nt updated yet", "d": "10/2016"}, {"body": "also found reactive refs useful unit tests like suggested way replace sort pattern otherwise would nice work", "d": "10/2016"}, {"body": "agree thedutchcoder using refs easy way parent read child information inadvertently makes refs seem useless without reactivity commonly also use practice check validity ref components validate parent component", "d": "10/2016"}, {"body": "access could create use html isvalid valid invalid normal input would try computed setter using testing checking component instance calling methods child components data stuff andor never problem", "d": "10/2016"}, {"body": "nt use template", "d": "10/2016"}, {"body": "asselin thanks good catch shmasya brought attention mistake documentation problem templates anything", "d": "10/2016"}, {"body": "linusborg need method use old way template", "d": "10/2016"}, {"body": "sure vue offers ways", "d": "10/2016"}, {"body": "linusborg path choose easier faster way using render created people came react", "d": "10/2016"}, {"body": "let move vuejsorg repo shmasya matter preference familiar templates suggest stick templates use render functions feel component logic expressed templates", "d": "10/2016"}, {"body": "shmasya case needed write render function control template could provide beginning page render functions provides example might want write one vs use template linusborg go ahead open issue vuejsorg repo per evan", "d": "10/2016"}, {"body": "pattern longer supported recommended vue always try drive presence child components via parent state instead imperatively", "d": "10/2016"}, {"body": "investigation decided keep current behavior changing value way prop validation simply produces warnings side effect makes possible entirely strip related code production mode preserve consistent behavior devprod prop validation quite expensive perf sensitive case nt seem strong advantage setting invalid value justify perf loss prod mode consider breaking change update documentation accordingly", "d": "10/2016"}, {"body": "well think find solution question need set data variable accept value props change data corresponding event emit input event vmodel handle value change something along lines template javascript javascript data function return checked thisvalue props value work", "d": "10/2016"}, {"body": "phatchai work around issue", "d": "10/2016"}, {"body": "issues bugs feature requests please use forumvuejsorg gitter", "d": "10/2016"}, {"body": "hi weepy thanks suggestion nt think feasible though older browsers nt support custom elements reliably use element names identify vnode component internally would change many places mere convenience improvement feels inconsistent see component element names use templates placeholders appear final template component successfully processed", "d": "10/2016"}, {"body": "thanks number killer", "d": "10/2016"}, {"body": "number already currently browser support intend keep", "d": "10/2016"}, {"body": "ca nt check repro right could migrating props anti pattern", "d": "10/2016"}, {"body": "inline props immutable value every time parent rerenders mutated child prop reset back inline value relying reactively mutating inline prop usage longer makes sense therefore inline values made reactive want allow inline props initial value declare field uses props value", "d": "10/2016"}, {"body": "think expected behavior since created root component rule data scope", "d": "10/2016"}, {"body": "explained ktsn root direct children appear root template everything parent template compiled parent scope everything child template compiled child scope", "d": "10/2016"}, {"body": "clear morning thanks", "d": "10/2016"}, {"body": "hi thanks filling issue get pojo viewmodel object way easy use situation specially ajax pass reactive data obj getterssetters library example ajax work data pojo guess could hardly practical advantage cloning passing need deep clone implementation decent performance suggest lodashunderscore probably vue concern side note really care performance probably avoid using objectkeys array prototype functions loop object", "d": "10/2016"}, {"body": "want clone ajax nt see reason converted object works exactly serialization nt see point cloning", "d": "10/2016"}, {"body": "ok probably need test give vue data directly jquery ajax throw exception look solution internet found answer use jsonparse also mentioned vue api web site try found better solution get plain object guess cause jquery exception getter setter try next days create jsfiddler example vue jquery prove issue project working lodash underscore needed keep mind suggestion js code suggestion improved code jsonparse objectkeys work faster prop obj obj prop hasownproperty make test", "d": "10/2016"}, {"body": "ok tested team fnlctrl suggest better performance thanks", "d": "10/2016"}, {"body": "ok tested jquery ajax helper giving data object works perfectly really sure happends days ago reason jquery give back exception seems appear anymore", "d": "10/2016"}, {"body": "hi thanks filling issue improvement roadmap using design decision avoid manually parsing expressions bloats code takes time unlikely changed however relatively easy remove add every expression write template afterwards maybe option compiler try using jsx nt negative opinions official babel plugin compiling jsx vue render function really works great much flexible templates nt require", "d": "10/2016"}, {"body": "hmm precompiled templates although using cpscompliant work strict mode seems bit top platform enforce strict mode party code though removing generated render functions involves fundamental changes compiler implementation marginal gain unfortunately nt think happen time soon alternative solution fnlctrl suggested using render function jsx", "d": "10/2016"}, {"body": "hi problem salesforce exposes spa develop components components must directly manipulate dom others components use official way based events communicate components strict mode security features required keep component sort sandbox said tried jsxrender functions works precompiled templates lot better still productive even jsx except lack valid vmodel alternative use value onclick binding clearly optimal lot data entry understand situation probably edge case still sad hear feature roadmap", "d": "10/2016"}, {"body": "filed issue requires information using vue vue bug suggestion bug reproducible link jsfiddle component nt handler function vue issue best", "d": "10/2016"}, {"body": "using vue bug error message use well vue take suggestion improve error message style make specific mistake developer makes mistake fix little time knowing exactly mistake comparison react js show component name along line number course error wish error messege specific", "d": "10/2016"}, {"body": "lots messages vue nt really say much vue safety checks seem lacking unfortunately", "d": "10/2016"}, {"body": "guess vue add bit info warnings component name component type make warning message configurable development env", "d": "10/2016"}, {"body": "try provide component information whenever one maybe oversight justnobody please provide specific examples messages lacking improve complaining achieves nothing", "d": "10/2016"}, {"body": "nt really complaining figured kind something people already knew run plenty small edge cases past gave odd nondescript message actual issue instead rooted deep source issues nt emit error instead caused weird rendering bug easier track others nt bother reporting since figured stupid one particular actually created pull request took long figure wrong imagine lot fixed bad staying silent guess message readers think bug report even might end bug", "d": "10/2016"}, {"body": "even providing name key component nt help much thanks stopping adding issue improvement", "d": "10/2016"}, {"body": "thanks evan", "d": "10/2016"}, {"body": "default go data attribute goes string range input already starts number source truth solve put ps hey brasilian nt asks question us first bug xd", "d": "10/2016"}, {"body": "hi thanks filling issue may surprising javascript type html input values regardless type attribute string browser behavior work around use modifier halfeld suggested", "d": "10/2016"}, {"body": "correct wrong believe vue root instance use propsdata check passing component would correctly mind posting vue specific code verify", "d": "10/2016"}, {"body": "true propsdata would need used javascript files part server side views meaning output variables const app new vue el app simple", "d": "10/2016"}, {"body": "nt tried using propsdata personally believe strictly using props root instance deprecated see root instance longer use template props use propsdata instead solution laravelvue apps include data external store aka script tag take look laravel default bootstrap file see laravelcsrftoken reference could follow pattern include user root instance data object instead propspropsdata ps sorry poor formatting writing phone", "d": "10/2016"}, {"body": "craigpaul actually workaround", "d": "10/2016"}, {"body": "craigpaul pointed passing props root instance templates deprecated please use instead glad found workaround", "d": "10/2016"}, {"body": "fnlctrl one use propsdata", "d": "10/2016"}, {"body": "true propsdata would need used javascript files part server side views meaning output variables saw craigpaul suggested replied thought knew", "d": "10/2016"}, {"body": "render function check brasilian written article", "d": "10/2016"}, {"body": "hi thanks filling issue get runtime build compile templates either indom templates option case need standalone build helpful section explaining", "d": "10/2016"}, {"body": "thanks halfeld fnlctrl standalone version works fine case needed use standalone version brunch alias config brunchconfig", "d": "10/2016"}, {"body": "chrisvfritz", "d": "10/2016"}, {"body": "thanks davidkhess open issues vuejsvuejsorg repo core documentation", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "try using node", "d": "10/2016"}, {"body": "egoist said", "d": "10/2016"}, {"body": "parsing generating empty text node two probelm workaround remove space release fix edit remove template default slot guess work repro", "d": "10/2016"}, {"body": "tested latest vue vueloader works try using vue latest vueloader updating still issue please open issue vueloader", "d": "10/2016"}, {"body": "add selected attribute template update demo", "d": "10/2016"}, {"body": "peteranny clarify expected behavior optionssplice options b rendered html becomes getting result provided clicking remove clicking value b option become index exactly become value b click became click", "d": "10/2016"}, {"body": "fnlctrl um thank testing think asked wrong question according testing value b become click true question value b selecting b anyway seen image select option ought select option value misguessed value b nt change", "d": "10/2016"}, {"body": "peteranny may bug remained changed dom supposed reflect change sure try adding prop defcc suggested note mustache binding propsattrs deprecated please use instead add prop probably made vue think safe update selected value dom", "d": "10/2016"}, {"body": "tested worked expected marking bug", "d": "10/2016"}, {"body": "pure css solution might help anyone caught dilemma", "d": "10/2016"}, {"body": "way", "d": "10/2016"}, {"body": "ok nonexistent properties could tracked could tracked ridiculous", "d": "10/2016"}, {"body": "building large forms need duplicate property names template data initialiser function create make sure objects edited possible properties present null value missing properties binding vue vmodel still creates properties without warning reactive property meaning properties become reactive leading strange behaviour instance using computed properties custom vmodel directive solution pity default behaviour changed", "d": "10/2016"}, {"body": "updated jsfiddle use vue also switched test use problem gets better visibility output read instead reads vue nt problem", "d": "10/2016"}, {"body": "copypasting comment another issue think removing dispatch terrible idea nt first ui frameworklibrary implement notion bubbling actionsevents visual tree well established idea take away functionality premise able dispatch event causes side effects unknown parent tree sounds like recipe trouble need leave responsibility users sure common sense use feature appropriately new concept really ca nt see benefit change library built upon long time established web technologiesconcepts dom dom events fact bubble visual tree years one complaining nt idea components something recently embraced thanks proposal web components opinion makes sense vue components behave similarly regular dom elements regards event handling done proposed alternative use global event bus seems illogical something practical effective easier understand due well established concept years already existed proposals thread remind emberjs wants passing closure actions properties components level hierarchy tedious unnecessary vuejs reason wrote aside really like library seriously think terrible change", "d": "10/2016"}, {"body": "event bus paradigm proposed solution exact thing eventbased architecture often times inferior declarative statebased architecture say app user log eventbased solution listen login event fire event later username password respond said event accordingly whatever components listening comes problems though biggest one components nt rendered dom event fired nt going receive change along knowing parts application receive event addition receivers event ca nt possibly know event coming without additional information given excuse language massive clusterfuck dealt nt care use let use stateful approach create global state variable representing user account info signed user login information signed user logs set account info everything app relies state variable updates accordingly events nt matter component created always display correct information could use event update global state update declarative approach lets write components way always appear way depending exactly localglobal state regardless user application without listen things happen believe vue meant along akin things software development took us figure damn well glad edit oh nt forget watch parameters say send ajax request perform action changes eg user logs watch loggedin variable true load profile images something like", "d": "10/2016"}, {"body": "understand saying random component modify global state think thing random component bubble event god knows still run risk application flow dirtied accidentally ways handle paradigms clean manner usually end responsibility framework user certain situations one mechanism make sense example agree loggedin state something known whole application global state makes sense button application user clicks usually handle logic behind actually logging user something handled higher chain might component might route button likely need notify something intent log button therefore need modify global state directly removal dispatch need button component know global object manages application user session notify directly intent makes button tightly coupled whole application might button nested levels deep declare handler every level intent reaches destiny totally unnecessary", "d": "10/2016"}, {"body": "actually every level makes code harder maintain", "d": "10/2016"}, {"body": "well obviously directly changing state problematic vuex solves issue mutations actions true solutions fit bill better others never encountered situation declarative logic nt better option specific case probably make button specific logging heh addendum loginrelated component nested deep reason mutate global state", "d": "10/2016"}, {"body": "log button example vuex store referring mentioned global object look vuex works expect tightly coupling random component rest app state simply manage reference store desirable example log button part third party library really wish nt take away choice use either paradigm especially event bubbling widely recognized therefore easy comprehend new contributors project", "d": "10/2016"}, {"body": "depends mean random component router view component example full rights access commit store opinion however smaller component reuse button form ui element times nt logical reason access store using props events since data vue application topdown want keep much local state toplevel possible deep nesting problem avoided much possible much bother propagate events two levels chances might need rethink template structure goes deeper mostly tangent though often times easier paradigms understand ones end getting abused end hell become unwieldy statebased approach much straightforward agreed upon us currently using free continue using move another framework approach nt preference", "d": "10/2016"}, {"body": "times nt logical reason access store using props events exactly point deep nesting problem avoided much possible sometimes option much bother propagate events two levels true levels go deeper easier paradigms understand ones end getting abused end hell become unwieldy users discipline free continue using move another framework approach nt preference mmk simplicity convenience reason considering switching ember vue one things enjoyed vue removing seems arbitrary team removed lot features release honestly agree one thank replies", "d": "10/2016"}, {"body": "ktsn alternatives broadcast dispatch simple removal come improve got better", "d": "10/2016"}, {"body": "rhyek would like give couple points raised since discussion already brushed number topics would like get back basics deprecated diospatch broacast implicit coupling parent deeply nested child dispatches event way infer relationship code true oviously look changes deprecations introduced vue might realize removing implicit behaviour favour explicit alternatives common theme deprecating fits right example js parent events someevent function deeply nested child dispatch someevent fine parent one direct child case listener template real extra work either becomes hard follow especially teams soon nested children especially deeply nested even one direct child either look children rely code comments document event tiggered child component additional boilerplate well say like dispatch broadcast nt pass components agree easier come across many situations actually nessessary rather chain passing event would rather case data would changedappended trip component event names use deeply nested components would explicit namespacing events otherwise could clashing js parent events close function deeply nested child dispatch close deeply nested child dispatch close children thirdpartylibs screwed catch event component middle rename parent nt forget comment someone looking code might think nothing event renaming using emit template listeners problem use simple short event names everywhere wo nt clash event callback attached template really wish nt take away choice use either paradigm thought paradigms work equally well would treat equally nt think reasons therefore try steer users pactices found work best leaving way get around global bus method would also like talk worries global state sure understand position fully yet maybe provide example think dispatch broadcast work best try show approach could improve situation", "d": "10/2016"}, {"body": "think dispatch broadcast event bus address different things make code easy maintain decoupled different scenarios keep great hard say one better every cases", "d": "10/2016"}, {"body": "cnweibo think pretty exhaustive arguments sides honestly nt see point addressing different things feel free make arguments tell certainly happen really really want hard implement plugin", "d": "10/2016"}, {"body": "linusborg truly appreciate time took write reply understand arguments say like dispatch broadcast like honestly definitely seemed odd like said event bubbling something ubiquitous among many platforms point much thing similar ever encountered preview events wpf paired normal events tunnel visual tree topmost element source original event get sent directly chain related elements nt spread everything would explicit namespacing events agree usually anyways also people used jquery furthermore platforms send source object argument handler could maybe filter contexts based hint dom events available example platforms benefit working static types clash pretty hard encounter event instance class case honestly nt understand concern vuejs team people ca nt careful enough using sure could find plenty things wrong using library far go protect users careless fine parent one direct child case emit listener template real extra work either honest question decidedly new vue aside declaring listeners every level nt also event every component chain seems annoying conclusion let quote something someone said issue vuecli introducing official templates new projects probably know locked official templates gives freedom time causes need decisions think end meter balance many decisions make front users many ones users want agree philosophy attitude encountered issue strangely contrast see comment comments boils freedom taking away choices based although good ultimately flawed intentions really really want hard implement plugin probably end probably", "d": "10/2016"}, {"body": "linusborg also therefore try steer users pactices found work best leaving way get around global bus method trying steer forcing", "d": "10/2016"}, {"body": "tried implementing feature eventbus methods may help", "d": "10/2016"}, {"body": "posva plan mean basically declare event bus object module import wherever else want nt like tbh definitely use things strongly believe want every time", "d": "10/2016"}, {"body": "case honestly nt understand concern vuejs team people ca nt careful enough using well point one team could point reallife usecase preferable solutions also bus global state nt see countless forum posts answered either might subjective view maybe understand whole team thinks experience always inferior solution drop core point want renew offer discuss real example sure could find plenty things wrong using library far go protect users careless course delicate question hard balance find judge case case fine parent one direct child case emit listener template real extra work either honest question decidedly new vue aside declaring listeners every level nt also emit event every component chain seems annoying since talk direct parentchildreleationships would emit deeply nested children course reemit every level repeat nt found presented situations dispatching across many nested children really nessessary preferable solutions therefore try steer users pactices found work best leaving way get around global bus method trying steer forcing say make life little harder use bus thing achieve similar behaviour cases reimplement plugin quite easily forcing use ae making way around bit harder", "d": "10/2016"}, {"body": "think also add every vue instance liking something constructive waiting examples", "d": "10/2016"}, {"body": "posva think also add every vue instance vueprototype bus new vue like pretty clever liking something constructive think pretty valid criteria choosing use something least case stated many times think event bubbling place waiting examples mean really need given examples situations nt like idea using event bus declaring listeners every level want see code could maybe come something make point bit clearer feel event bubbling pretty standard thing people appreciate something useful event buses state managers least kind paradigm shift although hard comprehend stretch seem like hipster territory course kidding last comment like stated see uses definitely find problem solve actually projects worked using ember tend write service acts exactly like global state manager assure trying stubborn purpose really like vue want love know", "d": "10/2016"}, {"body": "nt also emit event every component think terms event bubbling nt use component composition eg html open modal close modal component need care events component two instances direct logical children single instance despite complicated view hierarchy nesting", "d": "10/2016"}, {"body": "think repeating point end working around issue somehow seems strange discussion revolved around stating several workarounds something pretty standard practical nt exist anymore whatever reason linusborg well point one team could point reallife usecase dispatch preferable solutions emit sounds like civil engineer asking reason close highway exit says something like offramp leads intersection people get confused whether turn left right people know way lived years new citizens often get lost couple minutes want avoid say alright sure close cool travel km next offramp manage thank replies glad open discussion least seems like good team", "d": "10/2016"}, {"body": "sounds like civil engineer asking reason close highway exit says something like offramp leads intersection people get confused whether turn left right people know way lived years new citizens often get lost couple minutes want avoid add bad methaphor aswell view like road encourages people race faster speed limits rarely payed attention add bumpers force people slow like arrive destination quickly speeding sure might server well times observe part road constantly years amount accidents andpeople missing next offramp simply worth many drivers one problems attested nt like bumpers well destinations road fast one bumpers take one nt like road view nt nice liking something constructive think pretty valid criteria choosing use something least case stated many times think event bubbling place think posva meant like constructive argument discussing weither keep something add something library wide range users keep asking valid reallife usecase discuss instead personal preferences", "d": "10/2016"}, {"body": "yeah except blew perfectly good highway built another rubberized asphalt read somewhere pretty neat also extra km example think one posted original question recursive components ok one imagine want something every level sequence event caught perfectly good example dispatch pretty straightforward", "d": "10/2016"}, {"body": "want see code yes please", "d": "10/2016"}, {"body": "posva gave example previous comment note think seconds without dispatch proves point", "d": "10/2016"}, {"body": "example think one posted original question recursive components ok one imagine want something every level sequence event caught perfectly good example dispatch pretty straightforward js recursivechild something export default methods dispatch dispatch dosomething events dosomething function something dont return true nessessary make event bubble nt like unexpressivness js recursivechild something export default methods dosomething someting dont emit dosomething really worse got another one", "d": "10/2016"}, {"body": "ok sure recursive yet still nested like alright going rough day thanks come something better later post either lost interest", "d": "10/2016"}, {"body": "recursive yet still nested like would add listener template seen good bad depending weither stress verboseness vs expressiveness btw situation chain event till parent done something like mourn coupling components praise expressiveness bit type big deal still claim real usecase example probably different optimization available like global store depends individual scenario hard argue example code anyways nice discussion enjoy welldeserved sleep", "d": "10/2016"}, {"body": "rhyek looks like workarounds determined use first place goal goal allow components communicate one another decent maintainability achieving goal inferior solution list practical pros cons excluding preferences dropped also note dom event bubbling fundamentally different crosscomponent communication argument event bubbling widely recognized nt mean must good solution problem trying solve done commenting thread find hard argue nt like", "d": "10/2016"}, {"body": "evan intentional sounds like intentional murder people lazy life long mirroring whole schema looks pretty weird background native javascript objects", "d": "10/2016"}, {"body": "chois maybe use class names instead", "d": "10/2016"}, {"body": "quangv using vue together gsap animations", "d": "10/2016"}, {"body": "nice gsap amazing vue great thinking combining assuming work nicely together thursday october cho garcia notifications githubcom wrote quangv using vue together gsap animations receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "indeed javascript playing much better new vue transitions", "d": "10/2016"}, {"body": "actually issue laravel php generating json objectmodelclass get quoted keys thus compiler vue break property passing", "d": "10/2016"}, {"body": "need pass json string params single quotes important generated json double quotes", "d": "10/2016"}, {"body": "well course using still working properly", "d": "10/2016"}, {"body": "send problem vuejs forum", "d": "10/2016"}, {"body": "first congratulations releasing vue evaluating vue last months especially works together haxe using nice macro able really get best worlds issue think boils changing way virtual dom translated interface dom looking code think need overwrite functions nodeops object createelement appendchild etc think best way really appreciate could take look understand really busy moment quick pointers enough us", "d": "10/2016"}, {"body": "remcohuijser probably create fork add directory alongside model platform implementation done", "d": "10/2016"}, {"body": "sounds like good plan tricky thing want use html dom interfaces alongside interface dom interfaces feel makes sense able pass nodehandler something creating new vue instance handler offers createelement function etc manipulates dom creating handler dom manipulation changed javascript data shared interface var data create vueinstance mount html element var new vue data data el htmlelement nodehandler new htmlhandler var new vue data data el htmlelement create html handler default create vue instance mount one elements var new vue data data el ourelement nodehandler new ourownhandler think", "d": "10/2016"}, {"body": "danielsamuels possibly still feature could added vue made migration easy trying may much demand", "d": "10/2016"}, {"body": "going setting keep comments would nice setting like ractive", "d": "10/2016"}, {"body": "found issue fixed within vuejs change vuejs verson add native click work wo nt alert changed wo nt alert document also explain usage native", "d": "10/2016"}, {"body": "sqal hey bro nt close wraptag", "d": "10/2016"}, {"body": "hi use vue web recently broken browser would problem", "d": "10/2016"}, {"body": "xiaoshuangli issue vue think found bug open new issue minimal repro broken website general", "d": "10/2016"}, {"body": "posva thanks trying still learning vue feel awesome", "d": "10/2016"}, {"body": "found made stupid mistake thanks lot", "d": "10/2016"}, {"body": "thanks elithrar added section twoway filters specifically migration guide would love hear thoughts", "d": "10/2016"}, {"body": "chrisvfritz great writeup breaking vue vue steps great job illustrating changes required benefits custom component approach", "d": "10/2016"}, {"body": "kazupon thank work vuejs awesome could please correct official example contain name attribute vuecomponent definition", "d": "10/2016"}, {"body": "nt work trying following getting error interpolation inside attributes deprecated use vbind colon shorthand instead simple vue making complicated unknown", "d": "10/2016"}, {"body": "got problem found solution yet", "d": "10/2016"}, {"body": "maybe read docs find complicated unknown", "d": "10/2016"}, {"body": "zjhiphop actually simple long read doc least migration guide normally fan using issue list support since saying complicatedunknown fiddle please note though doable nt mean setting id fly often unnecessary keep issue list clean locking discussion welcome open thread active forum", "d": "10/2016"}, {"body": "link broken", "d": "10/2016"}, {"body": "steviey", "d": "10/2016"}, {"body": "modify add code see export single file vue gist exportsinglefilejs important thing works windows console stdout base c vue \u03bb npm run build vue build c node buildbuildjs error could load c imported c enoent file directory open c c processtickcallback modulerunmain run startup c vue \u03bb npm run build vue build c node buildbuildjs c c c c c c c c c c c c distvuecommonjs c c c c c c c c c c distvuecommonminjs distvuecommonminjsgz c c c c distvuejs c c c c distvueminjs distvueminjsgz c c c c packagesvuetemplatecompilerbuildjs c c c c packagesvueserverrendererbuildjs c vue \u03bb", "d": "10/2016"}, {"body": "think removing dispatch terrible idea nt first ui frameworklibrary implement notion bubbling actionsevents visual tree well established idea take away functionality premise able dispatch event causes side effects unknown parent tree sounds like recipe trouble need leave responsibility users sure common sense use feature appropriately new concept really ca nt see benefit change library built upon long time established web technologiesconcepts dom dom events fact bubble visual tree years one complaining nt idea components something recently embraced thanks proposal web components opinion makes sense vue components behave similarly regular dom elements regards event handling done proposed alternative use global event bus seems illogical something practical effective easier understand due well established concept years already existed proposals thread remind emberjs wants passing closure actions properties components level hierarchy tedious unnecessary vuejs reason wrote aside really like library seriously think terrible change", "d": "10/2016"}, {"body": "really interested know simplesmiler solution still elegant way go vuejs ability able create dynamic slots key good component reusability think topic deserves little section documentation current docs made believe way achieve using custom logic inside render function", "d": "10/2016"}, {"body": "problem solved mine first suggested solution davejamesmiller thing migrate code vuejs instead using used", "d": "10/2016"}, {"body": "api transitions new version want trigger transition component custom directive calculations offsetheight need use visibility instead display vshow", "d": "10/2016"}, {"body": "use expressions syntax templates unless browsers support reason babel extract expressions transform know vue precompile templates rendering functions backend want know possible use babel transform expressions think posva", "d": "10/2016"}, {"body": "made simple test vue noticed babel properly transform expressions great one benefits use vue instead vue sorry disturb", "d": "10/2016"}, {"body": "ikristher think better way delaying broadcast using settimeout", "d": "10/2016"}, {"body": "repo related", "d": "10/2016"}, {"body": "right repo weex scott", "d": "10/2016"}, {"body": "yes pretty sure vuepowered weex work seems happening repo mentioned", "d": "10/2016"}, {"body": "great stuff finally alternative react native ionic huge vuejs community", "d": "10/2016"}, {"body": "also like bring attention quasar framework someone already mentioned created ios android apps framework also porting vue speak nt pure native bridge framework pretty good nonetheless scott", "d": "10/2016"}, {"body": "believe current behavior unless attributes referring dom attributes vue props sure case", "d": "10/2016"}, {"body": "feature helpful porting react components vue", "d": "10/2016"}, {"body": "using vue best naming strategy private variable name computed props example prop called passed avoid mutation define variable datacomputed prop however best name came advices naming strategy circumstance", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "better performant way get plain json vue data following code click test get performance better result jsonparse jsonstringify", "d": "10/2016"}, {"body": "thank alot ramreddy", "d": "10/2016"}, {"body": "libraries like semanticui require hidden input eg display dropdown multiples selection rjoo using solve problem use vuejs whats version using", "d": "10/2016"}, {"body": "vuejs possibility use object filter read write functions work anymore", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "tolerious \u7684\u65b9\u6cd5vmodel\u65e0\u6cd5\u4e0d\u7ed1\u5b9a", "d": "10/2016"}, {"body": "accaolei init datetimepicker input different id bind input value different data refer code", "d": "10/2016"}, {"body": "revisited found simple solution create custom object add getterssetters created using model path string simple example inputlist js div div vfor form configforms input vmodel formdata formmodel import vue vue import lodash export default props value config computed methods vueset obj path val let value obj let fields isarray path path topath path let f fields let idx number f let p fields idx idx fieldslength vueset value p val else value p vueset value p isnumber p value value p data return formdata created foreach thisconfigforms form gt objectdefineproperty thisformdata formmodel get gt get thisvalue formmodel set v gt thisvueset thisvalue formmodel v use js div inputlist vmodel formdata configformconfig import inputlist inputlist export default components inputlist data return formdata name jon loc id formconfig forms type input model locid type input model loc name", "d": "10/2016"}, {"body": "would one vm set key val vue working reporting errors simply trying display value json file like vue trying easy complicated confusing thing ever tried use something even simple", "d": "10/2016"}, {"body": "tmiguelt cheapsteak nt work anymore vue", "d": "10/2016"}, {"body": "moduleexports data defaultdata methods resetdata function data defaultdata write like ca nt work must function get default data wan na reset", "d": "10/2016"}, {"body": "tmiguelt ok go single file template syntax return ajax like html name template loaded ajax export default data return name ajax template make work vue want work way coz ide support etc", "d": "10/2016"}, {"body": "tmiguelt ok go single file template syntax returned ajax like html name template loaded ajax export default data return name ajax template make work vue think putting native protected runtime template compiler something vue missing want work way coz ide support etc nt want use webpack code splitting like want able load template ajax use browser", "d": "10/2016"}, {"body": "ok bit old problem way last comment user input stuff celsius field trying write anything say fahrenheit change celsius immediately change fahrenheit try typing fahrenheit field example implement similar thing two fields two watchers semafor nt feel right way came", "d": "10/2016"}, {"body": "closing vue vuerouter vuex ship typings right npm packages terms component decorators offical many great community solutions thanks everyone involved discussion", "d": "10/2016"}, {"body": "would still nice able use typescript vue files well far know possible right", "d": "10/2016"}, {"body": "amcsi vuetsloader use typescript single file component", "d": "10/2016"}, {"body": "oh wow", "d": "10/2016"}, {"body": "also introductory guide vuets integration check", "d": "10/2016"}, {"body": "made vue typescript example using standalone vue little experience vuetswebpack feel free make pull request working would nt recommend encountered many bugs far use instead", "d": "10/2016"}, {"body": "would please file bugs related projects curious", "d": "10/2016"}, {"body": "hugely appreciated reverted discussion took place although noticed reverted back newer versions thing vmodel directive still escaping logic made readaptable custom components impossible create custom components behave like form inputs manipulating referenced value parent scope let take example someone wanting create switch multiple choice different markdown select possible using default html inputs nothing like allowed understand reasoning philosophy behind one directional data flow approach nt really allow anyone adopt different patterns exception form inputs still behave like twoway binding custom components sort escape rule nt mean annoying reopening conversation since still using vuejs long time great supporter one things always appreciated aspect unopinionated versatile vuejs presented start lightweight vm class nt try enforce upon monolithic architecture allowing truly modular however wish structure tour application escaping framework hell feature war feels bit like step back trying impose philosophy limiting choice really expect vuejs", "d": "10/2016"}, {"body": "custom components use work native inputs see docs essence component accepts prop component value changes emit event new value parent uses component value updates", "d": "10/2016"}, {"body": "oh nt spot guess pulled elaborate rant nothing sorry actually quite nice implementation still really liked two way data binding syntax present sub versions though", "d": "10/2016"}, {"body": "instanceofmichael answer vue using vue use computed properties apply filters combined", "d": "10/2016"}, {"body": "like sure allows run filter escaping", "d": "10/2016"}, {"body": "instanceofmichael use computed properties said docs instead html unsafestring customfilter something like said really like old syntax discussed somewhere understand reason removal", "d": "10/2016"}, {"body": "runs escape custom filter instead", "d": "10/2016"}, {"body": "need escape use html escape function", "d": "10/2016"}, {"body": "need escape use html escape function use one builtin vuejs instead adding extra dependency", "d": "10/2016"}, {"body": "right specs ones talked htmlspec xmlcompatible part htmlspec edit far understood spec means allowed prohibits contain", "d": "10/2016"}, {"body": "note difference valid html syntax vs fullyvalid html former means adheres syntax constraints laid spec syntax latter entails following spec every extreme detail eg element nt certain attribute use element syntax level attribute names defined follows attributes name value attribute names must consist one characters space characters null quotation mark apostrophe characters control characters characters defined unicode vue templates valid html syntax level practical reasons enables speccompliant html parser able parse vue templates makes possible reuse excellent htmlbased tools already aspects tooling however opinion striving fullyvalid html templating syntax completely pointless template eventually gets rendered browser template job convey connection javascript model final desired output fullyvalid html making templates fully valid html zero practical benefits except maybe getting rid warnings overlyrigorous ide", "d": "10/2016"}, {"body": "opinion page first render js events fire free broken html event dependent javascript fails render clean mess things uglier seeing js framework fail render jumbled mess template tag soup halffunctioning elements idea adding exclusive attributesprefixes adds additional attack vector may minority position days", "d": "10/2016"}, {"body": "id love know image request even made place img tag hardcoded src div ngiffalse image request still made even template rendered plunkr open console look requesting image", "d": "10/2016"}, {"body": "becuase vue template dom vue chance find parse render elements browser sees vue tries download", "d": "10/2016"}, {"body": "hi use code", "d": "10/2016"}, {"body": "could take look", "d": "10/2016"}, {"title": "collection update issue", "body": "hello come across issue fetching collection appears certain scenario described must say experienced js think managed track location issue scenario fetch objects server everything ok fetch objects server everything ok fetch objects server everything ok fetch objects server discovered bug point time list contains objects cid id cid id aa cid id ad new object added cid id byid object cache one entry cid added one id already exists collection attempts remove previous objects list remove objects keys aa ad last one sure newly added object id method removemodels calling models object cid result get function object cid newly added object object remains list newly added object removed visible sideeffect bug stumbled ghost entries remain fetch empty collection server ghost objects remain collection printscreen debug session think issue lies nt really know solve guess better mechanism get method would fix", "num": "4093", "d": "10/2016"}, {"title": "replacing routes using backbonejs", "body": "eg routerjs page brower url wwwdomaincom first want get url wwwdomaincomfirst brower address bar replacing routes thanks", "num": "4090", "d": "10/2016"}, {"title": "update event collection reset", "body": "docs would expect event fired whenever collection reset addition specific event since event independent models addedremoved collection", "num": "4087", "d": "10/2016"}, {"title": "someone adds arrayprototypeunset method things break", "body": "spent time tracking bug site thirdparty javascript nt working properly specifically creating backbone model object passing attributes inherit attributes never ended object investigation found site owner extending function function takes options contain property code happen passing array objects parameter whether supported backbone unsure think wrapped something consume options downstream obviously immediate answer stop extending builtins since us thirdpartyjavascripters rarely say environment code runs figured worth open issue anyways jsbin see problem hopefully helps somebody", "num": "4086", "d": "10/2016"}, {"title": "backbone navigate url encode different language diacritics", "body": "search form redirects user exact value entered navigate function provided backbone fine use strings english masa de calcat add diacritics input mas\u0103 de c\u0103lcat get route function fired twice problem firefox safari later mac ios tried using use success html one alert two alerts js var r backbonerouterextend routes results query results results function query alert route triggered decodeuricomponent query var myr new r backbonehistorystart see fiddle thoughts", "num": "4085", "d": "10/2016"}, {"title": "static site output question", "body": "possible enable static output backbone app common example would github pages", "num": "4084", "d": "10/2016"}, {"title": "jquery present dependency packagejson bowerjson", "body": "installing backbone dependency trough npm nt raise warning fact requires peer dependency directly installing would nice jquery peerdependency dependency packagejson bowerjson files", "num": "4082", "d": "10/2016"}, {"body": "provide jsfiddlecodepenchoice code sharer issue difficult know exact issue without display exact scenario caused issue", "d": "10/2016"}, {"body": "using backbone marionette enhance application creating everything still local machine provide data source setting page search input enter something search input fetches server users match search term displays table everything set working users fetched correctly beginning searching specific users created jsfilldle js code marionette returns view", "d": "10/2016"}, {"body": "ok realized issue expect fetches clear collection looking collectionfetch reset true reset collection display got back next time try ask question channel others help issues mostly bugs support", "d": "10/2016"}, {"body": "thank sorry issue really looked thinking bug backbone merging new result", "d": "10/2016"}, {"body": "want start pushstate true future please use stackoverflow questions like", "d": "10/2016"}, {"body": "nope special function special event allows optimize large changes contents collection also fired code would careful make sure doublework", "d": "10/2016"}, {"body": "typically never good idea modify objects nt create javascript said nt always control app running someone else environment lord knows employ pretty crazy defensive code counter horrific hacks javascript developers put site thanks reporting closing", "d": "10/2016"}, {"body": "ubuntu chrome whenever click either english string one diacritics still get single alerts maybe problem backbone local stack", "d": "10/2016"}, {"body": "open dev console browser copypaste current state dom course comes manual work since download css amp image files nt think needs kind special support backbone tommy notifications githubcom possible enable static output backbone app common example would github pages receiving subscribed thread reply email directly view github mute thread bence er\u0151sme github", "d": "10/2016"}, {"body": "thanks answers issue", "d": "10/2016"}, {"body": "couple solutions tried years usually rely running dom implementation serverside node like jsdom phantomjs outputting html string try googling serverside rendering backbone suggestions use case simple like erosb mentioned copy manipulate needs", "d": "10/2016"}, {"body": "awesome thanks", "d": "10/2016"}, {"body": "jquery optional dependency backbone nt need build backbone app app uses jquery need depend explicitly expose backbone script tag build tool backbone automatically pick", "d": "10/2016"}, {"body": "thanks feedback", "d": "10/2016"}, {"body": "interesting idea big fan proposed method couple reasons enter new function context nt need gain passed value something easily could accessed outside bit data given within function current value thing changing usually need information make update let take third example example could would clearer elaborate general provide fancy api drop function context work real gain api feels like obfuscating andor overclevering trying proposed updatemorethanonefield array api great example gets nasty", "d": "10/2016"}, {"body": "hey jashkenas thanks taking time give feedback nt quite understand criticisms bit data given within function current value thing changing usually need information make update proposed change involved passing arguments function currentvalue attribute attribute key model sufficient context updates think could would clearer think simplicity example may hurt trying portray sometimes want encapsulated complex business logic update agree comparable cleaner modified examples slightly logic inlined one line really thinking cases logic updating looks something like javascript export const updatecost currentcost gt get starting cost let newcost isfinite cost cost calculatecost model apply coupons let coupon getcouponused newcost applycouponcode newcost coupon apply taxes let region getcustomersregion newcost addtaxes newcost region apply shipping costs let address getcustomersaddress newcost addshippingcost newcost address logic helper functions separate file import function cleaner basically benefit get makes easy provide transform function existing value possibly several existing values know logic implemented function suggesting replace us habitually put complex logic named functions nt think alone opportunity turn lines multiple places x lines applying transform multiple properties functional style backbone normally gets think certainly feels home next underscorelodash style functions backbone devs often use elaborate general provide fancy api drop function context work real gain could explain think would look like first reading nt see use case function whereas last comment read like think valid use case nt think api design best something completely open suggestions could simplified clarified meet need", "d": "10/2016"}, {"body": "respond quickly nt better api design particular case think fine atomic operations combine see fit example external helper function exported little ugly updating cost concern model put model objectoriented version might look something like", "d": "10/2016"}, {"body": "gah fair enough model point get making examples try find real world examples behind original inspiration think fall quick update case like incrementing perfectly honest working less backbone days nt push pr begin totally top real world examples originally drove going fight one see value also understand desire avoid api bloat", "d": "10/2016"}, {"body": "greets et al regarding separating several files done presently besides converting everything inline documentation angling fully modularize separate repos main components backbone already done events dependencies modules underscore inline documentation great codebases using esdoc actually tjsdoc releasing soon documentation generation current api docs held thought would bit sooner using jspm systemjs bundling distributed releases works great edit though keen getting things npm finished accomplish full modularization adding internal events instance communicate modules versus direct method calls points pertinent less eventbus npm module backboneesnexteventbus allows access several standard eventbus instances app dev also internal backboneesnext usage also added extra trigger methods events quite handy able return results synchronously trigger asynchronously receive promise results rather handy message passing modularization nice plugin system allows app autowire eventbus typhonjspluginmanager nice feature event registration transparently handled plugins manager events removed automatically plugins unloaded ie plugin lifecycle right though considering keeping sync backbone likely one repo except events make easier update mainline backbone releases creating comprehensive testing infrastructure however considering fully modularizing creating usage implementation primary goal remove underscore usage internally standard library functions exist already done backboneesnextevents dependencies goals include replacing jquery ajax support w fetch accessible via internal event bus making sure view jquery completely separated possible drop addition virtual dom solution maybe inferno undecided things fully modularized also gives opportunity play around ramda powered model collection components see enough improvement underscore point easy create custom builds via jspm systemjs bundler build tools requested though likely publish npm things solidified efforts attempting stay compatible backbone may diverge little glad interface backbone collaborators see may appropriate mainline backbone effort", "d": "10/2016"}, {"body": "including basic documentationexample use backbone browserify webpack seems people moving especially webpack documentation use backbone lacking", "d": "10/2016"}, {"body": "bboydflo using backbone browserify exactly like using package browserify would nt know document specifically backbone", "d": "10/2016"}, {"body": "jaapz process switching app using browserify using webpack also use lodash utility library throughout project wanted replace underscore dependency lodash coreminjs think people using webpack days thought paragraphs would help", "d": "10/2016"}, {"body": "nt officially support lodash zepto plenty google results describing make work backbone see example", "d": "10/2016"}, {"body": "bboydflo use webpack going use modules something like rollupjs", "d": "10/2016"}, {"body": "halfnibble switching browserify lot people talking webpack would easier figure heard rollup", "d": "10/2016"}, {"body": "bboydflo makes sense wonder someday everyone stop using custom module bundlers altogether one thing certain backbonejs remain", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "nt pushstate require backend support know return page every request pushstate associated page page transitions happen client side requiring backend requests moment user hits refresh url backend wo nt know unless specifically configured handle would make sense use pushstate hard view switches hash intraview state words like non single page websites work reason fallback mode pushstate using could nt encode fake pushstate hash meaning would nt conflixts would work browsers", "d": "10/2016"}, {"title": "test helpers waiting jquery upgrade", "body": "upgrading jquery cause mysterious intermittent test failures blocks sometimes fire logic done executing happens using jquery promises either directly thirdparty jquery ui components specifically change jquery another behavior change required promisesa compliance deferred callbacks always called asynchronously previously callback added deferred already resolved rejected callback would run immediately synchronously means even app uses jquery promises synchronous manner ie code runs asynchronously must tested asynchronously testing asynchronously easy ember wait helpers wait jquery promises route transitions ajax requests", "num": "14566", "d": "10/2016"}, {"title": "documentation guides models finding records seems inconsistent", "body": "guides section models says note ember default json api adapter provide functionality needed support queryrecord directly relies rest request definitions return result data form array seem consistent either json api spec api docs dsjsonapiadapter would seem allow single object returned top level response response data attribute new ember apologies missing something obvious", "num": "14565", "d": "10/2016"}, {"title": "helper resolved instead property", "body": "use property name equal helper name helper wins gets rendered happens even property name camelcased helper name dasherized surprise reproduction reproduction based ember switch app ember works expected property wins could nt find related issue issue tracker pull request looks related", "num": "14561", "d": "10/2016"}, {"title": "using parent controller queryparam causes assertion ember", "body": "embertry tests alerted us possible regression investigation discovered route declares matches parent controller parent controller queryparams cause assertion thrown using assertion occurs occur twiddle scenario invite key user redeeming invite multistep multiroute process similar saas apps namespaced controller houses application state steps process including queryparam route classes declare templates interface controller directly problem two handlers using controller calls router function newly added check throws exception handlers using queryparams exception also bit nonobvious assertion failed allowed one controller property map query param key map fix mapping one controller properties different query param key via config option eg key otherkey use use invite service house state phase invite process answer two parts old code nt touched long long time stuckouttonguewinkingeye clean way service access queryparams router yea know another one crazy queryparam issues come guys want \u30c4 happy probably find work around always reporting issues see", "num": "14560", "d": "10/2016"}, {"title": "typeerror invalid value used weak map key get canary", "body": "hey trying ember beta canary versions travisweb getting weakmap error run chrome get stacktrace similar errors happen safari firefox chrome reproduced repository running locally ember version enable pausing exceptions see property key working permanent beta canary production environment deployments ember failing differently error presence makes wonder somehow related though stack trace pretty different production canary stacktrace familiar code gotten anywhere trying debug let know additional information provide", "num": "14557", "d": "10/2016"}, {"title": "create feature flag conditional removal", "body": "currently order improve error messages like pay double cost order leverage future state able use feature flag allows us strip things without needing call twice leave code run context would look something like wish add feature flag like related though tremendous way accidentally troll cc krisselden rwjblue", "num": "14555", "d": "10/2016"}, {"title": "ensure uses", "body": "likely result", "num": "14551", "d": "10/2016"}, {"title": "doc embercomponent layout documented public", "body": "inspired currently default addon component blueprint sets component template via property evidence api docs public mention use appropriate section guides leading confusion whether ok use add deprecated emberview concept name understandable people new framework tripping", "num": "14548", "d": "10/2016"}, {"title": "doc modelfor documentation inaccurate", "body": "current documentation states returns resolved model parent ancestor route route hierarchy correct description returns resolved model current route parent ancestor route route hierarchy example getting current route model used route action method", "num": "14544", "d": "10/2016"}, {"title": "computed property updating component", "body": "defined computed property component gets value controller whenever changing value controller computed property component change happen controller js setting action controller hbs component hbs", "num": "14542", "d": "10/2016"}, {"title": "bug nested components ember", "body": "report bug searched apparently report similar issue writing report bug found ember create child component ember recognize working perfectly ember components parentcomponent childcomponent parentcomponentchildcomponent undefined example", "num": "14541", "d": "10/2016"}, {"title": "regression onward textarea unusable", "body": "take ember app type words hello click somewhere middle try add new word first key stroke moves end textarea makes control unusable users reproduction click run js takes ie try textarea appear chrome appears ember causing particular also appears big regression us roll production back possibly related glimmer", "num": "14539", "d": "10/2016"}, {"title": "adopt hooks", "body": "order right thing embersource enforce publish npm move script currently correct location goal would exactly right thing box additional commands nt trigger build cc locks", "num": "14536", "d": "10/2016"}, {"title": "correctly observe nested array changes", "body": "sure bug possible ember moment trying unsuccessfully get work use case want observer changes child array array items essence know exact computed property nt possible moment ember trying multiple alternative variations find solution data want see happen even nt ordered least show new item added unsuccessful attempts tried correctly observe changes attempts general idea try observe right properties get selections update end items added selection line nt change work around templates components able take lines array iterate pass single line component observe selections line situation need aggregate selections multiple lines get total value make properties volatile course works dealing many values would like cached nt changed known limitation bug", "num": "14534", "d": "10/2016"}, {"title": "improve error message assertion failed helper named somethingsomething could found", "body": "lets say add ember template error receive helper user could trying reference component common case user typo referencing component couple new guys stumbled error couldshould improved assertion failed component helper named somethingsomething could found", "num": "14532", "d": "10/2016"}, {"title": "backfill tests master", "body": "reminder also add test ensure existing one exists ensuring nt regress future", "num": "14530", "d": "10/2016"}, {"title": "ember unregistering views correctly", "body": "introduced root cause really original code appeared covered tests reasonable refactoring broke without test failure issue sure nt forget test master", "num": "14526", "d": "10/2016"}, {"title": "doc additional pattern action mut", "body": "moved looking guides amp published api docs handy pattern seem covered setting value property literal value variant accessing particular property event option part action helper way works conjunction may make worth mentioning explicitly use case clarity examples", "num": "14525", "d": "10/2016"}, {"title": "clarify escapecss documentation", "body": "upon reading documentation binding style deprecations think may want clarify nt implemented ember one may get impression implemented ember given inclusion code snippet source", "num": "14518", "d": "10/2016"}, {"title": "event ember router fired incorrectly ember", "body": "ember enabled firing component lifecycle hooks fired different order ember simple app consolelog component lifecycle hooks adds instance initializer subscribes router event ordering events different ember ordering events willtransition router fired didtransition router fired init component fired didinsertelement component fired didrender component fired ember ordering events willtransition router fired init component fired didinsertelement component fired didrender component fired didtransition router fired repro app toggle ember version app see difference ordering events cc stefanpenner chadhietala krisselden", "num": "14516", "d": "10/2016"}, {"title": "hasmany relationship foreign key children table", "body": "trouble hasmany relationship ember lets say want retrieve comments attached post easily postgres schema look like posts comments want get rid comments posts table like posts comments far nt found anything help even nt seem hard nt understand need array id parent table", "num": "14515", "d": "10/2016"}, {"title": "warning usage needs show details", "body": "following warning nt really tell code problem lies makes hard debug especially since searching entire code base ca nt find single place using one level deep error message clarified information property component offending one thanks", "num": "14514", "d": "10/2016"}, {"title": "elper force update", "body": "", "num": "14513", "d": "10/2016"}, {"title": "typeerror invalid value used weak map key destroy", "body": "reported following error running stack trace without source maps reported production build source maps nt trust stack trace much according sentryio browser hit chrome mobile android backspace reported similar issue devember feel free paste call stack well", "num": "14512", "d": "10/2016"}, {"title": "request deprecate usage emberon component lifecycle events", "body": "request deprecate favor reasoning order happens unknown code might result bug refactoring developer new code base noticing event observed already subtle bugs easily introduced also easier read understand behavior component single place event dependent code executed tracking different pieces code executed different moments lifecycle cumbersome easily avoided using overrides one argument might come overrides people forgets call super introduce bugs easier know always call inside hook determinism whereas keeping track might cohabiting object straightforward reading code keep mental map pieces might executed hook cognitive load high", "num": "14511", "d": "10/2016"}, {"title": "possible documentation error action helper", "body": "api documentation helper source contains following example heading invoking action nested use usage comment seems incorrect understanding correct usage would simply someone confirm", "num": "14510", "d": "10/2016"}, {"title": "linkcomponent yielded contextual component", "body": "first look stackoverflow creating issue matter fact could find anything pretty sure one tried handlebars componentsacomponenttemplatehbs yield hash contextuallink component linkto class acomponentcontextuallink end somewhere else acomponent component componentcontextuallink someroute unfortunately work componentcontextuallink acomponent end used like linkcomponent complain needs least one parameter one bogus parameter supplied template application wo nt replaced time invoked missing something", "num": "14508", "d": "10/2016"}, {"title": "possible documentation error component helper", "body": "api documentation helper includes section nested usage source example suspect incorrect component template defined follows shown used like understanding correct use keyword block error since component name component usage also appears odds shown beta release note guides happy provide fix would like someone confirm interpretation since learning contextual components first time", "num": "14503", "d": "10/2016"}, {"title": "android chrome swiftkey breaks", "body": "using even simplest reproduction app typing swiftkey chrome seen broken type word via swiping attempt type another expected two words text area actual recently typed word data works fine built keyboard swiping swiftkey firefox works fine dandy", "num": "14502", "d": "10/2016"}, {"title": "classnamebindings reset classes might added component", "body": "hi issue starting ember example issues example see two classes set initially click first button new class added component issues pressing second button toggles class name binding class added using jquery removed means reset component classes desired behavior thanks", "num": "14497", "d": "10/2016"}, {"title": "jsonapi assertionerror jsonserializer", "body": "switched serializer adding application serializer file appserializersapplicationjs import ds emberdata export default dsjsonserializerextend using restadapter customized appadaptersapplicationjs server fails validation errors get assertion error errors json api format", "num": "14496", "d": "10/2016"}, {"title": "update url error state", "body": "facing similar issue use case similar need url updated whenever transition goes error state whenever end error page user tend two things press back button go previous working page press refresh button retry failed page url updated ca nt done suggestions handle", "num": "14495", "d": "10/2016"}, {"title": "unknownproperty called original key", "body": "original function expected get passed actual key gets passed", "num": "14491", "d": "10/2016"}, {"title": "get helper working passing integer instead string access arrays", "body": "using get helper access array helper silently fails unless parameter string workaround inside helper reproduced", "num": "14490", "d": "10/2016"}, {"title": "glimmer method tostring helper hash exists", "body": "assume following helper exists js apphelpermyhelperjs export function myhelper params hash consolelog calling tostring params paramstostring consolelog calling tostring hash hashtostring return params calling get undefined used work reproduction", "num": "14489", "d": "10/2016"}, {"title": "emberjs server minute startup time vagrant ubuntu", "body": "see", "num": "14483", "d": "10/2016"}, {"title": "yield hash used binding", "body": "according pr yield hash contextual component able use binding today still found problem twiddle reproduce also include workaround twiddle could solve problem right still could pain point future usage", "num": "14481", "d": "10/2016"}, {"title": "shipping globals free build ember browser", "body": "let explore would take us able ship build ember nt write amp globals would beneficial users trying use ember modularly within another web application global pollution considered bad practice cases existing application may embedding widgets use different versions ember also using global provide configuration flags apps nice add another mechanism configure ember related issue embercli", "num": "14478", "d": "10/2016"}, {"title": "calling extend es emberobject subclass call", "body": "documented calling es subclass emberobject yields factory whose objects nt call constructed easier explain js js class subemberobject extends emberobject constructor never called let myobject subemberobjectextend myobjectcreate note following work js class subemberobject extends emberobject constructor called class myobject extends subemberobject myobjectcreate", "num": "14473", "d": "10/2016"}, {"title": "defining queryparamsdidchange action breaks refreshmodel true query params", "body": "investigating similar issue ran across scenario twiddle identical routes route action defined bubbling enabled route simply nt define action expect functionality two routes identical instead see updating query params route never calls model hooks whereas route", "num": "14470", "d": "10/2016"}, {"title": "support option closure actions", "body": "seems using closure option respected way traditional helper main need called actionfunction context object caller common use case trying pass action ember component ex however time able use traditional helper works ex working example ember twiddle reference called function would look something like chatting rwjblue company slack community apparently handled action ast file able eliminate ugly code action modifier still trying wrap head around internals ast stuff least direction start", "num": "14469", "d": "10/2016"}, {"title": "updating property supplied hash helper triggers observers properties", "body": "helper trigger happy regarding changes properties causing change fire observers properties even static ones eg changing template triggers observers property full twiddle note solved something like stable hash helper though solutions might better", "num": "14468", "d": "10/2016"}, {"title": "bug willrender able", "body": "lt hooks ran following order also hooks called rendering done eg applying thus set would yield error repro", "num": "14458", "d": "10/2016"}, {"title": "ember goes infinite loop return promiseobject helper", "body": "reproduction reproduce simply goto applicationhbs add final warning cause browser computer cry see console printed imagine need better trying emberresolvepromisehelper trying achieve nt know whether ember get loop like twiddle abstract example trying achieve part workflow real app adds child store nt save child created already nt show particular button cant use myparentchild directly async belongsto returns truthy even though child thing say approach works fine computed component", "num": "14456", "d": "10/2016"}, {"title": "cleanup combine component lifecycle hook tests", "body": "share existing lifecycle tests backport extra assertions attrs state", "num": "14451", "d": "10/2016"}, {"title": "bug components via appendto still affected", "body": "addressed issue also mode working x didinitattr didretrieveattrs destroy hooks diddestroyelement first willdestroyelement topcomponent managed components enhancing existing lifecycle checks ensure covered explore missing tests may missing proper coverage types components lifecycle tests fix removing duplicate hooks", "num": "14447", "d": "10/2016"}, {"title": "bug referencing positionalparams attrs work", "body": "repro likely similar", "num": "14445", "d": "10/2016"}, {"title": "didreceiveattrs firing incorrectly", "body": "difference behaviour release alpha see twiddle reproduce click toggle multiple times notice didreceiveattrs nt fire switch alpha click toggle multiple times notice didreceiveattrs fires", "num": "14444", "d": "10/2016"}, {"title": "longer called", "body": "repro edit updated title accurate", "num": "14439", "d": "10/2016"}, {"title": "bug updating one query param causes qp reset default value", "body": "found another bug query params updating one query param causes qp reset default value bug happens specific circumstances given controller let call must query param say must query param e g either controller child controller route model hook must return pending promise must template adjacent route route must nested route route must dynamic segment resulting route structure implicit route update nondefault value updating cause reset default value crazy removing listed prerequisites prevents bug manifesting demo able narrow issue line prerequisites met update pausing execution line qp running would return subsequently cause reset default value remove least one prerequisite returns current value expected please help loss finish work last week stuck sob never even heard idea fails", "num": "14438", "d": "10/2016"}, {"title": "max callstack exceeded calling destroy component", "body": "hi ember get max callstack error calling inside component works previous ember versions twiddle thanks", "num": "14437", "d": "10/2016"}, {"title": "binding disabled attribute generates invalid markup", "body": "using within embercomponent object allow binding attributes component attributes form bindings work correctly however disabled attribute function way disabled elements generated rather tl dr disabled attribute value yet ember generates", "num": "14436", "d": "10/2016"}, {"title": "embersource related cleanup", "body": "x fix script ember x fix including waaaaaayyyyy much targz right x fix embersource name change", "num": "14434", "d": "10/2016"}, {"title": "quest document solutions titlebar problem", "body": "rfc included discussion around properly configuring text editors easy developers distinguish filenames within typical ember app even though names necessarily repetition canonical example files like readily distinguishable despite sharing common ending quest issue exists people chime anything required make popular editors nicely editors x atom x brackets x chocolat chrome dev tools x emacs x jetbrains x sublime text vim x visual studio code please suggest others long actually use work ember apps solutions atom locks configuration required brackets locks configuration required emacs outofthebox behavior since emacs two example files appear configuration required see options customizing behavior see visual studio code taken tomdale comment rfc configuration required jetbrains family phpstorm webstorm intellij rubymine jetbrains family ides make sure uncheck small labels editor tabs setting add parent directory tab label soon ambiguity tested phpstorm probably apply whole familiy ides webstorm intellij rubymine etc sublime text locks configuration required chocolat locks configuration required", "num": "14430", "d": "10/2016"}, {"title": "using send action name breaks things", "body": "twiddle imaginary component blogging system send delete blog posts expected clicking delete button actual clicking delete button template replace component result actions component call closure action super confusing ideally would work send natural name use action alternatively ember could warn user", "num": "14424", "d": "10/2016"}, {"title": "beta bug longer works", "body": "repro one use able component", "num": "14423", "d": "10/2016"}, {"title": "bug beta longer works", "body": "reproduction used work lt", "num": "14418", "d": "10/2016"}, {"title": "positional params error", "body": "template code nonsense bug app opening issue causes nasty error ember internals twiddle compare ember vs beta ember earlier positional params ignored error happens", "num": "14416", "d": "10/2016"}, {"title": "block params named unusable beta", "body": "starting per rwjblue request understand would nt necessarily work naming block param really usable within block scope work lt refactored away name reporting couple issues noticed nothing output using text error produced used attribute uncaught error assertion failed create component undefined using component helper hbs abc components abc abc component components component component component attribute components component index index reproduced issue embertwiddle", "num": "14413", "d": "10/2016"}, {"title": "hidden bound default", "body": "attribute valid elements would nice able use components need dom visible easiest way add default set see current behavior twiddle", "num": "14412", "d": "10/2016"}, {"title": "didinsertelement running twice", "body": "modifying property inside hook get deprecation expected however ember versions hook runs twice reproduction able see two logs ember versions cc rwjblue", "num": "14409", "d": "10/2016"}, {"title": "positional parameters components two way binding", "body": "positional parameters components behave differently oneway binding twoway binding looked around could nt find documentation suggesting change intentional click change twiddle reproduce compare beta release", "num": "14408", "d": "10/2016"}, {"title": "deprecate hasarrayobservershasenumerableobservers", "body": "go along", "num": "14406", "d": "10/2016"}, {"title": "exploreconsider removaldeprecation enumerable events hasarrayobservershasenumerableobservers", "body": "et al", "num": "14405", "d": "10/2016"}, {"title": "computedsort nt update dependant array set", "body": "created ember twiddle shows issue would expect calling would cause computed property update", "num": "14404", "d": "10/2016"}, {"title": "helper rerenders dom elements without preserving style", "body": "hi updated ember wanted ask guidance issue maybe bug following piece code array using helper call custom helper item array inside action push new item array animate initially div referenced opacity animation moves element fades without weird glitches action triggered element array must remain visible opacity works fine ember nt push another item itemitems array go back opacity loose styling basically elements array completely rerender lose previously set styling intended work like ember bug thank helper simply outputs html div certain background image depending item", "num": "14401", "d": "10/2016"}, {"title": "willinsertelement fire tagless components", "body": "replication true make less semantic sense tagless components function standings", "num": "14398", "d": "10/2016"}, {"body": "one solution app developer wrap jquery promise interactions described ember wait promises complete puts heavy burden app developer nt help jquery promises used internally exposed thirdparty code another solution make ember aware jquery promises done using hacks add number unresolved promises let pending embertestregisterwaiter gt pending function shim obj name fn let original obj name obj name function args return fnapply original args function trackedthen oldthen onfulfilled onrejected onprogress pending return oldthencall function success args pending onfulfilled onfulfilled args function failure args pending onrejected onrejected args onprogress shim windowjquery deferred function olddeferred args let deferred olddeferredcall args shim deferred promise function oldpromise args let promise oldpromisecall args shim promise trackedthen return promise return deferred", "d": "10/2016"}, {"body": "bit different twiddle talking block params properties template context believe helpers winning always true actually see demo twiddle dasherized name intentional design decision fact looks helper named separate issue suspect embercli resolver function", "d": "10/2016"}, {"body": "thank clarifications explanatory example rwjblue embercli resolver normalize function line makes little bit unsure property try resolved via resolver plain javascript value parent scope also intentional decision understand question current issue scope anyway would like understand need fill another issue one smirkcat", "d": "10/2016"}, {"body": "looks like finally found something related dasherizing camelcased props", "d": "10/2016"}, {"body": "nt really dug demo yet related large scale router query param cleanup effort likely trentmwillis better understanding exactly going advise bug new feature", "d": "10/2016"}, {"body": "dig later assertion nt really new moved different part qp flow guess previously nt checking specific qp due missing hash serialization step try dig later one clarifying question use controllername create multiple instances controller still singleton used multiple routes think inform whether actual error", "d": "10/2016"}, {"body": "trentmwillis definitely later afaik controllers singletons services makes reuse controller via valuable multiple routes setting data single place reference api docs emberroute controllername", "d": "10/2016"}, {"body": "okay latter considered bug easy fix though improve check see qps nt error error qps use come different propertiescontrollers", "d": "10/2016"}, {"body": "issue set document global used many libs detect real dom expected thing pass document api", "d": "10/2016"}, {"body": "issue set document global well complicated something time broken requiring document set need addressed first document removed", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "krisselden address", "d": "10/2016"}, {"body": "gauthierm would mind opening pr fix file edit", "d": "10/2016"}, {"body": "pixelhandler take one", "d": "10/2016"}, {"body": "invoke cp somewhere either component template", "d": "10/2016"}, {"body": "oh used template seems work however work always nested object", "d": "10/2016"}, {"body": "ok case cp recomputed change cp called", "d": "10/2016"}, {"body": "updating using set sure nt working", "d": "10/2016"}, {"body": "hello dhawalbhanushali closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "10/2016"}, {"body": "closing duplicate please let know referring different issue using render twiddle thank", "d": "10/2016"}, {"body": "ember ship glimmer adding needs bug verification check someone get windows machine replicate thank", "d": "10/2016"}, {"body": "thanks serabe also tried appears resolve issue perhaps prep glimmer caused issue fixes guess someone else verifys question whether worth fixed lts would good know plan versioning", "d": "10/2016"}, {"body": "lts definitely important figure fix needs digging figure changed break", "d": "10/2016"}, {"body": "limitation one intended see references solution closing since issue providing example refer later thank", "d": "10/2016"}, {"body": "serabe thanks looking giving solution done work arounds like past hoping solution provided better separation concerns ideally like able lines computed property filtered based several properties type isdeleted etc able take computed property result filter aggregate child selections current work around ember start add several properties line object aggregated used one specific object concerns object consuming properties instead shifted line object start multiple aggregate properties lines becomes somewhat dumping ground anyway thanks", "d": "10/2016"}, {"body": "sounds good would mind submitting pr review", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "fixed master tested unfortunately nt properly mark commit pulled branches", "d": "10/2016"}, {"body": "working pr", "d": "10/2016"}, {"body": "fix fix", "d": "10/2016"}, {"body": "branches updated via released next days closing", "d": "10/2016"}, {"body": "patterns combination interoperable features documented api least part fear creating implicit dependency documentation maybe stating option available works even passed action", "d": "10/2016"}, {"body": "mikenorth please check pr comment thank", "d": "10/2016"}, {"body": "agree would mind submitting pr emberjswebsite", "d": "10/2016"}, {"body": "added quick note", "d": "10/2016"}, {"body": "pr emberjswebsite merged closing thank guys", "d": "10/2016"}, {"body": "used call scheduled queue call ultimately schedule fix likely schedule working pr", "d": "10/2016"}, {"body": "first seemed like appendoutletview return value used appear suggests may working correctly either", "d": "10/2016"}, {"body": "proposed fix", "d": "10/2016"}, {"body": "thanks stefanpenner", "d": "10/2016"}, {"body": "kratiahuja confirmcheck issue present subsequent transitions initial transition fix proposed likely correct initial render since top hierarchy would like see also need figure fix similar issue rerenders", "d": "10/2016"}, {"body": "fix subsequent transitions look like initial render transition transition", "d": "10/2016"}, {"body": "thank confirming stefanpenner", "d": "10/2016"}, {"body": "rwjblue also mentioned ordering issue appears initial render subsequent rerenders work correctly", "d": "10/2016"}, {"body": "hello eraleis closing since emberjs bug please go help channel slack registered use slackin app case data send need table query db values would like thank", "d": "10/2016"}, {"body": "likely computed property based another computed property based first computed property", "d": "10/2016"}, {"body": "likely computed property based another computed property based first computed property btecu nt make sense message clearly states please create intermediary computed property implies correct way handle situations like", "d": "10/2016"}, {"body": "adambuczynski could definitely improved thanks pointing", "d": "10/2016"}, {"body": "mmun worries thanks looking", "d": "10/2016"}, {"body": "mmun would solve well find general solution close well", "d": "10/2016"}, {"body": "please provide details bug would great reproduction ember twiddle thank", "d": "10/2016"}, {"body": "falkf actionable close please reopen description emberjs issue", "d": "10/2016"}, {"body": "dont remember wtf \u30c4", "d": "10/2016"}, {"body": "empty app", "d": "10/2016"}, {"body": "yes similar error chrome canary things render presumably let know provide debugging help somehow sure look since see application code stacktrace", "d": "10/2016"}, {"body": "serabe nope one production apps", "d": "10/2016"}, {"body": "try provide reproduction try take look travisweb later week otherwise", "d": "10/2016"}, {"body": "unfortunately nt able reproduce yet", "d": "10/2016"}, {"body": "get error every load local server get happen deployed production build sorry get mysterious errors see know related", "d": "10/2016"}, {"body": "seems related need dig bit", "d": "10/2016"}, {"body": "added conditional breakpoint look unfamiliar much insight screenshot one levels stacktrace deeper entry would helpful let know", "d": "10/2016"}, {"body": "common error message make issue need stack traces case like serabe added separate issues rwjblue node get non object key fails seem match stack gave fixed issue serabe confirm error running old", "d": "10/2016"}, {"body": "krisselden nt able trigger current chrome versions installed macbook mobile devices user able trigger reportedly using chrome stated", "d": "10/2016"}, {"body": "understand correctly krisselden suggesting open another issue detail give apart pasting stacktraces including browser versions", "d": "10/2016"}, {"body": "backspace yes issue reported fixed please nt open issues typeerror say typeerror operation error old destroy fixed error ref get bailing different", "d": "10/2016"}, {"body": "open separate issue sorry lack understand see difficult someone familiar internals know portion stacktrace important extracted saying important part issue important one without discussion see could know", "d": "10/2016"}, {"body": "givanse think request something made rfc issue since bug issue tracker emberjs bugs see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo idea would nice create issue emberjsrfcs repo", "d": "10/2016"}, {"body": "happy keep exploring suggestion emberon often makes code harder reason matches perfectly experiences pixelhandler absolutely right take rfcs repo since nt actual bug feature request givanse would mind opening issue", "d": "10/2016"}, {"body": "opened new issue rfcs repo thanks", "d": "10/2016"}, {"body": "confirm would work specified doc considered property path read first parameter action nesting action makes work since curries first argument outer action would consider second argument first argument checked ember twiddle nested actions without nested actions take look difference action implementation thank report", "d": "10/2016"}, {"body": "wow interesting obviously nt understand paragraph following example thanks", "d": "10/2016"}, {"body": "phcoliveira see missing closing parenthesis acomponent see twiddle seems work", "d": "10/2016"}, {"body": "apologize describing problem exactly seeing trying something different possible used contextual component handlebars acomponent component componentcontextuallink paramslinkparams work componentcontextuallink acomponent linkto paramslinkparams works linkto", "d": "10/2016"}, {"body": "phcoliveira make embertwiddle example reproduces issue", "d": "10/2016"}, {"body": "investigating", "d": "10/2016"}, {"body": "reproduction happens since behaviour fixed glimmer reproduction used work broke reproduction would consider regression try land fix morning though nt get right wo nt able fix ember fest", "d": "10/2016"}, {"body": "thanks locks noticing reproduction transition renders render transitions reproduction", "d": "10/2016"}, {"body": "summary bug introduced partially fixing another issue rest positional params component would render would received empty stopped rendering given assertion added check receives least one parameter submitted pr fixing checking lts since seems regression hope getting thank report", "d": "10/2016"}, {"body": "much happened slept really described basics created twiddle bad using ember", "d": "10/2016"}, {"body": "closing since pr merged thank", "d": "10/2016"}, {"body": "markmt yeah correct component need helper subject contextual components links enjoy", "d": "10/2016"}, {"body": "ha beat", "d": "10/2016"}, {"body": "thanks confirmation pixelhandler", "d": "10/2016"}, {"body": "markmt oh sorry figured easy pr", "d": "10/2016"}, {"body": "problem", "d": "10/2016"}, {"body": "confirmed issue related swiftkey android device chrome although manifests differently open reproduction linked swiftkey word appear switftkey second word space added also confirmed occur input textarea created browser normal page parser presume related something creating elements", "d": "10/2016"}, {"body": "yes use implement behaviour see twiddle", "d": "10/2016"}, {"body": "please move emberjsdata add error payload sending thank", "d": "10/2016"}, {"body": "wrong button close move ember data repo thank", "d": "10/2016"}, {"body": "moved closing issue", "d": "10/2016"}, {"body": "ivanvanderbyl perhaps reach help channel see anyone suggestion use issue tracker ember bugs also helps provide example using simple making new app embercli sharing repo see comment able use error substates provide user back link uses history also url nt changed nt refresh work case help general links subject using error substates", "d": "10/2016"}, {"body": "pixelhandler created ember twiddle please see", "d": "10/2016"}, {"body": "nt going submit pr someone confirmed wanted behaviour consolelog later something working went ahead created pr anyway", "d": "10/2016"}, {"body": "designed", "d": "10/2016"}, {"body": "nt seem issue according documentation dynamically look property object second argument get string value although bound", "d": "10/2016"}, {"body": "glennvd link btecu indicate string expected close issue ember bug", "d": "10/2016"}, {"body": "think related code happy get pr someone give assistance fix", "d": "10/2016"}, {"body": "sure something fix noted hash object created null prototype allows check see keys provided without use hasownproperty checks throughout helpers", "d": "10/2016"}, {"body": "completely agree bug keep open improve documentation though", "d": "10/2016"}, {"body": "fixed exact thing embercliaccounting", "d": "10/2016"}, {"body": "hello since ember cli related request please move embercliembercli thank", "d": "10/2016"}, {"body": "forgot please reference issue close thank", "d": "10/2016"}, {"body": "thanks serabe issue moved embercliembercli", "d": "10/2016"}, {"body": "sorry explain issue correctly pr problem double bound nothing helper value passed helper never double bound helper recomputed argument changed function helper class helper control value returned helper linked way input parameters check twiddle please notice given using inner part shown unless type something ping slack channel need help subject closing since bug", "d": "10/2016"}, {"body": "serabe thank explanation understand better helper works", "d": "10/2016"}, {"body": "moved", "d": "10/2016"}, {"body": "thank", "d": "10/2016"}, {"body": "mitchlloyd curious well typically class used find using confusing see expect use know ember used since emberobject makes easy otherwise see tests include use main issue using method expecting behave like bug somewhere", "d": "10/2016"}, {"body": "idea future world use classes work us interchange ie consumer class nt care class result emberobjectextend", "d": "10/2016"}, {"body": "rwjblue yeah suspected thanks clarity", "d": "10/2016"}, {"body": "jesseditson curious action twiddle also name private method route name avoided action route", "d": "10/2016"}, {"body": "looks like perhaps docs miscategorized method sure normal protocol around private events seen used elsewhere workaround double early fires original issue troubleshooting understand private method may expected behavior docs think perhaps documentation issue exploring calling causes bubble expect returning resolves case guessing get let know help clarifying docs bad poking around private apis", "d": "10/2016"}, {"body": "jesseditson typically avoid private properties methods events etc", "d": "10/2016"}, {"body": "fair enough might appropriate drop doc mention bubbling bit misleading try find moment pr", "d": "10/2016"}, {"body": "looking back slack chat robert provided even direction great needs rewritten search arguments use present completely remove cc sukima since involved particular convo", "d": "10/2016"}, {"body": "makes sense understand suggestion basically would change ast plugin check hash arg nt one create one", "d": "10/2016"}, {"body": "cc sukima", "d": "10/2016"}, {"body": "option specifies object look context bind resulting function specifies template facing api object example want target service actions added little wary making general purpose helper zackthehuman use case could nt handled hash currently agree improve ergonomics hash think everyone eager adopt decorators usecase devs nt like ergonomics though worried forking convention templatefacing actions", "d": "10/2016"}, {"body": "mixonic thought issue inconsistency closure actions modifier actions used differs case nt work like bind believe would bad consequences since pass path references action function argument without specifying target function called wrong context seems badconfusing", "d": "10/2016"}, {"body": "agree zackthehuman thought issue fix inconsistency actions hash string usage something nt know worked first troubleshooting issuecase could refactor make usage work think still fixed", "d": "10/2016"}, {"body": "without specifying target function called wrong context seems badconfusing written execute like called nt wrong right javascript general nt expected devs passing raw functions helper expected passing either strings already created actions yielded elsewhere bound function classic action helper seems like perhaps implementation quirk zackthehuman sounds like usecases binding behavior though provide example use application today would like able use", "d": "10/2016"}, {"body": "mixonic say ember data model helper functions emberdata const model attr ds const get ember export default modelextend foo attr defaultvalue return addnewfoo get foo pushobject bar bar movefooup index let foo get foo let orig fooobjectat index fooremoveat index fooinsertat index orig movefoodown index let foo get foo let orig fooobjectat index fooremoveat index fooinsertat index orig view might", "d": "10/2016"}, {"body": "mixonic call means implicitly bound calling free function twiddle illustrate mean edit nt horse race intended behavior happy close pr", "d": "10/2016"}, {"body": "mixonic related adding new functionality seem implying related making support things one small example call call additionally take look following docs suggest general concept support perhaps position never supported ship sailed point super bizarre place document forms together actually support things said pr also merits removing maybe implicit explicit target behavior code modifier helper large win", "d": "10/2016"}, {"body": "right totally understand inconsistency elementspace action closure actions regards nt inconsistency example closure actions bubble might seem unintentional agree silent failing case today developer might migrate elementspace action closure action copypasta expecting consistent behavior get less ideal improved however strongly believe usecase outlined addressing methods model antipattern ember app development light behavior classic actions considered something bug would like copy behavior forward closure actions mediumterm elementspace actions deprecated ember long term removed however closure action api remain ember expect long time let bring us want documentation suggesting context three documentation snippets rwjblue linked single one implies would used context function evaluation example code however uses string action name function documentation aware describes context argument functions passed fact documentation explicit intro look instead current context hash useful targeting service actions look hash call function context avoiding antipattern many experienced devs grow annoyed design ember totally agree ergonomics less ideal however improved time design serves purpose common footgun intended help conflict templatefacing actions lifecycle hooks example defined nt way know user unwittingly used method name conflicts hook intended subclass behavior goal code override lifecycle hook add action permitted create context method called user fallen intro trap prevent falling stomping also needed type twice given could service something complex name invites typos reduces readability encourage compare actions system works today repetition conflict lifecycle hook model actions work well framework needs encourage times even though may cases passing context may work safely need something robust known failure cases want apps use expose api templates ergonomics suck agree seems dated expect would like es classes supported use decorators example decorator would allow us assert user nt fallen prey common footgun example check method named superclass method superclass also actions override actions case indeed defined chain assert action stomping lifecycle hook notify user appropriately system place also actions create closures context context packaged action would needed specify context removes duplication addresses method model think would viable point perhaps helper nt needed think improve improve eager encourage developers something use current designed today think nt suggest nothing done definitely subtle inconsistency two apis improve failure mode closure actions deal raw functions passed think assert also passed suggesting user instead use string actions closure actions implicit context scanning code ca nt point exactly believe since others raised change basically function passed action target passed run always method closure still evaluate expected implicit cases see change behavior", "d": "10/2016"}, {"body": "agree fix implicit binding use instead aligns action semantics normal js function semantics", "d": "10/2016"}, {"body": "kanongil documentation available says updating property supplied hash helper trigger observers properties comment seems indicate perhaps defensive code may needed avoid unwanted observer behaviors", "d": "10/2016"}, {"body": "pixelhandler meant bug rather notice regarding performance issue current helper implementation unintuitive seems solvable aware ember makes guarantees triggered observer updated value agree cautious approach far tell properly implemented always superior current implementation ie choice would probably always choose", "d": "10/2016"}, {"body": "interests helping folks triage issues want suggest closing behavior change always worked way think addressed rerender scenario made behavior expensive enough notice first place would still happy review pr optimizes hash helper stability long avoid forcing eager evaluation properties hash object nt impose undo cost amp complexity expectation long rest rerender amp invalidation correctly sophisticated hash helper net gain", "d": "10/2016"}, {"body": "thank hint closing thank thread pleasure read", "d": "10/2016"}, {"body": "chadhietala issue closed pr merged", "d": "10/2016"}, {"body": "believe duplicate nt looked super deeply confirm double check see think dupe", "d": "10/2016"}, {"body": "hard tell occurs ember whereas looks related look similar im happy add twiddle thread monitor reopen fix doesnt fix mine", "d": "10/2016"}, {"body": "investigating top level destroy hook issues", "d": "10/2016"}, {"body": "fixed cherrypicked beta", "d": "10/2016"}, {"body": "could wrong looks like related guess controller invalidated toggling property since controller invalidated rerenders children switch beta didreceiveattrs also fires multiple times", "d": "10/2016"}, {"body": "confirm scottmessinger seems like issue going close track single place likely since conversation atm", "d": "10/2016"}, {"body": "ok try find dupe cheers", "d": "10/2016"}, {"body": "previously invoked order means work done initial render remained inert emit change events also means time object construction completes invoked", "d": "10/2016"}, {"body": "twiddle repo look demonstrates issue based special setup circumstances likely wo nt able reproduce demo would help push forward", "d": "10/2016"}, {"body": "yes demo", "d": "10/2016"}, {"body": "crazy specific prerequisites legit resulting behavior totally wrong date range filter unusable ca nt select start end date sort table sort order qp dates reset table data gets redownloaded", "d": "10/2016"}, {"body": "lolmaus thank reproduction", "d": "10/2016"}, {"body": "lolmaus yeah crazy", "d": "10/2016"}, {"body": "hmm destroying component manually seems like somewhat odd thing twiddle something different app code", "d": "10/2016"}, {"body": "hi thanks answering destroying component manually safety measure component renders whole screen something like ui coach mark encounter problems animating various elements coach mark manually destroy component nt block ui app empty overlayed div main ui contents users interact app anymore could probably something like would set property false template component actually destroyed would good way handling however wanted let guys know problem nt previous ember versions actually discovered call inside listener one components", "d": "10/2016"}, {"body": "thanks opening issue going somewhat hard track without reproduction put together embertwiddlecom demonstrating issue described", "d": "10/2016"}, {"body": "suspect may passing string attribute binding actual boolean value really need demosnippet understand going", "d": "10/2016"}, {"body": "andhofmt see curious issue mentioning related terms behavior boolean html attribute", "d": "10/2016"}, {"body": "andhofmt follow issue please thank", "d": "10/2016"}, {"body": "locks closed", "d": "10/2016"}, {"body": "serabe get automatically closed pr merged keep eye", "d": "10/2016"}, {"body": "looks like chrome sources tab", "d": "10/2016"}, {"body": "ugh yes chrome dev tools added list", "d": "10/2016"}, {"body": "knowledge problem unsolvable chrome dev tools place lots folks spend quite bit time even though names necessarily repetition precise even though names designed way extensive repetition", "d": "10/2016"}, {"body": "jetbrains family ides make sure uncheck small labels editor tabs setting add parent directory tab label soon ambiguity tested phpstorm probably apply whole familiy ides webstorm intellij rubymine etc", "d": "10/2016"}, {"body": "whereas techniques solve basic problem remains case substantial title bar real estate wasted meaningless semantically vacuous component part title", "d": "10/2016"}, {"body": "atom noted configuration required using atom see behavior atom package installed", "d": "10/2016"}, {"body": "might consider adding intellij ide editor suite list webstorm pycharm rubymine etc know full stack engineers even work prefer use ides addressed simonihmig", "d": "10/2016"}, {"body": "work sublime text mac os x shows folder name sidebar tabs two files filename open", "d": "10/2016"}, {"body": "whereas techniques solve basic problem remains case substantial title bar real estate wasted meaningless semantically vacuous component part title rtm meaningless distinguishing component model route share common", "d": "10/2016"}, {"body": "workmanw one added atom tried clean environment see disambiguating behaviour reach topiceditors", "d": "10/2016"}, {"body": "pichfl thank report nt notice added screenshot glad see confirmation", "d": "10/2016"}, {"body": "one weird pain point atom disambiguates tabs name pane left actually file one inactive tab right different labels", "d": "10/2016"}, {"body": "rtm type meaningless distinguishing component model route share common name dgeb absolutely right working components often open time type name equally relevant", "d": "10/2016"}, {"body": "existing vim plugins modify way tabs displayed nt see could easily configured match examples editors also nt look deeply probably exist anyway straightforward modify tabline settings vim get something nice like others threw together plugin people use copy code make special snowflake tabs", "d": "10/2016"}, {"body": "note solved atom looks setiui one popular atom themes files open fullscreen monitor", "d": "10/2016"}, {"body": "sure would consider solved editor name conflict among files open think would nice able always show parent directory", "d": "10/2016"}, {"body": "sure would consider solved editor name conflict among files open think would nice able always show parent directory prior art address issue smarttabname customtitle tabfoldernameindex nt found setting always enable atom user", "d": "10/2016"}, {"body": "workmanw dfreeman willmanduffy et al using embertabs atom solves problems configuration required behavior screenshotted kicks multiple files name open truncates part care whereas embertabs leads component root also handy keyboard shortcut swap templatehbs amp componentjs within folder subfolder point chrome devtools pain point unfortunately big one", "d": "10/2016"}, {"body": "dwickern twiddle example show confused behavior defining action named also noticed component took look guide page actions components ca nt find mentioned historically primary way fire action component seems days community generally favor using closure actions callable example perhaps replace see fork twiddle method component prototype avoided name action see generally would good idea avoid using action name already defined existing method component case changes behavior component send one action sure documenting adding assert right thing", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "would consider bug previous behaviour keywords sure different term gt meant lowlevel helpers helpers took precedence properties name see twiddle guess change behaviour make standard think seen test regarding helper precedence find", "d": "10/2016"}, {"body": "yeah helpers keywords win properties nt win block params block params always win", "d": "10/2016"}, {"body": "rwjblue updated twiddle show behaviour consistent block params well helpers win twiddle using think consistent behaviour non making difference block param property otherwise refactoring block component would harder one would expect", "d": "10/2016"}, {"body": "seems like nt fix particular scenario make block params always win helpers glimmer side however since handled ember need another fixtest case", "d": "10/2016"}, {"body": "hmm think would nice addon todays components real solution conceptual still super nebulous angle bracket components top level tag component includes things passed invocation concern adding additional components likely used relatively small subset going negative performance impact", "d": "10/2016"}, {"body": "also think general feature request rfc issue", "d": "10/2016"}, {"body": "reason isvisible wo nt work causally brought using hidden attribute isvisible avoid using inline styles tue oct robert jackson notifications githubcom wrote also think general feature request rfc issue receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "real solution conceptual still super nebulous angle bracket components top level tag component includes things passed invocation seems far feature request rfc issue could nt find default set bindings nt sure missed nt sure whether accidental omission new feature happy open rfc reason isvisible wo nt work using older ember versions told avoid secondly semantically correct lastly write css animating toggle", "d": "10/2016"}, {"body": "seems far agreed addon command away smiley", "d": "10/2016"}, {"body": "closing open rfc list common attributes", "d": "10/2016"}, {"body": "confirm mean firing twice", "d": "10/2016"}, {"body": "rwjblue bug probably introduced edited make clear", "d": "10/2016"}, {"body": "hmm see two log messages twiddle beta release branches would indicate working properly confirm", "d": "10/2016"}, {"body": "right could almost swear seen two log messages beta openmouth anyway looks like beta fine release needed fix", "d": "10/2016"}, {"body": "miguelcobain yeah figure going wrong", "d": "10/2016"}, {"body": "scheduled log shown might related rerender warning shown twiddle", "d": "10/2016"}, {"body": "rereviewed curious using nested run loop serabe mentioned work around either use omit altogether depending needed initially", "d": "10/2016"}, {"body": "miguelcobain check rwjblue comment please thank", "d": "10/2016"}, {"body": "let close reopen come meaningful reproduction problem", "d": "10/2016"}, {"body": "afaik bug previous versions", "d": "10/2016"}, {"body": "confirm bug previously one way begin", "d": "10/2016"}, {"body": "thank closing issue thank", "d": "10/2016"}, {"body": "setting value determined force cp invalidate twiddle either use add items array slice array set new instance may gotcha pr updating documentation would definitely welcome nt bug going go ahead close misunderstood something please let know reopen", "d": "10/2016"}, {"body": "thanks robert problem seeing coming route transition setting dependant property nt get updated get chance try reproduce", "d": "10/2016"}, {"body": "demo would helpful would allow us see fixed newer versions quite old point fairly unlikely receive bug fixes even determined bug", "d": "10/2016"}, {"body": "hey thanks much slowly making way ember coming ember reproduction click button", "d": "10/2016"}, {"body": "thanks reporting folks running work around willrenderdidrender track initial firing vs subsequent obviously ideal", "d": "10/2016"}, {"body": "reason triggering hook within curly component manager called manager actual element created however called inside compatible need correct fire tagless components", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "serabe last twiddle demonstrates content locks pr see passing property complex object vs primitive object reference object protected using helper contents bound property changed simultaneously read oneway binding behaves similar keyword think documentation issue would resovled", "d": "10/2016"}, {"body": "pixelhandler think actual problem array bindings turned unbound ones serialization array need knowledgeable eyes", "d": "10/2016"}, {"body": "locks nt think problem updated already happened passing arrays helpers workaround use parameter see tweedle sadly update either take deeper look later week", "d": "10/2016"}, {"body": "quick look weekend got nothing try document triage meeting", "d": "10/2016"}, {"body": "let let one slide oblivion p", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "heroiceric closed merged", "d": "10/2016"}, {"body": "yeah closing fixed release branch", "d": "10/2016"}, {"body": "seems fixed least cases", "d": "10/2016"}, {"body": "something encountering quite often test suite seems related wrapping expression removed error goes away", "d": "10/2016"}, {"body": "fivetanley originally opened think may dupe although see ember twiddle reproduce simply goto applicationhbs add final warning cause browser computer cry", "d": "10/2016"}, {"body": "longer seeing error application release inclined close resolved elsewhere fivetanley snewcomer still seeing issue", "d": "10/2016"}, {"body": "jrjohnson basically use new glimmer rendering engine chancancode tracked one owe failing tests", "d": "10/2016"}, {"body": "ah nt know thought included obviously missed critical announcement leave open thanks", "d": "10/2016"}, {"body": "believe fixed verified least fixed adamknights gist fivetanley jrjohnson confirm fix available middle releasing latter probably time see", "d": "10/2016"}, {"body": "actual fix tests", "d": "10/2016"}, {"body": "chancancode quick click around app appears fixed thanks", "d": "10/2016"}, {"body": "dimul regarding see private property deprecated object component guides api docs recommend using perhaps another approach altogether", "d": "10/2016"}, {"body": "perhaps another approach altogether suggestions", "d": "10/2016"}, {"body": "passing property parent component child component explicitly yield property create contextual components see example contextual components", "d": "10/2016"}, {"body": "dimul far appears issue question support related think get feedback help ember community slack erhaps reach help channel", "d": "10/2016"}, {"body": "sure agree support issue think clearly usage intimate api worked one version ember work current version using intimate api controversial think find people older apps use certainly simpler time using accepted solution many problems certainly cases using broken change case easy move pass reference component instance attribute think sensible least acknowledge use supported complicated technical reasons longer practical", "d": "10/2016"}, {"body": "would like chime effects code well canary causing significant rerendering likely block updating app resolved", "d": "10/2016"}, {"body": "mentioned think way absorb difference per object per property invalidation would definitely useful bet making glimmer tracking individual properties changes actually costly recomputing need escape hatch nt case targeted scenarios", "d": "10/2016"}, {"body": "may related fixes happening krisselden mentioned", "d": "10/2016"}, {"body": "stefanpenner fixes performance regressions experienced nt fix specific issue", "d": "10/2016"}, {"body": "scottmessinger kanongil believe fixed twiddle works expected think wrong please let know reopen", "d": "10/2016"}, {"body": "chancancode works thanks much", "d": "10/2016"}, {"body": "hello zxcware time creating reproduction twiddle would ok sometimes bug needs reproduce ember cli project need help ping slack thank", "d": "10/2016"}, {"body": "closing according triaging policy please provide reproduction dig thank", "d": "10/2016"}, {"body": "bryancrotaz check please still going latest master thank", "d": "10/2016"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "10/2016"}, {"body": "worth error thrown tagname property embercomputed note merely triggered deprecation warning advising remember correctly future computed tagnames would respected component creation subsequent changes would effect new ember expected computed tagnames supported also ca nt seem find reference original deprecation message google github maybe going crazy", "d": "10/2016"}, {"body": "nathanhammond link blog post", "d": "10/2016"}, {"body": "similar issue problem trying delete key emptyobject using operator trows error fixed sure people expect work probably yes", "d": "10/2016"}, {"body": "hash frozen object delete nt work going manipulate hashparams objects need copy first", "d": "10/2016"}, {"body": "ok cool nt know expected behaviour thanks explanation", "d": "10/2016"}, {"body": "runspired still understand", "d": "10/2016"}, {"body": "private please deprecate unless another public way render component programmatically", "d": "10/2016"}, {"body": "public surprised", "d": "10/2016"}, {"body": "mentioned neither public today would love rfc make public mechanism programmatic creation components also lets centralize conversation topic instead spreading place making hard others follow", "d": "10/2016"}, {"body": "closing favor contains information thank report", "d": "10/2016"}, {"body": "hi updated ember facing issue usecase exact one describe pull request example best way future proof getting behaviour example thanks", "d": "10/2016"}, {"body": "yeah guides suggest use see curious creating custom async helpers seems syntax example still useful especially since helper implemented", "d": "10/2016"}, {"body": "rwjblue confirm line removed appears part builtin", "d": "10/2016"}, {"body": "serabe looks like existing link pointing nodemodules folder ember data nt exist source code also emberinflector class dependency sure change needs made emberjs repo looks like might data repo needs update even though nt figured exactly change needs happen also best way make source code links point another repo since emberinflector source separate repo real let know way try join slack channel sometime today", "d": "10/2016"}, {"body": "eglenfield closing fixes", "d": "10/2016"}, {"body": "still addressed given glimmer provide messaging dev get people right thing possibly add coercion opcode detect build time never add hot path would sad cc cibernox rwjblue", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "locks description seem could add something like route using thissend check local actions prior sending action router controller behavior sends action router delegate currently active route hierarchy per bubbling rules explained actions however sure really explain see twiddle twiddle index route action one fired button index template action sends route rwjblue close", "d": "10/2016"}, {"body": "chancancode still relevant thank", "d": "10/2016"}, {"body": "confirm inconstant behaviour another example showcase issue seems array listeners set sort properties array empty", "d": "10/2016"}, {"body": "note works fine index route work correctly routes instead causing full page refresh", "d": "10/2016"}, {"body": "getting similar issue nt warning template breaking", "d": "10/2016"}, {"body": "new glad issue exists going crazy trying figure nested route breaking implemented arrow function good stuff know amp learn", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "salamondharamaraj gramozkrasniqi struggling issue way found refreshing model calling know call refresh route possible define actions route unless use addon action implemented controller get route trigger refresh get current route handler controller", "d": "10/2016"}, {"body": "jcano send action controller route using method fixed sarus jsbin typos route named instead reason send method finding right route user see params part use last send action save snapshot jsbin right giving problem cors main part js appexploretagcommentsroute emberrouteextend model function params consoleinfo model hook exploretagcomments route called return thismodelfor exploretag actions refreshonlycomments function thisrefresh appexploretagcommentscontroller embercontrollerextend actions reloadcomments function thissend refreshonlycomments please sarus jcano check comments fix problems thank", "d": "10/2016"}, {"body": "jcano call route action controller action inside route action use thisrefresh", "d": "10/2016"}, {"body": "serabe confirm solution works confused closure actions nt work defined route routes handle normal actions thanks", "d": "10/2016"}, {"body": "jcano addon using route actions see", "d": "10/2016"}, {"body": "ok closing thank", "d": "10/2016"}, {"body": "apparently exact point described pixelhandler tempted create routes error handling hard time programmatically triggering error substates", "d": "10/2016"}, {"body": "gnapse describe exactly trying instead user flow", "d": "10/2016"}, {"body": "sure nathanhammond deal login page user submits form catch submit perform ajax request signing normal failure expect ajax request unauthorized ajax request ends error condition want switch error page initially wanted achieve showing error page shows route model hook fails could nt achieve loading programmatically get route model hook fails", "d": "10/2016"}, {"body": "okay thing note error routes actually dynamic segments means order achieve goal reusing error page must use intermediatetransitionto nt get new url pass second argument correctly address error route name always closed bug pixelhandler possibly worth improving documentation seems poweruserish", "d": "10/2016"}, {"body": "nathanhammond warn error original twiddlecase", "d": "10/2016"}, {"body": "adamknights behaves identically routes dynamic segments linked manner opposed new error message thoughts larger audience internet people", "d": "10/2016"}, {"body": "nathanhammond interesting would welcome others thoughts error message think particular piece doc adds confusion suggests navigate error route way", "d": "10/2016"}, {"body": "adamknights et al note work static route defined application one special ember routes said docs likely confuse issue", "d": "10/2016"}, {"body": "yes absolutely error better scenario matter fact router spelunking found exactly error want comment nt fully understand preceding comment referring ideally throw error provide maximal information user enough context objects provided proves cumbersome ember cases inner template helpers evaluated parent helpers unrender cases error somewhat prematurely fires try uncommenting error see happens", "d": "10/2016"}, {"body": "rwjblue line existence commented october say possibly fixed corresponding issue intervening three years interestingly though error message never uncommented first appears repo commit", "d": "10/2016"}, {"body": "thanks stravid still solution maybe add args error callback check model request fail", "d": "10/2016"}, {"body": "welp ran straight use case basically got route serves datadriven content along navbar transitions route different model gets applied every nt able narrow properly running issues getting ember dev environment set suspect culprit somewhere around suspect computed property returning incorrect never gets recomputed transition completes since never set extra links leaving class hanging limbo see pry better throw together test app nt upgrade working ember version canary p", "d": "10/2016"}, {"body": "hi best workaround cause understand nt work nt work would fire often anyway allowed set properties hook update bound property inside component thanks", "d": "10/2016"}, {"body": "almost certainly points pixelhandler points guides never use two configuration options together example teach queryparams also use separate example config option limitationbug would big help know following situations issue falls guidedocs describe intended feature set accurately completeness mutually exclusive options design would surprise consumption standpoint two concepts concerned seem loosely related read eitheror tradeoff neither expected beneficial push vs replace browser history stack route lifecycle hooks called guide describes subset intended feature set intent allow used together queryparam case let get issue tagged bug happy submit failing test case sure requires core team discussion case like lobby discussed sooner rather later current behavior gets way simple amp common use cases teams bump exploring options tech stack choices ie typeaheadstyle server side filtering list search pattern serialized url via data binding happy pull weight know looking", "d": "10/2016"}, {"body": "issues well needed change save button values inputs changed found set inputs inside form set action change form run action time one inputs within form changed twiddle see event names nt problem please ignore", "d": "10/2016"}, {"body": "status workaround handling special characters id", "d": "10/2016"}, {"body": "checked still issue", "d": "10/2016"}, {"body": "linking blob like contain link relevant content long position nt change branch points commit master today", "d": "10/2016"}, {"body": "problem twiddle works applicationhbs perfect must render newlayouthbs without applicationhbs doest work", "d": "10/2016"}, {"body": "people wondering bug still open bug lingered low priority small minority apps use small minority attempt top level none people working apps stepped forward fix would killed entirely could survived nobody time properly deprecate remove instead able keep working always rough edge cases hard keep implementation changed time poked code break different subset rarelyused edge cases stop using dates time ember neither components services anything done better components services rendering modals sidebars see trying show applicationhbs template sometimes nt abusing meaning applicationhbs literally supposed template always present move sometimespresent content child route remember routes meaning url structure unrelated change", "d": "10/2016"}, {"body": "bug still reproducible", "d": "10/2016"}, {"body": "chancancode rwjblue facing issue use case similar need url updated whenever transition goes error state whenever end error page user tend two things press back button go previous page press refresh button retry failed page url updated ca nt done suggestions resolve", "d": "10/2016"}, {"body": "jesseditson thanks mixin one issue change query params route transition different page come back page query params refresh happens causes error", "d": "10/2016"}, {"body": "supersabillon ah resuming sticky qps disabled app using wonder nt come across case", "d": "10/2016"}, {"body": "ok know router fixed allow multiple hashes bootstrap scrollspy still recognize scrolled hashanchor page still ca nt link hashanchor clickable element anybody got example working still broken thx", "d": "10/2016"}, {"body": "paulbhartzog browsers scroll nt dom page load case ember apps targeted element nt dom time browser see apply scrolltoid logic race behavior would emulated instead described untested example becomes even complex nest hashes element link need split apart convention decides one wins", "d": "10/2016"}, {"body": "paulbhartzog browsers scroll described untested example comment becomes even complex nest hashes route first second third element link need split apart convention decides one wins jayphelps thx reply example actually got anchors working part care bootstrap navbar active class blissfully unaware scrolling going wo nt update suspect issue bootstrap ember", "d": "10/2016"}, {"body": "hi stefanpenner solution works ok full screen soon table becomes responsive hides whole row info solution issue", "d": "10/2016"}, {"body": "willibaur unsure", "d": "10/2016"}, {"body": "stefanpenner found issue caused materialize class solved changing attribute thanks", "d": "10/2016"}, {"body": "hope issue still cause nt know post issue using ember got observer fired var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b nothing happens var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b difference case property name anyone recognizes issue please help explain thanks", "d": "10/2016"}, {"body": "unconsumed computed properties trigger observers", "d": "10/2016"}, {"body": "thanks triggering lowercase var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b computed property", "d": "10/2016"}, {"body": "oh upper case supported use property names start lower case letters", "d": "10/2016"}, {"body": "thanks happens uppercase name fine simple property like var emberobjectcreate emberaddobserver function consolelog fire emberset ca nt find documentation anywhere think endup bunch lowercase aliases uppercase named properties", "d": "10/2016"}, {"body": "historically capitalized paths indicated global case would observing issue talking nested paths comment discussing hopefully special casing capitalized paths removed test still isnt working please open new issue twiddlejsbin reproduction", "d": "10/2016"}, {"title": "getjson downgrades http", "body": "bug reports note fix bugs latest version jquery briefly describe issue encountered using getjson utilize current protocol instead sometimes uses sometimes nt based wether link ends acually happens fails succeeds browsers affected noted latest browsers available ubuntu including firefox crome upgraded latest version jquery", "num": "3382", "d": "10/2016"}, {"title": "delay bug", "body": "link test case browser ms edge chrome", "num": "3381", "d": "10/2016"}, {"title": "chained removeadd class ternary operator", "body": "hello chained removeadd class ternary operator works code works perfectly else structure", "num": "3379", "d": "10/2016"}, {"title": "deferred chain slow", "body": "use settimeout deferred causes massive slow using deferred heavily chains actually happens deferred chain takes msec due min delay settimeout expect happen would much better use setimmediate promise section requires must done new context run implementation uses sendmessage api emulate shown test drops runtime speed", "num": "3378", "d": "10/2016"}, {"title": "drop jsontojsonp autopromoting logic", "body": "description currently jqueryajax gets automatically converted jsonp request unless one also specifies today preferred way interacting crossdomain backend cors supported browsers long time roadblock someone requires ie support autopromoting json requests jsonp ones introduces security issue developer may unaware downloading data executing code remote domain first step migration could adding code migrate would require requests always specify link test case", "num": "3376", "d": "10/2016"}, {"title": "ruture numbers wrong yx z ruture nerver zx time", "body": "description link test case", "num": "3375", "d": "10/2016"}, {"title": "ajax call working secured wifi ie chrome", "body": "description hi team team using minified version make ajax calls ajax calls working lan wifi contacted several alternatives could nt find solution keeping code building please suggest suggestion would help us ajax method post url contenttype applicationjson data jsonstringify obj timeout headers done function data fail function link test case", "num": "3373", "d": "10/2016"}, {"title": "jquery infinite loop event delegation certain attribute selectors", "body": "description using event delegation selectors known jquery sizzle capitalized differently causes infinite loop nt happen using capitalized way sizzle attribute unknown sizzle nt happen tested chrome safari ie link test case note jquery versions added remove one hit run test different versions trouble saving fiddle different external resources", "num": "3371", "d": "10/2016"}, {"title": "uncaught typeerror tagit function", "body": "description implementing tagit jquery ui plugin project getting uncaught typeerror tagit function error following code thank advance jquerynoconflict function var sampletags c java php coldfusion javascript asp ruby python c scala groovy haskell perl erlang apl cobol go lua singlefieldtags tagit availabletags sampletags make tagit submit single form value commadelimited field singlefield true singlefieldnode mysinglefield link test case", "num": "3370", "d": "10/2016"}, {"title": "serialize output values typesubmit buttons form submission", "body": "form submitted ie within event submitting button included output see documentation states submit button value serialized since form submitted using button currently correct stating submit button value serialized incorrect assumption form submitted due button triggered", "num": "3368", "d": "10/2016"}, {"title": "expose jqueryslim modules", "body": "currently want import jquery slim must would nice alias added root project people could instead use", "num": "3365", "d": "10/2016"}, {"title": "event registered different level image map", "body": "description given following code event registered element level element event fails register different levels since image maps linked value arbitrary dependency image image map dom level link test case", "num": "3364", "d": "10/2016"}, {"title": "password input values", "body": "description right behavior input type password mean ca nt copy past inputs type password notepad jquery show know security issues case point jquery handle password values sorry bad english sorry idiot point regards link test case", "num": "3363", "d": "10/2016"}, {"title": "generates indexof issues ie", "body": "receiving number errors one apps worked great object nt support property method indexof suggestions", "num": "3362", "d": "10/2016"}, {"title": "promote ajax jsonp request", "body": "ajax type put url test data jsonstringify desc ls id text headers contenttype applicationjson userid authdate authorization bcdae datatype json done function result consolelog result like setting contenttype applicationjson headers setting contenttype applicationjson ajax promoted jsonp request js bin", "num": "3361", "d": "10/2016"}, {"title": "closure declaration ready state working", "body": "browsers affected chrome safari vivaldi jquery versions websites platform wordpress description closure declaration ready state working properly affected many websites generally used declare jquery code days thing stops working forced use following link test case jsbin code reasons ca nt share sites coding thank", "num": "3360", "d": "10/2016"}, {"title": "unable load jquery cdn due bad ssl cert browsers", "body": "", "num": "3359", "d": "10/2016"}, {"title": "param mixed item array indexing", "body": "hi facing issue way param serializes arrays containing mixed items array contains strings complex objects complex objects receive proper indexes strings nt play well backend model binding use net mvc example behaviour intended possible force indexing items", "num": "3358", "d": "10/2016"}, {"title": "hover stop working version", "body": "", "num": "3357", "d": "10/2016"}, {"title": "ie li element value changed", "body": "using jquery console asdf amp ltli outerhtml shows lt li asdf value changed chrome firefox works well", "num": "3356", "d": "10/2016"}, {"title": "separate camelcasing logic data amp css", "body": "description contains cssonly quirk replaces quirk needed css module yet data module uses well making create key key use cases separated due needed breaking changes material ps would best resolve first edit description edited part ticket separated link test case", "num": "3355", "d": "10/2016"}, {"title": "invalid pseudo selector recognized certain case", "body": "description causes following error pseudo class defined usage works well like link test case jsfiddle jquery version browser google chrome firefox windows", "num": "3350", "d": "10/2016"}, {"title": "ajaxload running inline javascript twice", "body": "description repeat bug four years ago marked wont fix presumably viewed edge case seeing thing happen latest version chrome loading html snippet via ajaxload run inline javascript snippet twice also load run linked javascript files snippet twice link test case", "num": "3349", "d": "10/2016"}, {"title": "possible support native custom event handlers", "body": "description jquery nt seem supporting native custom event handlers example following code event handler nt run behavior seems bit strange attach event like works curious whether possible jquery support situation link test case", "num": "3347", "d": "10/2016"}, {"title": "jquery ajax load function breaks existing code", "body": "code calling ajax load function update web pages following signature load url data complete jquery version callback function complete called web page guaranteed updated html elements ready processedupdated callback function version getting null jquery object error callback function always called html elements created two workarounds delay milliseconds callback function work cal setinterval check availability certain html elements work satisfactory many places change code right stay jquery someone suggest bettercleaner solution thanks richard", "num": "3346", "d": "10/2016"}, {"title": "polymer build complain uglifying outrojs", "body": "warn unable uglify file homemiguelgithubdiretonamaoportalwwwbowercomponentsjquerysrcoutrojs debug message return outside function filename line col pos stack", "num": "3343", "d": "10/2016"}, {"title": "polymer build complain uglifying introjs", "body": "warn unable uglify file homemiguelgithubdiretonamaoportalwwwbowercomponentsjquerysrcintrojs debug message unexpected token eof undefined filename line col pos stack", "num": "3342", "d": "10/2016"}, {"body": "please provide test case code anything random see different behavior something must different sites test", "d": "10/2016"}, {"body": "alternate fix due async nature settimeout function leaves function calledinto call stack moves ahead since values stop function set true means takes end animations present stack hence come call functions values pair hope helps", "d": "10/2016"}, {"body": "xclam think github right place kind question stackoverflow right place help", "d": "10/2016"}, {"body": "eduardostuart mentioned please look programming help stack overflow", "d": "10/2016"}, {"body": "nb library used test override settimeout ie since already implements setimmediate ie show speedup", "d": "10/2016"}, {"body": "unavailable latest chrome firefox safari releases well emulating would almost certainly increase file size unpalatable amount need fast performance chaining deferreds would recommend specialized library like bluebird said could definitely see abstracting use way takes advantage available", "d": "10/2016"}, {"body": "exposing something like defaults easily able bower install something like order speed jquery promises without bloating core library", "d": "10/2016"}, {"body": "deferred implementation nt meant competitor native promise common internal use ajax animations chain short time takes ajax animation dominate far easy convert deferred promise nt need crossplatform compatibility concern global hook like introduce crossplatform differences difficult debug especially nt know opted change code page", "d": "10/2016"}, {"body": "doesnt need actually implement setimmediate use available ie windowsetimmediate windowsettimeout process something like", "d": "10/2016"}, {"body": "updated example native promise support", "d": "10/2016"}, {"body": "like said could definitely see abstracting use way takes advantage available pr would fairly considered", "d": "10/2016"}, {"body": "like said could definitely see abstracting use way takes advantage available pr would fairly considered iirc original plan idea introduce use internally public api would allowed override envs better alternative implementations like node hell remember went another way", "d": "10/2016"}, {"body": "ruture numbers wrong yx z ruture nerver zx time", "d": "10/2016"}, {"body": "thanks opening issue find support forums", "d": "10/2016"}, {"body": "rangakore viewing webpage locally viewing file rather using server probably cors issue trying making server append http header javascript file trying request", "d": "10/2016"}, {"body": "thanks opening issue however find support stackoverflow jquery forums jquery gitter", "d": "10/2016"}, {"body": "thanks report duplicate fixed point nt plan releases unless something really critical happens upgrade fixed", "d": "10/2016"}, {"body": "please look programming help stack overflow", "d": "10/2016"}, {"body": "actually problem duplicate jquery used issue solved thank suggestion", "d": "10/2016"}, {"body": "code running knows specific button used trigger code calls add button serialized string method however nt reasonable way know form serializing serialized specific button pressed", "d": "10/2016"}, {"body": "every time see one tickets wonder add specialcase submitter elements context collection eg returns form data set would submitted activating", "d": "10/2016"}, {"body": "caller explicitly specify submitting control work although nt really like idea using collection specify could always add arg specifies submit button easy write code anyway bigger problem determining button pressed submit form try determine submit handler", "d": "10/2016"}, {"body": "definitely favor guessing submitter making possible serialize explicitly specified would expect calls made handlers bound submit buttons", "d": "10/2016"}, {"body": "want tackle", "d": "10/2016"}, {"body": "saying works differently used native interface simply nt expect behavior saw", "d": "10/2016"}, {"body": "dmethvin turns jquery issue issue still behavior expecting bring issue related native functionality", "d": "10/2016"}, {"body": "stackoverflow question", "d": "10/2016"}, {"body": "think lol maybe bad english hindered understanding meant rhetorical question know answer", "d": "10/2016"}, {"body": "issue template asked lot information close ticket start using jquery sure use migrate", "d": "10/2016"}, {"body": "thanks opening issue plan removing jsonp promotion see", "d": "10/2016"}, {"body": "thank reporting issue test case however appears working expected event handler registered throws servicesvars defined referenceerror invoked since fact defined topic recommended pattern executing code upon dom ready jquery callback nt appear issue jquery even longer supporting lines think find better help stackoverflow", "d": "10/2016"}, {"body": "yes aware although sure whether problem something fix side leave ticket open since people seem creating new ones regularly", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "dmethvin clearing cache client side enough follow apply fix server side", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "really strange data structure note standard governing complex data structure serialized querystring since kind thing never happens html form essentially dup advice workaround would either serialize information using restructure data regular", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "dmethvin btw seeing note missing docs updates", "d": "10/2016"}, {"body": "hover pseudoevent hover shorthand nt think ever formally documented mentioned blog post", "d": "10/2016"}, {"body": "btw hover method deprecated docs covered though", "d": "10/2016"}, {"body": "ah collapsed two things mind bad", "d": "10/2016"}, {"body": "please look help stack overflow include pieces code github surround single backticks inline triple backticks new line instead encoding html entities hand like example code new line", "d": "10/2016"}, {"body": "core method requires changes others places nt really need labels issue would argue would confusing unconventional", "d": "10/2016"}, {"body": "also create corresponding issues docs migrate repos", "d": "10/2016"}, {"body": "markelog issue hiding jquerycamelcase also fixes camelcase handling data module imo makes sense doublelabel maybe effects label needed", "d": "10/2016"}, {"body": "nt reported issues yet later", "d": "10/2016"}, {"body": "sounds like two issues one hiding another fix aaaam something like sure want fix", "d": "10/2016"}, {"body": "another argument dividing issue would easier external contributors since already helped kind issues could handle hiding thing hence reminder creating issues whereas fixing something nt really clear sequence actions least might harder tackle", "d": "10/2016"}, {"body": "sure separate right", "d": "10/2016"}, {"body": "cool thanks", "d": "10/2016"}, {"body": "selector currently supported sizzle therefore jquery work selections many clients though call relies upon", "d": "10/2016"}, {"body": "doubt exact bug since ie bug although might exhibit similar behavior saying test case ticket exhibits behavior modern chrome", "d": "10/2016"}, {"body": "sure nt think test case showing behaviour chrome going move javascript included snippet probably best practice anyway", "d": "10/2016"}, {"body": "thanks opening issue without test case investigate would hard pin issue inside jquery reopen test case produced", "d": "10/2016"}, {"body": "yes jquery nt trigger native events ones tracks native events nt provide way determine attached", "d": "10/2016"}, {"body": "discussion see", "d": "10/2016"}, {"body": "thanks clarification", "d": "10/2016"}, {"body": "post example shows problem might guess difficult us diagnose problem description provided even sure reported error message null jquery object nt literal error", "d": "10/2016"}, {"body": "sure trying run single file uglify use jquery build script", "d": "10/2016"}, {"body": "well running polymer build trying help cheers", "d": "10/2016"}, {"body": "sure trying run single file uglify use jquery build script", "d": "10/2016"}, {"body": "read carefully issue title cheers", "d": "10/2016"}, {"body": "polymer setup blindly uglifying js files dependencies regardless actually used either setup polymer bug jquery also note receiving bug reports like time changed jquery nt amp files correct javascript wrapperjs file upgrading jquery resolve issue still recommend fix build touch unrelated files", "d": "10/2016"}, {"body": "hi mgol thank replying see could find entry polymerjson exclude js dependencies indeed search upgrade jquery thank cheers", "d": "10/2016"}, {"body": "reopen test case thanks", "d": "10/2016"}, {"body": "timmywil sorry busy recently example need problem see error consol chrome request promoted jsonp link js bin add contenttype applicationjson ajax option remove annotation js bin get response data post api api need use contenttype encoding nt want define contenttype option add contenttype headers please help reopen issue verify", "d": "10/2016"}, {"body": "pslean url using private network ca nt see result fiddle use mock backend requests test purposes", "d": "10/2016"}, {"body": "mgol changed js bin link newest please check", "d": "10/2016"}, {"body": "timmywil mgol", "d": "10/2016"}, {"body": "mgol timmywil help", "d": "10/2016"}, {"body": "could someone reopen issue exactly problem mgol", "d": "10/2016"}, {"body": "seems like debuggingwebpack thing jquery bug someone stake outcome diagnose let us know anything need change way build jquery may help", "d": "10/2016"}, {"body": "hi try provide information bug product versions used jquery jquerymobile trying oficial jqm popup basic demo raises error uncaught typeerror apreventdefault function hope clarifies issue", "d": "10/2016"}, {"body": "think reproduced although nt time submit test case using design involves clone form call empty cloned form append hidden field clone call submit clone get working instead calling submit step add submit button cloned form append cloned form document body call click appended submit button workaround inspired blog post", "d": "10/2016"}, {"body": "could anyone jquery comment", "d": "10/2016"}, {"body": "smaug added agenda next meeting though nt prohibit anyone commenting sure recommend yet", "d": "10/2016"}, {"body": "comment say blink changing order would affect jquery since order also happens wrong apparently async events ie throw wrench ca nt make sync guarantee behavior across browsers even browses cooperated order still left inconsistencies words nt see changes made influencing much least ie market share sufficiently diluted", "d": "10/2016"}, {"body": "attribute would useless correct", "d": "10/2016"}, {"body": "markelog yes unfortunately another transportspecific setting would ignored transports nt need xhr", "d": "10/2016"}, {"body": "sum versions still affected issue one series fix merged", "d": "10/2016"}, {"body": "osuritz fix included jquery newer need upgrade included", "d": "10/2016"}, {"body": "markelog please nt follow chrome behaviour contradicts specification case see anything relevant filed one hollers smaller chance adding", "d": "10/2016"}, {"body": "think supporting standard pattern would highly useful community allow developers consistently use promises regardless provider encourage good coding practices", "d": "10/2016"}]