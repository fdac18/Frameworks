[{"title": "reference error undefined property like elemuniquid", "body": "description please fix alls undefined property errors spaming complet firebug console", "num": "3522", "d": "1/2017"}, {"title": "maximum call stack size exceeded parents call nonlowercase selector", "body": "description infinite recursion running works chrome logs work fine code near recursive call see note saving restoring attribute getter nt use tolowercase version attribute name thing calls link test case jsfiddle", "num": "3521", "d": "1/2017"}, {"title": "computestyletests memory leak reference removed div", "body": "description jquery small memory leak end function releases reference div used measurements also variable never nulled holds reference another div used look like ending lines", "num": "3520", "d": "1/2017"}, {"title": "xbox ms edge jquery event handler supported", "body": "description xbox ms edge jquery event handler supported throws error object support property method", "num": "3519", "d": "1/2017"}, {"title": "bower package updated", "body": "currently still version", "num": "3518", "d": "1/2017"}, {"title": "events improvement jquery adding priority", "body": "suggest add new feature bindon method like example priority number user clicks target jquery order callbacks executed target ordering priority way decide order executing events decide event executed always specific needs example", "num": "3517", "d": "1/2017"}, {"title": "bug delegation", "body": "etarget seams atached dom compare etarget specific node", "num": "3516", "d": "1/2017"}, {"title": "data values differ dashed camel cased named variables", "body": "description happens jquery version nt happen jquery version removing data removedata foobar moobar remove foobar moobar well removing setting dashed names camel cased variables take precedence removed values returned instead fresh ones browsers affected link test case", "num": "3515", "d": "1/2017"}, {"title": "computestyletests throws firefox windowgetcomputedstyle div returns null", "body": "description jquery seeing occasional errors production site due firefox returning null windowgetcomputedstyle div inside jquery support function computestyletests related firefox bug workaround computestyletests var divstyle windowgetcomputedstyle div link test case test case yet perhaps firefox bug states iframes involved", "num": "3514", "d": "1/2017"}, {"title": "map undefined return undefined returns", "body": "description expect return instead returns empty array tested chrome jquery expect return optionally blow instead magic translating empty array also happy educated turning empty array ok thanks link test case might related", "num": "3513", "d": "1/2017"}, {"title": "parameters get body", "body": "feel free delete frequently asked using jquery ajax calls seems impossible pass body parameters get calls fact allowed http specs particularly one developing internal apis one also controls server backend code etc necessary able many enterprise apis need send complex queries decide get elastic search lot example current clients like perl mojolicious allow without problems able pass body parameters get calls forces one use postput situations really nt used makes one http verb slots api endpoint useless cases come across problem developing several internal enterprise apis makes using jquery client side really difficult please consider allowing body parameters get calls request query path params naturally", "num": "3512", "d": "1/2017"}, {"title": "uc browser mobile slidetoggle method nt working", "body": "testing website uc browser testing found bug slidetoggle want expect happen created menu mobile one button expecting click button menu appears slidedown effect click button menu disappear slideup effect actually happens menu nt appears also done check css end like increase zindex property css work change version jquery latest version work guys something browsers affected uc browser android", "num": "3511", "d": "1/2017"}, {"title": "question minimum server support needed", "body": "sirs written simple webserver ssi support arduino tried using file upload script looks great browser file upload post code dropped file serverphp directory error return json invalid first byte html guru script query code looks like foreign language decode simple reference describes response data widget expecting like preview multiple file upload progress bars little server storing data either eeproms flash memory chips slow bytessec write speed means file take seconds minutes progress bar nice feature anyone point explanation protocol php backend browser widget thanks chuck", "num": "3510", "d": "1/2017"}, {"title": "jqxhrgetresponseheader key crashes key passed", "body": "description stack exception uncaught typeerror read property tolowercase undefined objectgetresponseheader onfail object fire objectfirewith rejectwith process line code builds headers hashtable needed getresponseheader function key var match completed responseheaders responseheaders match rheadersexec responseheadersstring responseheaders match tolowercase match match responseheaders keytolowercase return match null null match obviously key nt defined required documentation mention key needed keys feasible even test null returned key nullundefined gracefully handle case using minified version bug untraceable also getallresponseheaders nt documented mention required key getresponseheader btw general fail jqxhr textstatus errorthrown deficient eg crossorigin issue get textstatus error errorthrown pretty useless also mention fail documentation even general arguments passed fail terrible textstatus errorthrown ofter useless sometimes jqxhr message attribute sometimes responsetext html page sometimes stack sometimes none challenge anyone try decent error popup dialog shows pertinent info link test case none needed", "num": "3509", "d": "1/2017"}, {"title": "jqxhrgetresponseheader key crashes key nt passed", "body": "description expect happen graceful return key parameter missing documentation mention key required possible values note value legal cause crash decent consistent attributes jqxhr argument passed fail even better informative values textstatus errorthrown arguments actually happens exception thrown see description browsers affected stack exception uncaught typeerror read property tolowercase undefined objectgetresponseheader onfail object fire objectfirewith rejectwith process line code builds headers hashtable needed getresponseheader function key var match completed responseheaders responseheaders match rheadersexec responseheadersstring responseheaders match tolowercase match match responseheaders keytolowercase return match null null match obviously key nt defined required documentation mention key needed keys feasible maybe jqxhrkeys function even test null returned key nullundefined gracefully handle case using minified version bug untraceable also getresponseheaders end nt documented mention required key getresponseheader btw general fail jqxhr textstatus errorthrown deficient eg crossorigin issue get textstatus error errorthrown pretty useless also mention fail documentation even general arguments passed fail terrible textstatus errorthrown ofter useless sometimes jqxhr message attribute sometimes responsetext html page sometimes stack sometimes none challenge anyone try decent error popup dialog shows pertinent info link test case none needed", "num": "3508", "d": "1/2017"}, {"title": "rangeerror maximum call stack size exceeded using recursive animate another tab", "body": "used code code works open page switch another tab seconds infinite loop occurs see developer console open happens chrome firefox also seems happen less brutal looks like animate completed instantly called tab active regardless duration callback also called", "num": "3507", "d": "1/2017"}, {"title": "url parameter eval js jquery ajax", "body": "relation dangerous response eval jquery get function refereced far see still vulnerable xss different attack vector url parameter attacker control data uris used nt even need set external website exploit flaw jquery ajax url data textjavascript alert documentcookie datatype jsonp jquery ajax url data textjavascript alert documentcookie ajax url data textjavascript alert documentcookie datatype jsonp jquery ajax url data textjavascript alert documentcookie ajax url data textjavascript alert documentcookie datatype jsonp", "num": "3506", "d": "1/2017"}, {"title": "properly detect attachment shadow dom elements", "body": "places check document attachment showhide inline style fallback managing script evaluation dom manipulation fail inside shadow dom return false elem shown shadow dom change works investigate cost remedy eg shadowdomcompatible function", "num": "3504", "d": "1/2017"}, {"title": "animations get skipped old ones stopped midtick", "body": "description mutation timer list inside timer callback affect timer index resulting skipped callbacks link test case", "num": "3503", "d": "1/2017"}, {"title": "immediatelydone animations miss final progress notification", "body": "description accidentally broke immediatelydone animations suppressing final progress notification link test case must loaded without https get right ci build", "num": "3502", "d": "1/2017"}, {"title": "jquery click work ios let works var", "body": "description jquery bug simple click event use let declare variables images links click event stops working ipad chrome switch let works use var click works mobile let link test case", "num": "3500", "d": "1/2017"}, {"title": "catch enough storage exceptions reading responsetext ie", "body": "description exclusively affects ie basically happens try read ajax request contains several mb worth data occasionally get exception says enough storage available complete operation using version jquery however exception becomes unhandelable error callback nt called happens callback function javascript callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null code see fail read never gets called becomes impossible handle exception outside onerror handler link test case research issue notoriously difficult reproduce involves loading several mb data ajax possibly requires memory fragmentation browser starts happening almost always get happen sometimes goes away reduce response size ajax request enough definitely goes away relevant instances people experience issue general particularly jquery proposed solution solution proposing would pull request would prefer somebody team could polish get look pull javascript callback callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null tryelsecomplete done ajax along apibackwards compatibility considerations leaving optional powersthatbe think would good include tell error simply error", "num": "3499", "d": "1/2017"}, {"title": "jqueryanimation nt end empty animations early", "body": "description although finishes immediately deeper infrastructure occasionally showhide animations end empty observed intermediate step nt want throw timing cases link test case", "num": "3498", "d": "1/2017"}, {"title": "jqueryfxtick insufficiently guards timer queue manipulation", "body": "description executes queued timer turn maintaining place removes finished animation however also remove timers queue invoked iterating ie animation callbacks cause lose place skipping one animations often harmless since animation revisited next tick introduce visible stutter pathological case nt bother demonstrating starve animation outright additionally iterates end queue new animations get processed twice first tick fix making three functions aware cooperative link test cases stutter extra processing", "num": "3497", "d": "1/2017"}, {"title": "called empty element nt account document clienttop", "body": "description implementation getter misidentifies element content notrendered element result accounted code demo page could nt figure way repro issue jsfiddle jsfiddle puts result page scroll box thus docelemclienttop stays see discrepancy need open page scroll document refresh alerts showing empty populated elements expected popups show number however relevant code line make sure element hidden display none rectwidth rectheight ifexpression true empty elements check new breaks scrollspy anchor tag page scrolled defined example", "num": "3495", "d": "1/2017"}, {"title": "incorrectly resolve instantly array passed", "body": "trying use dynamically managed array one deferred however found pass array one deferred resolve immediately expected behavior expect jquery base master deferred one element array fiddle representing issue jquery", "num": "3493", "d": "1/2017"}, {"title": "browser compatibility issue css function", "body": "hi found browser compatibility issue css function see happens chrome happens firefox wander run code console however get undefined chrome block firefox used tried multiple versions two browser looking forward replay", "num": "3492", "d": "1/2017"}, {"title": "chrome map area elements seen hidden", "body": "description found chrome version jquery test hidden map area element returns true even map area elements well inserted page result firefox course talking visibility map bit strange behavior identical browsers also requesting width height map returns chrome valid integers firefox link test case", "num": "3491", "d": "1/2017"}, {"title": "jquery erroneously calls pointerleave handlers entering descendent input textbox chrome", "body": "description attach handler element descendant textbox using jquery attach handler element using native javascript starting outside container element move mouse textbox expected behaviour events fire actual behaviour chrome jquery event handler called native event handler expected behaviour occurs firefox feature flag edge emphasize using otherwise identical test code reproduce one browser event handlers added using substituting two functions fix web app tested scaled touchscreen windows laptop chrome beta firefox dev edn edge link test case jquery fail jquery tip fail jquery fail jquery tip fail native js pass", "num": "3490", "d": "1/2017"}, {"title": "improve offset setter testing", "body": "description lands add missing offset setter tests fix bugs revealed", "num": "3488", "d": "1/2017"}, {"title": "typeerror read property contains null", "body": "calling jquery function element ie elementtoggle false inside template created documentcreateelement template get exception using seems easy fix changing following line possibly even reason code like something wrong well may possible please let know", "num": "3485", "d": "1/2017"}, {"title": "error uncaught illegal access", "body": "error happens prod server users data file line file error object l l e g l c c e length", "num": "3484", "d": "1/2017"}, {"title": "size method removed jquery nt included upgrade guide", "body": "description per title api doc removed mention upgrade guide", "num": "3482", "d": "1/2017"}, {"title": "find breaks simple queries parsed html unless ghost div used", "body": "description query element string html solution recommended stackoverflow use parsehtml create jquery object execute find however find work certain queries html strings work elements part dom eg descendant queries workaround append parsed elements ghost div necessary see example jsfiddles link test case expected show stuff looking find returns nothing workaround adding ghost div use case discussed", "num": "3481", "d": "1/2017"}, {"body": "nt sound like jquery problem case none information template provided please ask help stackoverflow", "d": "1/2017"}, {"body": "sounds like broken jquery ui build project know method case provide reduced test case showing problem file bug", "d": "1/2017"}, {"body": "firefox go config set javascriptoptionsstrict true go site actually development take look firebug console see mean", "d": "1/2017"}, {"body": "look live sites either provide reduced test case bug report look help stack overflow irc forums etc", "d": "1/2017"}, {"body": "syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property anodetype weitere informationen referenceerror reference undefined property thispositionx weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property bresult weitere informationen", "d": "1/2017"}, {"body": "nothing original bug report posted also nt run strict mode third party code actual bugs report please create issue specific issue posting comments unlikely get responses", "d": "1/2017"}, {"body": "support latest jquery version currently works nothing us", "d": "1/2017"}, {"body": "hack place place ie lt browsers since gc could nt handle circular references longer support environments case provided question would nt removed memory since still present outer scope function yes also serves singleton guard whereas could nullify would add gzip size practically would decrease memory consumption bit mention logic variable picked modern gc form optimization possible second execution method speculation course reasons nt think need", "d": "1/2017"}, {"body": "please provide test case", "d": "1/2017"}, {"body": "test running following game xbox edge", "d": "1/2017"}, {"body": "realised using older requirejquery version looking function try updated jquery thanks", "d": "1/2017"}, {"body": "working outdated jquery version thanks close", "d": "1/2017"}, {"body": "ca nt reproduce problem bower install jquery bower jquery cached bower jquery validate bower jquery install jquery jquery bowercomponentsjquery repositories even depend jquery try clearing bower cache", "d": "1/2017"}, {"body": "bad cache issues", "d": "1/2017"}, {"body": "thanks suggestion however planning utilize native event scheduling instead using event queuing ca nt add support things like nt exist native apis", "d": "1/2017"}, {"body": "pass suggestion", "d": "1/2017"}, {"body": "notification born code debug etarget closest thattip length wrong", "d": "1/2017"}, {"body": "changing thatisvisible amp amp etarget parents html length amp amp etarget closest thattip works dont understant event come element attached", "d": "1/2017"}, {"body": "made another test checking cloned old events seams old node attached another question node children removed events might removed", "d": "1/2017"}, {"body": "found problem priority executing events different jquery component first click div refreshing second body second executed cause complex situation would usefull tell executed event example body click function priority", "d": "1/2017"}, {"body": "please look programming help stack overflow", "d": "1/2017"}, {"body": "problem found stackoverflow problem related impossibilty give order events example body click function priority example body click function permit order execute events specific target specific problem related design", "d": "1/2017"}, {"body": "read issue template states note fix bugs latest version jquery therefore problem exists jquery latest nothing us update jquery problem disappear", "d": "1/2017"}, {"body": "ok thought still maintaining bug gave us headache production days since nt easy reproduce", "d": "1/2017"}, {"body": "ok thought still maintaining note unclear stand enough trying figure whether message clear enough improve somehow note even maintaining issues like precisely reason simplified logic jquery required breaking change could nt backported change line follow semver would fix issue might break others sites thanks report anyway", "d": "1/2017"}, {"body": "saw comment thought latest version means latest latest", "d": "1/2017"}, {"body": "see trying put message nt updated time release new major version maybe current one clear enough thank input", "d": "1/2017"}, {"body": "prevent exception css methods wo nt actually work without gcs called ondemand loading jquery nt constitute demand happening triggers computation hidden iframe much fix would change prevents exception yields incorrect behavior", "d": "1/2017"}, {"body": "happening triggers computation hidden iframe getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info much fix would change prevents exception yields incorrect behavior environment returns null getcomputedstyle may indeed issues throwing exception stops javascript block execution think fixing limiting issue something specific like jquery css methods fail perhaps always better generally preferable", "d": "1/2017"}, {"body": "getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info case definitely something sweeping rug keep error log clean determine particular error harmless case always filter error reporting", "d": "1/2017"}, {"body": "sounds like gecko people gon na fix moreover css specification might change", "d": "1/2017"}, {"body": "docs say returns array takes two arguments first argument either array object neither second argument callback function calling method invalid inputs undefined results case note callback provided callback returned would removed resulting array", "d": "1/2017"}, {"body": "special needs like roll xhr use jquery helper methods like heavy lifting", "d": "1/2017"}, {"body": "please provide test case jsfiddlenet jsbincom ca nt anything based short description", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "mgol made assignee since given discussion meeting better understanding", "d": "1/2017"}, {"body": "sure file upload script mean case support forum jquery bug tracker please look help stack overflow", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "take general stance undocumented inputs result unpredictable output particular prioritize adding code handle invalid input moving improving documentation though", "d": "1/2017"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "let move discussion", "d": "1/2017"}, {"body": "allow third parties modify js code already lost attacker insert whatever code want original issue loaded url expecting harmless json third party code suddenly started sending scripts jquery evaluating fixed", "d": "1/2017"}, {"body": "ok respect criteria nt see difference cases attacker must control de content url parameter passed jqueryajax redirect website control answers scripts malicious code", "d": "1/2017"}, {"body": "attacker nt control code particular control contents property pass url attacker page via property attacker changes sent contents harmless json script jquery user may suspect jquery listen new mime type execute script fixed issue case attacker control foreign domain load stuff control pass code control insert code want change basically ban dataurls completely valid use cases", "d": "1/2017"}, {"body": "ipad probably using example nt even use values declared nt related jquery please ask help stackoverflow", "d": "1/2017"}, {"body": "see dilemma sure generally worked hard avoid trycatch eliminate possible codebase often catches things nt although made implementation compatible promisea method still throw errors nt catchable chain like ideally ajax errors thrown inside method reject could know sure lot existing code nt use twoarg dunno maybe trycatch least painful pains", "d": "1/2017"}, {"body": "practice nt even know point catching things nt thought weekend like update proposed solution following catches error concerned issues since pretty sure would catch errors donefail callbacks well thought probably given appropriate place put trycatch ensure appropriate callbacks called start given callback evaluated top stack middle chain sure make strong argument need trycatch particularly revolving around fact user ca nt code imo also breaks contract promises used ajax nt call fail callback result error request literally disappears system need reliably track requests actually finished particular reason eg metricsonunload handlers ca nt creates obscure bug workaround manually handle ajax requests instead using jquery javascript callback callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null", "d": "1/2017"}, {"body": "yeah problematic somehow detail worm way could acted upon least logged caller", "d": "1/2017"}, {"body": "agree ideal would problematic could probably pull request drop passing exception hoping somebody familiar internals jquery would willing pick awesome", "d": "1/2017"}, {"body": "duplicate already fixed master included", "d": "1/2017"}, {"body": "per single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately example exactly passes single argument array containing object happens deferred thus donecallback executed immediately sounds like may want use whenapply", "d": "1/2017"}, {"body": "oh apologize misread signature thank help", "d": "1/2017"}, {"body": "fastfasterfastest wondering might opportunity document clarification ran problem cervengoc reason calling think helpful see mention like single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately includes arrays deferredpromise objects call jquerywhenapply array", "d": "1/2017"}, {"body": "documented way mozilla documents things would think probably would clearer applies jquery api calls well may trivial update make documentation change case think proper venue discuss may", "d": "1/2017"}, {"body": "example asking style property element document value would expect ca nt know rules may apply element inserted document since may different cascading rules depending inserted", "d": "1/2017"}, {"body": "see also think sufficiently ambiguous solved browser people make assumptions detached elements", "d": "1/2017"}, {"body": "hi dmethvin got point support option people make assumptions detached elements also great favor nt think bug jquery coding like thanks help", "d": "1/2017"}, {"body": "using jquery need upgrade problem nt jquery example", "d": "1/2017"}, {"body": "jquery behavior changed area seen hidden firefox chrome still issue", "d": "1/2017"}, {"body": "reopening based updated test case still needs decided whether something canshould fixworkaround", "d": "1/2017"}, {"body": "whoa nice one order support delegated events mouse pointer enterleave jquery uses corresponding overout event looks determine whether pointer actually entering leaving parent element seems bug chrome event reporting shadow dom element inside shadow dom called reporting jquery ca nt find element current thinks pointer must left building fires event see problem action turn settings show user agent shadow dom inspect screen shot attached", "d": "1/2017"}, {"body": "rbyers look like bug", "d": "1/2017"}, {"body": "whoa yes chrome bug thanks sorry trouble get fixed asap likely chrome guessing wo nt hard", "d": "1/2017"}, {"body": "chrome patch sounds like good", "d": "1/2017"}, {"body": "hello take tell proceed", "d": "1/2017"}, {"body": "incorrectusername sure find details contribute info commits prs", "d": "1/2017"}, {"body": "longer supporting releases problem still exists line please provide live test case eg jsfiddle js bin help us diagnose issue", "d": "1/2017"}, {"body": "please look programming help stack overflow ca nt debug app", "d": "1/2017"}, {"body": "thanks report however migrate guides lie issues reported could rereport one would like prepare pull request relevant file", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thanks report observed behavior expected jquery object create represents outer nt contain another invoke parts selector need lie inside element different works think documentation clear enough please open issue andor pull request", "d": "1/2017"}, {"body": "submitted correct behavior browsers implementing although still add new tests issue nt want override host environment offsetparent logic instead think deprecate already eliminates internal use", "d": "1/2017"}, {"body": "thanks hopping looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property", "d": "1/2017"}, {"body": "also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case", "d": "1/2017"}, {"body": "looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property explicitly fact soon documenting reliable elements transformed ancestors cf although may change future step towards also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case depends situation case far better live host environment definition upon box model properties depend impose cssom view algorithm start diverging dom css properties variety painful incompatible ways words report relative actual offset parent relative offset parent", "d": "1/2017"}, {"body": "whoops wrong button certainly appreciate suggesting technically right thing concerned consumers jquery start writing checks implementation offsetparent current browser supports code around use position offset nt seem like positive step fundamental library web situation worth exactly found bug sent email several hundred browser developers company warning hey nt rely method anymore check existing uses", "d": "1/2017"}, {"body": "hmm exploring live examples see mean guess like pr land update match spec add back", "d": "1/2017"}, {"body": "fine thank", "d": "1/2017"}, {"body": "hello think fix issue jquerynodename function removed srccorejs added srcdeprecatedjs correct wrong missing somethingcan take issue work approach", "d": "1/2017"}, {"body": "would great find information contribute info commits prs far required work issue work needed jquery core also want add warning jquery migrate plugin", "d": "1/2017"}, {"body": "clarify done know got pr eliminate internal calls order warn jquery migrate create internal put srcvarnodenamejs change internal calls new function expose internal deprecatedjs sound right everyone", "d": "1/2017"}, {"body": "dmethvin yes exactly said days ago", "d": "1/2017"}, {"body": "although seems nt varmodule case exported function", "d": "1/2017"}, {"body": "mgol oh sorry missed", "d": "1/2017"}, {"body": "looking distributed version jquery contains sizzle contains every single instance feature detection uses example linked rehash history feature detection first paragraphs address issue type conversion short history shows bad idea history enlighten us issues regardless fact sizzle originates another repository addressed makes lion share jquery know talk eliminating future nt help present jquery users feel free address wherever makes sense really know referring could saved time moving issue wherever sizzle maintained sorry confusion", "d": "1/2017"}, {"body": "feature detection drawbacks sometimes browser detection hat best strategy", "d": "1/2017"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "supposed actually use follow documentation fails", "d": "1/2017"}, {"body": "logic broken shadow dom return false elem shown shadow dom change works notice getrootnode new feature may require polyfill awful maybe access parentnode recursively javascript var ishiddenwithintree function elem el", "d": "1/2017"}, {"body": "removing deprecating", "d": "1/2017"}, {"body": "farseeing nothing changed respect external tooling relying interfaces hand plan big event refactor among things make possible support passive event listeners possible method change process maybe go away knows", "d": "1/2017"}, {"body": "anybody else curious issue think relevant chromium issue", "d": "1/2017"}]