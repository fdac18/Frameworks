[{"title": "component missing documentations", "body": "part functions", "num": "12760", "d": "12/2015"}, {"title": "qunit emptyobject", "body": "versions qunit prior possible compare object without constructor one constructor special exemption made stefanpenner reported issue goes bunch detail fixed upstream qunit released part qunit unfortunately perfectly matched scenario fixed use value qunit specifically checking unsure change internal use update qunit detect falsey love stefanpenner leobalter thoughts", "num": "12756", "d": "12/2015"}, {"title": "ca nt require nodejs core modules", "body": "ca nt use npm package requires nodejs core modules like gives error missing something way use nodejs core modules ember", "num": "12751", "d": "12/2015"}, {"title": "view deprecation version enablelegacyviewsupport aware", "body": "upgrading app realized views listed deprecated however work addon especially confusing using deprecation workflow targeting deprecations deprecations app throw errors view object undefined", "num": "12748", "d": "12/2015"}, {"title": "thisactions application route undefined", "body": "using ember data defined actions application route try access undefined see twiddle move twiddle upto ember data works correctly appears resolved ember onwards opening issue incase either couldshould backported ember b fixed accident nt tested needs test adding c could nt see anything like anywhere search may save someone else time upgrade", "num": "12743", "d": "12/2015"}, {"title": "website tutorial mirage json api", "body": "tutorial website shows use mirage gives test data json api format however nt work changed format dummy data router great framework bit frustrating newbie trying get started perhaps incorrect setting somewhere please make clearer thanks", "num": "12742", "d": "12/2015"}, {"title": "option preventdefault helper action works literals", "body": "title selfexplanatory twiddle", "num": "12740", "d": "12/2015"}, {"title": "emberassign undefined", "body": "using ember trying use defined however seems undefined see twiddle", "num": "12739", "d": "12/2015"}, {"title": "objects length property evaluate false handlebars conditionals", "body": "using template conditional objects property equal conditonal evalutes false render expected twiddle example object greater evaluate render properly believe objects might treated arrays leading issue", "num": "12738", "d": "12/2015"}, {"title": "possible regression handing promise component via template", "body": "reference may nonissueknown issue undefined behavior becoming fixed confused want understand happened updated app involved adding extra promise handling component old worked previously update undefined call change able work around really interested", "num": "12732", "d": "12/2015"}, {"title": "tutorial broken", "body": "hey trying complete tutorial code examples seem bit buggy came point install mirage edit config file first copy pasting get error easy fix want replace static array indexjs work loop loop seems mirage data get returned even inspector reports wrong code", "num": "12727", "d": "12/2015"}, {"title": "ember old way settable computed property nt work depreciation thrown", "body": "updating website ember computed property send doubleway biding child child set parent computed property nt trigger realized later noob ember coder new way nothing talk depreciation old code working parenthbs parentjs", "num": "12724", "d": "12/2015"}, {"title": "triggered classattribute bindings change", "body": "javascript var foobarcomponent embercomponentextend foo false bar false classnamebindings foo onrerendered function triggered changes triggered changes didrender didrenderfoobardidrender hook triggered value changes", "num": "12723", "d": "12/2015"}, {"title": "document index block parameter", "body": "documented guides api", "num": "12721", "d": "12/2015"}, {"title": "error evaluating assertion condition htmlbars", "body": "using ember emberclihtmlbars accidentally put quote wrong place hbs reasons nt completely understand causes error evaluating condition assertion sure correct behavior intuitively expect generate oddlynamed property element would easy diagnose", "num": "12720", "d": "12/2015"}, {"title": "objectspop function transitionto", "body": "may weird bug proper way things think important known route structure like service use keep track currently well transitions navigation component related nested route example looking debugger could nt find corresponding code repo listed js createparamhandlerinfo function name handler names objects oldhandlerinfo var params appears objectspop expecting array however recieves string passed corresponding fix change line service", "num": "12719", "d": "12/2015"}, {"title": "handling undefined closure actions passed attributes", "body": "sometimes users may wantneed handle subset actions sent component example imagine component sends actions like case care handling click button passing attribute component however ember throws vague error encounters action handler button b template component undefined made ember twiddle want see action two workarounds undesirable opinion specifiy instantiating component templatehbs map empty dummy action controller less ideal bunch useless thus potentially misleading code handle click button b via action componentjs file check see specified call merely implementing middleman forward action chain gets tedious many nested components exactly thought closure actions meant prevent guess downside allowing action handlers optional would users risk simply forgetting define action handlers could produce warning console instead throwing error", "num": "12718", "d": "12/2015"}, {"title": "positional param value leaks inner data used combination nested component helpers", "body": "component positional param use combination nested component helpers following component code js let mycomponent componentextend didreceiveattrs let value thisgetattr value consolelog value mycomponentreopenclass positionalparams value logged object attributes fails using try add failing test get also believe serabe delighted hear", "num": "12717", "d": "12/2015"}, {"title": "willdestroyelement firing else", "body": "example hook firing torn works example b jsfiddle", "num": "12716", "d": "12/2015"}, {"title": "ember getting attributes components", "body": "ember appears getting attribute passed component longer works using instead must use syntax without supposed removed could nt find changelog removed deprecated see back added option", "num": "12713", "d": "12/2015"}, {"title": "gathering feedback support native es properties computed properties", "body": "issue intended gather feedback making computed properties gettable settable via native properties addition methods example instead could benefits issues native property swapped computed property requiring api consumers switch alt defensively coding time case better autocompletediscoverability repls ides less typing natural js even ca nt applied across board since still deal nativenonember objects nt drawbacks obviously wo nt work nt actually call rarely used classes tend declare actual properties however object actually takes arbitrary properties like es map still proposing removaldeprecation like methods better use still think would nice use native accessors majority cases nt even want", "num": "12709", "d": "12/2015"}, {"title": "manual refresh nested child route causes unexpected refresh parent routes including application route", "body": "based documentation routerrefresh found pasted would seem refreshing route ever cause refreshed route children refresh however refresh leaf route application controller using found parent routes actually refresh including application route hooks route configuration looks like inside controller call ends triggering hook application route explore route tag route jsbin put together demonstrate issue click links get button watch console output see parent routes refreshing bug incorrectunclear documentation using wrong expected behavior thank", "num": "12707", "d": "12/2015"}, {"title": "exposed templates", "body": "opening issue since closed listed property possible consume value js like property", "num": "12703", "d": "12/2015"}, {"title": "nested routes reset namespace oddities", "body": "please consider first page load defined weird comment linkto fails page load able click standalone link look url new page exist per another weird thing removing last route projects new transitioned url seems last route defined takes precedence normal behavior really confusing also states", "num": "12702", "d": "12/2015"}, {"title": "routes empty paths steal indexes", "body": "problem nonleaf route ie child routes empty path steal index parent examples example toplevel twiddle case resolve full path rather another example nesting twiddle case resolves correctly transitioning resolve rather bug convince bug multiple ways first consider happens two sibling routes empty paths map trick question map currently last route wins secondly easy add redirect want preserve current behavior implementing redirect way much painful lastly implications isolation mounted engines wo nt bother fleshing point engines nt exist yet", "num": "12700", "d": "12/2015"}, {"title": "issue allowing group attributes input helper emberjs", "body": "trying use allowing several attributes input field validating form using jqueryvalidate plugin jqueryvalidate plugin uses twenty attributes type form fields including input field issue tedious find possible attributes supported jqueryvalidate form field bind input helper sample code much easier use something like", "num": "12697", "d": "12/2015"}, {"title": "didreceiveattrs picking changes arrays objects", "body": "title says expected bug", "num": "12696", "d": "12/2015"}, {"title": "error thrown applicationroute load error substate", "body": "nt know whether something new intentional came accross wanted report applicationroute data initialization beforemodel model hooks fetch data server order display base sceleton application case server responding server get error back instead seeing error applicationerror substate error gets logged browser console page empty showing error substate works perfectly route demonstration purposes created jsbin find", "num": "12695", "d": "12/2015"}, {"title": "input textarea template helpers throw yielded", "body": "example twiddle components yield component helper helper click button run code see error inside js console yielded using component helper work without throwing throws throws", "num": "12690", "d": "12/2015"}, {"title": "poor performance initial render android devices", "body": "good day moment company developing three applications ember versions faced problem poor performance initialial render ember application version android devices know glimmer engine ember made gains speed update state loses performance initialization state accordingly question core team plans rewrite glimmer engine order increase performance initial render state application planned ember version thank much understanding", "num": "12689", "d": "12/2015"}, {"title": "emberisarray return true filelist object", "body": "passing filelist object emberisarray returns true even though behave like ember arrayenumerable sure within scope ember jsbin interesting bit file spec filelist interface considered risk since general trend web platform replace interfaces array platform object ecmascript particular means syntax sort filelistitem risk programmatic use filelist unlikely affected eventual migration array type", "num": "12688", "d": "12/2015"}, {"title": "guide tutorial ember data", "body": "hello everybody trying start ember course going official guide good far problem adding mirage mix specifically step errors get follows go see currently using default dsrestadapter adapter ember default adapter dsjsonapiadapter would like continue using dsrestadapter please create application adapter extends dsrestadapter default behavior shouldreloadall change ember data always return false least one rental record store would like preserve current behavior please override shouldreloadall adapter application return true assume warnings ignore error followed guide line line adding mirage decoupling hardcoded rentals array get error component displayed ever data however gets pulled correctly rentals wo nt correctly mapped templates use please help thanks", "num": "12684", "d": "12/2015"}, {"title": "bug feature run loop render engine", "body": "hello array ember objects render template component helper follows replace array another one contains new objects old ones components underlying old objects never destroyed show right order instead ember somehow figures components render object nt destroy expected behaviour example functions renderinitialobjects gt objects set objects objects statechanged gt objects new array set objects objects case statechanged ember would nt render new component underlying use old one instead", "num": "12683", "d": "12/2015"}, {"title": "make null values inherently htmlsafe", "body": "nt property set controller yet could set init function similar get deprecation notice binding style attributes example hbs fix must explicitly following seems little overkill", "num": "12681", "d": "12/2015"}, {"title": "actions access event vital event types", "body": "without event makes sense key event actions", "num": "12679", "d": "12/2015"}, {"title": "yielded contextual components block form nt update", "body": "yielded components block form currently nt update example jsbin current ember clicking button components print output", "num": "12678", "d": "12/2015"}, {"title": "action value onxxx attribute crashes exception", "body": "demo focus input exception console chrome browser documented", "num": "12676", "d": "12/2015"}, {"title": "update legacy application", "body": "application run ember emberdata anyone tutorial upgrade latest version ember emberdata tried many problems handlebars mainly emberdata bowerjs packagejs tks", "num": "12675", "d": "12/2015"}, {"title": "linkto lookup fallback default template expensive", "body": "", "num": "12672", "d": "12/2015"}, {"title": "dynamic parameters dynamic components", "body": "hi pass hash params component im looking something like", "num": "12671", "d": "12/2015"}, {"title": "difference layoutname behavior", "body": "expect bsinput component show template changing layoutname init another component setting layoutname nothing bsinput component rendered template setting layoutname works bsinput component rendered template believe related intentional regression new way without use component helper", "num": "12670", "d": "12/2015"}, {"title": "errors thrown route model hooks nt hit global handler", "body": "try track issues error handling reporting brought attention via jherdmanemberclitrackjs errors thrown various model hooks nt hit global error handler jsbin", "num": "12669", "d": "12/2015"}, {"title": "keypress action input access event", "body": "keyup pass event object second argument action handler keypress demo", "num": "12667", "d": "12/2015"}, {"title": "enter argument input helper nt work", "body": "hi read docs tell action set enter argument triggered user hits enter form submission tests show different behaviour trigger enter action demo", "num": "12665", "d": "12/2015"}, {"title": "better way getting query params router", "body": "", "num": "12663", "d": "12/2015"}, {"body": "broken since assume commit bugfix beta change preference positional parameters", "d": "12/2015"}, {"body": "think solved similar issue closure components take look", "d": "12/2015"}, {"body": "serabe yeah came across searching submitting issue familiar codebase param binding regular components nt changed much might little harder solve", "d": "12/2015"}, {"body": "game updating qunit also interested see stefanpenner thoughts emptyobject using null constructor seems like good idea well", "d": "12/2015"}, {"body": "ca nt use node packages core otherwise browser runtime", "d": "12/2015"}, {"body": "possible via emberbrowserify believe need", "d": "12/2015"}, {"body": "yes using emberbroserify include node packages wondering way include core pacages move issue emberbrowserify", "d": "12/2015"}, {"body": "originally going pr fix make deprecation unconditional version dependent prop however break addon tests probably teams utilizing deprecation workflow silence deprecations thinking right fix might change version throw enabled", "d": "12/2015"}, {"body": "ya really bug ember moved mostly due way actions hash added allow folks using property path forward progressed cycle usage anything actions hash became uncommon various tooling stuck using things like twiddle needing access actions hash directly support ember something like", "d": "12/2015"}, {"body": "also nt breaking change accessor allow older pattern using deprecation tested", "d": "12/2015"}, {"body": "perfect thankyou agreed bug", "d": "12/2015"}, {"body": "fwiw changed exactly scenario mega annoyingconfusing defined thing runtime", "d": "12/2015"}, {"body": "haha yes exactly first thought one addons use somehow broken anyway updated answer original question help others", "d": "12/2015"}, {"body": "issue solution provided emberjs community needhelp slack channel include json serializer emberdata add following file app appserializersapplicationjs import ds emberdata export default dsjsonapiserializerextend", "d": "12/2015"}, {"body": "experienced issue resort changing format data returned mirage similar auspayroll maybe issue also opened emberjsguides repo", "d": "12/2015"}, {"body": "thank report", "d": "12/2015"}, {"body": "phcoliveira examples description might gotten attention quickly protip future correct literals work either raise better error support bound values per serabe work", "d": "12/2015"}, {"body": "use need enable feature flag embermetalemberassign see detail", "d": "12/2015"}, {"body": "tricknotes thanks tip seems api documentation would benefit clarifying particular feature available via particular feature flag api documentation gave hint required method", "d": "12/2015"}, {"body": "jakedetels looks like bug api doc", "d": "12/2015"}, {"body": "yeah feature flagged api docs get properly stripped", "d": "12/2015"}, {"body": "kevinkucharczyk looks like bug seems check length done array object property equals false example object treated falsy", "d": "12/2015"}, {"body": "relevant code", "d": "12/2015"}, {"body": "related issue", "d": "12/2015"}, {"body": "digging around see much heavily qualified check length property basically exists nonnegative integer hand would guess property arbitrary object would fairly likely positive integer sure would perfectly satisfactory edit also checks closer examination may settle things", "d": "12/2015"}, {"body": "kellyselden put together jsbin embertwiddle example reproduces issue question perhaps demoable example help well", "d": "12/2015"}, {"body": "pixelhandler yeah make time", "d": "12/2015"}, {"body": "fwiw done something similar helper components nt care promises javascript apphelperspromisevaluejs import ember ember export default emberhelperextend value null compute promise thispromise promise thispromise promise emberrsvpresolve promise value gt thisset value value thisrecompute usage component could simply update accordingly promise resolves", "d": "12/2015"}, {"body": "digging repro ca nt get initial working case working promises leads believe may way emberdata setting relationship promises since updating breaking change fair game conclusion better understand issue goal happy holidays", "d": "12/2015"}, {"body": "rlivsey turned example addon use multiple projects fyi", "d": "12/2015"}, {"body": "nt missing model", "d": "12/2015"}, {"body": "oh forgot add pastebin", "d": "12/2015"}, {"body": "found error wrong ember version installed guessed using would install latest version manually change version ember emberdata bowerjson", "d": "12/2015"}, {"body": "ngouy update first resolve deprecations", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "nope boses thought lost time ok bad closing", "d": "12/2015"}, {"body": "ty", "d": "12/2015"}, {"body": "ngouy deprecation warnings thrown cycle need update resolve deprecations upgrade cycle", "d": "12/2015"}, {"body": "noticed thanks", "d": "12/2015"}, {"body": "also addon helping work deprecations lot", "d": "12/2015"}, {"body": "seems rlly great thank u made day", "d": "12/2015"}, {"body": "pretty sure supposed render nothing template changed ie reason template render rendered output dom identical put template see called", "d": "12/2015"}, {"body": "added", "d": "12/2015"}, {"body": "would love pr adding docs", "d": "12/2015"}, {"body": "add soon one gets around", "d": "12/2015"}, {"body": "would like take get back pr", "d": "12/2015"}, {"body": "closing favor", "d": "12/2015"}, {"body": "create simple demonstrate greatly speed debugging", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "thanks finding mixonic searched around issues apparently nt using enough right terms sorry dupe sweatsmile", "d": "12/2015"}, {"body": "create simple demonstrate would greatly speed ability check thanks", "d": "12/2015"}, {"body": "weekend", "d": "12/2015"}, {"body": "create simple demonstrate would greatly speed ability check thanks", "d": "12/2015"}, {"body": "courthead error poor idea provide action intentional reason mention favor improving error options present today get optional action behavior want handle optional action component check see present calling mention imo expect people reach today js appcomponentsmycomponentjs import ember ember export default embercomponentextend actions clickb function let action thisget clickb action return action arguments use noop helper bit lazy use optional action pattern lot perhaps makes sense js apphelpersnoopjs import ember ember export default emberhelperhelper function return function possible ways make better allow tag bodies trick pattern applicable components add something like ember helper allow crazy one would painful w typos quite hard make unbalanced templates work nt solve usecase many optional listeners element though read clearly add option actions already several options though solution composing current helpers would elegant solution pretty simple hope helps ponder usecase raised times", "d": "12/2015"}, {"body": "also make noop function helper always use action helper nt error attrsfoo nt passed", "d": "12/2015"}, {"body": "thanks suggestions super helpful go noop helper like makes explicit right template action optional relatively small amount code also similar reasons possible solutions suggested mixonic like option action helper", "d": "12/2015"}, {"body": "mixonic fwiw could nt get noop helper work trying allow optional actions components rather html elements went js apphelpersoptionalfunctionjs import ember ember export default emberhelperhelper optionalfunction orderedargs namedargs const actionfn orderedargs return function event return actionfn actionfn event undefined", "d": "12/2015"}, {"body": "think helper meant used whenever want use action", "d": "12/2015"}, {"body": "reproduce please provide info remove quotes around get expected error component path null simulates closure code get two try modify twiddles show failure thank reporting", "d": "12/2015"}, {"body": "serabe seems contextual helper needed trigger bug", "d": "12/2015"}, {"body": "thank fixing today hopefully", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "need mixonic rwjblue guidance problem rendered fact actually really important htmlbars finds thinks would happen call problem arises sends parameters seen tried removing value inside array tests pass submit pr reason code test ember custom htmlbars", "d": "12/2015"}, {"body": "reopening get updated version serabe submit pr updating htmlbars", "d": "12/2015"}, {"body": "using still correct way reproduce ember twiddle", "d": "12/2015"}, {"body": "working fine gt", "d": "12/2015"}, {"body": "think tracked happening using third party component emberclipagination uses binding magic sure officially called looks like precedence data returned changed maybe intentional sure since nt know exactly describe use twiddle modified sourvb example try ember returns emberman ember returns undefined note difference sourvb example presence component value undefined check", "d": "12/2015"}, {"body": "ember ember report emberman seeing either version drewclauson please clarify demo failing example", "d": "12/2015"}, {"body": "rwjblue sorry must saved twiddle ember returns undefined ember returns emberman", "d": "12/2015"}, {"body": "similar scenario dropdown component relies set extract identifiers selected items calling computed property returned properly set value consuming component default value returned instead ex javascript optionvaluepath id optionlabelpath text selecteditem computed selectedvalue get let selectedvalue thisget selectedvalue return thisparseitemfromselectedvalue selectedvalue set key value let selecteditem thiscoerceitembasedondropdowntype value let selecteditemvalue method called correct value remains instead set template", "d": "12/2015"}, {"body": "drewclauson nt understand binding component benefit code provide", "d": "12/2015"}, {"body": "pixelhandler sure arbitrary string resolves undefined binding component updated examples demonstrate change versions ember returns emberman ember returns emberman", "d": "12/2015"}, {"body": "pixelhandler sorry think asking would need reason change behavior might concern someone component created either passing object settings attributes live example see emberclipagination either pass pagedarray gets set component content object pass page totalpages attributes move ember seems changed something causes precedence passed attribute using paging component without paged array opted refactor code project remove library currentpagebinding totalpagesbinding commented", "d": "12/2015"}, {"body": "likely better issue mind reopening chrisjshull", "d": "12/2015"}, {"body": "whoops roger", "d": "12/2015"}, {"body": "nt documented", "d": "12/2015"}, {"body": "recommended way checking presence block js", "d": "12/2015"}, {"body": "nt nice way right hacky workaround open issue rfc repository addresses", "d": "12/2015"}, {"body": "closing favor", "d": "12/2015"}, {"body": "fyi removing router resolves problems think bad karma declare multiple routes starting name", "d": "12/2015"}, {"body": "goal reuse buildings route route repeat controllers templates etc pretty much guides say link shared", "d": "12/2015"}, {"body": "believe duplicate juggy confirm close", "d": "12/2015"}, {"body": "confirm close button github oh well", "d": "12/2015"}, {"body": "bit analysis last route win always javascript barindex wins routermap function thisroute index path automatically added thisroute foo path function thisroute bar path function barindex wins routermap function thisroute foo path function thisroute bar path function thisroute index path maybe could automatically added end nope indexindex wins routermap function thisroute foo path function thisroute bar path function thisroute index path function give function wins index wins routermap function thisroute foo path function thisroute bar path function thisroute index path interesting confusing router supposed favour route least amount dynamic segments routerjs readme multiple matches routerecognizer prefer routes fewer dynamic segments postsedit match preference posts id match would make sense router also prefer routes fewest number levels without actually work testing would assume following could maybe fix bug prefer least amount nesting moving automatic route route definitions give example scenarios results see routes ones would win changes javascript dynamic segment result thisroute path id thisroute path dynamic segment result thisroute path thisroute path id dynamic segment nested result thisroute function thisroute looser path id thisroute path dynamic segment nested result thisroute path thisroute function thisroute looser path id dynamic segment nt nested result thisroute function thisroute winner path list thisroute path id dynamic segment nt nested result thisroute path id thisroute function thisroute winner path list dynamic segment result thisroute function thisroute loser path id thisroute path id dynamic segment result thisroute path id thisroute function thisroute loser path id dynamic segment result thisroute function thisroute loser path list thisroute path dynamic segment result thisroute path thisroute function thisroute loser path list looks really affect scenarios relevant index issue another idea larger change could something like adding nt allow passed behind scenes calls seperate logic priorities routes defined indexes others", "d": "12/2015"}, {"body": "use case explicit indexes nt fit mental model add assert", "d": "12/2015"}, {"body": "mmun since routes describe ui rare index actually describes anything always change eg page may list sibling detail route yeah behavior index actually rendered seems strange", "d": "12/2015"}, {"body": "btw jmurphyau thanks digging exposing edge cases think risky include nesting heuristic nt think intuitive mental model nesting primarily dom structure routing usecase thinking opposite deprecating empty paths replacing something like roughly expands without automatically creating index", "d": "12/2015"}, {"body": "would feature request nt think useful especially usecase tediousness nt good argument kind feature creating know attributebindings way go imho otherwise suggest passing options one object something like parse rules", "d": "12/2015"}, {"body": "aars case even parse rules directly pass rule object jqueryvalidate take care onetime job tediousness would nt good point issue maintaining components example update attributes form field components whenever jqueryvalidate updates include new attribute project uses lots attributes ui migrating client jsp emberjs case feature useful one understand simpler way extend form field component single js file simpler alternative would better way", "d": "12/2015"}, {"body": "nt see issue maintaining component one component supportsdefines datarule attributes jqueryvalidate introduces new attributes add component supports extra work right since using new attributes x amount fields would always mean defining x times value nt matter defining html elements ember components", "d": "12/2015"}, {"body": "ok trying use something like initializer attributes showing according tried using deprecated ember version using", "d": "12/2015"}, {"body": "interesting approach polyfill think good worked using", "d": "12/2015"}, {"body": "ok thanks", "d": "12/2015"}, {"body": "sourvb work well current problem resolved could close issue still want request feature look", "d": "12/2015"}, {"body": "actually reason working even tried getting attribute list objectkeys using input like template clue debug stuff", "d": "12/2015"}, {"body": "sourvb sounds like guidance community regarding input fields validation etc topic thread bug ember want propose feature rfc issue proposal way go already joined embercommunityslackcom chatroom seem options topic", "d": "12/2015"}, {"body": "thank pixelhandler aars check", "d": "12/2015"}, {"body": "rmmpaderes curious fact array changed array instance since content attr changed test attr appears result called assumption array swapped new array perhaps lifecycle hook would called technically attr changed length changed appears intended design lifecycle hook", "d": "12/2015"}, {"body": "pixelhandler yes exactly happening impression didreceiveattrs get fired changes attribute matter deep inside arrayobject okay guess didreceiveattrs would nt solution triggering event whenever property change guess still purpose computed properties", "d": "12/2015"}, {"body": "rmmpaderes yes absolutely still need computed properties pixelhandler correct example fired object changing", "d": "12/2015"}, {"body": "gkaran see embertwiddle applicationerror template handle error model hook application route error substates bit tricky also one think noticed either route error action applicaitonerrror template used", "d": "12/2015"}, {"body": "makepanic input textarea helpers expected work yielded fashion see example components xconcat xlink using concat component helpers work use canary feature yet yielding via looking example makes think may less terse way use yield hash expectation yield hash good way expose interface vs using helpers inside seems bit clever opinion personally expect see helpers used plainly hbs template rather used tersely speed design hash helper used yield function component curious links support use case textarea input helpers", "d": "12/2015"}, {"body": "yeah likely work via new contextual components feature serabe might another one time try tackle sometime next week", "d": "12/2015"}, {"body": "example work needs use helper said example work either since element helper one renders component given name work either add whitelist maybe tomorrow morning currently sunday think appropriate", "d": "12/2015"}, {"body": "simple thought thing keywords components components seem work think refactor keywords behave like could seem unfair seems like builtin component better syntax contextual components maybe something like old contextual components let discuss slack meet please cc mixonic", "d": "12/2015"}, {"body": "believe one reason public component apis fear would conflict glimmer versions things", "d": "12/2015"}, {"body": "mixonic possible yield hash containing input textarea disagree", "d": "12/2015"}, {"body": "agree less certain making example work nonglimmer components definitely crazy nonglimmer component", "d": "12/2015"}, {"body": "created pr tentative implementation feature play bit", "d": "12/2015"}, {"body": "working rewrite rendering engine wycats describing new system new repo replacing tildeiohtmlbars repo specific targeted ember version land ember version ready", "d": "12/2015"}, {"body": "thanks rwjblue quick response see new glimmer engine mentioned early stage development thoughts ready release month two maybe year need information making right choice development environment thanks", "d": "12/2015"}, {"body": "experience estimates free software generally bad pairing smilingimp say working quickly possible integration efforts would expect feature flag used canary around canary cycle perhaps completely finished perhaps beginning sure nt want get yelled wrong p", "d": "12/2015"}, {"body": "dmagunov androidchrome performance rendering discussion perhaps useful general kind discussion probably better slack channel", "d": "12/2015"}, {"body": "would nt say early stage development integration ember quite begun maybe mean core semantics complete number tests copied ember repository test edgecases already passing keep eye mon dec pm dmagunov notifications githubcom wrote thanks rwjblue quick response see new glimmer engine mentioned early stage development thoughts ready release month two maybe year need information making right choice development environment thanks reply email directly view github", "d": "12/2015"}, {"body": "thanks guys", "d": "12/2015"}, {"body": "joelcox yeah seems like bug using false perhaps avoid emberisarray", "d": "12/2015"}, {"body": "webgear seems like mirage response returned json api compliant rest compliant still still want use restadapter create file extends restadapter appadaptersapplicationjs import ds emberdata export default dsrestadapterextend namespace api", "d": "12/2015"}, {"body": "read different types adapters", "d": "12/2015"}, {"body": "ptgamr thanks response helped indeed rename couple things defaulting restadapter got working eventually renamed data rentals mirage config removed attributes amp type subkeys thought jsonapiadapter used default ember find really case either current ember install nt default reason looking adapters bit changed appadaptersapplicationjs file look like import ds emberdata export default dsjsonapiadapterextend data structure returned mirage correctly interpreted maybe mentioned guide well future users wo nt get issue could hinder progress learning framework ah one problem supposedly done testing need remove mirage instead use external api server mocked server php returns exactly data tutorial really sure completely uninstall mirage adding ember install also didnt find answer internet yet thanks cheers", "d": "12/2015"}, {"body": "webgear answer last problem documentation mirage basically nt need uninstall instead need change configurations read manual carefully", "d": "12/2015"}, {"body": "issue emberjs better brought stackoverflow discourse slack channel thanks", "d": "12/2015"}, {"body": "mixonic guides updated ran exact issue following guides z hit roadblock", "d": "12/2015"}, {"body": "sergiotapia yeah please open issue pr nt looked closely prefer someone explain problem describe well thanks", "d": "12/2015"}, {"body": "azsam indeed expected required reasonable performance model component need destroyedcreated work conserved change behavior using option please see feel free look guidance stackoverflow slack channel", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "rwjblue closed since prevents generating htmlsafe warning", "d": "12/2015"}, {"body": "yep thanks pixelhandler", "d": "12/2015"}, {"body": "ruz yes agree may need use event handler components instead seen", "d": "12/2015"}, {"body": "handlers components ok catch events elements within comp end ended using", "d": "12/2015"}, {"body": "cc serabe", "d": "12/2015"}, {"body": "present element accessor means treated attribute stringified version function set thus syntax error work chrome ruz immediate workaround attach event via jquery native apis wrapping component looking fixes part ember right related rfc", "d": "12/2015"}, {"body": "ok onfocus onblur work without exception spent much time ember docs forgot pair focusinfocusout closing", "d": "12/2015"}, {"body": "actually going leave open ruz think need land work rfc would addressed worked expected imo", "d": "12/2015"}, {"body": "agree discovered focusinfocusout actually part dom events spec slightly different focusblur pair ok focusblur pairs going stick syntax rfc says future action receives event really like idea keeping interactions events actions rather methods control", "d": "12/2015"}, {"body": "would suggest step step increase least significant version digit start app corresponding tests watch deprecation warnings fix start beginning another good source changes official emberblog see deprecations removals version", "d": "12/2015"}, {"body": "issue suited stackoverflow slack channel perhaps", "d": "12/2015"}, {"body": "dynamic parameters nt really supported time use need update component look various things instead root object side note generally agree would useful addition working adding syntax handlebars follow along closing nt really bug welcome new feature worked", "d": "12/2015"}, {"body": "work around set calling believe regression fix demo using workaround", "d": "12/2015"}, {"body": "seems bug", "d": "12/2015"}, {"body": "confirm fixed introduced another issue tracked another issuepr", "d": "12/2015"}, {"body": "issuepr", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "also one related route errors", "d": "12/2015"}, {"body": "ruz handle keyboard events access event object using event handler instead action work see think actions expected pass event object", "d": "12/2015"}, {"body": "bug report consistent", "d": "12/2015"}, {"body": "ruz way acess event object keypress also focusinfocusout need use keyupkeydown instead source code keypress using specific sendaction function wrote action xxx call another sendaction function used keyupkeydown sending input element value entering new charactor yep event object idea sent pull request fix sure whether proved", "d": "12/2015"}, {"body": "jennieji back", "d": "12/2015"}, {"body": "nightire thank albert", "d": "12/2015"}, {"body": "thanks expect write glimmer version helper change arguments passed make consistent however interested making change perpetuates inconsistencies event object passed well adding jquery api attempting move away passing jquery events around instead adding", "d": "12/2015"}, {"body": "please update documentation spent quite trying use helper event handler via helper arguments frustrating annoying time consuming experience", "d": "12/2015"}, {"body": "ruz nt think registered event see perhaps use ask embercommunityslackcom chat rooms best practices handing form submission using enter key", "d": "12/2015"}, {"body": "ruz listening form event event input cancel form submitting", "d": "12/2015"}, {"body": "also use action helper embers tells action deprecated use enter instead", "d": "12/2015"}, {"body": "tangmonk \u5982\u4f55\u4f7f\u7528 ember \u81ea\u8eab\u7684 github ember segmentfault", "d": "12/2015"}, {"body": "nightire ok thanks reply ember provide better get query params route function solution way native support like following better", "d": "12/2015"}, {"body": "tangmonk ever read official documentation", "d": "12/2015"}, {"body": "nightire thanks got get transition second parameter", "d": "12/2015"}, {"body": "mixonic warning glimmer contain move issue", "d": "12/2015"}, {"body": "trek improving error seems like glimmer thing adding ember nt seem like something controversial needs discussion", "d": "12/2015"}, {"body": "veebs perhaps open pull request remove link replaceroute looks like", "d": "12/2015"}, {"body": "pixelhandler really want remove link working fine otherwise create pull request", "d": "12/2015"}, {"body": "faced similar problems hook", "d": "12/2015"}, {"body": "ohcibi setting controller passing component corrected twiddle however confirms emitting action work basically fact strongly encourage use every case timing confusing using allow send action however encourage build components way application middle rendering going back make fruther changes state cause expensiveslow second render ember fact fire warning instead build components reflect state parent reflect state presence child component alter behavior parent instead presence child behavior parent reflections single source truth doubt work ensure works", "d": "12/2015"}, {"body": "gendelflugansk could elaborate problems see differ mine solution action actually work around rather concerned binding mixonic knew would confuse seen problem solved problem way said using ddau questions remain encouraging using latter introduced blog post reads like new way better ddau binding fixed name hook totally implies binding last thing wo nt work throwing warnings setting properties like appears right place set attributes shown wo nt work bound properties", "d": "12/2015"}, {"body": "encouraging using latter introduced blog post reads like new way better ddau everything goes perfectly first time around general hooks deemed quite immature probably continue immature glimmer components land binding fixed name hook totally implies binding last thing wo nt work throwing warnings setting properties like appears right place set attributes shown wo nt work bound properties much doubt add support sending actions hooks hooks timing right instance expect element element present well turns another thing expect send action happens nature hook sending actions available would later would like whole pattern sending action hook initrender avoided two strong reasons us add support asked see seen examples bound properties however need flow upstream basically following antipattern described sending actions", "d": "12/2015"}, {"body": "mixonic example commentedout hook sets property directly instead sending action please forget action concerned binding says issuetitle action fact even works ie gets triggered working binding matter direction thats put directions example commenting one understand data antipattern far understood binding nevertheless still available via optin say attributebinding iff available simply work hook called didinitattrs", "d": "12/2015"}, {"body": "ohcibi component creates object initializatioin passed template need pass object controller binding tried set property inside failed moved code thinking sending action instead setting property value works fine though ember throws warnings setting property inside", "d": "12/2015"}, {"body": "square brackets seem used beginning end instead twice item array correct make embertwiddle example", "d": "12/2015"}, {"body": "related bug", "d": "12/2015"}, {"body": "addressed reopening confirm", "d": "12/2015"}, {"body": "fix available", "d": "12/2015"}, {"body": "fix available nt know backported would likely accept pr", "d": "12/2015"}, {"body": "hi ianbale could expound exactly object scenario manually destroyed latest stable ember also seeing memory leaks speak", "d": "12/2015"}, {"body": "ping performance channel slack help", "d": "12/2015"}, {"body": "rwjblue care point right direction also pair minutes easier", "d": "12/2015"}, {"body": "also interested making happen", "d": "12/2015"}, {"body": "jfelchner lets try schedule time quick hangout screenhero session make path ping community slack", "d": "12/2015"}, {"body": "confirm still working", "d": "12/2015"}, {"body": "played around unit tests various levels yet find something passes ember fails including pull request anyone able see regression non ember data objects", "d": "12/2015"}, {"body": "adamknights believe broken since least tested version pr major release last one working", "d": "12/2015"}, {"body": "csantero love work help identify exact commit issue getting pr pass never got passing modify way", "d": "12/2015"}, {"body": "adamknights iirc file related tests moved otherwise test", "d": "12/2015"}, {"body": "twiddle work ember ember data work ember ember data interestingly dropping ember data version way works well work ember ember data", "d": "12/2015"}, {"body": "krisselden able investigate believe related work specifically gt", "d": "12/2015"}, {"body": "also running issue think marked bug played around trying find workaround best come throwing error within abort transition nt seem like right thing", "d": "12/2015"}, {"body": "issue turned forgot update matching version updated ember lib issue probably closed", "d": "12/2015"}, {"body": "added failing test issue master topaxi transitioningindynamicsegment going ember routing modules tildeiorouterjs unsure issue lies repository reported fixed", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "pixelhandler working since using ember quite long time", "d": "12/2015"}, {"body": "working issue question proposed fix came appears addresses desired behavior however creates using deprecated template property view error causing lot tests fail desired functionality thanks", "d": "12/2015"}, {"body": "happening ember", "d": "12/2015"}, {"body": "happening ember", "d": "12/2015"}, {"body": "kmiyashiro everything seems working expected still getting error console easily recreate twiddle load following console open see error ember nt seem appear", "d": "12/2015"}, {"body": "work around use trigger transitions bug remains unresolved javascript let redirectafterdidtransition embermixincreate redirectafterdidtransition args thisrouterone didtransition gt thisroutertransitionto args export default routeextend redirectafterdidtransition aftermodel thisredirectafterdidtransition index cloned twiddle added example note wait transition finish redirect", "d": "12/2015"}, {"body": "simpler version seems work well code javascript import ember ember mixin provides method abort current transition transition specified parameters takes arguments route transitionto necessary let abortandtransitionto embermixincreate abortandtransitionto args thisrouterrouteractivetransitionabort thisroutertransitionto args export default routeextend abortandtransitionto aftermodel thisabortandtransitionto index", "d": "12/2015"}, {"body": "fixed issue reported", "d": "12/2015"}, {"body": "experiencing ember well ignored true novtor mean send replace query params looking workaround", "d": "12/2015"}, {"body": "hi richmolj see jsbin example", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "probably break versions ember works needs undefined false sounds like possibly also issue", "d": "12/2015"}, {"body": "came across finally got around upgrading app surprised find deprecation listed need emberlegacyviews addon actually utilize deprecated classes etc someone filtering deprecations make jump could easily miss viewbased deprecations even worse missed blog post nt know addon sorry comment old issue nt know new issue added happy open issue andor pr think worthwhile despite little confusion one featureflag deprecations ftw", "d": "12/2015"}, {"body": "rwjblue issue probably closed", "d": "12/2015"}, {"body": "one alternative import export routescontrollerstemplates primary route sub route example route called root import root route", "d": "12/2015"}, {"body": "juggy great idea right would bring partial would use pull relevant routes like solution importing single file better mixin approach always felt bit hacky", "d": "12/2015"}, {"body": "also stumbled upon issue specifically destructionrecreation view changes actual parent owner view solved skipping initialization view parent view nt owner view triggering rerender would happen next time view needed updated first rerender update works fine dirty workaround path migrating components", "d": "12/2015"}, {"body": "gotchas first may toplevel div class emberview example emberwormhole emberpaper papermenu place divs top level although later class makes selecting application view hierarchy css difficult using rootelement negative side effects emberpaper menu handling since moves listener body whatever div create leaves legacy views addon difficult css classes customize root component whatever version routable components ugh edit ended adding class using little jquery afterrender run loop handler", "d": "12/2015"}, {"body": "closing enough reproduce seems stalled", "d": "12/2015"}, {"body": "case anyone stumbles onto issue double check initial action variable nt initialized null case setting empty string enough allow renderer proceed", "d": "12/2015"}, {"body": "dgeb thanks containerreset tips sure issue problem register new dsmodel new adapter new serializer dynamically need add new dsattr model first unregister old model old adapter old serializer register new model new dsattr new adapter new serializer without method return new attr", "d": "12/2015"}, {"body": "given new owner concept presence container registry owner think could right thing called specifically implement long mixed means owners container backing registry properly sync guarantee container instances get cleared still seems like good step forward", "d": "12/2015"}, {"body": "agree new owner concept provides nice solution previously unavailable talking rwjblue going prep pr add override instead registry changes made application instance lookups start think sufficient ie nt need special handling application method", "d": "12/2015"}, {"body": "anyone coming across later helpers ember real objects access services via initializer based injections example javascript export default emberhelperextend emberinjectservice compute params hash let thisget stuff", "d": "12/2015"}, {"body": "lexlythius could give better example workaround ran error calling inside routeactionsrefresh action sure going", "d": "12/2015"}, {"body": "erichonkanen simply build target url manually complexities involved eg useful pieces windowlocation might good enough workaround environment variables controllers current path example route method properties js native function", "d": "12/2015"}, {"body": "lexlythius ok awesome ill try thanks", "d": "12/2015"}, {"body": "shameless ping machty new feature app caused bug surface major way love help get fixed willing dive need little direction", "d": "12/2015"}, {"body": "progress seems like simple fix include keyname property", "d": "12/2015"}, {"body": "issue potential solutions", "d": "12/2015"}, {"body": "well code question changed quite bit since reported line possible fixed meantime", "d": "12/2015"}, {"body": "still happens", "d": "12/2015"}, {"body": "ah yes line moved little still problem guess", "d": "12/2015"}, {"body": "solution except needed get id model query param pass actual model component controller cp basically storepeekrecord would nice able cps dsmodels alas notterrible workaround", "d": "12/2015"}, {"body": "looks like piotrze solution worked ember longer works", "d": "12/2015"}, {"body": "richmolj workaround still works", "d": "12/2015"}, {"body": "also seeing", "d": "12/2015"}, {"body": "simply closed missing exactly feature right imo request reasonable noone objected even pull request still closed without even reasoning supporting least could kept open time fix", "d": "12/2015"}, {"body": "workaround controller add observer changes query param next run loop set example wanted remove query param url approach works nicely js import ember ember export default embercontrollerextend queryparams token token null unsettoken emberobserver token function thisget token emberrunnext function thisset token null", "d": "12/2015"}, {"body": "caught liveupdating clock page tested", "d": "12/2015"}]