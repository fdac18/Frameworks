[{"title": "move sproutcoredatetime package addon", "body": "longer used core framework stands like sore thumb compared rest ember", "num": "316", "d": "12/2011"}, {"title": "bundle jquery ember", "body": "right starter kit ships jquery separate file encourages people upgrade jquery including new version reality ember pretty tightly ingrained jquery breaks new upgrades example several tests failing using jquery minimize confusion ember admit pretty dependent specific jquery versions work correctly come bundled version", "num": "315", "d": "12/2011"}, {"title": "upgrade jquery", "body": "", "num": "314", "d": "12/2011"}, {"title": "non argument carrying regular helper calls treated bindings", "body": "regular helper called arguments handlebars treats binding instead helper bug also breaks debugger helper forced add fake arguments like debugger invoked correctly consider regular helper called yield lets say takes arguments called html title debugger yield generates following code javascript function handlebars helpers partials data helpers helpers emberhandlebarshelpers var buffer selfthis functiontype function helpermissinghelpershelpermissing undefvoid escapeexpressionthisescapeexpression databufferpush title true escaped helpersbind data typeof functiontype else undef helpermissingcall bind else databufferpush escapeexpression helpersdebugger data typeof functiontype else undef helpermissingcall debugger else databufferpush escapeexpression yield true escaped helpersbind data typeof functiontype else undef helpermissingcall bind else databufferpush escapeexpression return buffer yield treated binding case ideally helpers priority bindings besides collisions rare anyway considering helpers known template writer", "num": "312", "d": "12/2011"}, {"title": "blocks handlebars template", "body": "template blocks would enable containers created immediate knowledge children currently containerview used handle hardened views generic viewcontainers easily created example blocks could possibly generic container called mypagehandlebars could created follows note mypage written without explicit understanding use html title yield along comes user uses mypage would result html fancy page show something interesting another user might use mypage resulting html colors red blue green", "num": "307", "d": "12/2011"}, {"title": "objects viewcontrollers observes easier view insertions", "body": "creating custom ui requires viewcontrollers listen view handling inserted dom ex take css properties find clean way get notified ends following way javascript uicontrolledview emmixincreate didinsertelement function set isinsertedelement true uiviewcontroller scobjectextend view null didinsertelement function thisdidinsertelement observes viewisinsertedelement didinsertelement function think getting notified view events could useful create complex interactions info view controllers manage better interactions could created perhaps easier way approach find lg", "num": "306", "d": "12/2011"}, {"title": "emberjsdocs compile", "body": "cloning jsdoctoolkit docs directory git clone git jsdoc emberjsdocs ls readmemd emberconf jsdoc run installing nodejs view brew get following error executing run script githubemberjsdocs run throw e processnexttick error error event first tick typeerror call method runinthiscontext undefined objectinclude object modulecompile objectjs moduleload functionload eventemittertickcallback", "num": "305", "d": "12/2011"}, {"title": "handlebars collection helper could insert html element", "body": "wanting mention case nice feature request nt know whether case implemented find defining collectionview also content handlebars template thing content item defined another handlebars template nt need handlebars insert div element wrap content cause unnecessary inserted html code javascript collection emcollectionview elementid vlist contentbinding fxbrandcategories lt ojo inserted div element gt view emview class itemvlist view collection", "num": "302", "d": "12/2011"}, {"title": "rendering documentation", "body": "generation documentation loosing formatting sources browser nt know jsdoctoolkit nt know fix configure", "num": "298", "d": "12/2011"}, {"title": "emberempty", "body": "imho expectable behavior test emberempty function var string string fn function equals true emberempty null null equals true emberempty undefined undefined equals true emberempty empty string equals false emberempty true true equals false emberempty false false equals false emberempty string string equals true emberempty fn function changes equals false emberempty equals true emberempty empty array equals false emberempty empty object empty arrays functions also return tried make changes nothing nt broken tests", "num": "293", "d": "12/2011"}, {"title": "emberenumerablegeteach emberenumerablemapproperty", "body": "think method exactly maybe better alias documentation methods personally dislike name mapproperty prefer pluck maybe intuitive api better pairs like geteach seteach map mapproperty invoke pluck", "num": "292", "d": "12/2011"}, {"title": "allow programmatic control named childview constructor", "body": "thought float pattern comments submitting codeoccasionally find writing several similar view classes whose primary difference class object sense css child view two contrived example discussion two overlays one used display photo one used display error messages view appphotoview view apperrorview abstract class never instantiated appoverlay scviewextend classnames overlay click function thisset isvisible false appphotooverlay appoverlayextend templatename photooverlay photobinding appphotoscurrent apperroroverlay appoverlayextend templatename erroroverlay errorbinding apperror nt terribly onerous template overlay subclass small entirely overwritten complex templates easy stray cut paste programming territory image two autocomplete textfields whose difference itemviewclass want apply collection found search terms end reproducing slightly complex template multiple child views structural markup customize single propertypiggypacking handlebars support properties like viewname itemviewclass found able specificy child view classes programmatically cut lots template redundancy view viewnamecontents appphotooverlay appoverlayextend contentsviewclass appphotoview photobinding appphotoscurrent apperroroverlay appoverlayextend contentsviewclass apperrormessage errorbinding apperror interested hearing whether problem people encountered much strategies used", "num": "291", "d": "12/2011"}, {"title": "emobject destroy parity create causes memory leaks bindings watchers listeners", "body": "updated changed title reflect core issue doc destroys object setting isdestroyed flag removing metadata effectively destroys observers bindings circular references bindings create chainwatchers nt true emobjectcreate connect bindings destroy wo nt disconnect add listeners destroy wo nt remove watch properties destroy wo nt unwatch since actions create circular references longer lived objects controllers cause memory leaks particularly noticeable creatingdestroy short lived views like list item view destroying view bound longer lived object leaks destroyed views longer lived object meta obj chainwatchers property seems leaks seems closure jquery tried different versions jquery leaked string view fragments easier use memory profiler direct url", "num": "290", "d": "12/2011"}, {"title": "ember jqueryui tabs ie", "body": "hi folks process deploying emberjs existing site currently uses jquery jquery ui tabs widget works swell webkit ff getting popup stack space error took long time get conclusion created test scenario stripping away everything simply uses tabs demo ember js include", "num": "289", "d": "12/2011"}, {"title": "state manager infinite loop gotostate", "body": "time empty nonexistent state provided gotostate statemanager enter infinite loop", "num": "283", "d": "12/2011"}, {"title": "enable wiki emberjs github repo", "body": "community add useful links howto", "num": "282", "d": "12/2011"}, {"title": "emberruntime test fails ubuntu", "body": "ran got error current googlechrome everything fine", "num": "281", "d": "12/2011"}, {"title": "create item todoexample slow", "body": "adding new item todoexample shows noticeable delay new item appears list maybe seconds configuration windows firefox old thinkpad chrome delay shorter still noticeable tried profile firebug could nt get obvious resultsbottlenecks mentioning todoapp probably lots people look comparing jsframeworks far ember knockout todoapps definitely slower backbone might put people", "num": "280", "d": "12/2011"}, {"title": "selectoption view", "body": "would nice similar thing built thanks", "num": "279", "d": "12/2011"}, {"title": "bpm preview returns syntax errors bpmlibsjs since", "body": "vendored emberjs bpm application thus replaced since release application start due syntax error generated bpmlibsjs error occurs syntaxerror unexpected token epevaluate function text sandbox filename return eval text seem able get value text", "num": "278", "d": "12/2011"}, {"title": "syntax error", "body": "version starter kit syntax error line possibly due minimizer bug", "num": "276", "d": "12/2011"}, {"title": "input elements bindattr", "body": "deal input fields like example bindattr one way model view ember way deal user input", "num": "275", "d": "12/2011"}, {"title": "fully document emberstates", "body": "", "num": "272", "d": "12/2011"}, {"title": "multiple bindattr uses one element fails quietly", "body": "works fine realized bindattr takes multiple attributes rendering initial values binding updates multiple uses bindattr supported make fail loudly attempt patch tell way go", "num": "271", "d": "12/2011"}, {"title": "models", "body": "lots buzz auto updating templates bindings ember nothing models server side synchronization idea work ember thought load db records object name model", "num": "270", "d": "12/2011"}, {"title": "automatic dependencies computed properties", "body": "engg applications one property depends complex formula involving properties turn depends ones complex engg web application dependent properties also user editable constants everytime user changes anyone entire formula reevaluated apps going living hell keep track dependencies would better emberjs smart enough figure dependencies computed property", "num": "269", "d": "12/2011"}, {"title": "cases called nt exist", "body": "see details fix since fix address root problem opening separate issue", "num": "268", "d": "12/2011"}, {"title": "getting bound window juggernaut callback", "body": "emberjs pants getting bound window wycats yeah think know wycats ticket plz", "num": "267", "d": "12/2011"}, {"title": "emberjs used expressjs framework", "body": "apologies question sounds stupid emberjs used within expressjs framework boilerplate like one learning javascript rather development within language thanks", "num": "265", "d": "12/2011"}, {"title": "better documentation reopenclass", "body": "note renamed accurate reopenclass nt work javascript var person emberobjectextend hey personreopenclass isperson true personcreate get hey returns personcreate get isperson returns undefined something wrong", "num": "264", "d": "12/2011"}, {"title": "nonwebkit browsers opera firefox throwing error template loading", "body": "simplified test case opera stack trace uncaught exception error emberview unable find template president error thrown line column key value throw new embererror fmt unable find template templatename called via functionprototypecall line column obj keyname ret cache keyname thisfunccall obj keyname called line column obj keyname return descget obj keyname called line column buffer var template get template called line column parentbuffer bufferoperation thisrender buffer called line column var buffer thisrendertobuffer called line column view fn viewcreateelement called via functionprototypeapply line column name return fnapply args called via functionprototypeapply line column invoke target method args ignore return methodapply target args called line column iter item invoke itemtarget itemmethod itemargs reproduction save gist load page note content appear safari chrome note content appear firefox opera comments believe least appearing page point process throwing error seen firefox opera display content momentarily either race condition loading template", "num": "259", "d": "12/2011"}, {"title": "trying generate documentation", "body": "followed instructions get error throw e processnexttick error error event first tick typeerror call method runinthiscontext undefined objectinclude object modulecompile objectjs moduleload functionload eventemittertickcallback", "num": "258", "d": "12/2011"}, {"title": "investigate whether super possible without indirection", "body": "may possible cache result looking super avoid constant indirection worried debugging purposes performance", "num": "257", "d": "12/2011"}, {"title": "compatible node", "body": "wondering ember compatible node listed pages", "num": "256", "d": "12/2011"}, {"title": "making scset shift fifo lifo", "body": "trying implement notification ui based fifo queue tried scset found could nt use shift collection like could traditional js array design someone need implement shift pop first element collection completely using wrong thing", "num": "255", "d": "12/2011"}, {"title": "make work ender", "body": "currently writing new app allnode stack like avoid bpm possible much work would make ember endercompatible", "num": "250", "d": "12/2011"}, {"title": "contacts example nt work ipad", "body": "sure right place report todos works fine", "num": "249", "d": "12/2011"}, {"title": "branding website", "body": "would like volunteer design emberjs website really want framework succeed would like create high quality marketing documentation design begun prototyping would like blessing proceed", "num": "247", "d": "12/2011"}, {"title": "strobeappcom links readme return errors", "body": "accordingly possible get annotated todos app guides present", "num": "245", "d": "12/2011"}, {"title": "formerly known", "body": "repo description reads formally known pretty sure guys meant formerly nitpick guess kind important one nt officially sproutcore anymore afaik", "num": "239", "d": "12/2011"}, {"title": "recent willinsertelement change broke notification children", "body": "since commit child views get rendered inbuffer nt fire willinsertelement demonstration problem children get created call point children never get message would suggest reverting change keeping associated warnings", "num": "235", "d": "12/2011"}, {"title": "appending removing view single runloop", "body": "append remove view single runloop view ends shown dom written two test cases demonstrate problem could go sproutcoreviewstestsviewsviewremovetestjs javascript test dom element gone append remove two separate runloops function var view scviewcreate scrun function viewappend scrun function viewremove var viewelem sc get view elementid ok viewelemlength view element nt exist dom test dom element gone append remove single runloop function var view scviewcreate scrun function viewappend viewremove var viewelem sc get view elementid ok viewelemlength view element nt exist dom first test case passes second one fails practice see happening sccollectionview sometimes shows empty view list items happens least content datastorebacked array unfortunately fix yet try fix somebody could provide tips would sensible approach", "num": "233", "d": "12/2011"}, {"title": "license", "body": "unclear documentation sproutcore amberjs license please add licensing information project", "num": "232", "d": "12/2011"}, {"title": "scobject getpath nt work well capitals", "body": "javascript windowfoo bar baz foo baz windowbar baz window baz scgetpath foobarbaz gt foo baz correct foogetpath barbaz gt window baz foo baz scobjectcreate getpath barbaz gt window baz undefined problem fixing people would want put template would mean globals would view scope alternatively could different behavior suspect would lead general confusion", "num": "225", "d": "12/2011"}, {"body": "started write basic tests see", "d": "12/2011"}, {"body": "ah nice looks like might also overlap idea storing dataattributes perhaps two unified mine oneliner would small merge", "d": "12/2011"}, {"body": "problematic people using ember specific pages would like keep jquery separate pages ember use particular request users would maintain separate instance query nonember pages effectively download jquery twice", "d": "12/2011"}, {"body": "another option jqueryversiontest throw version jquery wont work ember", "d": "12/2011"}, {"body": "think emberjs small range jquery versions officially supports document range using ember jquery works quite well", "d": "12/2011"}, {"body": "fix syntax highlighting confusing", "d": "12/2011"}, {"body": "wycats updated requested thanks", "d": "12/2011"}, {"body": "updated syntax highlighting spacing around fencing", "d": "12/2011"}, {"body": "proposal looks good straight forward implement first person request", "d": "12/2011"}, {"body": "hi looking last week built somewhat like definitively need think added view core", "d": "12/2011"}, {"body": "bug nodejsdoctoolkit dudleyf fixed submitted pull request", "d": "12/2011"}, {"body": "could share created html seeing like see", "d": "12/2011"}, {"body": "example shown output found element found unnecessary html hope snippet give explanation otherwise let know", "d": "12/2011"}, {"body": "thanks clarification assumed seeing wanted sure collection view responsible creating child item manages although reasonable think view placed inside block area defining item view seeing output simply inserting child view collection implied item view skip adding nested view customize collection item views special property pattern collection helper looks specifically property names begin applies item view case specify collection helper becomes property item view collection emcollectionview elementid vlist contentbinding fxbrandcategories itemclassnames itemvlist collection would result output like also specify item view constructor class itemviewclass property like use view default collection emcollectionview elementid vlist contentbinding fxbrandcategories itemviewclass fxmyspecialitemview itemclassnames itemvlist collection play feature live like see else", "d": "12/2011"}, {"body": "trek thanks help indications posted issue wanted share way using emberjs features would like see case defining handlebars template composing several templates handlebar document html page like one show still nt know whether recommend way html view luhuiscrollview elementid content collection emcollectionview elementid vlist contentbinding fxbrandcategories contentname view luhuiscrollview class itemvlist contentbinding contentitems collection emcollectionview class hlist tagname ul itemviewclass apvselectableview contentbinding parentviewcontent contentname collection view collection view javascript var items brandcategories var lt itemspush emberobjectcreate name item id brandcategoriespush emberobjectcreate name pleasure items items brandcategoriespush emberobjectcreate name leisure items items brandcategoriespush emberobjectcreate name lifestyle items items brandcategoriespush emberobjectcreate name sport items items feel free close issue think convenient lg", "d": "12/2011"}, {"body": "suggestions handling inverse case ie template includes nested view nt want become item view", "d": "12/2011"}, {"body": "still confused problem original comment expressed concern extra view wrapping trek pointed set addresses issue actual issue missing please clarify closing", "d": "12/2011"}, {"body": "sproutcore used tool handle case actually gotten working ember need get new design made since ca nt well upload api docs looking like sproutcore", "d": "12/2011"}, {"body": "would mind submitting pull request discussion", "d": "12/2011"}, {"body": "closing favor pull request", "d": "12/2011"}, {"body": "mapproperty basically analogue filterproperty sortproperty geteach analogue seteach would make sense use implementation want submit pull request", "d": "12/2011"}, {"body": "good job tracking issue", "d": "12/2011"}, {"body": "fwiw aware fragments issue brought jquery proper worst case periodically flush fragment cache case think harm good", "d": "12/2011"}, {"body": "definitely seems like problem thanks working", "d": "12/2011"}, {"body": "fyi pull request added addressing", "d": "12/2011"}, {"body": "going infinite recursion ember meta object gets added built classes like array meta object contains reference back original object bet load fine put inclusion emberjs prevents ember messing builtin prototypes also prevents ember providing helpful syntactic sugar nt know ultimate fix", "d": "12/2011"}, {"body": "worked treat thanks buddy", "d": "12/2011"}, {"body": "generally fan wikis easily collect cruft knowing uptodate difficult instead please submit pull requests emberjswebsite thanks", "d": "12/2011"}, {"body": "oh ok nt seen website repository", "d": "12/2011"}, {"body": "probably add pointer readme pull request", "d": "12/2011"}, {"body": "may bad idea substantial demos documentation main site seems everyone busy writing first apps huge lacking useful resources building real apps people time prepare official looking examples docs organic place collecting quick tips gists would nice", "d": "12/2011"}, {"body": "seems behave somehow differently firefox string lt another string true string localecompare another string googlechrome string lt another string true string localecompare another string", "d": "12/2011"}, {"body": "tests pass firefox os x lion hesitant change anything seems like maybe issue limited ubuntu", "d": "12/2011"}, {"body": "tested different pc ubuntu version though freshly fetched original unubuntified firefoxversions mozillaorg result", "d": "12/2011"}, {"body": "likely mistaken let know reopen", "d": "12/2011"}, {"body": "indeed tnx pointing", "d": "12/2011"}, {"body": "chrome says unexpected identifier safari says unexpected token firefox says missing statement error line", "d": "12/2011"}, {"body": "fixed master release shortly", "d": "12/2011"}, {"body": "dom support bindings need listen dom events order send binding direction normally would via view text field checkbox ember comes prebuilt views moment also insert label removing soon makes less generally useful work around moment nt want label subclass also take look default checkbox implementation packagesemberhandlebarslibcontrolscheckboxjs extremely straightforward", "d": "12/2011"}, {"body": "made question hoping way automatically ca nt see anyone using ember make ton callbacks bind form bad idea make helpers register listener rendering", "d": "12/2011"}, {"body": "things understand builtin support form elements nt manually anything use builtin browser supply mechanism listening attribute changes listen events like etc builtin views result see bindattr checked value way know events bind cases could theoretically guess cases like bindattr value really ca nt know end result bindattr useful oneway bindings objects dom cases user unable directly change attributes want handle user events need listen user events case common already done work ca nt see anyone using ember make ton callbacks bind form nt understand saying elaborate", "d": "12/2011"}, {"body": "sorry understand works helpers really work well really straightforward made mistake imagined completely different scenario thank time", "d": "12/2011"}, {"body": "agree would nice since serializing template string difficult know bindattr used current attribute without kind parsing expensive open implementation nt impact performance", "d": "12/2011"}, {"body": "could nt use id data attribute incremented would allow number data attributes single node", "d": "12/2011"}, {"body": "right think getting going mean one bindattr wins last one think instead id part dataproperty bindattr could look node mean wycats right", "d": "12/2011"}, {"body": "exactly", "d": "12/2011"}, {"body": "make change breaks special case class bindings imagine situation situation datahandlebarsid still needed classes last bindattr would stay bound", "d": "12/2011"}, {"body": "nt think good way support two bindattrs class html works", "d": "12/2011"}, {"body": "put pull request nt properly reference issue issue", "d": "12/2011"}, {"body": "working something able make public near future keep eye", "d": "12/2011"}, {"body": "wagenet wrote solid article transferring data glad ember like knockout remained focused view layer web applications", "d": "12/2011"}, {"body": "seems like something worth porting new site perhaps", "d": "12/2011"}, {"body": "success", "d": "12/2011"}, {"body": "rykov like well really good solution simple data needs better raw ajax many cases", "d": "12/2011"}, {"body": "fell ember great focusing bindings view layer think better keep way left datasource stuff thirdparty code maybe another project ember organization way keep separated basic ember repository keep easy use resource engine", "d": "12/2011"}, {"body": "library", "d": "12/2011"}, {"body": "released emberdata standalone library", "d": "12/2011"}, {"body": "cool thanks please nt make complicated data handling", "d": "12/2011"}, {"body": "suggesting parsing body computed property function trying guess properties used sims complicated almost insane misunderstood request best try split property witch depends properties smaller ones dependencies properties max compose going maintainable give beter caching", "d": "12/2011"}, {"body": "well versed tell perhaps someone else chip ideas", "d": "12/2011"}, {"body": "myschizobuddy tchak ca nt imagine possibly figure thing imagine seems sane use provide support property matcher notified property changed object actually something planning luck help", "d": "12/2011"}, {"body": "frameworks like flapjax using reactive programming achieve expressions behaviors abc updates everytime b c changed flapjax new js dialect uses compiler convert javascript guess compiler magic", "d": "12/2011"}, {"body": "ever figure", "d": "12/2011"}, {"body": "nt actually ended switching angularjs hit many snags like ember hope get bottom though", "d": "12/2011"}, {"body": "would nt mind would interested know snags hit", "d": "12/2011"}, {"body": "ok catch emberjs get chance", "d": "12/2011"}, {"body": "probably better question stackoverflow emberjs tag also ask questions irc emberjs", "d": "12/2011"}, {"body": "yes emberjs agnostic choice backend long serve javascript clients nt matter server running looking something complicated like invoke parts emberjs server side within node answer also yes common welldocumented able use parts nt touch dom embermetal emberruntime", "d": "12/2011"}, {"body": "thanks pointers", "d": "12/2011"}, {"body": "try using reopen instead reopenclass", "d": "12/2011"}, {"body": "adds properties class adds instances", "d": "12/2011"}, {"body": "see maybe add documentation emberjscom thanks help", "d": "12/2011"}, {"body": "nt mind write wording makes sense submit pull request love pull", "d": "12/2011"}, {"body": "try", "d": "12/2011"}, {"body": "documentation section reopening classes updated use reopen", "d": "12/2011"}, {"body": "okay certainly sort render race condition wrapping append like document ready function firstviewappend fixes nt issue since everything end body ideas might", "d": "12/2011"}, {"body": "think instead something like way ember runs dom loaded nt think needs suporte rendering document ready", "d": "12/2011"}, {"body": "hey wilker reduced simplified testcase put together demonstrate something unexpected occurred nowhere documentation ember imply views may appended document ready see anything handlebars documentation document ready either however full search codebase gives comment line find templates stored head tag script tags make available embercoreview global embertemplates object run jquery domready callback line ember document ready emberhandlebarsbootstrap triggers processing templates means webkit already triggered document ready prior execution append call simplified test case browsers waiting either tag trigger depending upon ember desired function either documentation bug considering comment likely decision option simply call emberhandlebarsbootstrap immediately line count template tags loaded point implement observer notices new templates loaded either way bit annoying ember breaks common jsattheend pattern requiring document ready", "d": "12/2011"}, {"body": "nathanhammond sure good way around unless mistaken ca nt find handlebars tags dom ready think probably settle using domready callback sorry", "d": "12/2011"}, {"body": "problem could someone manages compile documentation make available online problem fixed", "d": "12/2011"}, {"body": "dudleyf working think pull request fixes issue", "d": "12/2011"}, {"body": "wagenet awesome thanks case anyone wants docs patch accepted download copy generated recent ember time writing", "d": "12/2011"}, {"body": "sebastian thanks generating sharing", "d": "12/2011"}, {"body": "handlebars definitely compatible node sure makes sense say ember full framework works node dom update said think core object model embermetal emberruntime would good candidates expose node although one done work yet", "d": "12/2011"}, {"body": "run embermetal emberruntime without dom stub handful things normally provided jquery", "d": "12/2011"}, {"body": "embermetal emberruntime work node without modification currently depend existing need provide work perhaps requiring titanium mobile", "d": "12/2011"}, {"body": "ebryn require window iirc least explicit checks handle existing", "d": "12/2011"}, {"body": "sets supposed reliable order orderedset object built nonpublic project could probably pull add emberruntime interest", "d": "12/2011"}, {"body": "ahhhh ok using wrong primitive like one object available time set worked well displaying notification twice since need order preserved rework arrayenumerable unless orderset gist laying around", "d": "12/2011"}, {"body": "would nice ember installable package also addons optional packages well take forth coming data store since already building app without nt really want included core least hope data store separate case great idea", "d": "12/2011"}, {"body": "yeah basically wondering much work would change files work ender", "d": "12/2011"}, {"body": "ember nt use bpm anymore rake task uses ruby build time starter kit use ruby app follow pattern using ruby build time asset generation use compass well use previewing", "d": "12/2011"}, {"body": "right packagejson files written work bpm reworking bpm use packagejson anymore happens easier make work ender", "d": "12/2011"}, {"body": "wagenet rework bpm use packagejson file ca nt make packagejson compatible npm ender bpm", "d": "12/2011"}, {"body": "msch want run npm package add packagejson like one shown javascript name ember version url keywords binding browser dependencies main distemberjs kselden said must run rake create browser package dist folder", "d": "12/2011"}, {"body": "ppcano nt want one concatenated emberjs dependency individual packages", "d": "12/2011"}, {"body": "package available ender package", "d": "12/2011"}, {"body": "guess important right list dependencies core team things would nt serve well separated core rather easy add ender", "d": "12/2011"}, {"body": "dependencies fairly easy figure looking bpm packagejsons", "d": "12/2011"}, {"body": "wagenet asking packages make sense standalones belong shipped together individual package sure spent time could figure however since less familiar makes someone like explain individual package split way let users decide want used separately idea seems like project concern", "d": "12/2011"}, {"body": "personally doubt ever need split going start redistributing project spliced however see fit", "d": "12/2011"}, {"body": "personally like see packages distributed separately eg embermetal emberruntime etc believe compatible ender need distribute javascript concatenated means need modify rakefile generate concatenated version per package think might already part build process case could update rakefile discard versions instead package", "d": "12/2011"}, {"body": "interested using observers bindings alone would excellent", "d": "12/2011"}, {"body": "thanks look", "d": "12/2011"}, {"body": "problem happy retest need ping", "d": "12/2011"}, {"body": "problem handeling mousedowntouchstart events emberbutton ios action triggered twice sometimes", "d": "12/2011"}, {"body": "ca nt chain touchstart mousedown ios definately fires seem work timing issue works button action alters view nt receiver mousedown button spot trigger action even different button", "d": "12/2011"}, {"body": "nt work safari mac either shows nothing beside background image", "d": "12/2011"}, {"body": "thought something similar soon saw site thinking perhaps bauhaus similar font logo type make dot emberjs fireball flame thoughts", "d": "12/2011"}, {"body": "volunteer time folks needed front sketched concepts different direction start use colors burning embers maybe stronger color depth would work either way time help needed", "d": "12/2011"}, {"body": "lukeholder sent email github let know nt receive", "d": "12/2011"}, {"body": "emailed back tweeted aimed irc", "d": "12/2011"}, {"body": "acarr love first logo however emberjs lowercase", "d": "12/2011"}, {"body": "", "d": "12/2011"}, {"body": "since strobe maintenance mode pretty unreliable getting rid near future", "d": "12/2011"}, {"body": "probably move annotated todos website repo", "d": "12/2011"}, {"body": "getting error links seems shaky though", "d": "12/2011"}, {"body": "thanks fixed", "d": "12/2011"}, {"body": "edited correct jsfiddle link tried follow notification email may old one", "d": "12/2011"}, {"body": "seeing bug ember", "d": "12/2011"}, {"body": "fixed please reopen still see issue", "d": "12/2011"}, {"body": "got ember confirm problem fixed additionally something stupid willinsertelement callback ember helpfully provided error message getting element willinsertelement unreliable longer supported emberviewstatesprerender cleaned code better thanks", "d": "12/2011"}, {"body": "source scrun flushes view updates end seems logical call made call", "d": "12/2011"}, {"body": "even though might logical point view nt think logical app developer point view append remove results view displayed dom seems like something never done least raise error instead resulting app getting invalid state view dom child views array parent either way collectionview fixed empty view behaves supposed behave perhaps include test case showing happening collectionview really starting bite us collection views think attempt fix soon", "d": "12/2011"}, {"body": "mit add soon dec pm calvin freitas wrote unclear documentation sproutcore amberjs license please add licensing information project reply email directly view github", "d": "12/2011"}, {"body": "added", "d": "12/2011"}, {"body": "thank", "d": "12/2011"}, {"body": "", "d": "12/2011"}, {"body": "believe use setinterval example removing conditional view template seem help", "d": "12/2011"}, {"body": "definitely find directly touching view lot like class style usually positioning changes property binding great determining set classes whole especially initial rendering state use case find coming often addingremoving single class set runtime jquery already handles easily end ing probably prudent", "d": "12/2011"}, {"body": "opinion classnames nice solution many use cases initial rendering state example either domain interaction objects changed easy way propagate changes view layer case agree also touching view would like either positioning update css properties create custom cssbindingproperty bind object property css property via jquery css property objectvalue example found however nt solution perform overused opinions", "d": "12/2011"}, {"body": "work guys trying attach specific class given property view", "d": "12/2011"}, {"body": "nt see extendedprototypes current master ist fixed", "d": "12/2011"}, {"body": "edtsech", "d": "12/2011"}, {"body": "looking extendedprototypes", "d": "12/2011"}, {"body": "edtsech exactly sure concern", "d": "12/2011"}, {"body": "currently nt seem possible see details", "d": "12/2011"}, {"body": "presumably would need apply fix handlebarserror well", "d": "12/2011"}, {"body": "told difficult implement subsequently likely something support", "d": "12/2011"}, {"body": "extremely odd reproduced error well error seems action called executed via console works fine also need second line", "d": "12/2011"}, {"body": "whoops fixed syntax error", "d": "12/2011"}, {"body": "work normal global emberobjects either see added tests fix pull request", "d": "12/2011"}, {"body": "hey tim unfortunately nt think add since getpath extremely hot path kind parsing would expensive operation imo responsibility function calling getpath verify value returned complain would make resulting error message lot useful developers imagine getting error saying getpath path malformed vs could find view path foobar", "d": "12/2011"}, {"body": "would necessary implement special eachproxy enumerable behavior enumerables nt know specific location changes first thought implementation would would surprisingly inefficient closing ticket someone needs functionality please submit pull request reopen ticket specific usecases thanks", "d": "12/2011"}, {"body": "tested chrome osx issue", "d": "12/2011"}, {"body": "sorry mess guys new pull request thing", "d": "12/2011"}, {"body": "nt understand ember needs reimplement native behavior instead using click event", "d": "12/2011"}, {"body": "agree seems reasonable expect target action triggered click event rather mouseup unit tests emberbutton actually simulate behavior via mouse downup rather click working pull request maintain current behavior move triggeraction call click handler include updating tests simulate different event", "d": "12/2011"}, {"body": "however think still reasonable mimic isactive behavior mouse updown key updown least key space", "d": "12/2011"}]