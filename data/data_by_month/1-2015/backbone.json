[{"title": "router confusion", "body": "spent hours trying debug first backbone app none urls handled router set router like js var approuter backbonerouterextend routes index contact contact newsletter newsletter jobs jobs ran app like js var app approuter new approuter approuteron route function route params consolelog route params function use strict click link webpage browser refreshes request nt router history api supposed jump catch links use app route nowhere documentation allude fact manually hijack links page run router nowhere way docs worded expecting set told use confusing explained somewhere", "num": "3464", "d": "1/2015"}, {"title": "issue requiring bower installed backbone browserify", "body": "please see issue opened browserify repository details sounds like file omitted backbone installed bower like bower install node dependencies anyways let know think", "num": "3462", "d": "1/2015"}, {"title": "trigger object", "body": "currently calling object prepend prop value arguments get triggered desired functionality ca nt find tests behavior javascript objon event function consolelog arguments objtrigger event first arg logs first arg", "num": "3460", "d": "1/2015"}, {"title": "anyone please let know get text ui similar gettext method selenium", "body": "", "num": "3458", "d": "1/2015"}, {"title": "suggestion backbonemodelclone", "body": "currently issue could arise attribute value type object newly cloned model attribute refers object original model propose something like", "num": "3457", "d": "1/2015"}, {"title": "confusing docs viewel", "body": "docs viewel say thisel created view tagname classname id attributes properties specified el empty div contradicted example since assigned string seems make equivalent unclear would use case instead", "num": "3454", "d": "1/2015"}, {"title": "memory leak stoplistening", "body": "hi issue related ticket think feel free close reference fix still leak nt apply listentoonce take look following example example runs backbone master works way problem listening listener well cleaned correctly line nt empty therefore keep reference correct project causes problems since object listened always listeners using references old objects kept forever might rethink solution workaround issue albin", "num": "3453", "d": "1/2015"}, {"title": "give collectionset parse option undocumented feature", "body": "please add description docs", "num": "3451", "d": "1/2015"}, {"title": "create modules login facebook google popup home page magento", "body": "create modules login facebook google popup home page magento give idea like type popup", "num": "3450", "d": "1/2015"}, {"title": "listentoonce spaceseparated events attaching callback", "body": "js eventsonce foo bar callback eventstrigger foo eventstrigger foo eventstrigger bar eventstrigger bar consolelog count gt gt true js eventslistentoonce target foo bar callback targettrigger foo targettrigger foo targettrigger bar targettrigger bar consolelog count gt gt false removing seemingly overkill would fix", "num": "3448", "d": "1/2015"}, {"title": "url inconsistencies", "body": "hello spotted couple inconsistencies url formats used backbone wondering thoughts resolving router told use urls pattern yet models pattern personally experience leans towards patterns preceding slash way differing patterns resolved", "num": "3447", "d": "1/2015"}, {"title": "validate set", "body": "reading old tutorial see model used validate set well save understand would reduced save definitely found case breaks model set model defined validate function set invalid value field set another invalid value another field validate save two invalid values fallback first set invalid value like way previous values saved fallbacks replaced invalid validation discovered quite foolproof system validation set definitely foolproof invalid values ca nt get passed inadvertently remain model thoughts jashkenas love hear reasoning reduced set learning added following model key value key value style arguments typeof key object attrs key options val else attrs key val overrides behaviour every model get tiresome", "num": "3446", "d": "1/2015"}, {"title": "documentation unclear", "body": "hi firstly love backbone new enjoying far finding documentation difficult understand without resort searching online tutorials know quite free framework lock people much figuring little bits hard example looking explanation default validate called also called passed supposed pass option case trying extend want attributes validated obviously passing function supposed pass defined function general even though love stuff feel documentation could really benefit lists available options function like method like way noob could easily ascertain default however thanks great tool", "num": "3445", "d": "1/2015"}, {"title": "invalid parameters", "body": "backbone route parameters decoded via parameter malformed eg thrown since user control url happen even caution taken encode parameters truly exceptional case things broken execution stop return parameter", "num": "3440", "d": "1/2015"}, {"title": "change event bound modelfetch nt work", "body": "tried following binding model today long story short model sent jqueryajax option jquery tries make sense url method appends functionbody url seems really counterintuitive", "num": "3439", "d": "1/2015"}, {"title": "chance unattach view layer backbone", "body": "hey guys backbone lightweight library enables us solid foundation create web apps period long time using view layer although lightweight well want know chance remove backbone core two years ago started use backbone since way think modularization changed decoupled due extension possibilities facilities create plugins top comes really easy get hence times used builtin view layer design something barely unnecessary think weakest point backbone however making library slightly heavier words every project make using backbone almost views layer dead waiting opportunity excluded totally unusable dust surface thought plan make plugin discussing guys react irc see something really easy attach independent disclaimer question followed opinion nt far absolute truth maybe something related nt know", "num": "3438", "d": "1/2015"}, {"title": "backbone view updated unexpected", "body": "newbi backbone try write simple applications learn backbone application contains list items user adddelete items user hover one item view item changed color red othewise color black full codes app however works move mouse items one one slowly move quickly found may one items colored red expected going", "num": "3433", "d": "1/2015"}, {"body": "actually discussing cause behavior", "d": "1/2015"}, {"body": "fyi jmeas created hijacking form submissions", "d": "1/2015"}, {"body": "good utility know thanks", "d": "1/2015"}, {"body": "nt router history api supposed jump catch links use app route designermonkey felt way first learning backbone time though come think actually concern view one role views link dom rest app right would weird router history reached changed behavior dom elements also big fan ambient management things way routerhistory could task much rather configure perlink might sound like hypocrite given backboneintercept works lib intended temporary solution time sit work substantial overhaul bb routing agree docs mention explicitly guide route information would naturally fit backbone nt really guides though sort information sort baked api marionette docs way frowning perhaps note could added section router method", "d": "1/2015"}, {"body": "get point backbone reason like compared angular nt assume anything yeah learning actually making sense router think confusing first", "d": "1/2015"}, {"body": "think confusing first yeah totally relate whip pr adds note docs sure would considered merge would definitely help future developers", "d": "1/2015"}, {"body": "whip pr adds note docs", "d": "1/2015"}, {"body": "maaaaaaybe smile", "d": "1/2015"}, {"body": "nt think time let know make one", "d": "1/2015"}, {"body": "see length jmeas plugin ton different ways handle app different requirements sometimes nice able cancel route route within specific context instance doc note would great", "d": "1/2015"}, {"body": "solved installing backbone npm rather bower", "d": "1/2015"}, {"body": "hey jridgewell thanks pointing think docs cover though bit removed backbone event methods also support event map syntax alternative positional arguments nt seem make much sense though confused", "d": "1/2015"}, {"body": "nt seem make much sense trigger though agree issue nt object syntax value prepended arguments working refactoring post one gotchas noticed two others open separate issues", "d": "1/2015"}, {"body": "see last comment others backbone attributes shallow design easily change base model", "d": "1/2015"}, {"body": "yep thanks florianr generally considered bad idea store anything primitives hash proposing would better handled deep structured clone base model perfect place", "d": "1/2015"}, {"body": "florianr thanks feedback guys", "d": "1/2015"}, {"body": "case selector tagname definitely unclear fix", "d": "1/2015"}, {"body": "thanks thu jan pm adam krebs notifications githubcom wrote case el selector tagname definitely unclear fix reply email directly view github", "d": "1/2015"}, {"body": "pull request already open address issue although seems desire merge time", "d": "1/2015"}, {"body": "types things open pull see looks need open issue first", "d": "1/2015"}, {"body": "hi thejameskyle thanks pointing right function evaluated spaceseparated event nt think removing right approach pull fix shortly", "d": "1/2015"}, {"body": "nt think removing right approach", "d": "1/2015"}, {"body": "needed", "d": "1/2015"}, {"body": "found lt line routes converted history part defined could use router pre post slashes optional problem seen history part match routes slashes yet nt resolve functions functions nt slashes", "d": "1/2015"}, {"body": "defining line regexs adding replace line trick send pr like", "d": "1/2015"}, {"body": "hi designermonkey thanks pointing see mean think problem conflating urls fragments model urls primarily meant making requests server fragments necessarily entire url meant clientside routing said model urls used fragments enabled stripping leading slash hope helps smiley", "d": "1/2015"}, {"body": "ok order make consistent across areas use router fragments urls well could nt tiny change added", "d": "1/2015"}, {"body": "figured example still point options lists would still helpful", "d": "1/2015"}, {"body": "user nt really control url feed bizarro urls website give invalid pages either form type graceful invalid urls emitting error way allows app handle think around historystart nt good enough", "d": "1/2015"}, {"body": "user nt really control url feed bizarro urls website give invalid pages either form type graceful right urls nt always created domestically search urls especially problematic often fed external source eg invalid urls emitting error way allows app handle think trycatch around historystart nt good enough nt think someone errantly navigate like app allow modify query wrapping means execution stopped route executed option dump whoops url malformed message possible happen even url correctly escaped", "d": "1/2015"}, {"body": "think nicer api developer writing router would", "d": "1/2015"}, {"body": "might event work better ie error matching route route unmatched edit thinking would better doh", "d": "1/2015"}, {"body": "event nt bad idea nearly use cases fine passing along parameter otherwise could handle event know route anything better broken page", "d": "1/2015"}, {"body": "arguments mismatch change event calls callback expects first param treating need guard", "d": "1/2015"}, {"body": "found prodding since last used backbone logical connection property model changed sync server seemed natural expected work box agree seems logical backbonemethods events objects connectable perhaps using model unconventional way intend model hold state searchform somewhat surprised nt stumbled upon problem earlier", "d": "1/2015"}, {"body": "hi whitefire thanks bringing stage game api unlikely change much recommend bit explicit much typing much less error prone", "d": "1/2015"}, {"body": "agreed thank time", "d": "1/2015"}, {"body": "best way use view layer make views otherwise feel free delete copy backbone", "d": "1/2015"}, {"body": "checkout henrikjoreteg excellent ampersandjs modular fork backbone created solve exact issue", "d": "1/2015"}, {"body": "jashkenas using react top bottom using backbone builtin view layer okay thanks clarifying tgriesser already heard long time ago seeing sounds exactly want give shot thank", "d": "1/2015"}, {"body": "hi mention comment javascript pass value reference mention references objects stored prototype shared amongst instances default attributes property backbone init two objects reference happening example think model constructor clone defaults add attributes thanks", "d": "1/2015"}, {"body": "want clone defaults initialize general bad idea store objects prototype backbone nt going help", "d": "1/2015"}, {"body": "sure similar precedent languages everyones favourite gotcha mutable default parameters python argue scope bb handle instance competition mootools shallow clone objects models prototype spyropress make defaults function wo nt run issue", "d": "1/2015"}, {"body": "hey asparagino thanks reporting always wondered edge cases would bite us know smiley actually use deal unicode escapes firefox maybe browsers research see instead", "d": "1/2015"}, {"body": "work newsy site seo friendly urls pages like fail raises exception whereas url without urlencoded percent sign succeed ideally valid url would work regardless whether fragment urldecoded twice without error", "d": "1/2015"}, {"body": "fyi call added deal fact browsers ie firefox returns unicode characters percent encoded", "d": "1/2015"}, {"body": "think fixed mind giving try", "d": "1/2015"}, {"body": "might making leaps think correct behavior browser return valid uri uri components location object attributes value href attribute must absolute uri reference percent character part uriencoded octet valid character uri percent character always reserved purpose escape indicator must escaped order used data within uri page would nt expect solved anytime soon fix backbone still great idea think would value following browser vendors besides firefox clarifying implementing standard behavior", "d": "1/2015"}, {"body": "think would value following browser vendors besides firefox clarifying implementing standard behavior hope smiley", "d": "1/2015"}, {"body": "bug filed webkit internet explorer nt really expect much action old component browser maybe folks lot experience least chime question", "d": "1/2015"}, {"body": "macgyver debugging looks problem url decoding process within backbone even construct valid url part calling encodeuricomponent param construct url decodeuri called locationhref first url split apart decodeuricomponent called param browser returns invalid uri location object backbone partially decoded deescaped already decodeuri call second attempt decodeuricomponent throws urierror braddunbar looks good think better fix hack let know pick edge cases testing", "d": "1/2015"}, {"body": "thanks taking look asparagino", "d": "1/2015"}, {"body": "jridgewell", "d": "1/2015"}, {"body": "thanks jashkenas clear", "d": "1/2015"}, {"body": "cbroome need revert isequal back override megawac solution put many condition check like make sure conflict instanceof check", "d": "1/2015"}, {"body": "midnightwonderer let say trust underscore isequal safer anything fellow coders would cook use isequal portions app idea running complex conditional logic every time appealing strikes bad practice bring back original point really think would beneficial objects define equality checks", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "perhaps due bug two routes tests fail safari mac", "d": "1/2015"}, {"body": "hi kadishmal test suite passing locally using master branch", "d": "1/2015"}, {"body": "yes forked yesterday ran test master branch", "d": "1/2015"}, {"body": "working correctly safari confused details might help reproduce issue", "d": "1/2015"}, {"body": "ok guide run tests maybe something wrong things better described readme everybody try would also make sure every contributor easily run tests make sure changes pass reason ran tests plan send pr", "d": "1/2015"}, {"body": "tests static load browser", "d": "1/2015"}, {"body": "checked latest code tests green", "d": "1/2015"}, {"body": "thread lying dead long time identifiable area start working upon", "d": "1/2015"}, {"body": "hi jasonslyvia right nt exactly explain loop consider example event made second change means need fire another event notify listeners otherwise listeners fired previously inconsistent state clear", "d": "1/2015"}, {"body": "oh see trick event makes things inconsistent thank brilliant explanation mind copying answer question", "d": "1/2015"}, {"body": "oh see trick event makes things inconsistent nah example without event handler crux matter changes made event happens another event needs triggered maybe better example try statement statement", "d": "1/2015"}, {"body": "yeah seems like rushed conclusions thank patience expertise", "d": "1/2015"}, {"body": "deanapeterson also using hp fortify issues backbone flagged similar situation critical issues fortify need addressed order compliant wondering ended order pass fortify scans", "d": "1/2015"}, {"body": "initial suggestion used pass security scans came since moved angularjs", "d": "1/2015"}, {"body": "since never used backbone router took entire router module source since moved angular jan pm simon collierbaker notifications githubcom wrote deanapeterson also using hp fortify issues backbone flagged similar situation critical issues fortify need addressed order compliant wondering ended order pass fortify scans reply email directly view github", "d": "1/2015"}, {"body": "happens response seems like something really wrong open ticket", "d": "1/2015"}, {"body": "nt get problem response must include messagebody thus always terminated first empty line header fields", "d": "1/2015"}, {"body": "get response error code error callback object key expected", "d": "1/2015"}, {"body": "brettshwom anyone else using brettshwom solution value null fails recommend", "d": "1/2015"}, {"body": "stumbled upon agree binarykitchen fixed core overridden way around needed nt really moment halfassed surprising functionality would open discussion doubt nt break things sane people rest adjust", "d": "1/2015"}, {"body": "two weeks passed comment nt seem relevant anymore huzzah", "d": "1/2015"}]