[{"title": "yarn test fails branch name", "body": "running branch name test fails following message convert illegal characters branch name something legal", "num": "16198", "d": "1/2018"}, {"title": "documentation embercompare needs updated rfc", "body": "needs updated rfc examples documentation need updated well", "num": "16190", "d": "1/2018"}, {"title": "generated test referencing fail box using beta", "body": "several test blueprints already updated order support new testing api approved rfc within new beta app generating instanceinitializer using blueprint merged tests fail box due helper present within newly generated app helper supposed part new app blueprints incorrect", "num": "16180", "d": "1/2018"}, {"title": "result server query immutable", "body": "try work reproduction attempts remove object array ember data objects like hitting line ember data using ember data seems like code exists recent ed well guess would assume came side effect quite sure", "num": "16178", "d": "1/2018"}, {"title": "tagless component defined es class causes error", "body": "trying use es class syntax actually using embertypescript issue related project understand rfc merged time last year work done space support projects like emberclitypescript emberdecorators read rfc using class syntax correctly understand perhaps still something wrong trying tagless element way es classes implemented seems problem see following example created ember twiddle javascript import ember ember export default class mycomponent extends embercomponent constructor super compiles fine visit page get strange error unsure things wrong uncovered legitimate bug something yet implemented ideas", "num": "16177", "d": "1/2018"}, {"title": "rendering htmlsafe falsey value first thing root loading template causes entirety loading template content permanently displacereplace root app outlet", "body": "entering root loading route first load loading template renders htmlsafe falsey value undefined etc results root application outlet permanently rendered order respect adjacent dom please see attached twiddle minimum recreation issue toggle double stash triple stash loading route see issue appear disappear issue first results switch issue still present app twiddle update issue actually little bit worse thought turns loading template content getting permanently rendered main application outlet updated twiddle demonstrate see content placed foo loading template ends permanently placed main application outlet", "num": "16172", "d": "1/2018"}, {"title": "vs text inputs vs checkboxes", "body": "text inputs work although handlers passed different arguments checkboxes see found difference fairly surprising wasted time care admit trying track actions attached checkboxes nt firing cause behavior difference focusin default event name action assigned focusin used default focusin handler textsupport mixin thanks pointer alexspeller nt really figured distinction exists historical reasons perhaps would nice consistent least made clear docs moment sections actions checkboxes actually adjacent input helpers page literally reads event names must dasherized checkboxes also use input helper create checkbox setting type fairly misleading", "num": "16171", "d": "1/2018"}, {"title": "docs observersandobjectinitialization contradicts eslintpluginember recommendations", "body": "reviewing documentation setting observers init sets embereslint rule using components docs updated provide preferredpattern example", "num": "16170", "d": "1/2018"}, {"title": "error assertion failed observer called without valid path", "body": "mean debug", "num": "16161", "d": "1/2018"}, {"title": "class documentation transition disappeared ember", "body": "go select show private bottom nav menu see last time transition seen alive little csi forensic work required figure happened could refactoring moved way place yuidocs processed", "num": "16153", "d": "1/2018"}, {"title": "memory leak action helper asyncawait tests", "body": "memory leak believe might found memory leak created application reproduces problem available description issue repository readme copy according page tests execution container object heap snapshot one means memory leak believe found one reproducible case action helper hbs used via test implemented asyncawait leak memory happen test written old style reproduction steps open chrome browser visit tests select acceptance memory leak module let tests run open console memory tab take heap snapshot filter container container object heap container object heap point happen action helper used test asyncawait far able confirm happens version also application tests compiling lot templates use tests async seems add lot leaked memory additional notes ember twiddle jsbin preferred reproduction repo work providing one", "num": "16152", "d": "1/2018"}, {"title": "enable embertemplateblocklethelper default", "body": "goal issue track work still necessary ship block helper release ember consult rfc reference x write api documentation document guides", "num": "16150", "d": "1/2018"}, {"title": "refine error messages around allowing normal javascript property gets", "body": "issue tracking problems come due allowing normal javascript property lookup work computed properties context process landing change allow use normal property lookups get properties defined computed properties ember practice means cases later able drop replace however handful small historical issues could make transition little messy landed issue chances encountered warning ember encountered one historical issues computed properties used directly prototype ember internal implementation details ember caused computed properties directly present objects nt use would see internal ember descriptor representing computed property private api internal implementation detail never intended public even intimate api internal implementation detail changed still private descriptor object relocated object meta also private api allows us make normal property lookup work general people relying presence internal descriptor encountered error related problem probably using addon relies nowdefunct private implementation detail best bet follow instructions error message ask help devember ember proxies tricky secondly since new behavior relies using allow users ember proxies stop using previously since ember objects required use access properties could uniformly use code never need worry whether object ember proxy however use normal property access computed properties ember proxies special object implemented using ember proxy advertise requiring access proxied properties analogous libraries javascript ecosystem expose api different normal js property access patterns since proxies relatively rare ember compared property access ember objects emberjsrfcs merged felt cost losing consistent property access everyone types everywhere nt need know object special worth benefit normally needing use transition worried people accidentally migrate ember proxies regular property access added assertion code fires use normal property get ember proxy property present object returns value undefined developmentmode assertion implemented using proxies yet present supported browsers cover browsers people typically use development part avoids vast majority mistakes introduce possible problem code probes objects discover whether implement protocols mean probing code resilient way write code would unfortunately apps always control probing code could come test frameworks generic serialization logic etc notably probing code problem ember proxy finds way probing code property present object true usually real property ember proxy important part returns something definitely possible ember proxy could return object every possible property probing code checks protocol usually present wrapper object like would trigger assertion inappropriately problem comes probing code previously would look properties wrapper proxy object order provide good errors people accidentally removing nt normal property accesses ember proxies become sensitive behavior correct mental model going forward objects notably values returned relationships ember data special objects require nonstandard api process migration introduces ambiguity got error nt expect please reply issue information happened help improve error message advice workarounds", "num": "16148", "d": "1/2018"}, {"title": "transition beforemodel queryparams sets queryparam name different route", "body": "ember twiddle reproduces issue click link go foo bar back foo see url behaves would expect foo paramtrue gt bar gt foo paramtrue however refresh click bar first foo notice param gets stuck go back bar bar gt foo paramtrue gt bar paramtrue read sticky params sure whether intended behavior param sticks time issue sticking situation inconsistency seemed point something", "num": "16143", "d": "1/2018"}, {"title": "attribute accept true value", "body": "running ember following work despite documentation stating pass attribute", "num": "16142", "d": "1/2018"}, {"title": "array prototype extensions causing problems jquery file upload plugin", "body": "hi tried upgrade ember got stuck reproduced issue new embercli project found tried documented readme", "num": "16141", "d": "1/2018"}, {"title": "emberdebug ecmascript imports broken", "body": "according es spec able something like though console replies using described docs warn throw upon usage however works embercli node emberclibabel packagejson macos according ember slack help reproducable fresh install", "num": "16139", "d": "1/2018"}, {"title": "quest allow plain classes services", "body": "classes rfc merged time take advantage internal cleanup allow ember applications use classes applications going start services service superclass empty subclass however still number things work context background first functionality rfc yet implemented part problems minor related ing subclass ember superclass since quest using basic classes extend directly relevant pzuraq working identifying limitations writing failing tests second order support simple objects need decide public api dependency injecting es classes requires deciding stable public api dependency injection general smallest incremental step expect static method takes might want little take responsibility writing rfc finally need decide handle computed properties news classes incremental step support computed properties directly ember still require set properties directly services emberdecorators addon could used get sugar features however expect people feel need use every time use bare classes probably pull enough ember proper avoid example could add decorator fields moment calls hood need review apps decide many services real world rely lot ember object model features current status work items identify limitations current support es classes pzuraq fix defer write rfc dependency injecting outside oldstyle ember classes wycats survey realworld apps use ember object model features services useful thing could right go app survey services use certain features example survey skylight hang community slack coordinating work community slack join stesclassservices channel", "num": "16134", "d": "1/2018"}, {"title": "generated service injected ember serve restarted", "body": "got stuck little trying figure could nt inject newly created service turns restarting ember serve solved issue still reduced steps reproduce problem every time another terminal applicationhbs foocmpjs import component embercomponent import inject service emberservice export default componentextend shoppingcart service full error message browser console error assertion failed attempting inject unknown injection service shoppingcart new embererror assert registryvalidateinjections factorymanagercreate proxycreate curlycomponentmanagercreate appendopcodesevaluate vmnext templateiteratornext", "num": "16133", "d": "1/2018"}, {"title": "build tag published dist tag", "body": "build npm info embersource name embersource description javascript framework creating ambitious web applications disttags latest beta lts", "num": "16128", "d": "1/2018"}, {"title": "input helpers docs link doc page give whoops something went wrong error followed", "body": "ember docs page input helpers link actions section link document event names currently points visited resolves shows whoops something went wrong error screen following error console", "num": "16127", "d": "1/2018"}, {"title": "use prototypejs ember application", "body": "hi sorry english possible use prototypejs ember application want migrate test framework dont need make big change code web page use scriptaculous", "num": "16119", "d": "1/2018"}, {"title": "use shorthands component paths called template", "body": "ruby rails nice option enter end component name template automatically look components names folder hierarchy bubbling finds instead using following handlebar actually emblem call component added pod structure authenticatedpremisespremisedashboardbookengineerservicesaccountservicessectorholdingjobtypeappointmentfaultstemplateembl authenticatedpremisespremisedashboardbookengineerservicesaccountservicessectorholdingjobtypeappointmentfaultspriorityquestionedit appointmentappointment selectpriority routeaction selectpriority could use would still use automatically located folder template wondering something already considered adding ember handlebar could potentially new useful feature add actually complicated add logic", "num": "16118", "d": "1/2018"}, {"title": "recreate dom element component", "body": "custom component wraps element change content need reset state element unfortunately dom apis allow state reset eg method way remove means need remove element replace new one reliably reset state currently parent component property toggles rendering template however something concern parent would like way cleanly component maybe new component method", "num": "16111", "d": "1/2018"}, {"title": "browser support list", "body": "official list supported browser please cant see list browser supported description readmemd file please", "num": "16109", "d": "1/2018"}, {"title": "use router service route", "body": "hi inject routerservice route property replaced javascript import route emberrouting import inject emberservice export default routeextend router inject api expose property public private use named inject like seems work box intent use urlfor generate url meta tags method available thanks", "num": "16088", "d": "1/2018"}, {"title": "live api docs emberbind emberversion emberonerror", "body": "related issue pr merged things floating global public need home since ember global nt accessible api docs site bind onerror version exposing ember global confusing new devs think worth noting ton private properties still thus visible full list public private cc toddjordan", "num": "16082", "d": "1/2018"}, {"title": "tryinvoke caninvoke compare isequal missing updated imports docs", "body": "according part module api docs reflect think got overlooked documentation block follow pattern example class fixed method update ought target lts candidate later", "num": "16079", "d": "1/2018"}, {"title": "browserstack error automation testing time expired", "body": "kategengler already working browserstack folks resolving wanted make issue track ci failing cross link folks", "num": "16065", "d": "1/2018"}, {"title": "check change binded values", "body": "check change input onchange check change already binded values need check change binded values call action", "num": "16064", "d": "1/2018"}, {"title": "fix visit promise resolution", "body": "fix pr makes issue worse less likely render fully resolved visit promise resolved issue causes lot tests force flush run loop ensure visit done rendering clarify issue nt error handling actually resolving promise rendering actually settled", "num": "16059", "d": "1/2018"}, {"title": "quest making jquery optional", "body": "year going allin stripping ember bare essentials first target effort making jquery optional applications nt using jquery nt need include bulk successfully making jquery optional cuts around minifiedgzipped code juicy target around total size ember app initial vendorjs rwjblue done lot work far front package tests clean without jquery time finish job testing ember first time working ember follow steps make sure latest version node latest lts node update latest version yarn clone run populate run go browser edit packages editor refresh browser rinse repeat testing ember without jquery test ember without jquery add query parameter running tests get bunch failures working removing dependency jquery one package time test single package without jquery run tests hitting url making progress order make progress removing jquery dependency need satisfy two criteria fewer tests fail mode tests fail without making progress way means incremental work always merged master regressions using ember way always used current status work items wycats got package failing tests branch however violated rule making progress broke bunch tests running jquery things could work x getting tests passing normal mode x getting remaining tests passing get tests passing without jquery ember x componentcontexttestjs failing linktotestjs failing x multipleapptestjs failing x reexportstestjs failing x basictestjs failing x queryparamstestjs failing x emberapplication rwjblue x emberconsole x emberdebug x emberextensionsupport x emberglimmer x embermetal x emberrouting x emberruntime x embertemplatecompiler x embertesting snewcomer x emberutils x emberviews x internaltesthelpers switch packages run ci without jquery see example ember x emberapplication x emberconsole x emberdebug x emberextensionsupport x emberglimmer x embermetal x emberrouting x emberruntime x embertemplatecompiler embertesting x emberutils x emberviews tested moment x internaltesthelpers x rfc allow users opt jquery make sure people using jquery get good errors addon try x write simonihmig rwjblue x merge make sure error messages good people try rely jquery features jquery disabled x ember components pending requests test helpers rwjblue work different way new test helpers anything else write opting jquery guide like deprecation guide except jquery deprecated yet emberjslearningteammanagers blockers shipping flag stuff work considering feature done figure strip extraneous noise jquery imports nojquery mode signify ember observer addon depends jquery kategengler hang community slack coordinating work community slack join devjqueryremoval channel", "num": "16058", "d": "1/2018"}, {"title": "advise helpermodifier", "body": "hello attempting add bootstrap tooltip popovers bootstrap suggests know could make live call would rather make something target specific elements instead adding another watcher whole dom would like something like time intent making content dynamic would like componenthelpermodifier like helpermodifier sense live inside element add attributes required care element else happening element tracked code led believe helper modifier helper even makes sense seems like action helper modifier nt know modifier make one place read topic possible go making better way likely overthinking whole thing addons emberobserver code may read better understand honest still months ember help would amazing also asked slack channel got response thus turned thank greatly", "num": "16055", "d": "1/2018"}, {"title": "query parameter serialization regression", "body": "works fine ember javascript import route emberroutingroute import inject service emberservice export default routeextend ajax service model return thisget ajax request foo data bar qux bar query parameter serialized array generated encoded url looks like model hook raises typeerror following stack trace taking freshlygenerated ember cli repo toggling embersource dependency get workingnonworking version jquery emberajax versions types query parameter values strings numbers nonarray objects seem serializing correctly", "num": "16053", "d": "1/2018"}, {"title": "undefined component integration test", "body": "also posted import ember ember const component computed inject service ember export default componentextend currentuser service classnames listgroupitem tagname li visiblereagents computedfilter inventoryreagents function reagent return thisget currentusershowarchivedreagents reagentget archivedat undefined tests would work well part component integration tests would undefined import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile import startmirage helpersstartmirage moduleforcomponent inventoriesleftmenuitem integration component inventoriesleft menu item integration true setup startmirage thiscontainer aftereach windowservershutdown test renders function assert let inventory windowservercreate inventory title inventory createdat inventoryreagents windowservercreatelist reagent inventory thisset inventory inventory thisrender hbs assertequal li length assertequal badge length nt accessible test", "num": "16052", "d": "1/2018"}, {"title": "chai error attempted access property", "body": "running tests ember beta getting error error assertion failed attempted access property due certain internal implementation details ember property previously contained internal descriptor object private api therefore would internal implementation detail never intended public even intimate api internal implementation detail changed still private descriptor object relocated object meta also private api soon accessing object return computed value see rfc details error seems stem way chai logic works test like let arr beforeeach function arr emberobjectcreate id emberobjectcreate id tests function expect arr tocontain foo chai code blows something like sure reproduce via twiddle clone repo run included test see error note drop back chai problem goes away", "num": "16049", "d": "1/2018"}, {"title": "ember radio buttons prob", "body": "hi following place avg max binding values coming another json object ie querychoice getting values controller getting querychoice need actual binded value", "num": "16042", "d": "1/2018"}, {"title": "emberloggerdebug results double output", "body": "means new ember app using see following output debug build cause boolean logic believe refactored", "num": "16041", "d": "1/2018"}, {"body": "oops already fixed master", "d": "1/2018"}, {"body": "need update blueprint thanks reporting", "d": "1/2018"}, {"body": "mmun would mind taking look without deeper dive seem assertion correct manually mutating ed record array based long standing assertion seems ed specifically takes stance supposed immutable", "d": "1/2018"}, {"body": "yeah make sense point seems like specific case due complex web lies ties together model related records perhaps ca nt get away longer", "d": "1/2018"}, {"body": "fwiw still able mutate array via", "d": "1/2018"}, {"body": "closing think explanation makes sense better understood found better solution", "d": "1/2018"}, {"body": "problem work needs set called case using fields might fix js class mycomponent extends embercomponent tagname constructor though fix problem tagname needs conditional example ember power select", "d": "1/2018"}, {"body": "love work pr using fields seem fix seems transpilation tends spit especially context say something really supported anyway good job making pr", "d": "1/2018"}, {"body": "way get observer called object initialization case would need use thank", "d": "1/2018"}, {"body": "yep use case already done eslint plugin included stock embercli install nt docs reflect need disable linting rule one needs use strategy would happy submit pr", "d": "1/2018"}, {"body": "hello yanzixiang closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "1/2018"}, {"body": "thanks detailed bug report update action usage something idiomatic exact usage demo app basically components template root template eg neither assigning value used element space think specific usage something ember assert unclear related seeing closer make expect easier rule things", "d": "1/2018"}, {"body": "initially found code like leaking memory leaking assuming memoryleak function context usage helper came updated example leak still", "d": "1/2018"}, {"body": "rwjblue spend time boiling maybe looking fix could point right direction would happy dig embers internals", "d": "1/2018"}, {"body": "find description packagesemberglimmerlibcomponentslinktots line let currentwhen get currentwhen next line typeof currentwhen boolean return currentwhen assume something wrong type returned getter", "d": "1/2018"}, {"body": "updated boolean test passing", "d": "1/2018"}, {"body": "thanks reporting essentially issue following", "d": "1/2018"}, {"body": "believe fixed closing happy reopen mistaken", "d": "1/2018"}, {"body": "tested posted repo related errors pop thanks", "d": "1/2018"}, {"body": "add version post", "d": "1/2018"}, {"body": "emberclibabel packagejson", "d": "1/2018"}, {"body": "awesome see survey include services provided addons services", "d": "1/2018"}, {"body": "app output", "d": "1/2018"}, {"body": "three production apps surveys josemarluedke include services provided addons", "d": "1/2018"}, {"body": "intercom numbers counts services eg services use multiple times total", "d": "1/2018"}, {"body": "actions techincally methods called using bind helper templates", "d": "1/2018"}, {"body": "data complex apps yapp app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions also several services mix emberevented emberconcurrency tasks", "d": "1/2018"}, {"body": "data core app tradegecko total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions well several emberconcurrency tasks one usage", "d": "1/2018"}, {"body": "one internal apps total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions", "d": "1/2018"}, {"body": "app", "d": "1/2018"}, {"body": "counting addons numbers number services use one features total count instances", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties nt know actions", "d": "1/2018"}, {"body": "heroku dashboard", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "minutebase total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions kayako total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "wycats finished test broken component behavior found another test skipped demonstrates issues constructors going start adding tests observer behavior next", "d": "1/2018"}, {"body": "pzuraq great work keep em coming", "d": "1/2018"}, {"body": "app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions emberconcurrency tasks app older total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "hey exciting work travisweb total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions sure object proxy services extensions others think mean also sure whether nonvolatile computed properties include guessed", "d": "1/2018"}, {"body": "backspace listed separately object proxy means", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions eventedmixin emberconcurrency tasks", "d": "1/2018"}, {"body": "counts ghost proxymixin injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions eventedmixin", "d": "1/2018"}, {"body": "tradegecko total services computed properties going grow quite", "d": "1/2018"}, {"body": "great looks like far dominant usecases service injection computed properties simple computed property macros like alias readonly really great news features clearer path direct migration classes features ember object model like concatenated properties keep surveys coming", "d": "1/2018"}, {"body": "actions services think feature might unused mainly due education people nt know opinion untapped feature especially immutable state service example love actions work functions bound parent object default would prevent need object", "d": "1/2018"}, {"body": "knownasilya personal opinion modern ember actions functions point helper bind function therefore nt need worry oldstyle actions new code think", "d": "1/2018"}, {"body": "personal opinion modern ember actions functions point action helper bind function definitely semantics inferred interestingly also taken perspective voted actually fixing semantics please review history suggest point simple binding purposes folks use helper provided rather therefore nt need worry oldstyle actions new code think tbh nt think simple might writing new code authoring replacement existing concept consider refactoring service controller new code talking template code totally agree refactor number templates simply refactor service seems nonideal", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "fyi others disttag corrected issue track fixing cause", "d": "1/2018"}, {"body": "cc emberjslearningteammanagers", "d": "1/2018"}, {"body": "looks like link updated point longer gives whoops error however leaves user top page rather jumping event names section something easy add nt know scroll find relevant content could confusing", "d": "1/2018"}, {"body": "hi heahcamerountoiaussiquelleimage sorry use github bug reports post question stack overflow join slack community thank good luck", "d": "1/2018"}, {"body": "route using template component called faults template could also higher hierarchy like example would like call component faults template fetch closest component folder tree", "d": "1/2018"}, {"body": "moved", "d": "1/2018"}, {"body": "would make main component move element template quite easy wrap conditional", "d": "1/2018"}, {"body": "know comes implementation issues well eg longer use would traverse dom find actual element call methods leads actual current solution use wrapper parent component something feel needed", "d": "1/2018"}, {"body": "note element reset issue also applies stateful dom elements like maybe glimmer handle", "d": "1/2018"}, {"body": "solution suggested almost certainly path forward much closer glimmer components template includes root element instead configuring js definitely agree still issues dealt finding element decent work arounds well example grab video element could something like js let videoid export default componentextend tagname init thissuper arguments didinsertelement thisvideoelement documentgetelementbyid", "d": "1/2018"}, {"body": "rwjblue shall close", "d": "1/2018"}, {"body": "sure close happy reopen suggestion nt work", "d": "1/2018"}, {"body": "putting browser support matrix readme would confusing master branch canary channel point would list edge evergreen browsers current release still supports tracked", "d": "1/2018"}, {"body": "already private property class hm sure specifically going provide embertwiddlecom reproduction", "d": "1/2018"}, {"body": "see used route codebase sure injection work service injections marked private api maybe throw error someone tries inject router service route using basic twiddle see console logged error router service instance", "d": "1/2018"}, {"body": "closed tracked", "d": "1/2018"}, {"body": "pr", "d": "1/2018"}, {"body": "addressed pr mentioned", "d": "1/2018"}, {"body": "resolved browserstack updated opensource account", "d": "1/2018"}, {"body": "hello mehrajpasha closing since emberjs bug please go help channel slack registered use slackin app fourth time invite join channel ask help please use slack triaging time limited would grateful could go bugs thank", "d": "1/2018"}, {"body": "krisselden provide context bug fix pr makes issue worse less likely render fully resolved visit promise resolved refer specific behaviors need change current implementation us consider promise resolution fixed close bug", "d": "1/2018"}, {"body": "promise resolves", "d": "1/2018"}, {"body": "also think would nice api promise rendering settled", "d": "1/2018"}, {"body": "mechanism flush tests artificially forced visit behave synchronously swapped use instead temporarily fixed test failures work progressing", "d": "1/2018"}, {"body": "want help get branch passing normal mode follow instructions contributions target", "d": "1/2018"}, {"body": "sure matters want access npm package even move somewhere please contact", "d": "1/2018"}, {"body": "topaxi package right assume thinking use let people opt original functionality", "d": "1/2018"}, {"body": "actively working getting branch passing", "d": "1/2018"}, {"body": "took look amp references jquery", "d": "1/2018"}, {"body": "checked packages w wo packages pass emberconsole tests emberviews tests emberdebug embermetal emberruntime emberutils internaltesthelpers", "d": "1/2018"}, {"body": "would like pick package", "d": "1/2018"}, {"body": "get package passing locked ci runs without jquery see initially setup", "d": "1/2018"}, {"body": "looks like switched run ci without jquery added separate todo ensuring packages locked edit looking older version file four modules", "d": "1/2018"}, {"body": "acorncom woot woot", "d": "1/2018"}, {"body": "got tests passing branch reason tests failing evening love pr get things passing nobody tackles try wrap later weekend", "d": "1/2018"}, {"body": "anything help", "d": "1/2018"}, {"body": "think take look bug branch", "d": "1/2018"}, {"body": "wycats yeah take look promises figure though give shot tomorrow morning", "d": "1/2018"}, {"body": "wycats emberjquery includes jquery vendor bundle also allows including slim version instead full jquery build yes thought might used optin old behavior", "d": "1/2018"}, {"body": "wycats browserstack failures wanted look seems first jobs failing travis sure related tried running browserstack tests locally could nt seem get work would recommend setting vm ie nt generally test ie", "d": "1/2018"}, {"body": "others looking test browsers microsoft provides virtual machines testing edge amp ie", "d": "1/2018"}, {"body": "landed emberglimmer changes wycats working unlocked package anyone time pick wycats left push without jquery finish line", "d": "1/2018"}, {"body": "rwjblue snewcomer need land", "d": "1/2018"}, {"body": "rwjblue still looking help emberglimmer never looked code try help", "d": "1/2018"}, {"body": "looks like finished confirming", "d": "1/2018"}, {"body": "wycats yes finished remaining package took brief looks quite many failures straightforward fix however think might make sense decouple", "d": "1/2018"}, {"body": "decouple way", "d": "1/2018"}, {"body": "wycats think decouple per file good enough somebody wants still current state package disabled packagesembertestscomponentcontexttestjs failing packagesembertestshelperslinktotestjs failing packagesembertestsintegrationmultipleapptestjs failing packagesembertestsreexportstestjs failing packagesembertestsroutingbasictestjs failing packagesembertestsroutingqueryparamstestjs failing", "d": "1/2018"}, {"body": "thanks updated", "d": "1/2018"}, {"body": "emberjslearningteammanagers additional instructions ember data", "d": "1/2018"}, {"body": "anything left error message front", "d": "1/2018"}, {"body": "hello thettl closing since emberjs bug please go help channel slack registered use slackin app possible create custom element modifiers rfc thank", "d": "1/2018"}, {"body": "thank information serabe find alternate methods though mentioned also asked slack channel got response thus turned wonderful day", "d": "1/2018"}, {"body": "mwpastore could publish demo repo test possible fix", "d": "1/2018"}, {"body": "fwiw related", "d": "1/2018"}, {"body": "recent commit pushed fix without actual repro ca nt confirmdeny whole thing works", "d": "1/2018"}, {"body": "rwjblue quick quite literally repo one route published", "d": "1/2018"}, {"body": "rwjblue tried pr repro repo say ten times fast getting progress", "d": "1/2018"}, {"body": "digging essentially issue following", "d": "1/2018"}, {"body": "believe fixed closing happy reopen mistaken", "d": "1/2018"}, {"body": "sure ember bug may need move different issue tracker done investigation generally speaking nt see obvious issue though odd start routing component test code snippets shared type test known work think would need reproduction repo could clone test", "d": "1/2018"}, {"body": "right thinking could linked mirage also yes routing stuff useless removed still working hard issue going isolate separate repo look come back first need upgrade app latest mirage realised something need anyway might solve current problem", "d": "1/2018"}, {"body": "rwjblue dummy repo uncomment debugger line run usual compare debug mode type see defined debug mode type see dummy app nt need app need get thanks advance", "d": "1/2018"}, {"body": "example use arrow functions want correct arrow functions intentionally modify context inside function match context created case creating arrow function module scope strict mode context fix issue would need update", "d": "1/2018"}, {"body": "ha sorry think changed automatically perhaps using actual inside context unfortunately gives result without arrow functions pushed", "d": "1/2018"}, {"body": "hi stephanebruckert demo project adds ton deps packagejson bowerjson try reproducing brand new project using mirage add model route etc many deps track happening easily thanks", "d": "1/2018"}, {"body": "hi back brand new project commit shows available expected commit shows available anymore soon relationship added main model thanks time also asked", "d": "1/2018"}, {"body": "explained soquestion bug ember might bug mirage override custom collection type without proper management", "d": "1/2018"}, {"body": "thanks luxferresum suggested worked around ember issue maybe emberclimirage issue discussed thanks everyone", "d": "1/2018"}, {"body": "issue chai attempting provide nice display message failing assertion custom display logic accomplish using copyfork node see invoked recursively inspects property object function invoke essentially way customize inspection output ala specific situations node recommended way customize inspection changed implementing function object using custom symbol see existing descriptor trap already handles properly believe correct solution add list exceptions descriptor trap mind sending pr", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "running similar issue using chai deep equal however case property try add detailed reproduction time wish better understanding since basically test failures ember related section code chai related", "d": "1/2018"}, {"body": "dhaulagiri goal assertion throw error folks touch descriptors way nt possible accidentally pretty uncommon situation prior implementing emberjsrfcs native getters cps wanted ensure folks relying using descriptors directly prototype think example make much simpler thisget first thisget last let person personcreate first robert last jackson worked definition worked ember versions descriptor trap specifically geared towards making throw descriptive error since used personnameget", "d": "1/2018"}, {"body": "makes sense reason bit head scratcher errors come across actually app code directly either chai described jquery plugin need dig see actually happening", "d": "1/2018"}, {"body": "right usage proxy somewhat hard get right actually reports legitimately catching bugserrors test code accessing cp like always previously throwing error concerned usages type describe general object probing really related specific issues trying flag actually going make assertion less useful extremely noisy one possible solution would remove branch instead assert user accesses one known properties computed property prototype allow access return chancancode thoughts", "d": "1/2018"}, {"body": "reopening even though landed fixes many scenarios still certain covered cases dhaulagiri running", "d": "1/2018"}, {"body": "rwjblue pushed another sample test mimics app code sample repo reproduces error seen", "d": "1/2018"}, {"body": "awesome thank try dig afternoon", "d": "1/2018"}, {"body": "continues game whackamole added exceptions merged clean keep hitting new land mines another one related jquery plugin using attempted access property object object object object adding exception triggers error", "d": "1/2018"}, {"body": "old version jquery believe line latest version line triggering us app", "d": "1/2018"}, {"body": "going use motivation remove jquery plugin question since wanted anyway chai issue reproduced comment still lingers", "d": "1/2018"}, {"body": "dhaulagiri believe recent changes addressed remaining issues tested sample repo latest beta build includes changes tests pass", "d": "1/2018"}, {"body": "rwjblue thank sure test next release confirm sounds like able close", "d": "1/2018"}, {"body": "confirmed chairelated errors fixed confirm jquery one since removed plugin codebase looks like others able confirm linked issues", "d": "1/2018"}, {"body": "fyi fix released part", "d": "1/2018"}, {"body": "confirmed figure new test failures coming try report", "d": "1/2018"}, {"body": "thank reaching mehrajpasha however reserve issue tracker bugs ember check community page stackoverflow discuss slack links ask question good luck", "d": "1/2018"}, {"body": "definitely truthy javascript ember different mentioned think latter probably syntax error nt think seen examples ember docs wanted clarify intended behavior", "d": "1/2018"}, {"body": "behavior worked point past", "d": "1/2018"}, {"body": "sure knowledge", "d": "1/2018"}, {"body": "discussed sorry tell closing bug changing behaviour would affect ember users cause strange behaviour scenarios vs thank sorry inconveniences", "d": "1/2018"}, {"body": "serabe worries think answered question sufficiently came alternative approach emblem thanks", "d": "1/2018"}, {"body": "think intend support disabling provided example trigger assertion basically value passed array assert", "d": "1/2018"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "1/2018"}, {"body": "went prs updated current state need know couple details thoov embermetal complete mikerhyssmith need help emberruntime thank", "d": "1/2018"}, {"body": "serabe embermetal complete yet remaining work done pr either later today sometime weekend", "d": "1/2018"}, {"body": "hi serabe sorry delay pr done weekend", "d": "1/2018"}, {"body": "np thank", "d": "1/2018"}, {"body": "thoov add info refactoring packagesemberruntimetestssuites use conventional system specifically like something like described", "d": "1/2018"}, {"body": "rwjblue yes add example converting emberruntime example", "d": "1/2018"}, {"body": "mikerhyssmith packagesemberruntimetestssuites currently concept called suitebuilder needs converted newer abstracttestcase model js const suite suitemodulebuildercreate suitemodule includes suitetest includes returns correct value startat positive function assert let data thisnewfixture let obj thisnewobject data assertequal objincludes data true return true included assertequal objincludes data false return false included internaltesthelperslibtestcases class runtimetestcase extends abstracttestcase newfixture newobject js convert tests pretty much one one modulefor includes class extends runtimetestcase test includes returns correct value startat positive function assert let data thisnewfixture let obj thisnewobject data let know need help anything packagesemberruntime", "d": "1/2018"}, {"body": "thoov thanks noticed fair remaining tests testboth work done embermetal tests support need wait go first", "d": "1/2018"}, {"body": "michaelklishin moving away testboth hood converting however second qunit test references usesaccessors never set therefore nt useful originally going support cases probably saw realized could kill one pr recently moved away testboth use guide let know need help anything", "d": "1/2018"}, {"body": "running issue embercli", "d": "1/2018"}, {"body": "believe need initialize controller check default values query params order know display trying confirm", "d": "1/2018"}, {"body": "confirmed commenting twiddle indeed lead things working thanks dhaulagiri", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "serabe sorry totally forgot bit time week check", "d": "1/2018"}, {"body": "evoactivity ping", "d": "1/2018"}, {"body": "serabe terrible nt actually minutes ping timed well confirm updating resolve issue", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "stefanpenner ping", "d": "1/2018"}, {"body": "serabe problem resolved suspect want close must ensure folks carrying torch", "d": "1/2018"}, {"body": "filed crbug sent friendly reminder tweet", "d": "1/2018"}, {"body": "svenpl behaviour documented somewhere find thank", "d": "1/2018"}, {"body": "find either maybe even working plain object already unwanted behaviour", "d": "1/2018"}, {"body": "quite likely closing please change code supported method signature thank", "d": "1/2018"}, {"body": "cahbriangantzler ping", "d": "1/2018"}, {"body": "sorry must missed first one ill see reproduce small application", "d": "1/2018"}, {"body": "sorry search code lot repos commits find happening included info request would reminded code happening guess figured would remember much time passed might close time give example even without example though someone able explain code far use didseen set curious thanks", "d": "1/2018"}, {"body": "experience tests run isolation whole suite run means tests quite likely ones failing sideeffect free many possible reasons sneaky one using promises tests automatically wait resolve plain starts one tests settleds another causing latter fail thank", "d": "1/2018"}, {"body": "think due change use length certain conditions always gets means property calculated way earlier update somehow marked watched tests ember length computed glimmer rerender chaindepswatching fase somehow latter makes rerender thinks value changed must say really familiar glimmer code tests maybe someone else take", "d": "1/2018"}, {"body": "think might eager say dep already done scenario key actually gets multiple calls also invalidate watching nodes depend remembers already done prevents chains reregistering deps breaks chain manifest since chains would register next render dirty recomputed yet one recompute fine length recomputed render first time updated chains incomplete state removed dependencies never recomputed would reset depwatch tree could fix issue ignoring didseen altogether function dependentkeysdidchange obj depkey meta meta meta depkey return var seen didseen var top seen maybe changes grouped another way array gets one change didseen entries get reset false told recompute somewhere edit nt know didseen supposed cycle detection could also reset end", "d": "1/2018"}, {"body": "closing according triage policy please answer previous comments reopen thank", "d": "1/2018"}, {"body": "averydev statement makes easier add remove elements", "d": "1/2018"}, {"body": "rtablada yep confirming isolating bug exists regardless element removed dom result change evaluation conditional template", "d": "1/2018"}, {"body": "appears way teardown event handler attached onclick attribute short use style attaching event items destroyed recreated eg long list browser cleans us element handler attached detached dom unreachable javascript elements dom object js wrapper collected point browser point collect attached handler good thing plenty good alternatives listener downside infact would strongly encourage direct property listeners possible", "d": "1/2018"}, {"body": "ran examples chrome seems improved gc abandoned listeners since bug reported whew previously seen abandoned listeners last seemingly forever leaving alone enough gc using syntax lots listeners likely addedremoved blog post bug point recommend closing", "d": "1/2018"}, {"body": "averydev memory growth chart climb simply gc pressure mean leak comparison heap snapshot snapshot toggling onoff times toggling onoff times leak closure action dom removed", "d": "1/2018"}, {"body": "krisselden thanks confirming got distracted bugging friends existing open memory issues forgot issue minutes using syntax would strongly recommend", "d": "1/2018"}, {"body": "oh stefanpenner downside aware", "d": "1/2018"}, {"body": "simplest work dom specified api also takes form data binding hood imho legacy originates templates aware html syntax could", "d": "1/2018"}, {"body": "ok good know thanks", "d": "1/2018"}, {"body": "scissorsneedfoodtoo work", "d": "1/2018"}, {"body": "scissorsneedfoodtoo juventinoromero update apidocs supports release url deployed today go ahead convert links inline documentation suggest breaking directory folks work concurrently get band update description make quest style yes feel free start", "d": "1/2018"}, {"body": "toddjordan issue emberlearnemberapidocs emberjsemberjs sorry stupid question", "d": "1/2018"}, {"body": "please starting part ask lock nt duplicate efforts thank", "d": "1/2018"}, {"body": "emberjs code changes need made repo inline documentation", "d": "1/2018"}, {"body": "lend hand start bottom three embertesting emberextensionsupport emberutils", "d": "1/2018"}, {"body": "ynotdraw go bit wrapped another project", "d": "1/2018"}, {"body": "ynotdraw go ahead also busy another project week catch later thanks", "d": "1/2018"}, {"body": "take", "d": "1/2018"}, {"body": "sure williamhaley let know questions", "d": "1/2018"}, {"body": "check ynotdraw pr example needs done", "d": "1/2018"}, {"body": "similar work tracked guides", "d": "1/2018"}, {"body": "bandwidth weekweekend another set feel free assign embertemplatecompiler nodemodule emberenvironment loader", "d": "1/2018"}, {"body": "looks like following require url updates marked list embertemplatecompiler nodemodule emberenvironment loader move next three appear need changes emberrouting internaltesthelpers emberconsole", "d": "1/2018"}, {"body": "take package", "d": "1/2018"}, {"body": "package looks like nt require change either one file package indexjs links pointing api docs edit references global api made pr", "d": "1/2018"}, {"body": "first contribution seems like good one start", "d": "1/2018"}, {"body": "pick today", "d": "1/2018"}, {"body": "changes see pick", "d": "1/2018"}, {"body": "thanks everyone submitted prslooked packages heart reviews evening", "d": "1/2018"}, {"body": "looks like close book one thanks much ynotdraw parrryy karthiick marcoumpierrez williamhaley making happen cool see come together", "d": "1/2018"}, {"body": "closed fixed", "d": "1/2018"}, {"body": "howdy folks hit issue working new guidesapp reproducible way hitting bug using liquidfire presence loading template causes issue steps reproduce clone repobranch npm wait prembertrue npm start one issues sure causing problems reproducing issue nt seem consistent reason able say method reproduces prember configured prerender pages least one issue guaranteed", "d": "1/2018"}, {"body": "experienced version tests use sinonjs stubbing functions calls test like passing js test shows correct error message function assert const sandbox sinonsandboxcreate stubs async call made component const stub sandboxstub model function returns rsvpreject error line thisrender hbs return wait gt assertequal assertion rsvpreject propagates chain breaks test apart rwjblue suggestion changing line use sinon helper also works sinon methods return native js promise rsvp", "d": "1/2018"}, {"body": "hey encountered issue far understand fixes workarounds yet", "d": "1/2018"}, {"body": "stumbled solution set value change checkbox erase value show correct value chrome say following ensure correct behaviour browsers quote someone chatroom answering hairy ie question properly light incense order chant throw chicken bones instances like make question less silly insanity find", "d": "1/2018"}, {"body": "perhaps pertinent question change order value type attributes get behaviour edit jsfiddle shows mean", "d": "1/2018"}, {"body": "get example specify layout child component", "d": "1/2018"}, {"body": "mhluska like solution answer javascript import originalcomponent originalcomponent export default originalcomponentextend layoutname componentsoriginalcomponent", "d": "1/2018"}, {"body": "still happens really", "d": "1/2018"}, {"body": "fwiw digging see leveraging jwt swap browserstack worked found indicates jwt addon deprecated removed future therefore travis folks would nt land pr adding browserstack jwt support", "d": "1/2018"}, {"body": "stefanpenner man thanks", "d": "1/2018"}, {"body": "solved manually updating url error action error error transition const router thisget routerroutermicrolib let url", "d": "1/2018"}, {"body": "experienced problem could nt find better solution calling inside hook", "d": "1/2018"}, {"body": "also experiencing issue sudden probably since upgrading dependencies try reproduce", "d": "1/2018"}, {"body": "also lose time figure false positive error using inside documented guide api nevertheless still produces error would save time lot emberjs new comers", "d": "1/2018"}, {"body": "also happens news", "d": "1/2018"}, {"body": "today stumbled upon bug refresh route model exactly ie model hook called ember lts ember edit workaround", "d": "1/2018"}, {"body": "unless missing transition still documented emberjscom", "d": "1/2018"}, {"body": "kerrick right looks like removed documentation last time", "d": "1/2018"}, {"body": "see", "d": "1/2018"}, {"body": "marking issue stale due inactivity someone reproduction current version ember happy reopen", "d": "1/2018"}, {"body": "serabe also extremely unlikely root cause issue persists since rendering engine rewritten entirely since issue addressed backflow rerendering directly since", "d": "1/2018"}, {"body": "amazing ember devs would address ridiculous control controllers must use ember create emberview dom controllers follow component spec", "d": "1/2018"}, {"body": "issue resolved lands", "d": "1/2018"}, {"body": "excellent sorry nt realize coming", "d": "1/2018"}, {"body": "explained brettburley serializer qps work depends value default value thank", "d": "1/2018"}, {"body": "closing inactive", "d": "1/2018"}, {"body": "want ability work pojo send object party vanilla js library", "d": "1/2018"}, {"body": "yes please struggling party api current workaround object array fields seems silly function would great", "d": "1/2018"}, {"body": "taras sure never implemented workaround", "d": "1/2018"}, {"body": "nt know really maintaining embercliappversion anymore could try file bug", "d": "1/2018"}, {"body": "live ca nt find ember api docs", "d": "1/2018"}, {"body": "might seem like old post think override active class might need reopen linkcomponent app initializers folder ember like import linkcomponent emberroutinglinkcomponent export function initialize application linkcomponentreopen activeclass export default name attributes initialize class attribute helper could shed light issues", "d": "1/2018"}, {"body": "notifypropertychanged nt force nt changed could something tells ember something changed update template old chap even nt changed", "d": "1/2018"}, {"body": "would side effects update template value nt changed", "d": "1/2018"}, {"body": "extremely basically functionality sadly missing would helpful focus getting basics right going adding bells whistles framework", "d": "1/2018"}, {"body": "timothyerwin actually pretty easy work around also think right bad moment change things like tracked im glimmer show need rethink entire cpthing long term also nt get wrong would love sometimes", "d": "1/2018"}, {"body": "ember issue encounter frequently lately often hidden behind something else like filter sort cp macro easy forget effectively creating dependent key nested properties", "d": "1/2018"}]