[{"title": "almondrequirejs build issue beta builds ok release build ok", "body": "made project show issue bundling ember almond works beta builds bundling ember almond works beta builds bundling ember almond work release builds something specific happens release build look", "num": "5512", "d": "8/2014"}, {"title": "templates auto generating android default browser", "body": "getting following error running application android default browser browsers missing template auto generated application running ember ps android pain debug ended use weinre", "num": "5511", "d": "8/2014"}, {"title": "feature request namespace resolver use declarative class application etc", "body": "understand small projects naming conventions makes sense like small rails projects however larger projects namespaced convention surely makes sense looking create app could default configured use default resolver easily reconfigured use namespace resolver even use fallback default resolver comes empty emberdefaultresolver resolver null assume would nice option added docs well could use following rules use convention typical directory structure gt lookup strategy important coz makes declarative logic much simpler implement say subset routes tree need authentication hardcoded way route say want authentication routes start could like leaving class creation declarative instantiation later key approutes matching admin subclass authenticating route example approutesadminprofileedit approutesrouteauthenticationextend approutesadminprofileedit could course backported existing flatnamespace strategy using complex regular expressions namespaced strategy provides way leverage future fex easy listloop route classes etc see contribute idea side project could live canary like anything like cheers", "num": "5509", "d": "8/2014"}, {"title": "automatically closing tags opened handlebars conditionals", "body": "testing upgrade noticed links rendering correctly open inside handlebars conditional working working", "num": "5507", "d": "8/2014"}, {"title": "timing queryparams updates controllers confusing deep slow route models", "body": "jsfiddle actual demonstration problem requires manually hitting route directly via url weirdness trying demonstrate loading routes used route query parameters route takes resolve prevents query params updating lower level controller deeper routes resolve client side filtering cause weird issues like double renders etc link see list developers render initially even though searchalex passed url filtering desired results demonstrate problems cause deep route attempting use controller query params search expecting query params would updated shallower route allowing use controller filtering code actual application interactions lot complex difficult describe think fiddle touches core problems running earlier versions query params exhibit issue far tell", "num": "5506", "d": "8/2014"}, {"title": "computed properties nt get updated properly depending promiseobject", "body": "bug appears using ember data believe actually bug ember promiseobject fulfills observers triggered properly reflect changes check jsbin see result using observer code noticed issue dependent keys going multiple associations", "num": "5505", "d": "8/2014"}, {"title": "provide function look default value queryparams", "body": "seeking feedback idea adding router function lookup default value query parameter case one two query parameters use helper subexpression bound computed property logic ends duplicating default value yuck example javascript apphomecontroller embercontrollerextend sortby function var defaultvalue type value defaultvalue logic new value determined return value property b c apppostscontroller emberarraycontrollerextend queryparams sortby sortby type example computed property know default queryparam going posts controller way indicate subexpression like choose default value value specify gets converted string including undefined null see two possible options add mechanism subexpression indicates default value desired though seems breaking provide router hook similar private hook makes possible look default value love hear thoughts approaching problem", "num": "5503", "d": "8/2014"}, {"title": "emcomputed way concat arrays arrays", "body": "right users users posts reference users get unique array posts would fancy footwork definitely involving writing computed property function think emcomputed property maybe called concatarrays used like var ctrl emobjectcontrollerextend", "num": "5502", "d": "8/2014"}, {"title": "mapby produces outofrangeexception appreset model set null", "body": "ran problem using mapby like setting controller model null exception raised problem unless appreset surfaces specs coded full gist demonstrating issue using ember data latest ember canary problem surfaced upgraded ember data workaround use mapby manually make computed property want", "num": "5500", "d": "8/2014"}, {"title": "components ignore layoutname", "body": "perhaps misunderstand supposed used seems components ignoring jsbin would expect component use template specified", "num": "5499", "d": "8/2014"}, {"title": "render assert false template view found", "body": "seems like logic wrong got far name populated route options args seems like assert", "num": "5498", "d": "8/2014"}, {"title": "strange behaviour inside using", "body": "somehow broken ember using ifstatement inside eachloop templates nt work like ifstatement prints true false nt seem logic see version version", "num": "5496", "d": "8/2014"}, {"title": "ember data createrecord without relationship fields data", "body": "ember model like var attr dsattr hasmany dshasmany belongsto dsbelongsto appmessage dsmodelextend users belongsto user message attr userid attr inquiryid attr route want save like var createmessage thisstorecreaterecord message message sample message userid inquiryid createmessagesave saw request ember data also added users fields nt send field request way want use users relationship field get request post request version ember emberdata", "num": "5495", "d": "8/2014"}, {"title": "ember testing wait modal window", "body": "application use bootbox confirming delete models test click button action action open bootbox text click ok button bootbox andthen method wait bootbox dissapear check model removed therefore always false tried return promise andthen helpen also nt wait promisses way let test wait untill promise bootbox resolved callback bootbox finished extra information template view controller test click specificrow actionbuttons button latest ok called save action controller triggered therefore alwasy false", "num": "5494", "d": "8/2014"}, {"title": "change event inputs textareas", "body": "quite handy event indicates focusout happened value changed way achieve afaict store previous value compare pretty tedious also seems quite unexpected works nt know use observers case want run action focusout", "num": "5492", "d": "8/2014"}, {"title": "select views nt access targetobject", "body": "suppose looping model itemcontroller call thisget targetobject change event textfieldextension class access correct thing itemcontroller however switch select call thisget parentviewcontroller access info least found work far leaving targetobject property intended omission ember selects better way access itemcontroller thisget parentviewcontroller", "num": "5488", "d": "8/2014"}, {"title": "passing classnames view component template breaks event handling", "body": "example issue rare case want set property containing array strings breaks helper entirely causing click listener seemingly ignored underlying anchor element actually perform navigation path set taken quick look source nt see obvious reasons happens example sources ember also happens", "num": "5487", "d": "8/2014"}, {"title": "nextsuper property objects", "body": "know lot changes going stuff think found bug added property objects example js var emberobjectcreate var name ohasownproperty name consolelog name run code logged console jsbin lazy oddly enough nt include assuming property declared object declared enumerable nt know bug exactly maybe quirk certainly broke code", "num": "5485", "d": "8/2014"}, {"title": "input component passing attribute type throught another component working", "body": "hi everyone think encountered bug input helper see fiddle information used chrome version issue try pass type input helper via another component work strange thing able pass name attributes well", "num": "5484", "d": "8/2014"}, {"title": "didinsertelement invoked without rendered template", "body": "going tilde training chicago using latest version ember via bower pushed exact progress replicating bug latest commit step run issue running test suite step audio matches words audioplayer template nt seem rendered invoking however defined nt able trace existing issue perhaps fault tests training year ago something else going thanks jonathan", "num": "5483", "d": "8/2014"}, {"title": "query params set model promise resolved", "body": "trying beta looks like queryparams set controller model hook resolved using promise try put jsbin together presume intended behaviour model hook setupcontroller called queryparams set", "num": "5479", "d": "8/2014"}, {"title": "route queryparameters reject model nt fire error state history router", "body": "index route query parameter option set true model route always fails test purpose course exemple found expected application go error state add query parameter application nt go error state try link gt note happens query parameter mode router location", "num": "5478", "d": "8/2014"}, {"title": "slug names must unique children resources", "body": "steps reproduce map router child containing slug name ancestor click link bar url update updated example offending code handlerinfoparams merge id multiple times", "num": "5477", "d": "8/2014"}, {"title": "html tag rendering alongside components", "body": "experiencing bug since upgrading recent canary version ember morph changes noticed completely losing bare tags example view rendered notice appear come components use style implementation sorting mechanism use application simplified illustrate issue jsbin example demonstrating issue linked also", "num": "5476", "d": "8/2014"}, {"title": "better error computedalias key self", "body": "stupid thing would also easy error catch throws infinite stack nt point know silly bug throwing descriptive error", "num": "5471", "d": "8/2014"}, {"title": "setting controller property update query param", "body": "controller defined routes setupcontroller something like query param get set url see working bin", "num": "5465", "d": "8/2014"}, {"title": "calling super frozen object results violation freeze", "body": "possible raised exception modifying frozen object exception raised though already replaces general case could addressed may ref", "num": "5464", "d": "8/2014"}, {"title": "applied mixins define nextsuper property correctly", "body": "see jsbin javascript var item foo bar var array item var myarraymixin embermixincreate contains function return thissuper myarraymixinapply array true false false false consolelog arrayhasownproperty nextsuper arraypropertyisenumerable nextsuper arraycontains true false true true consolelog arrayhasownproperty nextsuper arraypropertyisenumerable nextsuper currently defined function called creating new object array really mixins applied array instance never call constructor set instantiation correct nonenumerable configuration similar general case specific issue addressed could addressed may ref", "num": "5463", "d": "8/2014"}, {"title": "embercomputeddefaultto behaves unexpected way", "body": "defaults value property nt update property changes seems unexpected maybe could add ability indicate default update property changes eg jsbin shows unexpected behaviour", "num": "5462", "d": "8/2014"}, {"title": "add api documentation query params", "body": "need document new api added query params examples maybe", "num": "5460", "d": "8/2014"}, {"title": "handlebars helpers working properly", "body": "noticed updating canary made quick jsbin demo first one uses ember build second latest canary examples identical code wise working properly", "num": "5456", "d": "8/2014"}, {"title": "controller property goes sync template binding", "body": "going crazy pretty sure work nt seem reproduce click tweet link multiple times expands first time wo nt expand even though controller property changing", "num": "5455", "d": "8/2014"}, {"title": "container resolver come registry lookup", "body": "particular reason container check resolver checking registry see reason ask trying stub adapter use icajax integration test know work arounds could make work philosophically seems purpose container really allow injectregister factories make testing much easier always check resolver registry seems philosophy defeated", "num": "5454", "d": "8/2014"}, {"title": "returns undefined hook ember", "body": "method declared follows javascript adddynamiccss function var dynamiccss thisget cssinfo thisremoveattr style thiscss dynamiccssproperties observes cssinfo didinsertelement code works ember without problems resolves therefore gives following error", "num": "5452", "d": "8/2014"}, {"title": "svg sprites losing gradient info", "body": "tried use svg sprites ember application found gradients linear gradients break see nonember working version mixonic noted irc innerhtml seems work", "num": "5449", "d": "8/2014"}, {"title": "computed property watching query param invalidated refreshed", "body": "computed property dependent query param coffeescript projectcontroller emberobjectcontrollerextend queryparams card card null backlogcard get data save item item property card testfunc observes card observer works expected called every queryparam change problem function executed route loaded never refresh changes cache purged though function executed property accessed directly alas ca nt get app run canary currently property missing simplehandlebarsview known problem try put together jsbin", "num": "5436", "d": "8/2014"}, {"title": "input typecheckbox nt component", "body": "although issue closed think would worthwhile support developing app could actually wire action checkbox manner although according referenced issue would breaking change believe would add symmetry reduce confusion cc stefanpenner even confused mighty one", "num": "5433", "d": "8/2014"}, {"title": "checkbox lost state ember action", "body": "click checkbox loses state simple action checkinvoice function number var invoicesthisget invoices var modelthisget model modelforeach function item itemnumbernumber itemselectedtrue invoicespushobject item return also tried bind value still working", "num": "5431", "d": "8/2014"}, {"title": "linkto complex query param blows", "body": "query param mapped nested property trying include invocation throws exception eg results following error", "num": "5429", "d": "8/2014"}, {"title": "unable link resource named object", "body": "trying create resource called object using linkto helper try get path link object works fails", "num": "5425", "d": "8/2014"}, {"title": "poor error message missing component", "body": "example", "num": "5424", "d": "8/2014"}, {"title": "attribute binding textarea style property", "body": "howdy wondering reason attribute binding controls specifically textarea case trying integrate editor copies styles inline cheers", "num": "5423", "d": "8/2014"}, {"title": "duplicate objectcreate shims", "body": "documenting remove later containerhelperjs packagesemberhandlebarscompilerlibmainjs", "num": "5408", "d": "8/2014"}, {"title": "layouts selfclosing component tags", "body": "applying custom component extending layout actually applied however applying layout layout applied documentation textfield textarea claim able either jsbin demonstrating side note documented reasoning preventing nt really make sense correlation tag selfclosing supporting layouts long layout template nt able wrap contents regardless content use case like able directly extend form components apply wrapping markup seems like would common desired feature technical limitations", "num": "5405", "d": "8/2014"}, {"title": "handlebars helper item model use itemcontroller defined", "body": "hi actually sure bug expected behavior ran seemed somewhat unintuitive also see argument way issue itemcontroller property defined arraycontroller would expect use specified itemcontroller case realize two semantically somewhat different imagine user specified itemcontroller property wants itemcontroller used fiddle bug submit fix", "num": "5401", "d": "8/2014"}, {"title": "ember dont work twig", "body": "hi know wrong place ask question still answer stackoverflow using symfony project incule twig try use emberjs problem try verbatim toggle navigation brand link link link link link link endverbatim display nothing thanks helping", "num": "5395", "d": "8/2014"}, {"title": "coreobjectreopen nt handle actions hash", "body": "would expect cause routes action called instead seems action nt picked instances reopened class jsbin setup sure intended functionality bug even intended would useful call docs somewhere especially since extending classes actions hash even mixing actions hash works expected jsbin js actionmixin embermixincreate actions mixedinaction function alert mixed action fire appindexroute emberrouteextend actionmixin actions mixedinaction function alert subclassed action fire thissuper", "num": "5394", "d": "8/2014"}, {"title": "metalviews interferes mutationobserver", "body": "component grab register metalviews observer never fires ideas testing liquidfire metalviews compatibility working little effort", "num": "5386", "d": "8/2014"}, {"title": "hashchange event returns index routetransitionto fired view click event", "body": "configuring action route pass via controller view menu item configuring click event fire action menu item clicked transitionto occurs hashchange fires immediately route changes causes second transition back index really stumping fiddle using ember also able replicate", "num": "5385", "d": "8/2014"}, {"title": "handlebars error could find property queryparams", "body": "enabled features still working using embercli", "num": "5383", "d": "8/2014"}, {"title": "textarea inputhelper strips input first letter", "body": "seems like textarea helper strips input first letter property cols set template working textarea valuebody rows cols class formcontrol working textarea valuebody rows class formcontrol whether bug bad use guys personally spent time finding bug kind regards steffen", "num": "5382", "d": "8/2014"}, {"title": "changing model affected view", "body": "hi try add data model manually like data successfully loaded see ember debugger problem data render view template applicationhbs note load data using work fine custom url ca nt use construction", "num": "5381", "d": "8/2014"}, {"title": "uncaught error could find module handlebars", "body": "hi first time try emberjs every work fine starterkit put ember project use symfony framework found error console import thanks helping", "num": "5380", "d": "8/2014"}, {"title": "pushing arrayproxy triggers calls objectatcontent content array", "body": "two arrayproxies pushing top proxy triggers calls child proxy seems like pushing objects nt cause accessed fact first last objects get accessed due check", "num": "5379", "d": "8/2014"}, {"title": "nt get defined", "body": "ca nt seem figure one keep trying throws nt support property method error called", "num": "5372", "d": "8/2014"}, {"title": "javascript inside embertesting cause test fail", "body": "using ember test something inside test fail specific scenario led discover using mockjax library mock ajax calls using error whenever unmocked ajax request made noticed seeing errors test failures like would expect jsbin demonstrates desired behavior without ember jsbin demonstrates issue ember", "num": "5366", "d": "8/2014"}, {"title": "broccoli builds wrap protected words quotes object keys", "body": "causes errors happen example fix upstream", "num": "5365", "d": "8/2014"}, {"title": "closed ember component property issue", "body": "edit removing content confuse others find issue unable confirm behavior sure seeing seeing", "num": "5363", "d": "8/2014"}, {"title": "long emberrunlater causes tests slow", "body": "embertesting checks scheduled timers finish tearing app code uses long emberrunlater eg animations make integration tests slow suggested workarounds", "num": "5362", "d": "8/2014"}, {"title": "computed properties computeddefaultsto property work", "body": "missing something jsbin", "num": "5360", "d": "8/2014"}, {"title": "feature queryparams using linkto helper nested resources wrongly sets active class true", "body": "hi using query params nested route helper always set linking directly resource eg instead even query params nt match current route sure intended behaviour probably documented spent hour trying figure links active created test case demonstrating behaviour ping machty", "num": "5359", "d": "8/2014"}, {"title": "creating another instance controller", "body": "route defined like controller part code calling last line creating another instance controller init method inside called routes without sign works correctly put needs like works normally little bit weird", "num": "5358", "d": "8/2014"}, {"title": "binding input typeviewtype view template longer works", "body": "using ember views wrap input fields sophisticated dom structure rendering view pass input field type textpassword attribute like use template like worked fine broke demo ember working demo ember broken", "num": "5348", "d": "8/2014"}, {"title": "improve router", "body": "consider carefully show promise rejections inspector", "num": "5337", "d": "8/2014"}, {"title": "improve naming conventions", "body": "nt hardcode naming conventions", "num": "5336", "d": "8/2014"}, {"title": "transitionto still shows content previous screen", "body": "login page user signs upon successful login transition content page login path thisroute login path login collections path post login thisroute collections path collections login controller simply call selftransitiontoroute collections upon successful ajax login call takes user collections screen however login page still shown bottom page refresh collections login screen disappears use transitiontoroute several places app however place see issue", "num": "5335", "d": "8/2014"}, {"title": "historylocation nt use baseurl correctly", "body": "sets means something like totally reasonable except uses path calls less never include protocol domain never anything believe correct thing would extract initialization js rooturl null init function var location get location windowlocation set location location var baseurl get baseurl jquery base attr href set baseurl baseurl var origin locationorigin fmt locationprotocol locationhostname locationport locationport var rooturl get rooturl baseurlreplace origin set rooturl rooturl use js geturl function var location get location path locationpathname baseurl get baseurl baseurl baseurlreplace var url pathreplace rooturl return url", "num": "5334", "d": "8/2014"}, {"title": "rendering hierarchy place toggleproperty toggles items array called itemcontroller", "body": "issues updated latest plus toggleproperty action causes item array toggle nested componentsviews rendering place clicking similar reloading page causes proper rendering", "num": "5330", "d": "8/2014"}, {"title": "isvisible inconsistent view dom", "body": "ember implementation emberview togglevisibility may problem function called changes view nt dom aborts early means never runs two properties become disconnected possible fixed implementation js togglevisibility function var el var isvisible get isvisible thisisvisible isvisible return nb always sync isvisible isvisible thisisvisible isvisible abort dom manipulation dom el return eltoggle isvisible thisisancestorhidden return isvisible thisnotifybecamevisible else thisnotifybecamehidden", "num": "5329", "d": "8/2014"}, {"title": "emberpromiseproxymixin isfulfilled goes true content set", "body": "implementing emberpromiseproxymixin function observes isfulfilled see noticing isfulfilled going true content set due lines believe use case common reason lines order would suspect content would set isfulfilled also exactly code path would seem exhibit similar issue", "num": "5325", "d": "8/2014"}, {"title": "call contains frozen array", "body": "ember js arr objectfreeze arrcontains true ember js arr objectfreeze arrcontains typeerror ca nt add property nextsuper object extensible", "num": "5324", "d": "8/2014"}, {"title": "injecting views", "body": "using ember injecting views seem work using keyword nothing injected injection works fine controllers routes components seems discussion nt gone anywhere", "num": "5323", "d": "8/2014"}, {"title": "queryparams array strange serialization", "body": "possible bug using recent beta build specifying array queryparams result stringified array comma separated brackets translates however expected something like created jsbin ember build updated version documentation intendedcorrect behavior", "num": "5322", "d": "8/2014"}, {"title": "bug arraycomputed recalculate dependant array set", "body": "failing test case basically fails recompute synchronously dependant array set explicitly defined computed property works looks like arraycomputed issue works values cached remove prior gets also works use instead wrong assume computed properties recalculate synchronously final gets", "num": "5319", "d": "8/2014"}, {"title": "inconsistent behavior promise returns", "body": "expected behavior route model function returns promise results corresponding controller content empty seems happen instead controller content empty controller nt exist prior transition controller already exists content nt empty additional transition route correctly perform model setup response silently ignored controller model left unchanged", "num": "5310", "d": "8/2014"}, {"title": "permission use tomster logo", "body": "take get permission use tomster logo talk logo eak thread talk user designed variants easy way people submit requests commission specific approved tomster variants wifelette may help ask need logo embersimpleauth would like tomster", "num": "5302", "d": "8/2014"}, {"title": "embercollectionview content update volatile properties", "body": "come issue using embercollectionview volatile property controller current setup objectcontroller collectionview currently basically filters attributes based couple rules addremove attributes method controller triggers verified collection view object controllers ui collection view nt rerender sure however notice remove setting everything works perfectly runs need use since allow users update attributes nt cached otherwise could see older version attribute another thing nested object filteredattributes method basically takes hash transforms going post stackoverflow thought would appropriate place given unexpected behavior either way help would greatly appreciated since banged head wall hours nonvolatile volatile original issue", "num": "5300", "d": "8/2014"}, {"body": "bryanhunt quick skim lead unsure causing issue may also would good improvement", "d": "8/2014"}, {"body": "release seems come one line module definition javascript define rsvpumd rsvp function giving name make work happily requirejs", "d": "8/2014"}, {"body": "want say option invented purpose things define nt exactly meet requirejs expectations pain hopefully soon able adopt module transpiler bundle format nt need loader custom amd one case also try using almond using loaderjs ember wraps iife internally amd need stuff works almond try", "d": "8/2014"}, {"body": "provide reduced example nt actionable us", "d": "8/2014"}, {"body": "tried reproduce issue reduced example works expected unsure else could effecting application meantime adding missing files fixes issue continue build example", "d": "8/2014"}, {"body": "stefanpenner embercli problem example app nt work android", "d": "8/2014"}, {"body": "rfc process", "d": "8/2014"}, {"body": "davidpett templates intended used ember ever worked happy little accident consider dom generated template bin metamorphs sibling wildly distort updates dom whenever changes try somewhat possible make sense template using unbound group helper ember officially support usage furthermore template fail compile htmlbars instead recommend use computed property", "d": "8/2014"}, {"body": "prior behavior actually functional anyways since rerenders changes would broken gon na close issue required bugfix fix straightforward using computed property", "d": "8/2014"}, {"body": "works make necessary updates thanks guys", "d": "8/2014"}, {"body": "cyrilsf provide failing test time quickly actionable provided", "d": "8/2014"}, {"body": "time blocking nt able find good workaround meantime working", "d": "8/2014"}, {"body": "skimmed expected behavior post async relationship need use get access plans likely make many people angry remove promise proxies entirely instead make promises bindable one objects give promise never zalgoesq behaviour current promise proxies provides theory make change today promiseproxy would like good idea current situation far confusing", "d": "8/2014"}, {"body": "sad thing aliases observers unusable referring property associated model would recommended way work around feel like promiseproxy able move observers set unknown properties content fulfilled", "d": "8/2014"}, {"body": "nt believe true binding observer cp systems absorb zalgo humans use get directly problems exist", "d": "8/2014"}, {"body": "please provide example demonstrating problem described", "d": "8/2014"}, {"body": "observers aliases relies computed properties nt display comments count template average age nt get computed properly remove average become instead something stupid", "d": "8/2014"}, {"body": "run jsbin without seeing problem need spend time trying reproduce consistently problem", "d": "8/2014"}, {"body": "cyrilsf many things improve situation observersbindingscp naturally absorb issues one thing remember though cp may compute yet know may future value may result computation occurring invalid code paths could break cp important guard accordingly think clear picture current state various paths move forward provide consistent reasonable programming model point want speak would gladly try arrange hangout", "d": "8/2014"}, {"body": "people irc pointed might want function one would depend concatenates multiple arrays without uniqueness check could turn", "d": "8/2014"}, {"body": "writing computed macro something avoided javascript function concatarrays arraydepkey property return embercomputed arraydepkey property function var array thisget arraydepkey var ret use javascript var thing emberobjectextend parent children concatarrays parent", "d": "8/2014"}, {"body": "something similar purposes much nicer thanks still think belongs ember core though", "d": "8/2014"}, {"body": "disagree sorts macros belong external library consumed desired something like embercpm ultimately think core contain macros require internalprivate api access need core others moved external library easily consumed", "d": "8/2014"}, {"body": "likely called", "d": "8/2014"}, {"body": "rwjblue trouble seeing many current computed properties require private api access instance could easily implemented within function using javascript native map function foreach push calls inside could certainly rewritten outside since seems wrapper writing simple computed property missing something current computed properties really impossible replicate without private api access really case core philosophy ember respect fact utility functions ember core seems like would seem fit among current canon", "d": "8/2014"}, {"body": "flyswatter private api refering", "d": "8/2014"}, {"body": "stefanpenner sure responding rwjblue objection computed properties provided ones require access private api familiar ember internals private apis involved news", "d": "8/2014"}, {"body": "stance push addon future point time feel belongs core pull need try prevent every possible computed property entering ember proper even means good ones important ones nt make personally think primitive ember packaging addon acceptable especially means fully flesh addon brought core", "d": "8/2014"}, {"body": "love explanation reasoning could keep recommending things think addons", "d": "8/2014"}, {"body": "typically reasoning majority ember users need must implemented core example metalviews query params belongs core otherwise experiment community addon", "d": "8/2014"}, {"body": "fair enough", "d": "8/2014"}, {"body": "bcardarella components prefer corresponding component template layout block becomes template", "d": "8/2014"}, {"body": "example using embercli appcomponentsfoojs would look apptemplatescomponentsfoohbs", "d": "8/2014"}, {"body": "krisselden right ca nt tjis behavior overridden", "d": "8/2014"}, {"body": "apptemplatescomponentsfoohbs still ignore layoutname", "d": "8/2014"}, {"body": "always ignored template original component name present component looked handlebars", "d": "8/2014"}, {"body": "done", "d": "8/2014"}, {"body": "closing think legit issue chatting rwjblue seems solution straight forward", "d": "8/2014"}, {"body": "coming along later working jsbin essentially template use determine actual layout used", "d": "8/2014"}, {"body": "issues seems caused array numbers works use objects id id", "d": "8/2014"}, {"body": "issue appeared ticket implied updated description reflect", "d": "8/2014"}, {"body": "believe suffers issue", "d": "8/2014"}, {"body": "twokul exactly one said correct mixonic saying bug introduced issues original title inferred things seem work correctly use context switching version jsbin", "d": "8/2014"}, {"body": "one fun track essentially problem occurs call bind nt use bind called inside bind function class primitive value set one passed later make use changes way works inside bind function actual number object krisselden likely missing context mind explaining need condition replace line fixes current behaviour tests seem pass", "d": "8/2014"}, {"body": "repo emberdata regardless seems like stackoverflow question bug", "d": "8/2014"}, {"body": "find jsfiddle example test fails async call bootbox", "d": "8/2014"}, {"body": "use cookbooks method modals works also problem situations think", "d": "8/2014"}, {"body": "go try case test failing nt actually click link right however async issue recommend using", "d": "8/2014"}, {"body": "oh yea see found outlets yea real problem case nt look thing outside ember app space using modal using outlet recommend", "d": "8/2014"}, {"body": "biggest difference click jquery click wrap click andthen also nt work", "d": "8/2014"}, {"body": "use rsvp promises ember ember watch testing mode wait promises resolve stuff happens would try following view code", "d": "8/2014"}, {"body": "tried nt work probably action return boolean therefore promise reach test op aug schreef stanley stuart notifications githubcom use rsvp promises ember emberrsvppromise ember watch testing mode wait promises resolve stuff happens would try following view code actions askdelete function var self return new emberrsvppromise function resolve reject self td slideup promise function selfget controller send delete resolve reply email directly view github", "d": "8/2014"}, {"body": "well rsvp scheduler supposed us since regardless return lrdevries work around making promise available somewhere globally like", "d": "8/2014"}, {"body": "thank solution think global nt beautiful solution take look rsvp scheduler let work op aug schreef stanley stuart notifications githubcom well rsvp scheduler supposed us since regardless return lrdevries work around making promise available somewhere globally like reply email directly view github", "d": "8/2014"}, {"body": "think may semantics may worth improving maybe want always asyncstart asyncend embertesting cc stefanpenner", "d": "8/2014"}, {"body": "think problem firing asyncend time promise resolved async", "d": "8/2014"}, {"body": "believe problem modal outside application template testing click handler nt seem find look see works without promises async helpers lrdevries iirc helper design click things within application meaning anything descendant application template using enabled search entire document", "d": "8/2014"}, {"body": "workmanw ahh see noticed click btnprimary also worked lets test wait click want wait whole modal window wait promise", "d": "8/2014"}, {"body": "lrdevries heads depend always work helpers test executed without blocking obviously js course action take might create async operation promises deferred ajax animation etc test continue executing helper calls even waiting ajax internal test suite queue subsequent helper action case prior async operation existed could resolved prior operation completed potentially btnprimary dom always wrap anything async helper make sense", "d": "8/2014"}, {"body": "yes definitely make sense", "d": "8/2014"}, {"body": "anybody interested workaround use event", "d": "8/2014"}, {"body": "select nt component likely become one future point time wagenet believe meta issue tracking emberselect stuff", "d": "8/2014"}, {"body": "okay appears unrelated happens view check js bin super weird set template event handling stops", "d": "8/2014"}, {"body": "appears setting point wipesout previously applied classes event dispatcher relies emberview available attach view", "d": "8/2014"}, {"body": "think known would explain", "d": "8/2014"}, {"body": "yeah reviewing code think might good idea disallow setting templates personally never actually used property way fact causes views silently stop accepting events seems bad", "d": "8/2014"}, {"body": "gordonkristan nt seen anything", "d": "8/2014"}, {"body": "gordonkristan interesting quirk way added onto object nt changed see chrome using ember nt show console using ember shows firefox nt show versions", "d": "8/2014"}, {"body": "thanks gordonkristan good track ideally could figure changed possible fixes include going back old style super track super called might able efficiently replacing hasownproperty emberobject course finding introduces post", "d": "8/2014"}, {"body": "knownasilya implementation detail functionality changing quite bit since think already bug two caused like frozen object bug far fixes go like idea replacing kind dirty trick think fairly elegant nt require code changes course mean temporary fix users currently running issues obviously need proper fix", "d": "8/2014"}, {"body": "gordonkristan able use jsbin javascript var emberobjectcreate name foo var keys emberkeys var l keyslength lt l var name keys consolelog name consolelog done", "d": "8/2014"}, {"body": "introduced commit adds new mixin list existing mixins create new instance gets invoked added eventually gets wrapped object gets property moving fixes behaviour stefanpenner mixonic confirm crazy happy submit patch", "d": "8/2014"}, {"body": "twokul tests pass make move", "d": "8/2014"}, {"body": "stefanpenner nope one test fails gt lt one tests correct wrong nt think way around order invoked added either via added new function onto jsbin provided uses iterate properties iterates enumerable properties set never tell enumerable went ahead replaced line one would expect slower ran benchmarks oo mark enumerable mega doubts mixonic stefanpenner thoughts benchmark btw update benchmark results posted chrome canary stable chrome assignment benchmarkjs superfunctioncall x opssec runs sampled benchmarkjs superfunctioncall x opssec runs sampled benchmarkjs superfunctioncall x opssec runs sampled odefineproperty benchmarkjs superfunctioncall x opssec runs sampled benchmarkjs superfunctioncall x opssec runs sampled benchmarkjs superfunctioncall x opssec runs sampled", "d": "8/2014"}, {"body": "starting megadoubts indeed unfamiliar happening extend fixes would like see issue called set nonenumerable moving line maybe worth test setting defining nonenumerable would certainly explain bad behavior general posthook creating property call unfortunate putting code inside defineproperty obviously viable since runtime metal concerns would question validity using anywhere internals expect superwrapper use defineproperty nogo understanding always defineproperty slow use unless required would like see bms ie get feedback regardless nt think need use solution", "d": "8/2014"}, {"body": "performance biased likely actually changing objects repeatedly changing since resetting property configuration suspect means rechanging object shape real scenario could dealing thousands tens thousands different objects multiple different super methods", "d": "8/2014"}, {"body": "twokul think notcalling super solve problem nt think would cause issues essentially top superchain good work tracking", "d": "8/2014"}, {"body": "stefanpenner removing call inside fixes current behaviour gon na submit pr regression test", "d": "8/2014"}, {"body": "twokul awesome thanks", "d": "8/2014"}, {"body": "dertoti pass component property name working fiddle", "d": "8/2014"}, {"body": "selvagsz sry fault provided broken fiddle seems works said strange project use ember handlebars jquery nt work difference precompiling ember handlebars files load via layoutname templatename working used syntax seems still work ember deprecated", "d": "8/2014"}, {"body": "possible referring bug fixed fixed released days ultimately also", "d": "8/2014"}, {"body": "rwjblue seems bug tell update ember fix soon issue closed meanwhile", "d": "8/2014"}, {"body": "think experiencing element inserted whole view nt called right view wrapper element put dom usually almost always called rest subelements finished rendering read little well potential solution rare cases problem using render queue always worked ember team might better suggestion though", "d": "8/2014"}, {"body": "nybblr could isolate issue jsbin gordonkristan last thing happen render pipeline link perview entire subtree rendered views element ready dom first called", "d": "8/2014"}, {"body": "mmun noticed change upgrading previously could use didinsertelement use render queue", "d": "8/2014"}, {"body": "opsb would able extract example behaviour one possible explanation two disjoint subtrees rendered first subtree hooks called second subtree rendered case may want schedule ensure subtrees rendered", "d": "8/2014"}, {"body": "mmun different project week see squeeze point", "d": "8/2014"}, {"body": "mmun always case though maybe ordering subtrees get rendered changed slight thing guaranteed view element inserted subtree updated subtrees inserted true initial rendering since root ancestor brings everything dom time considering changing didinsertelement hooks deferred rendering complete right forcing layout didinsertelement big source pain ember apps updates subtrees may invalidate forced layout", "d": "8/2014"}, {"body": "opsb interesting app using latest beta maybe something changed release mmun try issue seems occur though tests tricksy isolate bug", "d": "8/2014"}, {"body": "unsure seem reasonable set model hook believe also set setupcontroller otherwise could use setupcontroller set query params another open issue regarding query params setupcontroller may related possibly related query params set", "d": "8/2014"}, {"body": "taking classic example filtering list queryparam want model set attempt filtering controller otherwise filter method check see model set attempting filtering current workaround return filter method unless model set point setupcontroller maybe missing something setting queryparam matter assigned url guess really seeing scenario want assign queryparams setupcontroller", "d": "8/2014"}, {"body": "failing test issue referring", "d": "8/2014"}, {"body": "unsure bug seems reasonable using key overrides using single flat object store params ultimately could see good candidate nice error message though", "d": "8/2014"}, {"body": "yeah torn well nt sure odd one models pk figured ed enforces whole group figured annoying go make random slugs hook corresponding serialize hooks using deeply nested resources like said nice error message would least help someone avoid wasting time debugging code second workaround big deal understood especially nt performance thing", "d": "8/2014"}, {"body": "believe default pattern use see routeprototypemodel", "d": "8/2014"}, {"body": "seems like issue correctly returns incorrectly returns problem goes away wrap html eg", "d": "8/2014"}, {"body": "reviewing code uses first element html string determine wrapping element used innerhtml parsing need reimplement wrap map", "d": "8/2014"}, {"body": "domhelper parsehtml accepts context element discussed passing around contextual element render moving domhelper context real fix fwiw jquery parsehtml also optionally accept contextual element lazy fix might reading parent view tagname building new element passing context", "d": "8/2014"}, {"body": "whoops lied jquery takes document context element context", "d": "8/2014"}, {"body": "fixed ensure things fully materialized first machty expected behavior", "d": "8/2014"}, {"body": "thought explicit tests checking", "d": "8/2014"}, {"body": "think bug tests context initial app bootup working", "d": "8/2014"}, {"body": "added failing test bug try take stab fixing", "d": "8/2014"}, {"body": "yep one reasons deprecated deprecation added", "d": "8/2014"}, {"body": "use scenarios want properties value sync another property set point diverge upstream", "d": "8/2014"}, {"body": "okay anyone interested implementation binding default value", "d": "8/2014"}, {"body": "ghost folks great implementation embercomputedonewayonewayboundoneway continue listen upstream changes ideal tool working values inside input elements param transform function transform upstream value var boundoneway function upstream transform typeof transform function default identity function transform function value return value return embercomputed upstream function key value return argumentslength gt value transform thisget upstream export default boundoneway", "d": "8/2014"}, {"body": "great", "d": "8/2014"}, {"body": "branch would work wanted", "d": "8/2014"}, {"body": "changes would submitted master branch prefix remember pull beta release channels", "d": "8/2014"}, {"body": "cool look aug pm robert jackson notifications githubcom wrote changes would submitted master branch prefix doc release reply email directly view github", "d": "8/2014"}, {"body": "correct links output looks like", "d": "8/2014"}, {"body": "api writing formatting helpers outputting dom fragments helper actually generating emits dom string concatenation believe correct way use block component", "d": "8/2014"}, {"body": "right nt aware definitely better option probably enough mention changelog", "d": "8/2014"}, {"body": "ilkkao part ember example use block component generate wrapping htmlstyles closing since caused emitting invalid dom helper", "d": "8/2014"}, {"body": "thanks read example quickly totally misunderstood", "d": "8/2014"}, {"body": "nt time dig deeper jsbin nt work either", "d": "8/2014"}, {"body": "missing concept like loadpath something basically register default user able override example trump default one", "d": "8/2014"}, {"body": "sorry nt get referring resolver level container level would go registering factory part test setup", "d": "8/2014"}, {"body": "herom method gets invoked observer view inserted dom working correctly", "d": "8/2014"}, {"body": "agree likely due changed closing happy reopen jsbin reproducing error", "d": "8/2014"}, {"body": "thanks lot remove indeed expect causes different behaviour case observe property showhide view dom always thought notation sets observer property right hook fired experienced behaviour well seems respected anymore right anyone simple solution specific case help much appreciated", "d": "8/2014"}, {"body": "herom make computed property style use bindattr something bind attribute never problem observers really low level require careful", "d": "8/2014"}, {"body": "herom hbs", "d": "8/2014"}, {"body": "rwjblue created jsbin examples diverging used ember versions working ember breaking ember know example somewhat silly illustrates issue smile stefanpenner look suggested solution problem resolved object contain css classes well dynamic computed css properties would use twice attribute even possible", "d": "8/2014"}, {"body": "herom able", "d": "8/2014"}, {"body": "seems returning looks like regression", "d": "8/2014"}, {"body": "knownasilya nt appear removing observer", "d": "8/2014"}, {"body": "stefanpenner return correct value would nt fire internal stuff runs least behaved pre incorrect behavior incorrect", "d": "8/2014"}, {"body": "seems due change embercomputedalias modified working removing alias reference", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "thanks taking time look code always thought exists prevent writing code like achieve less boilerplate code seems like regression would produce code workaround already achieved using prior rwjblue stefanpenner wasis intended behaviour", "d": "8/2014"}, {"body": "herom yea idea try find root cause", "d": "8/2014"}, {"body": "shit aliasdescriptor thought nt landing till wip fix although nt know bug actually expected behaviour", "d": "8/2014"}, {"body": "im fairly certain address bah thought aliasdescriptor going part release suppose bugfix beta means beta", "d": "8/2014"}, {"body": "thanks reopening explanation stefanpenner seems like stay thanks investigation", "d": "8/2014"}, {"body": "herom suggestions using bindings cp still much better solution using observer remember want data flow based consumption based churn basically want template pull data rest system manually push data said use issue track provide example manifestation problem", "d": "8/2014"}, {"body": "stefanpenner see suggested way use bindings computed properties try see smiley", "d": "8/2014"}, {"body": "herom correct observers pretty low level cp bindings typically user friendly way things", "d": "8/2014"}, {"body": "think good chance htmlbars fix nt already fixed salzhrani tried canary", "d": "8/2014"}, {"body": "yes still issue updated jsbin", "d": "8/2014"}, {"body": "would like keep around test case svg master eventually htmlbars hoping better", "d": "8/2014"}, {"body": "ok writing solved problem property observed read bypassed calling init info seems outdated", "d": "8/2014"}, {"body": "totally flaked bit thought saying ca nt referring fact component internally nt support actions issue might also slightly related", "d": "8/2014"}, {"body": "making checkbox component extremely straightforward reasons stated change subclass", "d": "8/2014"}, {"body": "rwjblue component remain addresses concern behavior totally differently mindfuck", "d": "8/2014"}, {"body": "currently uses see absolutely sorry mentally complicated change either component without breaking backwards compatibility attempted fix exactly disconnect correctly declined", "d": "8/2014"}, {"body": "rwjblue consider introducing deprecating removed uses leaves alone fact component syntax gives component unfortunately bug affect people use reopen use easily switch might careful released prevent early gray hair", "d": "8/2014"}, {"body": "slight correction helper syntax components require dash also deprecated", "d": "8/2014"}, {"body": "generally try keep issue tracker focused problemsbugsetc actual framework appear bug ember feel free provide failing jsbin prove otherwise seems question suited stack overflow issue tracker", "d": "8/2014"}, {"body": "machty would mind looking one", "d": "8/2014"}, {"body": "nt support query param default value computed property b nonprimitive value largely reasons url generation route nt entered yet specifically know href generate routecontroller says default value computed property whose value ca nt calculated controller nt created yet likely depends properties nt set route yet guess maaaaybe cases could support cp dependent keys starts get messy fast try work within present constraints explore support something like future", "d": "8/2014"}, {"body": "quite sure follow controller nt created yet going pull value computed otherwise also template issue happening controller must needs present guess confusing aspects works fine directions mapping query param url nested controller property setting nested controller property update url try generate link run trouble version nt use removed computed property using actions instead works cases case nt supported perhaps less cryptic error message", "d": "8/2014"}, {"body": "look prototype controller saying nt transitioned route yet one jobs router creating href route destination route uses cp query params value needs taken account generate href cps open pandora box since could depend objects expected set route transition", "d": "8/2014"}, {"body": "ok makes lot sense still wrapping head around whole qp thing understand correctly happening invoke helper needs read default value sort qp know whether bother including resulting href default value wo nt otherwise see reading computed value nt make sense statically defined values nt work example nt use computed properties since value available controller prototype managed work around using binding connect sort model parameter value works well specific usecase default always maybe would possible future optionally separate property holds query param value property holds default value", "d": "8/2014"}, {"body": "machty canshould anything", "d": "8/2014"}, {"body": "noting bitten well looking workaround upgrading apps older beta", "d": "8/2014"}, {"body": "believe remember discussion attributes nt get bindings default coming bindings everything get expensive ergo undesirable set bindings default rarely used attributes case style attribute could imagine inline styles generally considered poor form although use case definitely one needs one currently also imagine nightmare keeping bound style attribute correct given many js libraries manipulate style tags", "d": "8/2014"}, {"body": "fair enough could see lot frustration caused trying keep many different style properties sync", "d": "8/2014"}, {"body": "august alex kwiatkowski notifications githubcom wrote fair enough could see lot frustration caused trying keep many different style properties sync reply email directly view github", "d": "8/2014"}, {"body": "cheers recipher saves subclass", "d": "8/2014"}, {"body": "layout applied inside view element wrapped around elements like nt innerhtml selfclosing ca nt layouts inside contain html since innerhtml also layout check rendered html example see layout appears around would great wrapped element especially useful customizing components nt possible metalviews needed containing element template contents view removed would take markup along unfortunately ca nt change behavior", "d": "8/2014"}, {"body": "trek see nt aware contained within view wrapped around good know thanks clearing forget side note however original demonstration bug documentation states html input elements self closing layout layoutname properties applied clearly applied example", "d": "8/2014"}, {"body": "seems like regression snuck people probably reported nt work intended anyway remove app sure necessarily worth actively preventing wonky behavior", "d": "8/2014"}, {"body": "trek probably worth changing moment thought might regression thanks feedback", "d": "8/2014"}, {"body": "nope nt actually places essence explicitly bypassing controller want go directly controller handlebars foo controller handlebars foo example essentially handlebars foo controllermodel", "d": "8/2014"}, {"body": "work name also nt really know qualifies bug probably work use", "d": "8/2014"}, {"body": "lt hard work putting put liquidfire heart", "d": "8/2014"}, {"body": "need info example", "d": "8/2014"}, {"body": "extracted jsbin starts using ember working correctly type text field changes propagate bound property mutation observer notices causing title flash disable ember script tag reenable embermvjs script tag latest metalviews build see observer never fires", "d": "8/2014"}, {"body": "add nt necessarily care mutationobserver support metalviews offer something equivalently powerful changes care coming ember could register changes dom subtree efficient way would also solve issue", "d": "8/2014"}, {"body": "trying observe change text value maybe update nt recreate textnode sets existing text node nodevalue", "d": "8/2014"}, {"body": "add jsbin works simple binding always rebuilding", "d": "8/2014"}, {"body": "also forcing layout good thing maybe could defer trees done rendering centralized using could prone serious performance issues using queue forcing layout current recommendation", "d": "8/2014"}, {"body": "thanks mystery solved able avoid forcing layout", "d": "8/2014"}, {"body": "update solved caused including template remove problem goes away wish ember better stopping sort footshooting thing", "d": "8/2014"}, {"body": "run console version give edit nevermind getting error means right version handlebars", "d": "8/2014"}, {"body": "cc rwjblue", "d": "8/2014"}, {"body": "let us know version ember using", "d": "8/2014"}, {"body": "embercli v node npm handlebars v", "d": "8/2014"}, {"body": "nininea embercli version version", "d": "8/2014"}, {"body": "stefanpenner sorry ember v", "d": "8/2014"}, {"body": "nininea nt ember want query params feature must use goes well final", "d": "8/2014"}, {"body": "closing please let know nt help", "d": "8/2014"}, {"body": "able reproduce simple test case example give working works fine furthermore rows cols simply attribute bindings textarea element affect value allowed length", "d": "8/2014"}, {"body": "quick test shows seem work properly please provide jsbin demonstrating problem", "d": "8/2014"}, {"body": "hi tried create jsfiddel example using embercli setup bit larger use objectcontroller add body property seems work expected remove body property see console tries set first character textarea delegate set body l content property object proxy appmsgcontroller content undefined perhaps wrong use setup arraycontroller handles createmessage action bug feel free close issue sorry time kind regards steffen", "d": "8/2014"}, {"body": "seems fine need specify body property controller", "d": "8/2014"}, {"body": "forgetting return data model furthermore pushpayload nt return records pushes returning result would nt get anywhere however pushing payload believe response hash reused becomes new records believe could something like following model hook said question ask stackoverflow issue tracker github issues ember usage", "d": "8/2014"}, {"body": "agreed runspired feel free link stack overflow question back issue", "d": "8/2014"}, {"body": "nt know anything symphony looks though including scripts wrong order jquery handlebars need included ember", "d": "8/2014"}, {"body": "runspired corrext jquery handlebars must available ember loaded try keep issue focused bugs ember type question better suited stack overflow question please feel free crosslink question issue", "d": "8/2014"}, {"body": "proxies currently eager mmun wip believe making lazy", "d": "8/2014"}, {"body": "seems like want repeat check", "d": "8/2014"}, {"body": "tried broke tests might investigate later bug make lazy hasmany bit annoying eagerly fetch firstlast records", "d": "8/2014"}, {"body": "agree igort", "d": "8/2014"}, {"body": "problem even one watching need clear cache would true otherwise recompute", "d": "8/2014"}, {"body": "cache set though think ignoring cache nt set would cover lots cases", "d": "8/2014"}, {"body": "yeah alternatively could cache becomes invalid carefully tracking array operations content basically lazy approach", "d": "8/2014"}, {"body": "implemented suggestion link diff tests pass pretty hacky though", "d": "8/2014"}, {"body": "turn jsbin real test tomorrow", "d": "8/2014"}, {"body": "mmun need make lazyget first class thing alias descriptor work paths could also use nt like things reaching meta directly making assumptions makes hard change stuff later cc stefanpenner", "d": "8/2014"}, {"body": "also uncertain ember data ajax side effect get good design see get returning promise explicitly load data want think maybe relying lazy computation cps unexpected ajax consequence seems little steep", "d": "8/2014"}, {"body": "want add reference think alias forward lazyget emberlazyget obj proppath desc desclazyget obj key lazyget content firstobject", "d": "8/2014"}, {"body": "sound like might surprise developers", "d": "8/2014"}, {"body": "thats works sure propose alternative design", "d": "8/2014"}, {"body": "first step seems like allowing array proxies lazier", "d": "8/2014"}, {"body": "applied diff mmun links fixed problem edit check tests", "d": "8/2014"}, {"body": "mmun patch become pr", "d": "8/2014"}, {"body": "stefanpenner tricknotes think could take look", "d": "8/2014"}, {"body": "like add nt trying reextend coreobject userland ember tries boot keep poking", "d": "8/2014"}, {"body": "stefanpenner reverting previous objectcreate shim used fixes", "d": "8/2014"}, {"body": "repro using ember ie", "d": "8/2014"}, {"body": "reproduction either using ember running tests debug mode", "d": "8/2014"}, {"body": "one thing noticed previous shim nt check hasownproperty copying stuff might tired though", "d": "8/2014"}, {"body": "replicate chrome investigating", "d": "8/2014"}, {"body": "believe fixed master works correctly verification would good though", "d": "8/2014"}, {"body": "stef fixes last night bunch small tweaks morning single failing test believe issue closed fivetanley please reopen disagree", "d": "8/2014"}, {"body": "suspect due promises work wonder need automatically apply failure handler", "d": "8/2014"}, {"body": "wagenet one point promises explicitly failed test rejections seems like regression", "d": "8/2014"}, {"body": "ah seems bad", "d": "8/2014"}, {"body": "default handlers work properly throw error via see jsbin throw string things handled see jsbin error displayed qunit default qunit error handler calling ensure rest tests rerun need dig rsvp test suite ensure tests confirm primitive values thrown hit default rsvp error handler", "d": "8/2014"}, {"body": "actually fine upstream configured right brocfile fixing", "d": "8/2014"}, {"body": "turns problem dist directory vendor libraries making changes update bowerjson new git sha see", "d": "8/2014"}, {"body": "fivetanley using upstream libraries build process think changing routerjs help", "d": "8/2014"}, {"body": "fivetanley testing running ember master run production builds eg using prod builds published automatically well", "d": "8/2014"}, {"body": "fix", "d": "8/2014"}, {"body": "hmm spooky confirmed behavior seeing closing issue confirm maybe work expecting something else going", "d": "8/2014"}, {"body": "edited original post title one else finds looking answers thinks legit issue weird experience amounts developer error unable reproduce", "d": "8/2014"}, {"body": "could make variables configurable timeouts like javascript appmysomecomponent embercomponentextend animatestuff function emberrunlater thisanimateleft appsomecomponentanimatelefttime appmysomecomponentreopenclass animatelefttime testhelper file", "d": "8/2014"}, {"body": "nt seem anything brokenmissing w ember fivetanley suggestions make sense hence closing aside wan na figure solution liquidfire would probably something along lines setting transitions nulltransition object", "d": "8/2014"}, {"body": "makes sense thanks advice", "d": "8/2014"}, {"body": "tkellen misusing second value property path value comparison also typo singular see fiddle", "d": "8/2014"}, {"body": "ah different many computed macros work amp could benefit allowing comparison dependent property rather literal value would open pr implements api like", "d": "8/2014"}, {"body": "fixed", "d": "8/2014"}, {"body": "working jsbin", "d": "8/2014"}, {"body": "cool thanks sorry noticing duplicate", "d": "8/2014"}, {"body": "suspect naming ambiguity globals noglobals usage ember one reasons started eak embercli start using unambigious naming conventions modules provide us", "d": "8/2014"}, {"body": "stefanpenner anything fix improving tooling", "d": "8/2014"}, {"body": "unknown likely possible fix u really motivated fix works fine nonglobals mode", "d": "8/2014"}, {"body": "bug also incorrect nt creating folders either resolvernormalize normalizing entity name names used actually explicitly different", "d": "8/2014"}, {"body": "assign meta issue soon", "d": "8/2014"}, {"body": "likely related", "d": "8/2014"}, {"body": "confirm behavior well revert restore fancy form components functionality", "d": "8/2014"}, {"body": "need look weekend track happening fix final ships", "d": "8/2014"}, {"body": "looks like made final simpler case nt work jsbin cc ghedamat", "d": "8/2014"}, {"body": "rwjblue", "d": "8/2014"}, {"body": "wagenet yes", "d": "8/2014"}, {"body": "fixed", "d": "8/2014"}, {"body": "go", "d": "8/2014"}, {"body": "digitalbreed yes one thing needed first fix alias descriptor laziness stefanpenner working", "d": "8/2014"}, {"body": "use latest stable builds get change use bare asset specify stable channel bower via following", "d": "8/2014"}, {"body": "please demonstrate issue example app jsbin", "d": "8/2014"}, {"body": "using embercli file structure sure best way create example jsbin try getting screenshots would help", "d": "8/2014"}, {"body": "playing login controller transitioning several pages seems like outlet never clears data login page new page comes top login page login screen signup screen come test purposes transition screen following code thistransitiontoroute however happening", "d": "8/2014"}, {"body": "first thing comes mind mismatched html tags something else causing morph tags observe correct content jsbin would needed help", "d": "8/2014"}, {"body": "shekyboy feel free create example app demonstrates share gh", "d": "8/2014"}, {"body": "tamebadger right mismatched tags thanks quick help stefanpenner tamebadger", "d": "8/2014"}, {"body": "ah think see confusion tested certainly valid value attribute tag perfectly sensible page use ask instead attr always get full url protocol host supplied port example page", "d": "8/2014"}, {"body": "also used path formaturl suggests might better called alternatively calculate single throw altogether", "d": "8/2014"}, {"body": "fwiw agree renamed used ember jamesotron started patching issue somewhere nt wan na doubleeffort", "d": "8/2014"}, {"body": "jayphelps suspect meant jamesarosen jamesotron nt started code yet ideas eliminate replace single matching eliminate change full url path change continue append change change matching extract default cases add deprecation warnings existing properties modify new properties needed basically transition nt hard know going", "d": "8/2014"}, {"body": "jamesarosen whoops indeed mean sorry jamesotron carry", "d": "8/2014"}, {"body": "ha", "d": "8/2014"}, {"body": "turns action toggleproperty called clientscontroller since clients template could delegate appropriate itemcontroller would resolve issue", "d": "8/2014"}, {"body": "resolved issue defining itemcontroller view using clientisexpanded", "d": "8/2014"}, {"body": "calling methods via actions actually deprecate please define action controller controller action invoke toggleproperties appropriately", "d": "8/2014"}, {"body": "done thanks still invoking action via action calling toggleproperty action itemcontroller define action helper order expand client clicked bigger issue run bin click clients click client man click output renders expected click hierarchy jumbled teams", "d": "8/2014"}, {"body": "jamesarosen looks good submit pr", "d": "8/2014"}, {"body": "closed favor pr", "d": "8/2014"}, {"body": "ryanhollister took look jsbin noticed set promise property click docs say promise must specificed upon creation changed see", "d": "8/2014"}, {"body": "swap add tests would work expected ryanhollister typically consumed cp bindings templates runloop smooths ordering unfortunately currently observers synchronous susceptible little ordering details anyways would like encourage someone change ordering add tests", "d": "8/2014"}, {"body": "gavacho thanks", "d": "8/2014"}, {"body": "jamesarosen thanks bug report mixonic seems related recent super stuff seem like super wrapping many things sounds like manifestation", "d": "8/2014"}, {"body": "hm yeah mutate object nt believe happen called perhaps calling internally look", "d": "8/2014"}, {"body": "looking say problem alone seems affect enumerable line blowing found far gotten contains gt thisfind gt thisnextobject gt arraynextobject gt thisobjectat gt get point wrap method called tries add mutate frozen object results op error continue investigate anyone knows little bit wrap super stuff could use little assistance heart heart heart heart", "d": "8/2014"}, {"body": "want survey super stuff push view layer changes seems imply base methods overridden methods array enumerable sync weekend rondalesc sure resolvable current super implementation though expect", "d": "8/2014"}, {"body": "let know help still digging little slow going", "d": "8/2014"}, {"body": "related", "d": "8/2014"}, {"body": "may fixed mixonic cd", "d": "8/2014"}, {"body": "fixes specific case probably array cases closing ticket favor general case", "d": "8/2014"}, {"body": "view instantiating via container injections work fine view created ad hoc way mot", "d": "8/2014"}, {"body": "think instantiating via container sure massive app quite sure instantiated go check", "d": "8/2014"}, {"body": "basically views instantiated viewcreatechildview one public apis call create manually likely bypassing internals manually viewappendto", "d": "8/2014"}, {"body": "closing reopen whenif accurate steps reproduction provided", "d": "8/2014"}, {"body": "vaguely recall conversation machty desired behavior sure set us straight pretty easily", "d": "8/2014"}, {"body": "since connected server serialized way neater always find rails way serializing array attributes bit obtuse august robert jackson notifications githubcom wrote vaguely recall conversation machty desired behavior sure set us straight pretty easily reply email directly view github", "d": "8/2014"}, {"body": "recipher yes believe exactly pointgoal essentially value away go", "d": "8/2014"}, {"body": "rwjblue recipher yes still works way nt actually mind ask never seen way nt think rails jquery seems also spec", "d": "8/2014"}, {"body": "intentional discernible also could obfuscate scatological values", "d": "8/2014"}, {"body": "sorry drag back way revert back prettier url ie foo ray amp foo freakin amp foo tiley even fooray freakin tiley played around stopped fact commas second example encoded despite explicitly allowing unencoded inside query string", "d": "8/2014"}, {"body": "way revert back prettier url ie foo ray amp foo freakin amp foo tiley even fooray freakin tiley sheldonnbbaker absolutely always way unlikely get changed upstream though would likely maintain alternative serialization strategy independently", "d": "8/2014"}, {"body": "recalculation arraycomputed nt semantics computedproperty computedfilter computedsort schedule recalculation run loop example work put another emberrunnext", "d": "8/2014"}, {"body": "mmun think fix close", "d": "8/2014"}, {"body": "provide jsbin sure test jsbin still like see setting example sounds like could issue", "d": "8/2014"}, {"body": "context router currently nt set content controller seems unexpected believe agree sgharms result set undefined model unfortunately also remember added guard always strange introduce undefined system example array controller would throw occured lukemelia thoughts", "d": "8/2014"}, {"body": "provide context controller question used store search results retrieved api first search performed user returned result set second search controller incorrectly shows result set user first search seems rather inappropriate workaround issue manually unset controller content modify api return empty array", "d": "8/2014"}, {"body": "machty simulate status always use", "d": "8/2014"}, {"body": "shilov let get right understand problem correct concerned server returns status code results rejected promise thus leaving previous content controller untouched correct confirm promise get rejected", "d": "8/2014"}, {"body": "believe would bad idea set controller general pattern route model default example routes hook defined removed guard would mean many routes controllers would properties set controllers implement computed property case computed property would squashed replaced value would result confusing hardtodebug breakage many people apps note check specifically undefined example return empty array hook would occur give desired behavior", "d": "8/2014"}, {"body": "another option override setupcontroller custom functionality closing based luke said someone takes account viable proposal gladly reopen", "d": "8/2014"}, {"body": "email leah leahsilber gmailcom nt think leave open gh issue", "d": "8/2014"}, {"body": "comissioned tomster ember london contacting leah lindsey direct awesome experience", "d": "8/2014"}, {"body": "alvincrespo strongly recommend using properties place using set place think practice browser properties volatile properties trigger observers cps depend upon unless manually run case make sure user input triggers get rid", "d": "8/2014"}, {"body": "wagenet use cases beyond browser properties per example use nested hash abstract model anything example app allow customers define custom attributes customers establishing relationship predefined attributes nt really make sense eg besides using jsbin example trigger volatile property per explanation nt also sure expected functionality use volatile developers perspective cache returned result us fact nt update collection view would bug even nt recommended could also create new jsbin showing use volatile value gets cached parts app updated nt update ui parts app might rambling seems like collectionview updating properly property set volatile nt expected outcome using collectionview volatile together get reasons nt something work towards", "d": "8/2014"}, {"body": "please reopen ticket reproduction provided see", "d": "8/2014"}, {"body": "see wrong hardcoded function looking jsbin realized resolve supplied calling component like way function called thank rwjblue", "d": "8/2014"}, {"body": "please reopen jsfiddlebin", "d": "8/2014"}, {"body": "wagenet sorry jsbin issue want duplicate add volatile filteredcontent function var results var colors thisget contentcolors property contentcolors equals filteredcontent function var results var colors thisget contentcolors property contentcolors volatile", "d": "8/2014"}, {"body": "made two jsbins make easier nonvolatile volatile", "d": "8/2014"}, {"body": "reopened", "d": "8/2014"}, {"body": "seemed like changed routeargs loadedparams since private api nt think breaking public api change open issue animatedoutlet support use case", "d": "8/2014"}, {"body": "would defer machty see want put alias", "d": "8/2014"}, {"body": "nt think put alias annoying egregious types things happen seems fine consumers private api could detect missing api dependency necessary", "d": "8/2014"}, {"body": "nt understand intended means everything described seems correct behavior specific incorrect", "d": "8/2014"}, {"body": "kulja means screenshot note url console log set default value qp pass falsy value never get route always returned default value everything works fine", "d": "8/2014"}, {"body": "nightire explained correctly using qp want full transition qp changes routers model hook always seen console try changing default value look console jsbin see changes value correctly", "d": "8/2014"}, {"body": "ah see yes bug fixed shortly", "d": "8/2014"}, {"body": "lfridael think issue documentation believe use case would handled using new hook return qp back default leaving route qp defined see example let know addresses use case ton qp work including documentation make sure clear", "d": "8/2014"}, {"body": "closing given setting default property linkto working point future might add api would best start discussemberjscom thread rather gh issues", "d": "8/2014"}, {"body": "machty experimented hook definitely useful nt seem address particular use case problem would want way specify always reset qp links regardless route currently ie even target route current route global links navbar example anyway current api fine minor consequence links might aware qp defaults practice nt see becoming much problem global link navbar pretty much selfexplanatory", "d": "8/2014"}, {"body": "may add something like subexpression helper use case makes sense feel things bit letting potential scenariosolve api let revisit future", "d": "8/2014"}, {"body": "would possible also add ability create alternating views without affect content property several instances need use instead collectionview render ui pieces seperate data model content similar emptyview would something like alternateview would next view rendered items array", "d": "8/2014"}, {"body": "alvincrespo modify property use", "d": "8/2014"}, {"body": "maybe also add list still relevant", "d": "8/2014"}, {"body": "hopefully component", "d": "8/2014"}, {"body": "knownasilya definitely component", "d": "8/2014"}, {"body": "playing around different ideas components two", "d": "8/2014"}, {"body": "rwjblue really enjoy public api second jsbin fires actions actually tell user changes nt resort setting observer", "d": "8/2014"}, {"body": "amiel verified bug working fix", "d": "8/2014"}, {"body": "wagenet thanks", "d": "8/2014"}, {"body": "wagenet know cleaning issues grouping could put master issue bug could closed", "d": "8/2014"}, {"body": "pretty sure bug arraycontrollers sorting itemcontroller itemcontroller entries indexed one another", "d": "8/2014"}, {"body": "closing favor pr", "d": "8/2014"}, {"body": "kalmanh aware plan make new select component said make simple pr solve problem existing likely merge", "d": "8/2014"}, {"body": "wagenet proof concept work unfortunately slammed work right probably wo nt get pr couple weeks", "d": "8/2014"}, {"body": "rondalesc would happily accept hand getting htmlbars build pipeline work rwjblue stared completion point close remember maybe let us chat irc weekweekend", "d": "8/2014"}, {"body": "definitely", "d": "8/2014"}, {"body": "love take stab inclination lem know interestavailability", "d": "8/2014"}, {"body": "work probably right away", "d": "8/2014"}, {"body": "ran following willtransition sample code api docs url changed even though called", "d": "8/2014"}, {"body": "confirmed updating title something specific root cause", "d": "8/2014"}, {"body": "wo nt work definitely nt really need right solution however agree knownasilya nt really conventional way things", "d": "8/2014"}, {"body": "fixed pr", "d": "8/2014"}, {"body": "verified", "d": "8/2014"}, {"body": "mehulkar sounds like good candidate first pr", "d": "8/2014"}, {"body": "mehulkar merged implements want", "d": "8/2014"}, {"body": "ahh happens jump ember projects thanks blessenm", "d": "8/2014"}, {"body": "hmmm yes namespacecollision regression sorts since sort boxed corner able introduce new public api without risking collides user preexisting property name try think something less generic rename routerjs hook", "d": "8/2014"}, {"body": "rename still new public api hook sure collides someone preexisting hook nt really want pick new name thoughts", "d": "8/2014"}, {"body": "machty probably ca nt avoid naming conflicts seems much specific", "d": "8/2014"}, {"body": "trek ping", "d": "8/2014"}, {"body": "extra bits data would helpful baz xfoo onbarbaz xfoo barbaz", "d": "8/2014"}, {"body": "intended nt want autocasting occur default value provided string number", "d": "8/2014"}, {"body": "still issue beta check failing test", "d": "8/2014"}, {"body": "submit failing test rsvp sort quickly", "d": "8/2014"}, {"body": "seems hash convert hash waterfall normal promises everything works fine working failing test starter kit note promises used within hash storefind promises emberdata beta maybe combination", "d": "8/2014"}, {"body": "repo fails document compatibility works perfectly chrome though one reason another hashmodels undefined", "d": "8/2014"}, {"body": "michaelklishin please open issue provide failing test fix quickly", "d": "8/2014"}, {"body": "stefanpenner repo valid test isolate problem", "d": "8/2014"}, {"body": "tests rsvp reside currently traveling time limited provide failing test repo fix day", "d": "8/2014"}, {"body": "someone verified long nt solved enterprise application ca nt use version", "d": "8/2014"}, {"body": "michaelvdheeren think stefanpenner asking isolated case verification preferably actual js test", "d": "8/2014"}, {"body": "issue confirmed", "d": "8/2014"}, {"body": "believe fixed", "d": "8/2014"}, {"body": "thanks try monday", "d": "8/2014"}, {"body": "fixed rsvp", "d": "8/2014"}, {"body": "seems like issue resolved flyswatter still issues let know reopen", "d": "8/2014"}, {"body": "stefanpenner considering bug", "d": "8/2014"}, {"body": "wagenet believe yes", "d": "8/2014"}, {"body": "general unreliable ember avoided instead", "d": "8/2014"}, {"body": "rwjblue machty status", "d": "8/2014"}, {"body": "stefanpenner htmlbars fix sure give us better platform fix", "d": "8/2014"}, {"body": "bindattr thing exists handlebars nt enough context allow remain bound", "d": "8/2014"}, {"body": "stefanpenner oh course trying go issues quickly", "d": "8/2014"}, {"body": "nt think anything immutable strings making following change causes work though obviously hack said strongly recommend things way would better set component manage valid state instead trying views like", "d": "8/2014"}, {"body": "childviews cp nt maintain array computes regenerates invalidates nt meant detached observed", "d": "8/2014"}, {"body": "cc machty", "d": "8/2014"}, {"body": "problem using loop reserved keyword ember handlebars could either change name child property something else register parent app following jsfiddle use alternate access", "d": "8/2014"}, {"body": "think close short term roll htmlbars deprecate old behavior get free", "d": "8/2014"}, {"body": "spbbosch nt look like image comes email replies", "d": "8/2014"}, {"body": "peter thanks reply quit using ember month ago using angular problems", "d": "8/2014"}, {"body": "spbbosch good luck thanks reporting issue sorry slow response", "d": "8/2014"}, {"body": "closing favor pr", "d": "8/2014"}, {"body": "workaround one work getting spurious tell calls assert check fails since elements dom", "d": "8/2014"}, {"body": "perlun work latest morph property internal mixin nt used anymore latest ember face entire issue nt thing latest ember beta canary", "d": "8/2014"}, {"body": "thanks krisselden tried ember get error different exception see reproduce jsfiddlejsbin create separate issue", "d": "8/2014"}, {"body": "sounds like great idea sandstrom imagine could involve changesdeprecations sides able put together proposal forums", "d": "8/2014"}, {"body": "yes possibly remember hjdivad mentioning may supersede like hear thoughts first", "d": "8/2014"}, {"body": "took look tricky meantime updating jsbin demonstrates issue old one seems gone stale", "d": "8/2014"}, {"body": "hi alex typical error indeed seems appears transition directly queryparams transition look code transite category query params thistransitiontoroute articles queryparams category relatedarticlecategoryget id search transite product thistransitiontoroute article relatedarticle interestingly wrap last transition emberrunnext emberrunlater error disappears code works thistransitiontoroute articles queryparams category relatedarticlecategoryget id search emberrunnext function thistransitiontoroute article relatedarticle", "d": "8/2014"}, {"body": "sure think may related behavior documented", "d": "8/2014"}, {"body": "see", "d": "8/2014"}, {"body": "stefanpenner action items recategorize meta issue", "d": "8/2014"}, {"body": "extracted action item paragraph form short phrases bullets improve clarity action item cache misses factorycache expire cache cache expiration rules module users new things added registry global users maybe provide hook expires cache userinvocation", "d": "8/2014"}, {"body": "stefanpenner sorry nt mean sound trollish suggestions nt sure something actually thought implement wanted discussion", "d": "8/2014"}, {"body": "wagenet implement perf hit noticable", "d": "8/2014"}, {"body": "stefanpenner", "d": "8/2014"}, {"body": "longer thing", "d": "8/2014"}, {"body": "stefanpenner saw edits lovely however consider method dispatchevent function object evt eventname view var result true var handler object eventname typeof handler function result run object handler evt view preventdefault eventmanagers evtstoppropagation else result thisbubbleevent view evt eventname return result bold part code ie still cause issue recur think solution based return value ie event handler eventmanager object would best", "d": "8/2014"}, {"body": "francnuec im sure complex case likely tomdale question", "d": "8/2014"}, {"body": "closing favor pr", "d": "8/2014"}, {"body": "krisselden sounds like saying duplicate closing please reopen misunderstanding", "d": "8/2014"}, {"body": "maxbritto able submit pr", "d": "8/2014"}, {"body": "sure thing", "d": "8/2014"}, {"body": "closing favor pr", "d": "8/2014"}, {"body": "implementing fix found commit already fixes error message issue error route error messages constructed initialmessage error stack sporto seen missing error messages anywhere besides routes limited route errors believe case closed", "d": "8/2014"}, {"body": "closing since fixed htmlbars", "d": "8/2014"}, {"body": "htmlbars", "d": "8/2014"}, {"body": "eoneill sounds awesome discussion forums definitely way go thanks playing around", "d": "8/2014"}, {"body": "think good idea really issue someone wants follow pr would great", "d": "8/2014"}, {"body": "stefanpenner sounds like ca nt full fix think could use global would cause deoptimization", "d": "8/2014"}, {"body": "wagenet global trycatch makes debugging much difficult work runloop ensures production users set get trycatch describe", "d": "8/2014"}, {"body": "believe resolution improved guidesdocs around use emberonerror keep pestering browser vendors granular better tooliing", "d": "8/2014"}, {"body": "explain debugging harder global trycatch longer use stop uncaught exceptions since caught", "d": "8/2014"}, {"body": "stefanpenner yes right optin known downsides", "d": "8/2014"}, {"body": "wanted say also bit docs would help", "d": "8/2014"}, {"body": "happening well", "d": "8/2014"}, {"body": "thanks cesarizu fix", "d": "8/2014"}, {"body": "darvelo looks like solution right nt actually bad however like something different would probably best submit proposal forums thanks", "d": "8/2014"}, {"body": "rwjblue still seems issue final status removing loader", "d": "8/2014"}, {"body": "cases changed somesuch solve problems folks solved us adding update build set", "d": "8/2014"}, {"body": "problem somehow different final get build get build get release versions build hack switch ember name nt seem cut", "d": "8/2014"}, {"body": "nosachamos nt think ever claimed support passing arguments like suspect case would better served components", "d": "8/2014"}, {"body": "yes seems behavior changed breaking components ember block template access components properties ember master block template access components property bug yet undocumented breaking change ping rwjblue trek", "d": "8/2014"}, {"body": "heard future able explicitly specify properties available block template workaround really need use private api warning", "d": "8/2014"}, {"body": "manuelmitasch bug fix block supposed isolated component thus view keyword nt supposed component view case working new feature yield args block", "d": "8/2014"}, {"body": "alexspeller would nt count continuing work", "d": "8/2014"}, {"body": "direction currently looking regards issue", "d": "8/2014"}, {"body": "krisselden thanks clarification means currently reliable way access properties component within block real solution use view instead component right", "d": "8/2014"}, {"body": "manuelmitasch though hack perhaps helpful using right live app works well", "d": "8/2014"}, {"body": "sandstrom thanks looks good", "d": "8/2014"}, {"body": "seems like figured", "d": "8/2014"}, {"body": "something smells fishy point router absorb sort asynchrony rest system seems like something bypassing machty take look", "d": "8/2014"}, {"body": "thatandyrose nt provide example code expecting loading process wait promise returned hook like one know threw first couple times", "d": "8/2014"}, {"body": "mixonic ping", "d": "8/2014"}, {"body": "related", "d": "8/2014"}, {"body": "specifically happens arrays call property definition nonenumerable placed could fixed putting property definition think moving super property meta better alternative would address several issues pr", "d": "8/2014"}, {"body": "may fixed mixonic cd", "d": "8/2014"}, {"body": "specific case fixed still issue actually use though opened new ticket", "d": "8/2014"}, {"body": "pr even merged told htmlbars fix", "d": "8/2014"}, {"body": "closing original requester responded gtsop found likely cause heaphyg still issues please let know", "d": "8/2014"}, {"body": "machty ping", "d": "8/2014"}, {"body": "sound super thank machty", "d": "8/2014"}, {"body": "hjdivad ping", "d": "8/2014"}, {"body": "definitely good idea making things seem faster matters lot", "d": "8/2014"}, {"body": "noticed problem related issue route goes error substate active link current page keeps active link last page", "d": "8/2014"}, {"body": "wycats tomdale guys ever discuss", "d": "8/2014"}, {"body": "assuming still working definitely think fix", "d": "8/2014"}, {"body": "needs pr", "d": "8/2014"}, {"body": "pring", "d": "8/2014"}, {"body": "trek fixed docs fixed website changes next update docs site", "d": "8/2014"}, {"body": "verified returns false feel like return worry could breaking change", "d": "8/2014"}, {"body": "mehulkar give try", "d": "8/2014"}, {"body": "wagenet jsbin using canary build currently still exhibits behavior", "d": "8/2014"}, {"body": "stefanpenner given lack response original creator inclined close however sounds like think may bug thoughts", "d": "8/2014"}, {"body": "possible bounce render render render afterrender afterrender code triggers new renders part runloop works nt believe known bugs area additionally krisselden work metalviews cleans area nicely closing", "d": "8/2014"}, {"body": "ran issue couple times lately quite interested fix also gladly help fixing anyone could give hint start", "d": "8/2014"}, {"body": "currently way probably want convert associative array array hashes like make proposal feature post forums", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "issue numerous times especially flummoxing one beginner contast frameworks tell specitic line fault often using source maps", "d": "8/2014"}, {"body": "think behavior still exists machty thoughts", "d": "8/2014"}, {"body": "machty ping", "d": "8/2014"}, {"body": "stefanpenner status specific actions someone else take", "d": "8/2014"}, {"body": "many scenarios fixed using places matter missing reported separate issues", "d": "8/2014"}, {"body": "moved", "d": "8/2014"}, {"body": "saladfork definitely turn nonember array ember style one see suspect issue interaction frames frames share ember instance one frame cause problems since classes", "d": "8/2014"}, {"body": "wagenet thanks response case outer frame nt run ember understand different inner frame causes fail jsbin definitely shows works expected long array started frame ember way transform passedin undetectable array expected valid pass assertion proper way stands work copying item array new onebyone workaround original comment", "d": "8/2014"}, {"body": "helped saladfork irc little wanted leave notes anyone else running issue outer frame nt array prototype extended true changes definition embera seems like solution setting property iterates wagenet would make sense replace embera definition", "d": "8/2014"}, {"body": "stefanpenner make meta issue", "d": "8/2014"}, {"body": "wagenet yes might good category likely would want understand difference absolute failure ala error vs", "d": "8/2014"}, {"body": "merging meta", "d": "8/2014"}, {"body": "curiosity nt think map function defined libsystemrouterjs must appear api docs imo ember site section named api must code documentation avaiable", "d": "8/2014"}, {"body": "documented", "d": "8/2014"}, {"body": "expected deprecations shown lot stuff firing deprecations due tests changed new syntax something specific see gobs stuff deprecated points lazy merge patch gone deprecations raise tests imo", "d": "8/2014"}, {"body": "mixonic yes think deprecation warnings test failures ember", "d": "8/2014"}, {"body": "clear many recent deprecations global template lookup specifically still need tackled", "d": "8/2014"}, {"body": "rwjblue want", "d": "8/2014"}, {"body": "getting", "d": "8/2014"}, {"body": "stefanpenner something could provide guidance", "d": "8/2014"}, {"body": "unable verify verify please let know reopen", "d": "8/2014"}, {"body": "stefanpenner added", "d": "8/2014"}, {"body": "gavacho thinks may time sunday someone else gets first noone offended", "d": "8/2014"}, {"body": "merged upstream", "d": "8/2014"}, {"body": "stefanpenner rwjblue group meta issue", "d": "8/2014"}, {"body": "sure naming conventions", "d": "8/2014"}, {"body": "moved meta", "d": "8/2014"}, {"body": "might worth looking", "d": "8/2014"}, {"body": "seeing issue firefox though currently looking options workaround want trigger change event since cause validations run show errors users even chance look input fields", "d": "8/2014"}, {"body": "seems working beautifully plopped code app started working verified firefox seems work multiple usernames type one remembered fills password one username saved autofills usernamepassword work come determine timers code sets supplemented following order get scenarios work didinsertelement function hack get firefox autofill bind ember variables var inputs thisget element find input", "d": "8/2014"}, {"body": "faced issue used workaround wrapped inside tag moved action onto form tag triggering action", "d": "8/2014"}, {"body": "often wrap fields forms use action form nice setup even without ie issue", "d": "8/2014"}, {"body": "also like wrapping fields form tags might something look want structure around", "d": "8/2014"}, {"body": "rwjblue ping", "d": "8/2014"}, {"body": "machty ping", "d": "8/2014"}, {"body": "close fully realized solution", "d": "8/2014"}, {"body": "using ember cli want use canary look docs", "d": "8/2014"}, {"body": "agree async loading holds application starting bad nevertheless use case using xhr initialize loading localization file done asynchronously least nt figured better place loading file needed application rendered", "d": "8/2014"}, {"body": "ramisalminen", "d": "8/2014"}, {"body": "stefanpenner thanks advice", "d": "8/2014"}, {"body": "hjdivad thoughts", "d": "8/2014"}, {"body": "trek curious updates front", "d": "8/2014"}, {"body": "locks discussed core team meeting still feel uncomfortable dropping dependency especially due extremely common confusion around props vs attrs jquery fixes going try extract functionality need separate libs nt think top priority moment", "d": "8/2014"}, {"body": "tomdale thanks feedback understandable even impression htmlbars fully merged efforts could naught feel like gist still useful extracting separate libs", "d": "8/2014"}, {"body": "forgot", "d": "8/2014"}, {"body": "hjdivad ping", "d": "8/2014"}, {"body": "exact issue", "d": "8/2014"}, {"body": "seeing issue ember", "d": "8/2014"}, {"body": "hey guys sure topics related jammed problem would appreciate help routing subdomains dynamically using storage space users content thanks", "d": "8/2014"}, {"body": "legomaniacs embers docs ember apps", "d": "8/2014"}, {"body": "hi error render template emberselect outlet routerendertemplate hook render outlet another run loop rendertemplate function thisrender cheers", "d": "8/2014"}]