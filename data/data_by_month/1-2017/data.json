[{"title": "unexpected exception using react perf tools", "body": "found exception trying use react perf tools components internally uses minimal reproducible case different mostly related exception happens used url may asking need use reactserverdom together reactdom need render svg blob use blob uri backgroundurl style attribute also use cases need render string instead directly dom think reasonable usage", "num": "8902", "d": "1/2017"}, {"title": "warning message swallowed using shape inside oneoftype", "body": "see expect warning says invalid prop supplied foo bar even better invalid prop supplied get invalid prop supplied", "num": "8901", "d": "1/2017"}, {"title": "bump fbjs", "body": "probably lots react apps depend babelruntime perhaps directly maybe indirectly problematic though cause apps depend two versions corejs babel using react app babelruntime corejs react fbjs corejs two versions nt semver compatible means project depends babelruntime also react two copies corejs use concrete example react app also depends relay probably many examples though nice collapse dependency single version corejs react could bump dependency latest fbjs fbjs alpha right alpha months probably guys arrange stable release want see also", "num": "8898", "d": "1/2017"}, {"title": "closure compiler wrong assignment order", "body": "consuming react source google closure compiler bit code nt run correct order seems like google closure compiler transformation changing function assignment messes behavior original function hoisted thought related fact function exported module anyway produces error assignment wrong order assignment function definition want definition assignment may also related root cause straightforward solution bring call function declared verified works correctly happy submit pr described approach", "num": "8894", "d": "1/2017"}, {"title": "usage dompropertyoperations module breaks build closure compiler advanced optimizations", "body": "want request feature report bug report bug current behavior referring object method another method within object breaks react build closure compiler advanced optimizations current behavior bug please provide steps reproduce possible minimal demo problem via similar template build react app using closure compiler advanced mode unfortunately provide source app got bug expected behavior app built closure compiler advanced mode throw exception versions react browser os affected issue work previous versions react react changing solves issue methods object using properly via call makes sense prepare pr", "num": "8887", "d": "1/2017"}, {"title": "properly setup eslint config eslint version", "body": "want request feature report bug report bug current behavior version eslint lint gulp task return errors indentation bottom line version operate normally usersrastopyrprogrammingjsreactsrcrendererssharedsharedtestsreactcompositecomponentstatetestjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent usersrastopyrprogrammingjsreactsrcrendererssharedsharedtestsreactmultichildtestjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent current behavior bug please provide steps reproduce possible minimal demo problem via similar template clone repo expected behavior packagejson setted version means latest minorpatch version higher installed think way solve issue set strict version eslint change files passed lint change eslint config rules", "num": "8885", "d": "1/2017"}, {"title": "component hierarchy fiber", "body": "module named permissionchecker code javascript const permissionchecker children permissions needs gt let hasaccess false export default connect appstate gt permissions appstateget userpermissions null permissionchecker usage case permissionchecker question know fiber possible return multiple react elements hierarchy category render method propschildren permissionchecker link want bypass permissionchecker returns children possible fiber", "num": "8881", "d": "1/2017"}, {"title": "jsx inconsistently rendering svg textanchor attribute react dom reacttestrenderer", "body": "think bug behaviour outputting following text reactdom reacttestrenderer current behavior seems rendering component using jest snapshot uses reacttestrenderer produces following output run code browser using jsx compiled javascript put reactjs get following output see example clearly test renderer leaving unknown attributes whereas dom renderer altering camelcase make hyphenated sure change jsx allow example work scenarios jestsnapshot reactjs bug lie jest snapshot renderer reactjs renderer expected behavior reacttestrenderer behaves reactjs note version numbers using code brief look source code yeilds line reactrenderer ca nt find similar line test renderer", "num": "8880", "d": "1/2017"}, {"title": "react tutorial const history", "body": "copied code code examples react tutorial page forked codepen followed tutorial time travel code nt work following tweak made work storing history section fourth code example line const history thisstatehistory changed const history thisstatehistoryslice thisstatestepnumber", "num": "8878", "d": "1/2017"}, {"title": "react onclick nt fire ie", "body": "seems issue onclick working correctly previously using react changed luck seems like onclick action triggered onchange text input works fine jsx component talking following onclick thishandlesubmitbind however assume issue related onclick across application class firstname extends reactcomponent constructor props super props thisstate submitted false firstnameerror false", "num": "8877", "d": "1/2017"}, {"title": "onbeforeinput fires edge updates dom", "body": "want request feature report bug bug current behavior edge onbeforeinput event fired edge already made changes dom negating purpose event breaking assumptions components built event draft current behavior bug please provide steps reproduce possible minimal demo problem via similar template demonstrates issue general see effects components consider steps go type bold underline space words select space press entire control text replaced hit undo several times observe broken states finally react fails issue opened draft core issue onbeforeinput misbehaving edge breaks draft assumptions expected behavior onbeforeinput fire changes occur dom versions react browser os affected issue work previous versions react repros latest version draft root cause root cause although issue longer repros fix referenced issue fixes issue well", "num": "8876", "d": "1/2017"}, {"title": "website page working properly", "body": "want request feature report bug attached screen short check please people world use ie built browser current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8875", "d": "1/2017"}, {"title": "remove rewrite examples", "body": "prompted examples really great examples use react maintained add little value consider either rewriting examples easier use represent good practices rewrite couple remove rest remove examples partial removing anything providing single example well built cc gaearon spicyj bvaughn", "num": "8874", "d": "1/2017"}, {"title": "maintaining ref prop reactcloneelement", "body": "react rc suggests prop components pushed allow two parents maintain props child tried replicate behaviour codepen able maintain two references child ie ancestor component gets nulled jist code working code found class childcomponent extends reactcomponent constructor props super props onclick e epreventdefault extendchildren return reactchildrenmap thispropschildren child gt return reactcloneelement child ref ref gt thisinput ref render return thisextendchildren class ancestorcomponent extends reactcomponent constructor props super props onclick e epreventdefault render return expected behaviour able click application childcomponent check buttons reference input poping alert input value behaviour droppednever implemented since rc something wrong", "num": "8873", "d": "1/2017"}, {"title": "type textbabel throw error latest chrome", "body": "type textbabel throw error latest chrome", "num": "8870", "d": "1/2017"}, {"title": "onsubmit handler proxy object first argument", "body": "want request feature report bug believe bug since ca nt find documentation behavior changing current behavior calling submit handler like first argument object second argument object current behavior bug please provide steps reproduce possible minimal demo problem via similar template see console see objects expected behavior first argument object object versions react browser os affected issue work previous versions react happening react happening", "num": "8869", "d": "1/2017"}, {"title": "significant change reactaddonsperf function getinclusive react", "body": "note asked first directed tl dr massive overhaul reactaddonsperf make large change would cause wildly different results data using perfgetinclusive process upgrading react react seeing puzzling changes profiling using reactperfaddons test case table rows cells upgrading tested total render times using windowperformance using reactaddonsperf getlastmeasurmentduration tools show increase performance rendering table seem outside realm possibility things started get weird looked results perfprintinclusive results printinclusive individual component render report render faster factor seem jive seeing elsewhere tried look changes inside reactperfjs module file replaced wholesale hard understand may changed nothing changelog would really explain big difference results printinclusive question could grossly different findings perfprintinclusive explained big refactor reactaddonsperf function showing something different used show old numbers wrong", "num": "8867", "d": "1/2017"}, {"title": "reactdomfinddomnode returns unexpectedly", "body": "want request feature report bug bug current behavior two versions simple page page produces text tries register dom event handlers mouse events html element underline text mouse remove underline mouse make text red color mouse return text black color mouse finally also sets elements difference two pages way dom event handlers registered object returned bad version link version binds event handlers like jsfiddle link version produces error good version link version binds event handlers like jsfiddle link version behaves expected current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle links bad good versions provided expected behavior opinion good version bad version behave react exact way bad version produce error react versions react browser os affected issue work previous versions react tested chrome os x windows safari os x bad version work react bad version worked react", "num": "8862", "d": "1/2017"}, {"title": "react umbrella", "body": "list might change putting first draft posting together since related nt plan releases anyway put changes context goals click show past several months working rewrite react codenamed fiber initially affect public api brings several new features like fiber gives us solid foundation improve react core numerous ways talking soon intend ship react default reduce bundle size need remove apis nt recommend helpers intend warn usage start removing dependencies still available separate packages exclude default build react would like control bundles better optimize considering switching flat bundles thus removing access react internals react also mean faster compile times default users webpack bundlers faster serverside rendering performance speculative list changes think releases past releases moved end post final x flarnie amp sophiebits x check real regression nhunzaker aweary x check google issue still exists turns polyfillio bug x figure want regarding gaearon x ensure enzyme nt blocked anything side compat flarnie x remove prefix alias gaearon x ensure show sensible warning case gaearon x preparing final release react team general x write blog post adapted acdlite x add attribute info big changes section x consolidateremove updates section end x server hydration make hydration changes prominent breaking changes section maybe write full blog post later x release update devtools x website bvaughn flarnie x docs x document ability return strings arrays x document x merge server streaming doc regular dom server doc fix imports match new unified entry point x test renderer x right release x update cdn urls website official fiddle reference new paths rather x update doc snippets codepens website use todo add bugs discovered testing rc wishlist x fix hot reloading rn probably needs change use x show better message missing react x make sure offer way canceling updater form gaearon follow x remove stack compat code x add support enzyme fiber airbnbenzyme past releases click show x reactdom fixes jquense nhunzaker aweary want release x probably ship fix x new warning callback refs stateless functional components x new api deprecations x moved separate package provide codemod want update es classes moved separate package removed oneliner factories moved separate package forgot moving removed forgot moving x moved separate package x deprecate react addons x decide handle umd addons build x fix bug see alpha click show x remove deprecations added x stop appending strings x remove x remove x move separate package x move separate package x move factories separate package x decide addons build x keep addons need work regardless whether react aliased flat bundle case x strip proptypes checkers production build x readd warning calling proptypes directly x reactdom fixes jquense nhunzaker aweary want release x make decision input fix jquense accepted follow work change flarnie link issue related follow work beta click show x actually enable fragments flarnie verified x make error boundaries official bvaughn x choose lifecycle naming x codemod stuff x decide whether runtime warn old name decided let x fix issue tracking acdlite working x came internally set hard limit recursion acdlite x duplicate react string refs results confusing error ref function provide good invariant spicyj flarnie gaearon draft issue also x test flarnie x warn throw update container manually emptied outside react stack mounted brandnew tree fiber tries apply update usually fails flarnie x test flarnie x additional apis need order start experimenting async acdlite x x x sanity test use cra app check fixtures x messaging x update isfiberreadyyetcom x compose tweet rc click show x ml pass dom props latest gaearon spicyj sebmarkbage flarnie acdlite x regression warn object passed event listener prop aweary fixed needs review updated merged x make sure input variables props state point correct values lifecycle example nt case acdlite fixed x onchange event fires incorrect selectedindex value sebmarkbage x ensure weak minifiers nt ship bundle twice flarnie trueadm fixed x bug ssr false positive warnings svg tags spicyj fixed x bug unexpected crossdomain error passed bvaughn fixed x warn nesting tree inside spicyj fixed x undefined function evaluating ownergetname x regressions reported beta x server renderer crashes production inline styles fixed x server renderer nt yet support returning arrays strings components fixed x server renderer still renders somewhat unnecessarily gaearon x potentially fixed gaearon x cases reported instead real error decision update error message acdlite x shallow renderer nt implement decision team seems leaning away discussion x sm functional components decision delete add minor sebmarkbage x report google crawler render page using link flarnie x check real regression fixed looks like x sm ensure type validation nt regress enabled new features gaearon x decide want break value attribute syncing behavior decided postpone x sm decide want stop calling shallow renderer x decide polyfills x mapset need throw early gaearon x objectassign keep assume decision keep bundled x raf decision keep required maybe use approachstandard relay x big missing pieces x add server rendering reviving x add shallow renderer x seem decoupling shallow renderer reactdom however works inside shallow renderer contains reactdom injections going breaking change gaearon decision let support x decide whether include warning whitelistingblacklisting bvaughn decision x maybe switch flat bundles internals truly private x decide plan forward popular projects depending internals might block final x dangerously exported flat bundle tap event plugin x probably needs internals coordinate necolas done x support gaearon decision gon na x feature parity renderers x shallow renderer supports strings arrays x server renderer supports strings arrays x server renderer supports error boundaries nt make sense conceptually right x decide whether put package reduce issues caused npm duplication x decide domserver entry points seem inconsistent one gaearon configured separately prepack one target includes pure js apis node apis includes pure js apis could combine single entry point add new method x decide care catching errors events initial release x error messages flarnie dan moved back blockers nt think release unclear messages error boundaries huge change open source must documentation link start unmounting roots x add error boundary message link docs x duplicate key warning children keys date claims child ignored render second one easy add final sooner sebmarkbage x verify bundles produced valid strict mode bvaughn x testing beta react team general x share beta proposed release date library authors several weeks advance x triage issues reported beta", "num": "8854", "d": "1/2017"}, {"title": "remove reactcreatemixin", "body": "since mixins longer part future react api plan current reactcreatemixin implementation noop think consider removing since part public api believe would need happen next major release add deprecation warning number projects use api cc spicyj gaearon", "num": "8852", "d": "1/2017"}, {"title": "scoping render typescript maybe", "body": "want request feature report bug bug current behavior code throws export class test extends reactcomponent static proptypes state test variation export class test extends reactcomponent static proptypes state test current behavior bug please provide steps reproduce possible minimal demo problem via similar template using repo test logintsx component expected behavior managed chase scope lost render function suspect possible would issue syntax blocked tsd react sure react bug tsd one versions react browser os affected issue work previous versions react running chrome macos reproduce ff edge win well nt used older versions suspect", "num": "8850", "d": "1/2017"}, {"title": "dom element rendered props detected wasted", "body": "found issue trying demo react perf chrome basically utilizing dom element rendered prop detected wasted code detected wasted even onclick new function every render interestingly code exempt prop value false detect wasted properly code created minimal todolike project reproduce issue repro steps click start perf tab check one item web page click stop perf tab expected result detect wasted render actual result wasted detected reproduced react", "num": "8847", "d": "1/2017"}, {"title": "blank page coming apache server", "body": "want request feature report bug current behavior blank page coming current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior must running example versions react browser os affected issue work previous versions react", "num": "8844", "d": "1/2017"}, {"title": "dangerouslysetinnerhtml remove script tag", "body": "want request feature report bug bug current behavior many cases realworld need inject external party script example adding googleanalytics code adding stripe button currently dangerouslysetinnerhtml removes script tag making hard simply inject js code page issue people writing bloated components like reactga google analytics minimized add script tag similar libs like reactscripts stripecheckout minimized add script believe least using dangerouslysetinnerhtml remove script tag instead run script example adding stripe button follows current behavior bug please provide steps reproduce possible minimal demo problem via similar template script create stripe button render function return reactdomrender documentgetelementbyid container expected behavior display stripe button button versions react browser os affected issue work previous versions react believe react worked long time", "num": "8838", "d": "1/2017"}, {"title": "bug nashorn issue props", "body": "version reactjs running nashorn strange issue reactcreateelement called reactdomserverrendertostring react fails add attributes generated html output eg true far tell elements realize probably nashorn bug actually react bug thought file issue case narrowed issue row props object never gets assigned property mean likely nashorn bug however workaround issue replacing entire forloop calls objectassign polyfill gotten ca nt really see big difference polyfill fact using polyfill everything works using props propname config propname ideas edit similar issue earlier version reactjs regarding inline styles parsed used assign copy properties one object another however case objectassign polyfill bundled assign polyfill used instead solution use polyfill instead", "num": "8834", "d": "1/2017"}, {"title": "proptypesshape throw object properties specified", "body": "setup like call like expect show warning passed object exact shape required please advice", "num": "8832", "d": "1/2017"}, {"title": "umbrella async rendering", "body": "async rendering incomplete bugs existing implementation crucial features missing specifically bugs related resuming work interupted effort clean bugs without fundamentally changing underlying model course working branch decided underlying model inherently flawed needs change tricky case low priority work interrupted higher priority update want able reconcile higher priority without losing low priority children resume later way existing model going scrap model start scrap existing progressed work implementation bugs give us better foundation upon build new model also fix bugs triangle demo although starvation clearly worse aim correctness comprehensiveness x add fuzz tester protect regressions acdlite difficult impossible write unit tests provide sufficient coverage especially ones resilient implementation changes fuzz tester provides safety make assertions work reused consistency x remove existing code related progressed forked work acdlite split update priority represents priority subtree fiber belongs lets us know whether children remaining work expiration times next step implement expiration times low priority work nt possible expiration times alone sufficient generate real product wins even without ability resume interrupted work x implement expiration times acdlite updates fiber priority level coalesce commit bucket updates rounding expiration times may sufficient solve coalescing problem async toplevel api keep track next unit work per root possible context currently always reach root receive update fiber nt necessarily know tree fiber belongs flush interaction work synchronously expiration boundaries blockers shouldcomponentblock still figuring details work x components block rendering using component blocks react searches nearest expiration boundary similar semantics error boundaries ifwhen update expires switches tree instead unblock using actual name tk resuming interrupted work move onto addressing problem resuming interrupted work implement resuming basic case fiber touched since last time worked represent priority parent last reconciled set children present future maybe past still figuring details reorders work items x resume mount bug null passed props constructor acdlite x resume mount bug creating new instance resume causes refs callbacks userspace close wrong instance fix reusing original instance acdlite image load event may fire mounted dom figure way defer event applicable ones mount x ensure error boundaries work incremental mode eg hidden subtree nt commit wait next animation frame flush animation work using last completed priority level work overlaps may able reuse item may need wait switch expiration times x ensure work expires even events solve stale event listeners component receives interaction event flush updates parents simulate render recreate event handler calling defer event dispatching proper fast way see context solve case want show fallback content primary content takes long fast rendering spinner async render takes long general expiration time elapsed async tree started calling alternate tree instead way render tree spinner took long render suspense figure story around unittesting async components probably want force sync mode api provide enzymetestutils", "num": "8830", "d": "1/2017"}, {"title": "perf freezes browser", "body": "banging heads diagnosing really bad performance firefox specific chrome works fine react redux web app updating many objects time using node webpack typescript reactaddonsperf type definitions definitelytyped outputs module reactaddonsperf exported member perf lets us use perfstart console command entered browser freezes clue could wrong help really appreciated", "num": "8828", "d": "1/2017"}, {"title": "click handlers triggered disabled buttons containing elements chrome", "body": "want request feature report bug bug current behavior current version react chrome opera buttons click handler element inside ie text node get click handler triggered click disabled current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior buttons react click events versions react browser os affected issue work previous versions react react chrome working react", "num": "8827", "d": "1/2017"}, {"title": "disabled button onclick handler triggered erroneously", "body": "want request feature report bug bug current behavior buttons children text nodes disabled attribute true click handlers still triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template load code pen check react v observe button click behaviour instances expected behavior button click trigger click handler versions react browser os affected issue work previous versions react bug appears behaviour correct", "num": "8826", "d": "1/2017"}, {"title": "small error tutorial", "body": "want request feature report bug bug current behavior tutorial functional components explained following codesnippet expected behavior work correctly follow tutorial versions react browser os affected issue work previous versions react", "num": "8825", "d": "1/2017"}, {"title": "wondering react support", "body": "want request feature report bug feature current behavior currently react size reactminjs compressed reactdomminjs compressed compression still pain point mobile web situation expected behavior heard react implement event dispatching bubbling normalizes common events across browsers nt need worry much maybe make huge contribution react size wondering possible already enabled react combine babelpresetenv provide ability smaller production bundle size example team china mainly focus ios safari amp android browser amp hybrid webviews ios amp android based webkit kernel polyfill ieedge opera firefox desktop browsers unnecessary production codes polyfills could stripped make final production codes much smaller versions react browser os affected issue work previous versions react react", "num": "8824", "d": "1/2017"}, {"title": "unstablehandleerror allow disabling making error bubble parent upon retry", "body": "feature allows error boundaries components attempt rerender component first error handled boundary defined second render design unhandled error occurs render error bubbles parent would better configure behavior able choose bubble handled upon retry case acceptable continue retry render screen errors occasional race condition current state ready yet current component rendered error times state ready", "num": "8821", "d": "1/2017"}, {"title": "feature request binding utils elements", "body": "want request feature report bug feature first expert react using weeks silly request please forgive binding method elements prevent code repeating additional operations element component example binding updating state inputs need write thing every component design something like javascript import react component react import autostate autostate export default class loginform extends component constructor props super props thishandlesubmit thishandlesubmitbind autostatejs create utils use elements even use jquery manipulations add behaviors elements need without creating many components renderer needs bind functions added bind attribute bind accept array multiple bindings know create input component automaticly nt make tests believe way fast creating nested component everything since react looks components check update please think example main purpose kind feature open many posibilities", "num": "8820", "d": "1/2017"}, {"title": "showing wrong state value console", "body": "signup component state defined constructor component following event listner update state render following jsx code allow user select hisher gender click male button shows male console onchange event soon click female button often logging male value gotten female getting correct value render gender state jsx could please explain problem happening react taking time set component state", "num": "8819", "d": "1/2017"}, {"title": "disabled radio button checkbox fires onchange event double click", "body": "want request feature report bug bug current behavior disabled radio button checkbox fires onchange event double click current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior disabled radio button checkbox nt fire onchange event double click versions react browser os affected issue work previous versions react react windows duplicate", "num": "8814", "d": "1/2017"}, {"title": "anything consider adding reactcomponent prototype", "body": "want functions default components creating best way add prototype chain reactcomponent add default implementation life cycle hook component something misbehave example javascript let defaults dosomething function consolelog added components shouldcomponentupdate function nextprops return deepequal nextprops thisprops reactcomponentprototype objectassign reactcomponentprototype defaults", "num": "8813", "d": "1/2017"}, {"title": "reactdomrender fails reactdom loaded dom available", "body": "want request feature report bug report bug current behavior reactdomrender fails global document first loaded current behavior bug please provide steps reproduce possible minimal demo problem via similar template providing jsfiddle example use case happens nodejs jsdom reproduce define component state render function render null one cases happens pretty frequently using hocs party translation tools etc js class mycomponent extends reactcomponent state display false componentdidmount thissetstate display true render return thisstatedisplay null define test load jsdom global every test cleanup done js const reactdom require reactdom describe app gt let cleanup beforeeach gt cleanup require jsdomglobal aftereach gt cleanup gt reactdomrender documentbody would fail following error require reactdom dom defined globally test pass also returning anything null react element make test pass looks like reactdom using get dom available first loaded nt look reactdomrender called makes sense happy give pr fix throw right direction expected behavior reactdomrender render correctly even global document added loaded works component nt return null certain state versions react browser os affected issue work previous versions react tested latest react nodejs thanks", "num": "8812", "d": "1/2017"}, {"title": "misleading reconciliation behavior due thispropschildren", "body": "want request feature report bug bug current behavior currently component state change input element loose focus think due misleading reconciliation mechanism playing nt get work expected remove component everything work expected another way fix issue change component slightly way current behavior bug please provide steps reproduce possible minimal demo problem via similar template start typing input focus would lost due dom manipulations expected behavior expected behavior update html elements reconciliation thus loose focus versions react browser os affected issue work previous versions react latest also reproducible", "num": "8810", "d": "1/2017"}, {"title": "double click event emitted wrong component", "body": "want request feature report bug bug current behavior doubleclicking component initial click create new component overlay first one double click event emitted new component current behavior bug please provide steps reproduce possible minimal demo problem via similar template double clicking button alert box created happen doubleclick handler new component expected behavior doubleclick event proably emitted button new layer versions react browser os affected issue work previous versions react tested chromium linux chrome window nt test another version", "num": "8804", "d": "1/2017"}, {"title": "text shown text box", "body": "creating html form get input information users via react working macos google chrome problem user types text text box words shown view text box looks like listener store aware action triggered separated three files code javascript import react react import addproductstore storesaddproductstore import addproductactions actionsaddproductactions class addproduct extends reactcomponent constructor props super props thisstate addproductstoregetstate thisonchange thisonchangebind componentdidmount addproductstorelisten thisonchange componentwillunmount addproductstoreunlisten thisonchange onchange state thissetstate state handlesubmit event eventpreventdefault var name thisstatenametrim var price thisstatepricetrim var description thisstatedescriptiontrim render return description export default addproduct code javascript import alt alt class addproductactions constructor thisgenerateactions updatedescription export default altcreateactions addproductactions code javascript import alt alt import addproductactions actionsaddproductactions class addproductstore constructor thisbindactions addproductactions thisdescription onupdatedescription event thisdescription eventtargetvalue export default altcreatestore addproductstore however simply change name function corresponding properties shorter name ie instead description problem solved perfectly result wondering bug naming convention react", "num": "8801", "d": "1/2017"}, {"title": "expose reactdevtoolsglobalhookinject", "body": "feature request came brief discussion twitter gaearon exposes access great use collect component level performance metrics customers production however things love access purpose helping users pinpoint performance issues applications issue includes initial observations hope keep open dialogue particular considering fiber probably change landscape regards common performance problems instrument according understand urge keep api surface area small possible order create minimal commitment apis allow internals move fast exposing additional internals explicit warning committed api fine us tool vendor looked using highlight batched nature work performed react eg work application getting batched properly access component updating methods etc ca nt really know batch work starts ends available reactdom prefix exposing hook would useful also experimentally hooked order capture events measure work resulting suspect better place case access event system would useful using unstable prefix indicate noncommittal would fine us much time look need access fiber instrumentation far looks like hook would useful", "num": "8800", "d": "1/2017"}, {"title": "warning message component reusage development enviroment", "body": "use full version react everything works fine exceptionswarnings minified version got uncaught error minified react error visit full message use nonminified dev environment full errors additional helpful warnings thrown reactdomrender components tested chrome firefox react found real problem component created inside component method like instances component render subcomponents work others nt cases first subcomponent type render fine others fail think must kind warning cases info docs", "num": "8798", "d": "1/2017"}, {"title": "triggers onchange event file input elementvalue assigned", "body": "want request feature report bug bug possibly related current behavior component file upload button user selects file upload called case want call user selects file two times row set null first selection handler called second time user selects file far good bug setting null causes handler called case chrome firefox validate seeing called twice selecting file browsers current behavior bug please provide steps reproduce possible minimal demo problem via similar template actually fiddle callback called three times expected behavior behavior chrome firefox versions react browser os affected issue work previous versions react react react latest fiddle", "num": "8793", "d": "1/2017"}, {"title": "missing objectassign licence please check others", "body": "want request feature report bug bug current behavior missing copyright licence current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior lawyer facebook know show mit according policies versions react browser os affected issue work previous versions react checked current version oses probably previous versions", "num": "8789", "d": "1/2017"}, {"title": "react dom server broken build version", "body": "want request feature report bug bug current behavior breaks code execution file reactdomdistreactdomserverminjs beautified javascript function n r use strict var esecretinternalsdonotuseoryouwillbefired nexports oreactcurrentowner output expected behavior desired goal serverside rendering production skips unnecessary comments warnings etc react documentation page versions react platform nodejs server side rendering work previous versions react nt know", "num": "8788", "d": "1/2017"}, {"title": "missing function emptyfunction", "body": "browsing react source trying locate file emptyfunctionjs often see statements like var looked everywhere file ca nt find", "num": "8786", "d": "1/2017"}, {"title": "explore encouraging users ship dev mode production", "body": "want request feature report bug feature current behavior developers meaning right thing often accidentally ship dev mode production rather prod mode significant impact performance although dev prod one line change something react could explore encouraging great nuance know balance struck overall dx value brings vs ux another challenge change trivial make unclear whether right solution better defaults stronger advocacy folks like sebmarkbage acknowledging known issue perhaps room discussion help improve also noted switch warnings dev may require folks fix whole codebases also suboptimal may inbetween solution worth talking however expected behavior react encourages users ship prod mode production rather dev would open solution either provided library layer somehow tackled buildbundling time webpack tries ameliorate thread number suggestions ranging localhost detection alerts injecting dev mode messages dom used production environment something like alternatively thelarkinn proposing tried standardize env configs required better facilitate detection messaging like unclear would realistic likely ideas react core might around tackle problem versions react browser os affected issue work previous versions react recent versions thread jordwalke prompted issue think also makes fair point regarding benchmarks care help folks ship prod experience yall worked optimizing end customers glory", "num": "8784", "d": "1/2017"}, {"title": "differences react rax", "body": "says react much slower react api use react rax link", "num": "8783", "d": "1/2017"}, {"title": "able render n number deep expandable table rows render another rows", "body": "want request feature report bug probably neither stuck current behavior rendering multiple rows table expanded parent row possible due permitted absence fragmentation current behavior bug please provide steps reproduce possible minimal demo problem via similar template get idea expected behavior expected behaviour guess fiber lands looking explanation achieve versions react browser os affected issue work previous versions react probably prefiber versions thanks help", "num": "8775", "d": "1/2017"}, {"title": "react composition vs inheritance", "body": "going inheritance vs composition discussion place talk use case creating hierarchy components using react stuff like button buttonbar example sort things whatever functionalities defined button component needs present buttonbar components javascript class button extends reactcomponent shouldcomponentupdate prevalidation return result class buttonbar extends button shouldcomponentupdate return mylogic amp amp supershouldcomponentupdatecall currently implemented inheritance achieve correct way going nt want go back way using reactcreateclass", "num": "8774", "d": "1/2017"}, {"title": "missing downloads section", "body": "bug current behavior downloads section expected behavior downloads way section versions react browser os affected issue work previous versions react affected lastknowngood", "num": "8773", "d": "1/2017"}, {"title": "incorrect jsx dynamic elements", "body": "want request feature report bug bug current behavior something like thisafunction thisstateparam thisafunction thisstateparam paramparam changes seems like virtual dom processing comparing changes causing problems versions react browser os affected issue work previous versions react react everything worked fine previous versions react everything works fine iphone iphone", "num": "8772", "d": "1/2017"}, {"title": "input handler parent considered controlled well", "body": "want request feature report bug bug current behavior actually listening every input parent input know called controlled component behavior ca nt type anything case makes confusing warning reading term think controlled case nt want put handler times inputs reason treat uncontrolled case developer control input instead ifyoudonotfollowthenewtermweinventyoucannottypeinsilent way heshe really forgets put handler hisher fault put handler parent fault nt want punished current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior handler matter oninput onchange onkeydown ancestor input element considered controlled versions react browser os affected issue work previous versions react", "num": "8769", "d": "1/2017"}, {"title": "ontoggle event name recognized", "body": "report bug current behavior ontoggle prop attached details html element attach event handler instead shows warning warning unknown prop tag remove prop element details see details created details current behavior bug please provide steps reproduce possible minimal demo problem via similar template time right expected behavior versions react browser os affected issue work previous versions react latest workaround use onclick instead work fire event handler details opened keyboard", "num": "8761", "d": "1/2017"}, {"title": "nt set thispropschildren children still evaluated", "body": "hi code class spinner extends reactcomponent render thispropsloading return else return thispropschildren class app extends reactcomponent render return thispropsaccountname const account null reactdomrender documentgetelementbyid demo thought display spinner got error avoid", "num": "8759", "d": "1/2017"}, {"title": "checksum validation serversiderendered html markup string", "body": "upgrading isomorphic rendering app whines page load react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client reactempty server div datareactroot turns change removing attributes rendered html server side rendering method still generated result never matches keeps whining error tried replace error disappeared however attribute generated html markup memory attribute check whether browser server side generated html matches checksum every render compare whole generated dom hurt performance", "num": "8758", "d": "1/2017"}, {"title": "make sure finddomnode works test renderer", "body": "injection missing stack test renderer something similar added near without get missing injection stack finddomnode error calling finddomnode files use reacttestrenderer nt use reactdom would great repro error test fix", "num": "8753", "d": "1/2017"}, {"title": "test utils renderintodocument issue refs invariant violation addcomponentasrefto", "body": "simple demo app showcase issue experiencing import react react import reactdom reactdom import testutils reactaddonstestutils var jsdom require jsdom jsdom globaldocument jsdom hello world globalwindow documentdefaultview testutilsrenderintodocument test basically ref element found function following error thrown checked multiple copies react project see react installed additionally intended behaviour bug since using refs context important feature", "num": "8748", "d": "1/2017"}, {"title": "make circle run properly branch", "body": "missing circleyml config branch would great copy whatever files need copied make ci pass anyone able test sending pr unlike normal prs go master changes seeing circle pass might simple copying circleyml scriptscircleci", "num": "8744", "d": "1/2017"}, {"title": "expose key helper libraries", "body": "want request feature report bug feature current behavior ca nt access thispropskey thiskey expected behavior use case hydratedehydrate certain components hmr plugin developed internally hmring file often need access things within loops rehydrate right data right add secondary key everything development tool access keys would trivial implement also impossible implement babel compiler trick need detect componentsloops runtime ca nt add prop everywhere mess props seems like rather enduserhostile least give backdoor accessing keys proposal weird edge case uses like would expose would take component instance return key could appropriate warnings around documentation elsewhere", "num": "8743", "d": "1/2017"}, {"title": "run tests correctly windows", "body": "issues test code failing tests windows invalid regular expression would invalid regexp like invalid arguments passed issue similar", "num": "8737", "d": "1/2017"}, {"title": "", "body": "hi run issue controlled password fields adding user tracking software app generally speaking trackers going claim nt capture text inputs achieve simply ignoring values events still however record fact event occurred together selector uniquely identifying target input controlled value attribute markup going change resulting tracking software capturing part selector brings question security implications value accessible via also virtue parsing markup thanks k", "num": "8736", "d": "1/2017"}, {"title": "better way get refs reacttransitiongroup", "body": "found get children refs reacttransitiongroup like get quite ugly better way", "num": "8734", "d": "1/2017"}, {"title": "fiber clear error boundary update queue whenever captures error", "body": "seems like least root", "num": "8733", "d": "1/2017"}, {"title": "unexpected unmountmount occurred delete node", "body": "want request feature report bug bug current behavior single node behavior right multiple nodes unexpected unmountmount occurred unchanged node delete node minimal demo problem without problem single node click toggle button toggle nt affect node problem reproduce multiple nodes ie add node previous fiddle click toggle button toggle unmount mount new node note attribute helpless problem expected behavior keep node regardless number children versions react browser os affected issue work previous versions react reproduced react", "num": "8731", "d": "1/2017"}, {"title": "event radio", "body": "could please explain behaviour clicking radio emits events example without clicking radio emits event thank", "num": "8727", "d": "1/2017"}, {"title": "potential typo codeoverviewmd", "body": "appears typo line codebaseoverviewmd specifically see one symbol results text line appearing one large block code see screenshot markdown code left stylized code rendered right based content subsequent text line would expect appear following indeed something fixed like fix submit pr immediately", "num": "8724", "d": "1/2017"}, {"title": "feature request proptypes validate extra props passed", "body": "stackoverflow question sorta solution working properly least recursion hope idea clear useful example refactoring helps eliminate death code props longer needed", "num": "8721", "d": "1/2017"}, {"title": "delimit dynamic part warning messages newlines", "body": "proposed think find warnings add dynamic part end like delimit two newlines way much easier recognize middle bunch errors good first issue contribute would need find calls include additional info like add couple newlines also need change tests case fail", "num": "8719", "d": "1/2017"}, {"title": "object tags fatally crash react apps chrome node cache issue", "body": "since recent update chrome canary beta branches react apps contain object tag fail fatally rendering halted due internal exception seems chromium devs altered following reason kills react line try stick arbitrary object onto end element cached htmlelement component relationship suppose object tag hits caching code throw exception eventually something tries access instance means change reaches chrome stable quite react apps could randomly stop working users update browsers", "num": "8718", "d": "1/2017"}, {"title": "bug resets value value defaultvalue provided", "body": "demo problem resets value type instead default behaviour trigger input invalid state source code demo available html bug normal behavior js demojs class test extends reactcomponent public state value render return fully resets value type allows type hightlight invalid field reactdomrender documentqueryselector test", "num": "8717", "d": "1/2017"}, {"title": "reactclassequivalence tests fail node", "body": "title says fails run node confirm tests pass included output failing tests reactclassequivalence tests thing classes coffeescript reactclassequivalence tests thing classes typescript summary failing tests fail srcisomorphicmodernclasstestsreactclassequivalencetestjs reactclassequivalence tests thing classes coffeescript reactclassequivalence tests thing classes typescript bvaughn briefly discussed problem confirmed failing behavior", "num": "8715", "d": "1/2017"}, {"title": "provide context sfcs invoked via", "body": "holywar question alert would possible provide context sfcs invoked via syntactic form usecase involves unusual class usage using inheritable containers sfc individual components could overridden descendant classes forced autobind viewmethods full return class item extends base constructor value super thisvalue value tostring return thisvalue var obj new item reactdomrender documentgetelementbyid container bit complete example could found understand holy war question pure functions javascript however thinking usage legit like props way ugly writing self full self return class item extends base constructor value super thisvalue value tostring return thisvalue var obj new item reactdomrender documentgetelementbyid container nt", "num": "8714", "d": "1/2017"}, {"title": "separate reactjsstyleinlinestyling cssstyle styling another npm module", "body": "first thanks making reactjs spreading core ideas others anyway gist issue separating files styling another npm module situation using rxjs react animation using directtodom method performance creating stylestreamedcomponent used like stylestreamedcomponent implementation resorting disgusting hack fond importing reactjsinternal code ps separating cssutility functionalities npm module might helpful librarymaintainersauthors well", "num": "8713", "d": "1/2017"}, {"title": "tutorial link expired", "body": "line reactdocstutorialtutorialmd links", "num": "8711", "d": "1/2017"}, {"title": "children array error message validatechildkeys consistent", "body": "validatechildkeys results inconsistent childrenlength equals result different try result sorry english way use google translate thanks", "num": "8709", "d": "1/2017"}, {"title": "instance pointing reactinternalinstance amp reactinternalinstance pointing instance expected structure", "body": "playing examples understand internal code flow react setstate noticed reactcompositecomponentwrapper object reference instance object turn reference screenshot console reactcompositecomponentwrapper object reactinternalinstance expected structure", "num": "8708", "d": "1/2017"}, {"title": "constructor requires new operator", "body": "reactcompositecomponentjs two calls component class construction missing use new operator calls like component publicprops publiccontext updatequeue", "num": "8702", "d": "1/2017"}, {"title": "warnings clean validatedomnesting", "body": "see validateexplicitkey warnings like hard see path components see validatedomnesting warnings like warnings clean validatedomnesting thanks", "num": "8701", "d": "1/2017"}, {"title": "broken link react tutorial", "body": "want request feature report bug report bug current behavior broken link first section current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior link go working version tictactoe codepen versions react browser os affected issue work previous versions react na", "num": "8699", "d": "1/2017"}, {"title": "bug input onchange event", "body": "hi created jsfiddle example view work onchange event native html react react onchange event worked oninput consoled every one keydown keyup event dont know see onchange event occurs value element changed tip event similar oninput event onchange occurs element loses focus try set value inputs see console react input consoled every key press html input consoled input loss focus", "num": "8696", "d": "1/2017"}, {"title": "native eventstoppropagation outside react root cuts react events", "body": "need host standalone react component draftjs editor inside application run js framework even plain js jquery code application beyond control vendor component adds content part reactbased editor anyway important part need add component following code existing div editorcomponent regular react component onclick events attached content primarily toolbar buttons editor learned react event model bubbling executes independently event bubbles way document evstoppropagation called native event react events wo nt execute understandable situations document contains react app component root content meaning control events page react code however react component small fraction entire page may severely influenced rest page problem event handling code component calls evstoppropagation cuts events smaller fraction even event originated react component scope influencing code could well jquery plugin even author page may able rewrite code special event handling fiddle demonstrate believe point event chain breaks allowing react execute events root element react component rather whole document way react root element could considered isolation edge react application component tracked react event registration function reactdomcomponentensurelisteningto found following code tried change register react event chain root react container tried several basic events onclick onmousedownup seems working us expected react events influenced stopping propagation native events outside react component root two differently implemented parts application coexist peace sure ownerdocument chosen node implementation changing node could break something important please advise proposed solution seems viable case consider change reasons would nt recommend", "num": "8693", "d": "1/2017"}, {"title": "expected onbeforemountcomponent parent onsetchildren consistent", "body": "want request feature report bug looks like bug current behavior setting state rendering component test renderer shows warning console warning exception thrown hook handling onsetchildren invariant violation expected onbeforemountcomponent parent onsetchildren consistent parents invariant violation expected onbeforemountcomponent parent onsetchildren consistent parents following example weirdly happens consistently third time run complex scenarios earlier steps reproduce issue following first create app install renderer add following button jsx import renderer reacttestrenderer tojson demo understand common way using react test renderer interested knowing reasons behind problem eventually see workarounds apply trying serialize components send endpoint see snapguidist expected behavior ideally warning versions react browser os affected issue work previous versions react able reproduce issue latest versions chrome firefox safari macos", "num": "8692", "d": "1/2017"}, {"title": "eventcurrenttarget null onmousemove event handler", "body": "browser chrome lts react ver lts javascript class dropdown extends purecomponent constructor props super props thishandlemousemove thishandlemousemovebind thishandlethrottlemousemove throttle thishandlethrottlemousemovebind guess eventcurrenttarget might", "num": "8690", "d": "1/2017"}, {"title": "shorthand css properties cause style inconsistencies", "body": "reporting bug current behavior render host component contains shorthand css property overwriting longer form property eg conflicting andor property update host component rerender shorthand property eg remove longer form property eg host component style invalid examples bug reproduced update since updated plnkr use instead since makes problem immediately obvious spot example render render expected actual alternate example render render expected actual also reproduce bug properties like etc caveats note shorthand value changes renders things work expected react explicitly updates shorthand style know edgecase behavior may worth fixing originally noticed way issue versions react browser os affected bug reproduces chrome firefox safari using react well unreleased renderer", "num": "8689", "d": "1/2017"}, {"title": "composition events chinese japanese ime problem controlled components input textarea", "body": "want request feature report bug current behavior existed issue one problems kind browsers uploaded detail demo files test results temporary solution reactcompositionevent main problem users type words ime chinese japanese maybe korean something like search database filter data sometimes functions unworkable example users type ni composition session maybe one \u4f60\u5c3c\u6ce5\u817b chinese one \u306b\u30cb\u5c3c\u716e japanese moment event also fired search filter functions application designed invoked event occured maybe something wrong logically functions invoked users finished composition session react three synthetic events input components uncontrolled use help capture text correctly different point google chrome change events sequence check cinputjs ctextareajs files input components controlled hard solve problem controlled component came ca nt modify directly way update state using schedule update may asynchronous test found different osbrowsers could different results written code solve thought nt good solution uses browser detection two properties object one input another internal functions search filter etc ca nt use one property object ca nt stop events state need update value input element stop change events composition session would get nothing typing words ime current behavior bug please provide steps reproduce possible minimal demo problem via similar template use online test demo use normal input component controlleduncontrolled test expected behavior input textarea controlled components react ensure fired change composition events consistent different browsers found different results events fired sequence least versions react browser os affected issue work previous versions react react browsers chrome firefox safari opera ie edge os macos", "num": "8683", "d": "1/2017"}, {"title": "docs look weird small widths", "body": "note accidental top bar misplaced tag also see doc page loading", "num": "8676", "d": "1/2017"}, {"title": "document profiling components timeline", "body": "basically need move section permanent place docs example page might good place", "num": "8675", "d": "1/2017"}, {"title": "shouldcomponentupdate render called thissetstate", "body": "bug current behavior calling multiple times rerenders component value inside also called equal value passed first call expected behavior called time called amp component rerenders returns true background building library wraps components amp state management stuff code similar working context feature created bmi calculator help debug issues vdom example looks like changing input value cause amp rerender nt investigation discovered called several times inside expected values however called expected workaround issue checked failures inside callback amp recalled required obviously ideal replicate go amp change input value trying recreate issue simpler example speculated calling inside parent immediately calling inside child caused problem though idea incorrect child correctly rerendered amp called every time called see attempt using react windows chrome", "num": "8672", "d": "1/2017"}, {"title": "checking permissions component breaks subscribe", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8670", "d": "1/2017"}, {"title": "children prop gets recreated killing purecomponent optimizations", "body": "want request feature report bug report possible bug current behavior component renders component b children prop react component jsx fragment render component recreate said children prop current behavior bug please provide steps reproduce possible minimal demo problem via similar template example code import react react class componentwithchildren extends reactpurecomponent render consolelog render comp return hello thispropschildren class children extends reactpurecomponent render return children nested class app extends reactpurecomponent update gt thissetstate count thisstatecount state count render consolelog render app return export default app expected behavior would expect componentwithchildren rerender none props actually changed versions react browser os affected issue work previous versions react react", "num": "8669", "d": "1/2017"}, {"body": "thanks feedback would like submit pr specific edits like see", "d": "1/2017"}, {"body": "thanks reply honest started trying learn react today qualified provide edits know got lost end nt exactly sure told thus unable complete tutorial removing constructor board class selfexplanatory rest sentence would greatly benefit addition another code div showing board looks like suggested changes made personally would help better understand refactoring occur step well better understanding properties getting passed around well versed languages js strong suit working resolve deficiency likely tutorials come back figure one suggested edits since basically introductory react tutorial", "d": "1/2017"}, {"body": "assigned lacker since context prs tutorial", "d": "1/2017"}, {"body": "thanks reporting looks like bug would like investigate happens", "d": "1/2017"}, {"body": "second invalid prop", "d": "1/2017"}, {"body": "try send pr updates sure changed fbjs", "d": "1/2017"}, {"body": "worth yet follow along fbjs issue anything done update changelog done past easy determine changed", "d": "1/2017"}, {"body": "feel free open pr review anmonteiro", "d": "1/2017"}, {"body": "thanks submitted", "d": "1/2017"}, {"body": "seems reasonable pr would great", "d": "1/2017"}, {"body": "use yarn file points correct version", "d": "1/2017"}, {"body": "always children pass jsx depend components actually return think fiber would change way sure understand mean bypass case maybe could create complete runnable code snippet illustrates problem clear", "d": "1/2017"}, {"body": "hi gaearon thanks response currently components complicated create simple code snippet tell trouble say passing parent method children lifting state permissionchecker component goes around category link component ca nt using reactchildrenmap category render iterating children use reactcloneelement pass props children description clear still create snippet code", "d": "1/2017"}, {"body": "generally nt recommend relying cloneelement lot usually sign restructure components around data rather try manipulate elements yes simplified example would help", "d": "1/2017"}, {"body": "hi gaearon create repo add screenshot also want quick look working add permissionchecker around components breaks advice prevent cloneelement nt idea thanks much repo", "d": "1/2017"}, {"body": "recommend stop using wiring component hierarchy instead describe hierarchy data structure like render component recursively read data structure build elements explicit props right away problem use kinda breaks react paradigm moment extract block component stops working demonstrates cloning children recursively good approach another alternative solution use context experimental feature many pitfalls change future recommend unless experienced react context however react router solves problem hope helps closing since usage question rather issue", "d": "1/2017"}, {"body": "hey webterminator able reproduce issue ran code shared jsfiddle simplified method show alert runs expected share small example reproducing issue use fiddle linked one link pr template starting point", "d": "1/2017"}, {"body": "hi aweary link please keep private thanks", "d": "1/2017"}, {"body": "thanks webterminator mean something along lines jsfiddle linked difficult us help nt minimal case reproducing issue verify issue react components", "d": "1/2017"}, {"body": "really mistake nt include npm install savedev babelpolyfill threw fact error console thanks", "d": "1/2017"}, {"body": "glad hear figured thanks follow", "d": "1/2017"}, {"body": "footer site looks like happening uses flexbox without ms prefixes legacy compatibility", "d": "1/2017"}, {"body": "good catch want send pr", "d": "1/2017"}, {"body": "yeah happy ca nt get afternoon flik wan na get contributor list", "d": "1/2017"}, {"body": "sure", "d": "1/2017"}, {"body": "nt thought much initial reaction examples repo superseded createreactapp supplemented official react docs needed partial removing anything providing single example well built redundant set poorlymaintained examples worse examples agree sentiment either remove drastic spring cleaning", "d": "1/2017"}, {"body": "nice community examples like maybe could get people contribute", "d": "1/2017"}, {"body": "second vote removing examples folder times used examples testing dom behavior superseded dom fixtures stay vote reworking examples solve specific problems usually look open examples folder otherwise go straight quick start guide docs pages sidebar new site could good source inspiration new examples maybe something like", "d": "1/2017"}, {"body": "thinking use examples holistic apps eg calculator github repo browser etc show solve problems instead repeating docs", "d": "1/2017"}, {"body": "ah think motivation necessarily copy docs verbatim sample apps makes easier people learn sounds good", "d": "1/2017"}, {"body": "want create example applications maintain small list somewhere external applications recommend reviewing", "d": "1/2017"}, {"body": "maintaining list recommended external examples", "d": "1/2017"}, {"body": "tried replicate behaviour codepen able maintain two ref references child ie ancestor component ref gets nulled think might missed paragraph note override ref still possible two parents ref child unless use callbackrefs unfortunately clear point override still gets overwritten change rc related case clone nt override however indeed possible keep refs callbacks need manually based example functions something delegate function", "d": "1/2017"}, {"body": "ah great yes misunderstood meaning behind docs thanks walking solution appreciate", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "ajax error textbabel fetching scripts invalid typelanguage attributes deprecated removed around january see details server end render", "d": "1/2017"}, {"body": "use first argument event handler like docs fact appears proxy nt worry implementation detail sure second one exists likely bug maybe even fixed master aweary might remember", "d": "1/2017"}, {"body": "second event result internal implementation detail resolved likely released next minor version", "d": "1/2017"}, {"body": "perf measuring library code time application code time since measuring application code time actionable includes time spent components react code interested full time learn information timeline integration hope helps", "d": "1/2017"}, {"body": "thank much clarification helpful", "d": "1/2017"}, {"body": "gaearon makes sense sure like change since total duration tends important estimating hit initial render framerate guidelines well comparing different versions react actionable sense able optimize react internals actionable sense update meets performance guidelines update results inefficient react dom update probably something else recording numbers question", "d": "1/2017"}, {"body": "need record initial render use browser apis", "d": "1/2017"}, {"body": "gaearon think issue like subcomponent level render times get perfprintinclusive longer gives total render time", "d": "1/2017"}, {"body": "thanks feedback see kinds information could valuable likely wo nt reverting behavior point middle core engine rewrite consider feedback get making reactperf work", "d": "1/2017"}, {"body": "hey thanks issue reason happening actually really interesting related react issue using semicolons scenario automatic semicolon insertion asi work means expect code parsed like actually parsing immediately invoked function minimize example expecting due paren lack semicolon parsed js foobar function foobaz function reactdomfinddomnode add semicolon function body example see issue resolved hope helps", "d": "1/2017"}, {"body": "wow thanks nice explanation aweary", "d": "1/2017"}, {"body": "reactdom fixes jquense nhunzaker aweary want release think least included close merged", "d": "1/2017"}, {"body": "jquense probably want merge first relies changeeventplugin keep value attribute sync value property need reevaluate changes", "d": "1/2017"}, {"body": "reactcreateclass moved separate package reactcreatefactory moved separate package reactdom factories moved separate package new packages maybe need tool managing many packages single repo wink", "d": "1/2017"}, {"body": "long nt make umd builds harder board lerna someone want send pr", "d": "1/2017"}, {"body": "pretty sure reached peak harder downhill", "d": "1/2017"}, {"body": "gaearon challenge accepted spicyj jk wo nt make harder throw something together", "d": "1/2017"}, {"body": "awesome excited ahead react also glad wo nt manually create minified build react server render curious idea much larger bundle react fiber", "d": "1/2017"}, {"body": "scratched make setstate async default remove attribute whitelist stateful functional components new context api stylistic choice confusing like double negative hehe", "d": "1/2017"}, {"body": "ya look great yall one thought related flat bundles harder write certain types tooling without access internal apis specifically thinking test libs maintain invariably need touch bunch internal apis test utils fall short bit niche use case tho asandthe cost using apis well understood nt used production apps", "d": "1/2017"}, {"body": "guys want switch lerna working rollup scripting make flat files lerna packages would happy help", "d": "1/2017"}, {"body": "curious idea much larger bundle react fiber right roughly size implementing features async scheduling error boundaries fragments portals nt worked optimizing size think reduce likely initial release another promising imo area fiber support custom renderers reactdom tradeoffs nt match product needs much easier create custom dom renderer example nt ship synthetic event system fiber makes custom renderers way easier create giving component features box", "d": "1/2017"}, {"body": "stateful functional components issue read", "d": "1/2017"}, {"body": "go flat bundle route definitely appreciate would awesome offer modern bundle node capable browsers work topic effectively produces flat bundles different output scenarios basically configured wrapper around rollupbabelbuble also thought adding specific modern entries packagejson bundles like webpack make use eg think something like would definitely interesting react especially context ssr apps target node gt", "d": "1/2017"}, {"body": "agree swernerx time migrate", "d": "1/2017"}, {"body": "swernerx interesting direction may explore future right browser support increasing many features sufficiently slower counterparts nobody time optimize yet know team hard work fixing rather look evergreen browsers mostly fast using", "d": "1/2017"}, {"body": "stateful functional components issue read specific issue afaik old ideas repo interested ideas numerous reasons interested stateful functional components listed", "d": "1/2017"}, {"body": "concerning flat bundles would great internals still exposed one way taskworld sometimes monkeypatched react internals userland code finegrained error messages performance measurement hooked react internals added instrumenting code like show code js const reactreconciler require reactlibreactreconciler reactreconcilermountcomponent mountcomponent gt function internalinstance enter react mount describeinstance internalinstance try return mountcomponentapply arguments finally exit reactreconcilermountcomponent reactreconcilerreceivecomponent receivecomponent gt function internalinstance enter react update describeinstance internalinstance try return receivecomponentapply arguments finally exit reactreconcilerreceivecomponent reactreconcilerunmountcomponent unmountcomponent gt function internalinstance enter react unmount describeinstance internalinstance try return unmountcomponentapply arguments finally exit reactreconcilerunmountcomponent also hooked redux reselect similar ways unified development experience know supported internal apis may break release especially fiber coming unsupported better impossible", "d": "1/2017"}, {"body": "taskworld sometimes monkeypatched react internals userland code finegrained error messages supported error boundaries fiber performance measurement use reactperf know supported internal apis may break release especially fiber coming unsupported better impossible even better let discuss use cases come supported apis", "d": "1/2017"}, {"body": "gaearon offering package format modern clients parallel classic build prepublish tool mentioned end react decide processingbundlingoutput application transpile stuff make original code unaccessible user wants deploy modern node embedded browsers", "d": "1/2017"}, {"body": "gaearon main module always point bundles either commonjs esmodule outputs free offer alternative modern build keeping stuff intact", "d": "1/2017"}, {"body": "excuse ignorance removal createmixin mean packages rely mixins stop working dependants switch hoc solution able quickly switch alternate way provide oldstyle mixins", "d": "1/2017"}, {"body": "excuse ignorance removal createmixin mean packages rely mixins stop working dependants switch hoc solution able quickly switch alternate way provide oldstyle mixins implementation looks like never documented appeared api thought might want validate mixins future packages somehow found started using remove call use mixin directly packages providing mixins use oneline change removing useless function call offering package format modern clients parallel classic build prepublish tool mentioned yes understand saying offer build people use performance suboptimal blame react wait features actually fast providing build", "d": "1/2017"}, {"body": "gaearon migration done iterations eg first convert either features supported without performance issues also two issues syntax source code syntax bundle reason migrating source latest standard possibility using staged features deemed useful enough syntax bundle totally separate issue syntax bundle bundles decided build step think would awesome separate bundles relevant standard sure achieve practice whether achieved without unreasonable amount work nevertheless stay project ought provide bundle targeting naturally first requires converting source utilize features", "d": "1/2017"}, {"body": "pragmatic choosing source target languages driven pragmatic needs migration done iterations eg first convert vars either let const features supported without performance issues target bundle exactly would accomplish benefits end users case downsides less browser support fragmentation potential surface area bugs reason migrating source latest standard possibility using staged features deemed useful enough using new features newly written code little benefit opinion rewrite existing code new features since also introduces risk new bugs nice way ramp contributors noted issue already rewritten react make sense convert old code", "d": "1/2017"}, {"body": "gaearon even better let discuss use cases come supported apis would great api detect object synthetic event redux usually users passing events action payloads also reduxactions even using breaks ability access sending monitors simple solution js import syntheticevent reactlibsyntheticevent const store createstore rootreducer windowreduxdevtoolsextension amp amp windowreduxdevtoolsextension serialize replacer key value gt value amp amp value instanceof syntheticevent return event return value though maybe encourage using eventpersist providing event data explicitly", "d": "1/2017"}, {"body": "though maybe encourage using eventpersist providing event data explecitely solution", "d": "1/2017"}, {"body": "gaearon totally understand code may soon deprecated rewritten really good idea example continue using two module syntaxes sidebyside newly written code see source files even combining parts necessary supporting node using node module syntax course understandable personally feel quite strongly unnecessarily mixing two competing module handling mechanisms particularly newly written code particularly talking standard nonstandard one one point sure actually relevant came mind react one hottest libraries javascript world react decided fully utilize latest standardized es features preferably strict style guidelines might incentivize browser manufacturers hasten optimization efforts react could show way ui libraries whole javascript ecosystem maybe slightly optimistic", "d": "1/2017"}, {"body": "using two module syntaxes sidebyside newly written code see source files even combining using commonjs exclusively right mostly due facebook build pipeline limitations think might confusing flow syntax es modules", "d": "1/2017"}, {"body": "oh nt used flow kind syntax new", "d": "1/2017"}, {"body": "gaearon thanks suggestions excited error boundaries find offtheshelf solutions reactperf sometimes suitable instance monkeypatched several libraries able construct table shows much time percentage spent react reconciling dom manipulations userland react lifecycle selectors created using redux store reducer redux store subscriber data gives high level overview focus optimizing however let focus specific problem performance error boundaries examples believe unforeseen use cases monkeypatching internals could useful another situation monkeypatched react internals want make react warnings appear popup dom instead console sometimes develop user interface without devtools accomplished monkeypatching display popup instead using would hard accomplish react packaged flat would given idea exposing internals allows experimentation", "d": "1/2017"}, {"body": "find offtheshelf solutions reactperf sometimes suitable instance monkeypatched several libraries able construct table shows much time percentage spent may wrong believe data already exposed via want make react warnings appear popup dom instead console sometimes develop user interface without devtools intend show ui default react forgot add umbrella let focus specific problem performance error boundaries examples believe unforeseen use cases monkeypatching internals could useful agree useful however problem monkeypatched convenience wo nt come back filing issue gathering support community result everyone ends local hacks break every versions permanent solutions maintainers nt even aware something people want would rather prefer discussions like one explain use cases either point provide possibly unstable hooks", "d": "1/2017"}, {"body": "gaearon makes sense agree sentiment although usually treat opensource projects want mindset kinda like start experimenting alone making issue could bring benefit project community", "d": "1/2017"}, {"body": "see browser console showing many warnings also packages use still make use", "d": "1/2017"}, {"body": "likely firing multiple warnings single one names first classes want spam console", "d": "1/2017"}, {"body": "release", "d": "1/2017"}, {"body": "nt know yet say likely within three months", "d": "1/2017"}, {"body": "stateful functional components nt know api would look like elegant classes", "d": "1/2017"}, {"body": "really awesome cant wait get fiber means finally improve rendertostring achieve better ssr performance async rendertostring best thing right went servers async", "d": "1/2017"}, {"body": "fiber nt currently bring anything new ssr plan mentions switch flat bundles synchronous perf get better default wo nt envify code manually people nt however related fiber ssr asynchronous", "d": "1/2017"}, {"body": "stateless components optimization aka function components pure got rendered every time like classes purerenderers definition stateless component srcrendererssharedstackreconcilerreactcompositecomponentjs looks like regular component may look like reactpurecomponent sorry nt understand points stateless components", "d": "1/2017"}, {"body": "honest stateful functional components seems another way write already write using classes far hyped stateless functional component optimizations hinted past", "d": "1/2017"}, {"body": "colch refer past discussion pretty controversial milosrasic stateful functional components another way write code important differences make interesting us mentioned earlier thread", "d": "1/2017"}, {"body": "eta", "d": "1/2017"}, {"body": "months", "d": "1/2017"}, {"body": "gaearon status proptypes previously stated maintenance mode turned away feature requests nt consistent plan continue adding features proptypes", "d": "1/2017"}, {"body": "aweary nt think particular ones mind", "d": "1/2017"}, {"body": "gaearon mostly asking regards handful prs open proptypes mobile ca nt link", "d": "1/2017"}, {"body": "gaearon found", "d": "1/2017"}, {"body": "moving statesetstate separate library core react becomes propsonly statefulness added various ways per component state one option derived class would serve base class component wanting intrinsic state", "d": "1/2017"}, {"body": "danielearwicker let keep thread focused roadmap use place generic feature requests suggestions otherwise everyone pile features want see relationship roadmap", "d": "1/2017"}, {"body": "gaearon sure though defence asking fewer features", "d": "1/2017"}, {"body": "state firstclass citizen react see thoughts", "d": "1/2017"}, {"body": "gaearon add removing class components roadmap currently deprecated", "d": "1/2017"}, {"body": "removing thing useful async callbacks simple function barely adds size library implementing similar functionality user means opting separate callbacks lifecycle methods cdm cwu", "d": "1/2017"}, {"body": "yaycmyk see links number issues providing background deprecated edit see already know issue defer back points made", "d": "1/2017"}, {"body": "yes let get rid want send pr add deprecation warning", "d": "1/2017"}, {"body": "think supposed bind current instance like use autobind library", "d": "1/2017"}, {"body": "familiar typescript supports class properties property initializers like get using arrow function mean implicitly bound instance using repo test logintsx component tried cloning repo running nt see error provide simpler example reproducing issue clear steps reproduce would great", "d": "1/2017"}, {"body": "work simpler repro week get around still ugly workable scopes properly", "d": "1/2017"}, {"body": "flik thanks issue believe example works run static server directory check going close favor think either make clear instructions get rid example together", "d": "1/2017"}, {"body": "workaround could make dom element append appropriate parent stack overflow question also seems answers", "d": "1/2017"}, {"body": "think dangerouslysetinnerhtml strip script tag using dangerouslysetinnerhtml know could dangerous issue people writing bloated components like reactga google analytics minimized add script tag similar libs like reactscripts andstripecheckout cc gaearon", "d": "1/2017"}, {"body": "use basic component load scripts customize load script wish gives callback continue stuff script get loaded", "d": "1/2017"}, {"body": "update solved turned java implementation require returned socalled scriptobjectmirror nashornspecific wrapping js object mirror passed js invoking require caused lot different issues nashorn actually unwrap scriptobjectmirror passed script apparently nt solved simple unwrapping scriptobjectmirror manually returning require little tip others might face issue scriptobjectmirrorunwrap obj wo nt work well weird behaviour regarding script engine globals better use reflection get field sobj scriptobjectmirror return real objet", "d": "1/2017"}, {"body": "thanks issue ghanjra existing issue open going close favor discussion nt get fragmented feel free add input", "d": "1/2017"}, {"body": "exciting list read paragraph caught especially attention regarding use best practice make dom changes inside requestanimationframe callback since scheduled browser type work mind means code need use document fragment appended next requestanimationframe callback using vdom library would use requestidlecallback make changes would apply dom patches next requestanimationframe callback idle callback hoping see idea planned potentially included react findings measurements seeing third bullet bigger items list answered question", "d": "1/2017"}, {"body": "provide repo demonstrates issue unfortunately going near impossible diagnose react issue without minimal test case lets us use perfstart console command entered browser freezes check docs page perf instructions import", "d": "1/2017"}, {"body": "hi aweary made test repo existing template shows module reactaddonsperf exported member perf", "d": "1/2017"}, {"body": "see problem firefox similar issues things worked superbly chrome lagged firefox ie lot virtualization building react datagrid component found really helpful chrome ie inspector specifically ui responsiveness tab look running per frame helps narrow general note though ie ff lag chrome terms updating dom attributes numerous dom components per frame hundreds react internally anyway", "d": "1/2017"}, {"body": "flexicious talk reactperf firefox case answer yes ca nt run perf tool chrome firefox outputs module reactaddonsperf exported member perf general really bad performance firefox ie edge seems ok handling many items app handles data sports betting lots dom updatessec narrowed issue reducer called state updates would amazing able set react perf tools", "d": "1/2017"}, {"body": "hey troch issue actually filed codepen see comment summary resolved hope helps", "d": "1/2017"}, {"body": "oops sorry coworker misunderstanding", "d": "1/2017"}, {"body": "figured worries", "d": "1/2017"}, {"body": "thanks report krisyoung issue resolved release pr fixed codepen running latest release showing issue longer occurs able safely update since patch releases hope helps", "d": "1/2017"}, {"body": "thanks bad checking", "d": "1/2017"}, {"body": "thanks issue yellowmoneybank current example actually correct function may called passed component hope clears", "d": "1/2017"}, {"body": "proof make huge contribution react size read source code single pain point makes react bundle size large", "d": "1/2017"}, {"body": "compression incorrect kb gzipped compression number quoting compression uncompressed size still impact parse compile time though looking removing polyfills normalization unnecessary modern browsers using flags difficult reliably build step maintain many different configurations hope helps", "d": "1/2017"}, {"body": "gaearon sorry description accurate mean uglified instead compression looking forward seed removing polyfills normalization unnecessary modern browsers", "d": "1/2017"}, {"body": "unlikely make configurable mental model error boundaries work trycatch block retry happens inside block throws error bubbles next stack making error boundaries configurable way asking would like making blocks javascript configurable better implement feature userland rather frameworklanguage react case one way implement would remount error boundary whenever catches error remounted component different instance one caught error skipped retry example using higherorder component nt use hoc good fit use case see doc information case unfamiliar js function withremounting wrappedcomponent return class withremounting extends reactcomponent state childkey remount gt thissetstate state gt childkey statechildkey render return class errorboundary extends reactcomponent unstablehandleerror thispropsremount render const errorboundarywithremounting withremounting errorboundary disclaimer nt actually run code hope helps", "d": "1/2017"}, {"body": "also new behavior fiber think retrying work long render error state least right failing example provide retry button error state clicking clear error attempt cleanly retry behavior want note work fiber current version react", "d": "1/2017"}, {"body": "great respond know get faster time maybe better manually understand sure ready safe anybody write mail priv need small advicehelp priv data beat least less huge best right use advices straight upper mail easier read directions good night andrew andrew clark notifications githubcom napisa\u0142 unlikely make configurable mental model error boundaries work trycatch block try renderchildren catch errorinchildren handleerror renderchildren retry happens inside catch block throws error bubbles next catch stack making error boundaries configurable way asking would like making catch blocks javascript configurable better implement feature userland rather frameworklanguage react case one way implement would remount error boundary whenever catches error remounted component different instance one caught error skipped retry example using withremounting higherorder component nt use hoc good fit use case see doc information case unfamiliar function withremounting wrappedcomponent return class withremounting extends reactcomponent state boundarykey remount gt thissetstate state gt boundarykey stateboundarykey render return class errorboundary extends reactcomponent unstablehandleerror thispropsremount render const errorboundarywithremounting withremounting errorboundary disclaimer nt actually run code hope helps receiving subscribed thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "jjuj interiapl reopen min ty j\u0119drzej wrzesi\u0144ski jedrzejwrzesinski gmailcom napisa\u0142 great respond know get faster time maybe better manually understand sure ready safe anybody write mail priv need small advicehelp priv data beat least less huge best right use advices straight upper mail easier read directions good night andrew andrew clark notifications githubcom napisa\u0142 unlikely make configurable mental model error boundaries work trycatch block try renderchildren catch errorinchildren handleerror renderchildren retry happens inside catch block throws error bubbles next catch stack making error boundaries configurable way asking would like making catch blocks javascript configurable better implement feature userland rather frameworklanguage react case one way implement would remount error boundary whenever catches error remounted component different instance one caught error skipped retry example using withremounting higherorder component nt use hoc good fit use case see doc information case unfamiliar function withremounting wrappedcomponent return class withremounting extends reactcomponent state boundarykey remount gt thissetstate state gt boundarykey stateboundarykey render return class errorboundary extends reactcomponent unstablehandleerror thispropsremount render const errorboundarywithremounting withremounting errorboundary disclaimer nt actually run code hope helps receiving subscribed thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "acdlite thank detailed response suggestion gaearon case app displayed projector user interact screen retry button would feasible similar solution try automatically retrying x time", "d": "1/2017"}, {"body": "hi nt run code acdlite could nt retry logic lead infinite loops every remount attempt failing", "d": "1/2017"}, {"body": "yes potential loops default behavior still achievable though schedule another update componentdidupdate recovering error", "d": "1/2017"}, {"body": "thanks issue quanthir hope first two weeks enjoyable actually used something similar proposing linkedstatemixin let use make twoway bindings easier similar function deprecated due low popularity recommend explicit data bindings instead may little verbose makes easier reason component example go find know using property state property name also unlikely expand public component api special casing prop since already doable binding methods hope helps", "d": "1/2017"}, {"body": "provide jsfiddle example look problem please use guidelines opening new issue", "d": "1/2017"}, {"body": "koushikchhetri stated quanthir issue template need example reproducing issue help use starting point", "d": "1/2017"}, {"body": "aweary updated fiddle changes observed two following issues developer console page loaded click buttons first time get blank gender console second click get gender properly console stick button click times click another gender button get previous gender one time usual quanthir", "d": "1/2017"}, {"body": "updated fiddle changes koushikchhetri sorry clearer jsfiddle fork new fiddle containing changes fork url change share us review", "d": "1/2017"}, {"body": "aweary please check quanthir", "d": "1/2017"}, {"body": "koushikchhetri setstate async operation please take careful look documentation updated fiddle illustrate fix", "d": "1/2017"}, {"body": "johannsonntagbauer thanks understood", "d": "1/2017"}, {"body": "johannsonntagbauer exactly right also see section docs setstate updates may asynchronous go ahead close since nt seem issue react", "d": "1/2017"}, {"body": "think react bug rather browser difference problem solve easily adding statement event function first line code fire event check sample code", "d": "1/2017"}, {"body": "thanks report ocetnik issue present latest release resolved master verify jsfiddle using recent build master resolved time contained breaking changes slated next major release currently pr open makes nonbreaking backport release minor release going reviewing soon go well would expect land next minor release", "d": "1/2017"}, {"body": "quanthir react number normalizations events make easier deal part addressing browser inconsistencies making work like elsewhere would within scope react provides far event system goes", "d": "1/2017"}, {"body": "recommended changing behavior third party components might break surprising new developer codebase maybe even couple months please create custom base class instead think important general though discourage using inheritance react components specific example implementation calls make performance worse many cases deep equality checks much expensive reconciliation hope helps", "d": "1/2017"}, {"body": "regarding specific example usage could never avoid maintaining references root level attributes props object reactpurecomponent helping observed deepequal checks cheaper compared reconciliation since huge component structure", "d": "1/2017"}, {"body": "really depends specific example data structures may change future deep equality comparisons may get expensive invisible would hard next developer figure going wrong really suggest explicitly declaring method components even calls least way hard miss", "d": "1/2017"}, {"body": "supported sorry running checks browser globals every time perform dom operation worse performance would rather boot works component nt return null certain state might better crash early browser globals unavailable sure many people rely would breaking change could", "d": "1/2017"}, {"body": "encountering details workarounds", "d": "1/2017"}, {"body": "yes rely children lining return early instead use conditions inside jsx fixed example", "d": "1/2017"}, {"body": "hi appears wanting propagate event component correct pass function prop invoke pass handler within modal invoke function passed property double click invoked", "d": "1/2017"}, {"body": "hi fabiancook think misunderstanding question handler called modal initial click seems counter intuitive fairness time spending seems match current implementation browsers still sure understand uievent spec dblclick", "d": "1/2017"}, {"body": "sorry referring quick succession clicks one event occurring one", "d": "1/2017"}, {"body": "currently meet statement correct sorry", "d": "1/2017"}, {"body": "refering dblick event indeed two clicks normal situation trigger dblclick two clicks events domreact element sure dblclick event emitted", "d": "1/2017"}, {"body": "maxired probably browser quirks react interpolate dblclick os feature", "d": "1/2017"}, {"body": "syranide thanks explanation yep right seems react related", "d": "1/2017"}, {"body": "react nt rely naming conventions anywhere api explicit please try reduce test case react without libraries please publish somewhere reproduce thanks", "d": "1/2017"}, {"body": "context", "d": "1/2017"}, {"body": "make clear modules removed well irrelevant fiber exactly question adding hooks rather question deciding expose via official apis", "d": "1/2017"}, {"body": "ok see already plan regarding devtools use fiber", "d": "1/2017"}, {"body": "quite plan yet although proof concept working work week", "d": "1/2017"}, {"body": "sounds good seems like would good point departure discussions expose looking forward taking look", "d": "1/2017"}, {"body": "please provide project reproducing problem obvious description going wrong development production mode behave identically except errors verbose development mode particular error looks like might bundling two copies react page fact exactly error says might adding ref component created inside component method multiple copies react loaded details checked suggested documentation page verified case", "d": "1/2017"}, {"body": "judging code snippet might problem cases nt cases code nt provide enough details say sure however still fail identically development production way creating separately really react supposed used nt need create components include elements method output hope helps", "d": "1/2017"}, {"body": "thanks reply yes components created render method using custom loader roots refactored search issue source got nothig works like charm problem ref added constructor stupid used loader create roots like minified version first tinymce loaded throw exceptions dev version everything work fine", "d": "1/2017"}, {"body": "first use react highly unidiomatic clear create element constructor put state unnecessary generally create render method instead explained error message seen string refs work element created inside method might adding ref component created inside component render method indeed nt work limitation exactly nt recommend string refs anymore suggest using callback refs instead nt problem described page point string refs deprecated suggest switching callback refs hope helps nt see anything actionable us would recommend refactoring code remove constructor altogether create element render function nt want replace string ref callback ref", "d": "1/2017"}, {"body": "think issue nothing react default behaviour bug check simple example see alerts browsers show alert think handling thisvaluenull like value change calling onchange handler", "d": "1/2017"}, {"body": "thanks flagging context library author well aware library used react fact helped fix issues claiming facebook stealing copyright writing blog post seems bit premature since could reached first bug intentional cc sindresorhus zpao", "d": "1/2017"}, {"body": "hope mean authors multiple contributors displaying copyright also accurate regardless agreement facebook nt create element source dangerous community get kind thing wrong popular project sco vs unix showed risk stealing seems like appropriately loud term commonly used copyright enforcement campaigns raise significance problem sorry nt friendly term important jan pm dan abramov notifications githubcom wrote thanks flagging context library author well aware library used react fact helped fix issues claiming facebook stealing copyright writing blog post seems bit premature since could reached first bug intentional cc sindresorhus zpao receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "agree important probably solveable putting code license preserved bundler would like send pr verify fix works", "d": "1/2017"}, {"body": "great idea except complex legal thing lawyer existing author either project nt seem right one thing raise concern another get hands make copy branch pr might wrong misrepresent rights especially repo owner already suggested might care means idea appropriate put license file jan dan abramov notifications githubcom wrote agree important probably solveable putting license code objectassign license preserved bundler would like send pr verify fix works receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "suggest copying lisense file source comment adding directive comment nt get stripped nothing could misrepresent pretty manual operation would use existing license could send pr maintainers could verify change right could rebuild react locally verify change worked hard would take less time helpful writing blog post", "d": "1/2017"}, {"body": "clear care also appreciate help hard get everything right sometimes make mistakes easy write post shaming big company making mistake reality react team people many things need fix every day side think offering help could tiny bit productive would happy give details possible fix willing put time write blog post us making mistakes also help us beauty open source case try get cutting next release thank flagging cheers", "d": "1/2017"}, {"body": "decision get involved putting copyright statement someone else work best authors choose want represent copyright getting wrong work financial liability respect may want take however thank suggesting try may wanted take risk objectassign seems two positions copyright would nt know put license statement", "d": "1/2017"}, {"body": "also link source", "d": "1/2017"}, {"body": "also link source polyfill code coming nt require licensing notice code samples added august public domain licensing notice necessary need one use copyright dedicated public domain link provided obvious source", "d": "1/2017"}, {"body": "would good instead link comments appropriately explained block code owned facebook copyright exception module least ensure facebook nt try assert ownership block future mozilla url may work forever context get lost nt included directly", "d": "1/2017"}, {"body": "wrote snippet public domain means original authors dedicated work public domain waiving rights work worldwide copyright law including related neighboring rights extent allowed law facebook nt try assert ownership block future even mean work public domain whole point public domain anyone use modify redistribute purposes requirements give attribution legal concerns please get touch afraid ca nt help thread", "d": "1/2017"}, {"body": "going lock since resolution seems straightforward try next release discussion seem productive like avoid spamming people subscribed repo find problems please file new issue thanks", "d": "1/2017"}, {"body": "fix waiting lawyers reply bit", "d": "1/2017"}, {"body": "likely using different versions react reactdomserver please make sure use exact version also recommend updating", "d": "1/2017"}, {"body": "also nt think importing umd bundle supported node environment unless also react ca nt use reactdomserver singlefile distribution together react commonjs entry point", "d": "1/2017"}, {"body": "hi dan thanks reply using version reply going update version hope incompatibilities two releases unless documentation reply check let know soon possible thanks", "d": "1/2017"}, {"body": "patch release nt problem anything fixes issues pretty certain ca nt mix umd commonjs packages likely source problem", "d": "1/2017"}, {"body": "requiring umd bundle react working fine still throwing problem nt depend necessity using approach react reactdomserver plus updated react reactdom version see line requires nodemodules nt affect furthermore logging bundle see", "d": "1/2017"}, {"body": "hmm think right nt ever supported using umd builds node environment reason using instead", "d": "1/2017"}, {"body": "renders debug info warnings something else nt want behaviour production environments doc says use minified build production trying optimize performances general", "d": "1/2017"}, {"body": "yea make clearer advice use minified builds mostly clientside since nt good way server side yet server side enough run app set eg help", "d": "1/2017"}, {"body": "close since nt support heavy server side optimization tips check pr hope helps", "d": "1/2017"}, {"body": "gaearon worth noting work earlier least nt throw seen recommended times ssr performance articlestalks might uncommon pattern", "d": "1/2017"}, {"body": "see popular talk ssr performance react recommends", "d": "1/2017"}, {"body": "hmm nt aware used work", "d": "1/2017"}, {"body": "seems would happen since sure desired behavior see", "d": "1/2017"}, {"body": "yes main reason ca nt revert good reasons change fix need fix forward", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "read file get detail", "d": "1/2017"}, {"body": "use custom module system called haste knows resolve requires check codebase overview docs page information", "d": "1/2017"}, {"body": "reference", "d": "1/2017"}, {"body": "context already warn detect minified dev version react far find similar heuristics notify users maybe even aggressively pop dom dialog", "d": "1/2017"}, {"body": "also want make clear warnings provide significantly improve performance people pay attention thread explains rationale difficult deploy fact default", "d": "1/2017"}, {"body": "also like chime suggestion single consolewarn called dev mode obviously situations called node ca nt alert pop dom dialog unfortunately really like able detect set also compiled anyone know way", "d": "1/2017"}, {"body": "thanks thread sebmarkbage acknowledge difficulties deploying fact also appreciative current warnings appears developers may check console output deployed sites often could good first step however far find similar heuristics notify users maybe even aggressively pop dom dialog grateful improvements heuristics used notify users aggressive dom dialog would go long way helping would ensure site continued working endusers provides active hint lowhanging perf fruit developers pick alternative find way fix buildtool env level mentioned original post would avoid dominjection necessary", "d": "1/2017"}, {"body": "injecting messaging dom seems dangerous little assuming opens possibility end users getting unexpected confusing alerts seems unacceptable imo thelarkinn proposing tried standardize env configs required better facilitate detection messaging like feels like ideal space address build issue possible addressed build tools", "d": "1/2017"}, {"body": "anecdotal warnings console gone unseen ignored past hard numbers think consolebased warnings enough agree addyosmani dombased warning would go long way", "d": "1/2017"}, {"body": "surma maybe use better visibility nt see would acceptable scenario inject content application running production making huge assumption message would caught application pushed actual users message could potentially hurt ux major way", "d": "1/2017"}, {"body": "btw going add comprehensive error handling support fiber replace components failures thrown errors custom error views even default scenario likely going aggressive remove component tree errors really going want custom error ui users anyway might able trigger error warning", "d": "1/2017"}, {"body": "honestly think would changed anything said story anecdotal also saying showing dom dialog solution something personally comfortable though staying dev mode negative impact least users would know something wrong probably starts hitting help button something bottom line think frameworks need get developer face point love brainstorm see steps compromises framework authors willing take prevent people deploying dev mode future", "d": "1/2017"}, {"body": "react nt work unless provide environment regardless whether development prod way conscious choice made one way", "d": "1/2017"}, {"body": "message injected dom could disabled using global something big deal imo disable kind acknowledge know problem console message sometimes people log lot things warnings ignore easy see first console message past scroll", "d": "1/2017"}, {"body": "mandatory env inevitably boilerplates etc set env var start using afraid", "d": "1/2017"}, {"body": "honestly think console error warn consolelog would changed anything think problem developers checking console console overloaded warnings could partially addressed general approach regarding developer education also saying showing dom dialog solution something personally comfortable though staying dev mode negative impact least users would know something wrong probably starts hitting help button something understand saying nt think solution let alone solution good comfortable think better err side caution assume people nt want unexpected errors displayed users bottom line think frameworks need get developer face point love brainstorm see steps compromises framework authors willing take prevent people deploying dev mode future getting developer face important right place build step production message injected dom could disabled using global something big deal imo disable kind acknowledge know enabled default bad making configurable default behavior could result unexpected behavior end user anything disabled default defeats entire purpose since developers could fix initial problem aware problem console message sometimes people log lot things warnings ignore easy see first console message past scroll totally get console get crowded easy miss stuff crowded exact reasons arguing place provide developers feedback errors way user experience injected messages nt", "d": "1/2017"}, {"body": "makes sense understand reasonning well maybe make thing pop using console formatting would something least", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "problem almost nobody looks console production use font people wo nt notice however make show message default production breaking change would hard miss mean would happen first time would try deploy new users existing users reading release notes updating new major think doable long super explicit impossible miss message", "d": "1/2017"}, {"body": "problem almost nobody looks console production use font people wo nt notice comment chrome team experience concur folks notice console messages iteration workflow far smaller look warnings production sites fewer act however make show message default production breaking change would hard miss mean would happen first time would try deploy new users existing users reading release notes updating new major think doable long super explicit impossible miss message thanks open change like gaearon would take get agreement trying message default future release", "d": "1/2017"}, {"body": "agree console warnings nt solution amp pagevisible warning much better pagevisible warning could alert dev site dev mode link docs benefits ship without link disable message dunno hours disabling message important may interferingcovering something page since setting would stored localstorage warning still appear live server different origin yeah pretty horrible real users see message live sites feels like kind problem devs encouraged fix whereas seem happy live performance issues dev mode", "d": "1/2017"}, {"body": "first time saw warning insert dom one production would fairly upset warnings need happen ahead time", "d": "1/2017"}, {"body": "rtorr suggestion happens whenever site dev mode seen ahead time unless missing something", "d": "1/2017"}, {"body": "jakearchibald sorry confusion reply directed want point thread use insert dom solution careful make sure users know push thing good idea see dev forgetting setting something management freaks possibility worth consequences dev mode production", "d": "1/2017"}, {"body": "dom based warning constantly disable okay must possible disable forever maybe never show localhost thing hit would possible kind flag browser enable activate devtools maybe big overlay developer yesno page detect show warning developers worded correctly might help selfxxs attacks well", "d": "1/2017"}, {"body": "dom based warning constantly disable okay must possible disable forever sites launching devmode also okay maybe message needs dismissed per day longer period likely end live disabled forever right back started", "d": "1/2017"}, {"body": "also nt think unintended dom node production ok think either way always edge case problem happens time maybe delivery dev mode wrong although ideal perfect world find prod mode important willing modify someone application maybe default dev mode opt", "d": "1/2017"}, {"body": "rtorr also nt think unintended dom node production ok saying wrong would like hear reasons", "d": "1/2017"}, {"body": "maybe adding setting define prod domain prod domain set always get warning dev mode request set domain url set get warning url matches prod domain could even bind service want notify devs", "d": "1/2017"}, {"body": "glad constructive discussion two solutions see solving problem webpack could force specifying nodeenv react could use easily avoid folks shipping dev prod would breaking change webpack talking sean feasible something like could webpack keeping react webpack stack beginner perf friendly something know camps care second dom injection idea something react could jake mentioned balance ux allowing message shown day dismissed one line change fix issue redeploy completely empathise wanting management freak get react sites shipping far faster experience fb worked prod something might give anyone better ideas please suggest", "d": "1/2017"}, {"body": "jakearchibald saying wrong would like hear reasons back comment unless able let developers know ahead time seems actual problem solve find kind extreme devalue someones product displaying warning developers production page lot cases could potentially hurt product performance dev mode matter someone going ship whatever default production make production default improve dev mode point big impact", "d": "1/2017"}, {"body": "rtorr", "d": "1/2017"}, {"body": "jakearchibald yeah see sides problems faith people thread come something good even proposing yall great fyi maybe extreme answer", "d": "1/2017"}, {"body": "could insert dom node warning user running react dev tools normal users nt experience", "d": "1/2017"}, {"body": "jakearchibald sites launching devmode also okay maybe message needs dismissed per day longer period likely end live disabled forever right back started site launched someone took decision ready bad catastrophe however possibly nt know exact numbers hundreds thousands devs dismiss sitedestroying dom warning must treated idea interacts rest site site usable warning visible warning five even one time per day catastrophe devs correctly set buildchain custom createreactapp use warning need able get rid dangamble beleave devs using react dev tools urgent target warning though", "d": "1/2017"}, {"body": "pajn potentially nt think download chrome extension automatically makes conscious prod dev switch", "d": "1/2017"}, {"body": "dangamble course people develops whole app without think indicates nt use dev tools much therefore less likely see current warning minified code", "d": "1/2017"}, {"body": "nt usually add long discussion feel like point already brought agree want emphasize point react touching dom warning using dev version would big mistake far know precedent framework imagine tutorials playgrounds little side projects use dev mode teach react every single little test site throw together explore something fun react try isolate test case react warning every single one sites manually disable would incredibly mad would feel like overbearing parent actively discourages use react whenever try something new slaps wrist even every hours thank constant nagging like certainly going discourage users developing react honestly think would push people away adopt frameworks maybe chrome devs want mention fact yes slip production somehow already hard enough convince certain teams adopt react ammo thing love react nt anything call puts stuff dom told good isolated functional library also need detect people shipping unminified bundle nt caching nt configured nginx optimally nt use unnecessarily rendering everything nt need several reasons bad performance blame solely react dev mode wrong deploy site totally expected understand deploy optimized site saying nt things core reason issue benchmark authors due diligence nt pay need find another way call", "d": "1/2017"}, {"body": "meant followup think right solution put kinds restrictions tools making sure webpack whatever tool use build site production force checks kind restrictions want place build process", "d": "1/2017"}, {"body": "regard webpack forcing nodeenv setting maybe issue repo already would nt make harder use libraries nt rely env settings idea would detect nodeenv use force code uses", "d": "1/2017"}, {"body": "let get hung hours thing could period time long works additionally local storage events means would need dismissed per origin multiple demos one page dismissing one would dismiss others warning slip live loud enough warrant quick fix one benefits users worried react looks public really want avoid unnecessary slowdown like sure would nt detect bad caching headers etc detecting dev mode also slippery slope arguments nt helpful nt think moving problem build tools useful problem devs use different build tool fail put production mode dev mode frameworks already produce console warnings clearly nt working nt benchmarks real websites running slow real users switch nt switched", "d": "1/2017"}, {"body": "jakearchibald thanks rational response emotionallycharged one think valid point many reasons site might slow react like see way suggest performance improvements better crude check dev mode inbrowser warning tooling analyze react app provide serious suggestions performance everything like dev mode many rerenderings would lot useful generic tool like hooked pipeline webpack browserify etc main thing wanted say though days use react dev mode across different places like jsbin tutorials even throwing together small test site opening file protocol forced inbrowser warning hostile sort flexible development web excels seeing warnings everywhere learning react across domains web", "d": "1/2017"}, {"body": "warning slip live loud enough warrant quick fix one benefits users worried react looks public really want avoid unnecessary slowdown like even allowing possibility developerspecific warning displayed end users seems unacceptable slow site one thing message like could undermine user trust especially securityfocused sites would happy banking site displaying cryptic errors sudden would google ok users suddenly getting warning even moment additionally local storage events means would need dismissed per origin multiple demos one page dismissing one would dismiss others ca nt rely dedupe guarantee local persistent data cleared interval edit also displaying error every made far difficult reproduce debug deterministically reproducible", "d": "1/2017"}, {"body": "cases need solved prevent falsy benchmarks performance tests easily solved big big console message prevent shipping dev production sites people nt open devtools prod arguments touching dom convincing big flashy obvious console warning chances shipping production people use dev version see really obvious console message maybe code already shipped production another project use next react version impossible miss console message maybe remember site shipped production check dev enabled console message would educationnal like anyone react development knows something really important dev see everytime use react development", "d": "1/2017"}, {"body": "hesitant people generally nt like warnings ca nt get rid see considering alternatives might acceptable solution", "d": "1/2017"}, {"body": "curious would localstorage usage invoke eu cookie law site nt otherwise covered informative warnings development good idea nt libraries well one reason problems like others wanted also pop similar uis close seems would ideal something central handle perhaps chrome could development mode libraries could tell host development mode chrome could add badge pop indicate", "d": "1/2017"}, {"body": "makes think react devtools extension could leveraged display notification something obvious opening page using react dev mode maybe", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "sebmarkbage informative warnings development good idea nt libraries guess someone needs first angular similar problem stuff like launching dev mode react starts catching stuff frameworks nt pushing make similar changes", "d": "1/2017"}, {"body": "pushing make similar changes jakearchibald suggesting framework provide warning nt think setting standard frameworkslibraries providing development warnings production great idea nt trying standardize platform mentioned sebmarkbage perhaps chrome could development mode libraries could tell host development mode chrome could add badge pop indicate", "d": "1/2017"}, {"body": "think great idea precedent safari separate mode must enable access devtools chrome could also safely add indicator dev mode api trigger indicator would visible developers would nt disrupt user experience", "d": "1/2017"}, {"body": "nt waiting browser vendors implement thing going take time", "d": "1/2017"}, {"body": "jide yes important address problem correctly quickly also implemented single browser considering standardization efforts necessary", "d": "1/2017"}, {"body": "aweary suggesting framework provide warning given framework provides dev mode mode may different frameworks seems entirely fair framework implement warning similarly unique way browsers gone lengths avoid exposing devtools page making devtools barrier entry going miss lot users dom warning would nt miss dom warning seems simpler fewer platform dependencies reach devs simpler amp effective sounds like win", "d": "1/2017"}, {"body": "gaearon chrome devtools side brainstorming live violations api web platform amp framework authors could use signal important warnings would presented somewhere like upcoming audits panel refresh sounds similar ask could used trigger warning dev mode detection particular issue may something little louder originally planning violations panel similar console log messages requires know panel going provide insight perhaps additional ux room something displays visible page overlay lower page frameworks could standardize messaging looping paulirish thoughts holiday weekend fwiw guess api wo nt ready another months available canary initially weeks later might make way stable dom warning seems simpler effective agreement jake one let keep chatting devtools solution also like figure react might open fallback case api nt end fitting needs timeline wise", "d": "1/2017"}, {"body": "given framework provides dev mode mode may different frameworks seems entirely fair framework implement warning similarly unique way jakearchibald realize setting standard means pages utilizing multiple frameworks libraries followed suite could result arbitrary amount nondeterministically rendered cryptic warnings displayed end users browsers gone lengths avoid exposing devtools page sure reason least partially developerspecific messaging exposed end users dom warning seems simpler effective nobody arguing simplicity effectiveness solution would work expense compromising user experience speed nt thing negatively affect users", "d": "1/2017"}, {"body": "fwiw guess api wo nt ready another months available canary initially weeks later might make way stable addyosmani better solution nt see would issue changes react would major release think tbd far release timing goes anyways solution decided upon potentially affect future development matter weeks vs months context acceptable imo", "d": "1/2017"}, {"body": "understand developers feel invaded framework injects something dom put feel like banner bottom page says site devmode would great solution big impact user experience like understand lot people think opposite aweary securityfocused site ever launches devmode trusted fix issue devmode could include kinds securityrelated shortcuts like disabled cors checks exposed template source code etc site securityfocused must happen realize devmode specific meaning react trying assume nondeveloper perspective", "d": "1/2017"}, {"body": "aweary realize setting standard means pages utilizing multiple frameworks could result arbitrary amount nondeterministically rendered cryptic warnings displayed end users absolutely realise page multiple frameworks dev mode severely damaging user experience good reason seems rather goes unnoticed unfixed rather bad nondevelopers visible messages targeted developers developer fixes promptly creating much better user experience speed nt thing negatively affect users nt see anyone claiming otherwise pretty sad kind reaction", "d": "1/2017"}, {"body": "seems rather goes unnoticed unfixed jakearchibald kind strange conclusion nt think spending free time talking nt want fixed nt agree solution nt mean resigned leaving unresolved really unfair rather bad nondevelopers visible messages targeted developers developer fixes promptly creating much better user experience think fundamentally unacceptable explicitly punishing users first securityfocused site ever launches devmode trusted fix issue surma dev mode inherently insecure regardless stepping line assume ok communicate users", "d": "1/2017"}, {"body": "nt think solution requires opening enabling dev tools sufficient get noticed needs visible qa management possibly end users developers used seeing similar problematic ssl configurations highlighted nt need much enough noticable someone ask get fixed injecting dom problematic many reasons bit feasible react since dom library dom entry points harder libraries dom specific might run worker one thing might able change favicon long provide way override explicitly many sites already separate favicons development mode need figure default experience handling errors react may able keep dom place current default implementation master deletes react content tree error thrown also invasive way detect development mode could trigger error mode really need solid way opt development mode permanently", "d": "1/2017"}, {"body": "similar problematic ssl configurations highlighted exactly kind thing think would perfect users already used browsers providing security information sites visit performance information nt huge jump plus would consistent frameworkslibraries report potential performance issues would directly interfere user workflow", "d": "1/2017"}, {"body": "like favicon idea noticeable works without devtools extension noticeable everyone harm users animated draw attention annoying enough make devs want disappear", "d": "1/2017"}, {"body": "making dev mode optin err good ux side bad dx easier notice imho issues like users win ca nt choose devs sure frameworks already like relay recall correctly proposals implement enable development mode explicitly set enable development mode global export debug tools module enabled userland first seems best two may hardcoded without guard statement thus shipped production anyway", "d": "1/2017"}, {"body": "mattecapu see second comment regarding similar way enforce developers start running dev mode nt matter default really bad fall behind", "d": "1/2017"}, {"body": "lot comment thoughts like weigh specifically question disable dev warning huge fan button disables dom warning set amount time one particular browser jlongster points pain devs happens frequently importantly introduces browserspecific variability behavior could easily lead works fine machine irreproducibility bugs prefer parameter sent render lists domains considered dev boxes default value would look something like current domain list dev warning never shows otherwise regime using dev build local machine using developer warning ever developer action needed using dev build dev machine using another host name get dom warning add domain name list passed thereafter never get dom warning using dev build prod machine get dom warning switch react prod version one thing worries solution might lead developers leave list dev server domains code code may make production companies consider dev server domains secret problem thoughts", "d": "1/2017"}, {"body": "aickin problem approach requires users aware configuration turn problem solving issue people nt aware devprod distinction first place edit nevermind see still dom warning development", "d": "1/2017"}, {"body": "server side environments fix showing special error page includes debug details also tells serve production since plan make react fail fast unmount views unless provide custom error boundary might well add default red box error boundary development acts educational page first time user bug production see special verbose error message could opportunity educate dev build", "d": "1/2017"}, {"body": "feel like banner bottom page says site devmode would great solution big impact user experience like understand lot people think opposite users dislikes web apps know web app previously common mentality web shows screen done matter bad behaved users learned web bad however perfectly possible create great ux web must dom someone injects random banners arbitrary places wrong element may start scroll may cause whole screen repaint scroll may interfere example drag gestures something else point long banner develop ca nt know experience banner gone framework solution really like favicon idea hinder development look strange users possibly destroy ux get noticed however really works single library framework time work libraries run workers real solution good way browser support multiple frameworks libraries accessed contexts another solution supports multiple frameworks libs clear require permission request show browser notification", "d": "1/2017"}, {"body": "idea update getting started docs react homepage push create react app heavily stress importance npm build docs nt need dom warning need awareness", "d": "1/2017"}, {"body": "think ropilz touched earlier thread could even bind service want notify devs comment may gone unnoticed acknowledged understand fundamental problem solved somehow alert developers production endusers experience site running dev mode ca nt rely devs seeing messages even dom warnings matter production unless devs actively using production site relying endusers qasupport teams etc report warnings back developer valid ux arguments showing end users dom visible warning intended developer audiences something analogous csp frameworks send dev mode warnings rather showing warning insitu site would visible endusers obviously number things considered reporting would ideally default would default would expect framework host free service similar may possible large companysponsored frameworks like react amp angular certainly impractical smaller opensource frameworks like preact vue etc warning reported site ownerdeveloper notified perhaps good way nondevs get involved project volunteering monitor reports help track downnotify maintainer fully admit suggestion thoughtbubble nt considered practical would would actually work wanted raise seems challenge reporting production issues already partially solved csphpkp reporting perhaps could explore something similar", "d": "1/2017"}, {"body": "important take step back realize react framework must modify dom present something visually reminder developers way works well box unless understand develop something work environments without hindering developers losing user trust happen pop production experience indication happen quite frequently many wo nt able deploy quick fix turn modify favicon favicon annoyingly cached used bookmarks saved web app icons mobile devices others specified etc runs risk accidentally purpose production deployment dev mode erasing brand logo browser notifications looked likely looked user popping notification going request browser permissions pop strange things users understand assumption would mostly seen developers experience exactly inverse possibly trust ruining users react job babysit developers propose either make development mode opt developers realize ca nt debug something look turn needs documented everywhere react job tell turn back problem leave simple consolelog message must disableable let developers find handle nt oh well ca nt reach every organization make things correctly scalable", "d": "1/2017"}, {"body": "disagree touching dom display warning looks easy simple react dom library imagine libraries display warning dom total mess many libraries developers use probably dev mode think setting already common standard bundling modules browser need improve awareness agree react docs nt prominently show difference dev production build open docs go advanced guides read difference dev production build title optimizing performance something beginners definitely wo nt take look use react heard fast think docs could improved another docs titled using react production similar quick start section beginners nt usually read advanced guides open links quick start title clear enough looks important know start learning react nt read getting started guide read pages quick start section another approach could take showing warning console react used dev mode link fix point docs opening console production developers unusual local env developing certainly open console way developing locally aware need something publishing production", "d": "1/2017"}, {"body": "launched despite console warnings exactly kind thing aim prevent site angular applies react", "d": "1/2017"}, {"body": "issue codegov anyone wants reach send pr", "d": "1/2017"}, {"body": "never used angular makes beginner case initial reaction see warning try calling nt work think console message angular case could improved instead relying magic point docs opening angular docs nt see anything production build think problem angular react use dev mode nt tell people front docs disable improving docs could go long way educating developers showing user warning developers make mistakes injecting random dom element intrusive love browsers handle https problem browser dedicated ui show site insecure nt one performance related status given rising concerns web performance general nt see browser vendor nt come ways tell user site visiting sucks", "d": "1/2017"}, {"body": "addressed tooling level possibly webpack babel notify developers benefits setting nodeenv", "d": "1/2017"}, {"body": "pveyes agreed made point angular team matthewp much older issue angular team reached directly given fix seems little desire apply question would dom warning made fix urgent prevented launching dev mode begin", "d": "1/2017"}, {"body": "question would dom warning made fix urgent prevented launching dev mode begin likely would see warning development google disable disable deployed dev mode without realizing future forget development want look like production ca nt random chunk dom inserted ca nt qa staging system seeing either would nt indicative production end bunch junk code disabling thing screws site ux like original engineer disabled development would necessarily remember either may even moved went production sure deployment process works codegov anything like experienced government contractor accidental development mode deployment production would either force full rollback entire deployment take months get approval bundle everything ui changes server software updates likely next day get meetings followup paperwork regarding happened scheduling new deployment window get asked db scripts services whatever dev mode single warning ui seen happen minor things sometimes get exceptions ymmv would get noticed users would get corrected since likely impacting function would get updated next deployment window users get see weeks months least experience point even dom intrusion noticed immediately deployment nt know infrastructure process like may something fix immediately even though able", "d": "1/2017"}, {"body": "warning messages noticeable yellow box gets merged could also add message yellow box call react development mode warnings", "d": "1/2017"}, {"body": "opening angular docs nt see anything production build think problem angular react use dev mode nt tell people front docs disable improving docs could go long way educating developers right installation page optimizing performance nt think fair say docs upfront", "d": "1/2017"}, {"body": "open docs go advanced guides read difference dev production build title optimizing performance something beginners definitely wo nt take look use react heard fast think docs could improved another docs titled using react production similar quick start section right first page installation", "d": "1/2017"}, {"body": "right sorry bad assumed production build different section nt look search relevant title sidebar instead found optimizing performance page known better", "d": "1/2017"}, {"body": "really beginner react open docs verify assumption react docs upfront prod vs dev nt open installation docs", "d": "1/2017"}, {"body": "worries visible enough open suggestions better placement example could make dedicated page", "d": "1/2017"}, {"body": "let forget issue important issue solve important issue highlight also convinced sufficient even highlighted front page people see browse forget think know would nt pivot docs thing real way address detecting notifying krissiegel favicon getting cached good point wonder switch second two flip back briefly every seconds way caching bookmarking issue unlikely time time overridden icon", "d": "1/2017"}, {"body": "thought js manipulations favicon nt get cached maybe wrong", "d": "1/2017"}, {"body": "argue right place hooks chrome firefox rather webpack browserify rollup building intended production bundle react without enable production mode build error think reason nt agreement present run time reflective problem handled run time", "d": "1/2017"}, {"body": "taion agree think definitely belongs build tool dom think build tools place make assumption node env set production production code may required projects think good assumption ran terminal env set production get red warning terminal along default output currently get warning webpack edit added clarification", "d": "1/2017"}, {"body": "set nodeenv really", "d": "1/2017"}, {"body": "console warnings nt working sure build warnings", "d": "1/2017"}, {"body": "build either configure things else fail misconfigured production least react build time flag", "d": "1/2017"}, {"body": "jakearchibald sure still ignored least warning would shown build instead seen warning hidden away browser console may never open production importantly gives less experience clue make code production ready", "d": "1/2017"}, {"body": "many devs update libraries common update webpack generally tooling lot people make assumption works may pain update webpack co", "d": "1/2017"}, {"body": "building intended production bundle react without enable production mode build error using prepackaged version react cdn also supported configuration build step workflow therefore solution issue focuses build would ignore cdn use case honestly sure feel see arguments dev warnings react cdn usage taion someone supports buildonly solution think important use case cover folks think", "d": "1/2017"}, {"body": "think documentation pretty clear use bundles production maybe could use bold bigger font size something like someone using unminified react bundle production website problems anyway", "d": "1/2017"}, {"body": "think documentation pretty clear use minjs bundles production agreed page also pretty clear configure build tool production include react npm package think whole point issue try create pit success folks nt carefully read page documentation sounds like may disagree though think using dev build cdn important case prevent aggressive dev warning fair summary position missing nuances", "d": "1/2017"}, {"body": "think cdndev configuration obviously wrong requires user use unminified build react harder fail manner burden knowledge required use minified build lower configuration think things productionready run minification webpack browserify actually nt nt set ca nt get via cdn bundles", "d": "1/2017"}, {"body": "think tab enough tells", "d": "1/2017"}, {"body": "think worth noting precedent framework injecting dom element page dev mode although far tell nt think default following discussion seems general aim achieve perfect solution satisfies constraints reliably stops everyone running dev mode nt op stated would need tradeoff potential experiences developers users think much case attempt restate problem tad nonzero number react sites make production without development mode disabled would like reduce number nt want annoy react developers nt want put newcomers react nt want endusers sites built react see cyptic developer warnings nt want break sites due presence foreign dom elements given think decent first step would react dev mode announce dev mode via instructions make sure disabled production deployment sure wo nt catch everyone decent start reduce number people inadvertently shipping production nt close doors future improvements", "d": "1/2017"}, {"body": "given think decent first step would react dev mode announce dev mode via consolewarn consoleinfo instructions make sure disabled production deployment wrong development mode though developing heuristics could use also given nobody reads console production wonder could throw inside timeout gets logged use crash reporting solutions", "d": "1/2017"}, {"body": "wrong development mode though developing heuristics could use think similar current react devtools notice informational message reminds dev mode dev mode disabled production sites theory make developers aware distinction action needs taken prepare production use like say almost noone going see console warning actual production point little bit late", "d": "1/2017"}, {"body": "sorry sound like stuck record console warnings nt appear work eg", "d": "1/2017"}, {"body": "sorry sound like stuck record console warnings nt appear work eg single counterinstance shows infallible nt think approach console warning able increase awareness reduce number people mistakenly run dev mode nt seems like step right direction perfect enemy good", "d": "1/2017"}, {"body": "jakearchibald yes codegov build tool set hooks would prevented problem observing least context react uses buildtime hooks using webpack saying webpack emit build warning saying right fix either webpack sets webpack fails build default try make production build without appropriate production config", "d": "1/2017"}, {"body": "wanted quickly respond earlier point addyosmani devtools violations prototyping showing stronger indications certain errors chrome devtools work still quite early tend agree jakearchibald showing warning even scarier nt good enough solution defaulting react production mode turning development mode hostname developers get correct behavior outofthebox always way manually force development mode really need", "d": "1/2017"}, {"body": "seems less ideal still hitting branch might fairly complicated conditional since need fail node time btw production mode also enables minification default settings webpack sets users seems quite sensible prevent problem almost everyone using webpack insistence handling run time", "d": "1/2017"}, {"body": "btw p production mode also enables minification default settings webpack sets nodeenv users yep aware thelarkinn webpack core could confirm sure understanding widely used webpack community atm underlying issue also solution optin similar current status quo consolelog warnings unlikely see real change react users want give folks better change shipping fast thing worth mentioning passing lack able easily detect dev prod environments webpack p insufficient also caused us pain saying right fix either webpack sets processnodeenv webpack fails build default try make production build without appropriate production config us pursuing would breaking change webpack tell personally feel like runtime solution involves clear overlay message displayed using intelligent heuristics localhost devtools open etc would cover us adequately said keep circling back webpack processnodeenv item curious sokra thelarkinn opinions one", "d": "1/2017"}, {"body": "understanding differs believe de facto way nonexpert users webpack set production builds even prominent packages use generate production builds quite uncommon directly configure uglify plugin webpack without people would using unminified builds case bigger problems", "d": "1/2017"}, {"body": "personally feel like runtime solution involves clear overlay message displayed using intelligent heuristics localhost devtools open etc would cover us adequately feel like shot multiple times unacceptable framework inject things dom without actually appreciating scenario would happen totally cope permanent message unexpected things dom constantly development unacceptable suggesting though message gets displayed devmode gets deployed production enter heuristics arbitrary number checks console messages built tooling ci browser extensions prevent happening desperate last resort failsafe think visible banner screen good appropriate solution", "d": "1/2017"}, {"body": "displayed devmode gets deployed production enter heuristics developer never see message deploy perhaps accidentally dev mode production suddenly seeing new html displayed application users see sounds like punishment nt understand dev mode already deploy using theoretical new version react message going get surprise users web application time also get see fail see helps anyone serve embarrass developer company sure maybe get fix cost high opinion lacking bit empathy desperate last resort failsafe think visible banner screen good appropriate solution problem solution far idealistic developing framework must focus reality companies may greatest deployment policies even best qa yes someone deploys dev mode production able see change quickly unfortunately especially outside technology industry simply possible easy majority people commenting likely companies deployment processes could cope fine scenario google facebook playstation etc technology companies handle fine nt representative majority users use react right actually statistics regarding usage react would handy yes yes companies government change deployment processes policies etc etc reality companies crap deployment processes crap nonexistent qa let take two scenarios personally experienced first working government depending branch department likely single deployment every months deployments roll much stuff possible piece entire deployment fails everything may get rolled back using software called owf unfamiliar like isocial displays multiple web applications single web application using iframes gross know stay manual configuration step deployment several applications failed caused errors display iframes instead intended application since developers typically access system deployed took many hours found issues point get boss call someone else boss call boss tell nt affect anything else would nt roll back entire deployment tons paperwork documentation fill could get anyone redo configuration several days later meanwhile application sat unable function entire period time second worked finance deployment go inadvertently included developer name place actual item layout website believe testing something anyway noticed right away order fix get emergency change control took much later day customers see stupid banner almost full hours fixed point needs great care taken injecting arbitrary elements dom developer put especially talking displaying scenarios first time someone sees going figure quickly disable nt need bothered", "d": "1/2017"}, {"body": "krissiegel nt understand dev mode already deploy using theoretical new version react message going get surprise users web application time also get see curious thoughts approach different message displayed devtools open ie something would low chance seen production users developers effectively expansion current consolelog strategy react already employs today", "d": "1/2017"}, {"body": "curious thoughts approach different message displayed devtools open ie something would low chance seen production users developers effectively expansion current consolelog strategy react already employs today dev tools open probably seeing consolelog messages dom changes seem like unnecessary complexity manage plus redundant could always make react console messages larger fancier maybe ascii react logo something catch someone attention happen go ultimately though think someone would run ask stackoverflow disable warning someone post code showing people simply disable run build tools numerous many folks talked past found confusing difficult babel release fun time going run lot people simply never use correctly least experience \u30c4", "d": "1/2017"}, {"body": "whew finally caught bottom thread okay brainstorming little bit webpack could force specifying nodeenv react could use easily avoid folks shipping dev prod would breaking change webpack talking sean feasible something like could webpack keeping react webpack stack beginner perf friendly something know camps care felt like favorite far sold yet could enforce env passed whenever anyone runs webpack helpful error message states must provide env variable run webpack however provides significant bounce point users everyone writing prod dev env even know env raise issue webpackwebpack get feedback gut feeling everyone want whether agree consider pushback solution would create standalone plugin could hook compiler lifecycle check code stripped env provided emit friendly warning error choice however imagine response users never know etc thus cra thus issue right could create new resolver pattern check react fw needs packagejson something like would automatically apply users compiler configuration without needing know care really brainstorming", "d": "1/2017"}, {"body": "thelarkinn think current behavior webpack sufficient failure case someone sets forgets seems like far less likely case", "d": "1/2017"}, {"body": "taion yesno applies production treatments code however make assumptions andnor knowledge set brings upon need people use think closest reasonable area guess imply user running code production env would one area would want make sure community team okay", "d": "1/2017"}, {"body": "thelarkinn believe changed", "d": "1/2017"}, {"body": "ah sorry right mistaken however used frequently people want fine grained control optimize like addyosmani mentioned", "d": "1/2017"}, {"body": "really common getting started webpack clearly seemed like way go like referenced even libraries plenty reason apply tweaks still use", "d": "1/2017"}, {"body": "could create new resolver pattern check react fw needs packagejson something like webpack plugin reactenviornmentplugin would automatically apply users compiler configuration without needing know care thelarkinn reading correctly trigger resolver pattern app packagejson would need manually specify right misunderstanding proposal could imagine resolution magic webpack detects project using react right environment switching sounds like tight coupling frameworkspecific optimisation bundler might desirable", "d": "1/2017"}, {"body": "less would detect react would detect js modules description fields include webpack field plugin right tightly coupled really favorite idea either", "d": "1/2017"}, {"body": "nt think really gives guarantees unless webpack concept production mode figure configure react seems redundant given discussed already right thing users generally reach making minified production build webpack anyway", "d": "1/2017"}, {"body": "talked bit think reasonable solution long considered enabling warning box react warnings development see demo pr shows warnings common development always fixed presumably anyone spent five minutes developing app see dialog aware exists change harder unaware development mode likely search remove warning dialog learn building production likely get warnings deployed point users see think case people blame react per se show box development mode supposed way using similar warning box development facebook long time corresponds intend react used", "d": "1/2017"}, {"body": "really happy see proposal gaearon everything dreamed side maybe worth considering link directly box require developers google get rid", "d": "1/2017"}, {"body": "yea good point add something", "d": "1/2017"}, {"body": "gaearon find solution highly obnoxious would never want warnings invade dom even development serves zero purpose common developer would likely disabled entirely developer tools display warnings reason nt need invented also find troubling dom solutions keep cropping zero rebuttals prior arguments points ignored fine nt repository fair enough disheartening see argument come people post people seem points never argument come right back rinse repeat", "d": "1/2017"}, {"body": "agree true warnings react warnings specifically point bugs code suggestions dialog easy dismiss individual warnings easy snooze case nt care need fixed comparison dialog looks facebook codebase thousands engineers problem productive thanks think reasonable default clear open source version less shouting suggestions style tweaks please feel free comment", "d": "1/2017"}, {"body": "adding onto dan said building top hook recentlyadded error logger flow currently trying couple styles toast notifications little less intrusive post screenshots andor plnkr soon feedback", "d": "1/2017"}, {"body": "would warnings include minified dev code warning solve lot things quite neatly", "d": "1/2017"}, {"body": "nt see could nt also used purpose", "d": "1/2017"}, {"body": "gaearon agree true warnings react warnings specifically point bugs code suggestions errors exceptions imo exceptions force things corrected dismissible warning thousands engineers problem productive thanks think reasonable default mentioned prior point would guess engineers likely better good people use open source version find opposite reasonable default reason development tools warnings reinventing nt make sense get disabled never seen looks like react trying much imo anyway repeating arguments already said twice going go ahead feel free opinion good business get leave short anecdote time wanted punch toast government contracting common library front ends use would take errors console display toast pop get deployed production multiple times multiple teams many developers saw asked permanently disabled see", "d": "1/2017"}, {"body": "long considered enabling warning box react warnings development see demo pr shows warnings common development always fixed presumably anyone spent five minutes developing app see dialog aware exists really like gaearon heartening hear support highlighting need switch prod deployments new warning box nice visual adding onto dan said building top hook recentlyadded error logger flow currently trying couple styles toast notifications little less intrusive post screenshots andor plnkr soon feedback bvaughn looking forward seeing iterations folks feel warning box approach may intrusive libraries eg vuejs already display dom overlays deviteration workflow encourage bugfixing slowpaths experience minor inconvenience messages obvious might see console feel dan right least place emphasis dev mode something deploy prod hopefully lead sites shipping faster mode end users change harder unaware development mode likely search remove warning dialog learn building production likely get warnings deployed point users see think case people blame react per se show box development mode supposed", "d": "1/2017"}, {"body": "errors exceptions imo exceptions force things corrected dismissible warning fixed might urgent matters hand example often prototypemock uis write quick usually subpar code react warn want fix warnings nt really care know wont throw away code next hour least forcing people fix instantly drastically slow experimental development", "d": "1/2017"}, {"body": "folks feel warning box approach may intrusive libraries eg vuejs already display dom overlays deviteration workflow encourage bugfixing slowpaths screen shot sure vue looks lot like webpack build errors displayed error overlay webpackhotmiddleware case subtly different devtime build tooling adding overlay rather generalpurpose frontend framework general favour warning overlay think contain explanatory text says amp disabled part turning dev mode behind expando bit long seems like good place get message across", "d": "1/2017"}, {"body": "dread updates like overlay minor bump suddenly literally warnings props passed dom nodes errors maybe nt think depreciation warnings belong intrusive space", "d": "1/2017"}, {"body": "errors maybe nt think depreciation warnings belong intrusive space nt know clearly communicated prior idea regarding yellowbox warnings show warnings deprecation rather certain warnings team deemed particularly important would highlighted way rest would presumably remain console least takeaway conversation tom feature week two ago", "d": "1/2017"}, {"body": "prop warning also mistake imo indicative normal mo like way control warning levels minor versions avoid", "d": "1/2017"}, {"body": "millykirkland thanks question try use issue tracker solely bugs feature requests might better served asking question discussionoriented platform discussreactjsorg", "d": "1/2017"}, {"body": "noted known limitation fiber really sure could help way see fix specific case use components use functions rows eg could flatten rendering result could stop using closing duplicate", "d": "1/2017"}, {"body": "gaearon could elaborate flattening stateless render result please case always need return actual html render rows", "d": "1/2017"}, {"body": "sure mean propose use functions return arrays rows flattening component renders", "d": "1/2017"}, {"body": "row state expandscollapses children rows would achieve stateless component thanks fri jan dan abramov notifications githubcom wrote sure mean propose use functions return arrays rows flattening component renders receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "could keep track state parent component like object", "d": "1/2017"}, {"body": "believe page specifically section answer question use inheritance normally would create generic component accepts functions props need behavior customizable specific component renders inherits generic component passes methods props eg hard say example bit vague give idea", "d": "1/2017"}, {"body": "stopped publishing zips get files unpkg unpkg cdn serves contents npm packages link docs new version comes replace number url download could link newest available release help", "d": "1/2017"}, {"body": "ok thanks", "d": "1/2017"}, {"body": "get chance create reproducing example like ask issue template filled right issue description current behavior bug please provide steps reproduce possible minimal demo problem via similar template able help provide code example fails threeline code snippet provided looks fine problem something else", "d": "1/2017"}, {"body": "sorry understand trying reproduce seeing app simple code sample like works best get something reproducing bug", "d": "1/2017"}, {"body": "taakn luck getting reproducible example", "d": "1/2017"}, {"body": "handler matter oninput onchange onkeydown ancestor input element considered controlled input considered controlled prop use presence event handlers think way render function saying component value becomes controlled described detail forms page react documentation developer control input instead ifyoudonotfollowthenewtermweinventyoucannottypeinsilent way indeed silent run code jsfiddle since decided provide put see warning console exact problem suggestions improve warning nt want put handler times inputs want component uncontrolled also documentation create hundred methods hundred inputs like write new function every time need pass different argument react javascript library assumes familiarity javascript idioms eg functions variables closures example single handler three inputs js class mycomponent extends reactcomponent constructor props super props thisstate name jane surname smith email jane fakeco handlechange name e thissetstate name etargetvalue renderinput name return render return thisrenderinput name thisrenderinput surname thisrenderinput email reactdomrender documentgetelementbyid container agree super obvious add example documentation attempt updated use example instead thanks raising", "d": "1/2017"}, {"body": "keep issue open documentation task", "d": "1/2017"}, {"body": "updated docs via", "d": "1/2017"}, {"body": "would like send pr support event", "d": "1/2017"}, {"body": "time right", "d": "1/2017"}, {"body": "maybe somebody else could keep open thanks", "d": "1/2017"}, {"body": "like take stab", "d": "1/2017"}, {"body": "sure please go ahead search older prs add events get sense looks", "d": "1/2017"}, {"body": "reference", "d": "1/2017"}, {"body": "trejoramiro still working would like grab issue", "d": "1/2017"}, {"body": "hey diegomura go ahead problem", "d": "1/2017"}, {"body": "nested jsx expression evaluated immediately get delayed components even use still try read null object fails commonly data available people use early returns example", "d": "1/2017"}, {"body": "think function arguments even function nt use argument evaluated calling function evaluation fails happens early programming languages lazy evaluate arguments needed javascript one", "d": "1/2017"}, {"body": "happening client still generate attribute comparing markup even problem due something else hard say without seeing minimal example reproducing", "d": "1/2017"}, {"body": "gaearon good know figured issue due dynamic route reactrouter leveraged upgrade tweaked browser side code according works thank clarification", "d": "1/2017"}, {"body": "hm sure makes sense actually", "d": "1/2017"}, {"body": "gon na close figure actually want", "d": "1/2017"}, {"body": "spicyj discussion nt supporting test renderer", "d": "1/2017"}, {"body": "good memory thanks", "d": "1/2017"}, {"body": "error message contains description problem might adding ref component created inside component method string refs work work inside classes discouraged anyway otherwise would expect ref set would read callback refs nt suffer problem use fine js import react react import reactdom reactdom import testutils reactaddonstestutils var jsdom require jsdom jsdom globaldocument jsdom hello world globalwindow documentdefaultview var div testutilsrenderintodocument something div hope helps", "d": "1/2017"}, {"body": "gaearon goal add ref component nt created component method example clickoutside component like one", "d": "1/2017"}, {"body": "use callback refs use case like component already nice thing callback refs nt care element created", "d": "1/2017"}, {"body": "fingers crossed", "d": "1/2017"}, {"body": "able get circleci passing copying circleyml scriptscircleci making tweaks also seemed linting errors according build fixed one concern adding devdependencies way could fix error seems somehow returning true nt able find module jestcli anyone knows happening would huge help", "d": "1/2017"}, {"body": "looks like got resolved right", "d": "1/2017"}, {"body": "yup", "d": "1/2017"}, {"body": "state want hydrate dehydrate sounds like part", "d": "1/2017"}, {"body": "actually state stores attached given child view hmr hits parent view rerenders child child decorator instantiates attaches stores necessary stores need sort key know instance attach attaching separate storekey pretty hacky causes really strange bugs ca nt really detect child views idea attached key singleton usually attached key", "d": "1/2017"}, {"body": "create reduced case js better understand trying", "d": "1/2017"}, {"body": "ok tried make halfway legible extracted simplified quite bit nt think compiles lmk makes sense js attachjs let previousstores export default fileid provided child gt module amp amp modulehot const stores modulehotdata previousstores moduleid stores fileid return class storeprovider extends component state stores childjs import attach attachjs class store constructor index thisindex index let child attach hello store stores gt storeshelloindex let parent gt map gt", "d": "1/2017"}, {"body": "sure see react fits", "d": "1/2017"}, {"body": "key globally unique right solve problem", "d": "1/2017"}, {"body": "jddxf want submit pr fixes", "d": "1/2017"}, {"body": "sure already done thissomething wrong giti ca nt fetch push", "d": "1/2017"}, {"body": "fixed also wonder whether issues sort opened since related functionalitymaybe pr would enough", "d": "1/2017"}, {"body": "fix send pr sure time please file issue somebody else could thanks jumping", "d": "1/2017"}, {"body": "got itthanks", "d": "1/2017"}, {"body": "value accessible via property already insecure far malicious access goes right whether value set node attribute node one accessed security concern case arises fact tracking software sending arbitrary dom markup network hypothetically could easily created unique selector based properties node instead attributes etc really matter whether one less safe insecure could contain sensitive user information specific case could mitigated user tracking software obscuring ignoring attribute using value attribute nt really great way create unique selector either especially react apps since updated every time controlled input updated workaround could use would use uncontrolled components since nt update attribute change tl dr program execute code client local data insecure matter level obfuscation implement important executing programs carefully consider kind local data send network securely", "d": "1/2017"}, {"body": "aweary thanks lot comment used example tracking software demonstration purposes sure something run environment code everything fully compromised question mostly fact markup changes get additional way retrieving input value wondering whether exploited way", "d": "1/2017"}, {"body": "implementation detail officially supported far know currently better way could also get toplevel ref use dom api get child could work around switching callback refs internally however nt plan change transitiongroup code anymore repository moving please file new feature requests bug reports thanks", "d": "1/2017"}, {"body": "sheile thanks report able verify behavior quick glance think bug child reconciler ids generate children consistent update since ids nt match reactchildreconciler ends mounting child old one gets queued unmounted familiar child reconciliation seems like unexpected behavior cc gaearon think might consequence returning different root element even type sheile get around inlining conditional render", "d": "1/2017"}, {"body": "could first issue ever reported nt think necessarily bug sure think happens looking second fiddle branch children end array two elements however branch children actually single child react optimizes case produce extra array jsx element single child toggle button switch array one element element react currently treats change type although sure right case easy work around rely matching holes different branches", "d": "1/2017"}, {"body": "unfortunate sideeffect reacts special logic exists counter effects jsx wrap child array gaearon linked ie react treats since inserting adjacent another element becomes nested special logic stops working effectively encountering case imho think putting anything adjacent nt nice avoided thus avoiding problem another note would interesting neat way jsx mark child react apply special logic always case thus entirely eliminating unintuitive magic behavior react nt think edit wonder would nt well map etc actually sidestep would highlight oddities special logic perhaps something highlight necessity inserting adjacent elements perhaps dev performance penalty high could emit warning encounter case although would require devmode jsx seems like nogo possible solution perhaps sideeffects equally bad mixing children like nt thought much", "d": "1/2017"}, {"body": "thank pointing related issues taking time explain understood problem workaround yesterday tried flatten children array problem resolved need additional attribute identify node different nest level like hmm problem handle please close issue longer need discussion", "d": "1/2017"}, {"body": "yankouskia react special cases meaning nt necessarily correspond dom event order make easier handle inputs example events usually occur text inputs people expect occur input value actually changed normalize see behavior documented said still unexpected behavior since radio input value nt changed already reported resolved released yet hoping get released soon thanks backport pr opened tl dr normalize input events general radio input behavior wrong already fixed working getting released", "d": "1/2017"}, {"body": "aweary thank", "d": "1/2017"}, {"body": "think right please submit pr", "d": "1/2017"}, {"body": "future reference feel free send prs small fixes like without creating issue", "d": "1/2017"}, {"body": "thanks suggestion issue already exists please feel free contribute discussion", "d": "1/2017"}, {"body": "assigning forget issue good place get feet wet react codebase intend work happy review pr", "d": "1/2017"}, {"body": "like work issue", "d": "1/2017"}, {"body": "please send pr ping", "d": "1/2017"}, {"body": "gaearon browsing codebaseoverviewmd noticed potential typo markdown line appears one many marks resulting rest file appearing code instead regular text code excerpts interspersed relevant happy fix well create separate issue submit pr bundle fix together work issue markdown would look like one less symbol", "d": "1/2017"}, {"body": "please create separate pr", "d": "1/2017"}, {"body": "unrelated generally recommend reading docs website", "d": "1/2017"}, {"body": "richiethomas working issue", "d": "1/2017"}, {"body": "ashiknesin yes gaearon like make sure right submitting pr example change requested one files change would reactelementvalidatorjs line looks like would add newlines start string returned getdeclarationerroraddendum function words change check render method nn check render method right submit pr fix later today", "d": "1/2017"}, {"body": "something like similar places need change", "d": "1/2017"}, {"body": "yep understood submit pr soon cheers", "d": "1/2017"}, {"body": "caught dynamicallygenerated warnings contain phrase check also found similar warnings different verbage finegrained search ok submit followup pr find anything", "d": "1/2017"}, {"body": "best put one pr think", "d": "1/2017"}, {"body": "ok understand spirit bugfix address dynamicallygenerated warnings large blocks text right warning dynamic content small easily parseable clearly shows file problematic need newline right", "d": "1/2017"}, {"body": "yes want fix easy miss add info end long message", "d": "1/2017"}, {"body": "gaearon requested ping say pr ready review cheers", "d": "1/2017"}, {"body": "means change reaches chrome stable quite react apps could randomly stop working users update browsers filed bug chromium browser crashes bugs react team position fix", "d": "1/2017"}, {"body": "also provide exact way reproduce nt crash canary", "d": "1/2017"}, {"body": "exception comes react tries access thinks defined nt able get example minute mobile simple react component produces object tag job filed bug chromium assumed tospec changed however reaches stable break plenty react apps sure anyone uses object tag possibly even facebook fallback video rendering maybe seems react nt really throwing arbitrary properties onto welldefined elements classes essentially htmlelement etc also chromium nt introducing breaking changes like guess", "d": "1/2017"}, {"body": "also remember exception saw came nonproduction related block trying access node caches also possible wo nt affect production builds dev ones hopefully edit get exception thrown instance debugid undefined impossible probably places assumed instance returned", "d": "1/2017"}, {"body": "seems react nt really throwing arbitrary properties onto welldefined elements classes essentially htmlelement etc afaik vast majority libraries operate dom work", "d": "1/2017"}, {"body": "quite true however nt make better beyond scope issue suppose react devs would rather chromium revert change still worth investigating end", "d": "1/2017"}, {"body": "would really help small repro consistently shows problem without react", "d": "1/2017"}, {"body": "ok got one file bug", "d": "1/2017"}, {"body": "filed since actionable side closing issue thanks reporting", "d": "1/2017"}, {"body": "stumbled upon chrome beta prompted update issue might find traffic affecting beta channel understand clearly chrome bug react issue per se said possible workarounds aside nt use chrome canary beta development avoid using tags", "d": "1/2017"}, {"body": "fwiw fix already merged chrome", "d": "1/2017"}, {"body": "noticed try chrome canary see issue fixed update findings edit yup works canary guess users move chrome stable canary beta channel updates", "d": "1/2017"}, {"body": "dibs gon na play around see fix issue", "d": "1/2017"}, {"body": "investigation shows already fixed commit although unfortunately released yet", "d": "1/2017"}, {"body": "andarist seems like commit might fix problem uncontrolled input issue happens well controlled inputs used updated demo code first post show", "d": "1/2017"}, {"body": "yeah right think nothing fixed side controlled inputs depends setting controlled values directly dom nodes check demo inspect see warning chrome seems already experienced similar issue reported fixed chromium bugtracker propose report one well fixed", "d": "1/2017"}, {"body": "cc nhunzaker worked related things", "d": "1/2017"}, {"body": "thanks investigation shows already fixed commit although unfortunately released yet yes gaearon could probably cherry pick pretty safely think andarist seems like commit might fix problem uncontrolled input issue happens well controlled inputs value onchange used ixrock yes maintaining pr controlled inputs propose report one well fixed andarist think filing issue chrome fantastic next step also encountered behavior safari report happy help clarify anything help issue submission", "d": "1/2017"}, {"body": "yes gaearon could probably cherry pick pretty safely think commit", "d": "1/2017"}, {"body": "argh forgot mention changelog sorry", "d": "1/2017"}, {"body": "updated changelog", "d": "1/2017"}, {"body": "anything else", "d": "1/2017"}, {"body": "good close behavior appears fixed", "d": "1/2017"}, {"body": "thanks filing issue want dig happens", "d": "1/2017"}, {"body": "sure thing", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "looked bit looks like updating jest fixes issue related issue several others reported gaearon fix", "d": "1/2017"}, {"body": "updated example", "d": "1/2017"}, {"body": "would also possible use like provide special member props however would problematic could clash existing user code", "d": "1/2017"}, {"body": "thanks taking time create example afraid indeed unusual usage something would encourage add sugar support would suggest stick traditional patterns using react abstractions like often end hard follow unnecessarily complicated especially involve inheritance reference react way implementing would look closer js function list props const depth items props depth return itemslength items return itemsmap item index gt function item props const depth value props depth return value return value function node props const item depth props arrayisarray item return return var root b reactdomrender documentgetelementbyid container see reveals unnecessary dom wrappers obvious example although maybe clear want abstract using objects data calling however would encourage mix inheritancelike techniques react components hope helps somewhat", "d": "1/2017"}, {"body": "thanks letting us know smile duplicate though closing one", "d": "1/2017"}, {"body": "lomocc reason behavior different childrenlength gt means reactcreateelement function called multiple children arguments one array containing children case key prop required equivalent jsx vs jsx", "d": "1/2017"}, {"body": "maybe nt make clear try demo please many times user interface comes array dataprovider jsbin use pure jsx html html error key prop required children reactcreateelement children difference", "d": "1/2017"}, {"body": "lomocc difference calling calling calling could type would work expected", "d": "1/2017"}, {"body": "thanks answer also think problem api js error reporting child array iterator unique key prop reactcreateelement div null children children nt way", "d": "1/2017"}, {"body": "lomocc way specifying children array done second way never pass children prop like api specifically states provide children third argument within props specify children props get validated either error gets thrown like noticed", "d": "1/2017"}, {"body": "yes intentionally doubly linked structure internal wraps userdefined composite components holds reference instance userdefined component defined mounted used store reference internal wrapper public instance look reactinstancemap information doc comments maintains mapping public facing stateful instance key internal representation value allows public methods accept user facing instance argument map back internal methods", "d": "1/2017"}, {"body": "note private implementation details change future versions", "d": "1/2017"}, {"body": "thanks clarification really helpful", "d": "1/2017"}, {"body": "intentional check need construct use either call lets us support functional components factory components js functional component function foo props return factory component function bar props return render return", "d": "1/2017"}, {"body": "also think words create unnecessary component name appeared times", "d": "1/2017"}, {"body": "oops lacker ericnakagawa get pro account", "d": "1/2017"}, {"body": "link exactly working working link incognito mode dunno ericnakagawa fixed something though afaict one link time use codepen problem make codepen links come react account would fairly annoying", "d": "1/2017"}, {"body": "think ericnakagawa might fixed somehow afaict one link time use codepen debug problem correct", "d": "1/2017"}, {"body": "gaearon suggest switching link instead", "d": "1/2017"}, {"body": "closing since appears work \u30c4", "d": "1/2017"}, {"body": "okay change type text see changes", "d": "1/2017"}, {"body": "intentional bug browser event name confusing many people expect run change rather blur especially important controlled inputs react react makes work change documented find differences dom documented page hope helps", "d": "1/2017"}, {"body": "kenticomartinh thanks well thought detailed issue something requested number times past see open pr implements essentially solution proposed read comments context nt done yet", "d": "1/2017"}, {"body": "thank could nt find probably searching problem keywords solution keywords willl observe understand correctly use basic events eg onclick small react components support latest enough versions browsers temporary fix pretty safe set dom events react listens attached automatically regardless whether register", "d": "1/2017"}, {"body": "issue wihtout using getting error randomly clicking inside modal component tested rendering content inline instead inside modal produce errors using scenario nt see error downgrading", "d": "1/2017"}, {"body": "op post nt think explicitly support use case bit unexpected probably wo nt looking soon feel free investigate fix think might needing call test renderer like reactdom renderer search code calls etiennedi case sounds like bug however ca nt investigate without minimal reproducing case", "d": "1/2017"}, {"body": "currently nt persist released dispatching event might able avoid assign dispatching event released except case event persistent sure change affects", "d": "1/2017"}, {"body": "event bubbles updated current element handling see called every function dispatchlisteners updated every iteration yenshih relying bubblingcapturing use instead need use retain reference element use instead js handlemousemove event eventpersist const element eventcurrentelement thishandlethrottlemousemove event element handlethrottlemousemove event element consolelog element whatever", "d": "1/2017"}, {"body": "think underlying cause updates attributes changed eg removing one properties impacts property well resulting instance nt necessarily match recently specified object able reproduce issue unit test using jest jsdom nt trickle effects like major browser vendors seem eg updating nt impact issue may worth fixing kind edge case ways fix think would specialcase updates shorthand properties like explicitly setreset properties defined object rather minimum edit addition removing properties present use csstext instead assume nt slower", "d": "1/2017"}, {"body": "overlapping styles allowed solutions costly afaik decided reasonable support warnings would helpful nt done yet number issues discussing interested information", "d": "1/2017"}, {"body": "overlapping styles allowed news may right decision nt think communicated clearly least seen works time may lead someone assume supported solutions costly fair enough curious costly csstext would compared manually managing updated properties currently done benchmarking looks like specific thing discussed previously without clear resolution", "d": "1/2017"}, {"body": "searching react issues see mentioned places eg first observed issue related nt immediately realize affected shorthand properties searched preexisting bugs failed find search overly narrow", "d": "1/2017"}, {"body": "close issue dup thanks syranide", "d": "1/2017"}, {"body": "related pull request", "d": "1/2017"}, {"body": "would like work first contribution react help welcome", "d": "1/2017"}, {"body": "karthikchintapalli cool follow instructions get docs running locally need diagnose issue coming", "d": "1/2017"}, {"body": "gaearon thank get back case questions", "d": "1/2017"}, {"body": "gaearon ok think get issue markdown first words content create react app link html file generated tag content property tags within supposed take string happening blog posts link first lines get included description", "d": "1/2017"}, {"body": "gaearon fix think docslayoutsdefaulthtml", "d": "1/2017"}, {"body": "makes sense wan na send pr", "d": "1/2017"}, {"body": "sent pr changes", "d": "1/2017"}, {"body": "would like help recommend move move section page lowermost article thanks", "d": "1/2017"}, {"body": "fixed", "d": "1/2017"}, {"body": "stated docs react may batch multiple setstate calls single update", "d": "1/2017"}, {"body": "joni perhaps explains called nt explain equal parameters passed first time parameters passed reflect state external object amp second screenshot verifies correct arguments passed seems unlikely issue arises misuse though ideal result ofc would expected reflect last call calls batched correctly perhaps react batched first four calls correctly inside amp last call mistakenly dropped ignored", "d": "1/2017"}, {"body": "ashtonwar suspect likely indirectly calling dispatch action shouldcomponentupdate generally nt triggering new updates lifecycle method think causing issues gaearon checked demo looks like instance totally flushed think triggered know disallow calls places also side note ashtonwar state management system seems call lot nt need would try manage outside hoc somehow nt rely much lastly reference equality check always return false react create new object updating state valid way determine component rerender rerendering based state updates", "d": "1/2017"}, {"body": "aweary yes calling inside seems causing issue dispatching action inside inside called expected already preventing calls outside suggested see getting right wip adding check ensure props actually updated dispatching indirectly reduced number calls thanks bringing attention aware amp never equal calling component render every time called necessarily parent renders props change repeating steps demonstrated issue", "d": "1/2017"}, {"body": "ashtonwar assuming inside allowed nt think issue react mentioned calls batched wo nt get call count turn glad resolves though ultimately would say try refactor architecture avoid triggering updates outside scope issue may want add note documentations", "d": "1/2017"}, {"body": "aweary thanks help leave issue open unsubscribe guys work whether want disable find way make work update docs", "d": "1/2017"}, {"body": "expected behavior reason rerenders every time always evaluates false may seem unintuitive sugar returns new object every time called fix cache element ensure value preserved across renders js class app extends reactpurecomponent update gt thissetstate count thisstatecount state count children render consolelog render app return thischildren", "d": "1/2017"}, {"body": "hey thanks answer would appropriate solution needed receive props", "d": "1/2017"}, {"body": "props every time hoist constant like example receives different props every time updates therefore makes sense skip rendering since otherwise see changes however free write custom implementation want use even granular heuristics determine whether update", "d": "1/2017"}, {"body": "gaearon thanks chiming lot trouble optimizing cases one approach taken passing function instead passing however children readable syntax nt want quick throwing baby bathwater problematic case mainly children depend props dynamic nt mean always change nt want children recreated props nt change know sounds bit like overkill goal currently single unnecessary render render entering render function", "d": "1/2017"}, {"body": "davegri may optimizing wrong thing running expensive expensive part recursively updating large tree often cut fast updates reasonable depth fine components always render hard offer help without specific example struggling", "d": "1/2017"}, {"body": "gaearon agree optimizations may extreme assuming decided want optimization code like nt want prop always change cause rerender recreated changes said one solution class renderchildren gt thispropstext render like said however dislike approach much less readable wondering solutions suggestions", "d": "1/2017"}, {"body": "nt want componentwithchildren children prop always change cause rerender recreated thispropstext changes pass span exactly would happen think approach suggested works js class renderchildren gt thispropstext render case even changes know forgets rerender would rerender also happen pass prop point duplicating information might well create also renders", "d": "1/2017"}, {"body": "gaearon right function solution working thanks example simple point may complex structure ca nt represented primitive good way solving real scenario code", "d": "1/2017"}, {"body": "suggested last paragraph work create new component encapsulates render function make", "d": "1/2017"}, {"body": "thought saying encapsulate children component yeah guess thats good solution thanks", "d": "1/2017"}, {"body": "curious use case creating renderer private apis change significantly", "d": "1/2017"}, {"body": "gaearon traversing mounted component tree api going change significantly referring internal properties mentioned", "d": "1/2017"}, {"body": "reactnativecomponenttree private api significantly change version please nt rely public apis documented react react native websites everything else internal", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "thank much since engineering living react actually makes life better continually", "d": "1/2017"}, {"body": "gushy positivity thread almost much handle almost", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thanks thanks thanks everyone worked facebook awesome", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank heart", "d": "1/2017"}, {"body": "remember reading issue optional sass support createreactapp someone wrote testing less sass support hot reloading components project useful still add things ease development dan abramov answered sorry useful yet think many people learning react would appreciate even current feature set replied sorry nt take comments rude think fantastic project important lesson thanks", "d": "1/2017"}, {"body": "thanks facebook initialitive open source helps lot", "d": "1/2017"}, {"body": "much", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanks really fantastic support treatment open source community", "d": "1/2017"}, {"body": "thanks guys amazing job much love", "d": "1/2017"}, {"body": "great react awesome", "d": "1/2017"}, {"body": "thank best developer experience across devices", "d": "1/2017"}, {"body": "would nt able iterate incredibly fast vimsicalcom without guys pushing envelope thank", "d": "1/2017"}, {"body": "thank hard work", "d": "1/2017"}, {"body": "thanks keep amazing work", "d": "1/2017"}, {"body": "thank leading good example us follow happy say hackerhoursorg one places good work followed", "d": "1/2017"}, {"body": "thanks guys react amp react native made developing fun", "d": "1/2017"}, {"body": "thanks awesome work vietnam", "d": "1/2017"}, {"body": "thanks everything use reactnative awesome", "d": "1/2017"}, {"body": "thank react went way beyond great code maintainers community ecosystem gave new perspective work new way life", "d": "1/2017"}, {"body": "react made web development much fun ca nt thank guysgals enough", "d": "1/2017"}, {"body": "thank keep good work need people like guys community grow move ahead", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thanks everyone helped team ship maintain product much reliable faster way hard describe grateful patience decision made make lifes easier happy", "d": "1/2017"}, {"body": "thank react community made yeartoremember loads nativebaseio team", "d": "1/2017"}, {"body": "cheers guys", "d": "1/2017"}, {"body": "thank react community amp devs would nt fun building discord without awesome framework discord team", "d": "1/2017"}, {"body": "thank beyond words continued work react react native allowed accomplish oneman dev shop bigger team ever thought possible excited coming", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "wed jan pm ronaldo lima notifications githubcom wrote receiving subscribed thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank sweet see community contributors ecosystem done right", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thanks great work bring innovations year", "d": "1/2017"}, {"body": "thanks great work awesomeness bring year", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanks lot", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thanks lot", "d": "1/2017"}, {"body": "thank react community", "d": "1/2017"}, {"body": "react native literally saved team hundreds hours thousands current project thanks great work", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thank guys react makes want get bed morning haha", "d": "1/2017"}, {"body": "wonderful indeed thank", "d": "1/2017"}, {"body": "awesome job thanks", "d": "1/2017"}, {"body": "thanks team love working react amazing library exemplifies spirt open source", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "rock thanks", "d": "1/2017"}, {"body": "thanks guys", "d": "1/2017"}, {"body": "thank much react react native simply brilliant", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "react best programming community ever involved lot credit goes facebook extraordinary philosophy contributing open source thank thank thank", "d": "1/2017"}, {"body": "thanks ton taken development experience whole new level", "d": "1/2017"}, {"body": "awesome work thank", "d": "1/2017"}, {"body": "thanks declarative lovelyness great new things", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thanks guys awesome job", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "obrigado", "d": "1/2017"}, {"body": "thank hard work put react", "d": "1/2017"}, {"body": "big thanks", "d": "1/2017"}, {"body": "thanks hard work company personal level grateful amazing stuff guys put daily basis keep", "d": "1/2017"}, {"body": "thanks brilliant minds changed hence life", "d": "1/2017"}, {"body": "thanks us back vacations working ship awesome stuff", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "unlikely given asking easily implemented user space however future likely separate api mounting updating unmounting root application something like", "d": "1/2017"}, {"body": "roadhump ca nt see documented anywhere could point anyway first sight seems like bug code since rerendering tree state change turn mounts component", "d": "1/2017"}, {"body": "roadhump hey bit newbie repo best help nt understand would want call error render function creating component throw error render ca nt use componentdidmount throw error render content error otherwise continuously throw errors every time component rerenders ie js class witherror extends component componentdidmount consolelog witherror error throw new error witherror error render return witherror best solution tell trying achieve devjunkorg believe onmount function created main component act callback update state parent component trigger single rerender however nt think callback issue mentioned believe issue throwing error render function", "d": "1/2017"}, {"body": "pretty specific extend reactcomponent implement desired functionality shouldcomponentupdate extend special version component necessary", "d": "1/2017"}, {"body": "vifird modified code component b reactfunctional working javascript import react react import functional reactfunctional let render gt return hello export default functional render declare methods pass stateless component", "d": "1/2017"}, {"body": "closing since response known issues rendering tags react", "d": "1/2017"}, {"body": "merged dom fixtures application place functioning need focus writing fixture test cases designing ui", "d": "1/2017"}, {"body": "outstanding dom issues personally familiar ill try collect others well offline chat jimfb awhile ago believe left looks fine scared make big change mouse enter logic probably good fit really collection undocumented input behavior needs documentation", "d": "1/2017"}, {"body": "issues make good fixtures", "d": "1/2017"}, {"body": "still need write fixture components yeah could take stab process somewhere", "d": "1/2017"}, {"body": "jquense yupp go ping got pr open review", "d": "1/2017"}, {"body": "started catalog check list test cases issue description", "d": "1/2017"}, {"body": "problem brunch conditional require notes commonjs official requirejs website check qoute modules traditional commonjs module format easily convert work requirejs modules convert cleanly new format types modules may convert well modules use conditional code require call like somecondition require else require brunch author paulmillr also wrote conditional imports also unsupported ecmascript import syntax think guys btw happy new year", "d": "1/2017"}, {"body": "react different conditional require since see one problematic", "d": "1/2017"}, {"body": "gaearon digging found special problem fact reactaddonsdomdependencies inside reactlib reactperf amp reacttestutils inside reactdomlib naive experiment moving conditional requires required devtools inside worked basically reactlibreactaddonsdomdependenciesjs require always production object var reactdomdevtools require reactdomlibdevtools dev exportsgetreactperf function return reactdomdevtoolsreactperf exportsgetreacttestutils function return reactdomdevtoolsreacttestutils nt created pr dozen tests failing", "d": "1/2017"}, {"body": "maybe comment bring value brunch maintainers fix brunch deppack side cc paulmillr goshakkk shvaikalesh marcioj", "d": "1/2017"}, {"body": "sure conditional require", "d": "1/2017"}, {"body": "temporarily fixed released soon however workaround brunch bug seems like real issue", "d": "1/2017"}, {"body": "fixed updating react packages please verify", "d": "1/2017"}, {"body": "thanks guys", "d": "1/2017"}, {"body": "fixed updating packages please verify", "d": "1/2017"}, {"body": "aweary fixed separate issues", "d": "1/2017"}, {"body": "gaearon seems like two separate issues fixes issue windows tested apparently nt fix windows entirely sure", "d": "1/2017"}, {"body": "gaearon test minutes report back", "d": "1/2017"}, {"body": "gaearon tested windows windows placeholder rendered correctly sure happening probably user error part either way resolved", "d": "1/2017"}, {"body": "serversiderendering result never matches browsersidegenerated dom even though use suppose browsersidegenerated dom always replaced server rendered html since attribute", "d": "1/2017"}, {"body": "case different problem clear exactly since nt supply code conclusion mistaken react generates markup client rehydrating server markup nt compare dom strings process nt changed", "d": "1/2017"}, {"body": "also nt work precisely works times try open example new tab several times maybe reload browser think see incorrect variants", "d": "1/2017"}, {"body": "currently running issue well someone please help", "d": "1/2017"}, {"body": "exact issue", "d": "1/2017"}, {"body": "fix nt seem work build time running browserify addons browserify task error find module reactdom usersgaearonpreactbuildnodemodulesreactlib running browserify addonsmin browserify task error find module reactdom usersgaearonpreactbuildnodemodulesreactlib", "d": "1/2017"}, {"body": "started work ca nt get figure make circular dependencies work statically analyzable amd environment systemjs builder particular possibly rjs affected help welcome", "d": "1/2017"}, {"body": "please check fix works case", "d": "1/2017"}, {"body": "fixed via released soon", "d": "1/2017"}, {"body": "sorry late fwiw tried current master works fine thanks", "d": "1/2017"}, {"body": "also confirm reactwithaddons works master requirejs setup thanks gaearon", "d": "1/2017"}, {"body": "fixed updating react packages please verify", "d": "1/2017"}, {"body": "verified npm working requirejs build thanks", "d": "1/2017"}, {"body": "bit upgrading react spend time figuring posting help others situation using reacthotloader hotreloading dev environment need load webpack field look like following work correctly react reacthotloader webpackdevserver hope helps", "d": "1/2017"}, {"body": "provide simple pr feature implementation instead using attr definition string added attribute describe prop structure object hope completely clear look tests custom props behaviour also presented tests ok complete pr clean code remove duplications etc", "d": "1/2017"}, {"body": "another good use case tests may want different things depending proptypes", "d": "1/2017"}, {"body": "sometimes collision defined prop type names prop types defined features prop type also probably collision actually sounds like something break future versions react using proptypes behavior observable production example plan replace proptypes checkers single throwing type checker prod reduce react byte size case production relied logic app could break prod sceptical direction want make proptypes powerful people start relying implement magic behaviors support could break future", "d": "1/2017"}, {"body": "sometimes collision defined prop type names prop types defined features prop type also probably collision gaearon agree direction probably wrong another cases still useful dev env react storybook info addon support prop types also maybe useful doc generators another case project worked lot components complex props values props editable control panel different locals even according current user props values passed components via redux connect build form control panel edit component values developers read component source text parse prop types also implemented via babylon get ast tree parse object reactdocgen api get component doc object get props know problems complex shape enum props proptypes struct maybe suitable solution think lot examples feature would useful anyway really important feature among react pull requests react needs", "d": "1/2017"}, {"body": "want create small faker module react generates random data based components proptypes feature would helpful currently native solution handle problem comfortable way look current idea implementation oleblaesingreactproptypesfaker", "d": "1/2017"}, {"body": "new reading documents wish documentation explained use ref never mentioned think key part application works think may best add quick paragraph use", "d": "1/2017"}, {"body": "agree refs introduced later could use controlled inputs instead", "d": "1/2017"}, {"body": "think need restructure little bit two separate change handlers need refs", "d": "1/2017"}, {"body": "probably time work good contribution opportunity update rohannair working like help please fork relevant codepen step change two change handlers read instead using refs change text necessary send pr goal avoid using refs since introduced yet essential page want work please comment several people work time", "d": "1/2017"}, {"body": "take first pr", "d": "1/2017"}, {"body": "sounds great", "d": "1/2017"}, {"body": "pushed pr nt feel like docs needed changing vs part earlier resisted urge make function complicated adding multiple arguments bind intended beginners", "d": "1/2017"}, {"body": "find solution", "d": "1/2017"}, {"body": "looks like reactjs nt support path attribute", "d": "1/2017"}, {"body": "similar problem usecase app list images left side user selects image list selected image shown canvas canvas background image set using created object canvas called function whose purpose set canvas background selected image done inside default background image shown canvas selected image shown canvas dont see componentdidupdate rerendering used using canvas object recreated select image canvas set selected image show previous canvas javascript class imageboard extends reactcomponent constructor super thisstate canvas undefined selected undefined componentdidmount const canvas new fabriccanvas canvas thissetcanvasbackground thispropsgetselectedimageselectedimage canvas componentdidupdate const canvas new fabriccanvas canvas thissetcanvasbackground thispropsgetselectedimageselectedimage canvas setcanvasbackground image canvas canvassetbackgroundimage image function e let iw canvasbackgroundimagewidth ih canvasbackgroundimageheight cw canvasgetwidth ch canvasgetheight render return const mapstatetoprops state gt consolelog state state return getselectedimage stategetselectedimage export default connect mapstatetoprops imageboard use componentdidupdate result looks like following image use componentdidmount canvas get updated selected image happen rerendering using reactjs", "d": "1/2017"}, {"body": "noted help provide minimal reproducing example run eg jsbin clear explanation expected happen actually happens cheers", "d": "1/2017"}, {"body": "produced example webpack bin want create new issue saw similar problem issue already created posted problem sorry violate protocol think image clicked componentdidmount rerender component action fired state selectedimage changes thus new image shown imageboard case thanks", "d": "1/2017"}, {"body": "tushant sure problem noop", "d": "1/2017"}, {"body": "componentdidmount rerendering component even state selected image changed tried componentdidupdate update canvas update canvas first need clear previous one work either", "d": "1/2017"}, {"body": "tushant reduce example react component nt seem need redux really meant simple state like putting redux makes example way complicated harder understand trying", "d": "1/2017"}, {"body": "gaearon example showed part application developing learn redux react login system plus lots filtering system right side using redux sure reduce following example react sorry late response due timezone difference thanks", "d": "1/2017"}, {"body": "reduced example react", "d": "1/2017"}, {"body": "thanks creating unfortunately seems like webpackbin broken ca nt edit files nothing happens keystrokes browser", "d": "1/2017"}, {"body": "ultimately problem nt appear related react react side need js componentdidmount thissetcanvasbackground thispropsselectedimage componentdidupdate prevprops prevpropsselectedimage thispropsselectedimage thissetcanvasbackground thispropsselectedimage reactrelated problem seeing rely find canvas bad component reusable two galleries page fix would need put ref canvas something dom element implement depends library using canvas example could something like work problem using library need read documentation learn update image existing canvas", "d": "1/2017"}, {"body": "sorry novice could understand react related issue thanks lot knowledge got learn new things expected thanks", "d": "1/2017"}, {"body": "worries would recommend trying use api vanilla js first get sense use library use react sure api", "d": "1/2017"}, {"body": "sure said practice vanilla js understand concept api js bin come back use react thanks", "d": "1/2017"}, {"body": "one last question understand line", "d": "1/2017"}, {"body": "reading documentation fabricjs found native methods operate context object representing entire canvas bitmap fabric operate objects instantiate change properties add canvas fabricjs work element stored object canvas using use object way worked understand context aforementioned way thanks lot help", "d": "1/2017"}, {"body": "tushant statement checks canvasel exists creates", "d": "1/2017"}, {"body": "robertistok nt", "d": "1/2017"}, {"body": "tushant nt think returns true means falsy value passing function return something useful imo", "d": "1/2017"}, {"body": "understand thiscanvas context aforementioned way point nt need put fabric object state use data used function harmful better put fabric object field", "d": "1/2017"}, {"body": "got thanks", "d": "1/2017"}, {"body": "issue closed open issues regarding maintenance future transitiongroup support", "d": "1/2017"}, {"body": "yep let close issues transitiongroup filed nt deprecated officially well likely", "d": "1/2017"}, {"body": "interesting points hn discussion thread desire official react docs either include official info applicationwide topics like routing least point vetted sources beyond docs", "d": "1/2017"}, {"body": "related note reactiflux website revamped ready shortly part sweep reactredux links list picked top two three articles several key categories shortened list added learning page reactiflux site current version page would good resource link react docs maybe even copy cherrypick gabegreenberg thoughts topic", "d": "1/2017"}, {"body": "still wip might useful mention accessibility guide", "d": "1/2017"}, {"body": "hello andersekdahl end finding causing bug encountered glitch application setting state componentdidmount nt seem issue either", "d": "1/2017"}, {"body": "jrmartin andersekdahl could provide small example reproducing issue use jsfiddle starting point mentioned likely issue application react crucial evidence showing otherwise", "d": "1/2017"}, {"body": "still seeing issue logs never able reproduce may issue code ca nt sure seems like error occurs randomly nt seen direct pattern since ca nt reproduce know actionable guys sorta hoping fiber might magically fix make obvious causing error", "d": "1/2017"}, {"body": "unfortunately way much code application isolate issue codepenjsfiddle bug started happening updating latest chrome previous chrome version working fine still working fine firefox without issues using griddlejs react component issue happens scroll long list inside griddle component screenshot stack trace error getting first impression bug application stack trace nt point anywhere double checked states updates componentdidmount without luck also working fine firefox previous chrome version latest making think might bug application sure also looking griddlejs library", "d": "1/2017"}, {"body": "sebmarkbage see react released today new support talked custom elements everything properties instead attributes also one thing noticed react could also possibly improved support prop maybe reactspecific properties dom elements react following code something unexpected least user react starts sending properties instead attributes seems like properties work fine since already implemented properties htmlelement however edge cases behavior wo nt work expected sure thought guys might know", "d": "1/2017"}, {"body": "answering question react support yet created add react though", "d": "1/2017"}, {"body": "fyi representative end cut release test changes related react native", "d": "1/2017"}, {"body": "gaearon see somewhere read decided might released roadmap tentative list might", "d": "1/2017"}, {"body": "related issues milestone filled cases personally sure fully representative final plans", "d": "1/2017"}, {"body": "definitive list working complete rewrite reconciler fiber talk info progress info detailed progress yet clear ship wait work fiber currently prioritized issues read weekly meeting notes keep track progress planning expect talk beginning plan establishing scope soon yet done", "d": "1/2017"}, {"body": "joeldenning took quick look seemed like nt provide way set attributes custom elements really needs way set thing like aria attribute ca nt simply set via properties plenty styling scenarios might require attributes element nt support reflected properties also attributeproperty pairs different set attribute needs set nested property becomes difference would mean need data structured differently depending whether set custom element", "d": "1/2017"}, {"body": "related really think best way explicit control whether prop set attribute property event handler via api surfaces element distinct even though often correlated need nt sometimes nt even builtin elements suggestion set property element property name attribute otherwise problematic custom element upgrades element may notupgraded attribute set property upgraded able read correct value attribute", "d": "1/2017"}, {"body": "justinfagnani good points question upgrading scenario brought though general nt elements native custom look attributes constructedconnected look properties words nt general convention native custom elements properties source truth attributes initial configuration custom element follows convention looking attributes properties nt upgrade problem talked disappear thinking goal make easy react interoperate custom elements follow convention like one described course possible interoperate custom elements break convention via refs easy interoperate ones agree lean towards establishing convention", "d": "1/2017"}, {"body": "elements certainly look attributes boot values string serializable", "d": "1/2017"}, {"body": "ah good point element nt upgraded yet may still need set properties setting attribute wo nt work string probably right thing react consider execute code sure custom element defined things upgraded", "d": "1/2017"}, {"body": "joeldenning accepts name argument custom element checking react would know name also indeed custom element corresponding definition definitely loaded giving user full control property attribute event applied element means less checks heuristics react needs maintain also means api consumer gets expected behaviour complete dom integration say dom really dom integration problem custom elements integration dom means custom elements inherently work", "d": "1/2017"}, {"body": "update couple months research prototyping seems us react nothing new support webcomponents interoperability ways instantiating definedortobedefined web component events handled via like regular html element encapsulating react component within web component react component responsible controlling guts web component sebmarkbage chat next week eventually share examples docs sufficient opinion slotting remains open question though", "d": "1/2017"}, {"body": "seems us react nothing new support webcomponents interoperability ways well anything new frameworks nothing needs done support web components issue started improvement suggestion avoid first place", "d": "1/2017"}, {"body": "reminder could reconsider gt conversion went deep props vs attrs sebastian said concern would heuristic normalizing event name really fan converting things like onxxx xxx mootools would better solid arguments", "d": "1/2017"}, {"body": "agree staltz always able interoperate custom elements inside react would really nice least majority custom elements could without using refs addeventlistener manual setting dom element properties inside componentwillreceivepropscomponentdidmount", "d": "1/2017"}, {"body": "karczk agree think warning printed console andor updating documentation would sufficient", "d": "1/2017"}, {"body": "focus work put symbol examples", "d": "1/2017"}, {"body": "rikani good know thanks", "d": "1/2017"}, {"body": "linking future readers reference", "d": "1/2017"}, {"body": "understand reasoning behind props warning recommended way apply non standard valid html attributes whitelist example take component simply wants render video via iframe attributes whitelist depreciated providers like vimeo still use recommended way use without getting warning used order avoid warning fan approach whatever answer perhaps could included docs cheers", "d": "1/2017"}, {"body": "pfhayes also think behavior solution case", "d": "1/2017"}, {"body": "actually change production", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "based tweet", "d": "1/2017"}, {"body": "zpao bsonntag although bsonntag find edge issues like previous comment uses html label tag input tag works fine explain", "d": "1/2017"}, {"body": "met scene use react wo nt appear use pure html", "d": "1/2017"}, {"body": "darcyfzr bug edge see aweary example workaround make siblings use attribute like", "d": "1/2017"}, {"body": "use case contains dispatches componentlocal data requests asynchronously fulfilled corresponding reduxsagas serverside rendering enabled sagas run serverside asynchronous io sagas complete rerenders expected latest redux state latest rendered html sent browser rehydrated example componentwillmount const isloading isloaded dispatch thisprops refs serverside rendering loop universal sagas reduxsaga", "d": "1/2017"}, {"body": "clarify current best practice dispatching redux action fetch data subscribe cdm client side constructor server side", "d": "1/2017"}, {"body": "server fetch data rendering anything put redux store connect pick", "d": "1/2017"}, {"body": "brigand understand lot people prefer server side prefer use component subscribes mount unsubscribes unmount use twopass render server side get requests avoid write separate code specify data fetch server side chosen dispatch redux action reason component mounts best place server side constructor", "d": "1/2017"}, {"body": "interesting write high order component concept define defineplugin webpack", "d": "1/2017"}, {"body": "brigand thoughts exactly basically except using move logic constructor elaborate client side middleware handles subscribe action making websocket rpc call server side middleware stores subscribe actions array associated request first render pass go actions asynchronously fetch initial data dispatch store render second pass send client multipass rendering nt ideal assume react eventually provide ability efficiently update virtual dom multiple times actually rendering static markup keeping subscription code dry well worth", "d": "1/2017"}, {"body": "going close since updates reproducible example provided niole still issue recent version react please provide small test case demonstrating issue reopen", "d": "1/2017"}, {"body": "looks like react throws error react node tree unmounted effectively keeps bug showing still exists", "d": "1/2017"}, {"body": "niole mentioned gaearon something working intended please try extract reproducing example app trim takes time really helps us find cause without reproducible example lot help sounds like encountering", "d": "1/2017"}, {"body": "aweary sorry clearer reproduce new error thrown user unmounts react component may existed found bug react", "d": "1/2017"}, {"body": "going go ahead close since issue reproducible anymore", "d": "1/2017"}, {"body": "hi bumped removing annotation compiled code successfully managed reduce size app see commit nt seem pr happy contribute needed", "d": "1/2017"}, {"body": "thanks lot adding docs however still obscur use use components tied props state thus majority component extending purecomponent using react component redux example also always wrote component statelesscomponent seems purecomponent also efficient statelesscomponent frandsaw stated shallow equality check may cheaper virtual dom comparison conclusion right purecomponent things fear may missing something good examples component statelesscomponent better purecomponent would great thanks lot help", "d": "1/2017"}, {"body": "something slow try using see helps nothing slow bother optimizing sure way tell going slower reconciliation shallow comparisons everywhere pathological cases shallow equality checks often failing slower rule thumb add one know perf problem verify adding solves problem help", "d": "1/2017"}, {"body": "thank gaearon response helps build first optimize later needed seems like pragmatic way", "d": "1/2017"}, {"body": "progress bug pr fix seems hanging around yet merged", "d": "1/2017"}, {"body": "aweary jquense get test fixture coverage would first browser specific test case", "d": "1/2017"}, {"body": "information junit relicensed cpl epl order able distributed netbeans cpl broad defensive patent clause distribute together similar patents milder", "d": "1/2017"}, {"body": "one resource eclipse public license epl frequently asked questions specifically epl differ cpl section cpl contained following language recipient institutes patent litigation contributor respect patent applicable software including crossclaim counterclaim lawsuit patent licenses granted contributor recipient agreement shall terminate date litigation filed addition recipient institutes patent litigation entity including crossclaim counterclaim lawsuit alleging program excluding combinations program software hardware infringes recipient patent recipient rights granted section b shall terminate date litigation filed first sentence removed epl many members prospective members believed first sentence overly broad viewed inhibitor continued growth eclipse ecosystem", "d": "1/2017"}, {"body": "issue closed believe resolved", "d": "1/2017"}, {"body": "maximilianos thanks", "d": "1/2017"}, {"body": "blasten correct element notupgraded react sets props attributes would set upgraded element would nt access props like would properties", "d": "1/2017"}, {"body": "blasten said messed around method linked last comment say robust approach sure fool proof method giving consumer full control positive side effect less logic necessary decide", "d": "1/2017"}, {"body": "cpojer think ability specify integer determine render depth makes whole lot sense currently using jest left lot work mocking components achieve shallow render get free developer willing absorb cost tradeoff deep rendering however make tradeoff could avoided think nice fit jest something powerful jest using directly nt happening anymore one reason formats output differently namely always accessed ie", "d": "1/2017"}, {"body": "tested react today still reproduce issue nt based master branch thus code fixes issue anyone else experiencing another note tried replacing worked great felixkurniawan made typing stop completely us", "d": "1/2017"}, {"body": "johanbengtsson test tempory fix yes like everyone try step away ie much set custom component tempory fix react working smoothly even temporised callback manage value redux store without performance cost javascript import react component proptypes react import shallowcompare reactaddonsshallowcompare class textinput extends component constructor props super props thisstate statevalue thishandlesonchange thishandlesonchangebind componentwillreceiveprops nextprops const statevalue thisstate const value nextprops shouldcomponentupdate nextprops nextstate return shallowcompare nextprops nextstate componentwillunmount thistimer cleartimeout thistimer thistimer null render const label id thisprops const statevalue thisstate handlesonchange event eventpreventdefault thissetstate statevalue eventtargetvalue thissettimerbeforecallback eventtargetvalue settimerbeforecallback value const onchange delay thisprops textinputproptypes label proptypesstringisrequired id proptypesstringisrequired value proptypesstringisrequired onchange proptypesfuncisrequired delay proptypesnumber textinputdefaultprops delay export default textinput", "d": "1/2017"}, {"body": "mackentoch thanks tip yeah got working well short term work around changing still good solution nt want spend much time unfortunately lot customer universitieshospitals etc individuals nt always allowed upgrade either way unwillingly decided temporarily drop support til proper solution react", "d": "1/2017"}, {"body": "jimfb gitrichard following pr please let us know merge", "d": "1/2017"}, {"body": "got issue reactreduxform react autocomplete setting initial state form rather really wanted nt work oh well set back everything fixed", "d": "1/2017"}, {"body": "reproduce case likely similar original onsenui lazylist render gives performupdateifnecessary unexpected batch number error upgrading leaflet amp reactleaflet going back legacy leaflet alleviates error lazylist component functions correctly cases react version", "d": "1/2017"}, {"body": "may context came issue message popped stupid mistake react native code inside view onpress event instead posting case help anyone else save time", "d": "1/2017"}, {"body": "message popped working select reduxform initially select initialised empty array options accidentally action creator made gt let staticdata lt switch number countryid case staticdata id name id name break return type fetchkey payload data staticdata changing initial type array object unexpected reducer amp view changing highlighted line started working fine reduxform amp react", "d": "1/2017"}, {"body": "lkroner bug fixed master fixed please verify", "d": "1/2017"}, {"body": "maybe given comments confused delegating aweary", "d": "1/2017"}, {"body": "seeing thing app could nt render immutablejs list googled bit found github issue please see leondragan comment dec instead importing main indexjs file imported webpack react reactdom", "d": "1/2017"}, {"body": "write fake proptypes validation function run first inside component const mycomponent props gt const hasvalidprops wrappingproptypesvalidation props hasvalidprops return null return", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "getting error nodeenvdevelopment bug", "d": "1/2017"}, {"body": "got error due exactly reason johndugan brought", "d": "1/2017"}, {"body": "server side client side use match", "d": "1/2017"}, {"body": "bad nt", "d": "1/2017"}, {"body": "migration going", "d": "1/2017"}, {"body": "nothing happening right pretty sure looking year since want compile react away flat bundle case haste useful us moving files easily still nice sure approach would take", "d": "1/2017"}, {"body": "thanks response one question could please explain mean compiling flat bundle different guys", "d": "1/2017"}, {"body": "idea always compile react single file even npm would use optimized bundler nt generate module registry code like rollup resulting bundle smaller would also help solve performance issues server environment accessing processenv repeatedly expensive", "d": "1/2017"}, {"body": "jimfb clarify last sentence since official documentationtutorial still mentions prop types one first primary pages surprising one use case proptypes generate test pages components show form fields props specified suggestions use case jsdoc since involves parsing script files nothing test dynamically check reasonably", "d": "1/2017"}, {"body": "syranide whoa beers probably refactor code looks like", "d": "1/2017"}, {"body": "ffxsam contrary give accidentally keep references dead dom nodes components potentially preventing getting garbage collected", "d": "1/2017"}, {"body": "oh wait misunderstood comment yes need refactor pattern simple", "d": "1/2017"}, {"body": "nt work well though use pattern op said ref callback fires every time component renders mention div toplevel btw nt know reason getting repeated ref callback invocations", "d": "1/2017"}, {"body": "ref callback fires every time component render problem expected behavior expected", "d": "1/2017"}, {"body": "case worried bottlenecks extremely unlikely setting field performance bottleneck app extreme case hoist bound class method like event handlers avoid extra calls", "d": "1/2017"}, {"body": "understand getting called upon rerenders sort get back second suggest course perfectly fine except scenario relying upon ref callback trigger another callback push information dom node array case would get several duplicates node ref callback fired rerender dom node mount obvious solution case use nt understand ref callback called upon rerender get new function every time nt determining factor whether dom node already mounted words let say rather internal react logic saying upon rerender hey new function call nt instead say already invoked ref callback img wo nt", "d": "1/2017"}, {"body": "except scenario relying upon ref callback trigger another callback push information dom node array could instead nt understand ref callback called upon rerender nt determining factor whether dom node already mounted imagine case bit contrived illustrates api makes possible pass different callbacks every time possible somebody maybe layer indirection still clean old ref would terrible footgun user actually intends pass different ref would nt respect would keep old reference set new one would make initial mount behave inconsistently update react apis eg props work hope makes sense", "d": "1/2017"}, {"body": "maybe thinking wrong would still expect fire component mounts false would call always pictured callbacks sort individual dom nodes fire node question rendered first time maybe thinking wrong way could componentdidmount componentdidupdate instead thought need actual dom node run would require js componentdidmount const node thisrefsrootnode thispropsonmount rect nodegetboundingclientrect render return provide context building component renders file icons folders react component component reports parent upon mounting knows rect coordinates folder icon used dragging files know whether user hovering folder one", "d": "1/2017"}, {"body": "component mounts propsisavatar false would call thishandlenormalref react works generally case initial props way special updated props usually react update prop would case first value gets stuck thought need actual dom node run getboundingclientrect would require use string refs js componentdidmount thispropsonmount rect thisrootnodegetboundingclientrect render return", "d": "1/2017"}, {"body": "oh ok yeah makes lot sense fired callbacks executed would totally work dumb code removed thanks clarifying dan", "d": "1/2017"}, {"body": "componentdidmount fired ref callbacks executed yes except component unmounting ref gets called null value necessary could get component unmounting", "d": "1/2017"}, {"body": "er know know react sorry replied haste", "d": "1/2017"}, {"body": "seeing something strange understanding component updates simply call reference dom element time called unmounts following correctly occurring every time controlled get updated new value get called instantly calls reference dom element nt always called reference dom since unmount see never called type updates state", "d": "1/2017"}, {"body": "straight docs react call callback dom element component mounts call unmounts two references page documentation code example intregrisist absolutely correct example passed every key press text box even though component never unmounted either documentation needs changed clarify expected behavior something needs fixed hope agree latter case would weird expected behavior", "d": "1/2017"}, {"body": "oh wait misunderstood comment yes need refactor pattern simple avoid add unnecessary function also thanks clearing looking documentation also thought acts like", "d": "1/2017"}, {"body": "docs updated published website yet see last section", "d": "1/2017"}, {"body": "jedmao intregrisist chance read thread yes docs incomplete believe explained happening explanation last conversation ffxsam hope helps", "d": "1/2017"}, {"body": "confused badly first especially warning would pop change field value undefined set first render", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "moodysalem arrow functions nt", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "thanks heads gaearon", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "news react iterates valueseq entryseq twice still happens react using immutablemapmap directly ignoring error using maps children yet fully supported works fine though weird", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "someone find happened index used key always use unique id instead index", "d": "1/2017"}, {"body": "needed get bounding rect arbitrary potentially stateless component hoc solution came js render return someotherfunc thisinputwrap amp amp thisinputwrapfirstchild let inputrect thisinputwrapfirstchildgetboundingclientrect ie wrap arbitrary component try get bounding rect wo nt work correctly use get dom node wrapped component unless renders case also", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "others end trying solve problem extend spicyjs answer use inheritance rationale composition inheritance react", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "deal following case want listen transitionend dom element add event listener ref callback currently right way", "d": "1/2017"}, {"body": "far see node addedremoved sometimes code actually note however supply callback inline adding removing listeners every render docs one could argue better abstraction would extract part code component would nt necessary call wrong way node static never addedremoved would probably best moving listenerlogic ref instead", "d": "1/2017"}, {"body": "seeing outcome issue reactrouterbootstrap using directly expects array data type argument nt see makes sense anything epsitec suggested update based documentation impression argument received needs array data type unfortunately single child order accommodate code uses needs react element object yikes suppose need hack code uses accommodate need something like following javascript arrayisarray children amp amp childrenlength children children return reactcreateelement type props children", "d": "1/2017"}, {"body": "submited new issue controlled components temporary solution uncontrolled controlled components input textarea uploaded reactcompositionevent", "d": "1/2017"}, {"body": "let make happen", "d": "1/2017"}, {"body": "yesmeck happy see news saw test focus webkit separate chrome safari chrome change event triggered order", "d": "1/2017"}, {"body": "eyesofkids added new test case chrome", "d": "1/2017"}, {"body": "allow return best way write render returning", "d": "1/2017"}, {"body": "might allow returning future best way write render returning thispropsoptionalproperty amp amp lt gt sure asking show full example issues", "d": "1/2017"}, {"body": "nice would elegant", "d": "1/2017"}, {"body": "final answer", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "hi encountered exact issue found cause forgotten pass buggy code working code error hard trace back since component nt render maybe check could implemented parent constructor detect issue nb tested react nt current exact version number hand", "d": "1/2017"}, {"body": "nt appear issue", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "prinzhorn stumbled across even probably nt need workaround anymore believe know another one setting enclosing adding still show content enclosing anymore edit probably enough uidiv", "d": "1/2017"}, {"body": "work around get react ignore let html malformed prevents rendering basically whole page safe admin user inputing html theoretically make mistake catch error instead render catch redefining sure someone already built much better solution", "d": "1/2017"}, {"body": "zargold version react would expect react problem since use documentcreateelement rather generating html string", "d": "1/2017"}, {"body": "going close since nt using code path cases", "d": "1/2017"}, {"body": "hi spicyj using guess try holding nose updating looks like everything works fine compatibility issues see fares hits regression testing", "d": "1/2017"}, {"body": "pr got closed fix nt merged still needed", "d": "1/2017"}, {"body": "thinkxl pr closed since got outdated believe still open accepting pr implements anyone wants work", "d": "1/2017"}, {"body": "aweary cool thanks quick response", "d": "1/2017"}, {"body": "sebmarkbage could please clarify related fiber architecture thanks", "d": "1/2017"}, {"body": "might helpful", "d": "1/2017"}, {"body": "spent almost hour trying figure problem zpao agree others thread documented somewhere perhaps gotchas section documentation", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "happen want extend setstate inside component definition thenable could expanding spectrox syranide proposals though see could considered antipattern feel like could useful cases need something new state involve rerendering component case usually involves changing canvas context based new rendered dimensions example managing separately react update cycle since react really nt care happening inside canvas cases probably would differ", "d": "1/2017"}, {"body": "believe setting state becomes asynchronous implementation react fiber", "d": "1/2017"}, {"body": "yet async default eventually however already async cases", "d": "1/2017"}, {"body": "conantonakos check section documentation state updates may asynchronous", "d": "1/2017"}, {"body": "specific unknowns returning promise setstate thinking committing promises rule possible features actually triggers resolvereject flushing update queue individual setstate transaction performance issues producing promise every setstate call might otherwise never get used last item returned object implemented promise public api would nt create promise every call invoked reactcomponent implemented resolving whenever component state transaction queue flushed", "d": "1/2017"}, {"body": "committing promises rule possible features synchronous resolve would one would still synchronous cases performance issues producing promise every setstate call might otherwise never get used yes need remember call callback right point time keep list components provided callback however promises always every single update case somebody happens use promise last item setstate returned object implemented promise public api would nt create promise every setstate call invoked seems awkward still allocation ca nt avoid queueing somebody might promise completed ca nt avoid actually storing callback every call need gain using promises bit fringe feature anyway used corner cases normally use lifecycle methods add complexity", "d": "1/2017"}, {"body": "need gain using promises bit fringe feature anyway used corner cases normally use lifecycle methods add complexity fwiw vote return promise concerns mentioned good concrete reasons", "d": "1/2017"}, {"body": "thanks gaearon aweary nt fully aware could use like", "d": "1/2017"}, {"body": "setstate returning promise consider scenario sets state sets state values split two functions due business logic reasons sometimes happens sometimes b happens sometimes happen b happen functions called race condition ensues mutates setstate takes time update comes gets stale value stomps changes times b happens first immediately followed current workarounds ideal callback hell smash b one monolithic function", "d": "1/2017"}, {"body": "peacechen already api use case function receive current never stale values state props arguments return next state safe call several times example js function increment prevstate return value prevstatevalue function multiply prevstate return value prevstatevalue inside component thissetstate increment thissetstate multiply", "d": "1/2017"}, {"body": "gaearon thanks aware callback setstate supports request add support promises setstate avoid callback hell", "d": "1/2017"}, {"body": "solution rendering lot items screen virtualization react specific problem done frameworks well react datagrid component although depends structure row data beyond certain number rows simply achieve decent performance without virtualization without react library implements virtualization may wish investigate", "d": "1/2017"}, {"body": "seems react default behavior swallow errors without output makes debugging incredibly difficult nt know still works way recent versions would suggest default spitting warning least anything would tell developer happened thanks fyi workaround implemented top level component terrible inconvenience find issue thread nt error go run chrome pause caught exceptions find", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "bitmage true implement unstablehandleerror react nt log anything rethrow error like trycatch future version react log error regardless though see preview", "d": "1/2017"}, {"body": "spicyj cases unstablehandleerror called trying build hoc like callback seem ever called javascript import react react const renderfallback gt error see export const errorboundaryconstructor fallbackcomponent renderfallback onerror undefined gt wrappedcomponent gt return class errorboundary extends reactcomponent export const defaulterrorboundary component gt return errorboundaryconstructor component example client code javascript import react react import portal reactportal import classnames classnames import defaulterrorboundary utilserrorboundary const fullscreenportal reactcreateclass render return export default defaulterrorboundary fullscreenportal", "d": "1/2017"}, {"body": "error thrown nt see code", "d": "1/2017"}, {"body": "spicyj children fullscreenportal wanted know hoc makes sense usecase antipattern thinking might something missed implementation like children composite component already rendered element tree", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "upvoted wanted share valid use case suppose buttons want css liquid layout left center right left button always visible two conditionally visible react specifically react native using flexbox rendering center right buttons nt position correctly wrapped singular view yes could split center right buttons methods would introduce lot redundant code since share much behavior", "d": "1/2017"}, {"body": "like says already aware use cases feature hard work supporting already half dozen people calling flexbox issue since nt seem like discussion productive locking update news new implementation", "d": "1/2017"}, {"body": "ever get fixed", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "bad practice sure coded zero entire page join project symfony uikit jquery etc etc uses reactjs say team hey bad practices delete important css please", "d": "1/2017"}, {"body": "really surprised overlooked long support absolutely needed css many use cases", "d": "1/2017"}, {"body": "ok best practice guideline majority developper works budget leads quick dirty best case using bootstrap foundation uikit co still leader vanilla htmlcss integration habits use important dirty css way providing control override inheritance also lot great projects driven vjeux famous presentation powerful jss glamor styledcomponent etc still react responsibility check css", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "flow nice ca nt check runtime option use decorator", "d": "1/2017"}, {"body": "nt support recursion eg", "d": "1/2017"}, {"body": "bump may ask since eliminating native html properties became acceptable frameworks people rarely use data react blame inexperience react communityprogrammers myopia react nt constitute whole web veterans yeah jquery programmers would know data properties often used", "d": "1/2017"}, {"body": "discussing making working data aria better like eliminating", "d": "1/2017"}, {"body": "appreciate efforts apologies previous comment", "d": "1/2017"}, {"body": "still problems ios chrome version contrary described though autofilled content flashes briefly form removed consistent stored state however autofill still nt work", "d": "1/2017"}, {"body": "probably get point github pages might start enforcing monthly hit limits point domain could caching cdn top site move powerful host future needed", "d": "1/2017"}, {"body": "agree nice flexibility github likely needs react site needs nt think rate limit issue pressing", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "going close since plan changes transitiongroup react repo instead maintained community file issue new repository still affecting thanks", "d": "1/2017"}, {"body": "using experiencing issue looking release notes three minor releases since nt see fixed closed issue seems tracking case seems like issue much thorough description problem", "d": "1/2017"}, {"body": "look history see issue closed open pr see milestone set fix put introduces breaking change behavior know possible backport jquense nhunzaker would likely able answer", "d": "1/2017"}, {"body": "possible even pr already", "d": "1/2017"}, {"body": "oh nice make list dom prs hanging awaiting review add umbrella relevant cases manual tests", "d": "1/2017"}, {"body": "todo list need test stuff locally think merge make sure add relevant cases get chance review", "d": "1/2017"}, {"body": "anyone working browser test fixture got time write one", "d": "1/2017"}, {"body": "planning moment yet feel free jump", "d": "1/2017"}, {"body": "worries plenty test cases write got pr related shift gears", "d": "1/2017"}, {"body": "would love see parody sooooo useful user experiance", "d": "1/2017"}, {"body": "steida swivelgames janhancic use video attribute react jsx", "d": "1/2017"}, {"title": "module private nested di context", "body": "hello submitting feature request question aware default di context strategy enrich applicationwide dependency injection context would like injectables globally available concrete example trying achieve probably doc explaining able find would like create servicemodule would differentiate publicexported services private services ts injectable export class privateservice available appmodule injectable export class publiclyexportedservice available appmodule constructor private privateservice privateservice imported module ngmodule exports publiclyexportedservice declarations publiclyexportedservice providers publiclyexportedservice privateservice export class servicemodule main module ngmodule imports servicemodule export class appmodule goal use dependency injection use class outside would capable injecting help greatly appreciated ps duplicate stackoverflow question nobody seemed answer problem", "num": "14215", "d": "1/2017"}, {"title": "angular final release typeerror object nt support action", "body": "submitting check one x current behavior get following error running application ie amp myappservice service created myfunction function defined within service calling component although would like issue related possibly shims loaded downloaded via npm earlier today angular scripts application works fine chrome firefox expected behavior error minimal reproduction problem instructions sure create minimal reproduction public space try create something seems like general issue repoduced please tell us environment windows net visual studio npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview ie earlier versions well would guess language typescript xx", "num": "14212", "d": "1/2017"}, {"title": "generic track functionality property binding", "body": "submitting bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior property bindings check changes comparing object reference way change check compare subproperty object reference instead root object reference expected behavior specify either subproperty object reference check instead subproperty primitive check value motivation use case changing behavior hook often times complex necessary simply specifying specific field check change tracking process would think would useful entirely outside spirit framework able something parent component overwrite hero objects field new object propagate child without rewrite properties hero ones nt really change like maybe primarily angular developer made feature request basically said would consider knew would comparable feature reference", "num": "14211", "d": "1/2017"}, {"title": "ngmodel work already import formsmodule", "body": "import export formmodule sharemodule import sharemodule every module ngmodel work get error console info const routes routes path redirectto user pathmatch full path user loadchildren appuserusermodule usermodule path component pagenotfoundcomponent ngmodule imports routermoduleforroot routes exports routermodule providers export class approutingmodule const routes routes path redirectto list pathmatch full path list component listcomponent path add component addcomponent ngmodule imports routermoduleforchild routes exports routermodule providers export class userroutingmodule usercomponenthtml component selector appuser templateurl usercomponenthtml styleurls usercomponentscss export class usercomponent implements oninit constructor private userservice userservice ngoninit child route route route page componenet listcomponent component selector applist templateurl listcomponenthtml providers userservice styleurls listcomponentscss export class listcomponent implements oninit loading boolean false vo constructor private userservice userservice ngoninit onchangepage gopageno number alert click gopageno listcomponenthtml code follow component selector apppagination templateurl paginationcomponenthtml styleurls paginationcomponentscss export class paginationcomponent implements oninit pageno number constructor ngoninit paginationcomponenthtml follow got wrong console info way sharemodule follow import ngmodule angularcore import commonmodule angularcommon import pagenotfoundcomponent pagenotfoundpagenotfoundcomponent import paginationcomponent paginationpaginationcomponent import formsmodule angularforms import httpmodule angular ngmodule imports commonmodule formsmodule httpmodule declarations pagenotfoundcomponent paginationcomponent exports commonmodule formsmodule pagenotfoundcomponent paginationcomponent export class sharemodule need help wrong import formsmodule every module sharemodule ngmodel could work need complete code give mail post", "num": "14210", "d": "1/2017"}, {"title": "module providers ca nt used design", "body": "submitting check one x current behavior use module service become application level way provide applicationlevel services made example create lazyloaded module import another modules import providers well due lazy loaded modules get root scope imported providers override application root providers dublicate instances services created using lazyloaded modules use feature module providers services dublicated use providers appmodule use case feature module providers safely used additional info documentation refs expected behavior something fixed architecture create use case feature module providers feature deprecated documentation describe define applicationlevel providers appmodule feature modules angular version", "num": "14207", "d": "1/2017"}, {"title": "one complex property input", "body": "getting script error define complex property input define complex property please find plnkr link unhandled promise rejection template parse errors ca nt bind contentvalue since nt known property customdiv customdiv angular component contentvalue input verify part module customdiv web component add customelementsschema ngmoduleschemas component suppress message app zone task promisethen value syntaxerror zonesymbolerror error template parse errors ca nt bind contentvalue since nt known property nativeerror zoneawareerror zonesymbolstack error template parse errors nt bind unpkgcomzonejs zonesymbolmessage template parse errors nt bind content app error template parse errors ca nt bind contentvalue since nt known property customdiv customdiv angular component contentvalue input verify part module customdiv web component add customelementsschema ngmoduleschemas component suppress message app syntaxerrorzoneawareerror syntaxerrorbaseerror constructor new syntaxerror templateparserparse jitcompilercompiletemplate eval setforeach native jitcompilercompilecomponents createresult zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue", "num": "14204", "d": "1/2017"}, {"title": "unstability previous releases", "body": "app working fine yesterday yesterday remove nodemodules run npm install get problem ctorparametersmap function install new module updated angular version developer making changes modules released previously destroyed running app using angularcli version packagejson file name myapp version license mit angularcli scripts start ng serve lint tslint srcts test ng test webdrivermanager update protractor private true dependencies angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter typeslodash corejs dragula lodash moment rxjs tether tshelpers zonejs devdependencies typesjasmine typeslodash angularcli bootstrap codelyzer jasminecore jasminespecreporter jquery karma karmachromelauncher karmacli karmajasmine karmaremapistanbul processnextickargs protractor tether tsnode tslint typescript", "num": "14203", "d": "1/2017"}, {"title": "ie promise defined", "body": "submitting check one x current behavior startup error promise defined file systemsrcjs expected behavior errors motivation use case changing behavior please tell us environment windows angular version browser ie language", "num": "14202", "d": "1/2017"}, {"title": "cookiexsrfstrategy calling function cookiexsrfstrategy function calls supported", "body": "submitting check one x current behavior description provided cookiexsrfstrategy work getting error using cookiexsrfstrategy usevalue error encountered resolving symbol values statically calling function cookiexsrfstrategy function calls supported consider replacing function lambda reference exported function resolving symbol appmodule srcappappmodulets resolving symbol appmodule srcappappmodulets appmodulets expected behavior nt throw error amp request contain responsetoken minimal reproduction problem instructions motivation use case changing behavior please tell us environment os windows ide visual code editor package manager npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14200", "d": "1/2017"}, {"title": "multiple binding expressions radio button name fields causes incorrect default values set", "body": "submitting current behavior dynamically creating radio buttons dynamic name fields contain one binding expression correct default values set eg within nested ngrepeat last radio button selected using combined expression function correctly expected behavior default values radio options set according initially bound ngmodel minimal reproduction problem instructions example plunker demonstrating issue incorrect default values set plunker example plunker demonstrating correct functioning example using one combined expression eg name correct default values set plunker please tell us environment windows angular version browser chrome language", "num": "14199", "d": "1/2017"}, {"title": "router candeactivate returning false back button press still changes browser history", "body": "submitting check one x current behavior given candeactivate setup warn user navigation via confirm whatever user clicks back unsaved warning comes user clicks cancel navigation user clicks back user accepts navigation user taken back two route changes user continues click back cancelling eventually leave webapp expected behavior user taken previous pageroute user cancels browser history state tried navigate minimal reproduction problem instructions follow instructions plnkr motivation use case changing behavior candeactivate used warn unsaved changes click back decide cancel later decide go back anyway user presented previous page please tell us environment os windows using angular webpack angular version browser chrome language typescript node aot issues", "num": "14195", "d": "1/2017"}, {"title": "enhancement function escape route mapping", "body": "submitting check one x current behavior mechanism escape angular client side routing expected behavior multiple spas served behind reverse proxy router function escape angular route mapping make request instead defaulting unmatched route error note implementing could config function call minimal reproduction problem instructions na motivation use case changing behavior able serve multiple spas behind reverse proxy improves ux leverages browser side caching shared resources login cookies allowing contextually different apps remain separate allowing mechanism escape client route mapping easily supports navigating spas served reverse proxy please tell us environment os macos el capitan ide vscode package manager npm http server nginx angular version browser language typescript node aot issues", "num": "14192", "d": "1/2017"}, {"title": "hostlistener nt work structural directives global events", "body": "submitting check one x current behavior placing host listener structural directive nt work error nothing expected behavior able use hostlistener throw meaningful error expected behavior minimal reproduction problem please tell us environment angular version browser chrome language typescript", "num": "14191", "d": "1/2017"}, {"title": "extract tool write source file name resource file", "body": "submitting check one x current behavior moment extract tool generates id values id value depends extracted string value means change value eg fix typo id gets changed localization tool scanning xtb xlf use id attribute meaning attribute use meaning give unique fixed id elements something like extract tool gives us following meaning value change unless developer explicitly changes addition meaning value headertext much informative unfortunately hard get meaning values unique among templates expected behavior would help lot extracting tool would write relative path name template file html ts string comes something like source attributes contains file name string comes tool could get unique combining source meaning values meaning values would need unique within single template would lot easier developer maintain motivation use case changing behavior make angular localization easier increase translation quality please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14190", "d": "1/2017"}, {"title": "ngclass value updating form input field errors seems one tick behind", "body": "submitting check one x current behavior ngclass surrounding div updating correctly input field dynamic min length input field sets ngvalid nginvalid correctly expected behavior input field surrounding div ngclass valid invalid status minimal reproduction problem instructions preview enter minimum length enter test actual input without erasing enter minimum input min input becomes notice say ngclass valid input nginvalid erase say ngclass invalid input ngvalid alternate min length input ngclass valid invalid alternate angular version latest", "num": "14189", "d": "1/2017"}, {"title": "routerlink support nullundefined v", "body": "submitting check one x current behavior reopening reopen hence making new ticket binding null empty array yield exception anymore yields url current route rather empty href surprising imo bad expected behavior would expect empty ie nullundefinedempty arrayarray nulls undefined add href attribute nt make sense pick url current linking url produced angular version", "num": "14188", "d": "1/2017"}, {"title": "compiler support exporting regexp values", "body": "submitting check one x current behavior file containing expected behavior able export regexp symbols minimal reproduction problem instructions create file containing motivation use case changing behavior want ship input masks parsing locale date formats example please tell us environment osx sierra versions angularcli node os darwin angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter typescript", "num": "14187", "d": "1/2017"}, {"title": "request something similiar compile", "body": "submitting check one x current behavior compile type directive angular loading html content using appropriate sanitation rules sanitize html contain binding variables bind reflect variables within loaded html rendered example inner component somevalue string hello htmlcontent string somevalue public getcontent thing safehtml return thissanitizerbypasssecuritytrusthtml thing template expected behavior return hello minimal reproduction problem instructions follow example motivation use case changing behavior add dynamic content dynamic modeled data content angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues due missing ability roll back angular", "num": "14186", "d": "1/2017"}, {"title": "redirect page using angularjs expressjs", "body": "im getting uncaught error tried run", "num": "14184", "d": "1/2017"}, {"title": "redirect page using angularjs expressjs", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14183", "d": "1/2017"}, {"title": "ngif upgrade adapter causing component run outside zone", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior using upgrade adapter using ngif components angular runs components outside zone causes gui update bug reported closed fixed still behavior latest version expected behavior expect angular component run zone regardless upgrade adapter without works fine minimal reproduction problem instructions zone lost toggling ngif plunker example click link button test twice second click runs outside zone printed template plunker motivation use case changing behavior working without upgrade adapter work way upgrade adapter please tell us environment chrome angular version browser language typescript", "num": "14182", "d": "1/2017"}, {"title": "aot amp rollup bundles mainjs nothing else", "body": "submitting check one x current behavior buildjs contain project contains entry point mainjs console display errors warning default imported external module rollup never used minimal reproduction problem instructions able compile using aot scriptsaot directory directory contains ngfactory files also able bootstrap appmodulengfactory maints issues import platformbrowser angularplatformbrowser import appmodulengfactory aotappappmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify export default entry scriptsappmainjs dest scriptsappbuildjs output single application bundle sourcemap true sourcemapfile scriptsappbuildjsmap format iife onwarn function warning skip certain warnings function global systemconfig paths paths serve alias npm libs map tells system loader look things map app within app folder app approot appjit approot angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs libraries rxjs npm rxjs angularinmemorywebapi npm angularinmemorywebapi jquery npm jquerydistjqueryminjs moment npm momentmomentjs npm npm textmaskcore libstextmaskcore packages tells system loader load filename andor extension packages app main appmainjs defaultextension js appjit main appmainjitjs defaultextension js rxjs defaultextension js angularinmemorywebapi main indexjs defaultextension js defaultextension js main indexjs defaultextension js main defaultextension js libstextmaskcore main textmaskcorejs defaultextension js main indexjs defaultextension js please tell us environment windows visual studio npm angular version rollup rolluppluginnoderesolve rollupplugincommonjs rolluppluginuglify language typescript xx node aot issues", "num": "14181", "d": "1/2017"}, {"title": "nesting components often breaks layout", "body": "submitting check one x current behavior nesting components causes extra unavoidable dom elements included example creating tablerow component inside table layout table broken due extra elements tr tbody elements widths nt align properly header using attribute directives exactly want also want able include optional nested template expected behavior attribute directives optional templates nt normal used case ca nt see would ever want logical component break exposed html mess css builtins like table structures minimal reproduction problem instructions create table thead tag tbody tag parent container create child container tablerow elements inside add header body data find table nt line expected issues like happen using css libraries like bootstrap well due extra filler component elements breaking relationship parent child elements parent header wider body myrowcomponent motivation use case changing behavior less clutter importantly ability refactor html point without fear changing final result please tell us environment linux visual studio code npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome beta language typescript xx typescript node aot issues", "num": "14180", "d": "1/2017"}, {"title": "aot uncaught referenceerror require function", "body": "submitting check one x current behavior successfully compiling required files carrying tree shaking file loaded indexhtml browsers console comes following error file examined see many references suppose value enforces following excerpt expected behavior build application modules loaded transformed statements ts files somehow brought inline final build application minimal reproduction problem instructions steps reproduce set angular application either angular quick start via done latter following steps angulario instructions angulario first setting following structure setting mentioned docs compiling via cmd nodemodulesbinngc p srctsconfigaotjson creating new specifically aot following lines code rolling using build indexhtml closing tag looks like following serving application use express server loading application browser configured port motivation use case changing behavior quoting docs loading generated application bundle require module loader like systemjs therefore compiler able include imports maybe inline without resorting statements module bundler like systemjs webpack please tell us environment operating system windows package manager npm http server expressjs angular compilercli typescript rollup rollupplugincommonjs rolluppluginnoderesolve rolluppluginuglify angular version browser chrome firefox language typescript node aot issues", "num": "14176", "d": "1/2017"}, {"title": "aot compilation seems ignore main file defined packagejson", "body": "submitting check one x current behavior add dependency run aot compilation anymore normal build without aot still work expected behavior like aot compilation work well minimal reproduction problem instructions see following repository clone repository make sure angularcli installed run run see error saying something like module found error ca nt resolve oidcclientoidcclient copy file one directory run work motivation use case changing behavior sure issue aot compilation library closest came investigation makes think aot compilation information main file packagejson ignored please tell us environment failing macos sierra windows ubuntu angular version language typescript typescript node aot issues", "num": "14171", "d": "1/2017"}, {"title": "custom attribute directive routeroutlet", "body": "submitting check one x current behavior custom attribute directives even simple angular guide example built inside shared module work component rendered routeroutlet another module lazy loaded wich imported former one put directive module component use works normally expected behavior work even built another imported module minimal reproduction problem instructions build directive put shared module build component using custom built directive another module lazy load project rendering component inside routeroutlet directive simply makes effect throws error messages motivation use case changing behavior building directive format currency input reusable component please tell us environment windows microcosft code nodejs ng serve angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "14170", "d": "1/2017"}, {"title": "update documentation system defined", "body": "following cookbook get im using latest angular cli indexhtml looks like loading get locale id somehow documentlocale de lt p gt map text plugin systemconfig map text systemjstextpluginjs launch app systemimport app catch function err consoleerror err", "num": "14169", "d": "1/2017"}, {"title": "replace occurrences value instanceof observable isobservable method", "body": "replace occurrences method merged single way checking types reasoning found occurrence found", "num": "14166", "d": "1/2017"}, {"title": "testing error trying use angularplatformbrowsertestingbrowserutil", "body": "trying use angularplatformbrowsertestingbrowserutil running test core version getting following error karma configurations moduleexports function config var appbase app transpiled app js map files var appsrcbase app app source ts files var appassets baseapp component assets fetched angular compiler testing helpers optional conventionally folder called var testingbase testing transpiled test js map files var testingsrcbase testing test source ts files configset basepath frameworks jasmine jasmine packagejson name typesjasmine version description typescript definitions jasmine license mit author boris yankov theodore brown david p\u00e4rsson main repository type git url scripts dependencies peerdependencies typings indexdts typespublishercontenthash id typesjasmine dist shasum tarball maintainers name types email ryancavanaugh microsoftcom npmuser name types email tsnpmtypes microsoftcom npmoperationalinternal host tmp directories shasum resolved typesjasmine gt lt", "num": "14165", "d": "1/2017"}, {"title": "template reference variable immediately usable template changed checked viewchild", "body": "submitting check one x given template reference variable exists currently defined due wrapped ngif viewchild exists template reference variable siblings referenced element exist bind values dependent referenced element current behavior sibling uses template reference variable directly works expected sibling uses function depends viewchild causes expression changed checked due viewchild undefined first cd run expected behavior viewchild defined sibling bound function evaluated minimal reproduction problem instructions second sibiling present template error thrown upon button click amp app unusable second sibling removed error thrown app continues usable initial toggle motivation use case changing behavior additional factors criteria checks must evaluated performed bind value preferable define wellnamed helper function rather leaving complex criteria template please tell us environment ubuntu intellij idea npm webpackdevserver angular version browser explicitly tested chrome firefox language explicitly tested typescript", "num": "14163", "d": "1/2017"}, {"title": "able aot", "body": "", "num": "14161", "d": "1/2017"}, {"title": "static reflector throw trying simplify extend expressions", "body": "currently static reflector fails cases like looking annotations x superclass chain static reflector fails would preferable throw rather assume extend expressions annotations cc alexeagle", "num": "14154", "d": "1/2017"}, {"title": "closure compiler produces many warnings", "body": "shows travis logs also users try closure bundler get much output really tsickle produce js files shut closure ts ngc responsible checking program closure compiler cc evmar", "num": "14152", "d": "1/2017"}, {"title": "offsettop value incorrect viewchildren windows works fine mac", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "14151", "d": "1/2017"}, {"title": "docs provide solution working text code", "body": "bug report gt search github similar issue pr submitting feature request x support request gt please submit support request instead see current behavior docs show work template via would like recommended way work strings eval code expected behavior maybe language typescript xx angular kitchen sink source regards sean", "num": "14147", "d": "1/2017"}, {"title": "docs providing webpack solution one", "body": "submitting check one x current behavior current docs provided plunkr example shows systemjs solution webpack expected behavior since angular moved webpack doc updated use webpack instead systemjs minimal reproduction problem instructions needed go docs page angular version versions browser language typescript xx ts references docs since big part enterprise applications working box provided toolbox", "num": "14146", "d": "1/2017"}, {"title": "feat support translation google translate via command line", "body": "submitting check one x current behavior currently generate xliff developer find way convert expected behavior would love see ability simply supply google secure token run google translator provide final translation file even better would supply locals es en create file locals executed google translator would awesome browser ios xx safari ios xx uiwebview ios xx wkwebview angular kitchen sink source regards sean", "num": "14145", "d": "1/2017"}, {"title": "animations keyframes ignore delay", "body": "submitting check one x current behavior animations using keyframes ignoring delay time specified expected behavior delay animating minimal reproduction problem instructions plunkr showing angular animation using keyframes straight css version css version waits hides angular version hides delay motivation use case changing behavior worked expected prior version angular version version worked expected exhibits current behavior browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome", "num": "14144", "d": "1/2017"}, {"title": "css comments parse incorrectly causing styles removed", "body": "submitting check one x current behavior component templateurl points html file style tag top comments ex alignitems center boxsizing borderbox using version without problems started using component styles applied expected behavior comments ignored styles added component minimal reproduction problem instructions motivation use case changing behavior creation component please tell us environment windows vs npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14143", "d": "1/2017"}, {"title": "private fields methods", "body": "submitting check one x x bug report gt search github similar issue pr submitting feature request x support request current behavior typescript html expected behavior html thinking private fields methods currently using typescript still use private fields methods view private nt compiled private however private exists would nt make sense view would nt able access private properties methods angular version language", "num": "14142", "d": "1/2017"}, {"title": "select multipe formcontrol fail set value", "body": "submitting check one x link bug current behavior set last value list values expected behavior set values list value minimal reproduction problem instructions use multiple bug without okey", "num": "14141", "d": "1/2017"}, {"title": "feat aio implement jumpnav", "body": "jump nav content list onpage anchors would like investigate could make angular component able search page anchors rather hard coding templates thoughts", "num": "14139", "d": "1/2017"}, {"title": "error enoent file directory open utilsmetadatajson", "body": "angularcli node os angularcommon angularcompiler angularcore angularforms angular angularlanguageservice angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli current behavior expect generate translation file expected behavior getting error minimal reproduction problem instructions repo motivation use case changing behavior expect work", "num": "14138", "d": "1/2017"}, {"title": "router allow suffixes behind parametervariables", "body": "submitting like handle url like angular router current behavior define route lecture idhtml lecture id html activatedrouteparams gets property key named idhtml id html value expected behavior would like route lecture id html url result activatedrouteparams id minimal reproduction problem instructions url browser routes appmodule const approutes routes path lecture id html component lecturecomponent component class lecturecomponent implements oninit constructor private route activatedroute ngoninit thisrouteparamssubscribe params params gt consolelog params motivation use case changing behavior like use nice urls html suffix encourage reassure users okay copy share url", "num": "14137", "d": "1/2017"}, {"title": "ngclass working correctly multiple components one view", "body": "submitting check one x current behavior component ngclass clauses two css classes getting css classes set wrongly using component twice view expected behavior components used multiple times view minimal reproduction problem instructions better understanding start tour heroes part exmaple available plnkr modify reproduce give ngclass like set input variable component using component twice view first component set second one set class missing first component second component correct class set first component empty class field modified tour heroes part exmaple motivation use case changing behavior basically setting right classes needed without loosing class please tell us environment windows vs code angular version browser reproduced chrome edge browser language typescript", "num": "14134", "d": "1/2017"}, {"title": "urlhandlingstrategy amp uirouter", "body": "submitting check one x current behavior proper migration strategy migrating angular uirouter based apps angular expected behavior angular router uirouter run side side minimal reproduction problem instructions motivation use case changing behavior applications build using uirouter intended migrate angular nt good replacement uirouter folks currently working new static upgrade want use angular routing please tell us environment windows visual studio iis angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues", "num": "14133", "d": "1/2017"}, {"title": "wrong date format thai locale", "body": "submitting current behavior use date pipe thth locale something like result wrong \u0e1e\u0e28 buddhist era nt specify era symbol date format expected behavior correct display result please tell us environment angular version browser", "num": "14131", "d": "1/2017"}, {"title": "support arrow functions template syntax", "body": "uncommon component take input transformation function predicate function example pr angularforms adds predicate function determining two options equal right looks something like equals country b country gt return aid bid feature could written places angular material looking add similar api eg datepicker something like autocomplete component needs take arbitrary value know string write text input would account functions multiple arguments functions param names already exist context functions return object literal invoking functions context passing functions pipe fyi mhevery planning", "num": "14129", "d": "1/2017"}, {"title": "proposal aot compiler instructions", "body": "current behavior currently aot compiler strict requires every object involved di metadata resolve symbol aot compiler work strict scenarios even though symbol information required still fail makes difficult write custom decorators angular component classes clear items must resolve known symbol custom decorators class fail even though important also creates coupling compiler core general must know every runtime generated object even type known design time via generic solve compiler workaround import core register bypass decorators see code behaviour make almost impossible customise angular customise jit aot since compiler get instructions resolve symbols dynamic objects experience jit aot different expected behavior allow developers provide instruction compiler best approach would use designtime decorators yet supported microsofttypescript gives user ability provide design time information aot compiler lands workaround remove using webpack loader either via transformers api simple loader removes code places great use case mixins microsofttypescript master really important implementing mixin pattern ts class user export const user restmixin user export type user user amp mixin currently fail included provider actual reason fail since returns type information fails compiler ca nt resolve symbol since dealing complex function restmixin could notify compiler compilation error case telling compiler resolve symbol current code tried via hack worked mhevery tbosch", "num": "14128", "d": "1/2017"}, {"title": "bind multi select option", "body": "anybody tell bind multi select get data database rest using part code edit form foreach categories add property selected template inspect element see angular set value selected nt show user select box item selected wrong nt find kind solution ask hope help", "num": "14127", "d": "1/2017"}, {"title": "generate source maps compiled templates", "body": "upcoming view engine rely source maps reporting source location errors need general support source maps emitters", "num": "14125", "d": "1/2017"}, {"title": "language service crashes asked completions locate angular", "body": "submitting check one x current behavior opening ts project without angular crash language service expected behavior go dormant", "num": "14122", "d": "1/2017"}, {"title": "select html element nt react changes model component code", "body": "submitting check one x current behavior html element nt react changes model like component template therefore initial value proper expected behavior code initialize value html element properly ie listen changes select proper option minimal reproduction problem instructions next code choiceinputviewhtml choiceinputcomponentts import component forwardref input renderer viewchild elementref angularcore import controlvalueaccessor ngvalueaccessor angularforms import lodash import modelstore siomodelmodulestoremodelstore import queryclient siodynamiclistmoduleclientqueryclient import queryresult siodynamiclistmodulemodelqueryresultinterface import replaysubject rxjsreplaysubject import queryrequest siodynamiclistmodulemodelqueryrequestinterface component selector sioformchoiceinput templateurl choiceinputviewhtml providers provide ngvalueaccessor useexisting forwardref gt choiceinputcomponent multi true export class choiceinputcomponent implements controlvalueaccessor protected choices protected selected motivation use case changing behavior want make html element work objects structure without additional effort bindingupdating values side please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "14121", "d": "1/2017"}, {"title": "angulario test plunkrs working", "body": "submitting check one x current behavior navigate link plunkrs work check im using latest version chrome expected behavior plunkrs work minimal reproduction problem instructions navigate appropriate links motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome", "num": "14119", "d": "1/2017"}, {"title": "selected attribute working formcontrol select tag", "body": "submitting check one x current behavior adding selected attribute option tag formcontrol attribute select tag prevents option selected even though dom selected value expected behavior would like selected value set option set select drop minimal reproduction problem instructions motivation use case changing behavior na please tell us environment webstrom mac os npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "14116", "d": "1/2017"}, {"title": "hostbinding nt create compiled active directive", "body": "submitting check one x current behavior directive attached dom via hostbinding decorator seems active ts import component directive elementref hostbinding angularcore directive selector uicolor export class colordirective constructor el elementref elnativeelementstylebackgroundcolor red component selector testcmp template export class testcomponent hostbinding attruicolor color component selector myapp template export class appcomponent two text lines red problem also reproduced modules expected behavior directive active injected via hostbinding decorator minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser language", "num": "14114", "d": "1/2017"}, {"title": "ngplural deal properly russian language", "body": "submitting check one x current behavior cases work properly cases explicitly show matching value case one works properly value cases case works every time expected behavior changing values etc would like make ngplural work case one \u0442\u043e\u0432\u0430\u0440\u0430 \u0442\u043e\u0432\u0430\u0440\u0430 changing values etc would like make ngplural work case one \u0442\u043e\u0432\u0430\u0440 \u0442\u043e\u0432\u0430\u0440 minimal reproduction problem instructions motivation use case changing behavior increase value processing ngplural get wrong declension cases please tell us environment windows intellij idea webpack webpack dev server angular version browser language typescript", "num": "14110", "d": "1/2017"}, {"title": "angularcompiler regular expr work firefox work chrome", "body": "submitting check one x current behavior code selectorjs following var type selectorregexp new regexp w w w g firefox parse regexpr w change w expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14109", "d": "1/2017"}, {"title": "simply running ngc causes abort unhandledpromiserejectionwarning unhandled promise rejection rejection id typeerror righthand side instanceof object", "body": "submitting check one x current behavior trying use aot simply running causes abort ca nt even get kind response beyond trying pass project file via p fails exact error message expected behavior ngc runs prints kind message passing project file p nt work either", "num": "14108", "d": "1/2017"}, {"title": "possible bug angular validation form api", "body": "submitting check one x current behavior write two validation verify value two code works automated test result diferent please look example execute ng serve button id btnmodifypassword enables values example test two components return result execute ng test changepassword component broken test modifypassword component pass minimal reproduction problem instructions motivation use case changing behavior please tell us environment linux mint mate kernel ide webstorm eap npm node angular version browser chrome vers\u00e3o language typescript node aot issues sorry bad english first language", "num": "14105", "d": "1/2017"}, {"title": "datepipe milliseconds", "body": "submitting check one x current behavior google map click unit click unit get data unit rest service get starttoday witch seconds want show hh mm ss starttoday returns get error exception error mapcomponent class mapcomponent inline caused invalid argument nan pipe datepipe original exception invalid argument nan pipe datepipe", "num": "14103", "d": "1/2017"}, {"title": "requestoptions necessary introduced", "body": "submitting check one x current behavior pass options http call ca nt newly introduced replaces deprecated first released wrap object fixed expected behavior able pass options directly without wrapping options angular version browser language", "num": "14100", "d": "1/2017"}, {"title": "angular http post request parameters null", "body": "trying make http request post using code let url myurl let params urlsearchparams new urlsearchparams paramsset tenantid tenantid paramsset branchid branchid paramsset vslogintoken vslogintoken backend using google end points rest services try get parameters values parameters values null issue api problem", "num": "14099", "d": "1/2017"}, {"title": "checking existence route", "body": "submitting check one x motivation use case changing behavior would nice able check url string able get route would match case redirection use case redirecting user language code missing url current behavior language code present prefix url makes sense redirecting user goes gets redirected wanted behavior check route existence prefixing route exists redirect consider first path failed language replace idea would add function something like", "num": "14096", "d": "1/2017"}, {"title": "update rest call response exportable variable", "body": "hi requirement somehow need export dynamicroutes data rest call code trying update dynamicroutes value response rest call achieve please help fix import reflectiveinjector injectable inject angularcore import http response angular import observable rxjs import rxjsrx import urlconfig configurlsconfig export let dynamicroutes injectable class loadroutesservice constructor private http inject urlconfig public urlconfig let consolelog dynamicroutes dynamicroutes", "num": "14093", "d": "1/2017"}, {"title": "loading slow android use lazy loading", "body": "router first load loign component check login redirect devices export const routes routes path component login path login component login path loginsuperadmin component login path devices loadchildren devicedevicemodule devicemodule path slave loadchildren deviceslaveslavemodule slavemodule path admin loadchildren adminadminmodule adminmodule path alarm loadchildren alarmalarmmodule alarmmodule \u5982\u679c\u662f\u4e0d\u5b58\u5728\u7db2\u5740\u9810\u8a2d\u4f7f\u7528 \u88dd\u7f6e\u9801\u9762 path component login loading time pc chrome android chrome ios safari promote loading speed", "num": "14092", "d": "1/2017"}, {"title": "makeparamdecorator incorrectly updating injected parameters inheritance", "body": "submitting check one x current behavior subclasses base component inject different token first param leads incorrect injected value based order metadata parsing class person var malegendertoken opaquetoken new opaquetoken malegendertoken var femalegendertoken opaquetoken new opaquetoken femalegendertoken class male extends person constructor inject malegendertoken gender string class female extends person constructor inject femalegendertoken gender string create male component get value provided femalegendertoken gender property incorrect expected behavior case gender property get value set malegendertoken minimal reproduction problem instructions occurring reflectmetadata return parameters array proto modifying update tokens based position see angular code ideally either reflectmetadata give use clone metadata array make clone inserting values base metadata modified reflectmetadata denied provide immutable array see issue could easily tested unit testcase demo also motivation use case changing behavior created component mostly similar minor difference view handling utilize classic inheritance component please tell us environment os macos ide vs code packaging npm rollup angular version think fixed latest per code brnach would great back port browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "14091", "d": "1/2017"}, {"title": "dynamically created components lifecycle fired correctly", "body": "submitting current behavior parent component generates component based supplied component metadata lifecycle hooks generated component turn generated child component also generates another component firedcalled expected behavior lifecycle hooks defined nested generated components fired minimal reproduction problem instructions reproduction link output hello parent child foo current behavior hello parent child motivation use case changing behavior different kinds modals chart alert pdf viewer one modal displays kind chart like line chart bar chart etc basically parent acts modal component factory child chart modal turn dynamically creates charts based supplied component metadata please tell us environment operating system macos package manager yarn angular cli angular version browser chrome firefox nt tested others language typescript node aot issues", "num": "14090", "d": "1/2017"}, {"title": "error unexpected value formgroup declared module dynamictestmodule", "body": "submitting check one x current behavior karma tests utilize testbedcompilecomponents die error wherever used error trace expected behavior happen minimal reproduction problem instructions one get minimum reproduction link please tell us environment webpack angular version browser chrome language typescript", "num": "14089", "d": "1/2017"}, {"title": "onpush change detection dynamically created components", "body": "submitting current behavior components added dynamically detect input changes example component instantiated runtime via setting property new immutable object trigger change detection instead component must marked check manually rather triggering change detection automatically expected behavior setting property value dynamically created component change detection automatically trigger change detection run following behavior components created template minimal reproduction problem instructions plunker demonstrate changedetectiononpushcomponent detect change input property also related stack overflow question markforcheck workaround motivation use case changing behavior believe may bug push change detection dynamically created components behaves differently static components might expected use case application uses many dynamically created nested components would benefit lightweight onpush change detection angular version browser language typescript xx typescript", "num": "14087", "d": "1/2017"}, {"title": "aot compiler error resolving symbol statically typesmongodb package installed", "body": "submitting check one x current behavior closes error indexdts package installed imported removing package directory fixes problem expected behavior aot compilation fail package installed minimal reproduction problem instructions install package working angular project run tool motivation use case changing behavior ca nt use tool package installed node project please tell us environment windows angular version browser node language typescript node aot issues", "num": "14086", "d": "1/2017"}, {"title": "download excel file web api file corrupt", "body": "submitting bug report believe encountered bug downloading file web api know want plunkr demonstrates problem sure since need web api well code current behavior trying download file created closedxml verified file corrupt reason works minimal reproduction problem instructions web api code return file web service component file downloaded corrupt try access twice size file downloaded expected behavior call api file downloaded fine service code handlesuccess returns responsedata ca nt get code invoke service interestingly enough simply change webservice get wanted post however try got rid service code simply made call file fine appsettingsreportsapiurl reportmonthlyspreadsheet really difference similar code work please tell us environment windows web storem visual studio nuget npm angular version browser sorry produce plunkr hopefully help determine bug seriously think thank karen healey", "num": "14083", "d": "1/2017"}, {"title": "routermodule initialize correctly using upgrademodule", "body": "submitting current behavior upgradets called bootstrap consequence routermodule navigate initial url subscribe location changes caused causing deactivate route navigating route managed expected behavior invoked routermodule navigates initial url subscribes location changes caused deactivates current route changes location minimal reproduction problem instructions trying follow approach documented angularrouterupgradets maints appmodulets const routes routes path component reportissuecomponent path component emptycomponent routes managed ngroute ngmodule declarations appcomponent emptycomponent ngviewcomponent upgraded ngview use appcomponent reportissuecomponent entrycomponents appcomponent imports browsermodule formsmodule httpmodule routermoduleforroot routes upgrademodule providers routerupgradeinitializer export class appmodule suppress automatic bootstrapping ngdobootstrap please tell us environment browser verified firefox chrome bootstrapping issues probably browser related language typescript", "num": "14081", "d": "1/2017"}, {"title": "errorexception form ngsubmit method causes page submitted form fields appended url query params", "body": "submitting check one x current behaviour method called ngsubmit handler throws errorexception causes get request page url form fields appended url query params expected behaviour exception nt cause data sent especially get request least page log error nothing security concern minimal reproduction problem instructions motivation use case changing behaviour security concerns please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome probably language typescript xx typescript node aot issues", "num": "14080", "d": "1/2017"}, {"title": "ngfor creating dom", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior think bug running project using angularcli amp modify code rebuilds amp refresh chrome however browser tab angular app active ngfor generate elements added logging data amp used ngprobe amp found view amp contains data navigate within application away amp back become visible ngprobe expected behavior expected behavior generated data developer console tab works expected make sure closed reproducing minimal reproduction problem instructions want know someone else issues trying boil code parts service observables amp subjects componentview observes amp creates gui items amp push array motivation use case changing behavior simplify debugging forget issue part angular amp code please tell us environment windows visual studio visual studio code angularcli ng serve chrome angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter chrome version angularcli angularcompilercli browser chrome tried chrome language typescript", "num": "14079", "d": "1/2017"}, {"title": "style binding work safari", "body": "submitting check one x current behavior styles get added binded example problem occours safari expected behavior expected work browsers minimal reproduction problem instructions look plunkr google chrome safari notice difference motivation use case changing behavior important works browsers company app please tell us environment macos sierra angular version browser safari language", "num": "14078", "d": "1/2017"}, {"title": "componentfactoryresolver working correctly confusing documents new thing come specific due lot changes", "body": "componentfactoryresolver working expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14077", "d": "1/2017"}, {"title": "hostcontext account global css rules applied parent component", "body": "submitting check one x current behavior defining global css via example top level app component said css taken account selector expected behavior specific reproduction attached would expect backgroundcolor yellow minimal reproduction problem instructions angular version browser", "num": "14076", "d": "1/2017"}, {"title": "documentation formarray accurate", "body": "submitting check one x current behaviordocumentation doc says expected behaviordocumentation motivation use case changing behavior mentioned docs contain also simple relationship trip formgroup gt cities formarray formgroups gt places formarray formgroups gt images formarray formgroups gt cities gt places gt images thistripformcontrols cities push new formgroup id new formcontrol id name new formcontrol name validatorsrequired country new formcontrol country places places places formarray formgroup since amp extend guess constructor also shows expects array amp think really need update docs order clear angulario website", "num": "14075", "d": "1/2017"}, {"title": "usererror tscwrappedtscts cause infinite loop zonejs", "body": "submitting check one x current behavior use newest zonejs testsh node fail usererror get message cause infinite loop expected behavior able get message usererror minimal reproduction problem instructions zonejs version", "num": "14073", "d": "1/2017"}, {"title": "using flexlayout querylist empty ngaftercontentinit", "body": "submitting check one x current behavior using flexlayout inside component contentchildren querylist empty ngaftercontentinit expected behavior querylit contain elements inside content minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14072", "d": "1/2017"}, {"title": "compiler gives misleading error message ngcontent ngcontainer", "body": "submitting check one x current behavior template html resultslength plural found results found one result found resultslength results error expected behavior error clearer missing commonmodule imports", "num": "14070", "d": "1/2017"}, {"title": "documentation testbedoverridemodule", "body": "currently working around bug jasmineangularkarmathe universe using override module causing trouble jasmine tests ngmodule imports declarations providers confirmationservice bootstrap class mockdialog constructor private service confirmationservice describe return file parameter component test gt beforeeach gt testbedconfiguretestingmodule declarations returnfileparametercomponent htmluserfriendlytimepipe dayofweekpipe providers confirmationservice imports confirmdialogmodule overridemodule confirmdialogmodule set mockdialog compilecomponents nt know right feature request documentation currently none least nothing helpful", "num": "14068", "d": "1/2017"}, {"title": "angular version internet explorer systemjs syntax error", "body": "submitting check one x current behavior opening angular application internet explorer get error expected behavior application works chrome firefox would expect work ie well minimal reproduction problem instructions went recreate barebones application see works nt went even basic went look angular quickstart example noticed link quickstart example plunker render internet explorer custom html tag angular application tried copy pasting link ie work either find angular applications work ie motivation use case changing behavior would like application work ie well please tell us environment windows net visual studio npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview ie earlier versions well would guess language typescript xx thank", "num": "14066", "d": "1/2017"}, {"title": "router unnecessarily waits child resolvers building parent component", "body": "submitting check one x current behavior consider parent route child route opening deep link application router wait resolve building parent expected behavior router wait complete building parent route minimal reproduction problem instructions check following code run angularcli using open browser observe following output console opening deep link inserted delay child resolver make behaviour apparent code fixed router behavior correct output would look like motivation use case changing behavior production app parent route listens router events display animation loadingunloading lazy components due current router behavior parent component however get loaded opening deep link application please tell us environment yarn vscode angular version browser language typescript node aot issues", "num": "14064", "d": "1/2017"}, {"title": "aot build failed", "body": "aot build get failed dont clue failing using angular cli project attached packagejson using project anyone clue error internal state staticsymbols summaries ca nt members filepath c ankurprojectinnifrontendclientnodemodules angularformssrcvalidatorsdts name validators members required error srcmaints module found error ca nt resolve gendirappappmodulengfactory c ankurprojectinnifrontendclientsrc srcmaints multi srcmaints error angularcoresrclinkersystemjsngmodulefactoryloaderjs module found error ca nt resolve c ankurprojectinnifrontendclientsrc gendir c ankurprojectinnifrontendclientnodemodules angularcoresrclinker angularcoresrclinkersystemjsngmodulefactoryloaderjs angularcoresrclinkerjs angularcoresrccorejs angularcoreindexjs srcmaints multi srcmaints", "num": "14063", "d": "1/2017"}, {"title": "pipe nt update value inputbox space removed", "body": "submitting bug report current behavior custom pipe formats value input box adds space every characters pipe works like charm till start removing spaces input box eg spaces removed becomes reformatted transform method pipe shows value returned updated input box noticed pipe works fine use within html tag using value mypipe expected behavior value returned pipe update input box even spaces removed minimal reproduction problem instructions find detailed information stack overflow post stackoverflow working example plunkr seems ngmodelchange update model value returned pipe space removed input box angular version browser chrome version language typescript", "num": "14062", "d": "1/2017"}, {"title": "using structural directive dev mode leaks dom nodes", "body": "submitting check one x current behavior using directive like provides dom nodes leaks expected behavior rise error adding directives prevent unexpected leaks minimal reproduction problem instructions start timeline record click toggle list times collect garbage view memory graphs motivation use case changing behavior undocumented unclear thing results many issues even adding case documentation clear simple forgot things try use like compiler throw error case prevent unsafe usage angular version", "num": "14061", "d": "1/2017"}, {"title": "canactivate runs always even candeactivate target yet resolved true", "body": "two routes one candeactivate second canactivate setup like navigating campaigneditorcomponent campaigndetailscomponent campaigneditorcomponent yet resolved true returning campaignguards canactivate method run anyway behaviour design expecting router try run future activations current deactivations resolved true update added plunker example", "num": "14059", "d": "1/2017"}, {"title": "component routerlinks", "body": "shared module imported lazy loaded modules viz projects module store module approutingts file root routes declarations contents menu component contains appwide links major sections app like projects store want menu part lazy loaded modules works used selector root component routes work fine expected dont want menu shown everywhere work moved menu component shared module imported declared exported shared module imported projects module use selector show menu works fine links dont work app works fine even routes work typing browser clicking menu component links note internal links projects module store module work fine work imported approutingts shared module instead rootappmodule throw error cant find projects module could resolve appprojectsprojectsmodule codeweektweaksrcappapproutingts", "num": "14058", "d": "1/2017"}, {"title": "formcontrol instance attached form control element name xxx", "body": "submitting check one x current behavior using reactiveforms override old form group new one using example error occurs error mentioned title error seen console expected behavior error happens minimal reproduction problem instructions error seen seconds used set timeout example error visible console motivation use case changing behavior understand best way use form groups check already created create necessary however bug indicates concluded stacktrace control setup nt work cleaned case problem occurs angular cleanupcontrol function sets change callback handler handler throws error setupcontrol function angular calls write value registers callback handler means last handler remembered custom control cleanupcontrol handler throws error functions setupcontrol cleanupcontrol found please tell us environment project setup using angularcli nt really affect problem change setup angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome firefox reproduce problem language typescript xx typescript node aot issues", "num": "14057", "d": "1/2017"}, {"title": "input performance issue large arrays", "body": "submitting current behavior binding large array input component causes serious performance issue case using function expected behavior input performant way getting data eg via service minimal reproduction problem instructions take component would visually suffer poor performance add input bind array elements input see case building virtual list using service component working perfectly billion items array using input component starts noticeably unresponsive thousands items array already tried disable change detector triggering calculations using still noticeable improvements would interested learn cause behind slowness motivation use case changing behavior performance please tell us environment windows angular version", "num": "14056", "d": "1/2017"}, {"title": "respect locale default pipes", "body": "submitting check one x current behavior number date currency formats incorrect germany expected behavior number date currency pipes respect browser locale default examples german date format ddmmyyyy hh mm ss german number format dot separates thousends comma decimal places german curreny format eur note number format currency symbol placing minimal reproduction problem instructions use pipes german application motivation use case changing behavior wrong format forces us replace pipes every application please tell us environment ng webstorm ng cli angular version browser language typescript node aot issues", "num": "14055", "d": "1/2017"}, {"title": "void foreign elements self closed error jit compiler", "body": "submitting check one x current behavior trying load translated xliff file get following exception using jit compiler notice error saying void foreign elements self closed x expected behavior compilation succeed least get meaningful error message minimal reproduction problem instructions transunit mentioned error one translation \u05ea\u05e8\u05d2\u05d5\u05dd \u05dc\u05d1\u05d3\u05d9\u05e7\u05d4 \u05e2\u05dd motivation use case changing behavior please tell us environment angular version browser chrome language typescript node aot issues", "num": "14054", "d": "1/2017"}, {"title": "named outlet registered dynamically", "body": "submitting check one x current behavior trying create named outlet inside one component dynamically registered error find outlet tabs load tabsdeacomponent information expected behavior outlet registered create issue minimal reproduction problem instructions motivation use case changing behavior get work easily true motivation please tell us environment windows vs code angularcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview every browser language typescript xx typescript node aot issues related", "num": "14051", "d": "1/2017"}, {"title": "aot compiler recognize type window possibly issue global variables andor typescript builtin libs", "body": "submitting check one x current behavior following would fail export function getwindow return window ngmodule declarations appcomponent simpleroutecomponent imports browsermodule formsmodule httpmodule approutingmodule providers provide window usefactory getwindow bootstrap appcomponent export class appmodule constructor inject window w window consolelog w error error error encountered resolving symbol values statically could resolve type window position original ts file resolving symbol appmodule usersmeligycodegithubmeligyroutingangularclisrcappappmodulets expected behavior expect aot compiler able understand minimal reproduction problem instructions create new app using latest angular cli go modify add shown run motivation use case changing behavior want able test places happen use still want type safety calls please tell us environment mac os latest running returns things note type declared default typescript lib libs already added default project default angular cli layout also tried reference file directly several ways nt seem help please note code works fine using aot works fails equals angular version angular shown browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome error comes terminal anyway language typescript xx typescript node aot issues node", "num": "14050", "d": "1/2017"}, {"title": "aot error error encountered resolving symbol values statically function calls supported consider replacing function lambda", "body": "environemtn ngularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli problem running nodemodulesbinngc p srctsconfigjson getting following error something side angular side say much error", "num": "14048", "d": "1/2017"}, {"title": "ngc translation merging chokes messages frameworks ca nt parse", "body": "xmbxtb potentially contain messages added angular extraction cases multiple frameworks add messages xmb ex ngc chokes following message added different framework regioncount plural unused plural form region regions submitting check one x current behavior ngc message merging fails error expected behavior ngc successfully able merge translations without errors", "num": "14046", "d": "1/2017"}, {"title": "add ngmodule support ngcomponentoutlet", "body": "", "num": "14043", "d": "1/2017"}, {"title": "add sample repos plunkers docs", "body": "submitting current behavior many documentation articles advanced cookbook section angulariodocs describe build particular angular app give sample repository plunker demonstrates app desired behavior documentation articles would link repo plunker similar ones linked quick start documentation eg motivation use case changing behavior would make much easier try concepts described documentation", "num": "14042", "d": "1/2017"}, {"title": "large angular app slow runs fine chrome firefox", "body": "current behavior app slow initial app load takes seconds expected behavior speed closer chrome firefox times slower minimal reproduction problem instructions windows webstorm gulp build lazy routing angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node", "num": "14041", "d": "1/2017"}, {"title": "unable access components instance via local variable", "body": "submitting check one x current behavior accessing local components instance inside dynamically added component nt work ie load component inside ngswitch want reference components instance local variable however nt seem work expected behavior able access local components instance minimal reproduction problem instructions click access foo button see inner instance foo component logged outside ngswitch accessed motivation use case changing behavior guessing caused way ngswitchcase desugar template tag however obvious case looking html structure expect able create local variable reference anywhere else components template please tell us environment na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues na", "num": "14038", "d": "1/2017"}, {"title": "router event lazy loaded route", "body": "submitting check one x current behavior route lazy loaded using preloading strategy currently way knowing route loaded expected behavior would really useful router event eg would trigger lazy loaded route preloaded minimal reproduction problem instructions motivation use case changing behavior use case angular app perform action route loaded case constructing multilevel navigation menu preload routes level opened routes preloaded navigation must updated order include new routes list", "num": "14036", "d": "1/2017"}, {"title": "activate gaurd lazily loaded module creating new instance service first load lazy module", "body": "submitting check one x x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see lazily loaded module appcontainerservice provider protecting route also lazily routed import ngmodule angularcore import routermodule angularrouter import import appcontainerservice import const routes routermoduleforchild path component children path loadchildren canactivate ngmodule imports routes exports declarations providers appcontainerservice export class requesting instance appcontainerservice constructor import component oninit injector angularcore import appcontainerservice component selector templateurl styleurls export class implements oninit constructor conatainer appcontainerservice ngoninit gaurd also requesting instance appcontainerservice constructor import injectable injector angularcore import canactivate activatedroutesnapshot routerstatesnapshot angularrouter import appcontainerservice injectable export class implements canactivate import component oninit angularcore import appcontainerservice component selector templateurl styleurls export class implements oninit constructor private container appcontainerservice ngoninit current behavior navigating first time instance appcontainer service created expected naviagting new instance appcontainerservice created shouldnt case appcontainerservice instance already created injected within child injector also within provider updating anything appcontainer gaurd reflected appcontainer instance problem doesnt occur first time navigation subsequent navigation appcontainer service created shared gaurd different note gaurd service created first time routing subsequent navigation new instances gaurd created please tell us environment windows node angular version angularcli browser language typescript", "num": "14035", "d": "1/2017"}, {"title": "runtimecompiler availability aot", "body": "per following issue compiler available aot available near future upcoming releases angular regards vasuneet arya", "num": "14034", "d": "1/2017"}, {"title": "provide one time binding possibility better performance", "body": "many use cases need render elements according first initial value without need observe changes would great would ability make one time bindings", "num": "14033", "d": "1/2017"}, {"title": "testing setup working", "body": "submitting bug report navigated testing guide angular clicked setup instructions motive create first testing application find error seems strange current behavior getting found expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14032", "d": "1/2017"}, {"title": "canload returns false initial page load routes nt recalculated", "body": "submitting check one x current behavior canload returns false url reset route goes nt called expected behavior canload returns false url reset route goes called minimal reproduction problem instructions root route setup steps taken type url canload guard returns false route reset nothing else happens motivation use case changing behavior fix need add routernavigate step inside guards would better route reset also excecuted route setup redirect login happen instead angular version", "num": "14031", "d": "1/2017"}, {"title": "modules loaded twice", "body": "submitting x bug report modules loaded twice angular version latest angularrouter latest reproduction problem sample modules loaded changing routes example repo issue logs modules class constructor displayed twice", "num": "14030", "d": "1/2017"}, {"title": "regexp bug since angular", "body": "submitting check one x current behavior since angular bug angular bootsrap firefox expected behavior regexp throw syntaxerror invalid range character class error firefox minimal reproduction problem instructions replay plunker demo according pullrequest seems introduce bug minimal script reproduce firefox according modules angularcompilersrcselectorts motivation use case changing behavior xulrunner understand subset firefox last compatible release supported eclipse marsneon embed firefox runtime eclipse product firefox works well angular webpack nt know systemjs actually angular last compatible release angular embedded firefox runtime eclipse product please tell us environment replay problem firefox operating system matter angular version browser firefox language node aot issues matter", "num": "14029", "d": "1/2017"}, {"title": "problem pattern validation", "body": "submitting current behavior pattern validation related field named email checking pattern az works times type adfsaf dafsdfcom match pattern match expected behavior checking regex az page check previous example adfsaf dafsdfcom doesnt match pattern angular match pattern minimal reproduction problem instructions code xcomponentts thismyform new formgroup nombre new formcontrol validatorsrequired email new formcontrol validatorspattern az code xcomponentts nombre completo motivation use case changing behavior please tell us environment ubuntu visual studio code angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview google chrome version language typescript node aot issues", "num": "14028", "d": "1/2017"}, {"title": "may bug manually trigger change detection workeronmessage", "body": "submitting bug report current behavior question stackoverflow create plunker demo use three methods trigger change detection applicationreftick changedetectorrefdetectchanges work well expected behavior demo add tab click list background change minimal reproduction problem instructions plunker demo motivation use case changing behavior use angular material tab group please tell us environment enterprise vs code npm liteserver angular version browser chrome language typescript node aot issues", "num": "14027", "d": "1/2017"}, {"title": "selector ngcomponent match elements error", "body": "submitting bug related current behavior app works fine running systemjs directly tried build globalsbundlejs appbundlejs using webpack deploy get error expected behavior work webpack show demo minimal reproduction problem instructions follow guide setup webpack replace component selector router build webpack deploy run get error tested systemjs using webpack issue plunkr though happens webpack build local environment reproduce plnkr stackoverflow please tell us environment angular version browser language typescript node aot issues", "num": "14026", "d": "1/2017"}, {"title": "router article high chapater run", "body": "hello master read chinese version page url compile file error change file crisisdetailresolveservicets export class crisisdetailresolve implements resolve compiledbut runtime error error one error template parse errors unexpected closing tag label name error crisisdetailcomponent unexpected closing tag div name save crisisdetailcomponent unexpected closing tag div cancel error gt crisisdetailcomponent error end sorry solve problem angular beginnerso could solve thank fix send one message email much best mark submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "14025", "d": "1/2017"}, {"title": "url query parameters changing chrome", "body": "url changed chrome change firefox chrome fix application code routes const approutes routes path search component resultscomponent path component indexcomponent", "num": "14024", "d": "1/2017"}, {"title": "little uncertainty documentation router routerlinkactive", "body": "submitting possible documentation error docs page angulario says also set routerlinkactive directive string classes bind component property returns string know takes property component literal variable know report issues report", "num": "14023", "d": "1/2017"}, {"title": "using coremoduleforroot compiler bring dependent providers", "body": "submitting check one x current behavior anytime dynamically create module using include imports dependent module implements providers dependent module brought receive errors expected behavior anytime used dynamically create new component uses module implements provides also included dependency chain minimal reproduction problem instructions seen using module implements follows notice declaration dynamically create module using render element created complains following thinking issue ignores declaration following code illustrates would problem import ngmodule compiler component componentfactory viewcontainerref viewchild angularcore let find require lodashfind import datepickermodule export class formioelement implements oninit viewchild formioelement read viewcontainerref element viewcontainerref constructor private compiler compiler ngoninit really provided config put inline demonstration ngmodule imports datepickermoduleforroot class dynamiccomponentmodule motivation use case changing behavior would expect providers supplied dependency would get pulled dynamically creating module please tell us environment macosx webstorm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx node aot issues", "num": "14022", "d": "1/2017"}, {"title": "sourcemap path current bundle nt formed properly", "body": "submitting check one x current behavior sourcemaps added angular bundle perspective wrong directory sourcemaps currently included latest release fresh npm install example causing unexpectedincorrect path displayed debugging tools expected behavior sourcemap paths start npm repository base directory case path start resulting path similar version file compilerjs sourceroot sources srclinkercompilerts names minimal reproduction problem instructions create new project angular cli modify file replace note quickly include sourcemaps angularcore run open served page chrome use developer tools gt sources tab result using webpack files appear instead motivation use case changing behavior debugging angular codebase context cli project assuming whenever using webpack please tell us environment osx vscode npm webpack dev sever angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome nt tried others language typescript xx typescript node aot issues angularcli node os linux angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli also note believe webpack may issues sourcemaps plugin scoped npm packages anything usernameproject placing sources correct location even sourcemaps corrected", "num": "14021", "d": "1/2017"}, {"title": "templates disallow unescaped braces even changing interpolation delimiters", "body": "submitting check one x current behavior interpolation delimiters changed unescaped template still throws error including expected behavior allowed templates interpolation delimiters changed minimal reproduction problem instructions motivation use case changing behavior one would normally change interpolation string one needs something else eg latex syntax uses heavily please tell us environment angular version browser language typescript", "num": "14019", "d": "1/2017"}, {"title": "using testbedoverridecomponent webpack angularcli effect", "body": "submitting check one x current behavior use testbedoverridecomponent component set template xyz testbedcreatecomponent appcomponent component renders original template instead xyz expected behavior would expect would render template override minimal reproduction problem instructions sample test spec import testbed async angularcoretesting import appcomponent appcomponent import xyzmodule xyz impott xyzcomponent xyz import approutes approutes import httpmodule angular import formsmodule angularforms import browsermodule angularplatformbrowser import appbasehref angularcommon describe appcomponent gt let fixture let app beforeeach async gt testbedconfiguretestingmodule declarations appcomponent imports browsermodule formsmodule httpmodule xyzmodule approutes providers provide appbasehref usevalue motivation use case changing behavior isolate component testing testing components rendered children another component please tell us environment windows using angularcli angular angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview using phantomjs tests nt expect would matter language typescript xx using typescript node aot issues node", "num": "14016", "d": "1/2017"}, {"title": "angular language service error error angular directive annotation found", "body": "current behavior using language service getting error see attached image code expected behavior errors", "num": "14015", "d": "1/2017"}, {"title": "tracking view engine", "body": "new view engine allows codegen produce less code interpret view definitions runtime parts x source map support x source map support typescript files tsickle", "num": "14013", "d": "1/2017"}, {"title": "split angular repo respective namespaced npm modules", "body": "submitting check one x current behavior angularangular github one repo publishes many different npm modules namespaced expected behavior split module core common github repo make truly modular minimal reproduction problem instructions na motivation use case changing behavior makes discovering code easier manage newcomers issue queue would simpler review please tell us environment angular version browser na language node aot issues", "num": "14012", "d": "1/2017"}, {"title": "error occurred angular application embed webcomponent", "body": "submitting check one x current behavior error occurred angular application embed webcomponent try embed angular inside web component adapted example error root document webcomponent document obtained documentcurrentscriptownerdocument webcomponent expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "14011", "d": "1/2017"}, {"title": "extraction failed template specified component", "body": "submitting check one x current behavior use extract translation source file templates throws template specified component template imported ambient ts module import template templatehtml component selector mycomponent template template export class mycomponent similar issues importing styles module error expected styles array strings declared wildcard ambient module matching html template file works well classic jit tsc compiler using systemjs module loader tsconfigjson expected behavior importing template string module resolved inline template minimal reproduction problem instructions motivation use case changing behavior importing templates string module advantages keeps template html separate developing making possible profit ide features template editing easy bundle templates js modules production use please tell us environment angular version browser language typescript node aot issues", "num": "14010", "d": "1/2017"}, {"title": "way handle media queries animation", "body": "submitting check one x facing problem want run different enter transitions depending width screen angular animation based css classes really easy accomplish different transition rules depending media queries simply something like scss sass ngenter transform translatex amp ngenteractive transform translatex media maxwidth ngenter transform translatex slide right small devices also positioningcss etc close parts styling easy match pixel numbers etc css declarations angular animation api currently see downsides ca nt use media queries combinations pseudo classes impossible replicate eg hover mouseenterleave listeners etc see ca nt put css files use designers nonprogrammers want tsjs harder find animation declared could typescript css feature request dealing primarily potentially others well see following solutions come kind syntax adding media query abilities along lines maybe something like states mapped css classes well thereby allowing users choose put animation logic ie something like done automatically would nt write tsjs nt want could like angular use outer element bind inner element via ngif add classes outer element use css transitions possible today applicable css context allow nest extra elements use javascript calculate state possible today cumbersome thoughts personally prefer think allows freedom solves bullets recommend thoughts downsides angular version", "num": "14008", "d": "1/2017"}, {"title": "using perspective animations results partial keyframes exception", "body": "submitting check one x current behavior animating ngif perspective values nt change angular throws partial keyframes supported exception seems occur chrome existing animation interrupted example ngif gets changed animation complete nt seem occur perspective specified expected behavior animate without exception minimal reproduction problem instructions motivation use case changing behavior please tell us environment seems occur chrome use chrome mac repro angular version browser chrome language", "num": "14007", "d": "1/2017"}, {"title": "unhandled routes wild card routes working routerresetconfig", "body": "hi able add new routes dynamically routerresetconfig facing issue unhandled routes worked well adding routes dynamically code reference import ngmodule angularcore import routermodule routes activatedroute provideroutes router angularrouter import errorcomponent errorerrorcomponent let routes routes path redirectto home pathmatch full path home loadchildren dashboarddashboardmodule dashboardmodule working fine place path component errorcomponent dynamically added routes let tpgroutes path mytpg loadchildren mytpgmytpgmodule mytpgmodule let errroutes path component errorcomponent working let newroutes routesconcat tpgroutes ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule constructor private router router routerresetconfig newroutes please help fix note clear point router selects route first match wins strategy wildcard routes least specific routes route configuration sure last route configuration", "num": "14006", "d": "1/2017"}, {"title": "compilercli change references ngmodule ngmodulefactory buildtime", "body": "submitting check one x current behavior discussion pr let wrap discussions possible encapsulate routes feature module like js import routes routermodule preloadallmodules angularrouter import homecomponent homehomecomponent import profilemodule profileprofilemodule export function loadprofilemodule return profilemodule export const routes routes path component homecomponent pathmatch full path profile loadchildren loadprofilemodule export const routing routermoduleforroot routes turn child routes well nt meant lazy loading way letting profile module decide routing internally done however currently feature usable aot reason pointed dzmitryshylovich aot return module factory instead module like js import routes routermodule preloadallmodules angularrouter import homecomponent homehomecomponent import profilemodulengfactory compiledsrcappprofilemodulengfactory export function loadprofilemodule return profilemodulengfactory export const routes routes path component homecomponent pathmatch full path profile loadchildren loadprofilemodule export const routing routermoduleforroot routes currently requires manual steps another build tool change references expected behavior guess perfect fit instead manual process another gulpnpm task minimal reproduction problem instructions created quick example run notice navigate back uses approach mentioned initial post build output production bundle directory navigate directory start local server open url open devtools click fail load shows error rcreate function motivation use case changing behavior would possible would make life developers targetting production aot lot easier would actually make feature usuable currently nt feel usuable manual steps performed order use either nt use compiling aot nt compile aot please tell us environment macos vs code npmyarn angular version browser language typescript node aot issues", "num": "14005", "d": "1/2017"}, {"title": "core api implementing renderer requires types private exports", "body": "submitting check one x current behavior abstract method abstract class defined using types available though private exports namely expected behavior types implement public required minimal reproduction problem instructions define typescript angular module module implement provide injectable service custom implemention typescript compiler refuses compile without method trying add issue occurs motivation use case changing behavior public api although experimental implementing makes lowlevel dom adjustments possible sometimes essential use together thirdparty component libraries custom implementation achievable without importing animation types mentioned private core exports please tell us environment angular version browser language typescript", "num": "14001", "d": "1/2017"}, {"title": "ca nt bind ngpluralcase since nt known property template", "body": "current behavior using updated ngpluralcase directive throw exception expected behavior component render without errors minimal reproduction problem instructions issue supposedly fixed swapping via example commit appears generate error demonstrated plnkr import platformbrowserdynamic angularplatformbrowserdynamic import component ngmodule angularcore import browsermodule angularplatformbrowser component selector myapp template styles class appcomponent ngmodule imports browsermodule declarations appcomponent exports appcomponent bootstrap appcomponent class appmodule platformbrowserdynamic bootstrapmodule appmodule also worth noting docs still refer please tell us environment angular version browser chrome language typescript", "num": "14000", "d": "1/2017"}, {"title": "input change event bubbling custom component change event", "body": "submitting check one x current behavior custom component exposes event named component contains reactive form turn holds node whose event bound handler input loses focus eg user types tabs clicks away custom component event fired receiving js object passed argument totally unrelated type seems like inner input change event bubbling gets caught handled custom component change event expected behavior input loses focus input change event caught custom component custom change event fire unexpectedly unwanted arguments minimal reproduction problem instructions see plunk anyway enough define custom component wrapping input define output event custom component bind custom component change event external handler type input let input lose focus motivation use case changing behavior like able name change event custom component something else like way change name also used official angular tutorial custom component please tell us environment matter case win npm angular version browser tried chrome language typescript node aot issues tried searching web reserved event names instead found official doc page using name custom component tried searching among issues anything similar easy refine search terms like change event first result pages could find anything", "num": "13997", "d": "1/2017"}, {"title": "cli unable build storemoduleprovidestore", "body": "submitting updating cli getting error appmodulets found similar issue could nt figure building using without aot flag", "num": "13996", "d": "1/2017"}, {"title": "angular requires zonejs prolyfill", "body": "getting error saying however define zonejs fine indexhtml file suggested bug reported drew demo site sure sure going ide fills test type making think path correct double check still gives wondering deeper issue post project git pull complains asset file make go away error show", "num": "13995", "d": "1/2017"}, {"title": "instantiate abstract component possible", "body": "submitting check one x current behavior create abstract component class possible instantiate semantically nt normal able instantiate abstract class expected behavior create instance abstract class component minimal reproduction problem instructions see plunkr angular version language typescript xx", "num": "13994", "d": "1/2017"}, {"title": "forms throw error two ngmodels appear form name", "body": "bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior currently error warning two form controls name expected behavior forms throw error duplicate names detected motivation use case changing behavior leads unpredictable results value overwrites difficult find angular version browser language", "num": "13993", "d": "1/2017"}, {"title": "dynamic lookups", "body": "submitting check one x logging feature request support dynamic lookups current behavior tell current approach target elements static reference markup eg expected behavior one challenges see building data driven ui translations come world uncommon loop list language keys lookups resolve translated values clear replicate behavior using angular would nice allowed us specify keys based data binding instead hard coded references markup example looks like ability set keys added thinking key perfect lookup would need generated based bindings would also assume allowed manually create xlf file instead relying compiler cli tool generate list keys could potentially come api would fixed list would way generator know set runtime still think made compatible aot would require one level indirection translation lookup though instead could maybe motivation use case changing behavior motivation flexible translation experience angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13990", "d": "1/2017"}, {"title": "number pipe thousands separator", "body": "submitting check one x current behavior number pipe currently support setting thousands separator far know localeid set dede case expected behavior formatted number display thousands separator option set eg extending pipe format could trick minimal reproduction problem instructions motivation use case changing behavior please tell us environment macos sierra angular version browser chrome language typescript node aot issues node", "num": "13988", "d": "1/2017"}, {"title": "type literal property initializer nested model fields", "body": "submitting check one x current behavior address street string string gives following error type literal property initializer expected behavior able initialize nested model fields minimal reproduction problem instructions create typescript file model something like address street string motivation use case changing behavior need bind empty model form another good option would using elvis operator two way binding mymodeladdress street another bug please tell us environment angular version using beta build browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13986", "d": "1/2017"}, {"title": "conditionally lazyload module without route change", "body": "submitting feature request behavior need way conditionally lazyload module without route change example page user action want lazyload module insert extra stuff main application module file another example user logged based role want add extra stuff main application services etc could find way motivation use case changing behavior feature possible wo nt get ugly conditional code executing functions need load scripts nt need would convenient angular version", "num": "13984", "d": "1/2017"}, {"title": "const variablename value causing error reference local nonexported symbol variablename", "body": "submitting check one x current behavior error compilation running showing error started angular previously version still working fine miss something expected behavior code compile fine errors minimal reproduction problem instructions file contain constant values import opaquetoken angularcore import translations import langenname langentrans langen import langidname langidtrans langid translation token export const translations new opaquetoken translations translations const dictionary langenname langentrans langidname langidtrans providers export const translationproviders provide translations usevalue dictionary file imported added providers section import translationproviders translate ngmodule declarations imports providers translationproviders bootstrap appcomponent export class appmodule motivation use case changing behavior applicable guess please tell us environment angularcli node os darwin angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview applicable language typescript xx typescript node aot issues", "num": "13983", "d": "1/2017"}, {"title": "wrong formatted class selector component throws error version", "body": "submitting check one x current behavior angular select component class selector way aware proper way never issue version throw error expected behavior know written class selector wrong way whole time think might good maybe make notice something people might run problem find proper solution easily minimal reproduction problem instructions version version open console see error message motivation use case changing behavior well would nt mind previous behavior would implemented since nt proper way define class selector think good idea implement please tell us environment angular version works throws error browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13982", "d": "1/2017"}, {"title": "preprocess html templates using components", "body": "submitting check one x current behavior templates components html text expected behavior would like write templates preprocessed template engine minimal reproduction problem instructions would nice write templates like component templateurlparsed componenthtml buttondeco class btn btnsecondary btndanger type button poor example template language shows principle buttondeco inserted places motivation use case changing behavior writing less text cases solution easier factoring code components please tell us environment angular version browser language node aot issues", "num": "13981", "d": "1/2017"}, {"title": "routerlink value remove attribute link", "body": "motivation use case changing behavior currently null empty value passed adds current page value link useful lot usecases disabled links navigate anywhere attribute would useful nullempty value support results attribute link prevent navigationlink copying", "num": "13980", "d": "1/2017"}, {"title": "form ngif nt effects content tag", "body": "submitting check one x current behavior ngif removes complete tree element containing ngif false expected behavior directive conditionally switches element contains directive minimal reproduction problem instructions would like write something like depending dom would motivation use case changing behavior conditionally write enclosing elements please tell us environment angular version browser language node aot issues", "num": "13979", "d": "1/2017"}, {"title": "use formcontroldirective standalone formcontrols", "body": "submitting check one x current behavior want bind reactive forms dom element use formcontrolname expected behavior want able bind form controls formgroup dom element using formcontrol directive api reference says syncs standalone formcontrol instance form control element want use standalone formcontrols minimal reproduction problem instructions code want write motivation use case changing behavior want pass formcontrol component component need know formgroup formarray formcontrol child please tell us environment angular version browser language node aot issues", "num": "13978", "d": "1/2017"}, {"title": "question template parse errors routeroutlet known element", "body": "submitting check one x current behavior create project using angularcli running application occured error unhandled promise rejection template parse errors routeroutlet known element expected behavior run normally minimal reproduction problem instructions clone via please tell us environment use angularcli tool webpack angular version browser language typescript node aot issues", "num": "13977", "d": "1/2017"}, {"title": "angular language service missing extra close gt", "body": "current behavior error expected behavior show error minimal reproduction problem instructions add extra closing happen several times would put extra closing tag got weird errors great language service detect matching open close report mismatches", "num": "13975", "d": "1/2017"}, {"title": "template variable accesible validation using", "body": "submitting check one x current behavior dynamically creating group radio buttons using creating template variable pointing instance directive validation variable never set export class appcomponent genders male female executing code get following error browser console plunker expected behavior template variable defined able used validation instead using generate group radio buttons hardcode options app works export class appcomponent plunker minimal reproduction problem instructions see plunker motivation use case changing behavior able standard way handle validation using hardcoding options please tell us environment plunker angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome macos sierra language typescript xx typescript node aot issues", "num": "13974", "d": "1/2017"}, {"title": "http create blob arraybuffer", "body": "submitting check one x current behavior currently setting content http request arraybuffer applicationoctetstream http header module wraps array buffer blob due line expected behavior http module sends xmlhttprequest using arraybuffer rather modifying minimal reproduction problem instructions send http request using http module arraybuffer body request header set contenttype applicationoctetstream motivation use case changing behavior implementation xmlhttprequestsend may behave differently based whether argument arraybuffer blob recently faced issue internet explorer caused passing blob xmlhttprequestsend xmlhttprequest network error error occurred seek operation issue occur arraybuffer arraybuffer wrapped blob http module angular version browser proposal change", "num": "13973", "d": "1/2017"}, {"title": "failures compiling templates inherited components", "body": "submitting current behavior create external template component extends base component uses templateurl add components template imported module declared base component compilation fails template parse errors indicate added components known elements way discovered root problem take look angular source code understand behavior angular compiler jitcompiler failing tries compile base component even though selector included template change templateurl component extends base component different path compilation fails found templateurl base component expected behavior would expect jitcompiler try compile ahead time templates component selectors used application also expected error messaging indicated problem related base component templateurl motivation use case changing behavior creating abstract component library provides support clients differing template requirements two examples would web angular material mobile nativescript would like maximize encapsulation common component service behavior library enable others customize apps built library editing set provided templates goal minimize amount complexity exposed template authors much possible please tell us environment macos sierra vs code angular cli angular version browser chrome language typescript library built ngc node aot issues", "num": "13971", "d": "1/2017"}, {"title": "validation issue attributes starting ngreflect", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13969", "d": "1/2017"}, {"title": "ngfactory files replaced ngsummaryjson files running nbc", "body": "submitting bug report might related issue current behavior upgraded angular ngfactoryts files longer created get ngsummaryjson files however still using typescript aot rollup change famous last words update angular expected behavior still generate ngfactoryts files minimal reproduction problem instructions unfortunately ca nt share repository upgrade angular please tell us environment windows studio angular version browser language typescript node v npm v conditions cause ngsummaryjson files generated place ngfactoryts files errors except find module appappmodulengfactory byproduct actually generating ngfactoryts files", "num": "13968", "d": "1/2017"}, {"title": "datepipe displaying hours incorrectly", "body": "hello got bug formatting date object datepipe format correct hours displayed incorrectly actually display hours less ex displayed first image ionic app demo second one sql table showing data", "num": "13967", "d": "1/2017"}, {"title": "unable select default value one drop rendering primeng datatable column", "body": "appcomponenthtml crud cars ivalue amp amp countnum lt callme vin appcomponentts import component input angularcore import car carscar import carservice carscarservice import selectitem primengprimeng class primecar implements car constructor public vin public year public brand public color component templateurl appappcomponenthtml selector myapp export class appcomponent set ready isready boolean isready consolelog hello showdialogtoadd thisnewcar true thiscar new primecar thisdisplaydialog true rendered primeng datatable column drop downs observe code trying select default value drop drop default selected value audi drop default selected value bmw successful please help", "num": "13966", "d": "1/2017"}, {"title": "load scripts angular", "body": "building webapp using external html template components template needs run scripts load correctly page script tags like allowed angular components include script tags page loads fine first time route another page scripts reloaded component template page remains blank another way load scripts solve issue indexhtml appmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import routing approutingmodule import appcomponent appcomponent import homecomponent homehomecomponent import logincomponent loginlogincomponent ngmodule declarations appcomponent homecomponent logincomponent imports browsermodule formsmodule httpmodule routing providers bootstrap appcomponent export class appmodule approutingmodulets import routes routermodule angularrouter import homecomponent homehomecomponent import logincomponent loginlogincomponent const routes routes path login component logincomponent path home component homecomponent path component logincomponent path component logincomponent export const routing routermoduleforroot routes appcomponentts import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent appcomponenthtml", "num": "13965", "d": "1/2017"}, {"title": "could resolve", "body": "submitting check one x current behavior fresh install angular project using angularcli ng new expected behavior watch nt work ng serve displayed could resolve minimal reproduction problem instructions new installation motivation use case changing behavior hot reload nt work please see attached image please tell us environment angular version angularcli angularcore windows pro ram powershell full admin browser chrome language typescript xx node aot issues", "num": "13964", "d": "1/2017"}, {"title": "given test suite compile components", "body": "submitting check one x current behavior looking code testbed appears recompile classes specified every test spec checks true immediately resolves promise uses ensures false compile run seems happen every spec expected behavior would think given suite testbed configuration compilation happen obviously objects recreated specs nt understand logic recompiling everything motivation use case changing behavior compilation take significant time perform per suite would seem provide big speed increase especially large numbers suites suites lots specs angular version browser language typescript", "num": "13963", "d": "1/2017"}, {"title": "bug ngfor dynamic image src", "body": "submitting current behavior using tag dynamic image source inside ngfor loop problem seems description follows get image source calling method testing returns img source testing method follows ionviewdidload thisvars testing consolelog index return jpg lets say returning index jpg extension see console finding follows observe output testing functions called twice though shows two images page printing index twice expected behavior call testing print index minimal reproduction problem instructions use code given check console reproduce motivation use case changing behavior encountered using rand function generate random number trying get one random image set images throwing error saying expression changed checked see called reason looping twice ngfor consequently src function called twice since rand funciton giving different value created issue please tell us environment using ionic env info cordova cli ionic framework version ionic cli version ionic app lib version ionic app scripts version iosdeploy version iossim version os macos sierra node version xcode version xcode build version browser tried chrome language please refer ionic info", "num": "13962", "d": "1/2017"}, {"title": "remove unused first argument iterabledifferfactorycreate method", "body": "currently forced pass somwthing first argument even used angular think removed probably make optional", "num": "13961", "d": "1/2017"}, {"title": "add injectablelazy option", "body": "currently eager initialize service adding hook people know services afaik still documented angulario even less know present service initialized eagerly nt always disposal logic forced add empty method comment wo nt remove accident according mandatory think intuitive control instantiation via annotation", "num": "13960", "d": "1/2017"}, {"title": "ngonchanges triggers frequently", "body": "observed hover checkbox ngonchanges get triggered twice trying implement multiselectdropdown component rendering inside loop even using native see behaviour slowing ui lot wan na know first place ngonchanges called hover component even simple primitive input controls without css", "num": "13959", "d": "1/2017"}, {"title": "async pipe nt read update ngrxstore observables triggered specific places google api callbacks", "body": "submitting check one x current behavior google api calls take callback dispatching ngrxstore action callback store receives updates value even observers subscribed value receive pipes nt take value event click button pipes update content called place different callbacks even works normally interestingly configured redux chrome extension installed everything works normally expected behavior whenever new value observer sent place pipe work update value minimal reproduction problem instructions short version click authorize button first time triggers authorization screen read gmail data using google apis stores fact authorized reload code tries use authorization gave stores result clicked button sends new values observers open console see observers ing new values receive new values wo nt show page sections pipes click buttons page send new actions importantly places pipes suddenly update values previous new note subscribers get values output normally think ngrxstore issue angular one seems related closely pipes note created new google api token plunkr finish testing please tell disable remove longer version details check sends action store init adding string test store adds whatever string receives array check observer test values store check template debug display pipe pipe init action value shows section pipe correctly pipes work well observers values sent triggered normal functions check also triggers check check already authorized authorized first time authorize clicking button reload page dispatch action stored check observer authorized values store check console value check authorized section page pipe nt update check callback stores value another value sent saved check observer values store check console value observers work pipe working expected page test section array show values sent shows one sent ones google api callbacks check template event handler button check handler dispatches another action action sent google api callback pipe gets new value immediately takes previous values although test button sends new value pipe also updates value page shows true motivation use case changing behavior pipes supposed subscribe observer update final value based observers independent update observers triggered please tell us environment os distributor id ubuntu description ubuntu lts release codename xenial browser chrome bit firefox ide atom visual studio code version plunkr version nt use issue still occurs yarn version taken angular version browser chrome xx firefox xx mobile chrome xx language typescript plunkr typescript yarn version local angularcli project node aot issues", "num": "13957", "d": "1/2017"}, {"title": "together ngfor ngmodel behave correctly", "body": "submitting check one x current behavior array data looped template element shown looping htmlelement surrounded formtag everything fine surrounded formtag loop behaves correctly element array element html rendered however ngmodel used show array elements content always shows elements data last array element expected behavior surrounding loop make difference minimal reproduction problem instructions minimal demo seen check npm install ng serve motivation use case changing behavior want use form validation started surrounding input forms tag story began please tell us environment windows intellij local development far angular version browser firefox chrome language node aot issues", "num": "13955", "d": "1/2017"}, {"title": "missing docs examples web workers mode", "body": "ready use nt able find docs examples clue found enough start something scratch also lot open questions stack overflow", "num": "13954", "d": "1/2017"}, {"title": "bug ui event updating called asyncawait calls", "body": "submitting check one x current behavior calling subject called async calls component subscribed subscription indeed changes variable however ngclass expression uses nt update expected behavior expect ngclass add class based value variable changed async function minimal reproduction problem instructions want make plunkr need target thing order use asyncawait feature please tell us environment mac os sierra node angular version locked current ionic version browser language typescript node aot issues aditional info using function function trigger ui change nt theory either asyncawait feature halting js context execution change somewhat running outside zonejs context due keyword function declaration seleccione dispositivo usb inputs name datatable label datatable type text placeholder map devices device gt label device value device type radio printerdevice throw new referenceerror undefined device thisconfshowprogress lt line tries update ui await thisprinterserviceconnect printerdevice", "num": "13953", "d": "1/2017"}, {"title": "ngc compiler read property map undefined", "body": "submitting check one x current behavior try run project containing code like receive cryptic stack trace debugging console logging found cause points code snippet inside evaluatorjs expected behavior nice pretty message like minimal reproduction problem instructions motivation use case changing behavior compile projects errors allow resolve problem please tell us environment osx sierra angular version language typescript node aot issues", "num": "13952", "d": "1/2017"}, {"title": "confusing error message using multiple form validators", "body": "submitting check one x current behavior using reactive forms adding multiple validators form field confusing error message occurs accidentally leave array brackets around list validators error message contains read subscribe null stack trace form validation related things clear error realise huge problem given stack trace contains information start looking error might good possible give clearer picture developer gone wrong case expected behavior error message produced trying add multiple validators form control without adding array could read something like formbuilder expected args value validators received n minimal reproduction problem instructions see problem remove brackets around validators list view error plunkr motivation use case changing behavior small error cost lot time debug please tell us environment windows home edition vscode insiders angular version router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13951", "d": "1/2017"}, {"title": "broken documentation ngvalidators", "body": "submitting current behavior seems problem docs page expected behavior error page please tell us environment chrome", "num": "13950", "d": "1/2017"}, {"title": "module breaks possibility using ts source maps", "body": "currently configured tsconfigbuildjson breaks possibility using source maps browser supports possible compile modules", "num": "13949", "d": "1/2017"}, {"title": "run angular file looks like base href issue", "body": "submitting check one x current behavior windows development pc ng new testlocal cd testlocal ng serve see content indexhtml errors console chrome ng build navigate dist open indexhtml chrome see content page errors console chrome file fullpathindexhtml expected behavior expected see result file views currently case angular minimal reproduction problem instructions see current behaviour reproduce motivation use case changing behavior many applications serve spa websites file ios osx allow hosting web server application please tell us environment windows sublime angular version latest today january browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node v npm v", "num": "13948", "d": "1/2017"}, {"title": "picture tag nt work inside angular app", "body": "submitting check one x current behavior tag multiple images defined browser chooses one load based media queries browser size example would tag inside angular app always loads top image tag outside angular app loads images correctly warning tag works chrome nt work least firefox safari nt know ie edge expected behavior load images correctly minimal reproduction problem instructions try opening link firefox resize window tag angular app works correctly one app nt tags copypasted motivation use case changing behavior like load smaller images user mobile browser nt opened browser fullscreen please tell us environment vhecked ubuntu ios angular version browser firefox xx ie safari ios", "num": "13947", "d": "1/2017"}, {"title": "resolver data always passed activatedroute", "body": "submitting check one x current behavior got route configured resolvers component access data resolvers component export class mycomponent implements oninit injectable export class oneresolver implements resolve injectable export class resolvertwo implements resolve expected behavior data resolvers accessible components route resolved please tell us environment windows angular version router browser chrome could reproduce ff language ts node aot issues", "num": "13946", "d": "1/2017"}, {"title": "docs seem wrong", "body": "submitting check one x current behavior using opaquetoken preferable using strings tokens possible collisions caused multiple providers using string two different tokens using opaquetoken preferable using object tokens provides better error messages expected behavior using opaquetoken preferable using strings tokens possible collisions caused multiple providers using string two different tokens afaik supported token looks like leftover might wrong minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13944", "d": "1/2017"}, {"title": "child module defines service uses loadchildren without using component breaks", "body": "submitting current behavior lets suppose root module lazy loads module turns lazy loads module b module forwards child without using component ie path b loadchildren appbmodule bmodule component b uses service defined breaks expected behavior service injected correctly module b component without need using enclosing component module minimal reproduction problem instructions plnkr shows four options withenclosingwithservice lazy loads module uses enclosing component lazy loads component b uses service module b works could considered workaround problem withenclosingwithoutservice component b need dependency module also works withoutenclosingwithoutservice module forwards component module b component dependencies service module works withoutenclosingwithservice breaks lazy loads module turns lazy loads module b load component b component b dependency service breaks motivation use case changing behavior webapp consists landing page app module two child modules represent almost different webapps child application module login service store authenticated user data authenticated application download sources module b module b need access login service please tell us environment windows intellij angular cli npm angular version browser language typescript node aot issues", "num": "13941", "d": "1/2017"}, {"title": "add like", "body": "submitting check one x possibly related might help current behavior takes object whose keyvalues add style key set corresponding value nothing comparable attributes addsandsets attribute unfortunately lot attributes set add lot bindings could lot set enriching app aria expected behavior comparable directive would trick minimal reproduction problem instructions plunker provides suggested implementation borrows heavily motivation use case changing behavior make easier add remove large number aria attributes angular feels incomplete without please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx", "num": "13940", "d": "1/2017"}, {"title": "meet competing library frameworks sizes touted claim introduction", "body": "submitting check one x current behavior building hello world app works bloated amount library build vendor package rivalling vuejs libraries much smaller size touted reach stated conference met expected behavior make angular much smaller smaller packages code size minimal reproduction problem instructions motivation use case changing behavior performance please tell us environment windows linux matter angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13939", "d": "1/2017"}, {"title": "determine module class", "body": "current behavior getting lots errors unused components expected behavior nt declare component declarations look run following error determine module class dividerpanel c mswebngskeletonsrccompsdividerpaneldividerpanelts determine module class dropbox c mswebngskeletonsrccompsdropboxdropboxts determine module class entrypanel c mswebngskeletonsrccompsentryentrypanelts determine module class forgotpass c mswebngskeletonsrccompsentryforgotpassts determine module class footer c mswebngskeletonsrccompsfooterfooterts determine module class infobox c mswebngskeletonsrccompsinfoboxinfoboxts determine module class inputnumeric c mswebngskeletonsrccompsinputnumericinputnumericts determine module class inputstring c mswebngskeletonsrccompsinputstringinputstringts determine module class loading c mswebngskeletonsrccompsloadingloadingts determine module class mapaddress c mswebngskeletonsrccompsmapaddressmapaddressts determine module class minitab c mswebngskeletonsrccompsminitabsminitabts determine module class minitabs c mswebngskeletonsrccompsminitabsminitabsts determine module class modaldialog c mswebngskeletonsrccompsmodaldialogmodaldialogts determine module class c determine module class c determine module class c determine module class simplelisteditable c mswebngskeletonsrccompssimplelistsimplelisteditablets determine module class simplelist c mswebngskeletonsrccompssimplelistsimplelistts determine module class filterpipe c mswebngskeletonsrcpipesfilterpipets determine module class filterpipeequal c mswebngskeletonsrcpipesfilterpipenotts determine module class orderby c mswebngskeletonsrcpipesorderbyts determine module class replacepipe c mswebngskeletonsrcpipesreplacepipets determine module class sortby c mswebngskeletonsrcpipessortbyts analyzeandvalidatengmodules c mswebngskeletonnodemodules extractorextract c mswebngskeletonnodemodules extractorextractbundle c mswebngskeletonnodemodules extractorextract c mswebngskeletonnodemodules extract c mswebngskeletonnodemodules objectmain c mswebngskeletonnodemodules object c mswebngskeletonnodemodules modulecompile objectmoduleextensionsjs moduleload extraction failed versions angularcli node os angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularlanguageservice angular kitchen sink source regards sean", "num": "13938", "d": "1/2017"}, {"title": "storedevtoolsmoduleinstrumentstore compatible aot", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior static analysis error popular ngrx instrumentonlywithextension expected behavior error minimal reproduction problem instructions motivation use case changing behavior get error work instrumentstore angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli angularlanguageservice works aot getting error", "num": "13937", "d": "1/2017"}, {"title": "unsupported platform fsevents wanted os darwin arch current os arch", "body": "windows node npm trying build angular project sources based instruction however running get following error npm err notsup unsupported platform fsevents wanted os darwin arch current os arch npm err notsup valid os darwin npm err notsup valid arch npm err notsup actual os npm err notsup actual arch", "num": "13935", "d": "1/2017"}, {"title": "way get display nested json", "body": "hi guys tried display nested json angular way tried everything guess wait angular developed", "num": "13933", "d": "1/2017"}, {"title": "ngc error misleading error message terms function calls", "body": "submitting check one x current behavior consider following module import ngmodule modulewithproviders provider angularcore import commonmodule angularcommon import orderedcomponent componentsoutletmodule componentsoutletconfig componentsoutlet import isarray lodash export function providenavigationitems navigationitems orderedcomponent provider let multi true return provide componentsoutletconfig multi true usevalue name navigation orderedcomponents navigationitems ngmodule imports commonmodule componentsoutletmodule exports componentsoutletmodule export class navigationmodule static forroot navigationitems orderedcomponent modulewithproviders return ngmodule navigationmodule providers providenavigationitems navigationitems static forchild navigationitems orderedcomponent modulewithproviders return ngmodule navigationmodule providers providenavigationitems navigationitems let multi true ngc throws error error error encountered resolving symbol values statically calling function providenavigationitems function calls supported consider replacing function lambda reference exported function resolving symbol navigationmoduleforroot c usersjacekdevpocsrcappnavigationnavigationmodulets resolving symbol appmodule c usersjacekdevpocsrcappappmodulets resolving symbol appmodule c usersjacekdevpocsrcappappmodulets simplifyincontext c usersjacekdevpocnodemodules staticreflectorsimplify c usersjacekdevpocnodemodules staticreflectorannotations c usersjacekdevpocnodemodules ngmoduleresolverresolve c usersjacekdevpocnodemodules compilemetadataresolvergetngmodulemetadata c usersjacekdevpocnodemodules addngmodule c usersjacekdevpocnodemodules c usersjacekdevpocnodemodules arrayforeach native createngmodules c usersjacekdevpocnodemodules analyzengmodules c usersjacekdevpocnodemodules compilation failed expected behavior error obviously least less missleading error message angular version angular cli version browser language typescript node aot issues find repo reproducing issue mhevery please close issue actualy solved missleading error message explained", "num": "13931", "d": "1/2017"}, {"title": "change detection nt fire async method web audio api", "body": "submitting current behavior callback runs calling audiocontextdecodeaudiodata buffer callback change detection run expected behavior change detection occur callback runs minimal reproduction problem instructions following component typescript import component viewchild angularcore component selector myapp template export class appcomponent status loading audio buffer arraybuffer constructor var request new xmlhttprequest var url requestopen get url true requestresponsetype arraybuffer decodeaudio var context new audiocontext ontrigger consolelog thisstatus click decode audio button enabled observe status text never changes finished decoding audio take less second click trigger change detection button calls consolelog observe status text updated finished decoding audio plunker demonstrates issue motivation use case changing behaviour using web audio api angular app please tell us environment angular version zonejs version browser", "num": "13930", "d": "1/2017"}, {"title": "run app using github sources npm package", "body": "seems latest npm package way debug typescript sources existing answer stackoverflow article medium outdated js files npm package compiled module syntax supported yet browsers loader like systemjs requires traceur example commonindexj ca nt use traceur since likely break existing source maps created js files transpiled tsc", "num": "13928", "d": "1/2017"}, {"title": "aspnet core running two apps prerendering", "body": "hey guys someone take look issue regarding building two angular apps aspnet core prerendering feature figure examplesuggestion appreciated", "num": "13927", "d": "1/2017"}, {"title": "entrycomponents lazy loaded module working", "body": "submitting x bug report feature request support request current behavior inside lazy loaded module entrycomponents working import module root declare entrycomponents working fine soon module lazy loaded get following error message yes expected behavior entrycomponents work lazy loaded module please tell us environment angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli browser node aot issues also seen", "num": "13926", "d": "1/2017"}, {"title": "add component hooks reflect component dom state", "body": "submitting check one x current behavior currently available component hooks reflect component dom state revealed expected behavior add new hooks called component addingremoving dom prevent lot excess checks unnecessary work component really added dom minimal reproduction problem instructions see plunkers discussion motivation use case changing behavior currently available hooks reflect component dom state misleading angular version", "num": "13925", "d": "1/2017"}, {"title": "aot newline eof generated file triggers tslint error", "body": "submitting check one x current behavior docs ci build fails linting error aot generated file without new line eof styles file expected behavior although could try suppress error someone else bound suffer generate newlines yes minimal reproduction problem instructions build failure source newline eof speak fontstyle italic color blue aot generated file newline eof fileoverview file generated angular template compiler edit suppress suspiciouscode uselesscode missingproperties tslint disable export const styles speak ngcontent comp fontstyle italic color blue yes see nt know ineffective checking end update linting appears ignore particular newline missing eof problem disables complaints one aot compiler nt generate eof newline files style file concern solution always generate newline environment angular angularcompilercli windows", "num": "13924", "d": "1/2017"}, {"title": "change async pipe end", "body": "bug report x feature request support request motivation use case changing behavior angular built observables pipe great makes template little bit noisy standard way call observable type variables end name simplify template omitting pipe making variables recognizable asynced default guess configuration config option brake old style look template pipe", "num": "13923", "d": "1/2017"}, {"title": "transcluded components hooks works incorrectly upper state", "body": "submitting check one x current behavior transcluded via components hooks triggered despite parent component state hook triggered removing dom expected behavior hooks triggered component really addedremoved dom minimal reproduction problem instructions plnkr hooks triggered despite false value never fires despite component removing dom angular version update added one plnkr anything inside component initialized children despite never added dom due closed menu comment bellow", "num": "13921", "d": "1/2017"}, {"title": "formcontrol shortly valid valuechanges validation", "body": "submitting check one x current behavior reactive form one fields minimum length using minlength directive validation want warn user nt typed enough characters leaves field stops typing couple milliseconds actually therefore validation handled subscribing field valuechanges observable ctrl valuechanges debouncetime distinctuntilchanged subscribe val gt val amp amp vallength lt ctrlseterrors minlength true works however noticed valuechange field set valid play debouncetime set second clearly see ngvalid styling kick keystroke wait typing second field invalidated expected behavior field remain invalid valuechange angular version", "num": "13920", "d": "1/2017"}, {"title": "support injection elementref root element", "body": "angularjs one could inject get root dom element angular application angular material want something like check dom outside angular application presence attribute sets context kind today rather clunky see bootstrap multiple components figure one inside given directive way use instance directive attempt get component instance contains list get available bootstrap completed means called asynchronously makes directivefacing api async undesirable would grealty helpful able directly inject root component directly via token something like", "num": "13919", "d": "1/2017"}, {"title": "support direct child selector", "body": "feature request support selectors like would help reduce boilerplate directives predetermined structure required scenarios could useful angular material example used instance native html elements dictate specific structure eg containing take consideration combination multiple directchild operators cc tbosch vicb", "num": "13918", "d": "1/2017"}, {"title": "upgrademodule supported", "body": "seeing unexpected behavior projects use upgrademodule upgrade angular first even supported upgrade story details x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior hybrid apps load angular js angular compiled typescript angular code behaves expected adding angular upgrademodule bootstrapper angular apps causes various typeerrors common typeerror unable get value property ref object null undefined particular error seems centered around angular builtin directives ngmodel ngclass ngclick ngkeyup etc expected behavior angular work upgrade scenario perfect harmony minimal reproduction problem instructions create hybrid app using angularcli webpack build angular part ngmodels ngclicks angular code open interact angular template elements click type etc motivation use case changing behavior support app clients stuck please tell us environment problem env browser os windows dev env angularcli webpack mixed gulp angular stuff angular version angular angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript compiled produce bugs", "num": "13917", "d": "1/2017"}, {"title": "set return type rendererinvokeelementmethod", "body": "submitting check one x current behavior return type actually returns whatever underlying method returns expected behavior return type motivation use case changing behavior many element methods return values one potential use case angular version browser language typescript", "num": "13916", "d": "1/2017"}, {"title": "json error response type blob angular", "body": "hello set responsetype responsecontenttypeblob requestoptions want get pdf file ok get error server json type problem handle error error body equal blob ca nt get json text response response body blob headers headers ok false status statustext internal server error type url url proto body response body code text internal error unauthorized user headers headers ok false status statustext internal server error type url url proto body add possibility set responsetype os ubuntu version ide visual studio code language typescript browser", "num": "13915", "d": "1/2017"}, {"title": "release getting return outside function", "body": "os windows versions ng repro steps cli type log given failure error error encountered resolving symbol values statically calling function mslibmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c mswebstudiodashboardsrcappappmodulets resolving symbol appmodule c mswebstudiodashboardsrcappappmodulets error srcresellerreselleractionts module parse failed c mswebstudiodashboardnodemodules ngtoolswebpacksrcindexjs c mswebstudiodashboardsrcresellerreselleractionts return outside function may need appropriate loader handle file type createprivilege return function dispatch var self var privilegedefault thisappstoregetstate resellergetin privilegedefault srcappappmodulets srcmaints multi main nt seem like standard redux trunkable currying functions example unfortunately revert back let add opened bug ngcli asked filipesilva move angular kitchen sink source regards sean", "num": "13914", "d": "1/2017"}, {"title": "left margin mobile device chrome browser small", "body": "submitting check one x current behavior read doc guide mobile device left margin small expected behavior minimum margin minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13913", "d": "1/2017"}, {"title": "upgrading using element work", "body": "submitting check one x current behavior trying upgrade component uses inline templates element service component children nodes expected behavior child nodes available instantly like minimal reproduction problem instructions running app use ngupgrade upgrade components ones inline template instantly available minimal demo function use strict output output see element available timeout motivation use case changing behavior gradually upgrade application instead big bang please tell us environment cordova androidioswindows phone hybrid angular app trying migrate using typescript angular angular language typescript xx typescript compiling", "num": "13912", "d": "1/2017"}, {"title": "mouseleave sometimes never fired", "body": "submitting check one x current behavior angular get mouseleave event results page element stuck hover expected behavior coming memory used fine hover never stuck minimal reproduction problem instructions roll mouse vertically elements checking get stuck like output console check ever fires see one fires enter never leave please note reproduction questionanswers weird code run outside zone page comes shows list elements refreshed http request protractor wo nt mark zones stable otherwise interval intend use observable timer plunkr nt like also confirmed behaviour motivation use case changing behavior please tell us environment angular typescript happens chrome version osx angular version browser chrome osx firefox osx tested language typescript node aot issues", "num": "13911", "d": "1/2017"}, {"title": "file type input ngmodel value nt updating file upload", "body": "submitting check one x current behavior file type input ngmodel value nt updating file upload expected behavior file type input ngmodel value updated file upload minimal reproduction problem instructions steps reproduce bind component class property file type input via ngmodel directive output ngmodel value view upload file demo environment os windows ide webstorm angular version browser chrome surprisingly bug nt reproducible least ie language typescript", "num": "13910", "d": "1/2017"}, {"title": "angularcompiler baseerror cause ca nt set property error stack zonejs", "body": "submitting check one x current behavior current behavior zonejs angularcli expected behavior minimal reproduction problem instructions reproduce steps found zonejs zoneawareerror use current construct facadeerrorjs baseerror needed forward api native error", "num": "13908", "d": "1/2017"}, {"title": "angular router ca nt handle refresh base href root virtual directory iis", "body": "submitting check one x x bug report current behavior site hosted hosted router gets confused refresh base href set something expecteddesired behavior router work correctly hosted iis url rewrite correctly configured work initially refreshed request reproduction problem host dist folder iis virtual directory called sitea angular app routes ie sitedashboard install url rewite iis configure url rewrite rules put webconfig contents next indexhtml change indexhtml set base href browse see site comes correctly default route say localhostsiteasitedashboard click refresh browser see redirected iis home page expected behavior angular iis work together angular able route appropriately inside iis something root web site motivation use case changing behavior hosting multiple named sites single machine environment iis hosted sites want add overhead additional web server please tell us environment angular version browser language typescript iis version url rewrite installed", "num": "13907", "d": "1/2017"}, {"title": "feature request dynamic language swapping aot builds", "body": "multilingual apps allow user dynamically change language runtime without restarting interrupting state app would like performance benefits aot include multiple languages build let user switch runtime nt want distribute separate version code every single language supported solutions like work way nt quite powerful angular official solution", "num": "13905", "d": "1/2017"}, {"title": "fails error encountered resolving symbol values statically", "body": "submitting check one x current behavior exception unable extract localization xliff files expected behavior able run extract least empty xliff files minimal reproduction problem instructions npm install g angularcli ng new fuzzballs cd fuzzballs results following error error error encountered resolving symbol values statically calling function noopanimationdriver function calls supported consider replacing function lambda reference exported function resolving symbol animationdrivernoop usersslnlfuzzballsnodemodules angularplatformbrowsersrcdomanimationdriverdts resolving symbol browsertestingmodule usersslnlfuzzballsnodemodules angularplatformbrowsertestingbrowserdts resolving symbol browsertestingmodule usersslnlfuzzballsnodemodules angularplatformbrowsertestingbrowserdts simplifyincontext usersslnlfuzzballsnodemodules staticreflectorsimplify usersslnlfuzzballsnodemodules staticreflectorannotations usersslnlfuzzballsnodemodules ngmoduleresolverresolve usersslnlfuzzballsnodemodules compilemetadataresolvergetngmodulemetadata usersslnlfuzzballsnodemodules compilemetadataresolvergetngmodulesummary usersslnlfuzzballsnodemodules usersslnlfuzzballsnodemodules arrayforeach native compilemetadataresolvergetngmodulemetadata usersslnlfuzzballsnodemodules addngmodule usersslnlfuzzballsnodemodules extraction failed motivation use case changing behavior basic functionality broken generate localization data please tell us environment macos x angular cli angular version ng version angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli browser language node aot issues", "num": "13902", "d": "1/2017"}, {"title": "attribue handling inconsistent messages", "body": "submitting check one x current behavior currently translation node empty html content referred message compiler error thrown tag rendered dom empty test empty span translation transunit however attributes translation error thrown throws error translation expected behavior attribute would rendered dom empty value node translation minimal reproduction problem instructions add attribute attribute needs translated generate messages xlf file translations empty target elements provide file translations source app try render component unexpected translation attribute error console motivation use case changing behavior error conditions missing translations html content attributes consistent convenient development compiler throw translations empty otherwise every new attribute added project needs translated app worked issue line extractormergerts check line means empty translations attributes throw rather handled equivalent check messages line throw empty node array happens id translated content translation empty please tell us environment windows visual studio iis npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome edge language typescript xx typescript node aot issues", "num": "13897", "d": "1/2017"}, {"title": "ngfor pass always first item parameter custom event", "body": "submitting current behavior component inside ngfor loop whith custom event created myevent dosomething event currentitem fired currentitem allways first item ngfor loop expected behavior expected currentitem loop passed function minimal reproduction problem instructions could nt reproduce issue plnkr ready cant see happens parent html function parent ts childts import component output eventemitter oninit angularcore component selector myimages templateurl imageshtml styleurls imagesscss export class images implements oninit output image eventemitternew eventemitter constructor things var dataurl canvastodataurl imagejpeg thisimageemit dataurl motivation use case changing behavior please tell us environment os os x el capitan node version angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli angular version packagejson browser chrome firefox ie xx safari mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues node", "num": "13896", "d": "1/2017"}, {"title": "use ngcontent", "body": "submitting check one x x feature request motivation use case changing behavior instance building recursive component tree view would like able reuse ngcontent least twice template node recursive child nodes created ngfor loop please tell us environment angular version browser language node aot issues", "num": "13894", "d": "1/2017"}, {"title": "issue contentchildren templateref argument", "body": "submitting check one x current behavior problem introduced angular visible current release say one component takes templates adds dom using ngtemplateoutlet top component appcomponent uses provides template ngfor loop array items displays item value number items displayed last one undefined expected behavior expected items displayed case angular minimal reproduction problem instructions please see please tell us environment windows angular version browser language typescript", "num": "13893", "d": "1/2017"}, {"title": "error error encountered resolving symbol values statically functions exported", "body": "submitting check one x current behavior consider following module export function angularhttpfactory backend xhrbackend defaultoptions requestoptions http return new http backend defaultoptions export function authhttpfactory auth auth backend xhrbackend defaultoptions requestoptions authhttp return new authhttp auth backend defaultoptions ngmodule declarations loginloadercomponent imports commonmodule httpmodule exports loginloadercomponent export class authmodule static forroot authconfig authconfig modulewithproviders return ngmodule authmodule providers provide authconfig usevalue authconfig provide angularhttp usefactory angularhttpfactory deps xhrbackend requestoptions auth provide http usefactory authhttpfactory deps auth xhrbackend requestoptions authuser static forchild modulewithproviders return ngmodule authmodule following error occurs importing npm package module definition error error encountered resolving symbol values statically calling function authmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c resolving symbol appmodule c expected behavior error angular version angular cli version browser language typescript node aot issues", "num": "13892", "d": "1/2017"}, {"title": "angularlanguageservice support references", "body": "cool could find references properties typescript class used html componenttemplate componenttemplateurl", "num": "13890", "d": "1/2017"}, {"title": "angularlanguageservice support rename", "body": "cool could rename property typescript class used html componenttemplate componenttemplateurl", "num": "13889", "d": "1/2017"}, {"title": "angularlanguageservice support go definition componenttemplateurl", "body": "cool could open html file declared typescript file componenttemplateurl", "num": "13888", "d": "1/2017"}, {"title": "angularlanguageservice support code fix", "body": "cool angularlanguageservice could support code fix issue possible code fix could fix html broken etc", "num": "13887", "d": "1/2017"}, {"title": "ngmodel binding breaks template includes specific element", "body": "submitting check one x observed behavior implementing including template methods invoked bananabinding work desired behaviour implementing including template methods invoked bananabinding works steps reproduce plunker contains tow identical components difference inclusion mdselect template withselect component brakes banana binding described open plunker watch console note logs events emitted methods component writevalue obj void thisvalobj consolelog noselect writevalue obj note includes components differences template yet methods calls component missing log binding functioning see also", "num": "13886", "d": "1/2017"}, {"title": "use loadchildren load sub module visit sub route page submodule dependency module repeat new", "body": "submitting check one x current behavior use loadchildren loaded module repeat new dependencies module expected behavior repeat new use singleton module minimal reproduction problem instructions define child module set one route like javascript import modulewithproviders angularcore import routes routermodule angularrouter import pages const approutes routes path component path component export const routing modulewithproviders routermoduleforchild approutes parent routing config dynamic load child module like visit sub module dependency module also init motivation use case changing behavior route change dynamic loaded module please tell us environment important angular version", "num": "13885", "d": "1/2017"}, {"title": "selectoption selectedvalue working changing datasource", "body": "hi problem data binding selectedvalue selectoption combobox change datasource runtime selectoption bind list content list changed runtime cleared inserted new item beginning fill list data listitem v ch schweiz v de deutschland v vn vietnam ui select dedeutschland means current selectedvalue de clear list fill data listitem v ch schweiz v de deutschland v vn vietnam v us usa problem current selectedvalue still de ui nothing selected question databinding still works refresh datasource thank create sample short version export class appcomponent implements oninit items listitem listitem v ch schweiz v de deutschland v vn vietnam listitem v ch schweiz v de deutschland v vn vietnam v us usa model string constructor private http consolelog list loaded thisitemslength let item thisitemspush item consolelog list loaded thisitemslength let item thisitemspush item ngoninit void lala itemd model load list load list", "num": "13884", "d": "1/2017"}, {"title": "ngrepeat mass cause block webpage", "body": "want show thousand data using ngrepeat webpage blocks nt suitable repeat thousand data", "num": "13883", "d": "1/2017"}, {"title": "run build prod error duplicate identifier sourcemap", "body": "start e webpackdevserver progress inline hot keywords ifthenelse require option building modules modules active webpack result served fallback indexhtml chunk kb rendered chunk kb rendered chunk appjs appcss app mb initial rendered chunk vendorjs vendor bytes initial rendered chunk polyfillsjs polyfills kb entry rendered warning angularcoresrclinkersystemjsngmodulefactoryloaderjs critical dependency request dependency expression warning angularcoresrclinkersystemjsngmodulefactoryloaderjs critical dependency request dependency expression error default e duplicate identifier sourcemap error default e duplicate identifier sourcemap child htmlwebpackplugin indexhtml chunk indexhtml bytes entry rendered child extracttextwebpackplugin chunk extracttextwebpackpluginoutputfilename kb entry rendered webpack bundle valid packagejson name description quickstart project version scripts serverstart npm run build amp amp npm run serve serve dist p prestart crossenv nodeenvdev start webpackdevserver progress inline hot prebuild rimraf dist build crossenv nodeenvprod webpack progress dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs rxjs zonejs devdependencies angularclasshmr angularclasshmrloader angularcompilercli angularplatformserver ngtoolswebpack typescorejs typesjasmine typesnode typeswebpack reflectmetadata awesometypescriptloader crossenv cssloader extracttextwebpackplugin fileloader htmlloader htmlwebpackplugin nodesass rawloader postcssloader resolveurlloader rimraf styleloader tsloader typescript webpack webpackdevserver webpackmerge tsconfigjson compileroptions target module commonjs moduleresolution node sourcemap false emitdecoratormetadata true experimentaldecorators true removecomments true noimplicitany true suppressimplicitanyindexerrors true typeroots nodemodules types exclude nodemodules dist angularcompileroptions skipmetadataemit true gendir ngfactory", "num": "13882", "d": "1/2017"}, {"title": "add option turn onoff animations", "body": "submitting check one x current behavior currently option dynamically turn onoff animations expected behavior would nice method like old motivation use case changing behavior order compliant section h supply user setting turns animations application spa need turn onoff animation dynamically user logs setting current workaround import animationdriver angularplatformbrowser import webanimationsdriver angularplatformbrowsersrcdomwebanimationsdriver export function animationfactory const noop animationdrivernoop const driver new webanimationsdriver return animate element startingstyles keyframes duration number delay number easing string previousplayers gt check whatever value determines user setting hide animations hideanimations return noopanimate element startingstyles keyframes duration delay easing previousplayers else return driveranimate element startingstyles keyframes duration delay easing previousplayers ngmodule providers provide animationdriver usefactory animationfactory export class appmodule please tell us environment npm spa served static files angular version browser language typescript", "num": "13881", "d": "1/2017"}, {"title": "ngc nt recognize handle import something statments", "body": "submitting current behavior become quite large application ionic lot pages pipes services components wanted simplify importing types together make array example typescript content import pages pages import pipes pipes const pages objecttoarray pages const pipes objecttoarray pipes content ngmodule declarations app components pipes pages imports code bootstrap ionicapp entrycomponents app components pages providers provide storage usefactory providestorage provide errorhandler useclass ravenerrorhandler services export class appmodule function works fine without ngc aka ionic serve ngc recognize handle statements throw errors compile time example npm err node configbootstrapjs amp amp ionicappscripts build prod npm err get information open issue project npm err npm bugs replacedmobile npm err nt available get info via npm err npm owner ls replacedmobile npm err likely additional logging output npm err please include following file support request npm err usersattilabudacodereplacedmobilenpmdebuglog npm err darwin npm err argv usrlocalbinnpm run ionic build npm err node npm err npm npm err code elifecycle npm err replacedmobile ionic build w npm err exit status npm err npm err failed replacedmobile ionic build script npm run build npm err make sure latest version nodejs npm installed npm err likely problem replacedmobile package npm err npm npm err tell author fails system npm err npm run build npm err get information open issue project npm err npm bugs replacedmobile npm err nt available get info via npm err npm owner ls replacedmobile npm err likely additional logging output npm err please include following file support request npm err usersattilabudacodereplacedmobilenpmdebuglog expected behavior ngc handle statements minimal reproduction problem instructions take angular project modify import services replace services instances array line motivation use case changing behavior allows developers use ngc statement allows developers create simpler file please tell us environment os macos sierra ide vs code pm npm angular version browser language tried typescript node aot issues", "num": "13879", "d": "1/2017"}, {"title": "suggestion use angular name due seamver", "body": "going seamver saying angular simple angular distinguish angular angular case lot data google want find articles angular possible already lot articles angular actual suggest choose angular official name mentions new angular angular would easy googlable misunderstandings would occur think good name npm packages already named angularcommon angularcore etc", "num": "13878", "d": "1/2017"}, {"title": "possible problem using map objects iterators general ngfor", "body": "submitting check one x headsup current workaround use array behaviour system exhibits map seems broken current behavior tried use observable maintain list key object pairs render view values come list objects firebase via service rendered correctly page loads seconds rendering view angular throws expression changed checked change detection stops changing values database propagate view page reloaded routed elsewhere also ceases work values view outside ngfor tested values delivered firebase production mode exception course gone change detection still freezes exceptionfreeze also occurs immediately upon changing value database involves switching tabs browser ca nt pinpoint oddly enough works fine use array like nothing else changed expected behavior render template track data changes minimal reproduction problem instructions complicated time consuming minimize reproduce function service use obtain data reference query datasnapshot firebasedatabasexxx creates complicated trouble angular change detection public getmaponvalue iref referencequery observable return observablefromeventpattern handler gt irefon value handler value datasnapshot gt handler gt irefoff value handler value datasnapshot gt void snap datasnapshot gt let map map new map snapforeach val datasnapshot gt mapset valkey valval return false works expected public getarraymaponvalue iref referencequery observable gt return observablefromeventpattern handler gt irefon value handler value datasnapshot gt handler gt irefoff value handler value datasnapshot gt void snap datasnapshot gt let arr array snapforeach val datasnapshot gt arrpush valkey valval return false map thing changes first case destroys change detection second nt link function view simply storing returned observable component browser current version chrome native map project created angularcli please tell us environment windows webpack angularcli serving via also via firebase hosting angular version browser chrome language typescript", "num": "13877", "d": "1/2017"}, {"title": "compiler error migrated", "body": "getting following compiler error compiling perfectly fine", "num": "13875", "d": "1/2017"}, {"title": "exception invalid argument pipe datepipe", "body": "submitting check one x current behavior using date pipe ie nt work throws error message console exception invalid argument pipe datepipe seen several open issue regarding date pipe representing incorrect format whereas date pipe working case expected behavior date pipe show work date mmddyyyy hh mm ss minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13874", "d": "1/2017"}, {"title": "exceptionerror resolvers router catched subscription activatedroutedata", "body": "submitting check one x current behavior using router resolver interfaces get data form service backend creating component render data subscribing exception occurs resolver application breaks error uncaught promise expected behavior exception resolver expect subscribe error function called errorobservable appears activatedroutedatavalue instead component ngoninit thisactivatedroutedata subscribe data gt thisdata datadata consolelog data set thisdata error gt never get matter promisereject throw error etc consolelog ups error getting data alert error resolver resolve route activatedroutesnapshot state routerstatesnapshot behaviorsubjectobservablepromiseany return observablethrow always fails minimal reproduction problem instructions check plunker motivation use case changing behavior catch treat exceptions within target component please tell us environment angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13873", "d": "1/2017"}, {"title": "router inconsistent commands main named outlets", "body": "submitting check one x current behavior routernavigate method works differently main outlet named outlets valid pass commands like main outlet named outlet throws error using first syntax expected behavior valid command minimal reproduction problem instructions demo motivation use case changing behavior router api consistent angular version", "num": "13872", "d": "1/2017"}, {"title": "http request ca nt captured chrome develpotool network panel", "body": "submitting check one x current behavior http request ca nt captured chrome delvelop tool network panel matter mock data inmemorywebapi real api success failed due chrome version test firefox also get http request detail information like request header response header chrome expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13871", "d": "1/2017"}, {"title": "di resolve guard component create service provided lazy loaded module", "body": "submitting check one x encountered issue resolve routeguard share service component registered module resolve guard scenario resolve guard route bound lazy loaded module retrieves list data backend caches variable within service service another method called component retrieves fine grained data first looking within cached data found retrievs particular subset data backend issue service recreated component visited well thus losing cached data boggling mind around issue seem make sense happening read docs dependency injection hierarchical injection modules understanding application root injector bound appmodule bootstrapped child injectors created component lazy loaded module whenever service needed first service looked within injector bound component found checkes parent component continues going injector tree reaching module injector found throws error service needed provided within lazy loaded module nt resolve guard component share singleton service bound module injector reporting bug docs imply problem seems occuring injectors lazy loaded modules root module see following plunker service bound root module used resolve guard component service shared however logic applied lazy loaded module service created recreated resolve guard instantiated component instantiated respectively plunker demos logic retrieval data root module lazy loaded module different servicescomponents ofcourse however creation service behave differently expected behavior one instance service provided lazy loaded module created accessed via resolve guard second creation overrides first creation take place component accessed minimal reproduction problem instructions please tell us environment operating system windows ide webstorm package manager npm http server webpack dev server angular version language typescript", "num": "13870", "d": "1/2017"}, {"title": "reattach activatedroutesnapshot created different route", "body": "submitting check one x current behavior navigate route child routes navigate one child routes navigate back top level route navigate root receive error expected behavior navigate route child routes navigate one child routes navigate back top level route navigate root without receiving error minimal reproduction problem instructions error motivation use case changing behavior fix bug please tell us environment aspnet core angular version angularrouter version browser chrome language typescript node aot issues", "num": "13869", "d": "1/2017"}, {"title": "test driven development seem supported components", "body": "submitting check one x current behavior based available documentation nt look like possible write component testfirst process aka best practice instead looks like significant amount code written tests run expected behavior obvious write components test first andor testing docs updated make clearer minimal reproduction problem instructions motivation use case changing behavior code robust design better tests written first made pass vs writing code first testing note angularjs tended create controllers thing test directives utilize data binding minimize need test way write controller separately compose component clear fro docs please tell us environment windows surface webstorm angularcli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript sure nt good docs plain js node aot issues edit since ca nt comment first thanks url entirely documentation issue angular actually support testfirst development natively functionality issue could please point right direction understand involved create bug url provided", "num": "13868", "d": "1/2017"}, {"title": "angular release internet explorer systemjs syntax error", "body": "angular release application works fine chrome throws following error internet explorer indexhtml seen couple suggestions posts different ie shims older versions angular suggestions", "num": "13866", "d": "1/2017"}, {"title": "routerlink asyncobservable property assignment reevaluate routerlinkactive observable emits new value", "body": "submitting check one x current behavior routerlink asyncobservable property assignment reevaluate routerlinkactive observable emits new value expected behavior value emitted routerlink changes routerlinkactive reevaluate newly emitted value whether link active minimal reproduction problem instructions link application active class reevaluated new value emitted observable eg obervable observableinterval map gt page link active first emission go inactive gt motivation use case changing behavior using observables routerlink work please tell us environment chrome windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13865", "d": "1/2017"}, {"title": "baseerror hack closurecompiler hack constructor error", "body": "submitting check one x current behavior exception something like one occurs constructing class inherits code compiled closurecompiler occurs closurecompiler tries make inheritance work transpiling constructor something like intention deal fact constructor always returns new object ignores pass copying two important fields copying complicated old versions ie actually nt fill object thrown wo nt object field already must actually avoid copying undefined trouble code also code tries work around inheritance problem delegating references known fields private object causes statement assigns constructor fail constructor nt assigned private field renamed example code yet expected behavior since angular code nt always compiled closurecompiler rely closurecompiler hack make inheritance error work correctly unfortunately current solution conflicts closurecompiler solution really necessary angular use getters setters though think cleverness required message needs copied construction stack bit trickier described need delegation name prototype really reason copy tostring already inherited error prototype need delegate either like suggest baseerror class changed thisthis super return new error object need copy fields superthis thismessage superthismessage superthisstack workaround earlier nt set stack object thrown wont set field already exists later browsers set stack object construction thisstack superthisstack minimal reproduction problem instructions compile minimal code sample creates baseerror motivation use case changing behavior make baseerror code work correctly transpiled closurecompiler untranspiled transpiled programs nt special handling inheritance error please tell us environment angular version version baseerror described browser language typescript xx typescript transpiled closurecompiler node aot issues", "num": "13864", "d": "1/2017"}, {"title": "add documentation host", "body": "submitting check one x current behavior look code metadata see hostdecorator suggests problem nothing inside page expected behavior either remove reference documentation add appendix speaks behavior motivation use case changing behavior trying create directive uses host find parent looking documentation around host annotation resolves", "num": "13863", "d": "1/2017"}, {"title": "add new routes dynamically routermodule ngmodule imports", "body": "hi question add new routes dynamically try explain code import ngmodule angularcore import routermodule routes angularrouter let routes routes path redirectto home pathmatch full path home loadchildren dashboarddashboardmodule dashboardmodule get route dynamically let myroutes path routenew component mycomponent let newroutes routesconcat myroutes ngmodule imports routermoduleforroot newroutes exports routermodule export class approutingmodule whatever done hard coded myroutes please help load variable dynamically data service please let know things still needed", "num": "13860", "d": "1/2017"}, {"title": "formcontrol bound multiple inputs update view inputs one edited", "body": "submitting x bug report feature request support request current behavior using angular model driven form binding one form control multiple inputs editing one inputs value form control properly updated inputs views get updated expected behavior expected behavior point view inputs bound one form control show value one inputs gets edited minimal reproduction problem instructions behaviour observed following plunk seen editing one text box update text box updates expected following interpolated text also bound value form control motivation use case changing behavior sometimes useful two inputs bound one form control time use case would like table allows editing records inline inside row detail expanded every row case two inputs come existence use cases come mind use various web desktop applications angular version browser language", "num": "13859", "d": "1/2017"}, {"title": "ngnovalidate directive add novalidate attribute host element", "body": "current behavior ngnovalidate directive add novalidate attribute host expected behavior ngnovalidate directive add novalidate attribute host minimal reproduction problem instructions according selector ngnovalidate directive work form except form ngnoform attribute tried add directive explicitly like plunker working inspect form element see results", "num": "13858", "d": "1/2017"}, {"title": "viewchild updated correctly", "body": "submitting check one x current behavior click row main datatable click row click button see value viewchild changed element referenced viewchild contain current value value first element obtained expected behavior element referenced viewchild contain current value value first element obtained minimal reproduction problem instructions click row main datatable click row click button see value viewchild changed motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13857", "d": "1/2017"}, {"title": "setdisabledstate never called receiving disabled state master fieldset", "body": "submitting check one x current behavior method never called disabled state change propagated master fieldset expected behavior method called change disabled state occurs require feeding state control minimal reproduction problem instructions motivation use case changing behavior hook fired order provide parallel render behavior happening browser level per please tell us environment plnkr angular version browser macos chrome amp ff language typescript xx plnkr node aot issues plnkr", "num": "13856", "d": "1/2017"}, {"title": "proposal allow computed property names map expressions", "body": "submitting check one x current behavior expression parser currently nt support computed property names allow put expression brackets computed property name example currently supported html properties controller contain actual class names overcome creating propertyfunction component class html expected behavior first example work motivation use case changing behavior would avoid need creating properties component please tell us environment angular version", "num": "13855", "d": "1/2017"}, {"title": "proposal add provider api fallback", "body": "material number services want singletons services provided part ngmodule application would end multiple instances service could work around service inject ancestor instance delegate ancestor state adds needless complexity code instead provider like ts export function viewportrulerproviderfactory parentdispatcher viewportruler return parentdispatcher new viewportruler export const viewportrulerprovider already viewportruler available use otherwise provide new one provide viewportruler deps new optional new skipself viewportruler usefactory viewportrulerproviderfactory obviously lot boilerplate also disconnects di system unhappy way manually call service potentially forwarding parameters would much simpler provider syntax extended mechanism fallback existing provider eg material using function module attempt avoid issue ultimately defeated point import dependencies still wind relying fact user diligently included module bootstrap still nt completely solve want global singleton problem one still might provider defined two sibling modules would help igorminar vicb cc pkozlowskiopensource vsavkin might interest", "num": "13854", "d": "1/2017"}, {"title": "metadata extractor treats function differently lambda", "body": "metadata extractor allows latter results note chuckjaz", "num": "13853", "d": "1/2017"}, {"title": "router observable members return", "body": "current behavior many observable properties actually one example yes propertes cast typescript actually invites abuse also developer especially javascript developer invited call improper implementation call method exists seem someone starts calling really good use cast fixing api recommended would breaking change intent clear typescript cast anyone treats deserves gets expected behavior every observable property based based prevents attempts call method minimal reproduction problem instructions load add run click hero inspect note real javascript types x observable isscalar false source behaviorsubject thisrouteparams behaviorsubject isscalar false observers array closed false isstopped false haserror browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx ts", "num": "13852", "d": "1/2017"}, {"title": "safe value must use property binding bypass security domsanitizer", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior trying set source htmlaudioelement programatically returns error safe value must use property binding expected behavior bypass security error safe value minimal reproduction problem instructions please tell us environment angular version browser tested chromium language tested typescript node aot issues", "num": "13849", "d": "1/2017"}, {"title": "router use wildcard catchall lazy loaded module child routes", "body": "submitting check one x current behavior catchall definition lazily loads module however properly handle child routes expected behavior lazy load module properly handle child routes catchall lazily loaded module could either define catchall lazy loaded modules could course also catchall component show found component desired minimal reproduction problem instructions post describes issue plunkr demonstrates issue open console see link click except whatever link lazily loads motivation use case changing behavior flexible routing setups please tell us environment mac os sierra angular version angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node npm cc zoechi since helped initially post thank", "num": "13848", "d": "1/2017"}, {"title": "router marks target route link active route even candeactive returns false source route", "body": "submitting check one x current behavior define two routes template create bindings routes see examples component one routes corresponds implement candeactivate follow instructions official documentation return false candeactivate toggle links try go route candeactivate returns false route even though url stays well component rendered route try click somehow marked active link also styled active link expected behavior active route consistent url click event element whatever bound link active class current route target route minimal reproduction problem instructions routes template candeactivateguard exactly candeactivate method componentb workaround workaround handling click event route stopping event propogation link clicked active route due another link returning false candeactivate router router angularrouter injected parent component constructor motivation use case changing behavior route guards fundamental functions candeactivate behave expected workaround baked active route determined part inner workings routerlinkactive attribute please tell us environment os windows using angular webpack router version angularrouter angular library versions angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angular version browser chrome version language typescript node aot issues", "num": "13847", "d": "1/2017"}, {"title": "tsconfig extends support ngc", "body": "submitting check one x current behavior tsconfigjson extends basejson message error read file basejson hostreadfile function details nativeerror error error read file basejson hostreadfile function expected behavior errors angular version language typescript node aot issues", "num": "13846", "d": "1/2017"}, {"title": "reactive forms ca nt add additional data formarray", "body": "submitting current behavior working formarray way add additional data markup expected behavior need way add additional data markup motivation use case changing behavior best example labels checkboxes radio buttons export class app checkboxgroup formgroup foodarray formarray constructor fb formbuilder two problems approach ca nt set dynamic label every input useless case value food array truefalse usually sending objects server right way opinion something like ts new formcontrol checked truefalse label pizza id data form food value checked truefalse label pizza id data angular version", "num": "13845", "d": "1/2017"}, {"title": "routermoduleforroot broken aot since", "body": "submitting check one x see current behavior angular running ngc aot compile results error error error encountered resolving symbol values statically calling function routermodule function calls supported consider replacing function lambda reference exported function resolving symbol approutingmodule c gitmxtfrontendlandingpageclientsrcclientappapproutingmodulets resolving symbol approutingmodule note downgrading performs successful aot compilation code expected behavior code compiles succesfully minimal reproduction problem instructions assume ngmodule uses routermoduleforroot export const routes route path component applicationlistcomponent ngmodule imports applicationsmodule routermoduleforroot routes exports routermodule declarations applicationlistcomponent export class approutingmodule run ngc aot compile app please tell us environment windows angular version browser na language typescript node aot issues", "num": "13844", "d": "1/2017"}, {"title": "update table bot working", "body": "hi new angular using table update working try update working anyone idea update using http url please give sample code implement thanks advance", "num": "13843", "d": "1/2017"}, {"title": "broken links angular github projects page", "body": "submitting check one x current behavior links projects page angular github repository nt open relevant pages example click gongpriorities leads nowhere expected behavior links open correct page browser", "num": "13840", "d": "1/2017"}, {"title": "link opened tab target blank set using binding", "body": "submitting check one x current behavior set using data binding eg nt open url new tab expected behavior set using data binding eg opens url new tab set without using binding minimal reproduction problem instructions example clicking working correctly opens link new tab clicking failing x loads new link tab example plunker nt make sense demonstrates issue real application getting value another place want use binding set motivation use case changing behavior broken please tell us environment angular version browser language node aot issues relevant", "num": "13837", "d": "1/2017"}, {"title": "support binding src value video element", "body": "submitting check one x current behavior code nt work video element black expected behavior display video currentvideoplayingurl set url video file motivation use case changing behavior people people use video webapps please tell us environment mac os angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues angularcli node npm", "num": "13836", "d": "1/2017"}, {"title": "forms need setvalue obj ifnotequal true", "body": "submitting check one x current behavior calling basically valid form control element call every child even value input nt change cause cursor position selection inside elements reset expected behavior option provided like call form controls value actually changed minimal reproduction problem instructions motivation use case changing behavior big form lot fields background job updated form user enter data happens every selection within elements get reset cursor position set end input element value currently thinking writing custom method diff form current value new value throw away every field equal values use would much easier angular would provide feature please tell us environment macos sierra vs code npm webpack angular version angular beta browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13835", "d": "1/2017"}, {"title": "custom module loading error", "body": "submitting check one x current behavior updated angular application angular week morning took quite updates everything actually works browser module loading error console though module components work fine running app browser error console one custom modules try load app root module actually completely remove application get similar error console next custom module attempt load module components work fine running app error console expected behavior appears everything works great running app nt understand error output console andor get rid nt want say developers team ignore error console minimal reproduction problem instructions nt sample outside application put one together needed thought see something obvious missing first since app works error console motivation use case changing behavior error console please tell us environment osx sierra angularcli angular version language typescript node aot issues", "num": "13833", "d": "1/2017"}, {"title": "force reloadrefresh current route routereusestrategy", "body": "submitting check one x current behavior route reuse strategy supposed reuse route returns route reloaded navigated url different eg route param currently route component refreshed another route link navigated clear bug missing feature expected behavior route component expected refreshed route link navigated including current one minimal reproduction problem instructions plunk shows route component refreshed another route link clicked motivation use case changing behavior restore functionality angular apparently way achieve moment navigate temporary route back see also angular version browser language", "num": "13831", "d": "1/2017"}, {"title": "hybrid app upgrademodule using angular router nt invoke change detection initial load", "body": "submitting check one x current behavior bootstrap hybrid app using router initial load application change detetction nt call ngonchanges change input binding suppose get data via async filter eg happens initial load hybrid app routing move another route back first route ngonchanges works fine expected behavior fire changedetection whenever input binding async changes minimal reproduction problem instructions see plunker issue steps check testdata home page nt get updated click user link click home link see testdata changing ngonchanges logs data console motivation use case changing behavior use hybrid app routing please tell us environment angular version lt browser chrome ie language typescript", "num": "13830", "d": "1/2017"}, {"title": "router route instance null page refresh inside routereventssubscribe method", "body": "submitting check one x current behavior enduser saves link wwwdomaincom favorite link pasts link url bar page load starts project id preselected dropdown projects related tests data loaded ui ui put inconsistent broken state expected behavior enduser saves link wwwdomaincom favorite link pasts link url bar page load starts routereventssubscribe method get current projects id search dropdown projects project object id id exists set selected id exist make redirect root path minimal reproduction problem instructions steps edit url bar plunkr need able reproduce buggy behavior motivation use case changing behavior actually already described seems redundant please tell us environment win vs code editor npm angular version browser language node aot issues", "num": "13829", "d": "1/2017"}, {"title": "trackby ngfor working", "body": "submitting current behavior using ngmodel trackby initial value selected object expected behavior initial value selected minimal reproduction problem instructions html ts private items id name first id name second private selecteditem id name second itemidentity index number item return itemid angular version browser chrome language typescript xx", "num": "13828", "d": "1/2017"}, {"title": "ngswitch seems working", "body": "submitting check one x current behavior shows two cases expected behavior show one case minimal reproduction problem instructions code html messagetime messagefriendnickname messagetext messagetext every time got case time default case displayed default expected motivation use case changing behavior please tell us environment angular version browser language", "num": "13826", "d": "1/2017"}, {"title": "issue jsonp", "body": "", "num": "13823", "d": "1/2017"}, {"title": "angular universal roadmap angular", "body": "migrate angular universal api angularplatformserver high level plan angular universal consists api tools server side rendering angular apps currently angular universal api tools live angularuniversal plan migrate api part angular universal core angular project angularangular angular release beyond design api ground core part angular also refactor internals angular better support angular universal aim build strong foundation future development angular universal also puts angular universal core part angular follow quality release processes rest angular keep api compatible current express wrapper universal make corresponding changes needed nt scoped support universal tools outside express wrapper point api docs dev guide angular universal migration doc help migration current new angular universal api use cases main use cases considering iteration universal initial rendering angular application server perceived faster loading application seo content angular application indexed crawlers link preview generate preview angular application link previews different websites api instead separate angular platform support universal api aim augment already provides basic support running angular nodejs environment roughly usage api would look like js import platformserver angularplatformserver import appservermodulengfactory serverngfactory per request avoid crosstalk const platform platformserver provide initialconfig usevalue url document longform rendering platform bootstrapmodulefactory myappmodulefactory ref applicationref gt refisstablefilter v gt v topromise gt platforminjectorget platformstate rendertostring html gt gt platformdestroy two main options passed document string represents whole document would indexhtml client side app current app url specified initialconfig provider platform convenient api common use case bootstrapping rendering single application js import rendermodulefactory rendermodule angularplatformserver shortform rendering rendermodulefactory myappmodulefactory url document providers html gt main addition corresponds client side recommend separate toplevel app browser module app server module specify platform specific providers including respectively extra data passed server application done providers implementation details keep current implementation renderer make changes needed support universal use cases refactor http module platform independent move platform dependent parts platformbrowser platformserver provide server side location service use current metatags service met tags manipulation required link previews make server implementation http probably based server platform zone aware provide guidelines make asynchronous node libraries zone aware server side application knows rendering actually complete provide way test universal ready components application already run internal angular tests node environment provide helper utilities make easier test universal ready components node browser update universal starter use new api thanks vikram subramanian alex rickabaugh", "num": "13822", "d": "1/2017"}, {"title": "nt allow injecting classes without injectable", "body": "sub classes deprecated remove next major release possible ctor arguments decorator applied", "num": "13820", "d": "1/2017"}, {"title": "default viewencapsulation ngmodule level vs global compiler option", "body": "", "num": "13819", "d": "1/2017"}, {"title": "cleanup remove rendererinvokeelementmethod angular use", "body": "renderer used angular removed branch", "num": "13818", "d": "1/2017"}, {"title": "angular ngfor error", "body": "getting error find differ supporting object object object type object ngfor supports binding iterables arrays code navmenucopnentts import component oninit angularcore import navmenuservice navmenuservice import inavmenutabs navmenu component selector navmenu moduleid moduleid templateurl navmenucomponenthtml export class navmenucomponent implements oninit navmenuservice import injectable angularcore import http response angular import inavmenutabs navmenu import observable rxjsobservable import rxjsaddoperatormap import rxjsaddoperatorcatch import rxjsaddoperatordo injectable export class navmenuservice navmenuts export interface inavmenutabs missing", "num": "13817", "d": "1/2017"}, {"title": "value radio set reactive forms", "body": "submitting check one x current behavior radio input nt set based value example radio wo nt checked expected behavior checked minimal reproduction problem instructions second radio checked following example motivation use case changing behavior bug please tell us environment angular version browser chrome language typescript", "num": "13813", "d": "1/2017"}, {"title": "static upgrade instantiates upgraded services soon injector yet available", "body": "submitting current behavior factory upgraded services called angular initialized injector passed undefined factory expected behavior angular instantiate services later injector available minimal reproduction problem instructions multiple scenarios trigger bug service ngoninit lifecycle method put service injects upgraded services factory upgraded service called sooner bootstrapmodule upgradebootstrap injector available inject upgraded service downgraded service inject downgraded service run block upgraded service constructed injector still undefined http used early phase like angular translate downloading translation files service also instantiated injector undefined config function motivation use case changing behavior upgrading slightly bigger project often contains lot config run blocks sooner later issue triggered please tell us environment angular version tested angular broken browser chrome firefox maybe others language least typescript transpiled node aot issues", "num": "13811", "d": "1/2017"}, {"title": "resolve called child routes angular", "body": "submitting check one x current behavior route like customers lazy loaded module id parameter invoices module parameter resolvers invoices routes use imperative navigation change resolver id route called child resolver module called expected behavior route changed might consider run resolvers child routes similar guards minimal reproduction problem instructions route definition customers lazy loaded module const routes routes path component customerscomponent children path component customerslistcomponent path id component customersdetailscomponent resolve children path module component customersmoduledetailscomponent resolve resolvers output console enter following url browser resolvers executed press button page executes following ts thisrouternavigate customers invoices first resolver executed motivation use case changing behavior please tell us environment vscode angularcli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome", "num": "13810", "d": "1/2017"}, {"title": "less modules", "body": "submitting current behavior given angular app bootstrapped angularcli using less using less modules syntax throws error running module syntax nt work ca nt find file relative path extension works expected behavior work less module syntax please tell us environment angular version language typescript node aot issues", "num": "13809", "d": "1/2017"}, {"title": "webpack jquery plugin issue", "body": "using typescript application initial loading application taking time downloading individual js files resulting upto mb suggested use webpack order bundle js files single file configured necessary setups application loading get following exception regards jquery usuage coded using jquery selector typescript perform ui selection use jquery methods load time throwing exception even included necessary dependency webpackconfigjs jquery compiles without issues onload exception thrown exception typeerror function exception typeerror functionbrowserdomadapterlogerror anonymous function anonymous function unhandled promise rejection function zone task promisethen value typeerror function consoleerror error uncaught promise typeerror function consoleerror thisshowhome gt gt true plugin plugins new webpackprovideplugin jquery jquery jquery jquery jquery angular version browser language typescript node aot issues packagejson file name version scripts build tsc rootdir app outdir dist postinstall typings install build webpack progress build prod webpack p progress serve webpackdevserver progress license isc dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs jquery reflectmetadata rxjs zonejs devdependencies tsloader typescript typings webpack webpackconfigjs var webpack require webpack moduleexports entry app appmaints output path dist filename appbundlejs module loaders test ts loader ts plugins new webpackprovideplugin jquery jquery jquery jquery jquery", "num": "13808", "d": "1/2017"}, {"title": "auxiliary route lazy loaded module", "body": "submitting check one x current behavior lazy loaded module loads default go far ok component contains routeroutlet following routes go components loaded expected want change path display like try go working also tried hit url using like working either bug router missing something check plunkr make tests minimal reproduction problem instructions plunkr click demo click lazy load module module loaded click load auxiliary route non auxiliary component well displayed auxiliary component displayed please tell us environment ubuntu vsc yarn also happening plunkr sure relevant angular version one used plunkr browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13807", "d": "1/2017"}, {"title": "router query params removed using preservequeryparams", "body": "submitting check one x current behavior routerlink used together query parameters adding routerlink expected behavior query params still added href even preservequeryparams set minimal reproduction problem instructions run plunker note two links first link preservequeryparams set hovering link shows query string second link preservequeryparams set hovering link shows query params motivation use case changing behavior please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues cc deborahk", "num": "13806", "d": "1/2017"}, {"title": "subscribe unsubscribe route params query params", "body": "know subscribe route params query params must unsubscribe ondestroy method avoid memory leak example javascript ngoninit void thisparamssubscription thisrouteparamssubscribe param gt consolelog params type ngondestroy void thisparamssubscriptionunsubscribe needed subscribe route params query params time following question need unsubscribe yes unsubscribe observablecombinelatest also open suggestions note query params optional ie", "num": "13804", "d": "1/2017"}, {"title": "support interpolation", "body": "submitting check one x current behavior interpolations ignored", "num": "13802", "d": "1/2017"}, {"title": "ngswitchcase allow expressions starting", "body": "submitting check one x current behavior ngswitchcase allow expression beings meaning negative numbers expressed expected behavior ngswitchcase accept expressions beginning minimal reproduction problem instructions motivation use case changing behavior accepting expressions would accepted regular switch statement intuitive workaround negative numbers angular version browser language", "num": "13800", "d": "1/2017"}, {"title": "asyncpipe injected pipe", "body": "submitting check one x current behavior application bootstrapped white screen loading displayed error console provider changedetectorref caused injected another pipe declared providers module workaround found declare pipes component since changedetectorref available expected behavior possible declare providers array module injected everywhere pipes eg datepipe injected like minimal reproduction problem instructions steps reproduce inject another pipe service declare providers module plunker minimal reproduction motivation use case changing behavior plunker demonstrated one use case translates string executing server request would like reuse functionality asyncpipe order display resolved value server request please tell us environment angularcli node os linux angular version browser language typescript", "num": "13799", "d": "1/2017"}, {"title": "typeerror rootcandidatesegments undefined", "body": "submitting check one x current behavior application fails startup following exception also object passed nt segments property guess observable object expected behavior loading application minimal reproduction problem instructions application worked fine routing import ngmodule angularcore import routes routermodule preloadallmodules nopreloading angularrouter import homecomponent componentshomehomecomponent import welcomecomponent componentshomewelcomecomponent import tagscomponent modulestagscomponentstagscomponent import dashboardcomponent componentsdashboardcomponent import accessdeniedcomponent modulescorecomponentsaccessdeniedcomponent import notfoundcomponent modulescorecomponentsnotfoundcomponent import emptycomponent modulescorecomponentsemptycomponent const routes routes path settings component emptycomponent path component dashboardcomponent children path component dashboardcomponent path home component homecomponent path welcome component welcomecomponent path tags loadchildren appmodulestagstagsmodule tagsmodule path component notfoundcomponent path component notfoundcomponent ngmodule imports routermoduleforroot routes preloadingstrategy preloadallmodules exports routermodule export class approutingmodule loaded via imports appmodule import ngmodule angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import httpmodule angular import commonmodule angularcommon import coremodule modulescorecoremodule import approutingmodule approuting import appcomponent componentsappcomponent import welcomecomponent componentshomewelcomecomponent import homecomponent componentshomehomecomponent import dashboardcomponent componentsdashboardcomponent ngmodule imports approutingmodule browsermodule formsmodule httpmodule commonmodule export class appmodule motivation use case changing behavior please tell us environment visual studio npm iis angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13797", "d": "1/2017"}, {"title": "nested attribute translation translation applied", "body": "submitting check one x current behavior following example translation title applied remove ngcontainer works expected behavior translation applied minimal reproduction problem instructions adjusted plnkr doc motivation use case changing behavior need translate attributes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version", "num": "13796", "d": "1/2017"}, {"title": "navigate method router working root component", "body": "submitting check one x current behavior use method navigate router ngoninit method root component nothing happens code working fine child component expected behavior work root child component minimal reproduction problem instructions export class appcomponent implements oninit displaycomponent string constructor private router router private elm elementref thisdisplaycomponent elmnativeelementgetattribute displaycomponent ngoninit void working thisrouternavigate thisdisplaycomponent motivation use case changing behavior display dynamically component using router root component please tell us environment windows angular version browser language typescript node aot issues", "num": "13795", "d": "1/2017"}, {"title": "object nt support action", "body": "submitting check one x current behavior creating component emits value via evenemitter valuechanged val event syntax reports error object nt support action works correctly chrome firefox safari expected behavior component works properly minimal reproduction problem instructions slightly big plunker full reproduction please note extracted existing project might necessary code motivation use case changing behavior wrapping around jquery plugins please tell us environment windows angular startup project angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter recent browser internet explorer language typescript stacktrace error uncaught promise error error appcomponent class appcomponent inline caused object nt support action error error appcomponent class appcomponent inline caused object nt support action rethrowwithcontext eval detectchanges eval internaldetectchanges eval detectchangesinternal function detectchanges eval detectchanges eval detectchanges eval anonymous function eval tick eval loadcomponent eval bootstrap eval anonymous function eval moduledobootstrap eval anonymous function eval invoke node aot issues side note plnkr tutorial nt start ie either error referenceerror promise undefined r l anonymous function probably missing shims added thats case id appreciate guidance missing", "num": "13794", "d": "1/2017"}, {"title": "navigate canactivate might fail", "body": "submitting check one x current behavior route canactive provider returns false navigate displayed problem nt occurs canactive navigate path fe login real problem user permissions navigate custom path user go path user copy url user lost session user paste url navigate canactivate returns false goes fails goes login works expected behavior display routeroutlet minimal reproduction problem instructions angular version browser chrome language typescript", "num": "13793", "d": "1/2017"}, {"title": "reactive form change controlvalueaccessor nt update view", "body": "submitting check one x current behavior updating value form field uses formcontrol directive view nt updated say two fields hold form control changing one change happen using ngmodel happen calling expected behavior behaviour expected ngmodel using reactive formcontrols minimal reproduction problem instructions motivation use case changing behavior contract custom form fields using interface broken good example works currently ngmodel requires updating view relevant buttons value change using set buttons reactive forms currently based hack needs put place html labelpublic translate labelprivate translate please tell us environment os relevant angular version browser chrome language typescript", "num": "13792", "d": "1/2017"}, {"title": "script error loading component published library", "body": "render custom component using component file means get custom component could nt render component published library also getting script error error provider loading module systemjs file plnkr link custom component file plunkr link rendering component published library issue link navigate grid throws script error using version", "num": "13790", "d": "1/2017"}, {"title": "getting controlregisteronchange function changing form", "body": "submitting check one x current behavior patching form type items html throws patch initialize app everything works fine change form another tried array getting error investigation hours trying understand going seems error comes line works form fails form problem somewhat deep first time patch goes leaf branches reach second time goes first branch case problem nt know nt go leaf second time use functions methodology patch values looks exactly cases expected behavior throw error minimal reproduction problem instructions could nt make minimal demo would definitely share functions use create form needed motivation use case changing behavior please tell us environment nodejs running windows angular version browser chrome language typescript", "num": "13788", "d": "1/2017"}, {"title": "proposal add field comparison validator", "body": "submitting check one x current behavior validator comparing fields expected behavior provide validator compare", "num": "13787", "d": "1/2017"}, {"title": "router tries resolve values data object attached route", "body": "submitting check one x current behavior updated angular version angular router version router problem treatment data attached route handles correctly blank primitive values arrays plain objects value one types router considers token defining angular dependency tries load dependency look example expected behavior expect route allow attach data nature including object created custom function version problem minimal reproduction problem instructions developer defines route like function like case router considers instance permission token defining angular dependency tries resolve angular raises exception correspondingly provider value motivation use case changing behavior believe router allow attach data nature please tell us environment windows webstorm angular version browser language typescript node aot issues", "num": "13784", "d": "1/2017"}, {"title": "prevent strange behavior", "body": "x bug report gt search github similar issue pr submitting feature request support request current behavior angular serious problems version pacejs used application works time totally incorrectly sometimes works correctly like race condition something creates several issues previously pretty annoying hours debugging trying produce minimal reproduction problems find problem pacejs included angularclijson use pacejs even validation primitive form doesnt work correctly motivation took long time find whats cause problems pov mistake code error console tried everything different ie shims exclude compatible party libraries solutin etc demotivated hopeless would nice could explain whats concrete problem usage pacejs time maybe way prevent mysteries like first idea pacejs overmonkeypatch ngzone somewhere versions angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli browser internet explorer language typescript", "num": "13782", "d": "1/2017"}, {"title": "allow specifying id rather generating content", "body": "submitting check one x current behavior currently id messages translate generated based content element attribute extremely painful causes several problems soon content modified simply reformatted like example simply adding meaningless line break id changes message files must impacted contents might identical base language different translation languages example free might mean free speech free beer languages different words contents identical two different contexts base language need different translations languages avoid potential ambiguities expected behavior would much easier maintain developer could simply choose id optional additional feature extraction tool honored chosen id instead generating one free id computed based value attribute present rather based content element motivation use case changing behavior avoid constantly change ids message files message reformatted slightly changed make simpler specify two different translation units even base content identical please tell us environment osx sierra angular version browser na language typescript node aot issues", "num": "13781", "d": "1/2017"}, {"title": "impossible use pluralization", "body": "submitting check one x current behavior building bundle plural messages translations fail expected behavior bundle would built successfully minimal reproduction problem instructions tried using pluralization support using following template snippet extracting messages works almost fine two elements generated one whole message one pluralization part without source value however translate two transunits build application complains message translated unrelated unexisting id note replacing generated id one suggested error message makes compiler complain missing translation generated id translate message twice using two ids make work expected please tell us environment macos x sierra following versions angular version browser na language typescript node aot issues", "num": "13780", "d": "1/2017"}, {"title": "feature request binding multiple class either class ngclass", "body": "common case want bind multiple classes based single logical parameter currently something like would really nice able comma", "num": "13778", "d": "1/2017"}, {"title": "aot supporting manipulation metadata eg decorators", "body": "submitting check one x current behavior unclear whether bug feature request thus marked currently use lot decorators modify dependencies components also experimented modifying metadata eg looking using style api accessing wrapped version eg unfortunately none approaches seem work aot compilation mode bummer surprising finding would principall want jit aot functionality wise expected behavior trivial example expect work aot mode typescript export function mycomponent args return component args mycomponent selector myapp templateurl appcomponenthtml export class appcomponent case relies static analysis sounds brittle would nt better actually import components server side analyze meta data although course risks code run clientonly dependencies potential side effects hmmm hard maybe kind plugin system ngc minimal reproduction problem instructions hard create plunkr think get gist motivation use case changing behavior allows less differences different ways running angular means less hurdles time spent fighting framework allows using decorators creatively separate different concerns utility decorators similar please tell us environment osx angular version language typescript higher nt work node aot issues", "num": "13777", "d": "1/2017"}, {"title": "directive hostbinding set input component", "body": "submitting bug current behavior issue similar seems problem whereby set input property meaning apply directive component tag said directive set component input property using throws following error expected behavior hoped would possible set component input property using simple directive though would also understand design design think error message reported back user improved nt clearly indicate nt work programmer might expect work minimal reproduction problem instructions motivation use case changing behavior use cases would simplified ability able set component input property without modifications source component one use cases highlighted example resolves around mdinput using external library influence property set indicating component disabled wanted use together role checking directive disable enable input based user role permissions course ways like wrapping input provides custom input value accessor components would us thought would easier go route instead wrapping inputs angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "13776", "d": "1/2017"}, {"title": "opaquetoken used setup router guard", "body": "submitting current behavior thrown opaquetoken used token canactivate guard di expected behavior work workaround using class instead minimal reproduction problem instructions error boostrap motivation use case changing behavior opaquetoken intended use di working special case please tell us environment angular version browser chrome language typescript", "num": "13774", "d": "1/2017"}, {"title": "support object literal property value shorthand literal bindings", "body": "submitting check one x current behavior throws error expected behavior equal minimal reproduction problem instructions", "num": "13773", "d": "1/2017"}, {"title": "minifying html js files production", "body": "hi team looking help tried many repository regards minifying js html css files production used version deployed onto production using node web server could use config file development testing production sure tried enableprodmode function please let know deploy production minifying js html files", "num": "13772", "d": "1/2017"}, {"title": "ngif working used inside template tag", "body": "submitting check one x current behavior using ngif inside template tag fire click event inside template control html inside template gets deleted expected behavior events fired inside template get deleted working perfectly angular rc minimal reproduction problem instructions please see mentioned issues repeater component using iterating data open please click list item clarity component selector myapp template export class appcomponent dllapprovalstatus name name name myclick data alert data main component motivation use case changing behavior please tell us environment visual studio code using iis server angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13771", "d": "1/2017"}, {"title": "upgrade adapter causing component run outside zone", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior using upgrade adapter using ngif components angular runs components outside zone causes gui update expected behavior expect angular component run zone regardless upgrade adapter without works fine minimal reproduction problem instructions zone lost example open console click see logging zone ore see using ngif suddenly outside zone example without upgrade adapter working logging console still zone zone working motivation use case changing behavior working without upgrade adapter work way upgrade adapter please tell us environment chrome angular version browser language typescript", "num": "13770", "d": "1/2017"}, {"title": "invalid provider ngmodule desktopmodule instances provider type allowed got authservice undefined", "body": "submitting check one x current behavior module import ngmodule angularcore import browsermodule angularplatformbrowser import reactiveformsmodule angularforms import routermodule angularrouter import httpmodule jsonpmodule angular import rxjsrx import desktopcomponent accountslogincomponent skrivbordcomponent desktoproutingmodule sidebarcomponent navbarcomponent maincontentcomponent utilsexportcomponentsutils import authguard authservice utilsexportservicesutils ngmodule imports browsermodule reactiveformsmodule httpmodule desktoproutingmodule jsonpmodule declarations desktopcomponent accountslogincomponent skrivbordcomponent sidebarcomponent navbarcomponent maincontentcomponent providers authservice authguard bootstrap desktopcomponent export class desktopmodule exportservice provider exportservicesutils authguard service import injectable angularcore import canactivate router activatedroutesnapshot routerstatesnapshot canactivatechild navigationextras canload route angularrouter import authservice utilsexportservicesutils import authservice utilsexportservicesutils injectable export class authguard implements canactivate canactivatechild canload expected behavior getting error console invalid provider ngmodule desktopmodule instances provider type allowed got authservice undefined actually trying import injectable service one ts file exportservicesutils export services file check bold text reference motivation use case changing behavior motivation keep code clean instead make multiple references import export one file please tell us environment visual studio update packagejson name treservadesktop version description treservadesktop packagejson documentation supplemented testing support scripts start tsc amp amp concurrently tsc w liteserver tsc amp amp concurrently protractor protractorconfigjs killothers success first lint tslint appts verbose lite liteserver webdrivermanager update test tsc amp amp concurrently tsc w karma start karmaconfjs testonce tsc amp amp karma start karmaconfjs singlerun tsc tsc tsc w tsc w keywords author license mit dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter devdependencies concurrently liteserver typescript repository", "num": "13769", "d": "1/2017"}, {"title": "unsupported import syntax", "body": "submitting check one x current behavior try run ngc file includes import syntax get error syntax supported expected behavior expect compile issue like tsc minimal reproduction problem instructions motivation use case changing behavior aliasing namespaces please tell us environment windows npm angular version language typescript node aot issues", "num": "13768", "d": "1/2017"}, {"title": "feat router add paramsfromroot getter", "body": "follow basically like find way flattened view router params available components components need know router tree configured see implementation idea submitting check one x current behavior components would need manually traverse tree order find parameters defined router tree expected behavior components incognizant router configuration finding parameter values motivation use case changing behavior helps components consuming activatedroute finding parameters defined route decoupling knowledge nested routers configured angular version", "num": "13767", "d": "1/2017"}, {"title": "feat ngdecsendant content projection ancestors descendant classes", "body": "submitting check one x problem inspired template provided ancestor component useful descendant component since content reference used build descendant even limits usefulness inheritance model building components proposal add pseudoelement called used analogously except content descendant class template instead instantiating template descendant components required use elements contains content projected ancestor template descendant use element root element template template replace ancestor template instead extending example class baseclass component template class mycomponent extends baseclass would interpreted written", "num": "13766", "d": "1/2017"}, {"title": "feat allow using ancestor decorator values declare descendant decorators", "body": "submitting check one x problem specifying decorator component descendant decorator overrides ancestor decorator become problematic descendant class wants modify value supplied decorator solution currently snapshot ancestor values snap shots maintenance issues ancestor values ever changed descendants need updated updating descendant classes impossible component reusable library library author might access descendants unclear descendant meant override intended copy updating descendant classes dangerous proposal include special value called usable specifying decorators allows referencing value decorate ancestor would substitutable value decorator substituted template code generation ancestor decorator field value corresponding field value used object spread syntax mean include ancestor properties inherited values would equivalent specifying decorator values would also allowed arrays substituted ancestor array example ts component stylesurl basestylescss providers baseproviders class basecomponent component inherited providers inherited provider sometoken usevalue somevalue template class mycomponent extends basecomponent limitations value substituted immediately value used calculations would otherwise supported example following supported would result type error typescript undefined behavior scenario would need use exported constant value supported without feature exported base class module", "num": "13764", "d": "1/2017"}, {"title": "formcontrolname could used component transclusion", "body": "version component selector parentcomponent inserted another template angular says control used without form", "num": "13761", "d": "1/2017"}, {"title": "template transclusion evaluated wrong moment", "body": "version component selector parentcomponent inserted another template parentcomponent div ngif logic error would error transclusion error happens", "num": "13760", "d": "1/2017"}, {"title": "form element focus inside ngcontent throws change detection error parent removed ngif", "body": "submitting check one x current behavior plnkr hard explain got ngcontent inside element ngif ngcontent form input press enter focus input callback toggles ngif remove parent element ngcontent get change detection error plnkr explain much better expected behavior put formtextbox outside ngcontent works nt also work inside one also plnkr nt tested template yet think work ngcontent minimal reproduction problem instructions type exception input without leaving input press enter submit form get error please tell us environment systemjs angular version browser tested chrome language typescript", "num": "13759", "d": "1/2017"}, {"title": "ngupgrade routing", "body": "submitting check one x current behavior route component viewcontroller cant find documentation using uirouting route expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13758", "d": "1/2017"}, {"title": "template inheritance ngcontent similar", "body": "component inheritance without template inheritance limited usefulness would good base component use tag say ngcontent inherited component template goes wicket java framework implements useful read", "num": "13757", "d": "1/2017"}, {"title": "better error message needed", "body": "submitting check one x current behavior incorrect templateurl component started instead would nice better error message case rather people needing find trial error error message received expected behavior would expect error message similar minimal reproduction problem instructions motivation use case changing behavior better developer experience common error please tell us environment linux visual studio code angular version browser compile time problem language typescript node aot issues", "num": "13756", "d": "1/2017"}, {"title": "expose xsrf token service", "body": "submitting check one x current behavior xsrf token used cookiexsrfstrategy retrieved cookie using private api clean way accessing token without either using private api parsing cookie motivation use case changing behavior xsrf protection works great standard xhrbased communication sometimes necessary plain html form nt post request via xhr case server frameworks allow send xsrf token part form data instead header need access current value token exposed service would allow inject component render token value form submit alternate solution would expose getcookie function browser platform public api feels silly include library parsing cookies know angular already angular version", "num": "13755", "d": "1/2017"}, {"title": "validator using another validator results strange onchange behavior", "body": "submitting check one x current behavior validator using another validator execution onchange triggers massively expected behavior work like normal run code xxxx increasing unlimited times every diggest minimal reproduction problem instructions plunker example email field working using validators password field however illustrates happens one type notice iteration numbers sky high motivation use case changing behavior one build validators wrapp validators validates returns new result like im equalto fix performance bug please tell us environment visual studio iis packagejson angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx node aot issues", "num": "13754", "d": "1/2017"}, {"title": "contentchild multiple templates inside", "body": "submitting check one x current behavior try use multiple tags inside new elements rendered last instead one dom tree content expected behavior contentchild always use first selector found dom tree minimal reproduction problem instructions add new item array new item list list template rendered another template siblings apply quick andugly fix get always last element ok seems uses first element ok elements flatten reverse order dom motivation use case changing behavior see plnkr please tell us environment angular version browser chrome language", "num": "13753", "d": "1/2017"}, {"title": "access higher parent component child direct parent", "body": "submitting current behavior child component access direct parent higher parent via expected behavior access matched parent despite direct higher one minimal reproduction problem instructions real app example menu items plunkr html logout motivation use case changing behavior need ability create menus contains list unknown thirdparty components example component templates listen component click event click menu closed requires accessing component parent component direct parent use service several menus page different names component input skiped example used manipulate menu openclose smth else pass name directly component template cant thirdparty components contained menu cause unkown components different modules know anything menu instance contains cant pass menu name component close menu via service thirdparty components need somehow access component worked well via property", "num": "13752", "d": "1/2017"}, {"title": "checkbox updates without updating checked value", "body": "submitting check one x current behavior trying use input checkbox checked attribute updates checkbox state even checked value updating following template change checkbox state without changing checkvisible value checkvisible expected behavior minimal reproduction problem instructions sample show current behavior multiple checkboxes click changes visible value odd items motivation use case changing behavior want allow user choose example one five options list disabling check update value click method please tell us environment windows webstorm npm connect server angular version browser language typescript", "num": "13749", "d": "1/2017"}, {"title": "route data undefined page reload", "body": "passing data along route reading canactivate implementation check whether user privilege page works fine navigated first time page reload route data undefined homeroutingts authguardservicets canactivate routesnapshot activatedroutesnapshot state routerstatesnapshot observable boolean issue privilegeid undefined page reload let privilegeid routesnapshotdata privilegeid number calls api privilege id returns boolean angular router", "num": "13748", "d": "1/2017"}, {"title": "typeerror convert undefined null object formgroup", "body": "started working angular project encountered issue x bug report feature request support request current behavior formarray implementation html follow like components goes customcontrol nt reside someformgroup independent formcontrol components goes case value change customcontrol element gettin error like gt original exception convert undefined null object errorhandlerhandleerror next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit ngzonetriggererror onhandleerror zonedelegatehandleerror zonerunguarded ngzonerunguarded outsidehandler zonedelegateinvoketask zoneruntask zonetaskinvoke original stacktrace errorhandlerhandleerror next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit ngzonetriggererror onhandleerror zonedelegatehandleerror zonerunguarded ngzonerunguarded outsidehandler zonedelegateinvoketask zoneruntask zonetaskinvoke typeerror convert undefined null object functionkeys formgrouppatchvalue travelquotets safesubscriberschedulerfn next safesubscribertryorunsub safesubscribernext subscribernext subscribernext eventemittersubjectnext eventemitteremit gt expected behavior without adding customcontrol formgroup make work way implement formarray without using formgroup something like formarray enclosed group angular version browser language", "num": "13746", "d": "1/2017"}, {"title": "routernavigate promise resolves null documentation", "body": "submitting check one x current behavior using updating query params current route could nt find way call twice queryparams returned promise resolves documentation tell expected behavior part official docs seems way see queryparams changed get triggered queryparams nt change way minimal reproduction problem instructions motivation use case changing behavior want call method time queryparams change either user edited url manually queryparams change update form form update set new queryparams trigger method call also button inside form reexecute method though need reliable way find queryparams changed please tell us environment macos sierra vs code npm webpack webpackdevserver angular version tested browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13745", "d": "1/2017"}, {"title": "remove reference angular dev mode warning", "body": "running app dev mode console emits following log may want remove reference framework call", "num": "13743", "d": "1/2017"}, {"title": "lazy load angular modules router problem", "body": "submitting check one x current behavior code appmodule approutes homemodule homeroutes packagejson expected behavior lazy load module route call minimal reproduction problem instructions run ng serve got error cli one console browser motivation use case changing behavior none please tell us environment macos sierra angular version angular see packagejson browser language typescript see packagejson node aot issues", "num": "13742", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "pls add plunkr repro", "d": "1/2017"}, {"body": "dzmitryshylovich try create one", "d": "1/2017"}, {"body": "try use import application working without issues", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "syntax looking see", "d": "1/2017"}, {"body": "pls add plunkr reproduction", "d": "1/2017"}, {"body": "dzmitryshylovich nt know yet create lazymodule read documentation specify appwide singleton providers shared module lazy loaded module imports shared module make copy service", "d": "1/2017"}, {"body": "could implement feature module modulewithproviders import module applicationrootmodule lazymodule import", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "ericmartinezr use complex property custom tag like", "d": "1/2017"}, {"body": "abinayasubbiah would want use customtagcomponentts use input form public form yourformtype public get fname return thisform amp amp thisforminame", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "bug angular issue", "d": "1/2017"}, {"body": "seems unstable", "d": "1/2017"}, {"body": "looks like need polyfill see issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "thanks quick response write stackoverflow anyway polyfill worked angular version", "d": "1/2017"}, {"body": "providers provide xsrfstrategy usevalue new cookiexsrfstrategy responsetoken responsetoken call functions decorators see replace factory provider providers provide xsrfstrategy usefactory xsrffactory export function xsrffactory new cookiexsrfstrategy responsetoken responsetoken", "d": "1/2017"}, {"body": "pls report angularjs issue tracker", "d": "1/2017"}, {"body": "thanks nt aware differing projects reported", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "whoops nt find one searching closing", "d": "1/2017"}, {"body": "interesting question ask make sense host properties listeners structural directives let rewrite desugared form would host listener tag mean question gets even interesting notice tag rendered present final dom got impression plunk assumes structural directive seats element reality element interesting corner case would good know reallife use case trying important understand underlying usecase host bindings listeners nt make much sense things stand today", "d": "1/2017"}, {"body": "inject structural directive hostlistenerbinding use host", "d": "1/2017"}, {"body": "inject elementref structural directive hostlistenerbinding use host nt think injected corresponds comment node serves anchor wold good focus specific reallife usecase", "d": "1/2017"}, {"body": "make sense host properties listeners structural directives legit question makes sense listen global events scrolling etc listening host events events nt make sense described related example could simple directive showshides element based scroll position window size think ngif triggered global events", "d": "1/2017"}, {"body": "also think supposed work hoping feature implemented soon save lot time everyone", "d": "1/2017"}, {"body": "yes planned help would appreciated", "d": "1/2017"}, {"body": "good idea thumbs", "d": "1/2017"}, {"body": "great idea adding one use case large project scenario localization engineer want know file template string come communicate developer owns file template", "d": "1/2017"}, {"body": "hi vicb glad know plan place please share timeline plan", "d": "1/2017"}, {"body": "love idea hope see feature implemented soon definitely help better manage strings", "d": "1/2017"}, {"body": "think would convenient allow routerlink support case binding resolves null empty array undefined case expect tag created without href attribute empty", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "compile dynamically find wo nt work aot avoid", "d": "1/2017"}, {"body": "problem method complicated messy would rather like see angular team give us solution createdynamiccomponent etc else fails solution might needed thank quick reply", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "repo pls reopen", "d": "1/2017"}, {"body": "fixed backported included next release see fix action", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "create structural directive use element", "d": "1/2017"}, {"body": "probably issue rollup configuration paste", "d": "1/2017"}, {"body": "build directive put shared module export", "d": "1/2017"}, {"body": "dzmitryshylovich tried worked thanks", "d": "1/2017"}, {"body": "took ages figure documentation updated download systemjs root app import script tag indexhtml remove systemimport app rename everything system systemjs indexhtml finally looks like indexhtml loading get locale id somehow documentlocale es lt p gt map text plugin systemjsconfig map text systemjstextpluginjs export function gettranslationproviders promise declare let systemjs function gettranslationswithsystemjs file string return systemjsimport file text relies text plugin", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "already", "d": "1/2017"}, {"body": "fixed", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "seriously could subscribe issues tracking subject", "d": "1/2017"}, {"body": "fix ts pr port better tests", "d": "1/2017"}, {"body": "agree silence closure warnings", "d": "1/2017"}, {"body": "think longterm ensure given warning redundant ts tooling silence closure warning set warninglevelquiet compiler options", "d": "1/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "oh sorry closing one opened", "d": "1/2017"}, {"body": "pls add plunkr repro", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "error comes inside comment", "d": "1/2017"}, {"body": "xaviergxf yeah see thx", "d": "1/2017"}, {"body": "however private exists would nt make sense view would nt able access private properties methods already ca nt access private properties aot", "d": "1/2017"}, {"body": "yeh members exposed templates public nonissue", "d": "1/2017"}, {"body": "works intended supported", "d": "1/2017"}, {"body": "strangely multiple false views single select", "d": "1/2017"}, {"body": "completely ignored way defined multiple select everything else single select", "d": "1/2017"}, {"body": "let add looking nodemodules exist dist cygdrivecmswebstudiowebdistouttsc root desktopveuhfol cygdrivecmswebstudiowebdistouttsc ls src", "d": "1/2017"}, {"body": "also tried windows command instead cygwin c mswebstudioweb gt c mswebstudioweb gt p srctsconfigjson error enoent file directory open c mswebstudiowebdistouttscnodemodulesangularpipessrcutilsutilsmetadatajson error native objectfsopensync objectfswritefilesync metadatawriterhostwritemetadata c mswebstudiowebnodemodules metadatawriterhostwritefile c mswebstudiowebnodemodules objectwritefile c objectwritefile c writeemittedfiles c doemit c emitfile c extraction failed c mswebstudioweb gt appears nodemodules missing tscout", "d": "1/2017"}, {"body": "able solve issue via believe still bug unless someone recommend env setting needs set look proper dir windows nodemodules regards", "d": "1/2017"}, {"body": "workaround without modifying angular router use route lecture id html strip curly braces everything behind parameter name value component thisrouteparams map params params gt thiscleanupparamsuffixes params switchmap params params gt thisserviceget params id clean parameter suffixes workaround cleanupparamsuffixes params params params let res let key params keyindexof let pos keyindexof let suffixlength keylength pos let realkey keysubstring pos let realvalue params key substring params key length suffixlength res realkey realvalue else res key params key return res", "d": "1/2017"}, {"body": "need provide impl", "d": "1/2017"}, {"body": "saying want class present absent time nt make sense", "d": "1/2017"}, {"body": "point taken though exmaple use case following ngclass component normal variable set inside component input variable problem still occures css class set last component even frist variale true", "d": "1/2017"}, {"body": "think duplicate eg take look", "d": "1/2017"}, {"body": "danielvarela probably need something like", "d": "1/2017"}, {"body": "gkalpak right indeed duplicate answer also right bad totally ignored fact would remove class evaluating clauses time adding guess closed", "d": "1/2017"}, {"body": "ui router party lib maintained core team nt think part angular official docs", "d": "1/2017"}, {"body": "believe large applications build using uirouter angular router versatile enough support large application part migration story need support uirouter based applications provide smooth migration angular uirouting providing migration story using uirouter guess need use uirouter migrating angular", "d": "1/2017"}, {"body": "version ui router angular", "d": "1/2017"}, {"body": "still nt solution new static upgrademodule", "d": "1/2017"}, {"body": "thought could support without required wo nt support fn body", "d": "1/2017"}, {"body": "angularjs used recommend adding much logic templates example reason behind core angularjs philosophy application logic controllers views need real conditional loop throw view expression delegate javascript method instead less concern angular know meant good able come handy nt include much logic afraid people end things like", "d": "1/2017"}, {"body": "gkalpak opinion one want discourage complex logic template ultimately template syntax exists first place convenience improve developer productivity feature makes simple clean capture somewhat common usecase especially functionalstyle programming worth fact people may go overboard", "d": "1/2017"}, {"body": "cc chuckjaz", "d": "1/2017"}, {"body": "custom decorators ignored transparent bug introduced fixed cases custom decorators produce errors please file bug libraries use custom decorators turn strict metadata checking annotation still record errors metadata errors reported static reflector seems like need way mark function class factory function produces reference class important constructed exported treated class maybe something recording comment block associated function would sufficient would consider symbols value returned identically treats symbols created using syntax", "d": "1/2017"}, {"body": "chuckjaz test first part see custom decorators work past case bit complicated sure single flag might aot compiler mysterious many many recursive ways register bypass class decorators defined core see code seems redundant usage base objects wired getting instantiated eg inside compiler angular runtime environment guess really important say way mixin fully supported microsofttypescript", "d": "1/2017"}, {"body": "seeing bypass registration classes special meaning context aot compile functions constructors registered known tested semantics use aot compile convinced extending right solution fixed support syntax proposed microsofttypescript thing need support something tell us produces classes currently need type information provide information necessary aot compiler produce valid typescript thing without annotation tells returns class type using would allow distinguish class factory without look function type", "d": "1/2017"}, {"body": "chuckjaz great implementation details planning comment annotation code decorators comments work issues limiting refactor wise analysis wise etc hand decorators currently effect code output require new decorator construct angular require extra build configuration", "d": "1/2017"}, {"body": "decorators restricted comment annotations", "d": "1/2017"}, {"body": "main idea add", "d": "1/2017"}, {"body": "see typescript implementation source map emitter", "d": "1/2017"}, {"body": "write unit tests via sourcemap already", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "terms selecting objects currently value comparison object reference work see plunker perform deep checking object properties equal identities must exactly sure problem comparison angularangular merged try use check issue still exists notify killed entire day dealing", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "design find explanation", "d": "1/2017"}, {"body": "ok actually look like", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "nice pr still included", "d": "1/2017"}, {"body": "\u30c4", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "forgot provide locale default", "d": "1/2017"}, {"body": "believe fixed", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "expect run called command line abort error ca nt get beyond point typing simply causes barf ca nt even see kind help message shocking angular bundling aot etc still sorry state", "d": "1/2017"}, {"body": "packagejson json name surveyorserver version description xxxxx main srcserverserverjs scripts deps gradlew downloaddeps amp amp npm update amp amp typings install amp amp gensscertsh start classpath nodepathnodemodules nodemodulesbinvertx run srcserverbootjs redeploysrcserverjs launcherclassiovertxcorelauncher conf janusconf djavautilloggingconfigfilevertxdefaultjulloggingproperties build server ts tsc p srcservertsconfigjson build client ts tsc p srcclienttsconfigjson build server ts watch tsc w p srcservertsconfigjson build client ts watch tsc w p srcclienttsconfigjson build help srcclientbuildscriptscompilehelpjs build prod css nodesass srcclientapp sourcemap srcclientapp outputstyle compressed output srcclientapp postbuild prod css postcss u autoprefixer replace srcclientappcss srcclientassetscsscss build prod css watch nodemon e scss x npm run build prod css build prod watch concurrently npm run build server ts watch npm run build client ts watch npm run build prod css watch build release npm run build help amp amp npm run build server ts amp amp npm run build client ts amp amp npm run build prod css start reload npm run build help amp amp npm run build server ts amp amp npm run build client ts amp amp npm run build prod css amp amp concurrently npm start npm run build server ts watch npm run build client ts watch npm run build prod css watch author license isc dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularupgrade autoprefixer autosize corejs datatablesnet faker jquery jqueryui jqueryscrollto jwtdecode materializecss nodeuuid nodemon postcss postcsscli reflectmetadata rxjs systemjs zonejs devdependencies concurrently later nodekit nodesass typescript typings vertxlangtypescripttypings node version", "d": "1/2017"}, {"body": "dzmitryshylovich well thats nice bug ngc simply fails run commandline options passed try pass project file fails error sure seems like bug", "d": "1/2017"}, {"body": "tried node still dies immediately", "d": "1/2017"}, {"body": "ugh due js npm versioning closing ugh still mess love stuff becomes incompatible minor xyz releases npm still nt lock file ca nt use yarn yarn open bugs git repos much waste js land", "d": "1/2017"}, {"body": "pls provide plunkr reproduction", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "problem using async service get value time asynchronously initially value hence error check plunk see flash could change date pipe ignore dzmitryshylovich wdyt crux problem passing nan pipe invalid argument clearly stated error message", "d": "1/2017"}, {"body": "could change date pipe ignore nan think makes sense ignore instead throwing error", "d": "1/2017"}, {"body": "think makes sense ignore nan instead throwing error yeh would nt hurt pr", "d": "1/2017"}, {"body": "thanks new angular fix wait data ready", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "milliseconds shown minutes", "d": "1/2017"}, {"body": "try browser console", "d": "1/2017"}, {"body": "also looks like remembers first date pipe result add value next", "d": "1/2017"}, {"body": "new date console gives thu jan cet", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "lazy loaded routes", "d": "1/2017"}, {"body": "nt get point", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "someone please try check issue stackoverflow answer", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "thx", "d": "1/2017"}, {"body": "could easily tested unit testcase required provide minimalstic demo yeah pls provide plunkr repro", "d": "1/2017"}, {"body": "please look plunker message hello male hello female hello female hello female", "d": "1/2017"}, {"body": "duplicate tltr design", "d": "1/2017"}, {"body": "dzmitryshylovich thanks pointing closing issue", "d": "1/2017"}, {"body": "pls provide plunkr repro", "d": "1/2017"}, {"body": "works expected thiscomponentinstancemessage thismessage setting class property angular know change mark cmp check automatically", "d": "1/2017"}, {"body": "true class component property property consistency template components change trigger change detection run angular detects component input change change detection strategy also detect eligible input changes strategy", "d": "1/2017"}, {"body": "input property annotation nt anything template components change trigger change detection template component angular generates host component wrapper handles things like cd etc case regular js class without wrappers magic way see create setter property somehow proxy", "d": "1/2017"}, {"body": "agreed creating setter input property include good solution still feel maybe bug change detection run component changedetectionstrategydefault changedetectionstrategyonpush component created viewcontainerrefcreatecomponent nt also create componentref wrapper containing changedetectorref new component", "d": "1/2017"}, {"body": "dzmitryshylovich chrisfulstow expected behaviour hard explain understand due internals run behind well complex component parentchild structure best make clear changed demo bit took components defulat onpush duplicated time template angular instantiate results components react change except dynamic onpush component components defined template fired since parent change detector logic check changes well done calling checking functions case component well running take container one managing us dynamic component nt know hence nt manage check change return true checkmessage make sure return true container component make sure change change detection mode component call check changes internal component fire components change detection mode set always hit dynamic component connected container container handle logic change detection logic runs go actually changing anything b change detection mode remind checked templated components changed container create dynamic component must hook change detection process using templates get free angular go dynamic must manually main function decides run change detector lives top level class compiled components derive never get checked", "d": "1/2017"}, {"body": "exclude", "d": "1/2017"}, {"body": "yes full file", "d": "1/2017"}, {"body": "pls provide github repo reproduction", "d": "1/2017"}, {"body": "reproduction repo", "d": "1/2017"}, {"body": "typescript angular nt officially support ts downgrade try", "d": "1/2017"}, {"body": "still error updated repo typescript", "d": "1/2017"}, {"body": "moduleresolution node", "d": "1/2017"}, {"body": "agamnentzar work real app without", "d": "1/2017"}, {"body": "results removing option results reproduction repo", "d": "1/2017"}, {"body": "real app", "d": "1/2017"}, {"body": "yeah added real app failed error looks like valid bug thx", "d": "1/2017"}, {"body": "try instead", "d": "1/2017"}, {"body": "plus many variations still problem file downloaded via link downloaded via blob code change kb almost double size", "d": "1/2017"}, {"body": "reason nt use link eventually need make secure via cookie headers etc something work since ca nt send headers via link putting info query string parameters", "d": "1/2017"}, {"body": "hard say anything without repro", "d": "1/2017"}, {"body": "repro examples point api client", "d": "1/2017"}, {"body": "nt examples basically angular http wrapper around native xhr try send request using hxr compare results", "d": "1/2017"}, {"body": "try figure something please close give couple days also considering looking public api like federal gov statistics similar returns spreadsheet could find far returns json thanks", "d": "1/2017"}, {"body": "hello able make work native xhr happy solution however still believe bug methods first work searchcriteria object let headers new headers headersappend contenttype applicationjson headersappend responsetype blob var blob new blob response arraybuffer type contenttype size instead var blob new blob response blob type contenttype received error request body nt either blob array buffer return blob catch thishandleerror one works generatemonthlyspreadsheet searchcriteria object observable close feel however sure someone else bump one thank xhr suggestion", "d": "1/2017"}, {"body": "hello thanks guidance one attempted xhr solution proposed still getting issue file corrupt file downloads bizarre filename open get file corrupted message pasted code basically using openxml generating excel verified corrupt whenever make get request file downloads clientside corrupt code pasted different providing help much appreciated continue investigate figure anything update post aspnet angular service export location fromdate date todate date observable angular component export thismanagementexportserviceexport thiscurrentlocation thisfromdate thistodate subscribe data gt thisdownloadfile data consolelog data error gt consolelog error downloading file gt consolelog completed file download downloadfile data var blob new blob data type applicationvndopenxmlformatsofficedocumentspreadsheetmlsheet var url windowurlcreateobjecturl blob windowopen url consolelog", "d": "1/2017"}, {"body": "service looks fine component wrong already blob data blob creating another blob current blob simply karen", "d": "1/2017"}, {"body": "thank much fixed problem thanks help", "d": "1/2017"}, {"body": "problem frustrating figure one glad could help", "d": "1/2017"}, {"body": "sounds like support request got resolved closing", "d": "1/2017"}, {"body": "still call bug since use xhr instead actually get work", "d": "1/2017"}, {"body": "think error regular event angular nt think handle differently plus angular error", "d": "1/2017"}, {"body": "saying every time use form attach method handle submit need remember put trycatch around contents method case framework happens throw error runtime", "d": "1/2017"}, {"body": "put trycatch around contents method another option behaves way", "d": "1/2017"}, {"body": "ok add form submit methods still leaves opportunity someone forget leaving data security issue event error bestrecommended way overrideextend ngsubmit ngform application wide level add ca nt forgotten", "d": "1/2017"}, {"body": "larslarsson think missing async pipe async pipe needed bind observable component definition", "d": "1/2017"}, {"body": "binding array issue chrome minimized different tab active refreshing application tab seen overwriteing property zone amp manually triggering stack overflow understand wrong work case", "d": "1/2017"}, {"body": "pls provide plunkr repro", "d": "1/2017"}, {"body": "ah words none else issue try boil something amp still issue thought maybe someone could fire whatever project amp modify chrome inactive page", "d": "1/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2017"}, {"body": "yes right think fault need learn zones better probably theory related signalr amp goes thru jquery subject amp observable probably nt save basically simple replicate hoped thanks", "d": "1/2017"}, {"body": "still issue nt understand recommendation belongs ngzone catch stuff eg sample boiled amp created stackoverflow question frontend code related ngzoneisinangularzone inside chrome logs ngoninit true amp creates signalr connection hub callbacks jquery promise outside inside settimeout everything inside navigate using router eg go empty page app amp navigate signalr page zone without timeout directly going without timeout using deeplinking", "d": "1/2017"}, {"body": "believe need prefix safari angular support vendor prefixes bindings pending pr", "d": "1/2017"}, {"body": "sorry false alarm made typo plunkr notice missing bracket google chrome intelligently works missing bracket safari nt adding bracket works fine ps need prefix safari updated plunkr good know support soon closing", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanku dzmitryshylovich without function", "d": "1/2017"}, {"body": "issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "need help dzmitryshylovich exception error appcomponent class appcomponent inline caused read property createcomponent undefined errorhandlerhandleerror typeerror read property createcomponent undefined", "d": "1/2017"}, {"body": "works expected host element nt class working example", "d": "1/2017"}, {"body": "different use case mine applying global css class plunker via edit maybe title wrong try find fitting one", "d": "1/2017"}, {"body": "different use case mine changed code plunkr probably misunderstand works", "d": "1/2017"}, {"body": "talking application encountered bug updated plunker show exactly", "d": "1/2017"}, {"body": "use hostcontext pseudoclass selector works like function form host looks css class ancestor component host element way document root useful combined another selector following example apply backgroundcolor style elements inside component ancestor element css class themelight case host element nt class", "d": "1/2017"}, {"body": "way document root thought would include global styles case achieve trying", "d": "1/2017"}, {"body": "thought would include global styles nt see relevant case tbh case achieve trying need add class change selector example like", "d": "1/2017"}, {"body": "please open docs issues", "d": "1/2017"}, {"body": "reason zonejs zoneawareerror refactored handle current issue angulartscwrappedtscts usererror implemented like javascript export class usererror extends error private nativeerror error constructor message string errors nt use current instead create new instance forward api nativeinstance const nativeerror super message error thisnativeerror nativeerror issue nativeerror cause infinite loop usererror implement baseerror angularcommonsrcfacadeerror", "d": "1/2017"}, {"body": "think contentchildren means direct content children", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanks dzmitryshylovich", "d": "1/2017"}, {"body": "phmello close works intended thx", "d": "1/2017"}, {"body": "issue related problem angular interpret element custom component special case special tags ngcontent ngcontainer", "d": "1/2017"}, {"body": "error clearer missing commonmodule imports nt missing import better error message expanded builtin directives used", "d": "1/2017"}, {"body": "pls reopen", "d": "1/2017"}, {"body": "probably need polyfill", "d": "1/2017"}, {"body": "dzmitryshylovich currently using still nt work link sent makes believe using link clear implement", "d": "1/2017"}, {"body": "noticed link quickstart example plunker render internet explorer ca nt reproduce works fine", "d": "1/2017"}, {"body": "blubberbo view mode ie probably compatibility", "d": "1/2017"}, {"body": "dzmitryshylovich strange load website get tytskyi sure check nt see anything strange tools compatibility view settings", "d": "1/2017"}, {"body": "yeah error pls reopen", "d": "1/2017"}, {"body": "dzmitryshylovich submitted saying something local internet explorer guess try recreate another minimal example show considering angular io site nt work application make work also", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "designed router rendering process synchronous guards resolves run process begins guards resolvers blocking actions deep child route holds entire rendering complete", "d": "1/2017"}, {"body": "bit disappointing considering api uses observables intuitively implies async rendering least case makes sense leave long running automatically recoverable actions router resolve activate guards", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "name innifrontendclient version license mit angularcli scripts ng ng start ng serve lint tslint srcts project srctsconfigjson typecheck amp amp tslint project typecheck test ng test webdrivermanager update standalone false gecko false protractor postinstall node hookscopyhooks private true dependencies angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter covalent ngrxcore ngrxeffects ngrxstore ngrxstoredevtools corejs fullcalendar moment ngformly primeng primeui reselect rxjs tshelpers zonejs devdependencies angularcompilercli typesjasmine typesnode angularcli codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmaremapistanbul protractor tsnode tslint typescript", "d": "1/2017"}, {"body": "found solution returning value pipe using wrappedvaluewrap value nt change detection work pipe returns value", "d": "1/2017"}, {"body": "switching production mode seems solve perhaps limited development mode confirm", "d": "1/2017"}, {"body": "tsvetomir yep looks like affects dev mode", "d": "1/2017"}, {"body": "pls add plunkr repro", "d": "1/2017"}, {"body": "dzmitryshylovich simple repro", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "use angular know created new", "d": "1/2017"}, {"body": "well said understand using form correct way however concerned potentially create bugs usecases opinion control setup called control cleanup error maybe missing something", "d": "1/2017"}, {"body": "pls add repro plunkr", "d": "1/2017"}, {"body": "sorry late response first plunker input providing number second plunker constructor providing number nt created service basically performance close example array created inside constructor maybe less slower per slice see data provided via input weirdly slow", "d": "1/2017"}, {"body": "guess angular uses input every time scroll change detection triggered angular traverses array looking changes", "d": "1/2017"}, {"body": "honest idea going even noticeable change even detaching component nt help yeah seems issue input even rendered items sliced array provided constructor simple fact binding large array causes performance issue even value nt accessedmutatedreassigned", "d": "1/2017"}, {"body": "even onpush changedetectionstrategy noticeable change even detaching changedetectionref component nt help yeah tried", "d": "1/2017"}, {"body": "reflection attributes get added dom nonprod mode need enable prod mode related issue", "d": "1/2017"}, {"body": "oh nt thought thank help", "d": "1/2017"}, {"body": "please add minimal plunker reproducing problematic formats inputs", "d": "1/2017"}, {"body": "note logic comes intl api built browsers would really uneasy fact broken across browsers fundamental usecases really need reproduce scenario confirm act", "d": "1/2017"}, {"body": "long nt specify locale manually modules providers issue every blank application need plunker providers provide localeid usevalue dede issue exists every user germany every browser simply use browser locale format numbers dates uses enus locale default", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "ok seems work since angular generated original tag expect able parse problem expect angular generate tag self closed", "d": "1/2017"}, {"body": "bug serializer", "d": "1/2017"}, {"body": "nope actually issue translation otherwise placeholder interpreted text", "d": "1/2017"}, {"body": "nt think outlet registered rather parameter route configs working perhaps unnamed routeroutlet afair requirement removed recently sure please provide plunker allows reproduce", "d": "1/2017"}, {"body": "added plunkr also one unnamed routeroutlet application", "d": "1/2017"}, {"body": "router renders components synchronously router outlets defined time named outlet need inside route component parent move named outlet appcomponent template next unnamed outlet", "d": "1/2017"}, {"body": "constructor inject window w window interface", "d": "1/2017"}, {"body": "dzmitryshylovich using string token type directly note quotes", "d": "1/2017"}, {"body": "interesting looks like happens even strings tokens", "d": "1/2017"}, {"body": "absolutely right duplicate workaround funny way injectable export class windowwrapper extends window export function getwindow return window ngmodule declarations appcomponent simpleroutecomponent imports browsermodule formsmodule httpmodule approutingmodule providers provide windowwrapper usefactory getwindow bootstrap appcomponent export class appmodule constructor w windowwrapper consolelog w", "d": "1/2017"}, {"body": "token type argument type", "d": "1/2017"}, {"body": "yeah get absolutely correct", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "similar errors see direct reference application code one jsut refers angular core trying say known issue currently broken", "d": "1/2017"}, {"body": "fkolar information reproduce", "d": "1/2017"}, {"body": "unfortunatelly error general cant even say look get time disassemble app see part causing wait untill next version provide specific errors logs", "d": "1/2017"}, {"body": "nt need error logs pls provide github repo reproduction", "d": "1/2017"}, {"body": "right public repo internal project need dissamble slowly app see part causing link angularmaster local put consolelog staticreflectorts help debug area faster", "d": "1/2017"}, {"body": "find currently alloweddisallowed aot", "d": "1/2017"}, {"body": "great let look thank fk", "d": "1/2017"}, {"body": "see areas already could wrong starting using private modifiers using arrow fuctions ngmodule initialization closing issue come back something specific needed go thru aot current status update project accordingly", "d": "1/2017"}, {"body": "issue angular support referencing variables way angular would use interpolation xmb contain extraction soy templates angular templates make sure construct used soy templates parsed angular even angular able deal particular syntax fix add token lexerparser expect fix land sometime next week", "d": "1/2017"}, {"body": "also need add support offset", "d": "1/2017"}, {"body": "cc jasonaden", "d": "1/2017"}, {"body": "mhevery use case component must part module throw error compilation purpose arg able create component context different module plus user friendly syntax already faced similar issue router need tool automatic conversion", "d": "1/2017"}, {"body": "dzmitryshylovich let clarify yes type part typefactory otherwise would issue aot jit always behave api change change would allow dynamically load module existence load component module use case someone wants lazy load code add lazy loaded code page using", "d": "1/2017"}, {"body": "mhevery aot jit always behave api change nt jit", "d": "1/2017"}, {"body": "nt ngmodulefactory jit yes", "d": "1/2017"}, {"body": "got thx", "d": "1/2017"}, {"body": "pls reopen", "d": "1/2017"}, {"body": "moved issue", "d": "1/2017"}, {"body": "see plus need demo app otherwise actionable", "d": "1/2017"}, {"body": "mgarrow fact need apply various techniques make angular application fast including using using manual manipulations debouncing rx streams using production using manual chande detection reduce heavy calculation course bundle app single file could check guide starting point", "d": "1/2017"}, {"body": "thanks comment true still explain app works fine chrome actually trying lazy loading app right works locally load server error", "d": "1/2017"}, {"body": "use aot", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "thanks dzmitryshylovich close favour issue", "d": "1/2017"}, {"body": "example listening routes preloaded guide", "d": "1/2017"}, {"body": "brandonroberts thanks link nt know missed fyi open stack overflow question also got responses thanks close issue", "d": "1/2017"}, {"body": "brandonroberts implemented preloading strategy however still unable tell module actually preloaded implementation javascript import rxjsaddobservableof import injectable angularcore import preloadingstrategy route angularrouter import observable rxjsobservable injectable export class selectivepreloadingstrategy implements preloadingstrategy preloadedmodules observable preload route route load gt observable observable routedata amp amp routedata preload return observableof null else log route path console consolelog selectivepreloadingstrategy preloading module routepath first runs correctly module preloading however callback never gets executed sure ideas thanks angular version", "d": "1/2017"}, {"body": "like see lazy loaded preloading events", "d": "1/2017"}, {"body": "vicb reopen one", "d": "1/2017"}, {"body": "pls add plunkr", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "dzmitryshylovich much time working issue anyway good work", "d": "1/2017"}, {"body": "thanks dzmitryshylovich closing duplicate", "d": "1/2017"}, {"body": "nope", "d": "1/2017"}, {"body": "case components precompile components need compile runtime suggestion pathforward valid requirement", "d": "1/2017"}, {"body": "vasuneet explain cases think need compile runtime strongly suggest avoiding forever couple shipping large slow compiler runtime", "d": "1/2017"}, {"body": "created framework based created components provide feature inject template using argument like provide way accept template runtime mean somehow need compile providing templates dynamic basis urgent requirement compile dynamically however components necessary feature need going integrate template authoring tool template authoring done end able author template using authoring tool integration accepted able done nonaot version solution aot version runtimecompiler available solution working aot version must performance go nonaot version salable feature framework already done thing earlier", "d": "1/2017"}, {"body": "update", "d": "1/2017"}, {"body": "similar case project dashboard component template depends user logged platform notaot version project dashboard component gets template api server compiles injects results viewcontainerref would use aot increase performance without compiler think possible", "d": "1/2017"}, {"body": "using binding syntax using usual html attributes", "d": "1/2017"}, {"body": "youneschaoui hardcore data template per suggestions also could use advanced technics", "d": "1/2017"}, {"body": "actually makes sense currently component level", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "thank dzmitryshylovich", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "get firefox", "d": "1/2017"}, {"body": "believe fix", "d": "1/2017"}, {"body": "workaround build aot option", "d": "1/2017"}, {"body": "pls add small demo plunkr", "d": "1/2017"}, {"body": "tried use insted string pattern", "d": "1/2017"}, {"body": "vihuarar please try pass instead string", "d": "1/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "1/2017"}, {"body": "tytskyi suggestion works perfectly whats difference cases use insted string", "d": "1/2017"}, {"body": "vihuarar consider source code pass string validator wrap create otherwise treat regexp matter pass well regexp bit flexible example nt want check startend personally prefer always use regexp know validator uses", "d": "1/2017"}, {"body": "thank tytskyi clear enoght taking example use email new new regexp az rule fechadenacimiento new pass like already wrapped fechadenacimiento new also tried worked fechadenacimiento new validate date", "d": "1/2017"}, {"body": "vihuarar extracted code builds pattern angular javascript function buildpattern pattern let regex let regexstr typeof pattern string regexstr regex new regexp regexstr else regexstr patterntostring regex pattern return regex consider string inputs let buildpattern output let buildpattern output let buildpattern output false false false let consider javascript input output notice backslashes gone constructor works need escape symbols details works suggest always use regular expression instead string extra work escaping pattern hope clear ps also regular expression set regex flags want limit nt need", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "pls provide repro plunkr", "d": "1/2017"}, {"body": "even though occurring webpack local environment trying create plunkr got issue please look", "d": "1/2017"}, {"body": "got fixed help yurzui stackoverflow understand need selector bootstrap component use instead ever stange would work using systemjs doest nt work plunkr webpack thanks g\u00fcnter z\u00f6chbauer yurzui fixed plunkr", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "know report issues", "d": "1/2017"}, {"body": "thanks dzmitryshylovich closing probably opening", "d": "1/2017"}, {"body": "pls add small demo plunkr without", "d": "1/2017"}, {"body": "digging specifically cwd projectdir basepath maints called buildsh tsc destination build files values rootdir maproot maybe baseurl tsconfigbuildjson module tried combinations nt much luck find time work busy next couple weeks someone else wants give shot use following command package root attach listener vscode step process output files found", "d": "1/2017"}, {"body": "upon investigation realize escaping introduced icu messages interpolation enabled used delimiter icu messages could used text nodes escaped original reason allowing making interpolation strings configurable able type without problems gone mentioned stuff might break looks like reasons hardcoded braces", "d": "1/2017"}, {"body": "sorry issue", "d": "1/2017"}, {"body": "sorry wo nt happen time soon ever would incur huge maintenance cost complexity us good news folder layout subfolder corresponds npm module true folders directly correspond npm modules", "d": "1/2017"}, {"body": "hi chrisjlee would say lot easier navigate angular code together suggest clonedownload repo laptop run smart ide ide quickly get big picture something connected something need select element use navigation options ide find usages quickly reason discover used combine search regular expressions get super power better discovering code using browser", "d": "1/2017"}, {"body": "thanks nonethless nt think would fly curious rational", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "ok problem discover dependencies packagejson templated", "d": "1/2017"}, {"body": "empty save changes", "d": "1/2017"}, {"body": "tried explain problem without code ok prepare code tomorrow morning", "d": "1/2017"}, {"body": "got issue returns need working example", "d": "1/2017"}, {"body": "example ready tried override document via document opaque token failed root document used domrenderer tried set document provider app module result true value injected app domrenderer still uses global document", "d": "1/2017"}, {"body": "inject parentdocument instead rootdocument returns well", "d": "1/2017"}, {"body": "need something like", "d": "1/2017"}, {"body": "terribly wrong search embedding container queryselector called shadowroot would like bind angular context shadowroot webcomponent new example", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "wow thanks concerned shadowroot implement document contract future may problem", "d": "1/2017"}, {"body": "would like sure angular uses document documentfragment think documentfragment lightweight document subset methods document", "d": "1/2017"}, {"body": "angular expect string according build env probably add plugin would inline template closing angular issue related build config", "d": "1/2017"}, {"body": "wanted add use tabs inside component uses get error wrapped element think something animations inside tabs module attempting fire item hidden ngif ca nt life figure get work correctly", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "plunker code probably look make working clicking tofoo display error component message clicking tomytpg display dynamically externally loaded component", "d": "1/2017"}, {"body": "clicking tofoo display error component message", "d": "1/2017"}, {"body": "routerlink pointing wrong path path wrong want load errorcomponent", "d": "1/2017"}, {"body": "u save changes everything correct", "d": "1/2017"}, {"body": "please look", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "tried implement lazy loading please correct", "d": "1/2017"}, {"body": "issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "please help fix alone", "d": "1/2017"}, {"body": "last time", "d": "1/2017"}, {"body": "relative paths work loadchildren right working made give full path", "d": "1/2017"}, {"body": "one thing observed using resetconfig lost social url support means unable navigate links browser url bar directly ex entering directly browser url bar unable navigate", "d": "1/2017"}, {"body": "reason never change user code generate new code change user code would break dependency tracking tools build systems since many allow two copies source file rewriting source file would limit kinds build tools could used", "d": "1/2017"}, {"body": "samverschueren think closed actionable", "d": "1/2017"}, {"body": "somewhat hacky workaround posted repository case people linked topic thanks following dzmitryshylovich", "d": "1/2017"}, {"body": "exported", "d": "1/2017"}, {"body": "works expected also worth noting docs still refer ngcontainer", "d": "1/2017"}, {"body": "amaschas documents outdated write something like", "d": "1/2017"}, {"body": "api docs date angulario sync", "d": "1/2017"}, {"body": "use native event names custom events", "d": "1/2017"}, {"body": "thanks quick reply see suggesting name docs nt misleading also sure somewhere already suggestion stated somewhere docs naming convention thanks", "d": "1/2017"}, {"body": "see eg", "d": "1/2017"}, {"body": "mentioned native also found unanswered question topic", "d": "1/2017"}, {"body": "suggestion stated somewhere docs naming convention common sense use native element name custom components lead unpredictable behavior true event names change pls file issue", "d": "1/2017"}, {"body": "cool thanks clarifying", "d": "1/2017"}, {"body": "sorry posted mistake open angularcli", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "drewjocham looks like using angular cli case zonejs already imported polyfillsts nt need indexhtml ditto corejs reflect css etc", "d": "1/2017"}, {"body": "practical scenario applies imagine error message banner potentially want display number different error messages given potentially large set messages important content banner data driven ngtranslate implementations would simply pass resource key component lookup current resource bundle angular implementation sure achieve way think defining markup every error message combination condition error error error messagen seem like reasonable request apologize advance missing something obvious cc vicb mhevery robwormald", "d": "1/2017"}, {"body": "plan available ts code translate ts files ts const errors found server error eta yet answer q please close issue already one opened nt ref handy", "d": "1/2017"}, {"body": "vicb ok thanks think looks promising one final question closing support variable expressions strings well similar use interpolation expressions template", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "got work sorry", "d": "1/2017"}, {"body": "typescript error related angular", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "load module using code also depends loader using systemjs look systemjsngmoduleloader class", "d": "1/2017"}, {"body": "dietergeerts webpack use module use get module need supply injector well look router", "d": "1/2017"}, {"body": "everything use metadata must exported", "d": "1/2017"}, {"body": "dzmitryshylovich thanks feedback still throwing error per understood line code longer supported seems even already exported still ca nt see", "d": "1/2017"}, {"body": "removing brackets fixed error info thanks dzmitryshylovich", "d": "1/2017"}, {"body": "find list currently supportedunsupported aot features", "d": "1/2017"}, {"body": "removing brackets fixed error export const dictionary langenname langentrans langidname langidtrans yeah error msg dissapear translation feature also nt work", "d": "1/2017"}, {"body": "use", "d": "1/2017"}, {"body": "alexzuza said nt assumption anything wrong refactored class selectors correct way still think would good mention something would made changelog really searching hours dzmitryshylovich pointed class selector formatted incorrectly", "d": "1/2017"}, {"body": "looks like side effect", "d": "1/2017"}, {"body": "closing issue thanks dzmitryshylovich pointing right direction finding side effect added pr reference issue put version might useful people well release version angular nt mind thing aware something wrong really long search since error get angular nt really helpful honest pr", "d": "1/2017"}, {"body": "would usable aot mode", "d": "1/2017"}, {"body": "using webpack append whatever loaders like", "d": "1/2017"}, {"body": "thnx suggestion outside scope current angular suggested might process templates build time using templating language choice", "d": "1/2017"}, {"body": "using angularcli configure loaders webpack issue angularcli", "d": "1/2017"}, {"body": "way input like break current behavior", "d": "1/2017"}, {"body": "believe workaround like override", "d": "1/2017"}, {"body": "dzmitryshylovich work requires duplicate link use array route format expects plain string", "d": "1/2017"}, {"body": "imo provided party directive", "d": "1/2017"}, {"body": "pls add small demo plunkr", "d": "1/2017"}, {"body": "small demo feature yet implemented", "d": "1/2017"}, {"body": "demo trying accomplish", "d": "1/2017"}, {"body": "want pass formcontrol component component need know formgroup formarray formcontrol child nt see without demo angular issue", "d": "1/2017"}, {"body": "added textboxcomponent replaced input element dynamicformquestioncomponenthtml texbox passing control parameter", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "match example issue pass formcontrol controlvalueaccessor implement interface controlvalueaccessor done using formcontrolname done view lines code please show would nt nice simple solution formcontroldirective", "d": "1/2017"}, {"body": "need import", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "think use following workaround gender required", "d": "1/2017"}, {"body": "dzmitryshylovich change error message radio selection", "d": "1/2017"}, {"body": "alexzuza thank works although think angular docs template reference variables misleading refer template reference variable anywhere current template true using ngfor creates block scope", "d": "1/2017"}, {"body": "seeing problem anything created inside ngswitch well", "d": "1/2017"}, {"body": "pls add small demo", "d": "1/2017"}, {"body": "demo", "d": "1/2017"}, {"body": "create external template component extends base component uses templateurl add components template imported module declared base component design disable specifying", "d": "1/2017"}, {"body": "verified applying customelementsschema prevented compiler failures project use cases error messaging unfortunate components getting recognized angular components web components concerned users library may deal silent failures need inherit one base components upside informed inner workings jitcompiler thanks help", "d": "1/2017"}, {"body": "example attribute ngreflectform allowed element form point", "d": "1/2017"}, {"body": "enable prod mode", "d": "1/2017"}, {"body": "hi sorry closing issue found enabling prod mode resolves issue thanks lot", "d": "1/2017"}, {"body": "could also look answer old angularjs may useful", "d": "1/2017"}, {"body": "able resolve issues except one tried get help stackoverflow well luck hence reopening issue inside formgroup used formcontrolname form elements example input formcontrolname searchbycombo class customcombocontrol type text name searchbycombo id ctry enabling prod mode still rendered formcontrolname something giving errors attribute formcontrolname allowed element input point please help", "d": "1/2017"}, {"body": "provide plunkr", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "worked thanks ton", "d": "1/2017"}, {"body": "pls provide github repo reproduction", "d": "1/2017"}, {"body": "would double check make sure tsconfigjson settings picking ngmodule file used generate corresponding ngfactory generally add following section tsconfigjson maints entry point app appmodule ngmodule used generate ngfactory referenced maints", "d": "1/2017"}, {"body": "moment code ca nt shared try reproduce smaller open repo added files appmodulets maints tsconfigjson nt change anything get ngfactory files created upgrade get ngsummaryjson files none ever seen role ngsummaryjson play sort intermediate file assume ngc usually pretty good errors quietly creates ngsummaryjson files complains end ca nt find appmodulengfactory file makes sense never created", "d": "1/2017"}, {"body": "little digging looks like slight change behavior ngc previous versions eg ngfactoryts files generated appnodemodules angular directory sure include output files nodemodule angular commonmodulengfactoryts presence output files affect generation ngfactoryts files application files must deleted ngc run otherwise application ngfactoryts files created ngsummaryjson files created entirely sure anything created appnodemodules directory note project npm deposits files one directory nodemodules appnodemodules app directory contains application ts files everything works add task gulpconfigjs delete everything appnodemodules running ngc works real ugly", "d": "1/2017"}, {"body": "specifying tsconfigjson factories go directory choosing", "d": "1/2017"}, {"body": "yes configured perhaps files show unlike files commonmodulengfactoryts generated prevent app ngfactoryts files generated needed add clean step gulpconfigjs delete everything generated nodemodules directory rootdir directory otherwise ngc would generate ngfactoryts files app seems new", "d": "1/2017"}, {"body": "little research perhaps make things bit clear appears early ngc creates directory named nodemodules level rootdir tsconfigjson ngc generates bunch ngfactoryts files folder structure mimics much angular structure ngc generates ngfactoryts files app placing gendir angularcompileroptions property tsconfigjson generated ngfactoryts files import previously generated nodemodules ngfactoryts files great problem ngfactoryts files nodemodules could exist previous compilations would simply overwritten ngfactoryts files exist nodemodules ngc creates ngsummaryjson files app silently exits well almost silently end complains appmodulengfactoryts nt exist course failed generate perhaps config complex ngc moment outdir dist rootdir app gendir app causes app ngfactoryts files go appapp tsc output go dist source app appts", "d": "1/2017"}, {"body": "timezone", "d": "1/2017"}, {"body": "americasaopaulo", "d": "1/2017"}, {"body": "seems date strings parsed utc timezone formatted local sure creating objects passing date objects pipe instead date strings", "d": "1/2017"}, {"body": "nt create objects simply retrieve data nt use pipe display correct hour although format incorrect", "d": "1/2017"}, {"body": "works plunker either ionic issue something wrong", "d": "1/2017"}, {"body": "date comes database datetime object something like maybe issue", "d": "1/2017"}, {"body": "angular create date string local timezone js default example timezone result sure angular side", "d": "1/2017"}, {"body": "possible change timezone", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "sounds like duplicate", "d": "1/2017"}, {"body": "problem single drop one drop need selected default values", "d": "1/2017"}, {"body": "crud cars ivalue amp amp countnum lt callme", "d": "1/2017"}, {"body": "far tell impl angular complete ignore property nt see bug", "d": "1/2017"}, {"body": "might causing issue showing browser", "d": "1/2017"}, {"body": "throwing error loading default values", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "simple example nt understand works fine included script project ideas", "d": "1/2017"}, {"body": "probably something wrong local config maybe party lib anyway ca nt anything angular side without reproduction", "d": "1/2017"}, {"body": "think problem reload sripts component templates", "d": "1/2017"}, {"body": "update noticed enable toggle device toolbar chrome devtools view issue disappears really confused dzmitryshylovich", "d": "1/2017"}, {"body": "nightwnvol probably tuned", "d": "1/2017"}, {"body": "tytskyi already turned", "d": "1/2017"}, {"body": "sure fully understand problem believe happening scripts loaded first visit start navigating angular app angular addremove dom elements dynamically without full page refresh scripts notified change therefore dom manipulation supposed need reinitialize inside ngafterviewinit event hope help side note tried angularize jquery website maintaining jquery scripts libraries work code really unmaintainable angular jquery follow different philosophies try mix much sure find angular version jquery libraries primeng good place start", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "pls report cli issues", "d": "1/2017"}, {"body": "workaround use webpack webpackdevelopers need call compilecomponents inlines templates css part automated build process precedes running test", "d": "1/2017"}, {"body": "well thanks comment use different module loader nt help underlying problem assume testbed could changed compile cache results suite would mean subsequent calls resolve immediately thing sure whether reason compilation results nt reused", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "check console output parallel", "d": "1/2017"}, {"body": "forget save plunker", "d": "1/2017"}, {"body": "sorry please find", "d": "1/2017"}, {"body": "avoid using functions bindings function called every change detection cycle design", "d": "1/2017"}, {"body": "dev mode run cd twice explains functions called twice switching prod mode solve", "d": "1/2017"}, {"body": "thanks responses enableprodmode tried keeping appcomponentsts didnt worked added key array instead calling function dzmitryshylovich suggested", "d": "1/2017"}, {"body": "actually thinking forcing eager initialization services without useless injection root component may better extend signature eager option", "d": "1/2017"}, {"body": "kemsky may better extend provide signature eager option nt think good idea called services provided via services provided via shorthand services provided via must annotated ie annotated services initialized eagerly makes much sense use annotation", "d": "1/2017"}, {"body": "design point view responsibility di configuration decide whether service singleton lazy eager general change service class implementation want make eager lazy also application broken try replace eager service another lazy implementation way detect consistent behavior across cases lifecycle callback requirements poor documentation injector throw noannotationerror trying instantiate class injectable marker shown example originally told required services require injection services", "d": "1/2017"}, {"body": "furthermore work services provided via component quite disappointing would much usefull", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2017"}, {"body": "callback executed outside angular zone event effect updating ui", "d": "1/2017"}, {"body": "thanks quick response alexzuza ok nt know zone use seen issue comment blog post use seems like nt property anymore probably previous versions saw ngzone class seemed used injectable components used comment class marked experimental comments saw used applicationref class marked stable use injecting constructor zone code call method triggers refresh ui worked plunkr important code ended something like simplified form show important parts add future reference maybe others end reading typescript service called external zone code think work components anything else import injectable applicationref angularcore injectable export class myservice constructor private appref applicationref methodusingexternallib externallib calls code ends zone calling callback externallib someparam result gt callback example whatever need result consolelog result example setup ngrxstore could dispatch action like thisstoredispatch type actionsauthorize remove api token plunkr code wo nt work normally authorization process wo nt work leave plunkr updated working code reference would like ask correct angular way solving think documentation seen several issues ended related problem nt know worked thought bug see strange way support request nt go think example section faq entry like component ui updating explaining referencing documentation entry glossary example referencing class also think class documentation example use would solve problem zone code case using way solve maintainers ok something like could create pr additions like documentation", "d": "1/2017"}, {"body": "general simplest solution problem use w promises correctly integrated zones ad far aware apis callback based also support promises", "d": "1/2017"}, {"body": "oh see right robwormald type declarations npm incomplete declare version callbacks complains stops try use version adding quick type declarations modifying declaration return promises worked without needing tada side note thanks family awesome tada cake docs think adding pr updates similar described would worthwhile mean general use cases angular problem solved maybe others could benefit finding answers faster polluting github issues kind question", "d": "1/2017"}, {"body": "ngmodel used show array elements content always shows elements data last array element elements valid html", "d": "1/2017"}, {"body": "ok see sorry noise", "d": "1/2017"}, {"body": "trying replicate plunkr nt able maybe angular version settings accordingly issue similar context might well function running outside zone however error babel using maybe webpack", "d": "1/2017"}, {"body": "found hack code put function return resolves code prefix theory next function takes long halt ui execution correct wrong maybe works like hacky sleep functions people rely loop constantly comparing current timedate offset one new function ts showprogress args args args args thisbusyctrlnext true new function ts async printdocument lt possible reason error async keyword still hack would like know well better suggestions", "d": "1/2017"}, {"body": "seem hit similar issue q promises ngif component loading longer triggers instantly use router navigate inside promise example move outside promise begins work properly see code quick example debugging workaround use locationhref instead currently angular ts electron webpack", "d": "1/2017"}, {"body": "actually think know goes issue theory halt js process fix ended using hack explained putting interval ms thus putting task end js engine callback loop thus giving animation power finish process continues would like someone tell rightwrong better way handle", "d": "1/2017"}, {"body": "problem actually missing parenthesis", "d": "1/2017"}, {"body": "intellix statement without parenthesis still valid javascripttypescript matter preference using parenthesis", "d": "1/2017"}, {"body": "yeah true ngc fails without property missing expected", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "hi building angular application following params command always generate new chunks vendor bundled files new hash file name serving dist folder ubuntu server problem make new build serve new files server users starts get following errors unhandled promise rejection loading chunk failed zone angular task promisethen value error loading chunk failed read property map undefined refresh page everything works fine untill user see white screen way handle error reload page code automatically angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli", "d": "1/2017"}, {"body": "insight error", "d": "1/2017"}, {"body": "plunkr nt load", "d": "1/2017"}, {"body": "think set private plunkr forked public one", "d": "1/2017"}, {"body": "nt see errors reproduce", "d": "1/2017"}, {"body": "dzmitryshylovich appcomponentts file remove square brackets around multiple validators form field look like units validatorsrequired unitsvalidator refreshes error show", "d": "1/2017"}, {"body": "also gives typescript error think enough point attention towards syntactical error however still point error messages could improved formbuildergroup ref", "d": "1/2017"}, {"body": "need verify async validator actually observable throw meaningful error", "d": "1/2017"}, {"body": "bad totally wrong repo moved angulario repo", "d": "1/2017"}, {"body": "pls provide small demo without cli", "d": "1/2017"}, {"body": "attached source make sense run plunker executes protocol issues lie file protocol distzip windows machine unzip attachment c tempdist open chrome paste file c tempdistindexhtml", "d": "1/2017"}, {"body": "issue code must run without web server like iis node etc able run straight file system without hosted web server works angular", "d": "1/2017"}, {"body": "issue code must run without web server like iis node etc", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "bundling issue see link support cli believe accomplish custom build need rewrite line", "d": "1/2017"}, {"body": "wkoza ship losts spa web sites serve file system offline mode desktop mobile apps thus need file option serve file currently use angular works dzmitryshylovich use samples angulario test theory use cli post findings bare second look attached image shows error file found error thrown browser looking script root drive guess new attribute html folder per address bar contains required files", "d": "1/2017"}, {"body": "guess new attribute html right works fine without remove provide base href programatically", "d": "1/2017"}, {"body": "angularcli change base url ng build basehref", "d": "1/2017"}, {"body": "set base url build time base url different desktop mobile app os os content sources load relative main page packages shipped customers build consumed many times many devices tried removing completely without success would possible specify relative base ref", "d": "1/2017"}, {"body": "even", "d": "1/2017"}, {"body": "tried even though removes errors console still run angular code could correct bundling might paths bundled files would thought sort error displayedthrown see paths bundled files scripts bundled file loaded work nt", "d": "1/2017"}, {"body": "code trigger ajax request browsers security reasons disallow serving ajax requests file system typically gives right see errors error description theory see origin policy errors specify base generally load script tags file system explains angular works since whole framework downloaded single script tag ajax requests though cause problems includes routing ajax request general basically angular designed work file system without web server really need serve angular app file system would consider electron better solution otherwise use liteserver lightweight development web server", "d": "1/2017"}, {"body": "thank comprehensive response might hit nail head familiar electron see desktop app framework need package mini spa site single file gets consumed many platforms consumers websites angular works offline desktops offline mobile apps angular nt work guess electron work mobile apps web sites causing single package work consumers guess stuck angular ditching angular replacing another framework sad invested lot angular ci point view", "d": "1/2017"}, {"body": "thelgevold opinion leave open hope one angular core developers assist add possible workarounds close chapter really want move angular prevents us angular code transpiled html views javascript templates gulp build tasks eliminated ajax requests could similar workaround us angular templates ts files html files currently nt work either", "d": "1/2017"}, {"body": "thelgevold says basically angular designed work file system without web server works ionic exemple jacodv create application sample angularcli call ajax via api github work", "d": "1/2017"}, {"body": "wkoza sure api hosted need solution fact angular working content offline file system let say files indexhtml bundlejs bundlecss index page script reference js cs file extracted c temptest open index file chrome via file c temptestindexhtml work angular angular per thelgevold explanation believe angular load resources via ajax xhr request angular nt", "d": "1/2017"}, {"body": "jacodv everything bundled single file angular application code external templates dependencies suspect longer ajax request issue especially nt see ajax requests made network tab", "d": "1/2017"}, {"body": "thelgevold full circle uploaded code right beginning thread definitely upload give samples required everything bundled dependencies originally thought tag causes fail tried various options base url cases errors gone console angular code still run", "d": "1/2017"}, {"body": "plnkr examples javascript documentwrite lt base href documentlocation gt works serve file", "d": "1/2017"}, {"body": "markovy works legend", "d": "1/2017"}, {"body": "tried html success errors console loading means angular code work", "d": "1/2017"}, {"body": "also tried", "d": "1/2017"}, {"body": "markovy going start scratch build suggestion process revert finding tomorrow morning get office", "d": "1/2017"}, {"body": "make work markovy made day", "d": "1/2017"}, {"body": "jacodv thanks check get around find another framework time constraints", "d": "1/2017"}, {"body": "based pta framework end using", "d": "1/2017"}, {"body": "send email jacodvatinfoslipscoza", "d": "1/2017"}, {"body": "jacodv hey exactly make work similar issue simple app nt want run local filesystem default links scripts like obviously scripts found nothing loads make files found simply prefixing dot paths relative curr dir see code run navigation structure site created business logic dev tools see exception uncaught promise securityerror failed execute replacestate history history state object url file e created document origin null url file e tried magic thing happens", "d": "1/2017"}, {"body": "koshmaar reverted single folder thus scripts resources linked via href src attributes folder indexhtml need todo omit paths scripts resources reference name", "d": "1/2017"}, {"body": "work edge supported ie", "d": "1/2017"}, {"body": "think problem order insertion tag dom seems firefox wants attributes applied first could insert tag dom see plunker copy internally draws ui", "d": "1/2017"}, {"body": "yes plunkr works correctly ff dzmitry shylovich je ob napisal ratkor tested mozilla nightly work expected confirm receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "pls provide plunkr small demo", "d": "1/2017"}, {"body": "confirm spent lot time trying find wrong without even looking components loading one resolvers get resolved instead waiting", "d": "1/2017"}, {"body": "resolvers seem load component observable gets resolved somehow nt get values available makes hard debug working times plus somehow always works try debug try provide working plunker later maybe tomorrow currently ca nt find time one", "d": "1/2017"}, {"body": "sorry without repro actionable", "d": "1/2017"}, {"body": "yes bad vacation ran problem forgot yes resolvers get resolved responses server creating component sometimes get one value", "d": "1/2017"}, {"body": "maffelbaffel thx", "d": "1/2017"}, {"body": "plunker didnt actually work give time sure actually works well sometimes", "d": "1/2017"}, {"body": "actually works well sometimes hard reproduce", "d": "1/2017"}, {"body": "plunker showing bug resolver two undefined", "d": "1/2017"}, {"body": "dbettini undefined instead", "d": "1/2017"}, {"body": "yea instead works get example observable working im really plunker stuff", "d": "1/2017"}, {"body": "application example resolvers return observable get working plunker systemjs somehow", "d": "1/2017"}, {"body": "maffelbaffel also works observables", "d": "1/2017"}, {"body": "well dunno working mostly simplified version applications code seems mistake side thanks alot taking time responding fast thought", "d": "1/2017"}, {"body": "maffelbaffel feel free reopen able reproduce", "d": "1/2017"}, {"body": "object supported token", "d": "1/2017"}, {"body": "check", "d": "1/2017"}, {"body": "alexzuza interesting looks like quite complicated way provide string token", "d": "1/2017"}, {"body": "problem pls reword able use anything di token", "d": "1/2017"}, {"body": "question kind tokens supported providers reference code docs found last paragraph confusing never heard object token di docs nt mention either afaik paragraph looked like leftover mem could expressed briefly mentioning paragraph instead", "d": "1/2017"}, {"body": "zoechi definition opaquetoken one solution choosing provider token nonclass dependencies define use opaquetoken think good definition simply", "d": "1/2017"}, {"body": "dzmitryshylovich paragraph object token actually error messages first opaquetoken uniqueness object token actually thing closed", "d": "1/2017"}, {"body": "zoechi object token actually think", "d": "1/2017"}, {"body": "dzmitryshylovich thanks lot", "d": "1/2017"}, {"body": "zonejs version u use stack trace try downgrade", "d": "1/2017"}, {"body": "updated plunkr stacktrace", "d": "1/2017"}, {"body": "lazy loaded modules di context need provide service want use multiple lazy loaded modules", "d": "1/2017"}, {"body": "ok understand could work way ok really useful services shared lazy child modules lazy loaded modules case needed share login service lazy loaded module child pulled service way would eagerly loaded code would always used ie others modules need login service also strange use component module works", "d": "1/2017"}, {"body": "design also strange use component module works components different providers", "d": "1/2017"}, {"body": "sorry wanted say use component inject service registered component module use compoenent service found design", "d": "1/2017"}, {"body": "yeap services lazy instantiated want eager instantiate service need add hook", "d": "1/2017"}, {"body": "couple things understand first say different di contexts service declared visible b service declared injected component b withenclosingwithservice work second changed plunkr instantiate service module however also works injecting service component module b component used looks eagerly loading service making work use component happening thanks", "d": "1/2017"}, {"body": "wardbell mind sharing one two examples new directive would shorter easier better write prefix would like see impact based reallife examples thnx", "d": "1/2017"}, {"body": "yeah also nt see would simplify example would use impl", "d": "1/2017"}, {"body": "thanks opportunity elaborate dzmitryshylovich nt apply elements within template input button anchor tags applies host element component also considerably clunkier less capable proposed pkozlowskiopensource gave example plunker wherein set bunch aria attributes classes one may wonder values change answer changes model state change several aria attributes including validations descriptions appear issue speaks need directly benefits want setremove set stylesclasses compact way single property need makes sense surely makes sense superfluous offer actually valuable html syntax classes relatively compact single string whereas attributes tediously repeated within html tag another argument reactive forms yet support aria tags manipulation within component proposed feature would help mentioned strange lack symmetry supporting justified argument effectiveness completeness ps suggested implementation accompanying plunker would made pr nt time write tests although largely purloined existing internal tests", "d": "1/2017"}, {"body": "wardbell really hear saying understand seeing symmetrical imo superimportant consider potential benefits vs price another look plunker usecase could extract vs plunker take example make reallife mean equals button needed native elements could reduce example vs nt make sense single buttons could shorter elements repeated loop benefit see right drawbacks following ones perf pay price code generated code directives confusion introduces one way thing consider example yes somehow contrived nicely illustrates opens real questions comes source truth example clear state calculated come back directives already suffering mentioned problems honesty would prefer live without consider example shell see class button good argument existence fact sometimes want dynamically calculate class name set classes application domain even could replaced look popular widgets libraries lot style class calculation notice ngclass ngstyle used ngbootstrap little material situation attributes different know attributes names upfront come fixed list sum nt think use fact existence justify view additional confusion worth benefits new directive based arguments would prefer introduce said going ask mhevery weight", "d": "1/2017"}, {"body": "closing based", "d": "1/2017"}, {"body": "check accurate state tldr hello world minimizing delivered code size top priority list see better numbers coming months also working easing build process apps stay tuned meanwhile hope answers questions", "d": "1/2017"}, {"body": "yes issue number know changes state development", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "reopening issue specific translation", "d": "1/2017"}, {"body": "happy assist testing needed", "d": "1/2017"}, {"body": "let add even created clean project cli run would get root desktopveuhfol error error encountered resolving symbol values statically calling function noopanimationdriver function calls supported consider replacing function lambda reference exported function resolving symbol animationdrivernoop c angularplatformbrowsersrcdomanimationdriverdts resolving symbol browsertestingmodule c angularplatformbrowsertestingbrowserdts resolving symbol browsertestingmodule c angularplatformbrowsertestingbrowserdts simplifyincontext c staticreflectorsimplify c staticreflectorannotations c ngmoduleresolverresolve c compilemetadataresolvergetngmodulemetadata c compilemetadataresolvergetngmodulesummary c c arrayforeach native compilemetadataresolvergetngmodulemetadata c addngmodule c extraction failed", "d": "1/2017"}, {"body": "also see behaviour described error message using version", "d": "1/2017"}, {"body": "related angular", "d": "1/2017"}, {"body": "opened", "d": "1/2017"}, {"body": "hello maximusk error effect expiriance angular dev environment since error shown extra needed dependencies macos platforms", "d": "1/2017"}, {"body": "afaik npm broken around optional dependencies let try use", "d": "1/2017"}, {"body": "issue bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "thanks thought issue directly related angular since ca nt setup build environment ca nt contribute", "d": "1/2017"}, {"body": "let try use still fails", "d": "1/2017"}, {"body": "maximeallex sorry right exactly angular issue current packagejson requires optionaldependencies devdependencies may problem nonosx users", "d": "1/2017"}, {"body": "even remove still fails another module peer dep", "d": "1/2017"}, {"body": "cc vicb think", "d": "1/2017"}, {"body": "dzmitryshylovich edit still please remove try", "d": "1/2017"}, {"body": "possibly related", "d": "1/2017"}, {"body": "npm f work", "d": "1/2017"}, {"body": "oh found dzmitry already mentioned problem added packagejson", "d": "1/2017"}, {"body": "dannymorales please share codelinks everyone knows actual problem may workarounds share details thanks", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "exported functions must single return statement last sentence", "d": "1/2017"}, {"body": "typescript also lock ts version latest supported yet", "d": "1/2017"}, {"body": "thanks quick replay saying please note work either line uncommented line still commented single return constraint fullfiled however ngc still produces error since single return constraint violates openclosed rule terms language contract documentationcookbook said one return statement ok aot error message say anything singe return says replacing function lambda reference exported function guess agree expected behaviour", "d": "1/2017"}, {"body": "isarray navigationitems navigationitems navigationitems line uncommented navigationitems return line still commented single return constraint fullfiled however ngc still produces error think condition problem ngc nt execute code hard analyze code conditions", "d": "1/2017"}, {"body": "laplacek please check semiofficial docs regarding syntax supported aot basically function contain statements probably workaround restriction wrapping function another one adhering restriction yes ugly sorry missed function call", "d": "1/2017"}, {"body": "dzmitryshylovich thanks guys precise easily cope without solved however change fact ngc unreliable tool missleading errors unexpected undocumented behaviour failing sattement new local variable inside function intention solving problem project reporting genreal bug ngc probably become blocker users dzmitryshylovich thanks help anyway dont get wrong thing guessing something doesnt work fine best idea moreover pease note works fine produces nested functions error export function providenavigationitems navigationitems orderedcomponent provider let multi true return provide componentsoutletconfig multi true usevalue name navigation orderedcomponents navigationitems something wrong repo error description updated", "d": "1/2017"}, {"body": "similar issue wrong error messages documentation use aot", "d": "1/2017"}, {"body": "think audio api covered zonejs would better file issue", "d": "1/2017"}, {"body": "alright moving issue zonejs dzmitryshylovich know limitation zonejs know documented anywhere quick search could nt find anything thanks", "d": "1/2017"}, {"body": "answer stackoverflow see question", "d": "1/2017"}, {"body": "moment seems way debug sources ts browser besides code bundled npm package non bundled counterparts compiled module syntax supported systemjs without transpiler got solution core team debug typescript sources nowhere web information found answers stackoverflow articles medium outdated think angular community would greatly benefit able debug sources", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "pls add small demo plunkr", "d": "1/2017"}, {"body": "may close issue problem specific ngbootstrap imported im sure forroot means angular material got rid get entrycomponents lazy loading working fact component creation working fine get error soon work ngbootstrap fixed problem importing module inside submodules even need singleton whole application", "d": "1/2017"}, {"body": "close", "d": "1/2017"}, {"body": "motivation use case changing behavior reply question answer question state current behavior state motivation behind change use cases applied", "d": "1/2017"}, {"body": "motivation use case changing behavior currently available hooks reflect dom state dom nodes access provide unexpected errors despite means view loaded elements available ex template like directives reference work hook true", "d": "1/2017"}, {"body": "open bug tslint", "d": "1/2017"}, {"body": "filed tslint issue sure looks like fault think adding newline end generated files bad thing update jan told fixed ca nt verify yet docs infrastructure breaks upgrade current nt yet know info becomes available", "d": "1/2017"}, {"body": "async pipe normal pipe like others built integral angular could make wanted therefore specific syntax anything asking able use pipes based charter property name bound fieldwhich could bad perf implications would longer make sense nt sue character", "d": "1/2017"}, {"body": "wrap pipe pipe would selector characters much clutter smile", "d": "1/2017"}, {"body": "know built angular pipe syntax angular anguar uses observable everywhere bad make biolerplate code simplier also would happen performance case get performance guess maybe little bit worse angular parse template one time component stores prebuilt data way make change changing core", "d": "1/2017"}, {"body": "pipe built apart common module way change without changing angular compiles templates pipes changing pipe works aswell", "d": "1/2017"}, {"body": "let move discussion syntax semantics reactive style programming discussed closing duplicate", "d": "1/2017"}, {"body": "works intended view children always created regardless projected design", "d": "1/2017"}, {"body": "mhevery em menutabs components items depends data updated menu opened lot handlers hooks components init needed anything controlled upper", "d": "1/2017"}, {"body": "also understand guarantees component added dom wrong transclusion behavior", "d": "1/2017"}, {"body": "enclosed content webcomponents work following spec", "d": "1/2017"}, {"body": "mhevery component guarantees initdestroy hooks related component dom existing state depends outer context cant detected component", "d": "1/2017"}, {"body": "cant understand useful menulike elements always uses transclusion menu items initialized realy added menu open breaks menu behavior logic also means one hook components reflect component addingremoving dom state right", "d": "1/2017"}, {"body": "demo therefore instantiates circumstances one proper encapsulation internal implementation details determine wether instantiated need able reason things without global application knowledge sorry behaves intended", "d": "1/2017"}, {"body": "mhevery hooks realy mean nothing component dom state would follow code depends component template children componentsdirectives component dom instance lot checks determinate component dom also tabs heavy work component hidden tab work done despite tab active could lot requests data formating smth like common menu tabs components works like", "d": "1/2017"}, {"body": "anything inside instantiated despite needed elements dom calls", "d": "1/2017"}, {"body": "looks like solution use around menu items menu component thx g\u00fcnter big lack documentation theme", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "go could nt immediately get debouncetime work plunker put alerts part notice formcontrol valid invalid understand first time arrive part formcontrol still valid second time invalidated previously code", "d": "1/2017"}, {"body": "value changed validation required case rerun errors reset", "d": "1/2017"}, {"body": "yes debouncetime would work plunker keystroke see input briefly turn green ngvalid css rule turning red", "d": "1/2017"}, {"body": "nt better idea set text direction using opaque token similar localeid expect able set text direction outside application reference dom nt sound great universal", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "would handy ngbootstrap button directives said really afraid would make templates harder follow reason", "d": "1/2017"}, {"body": "yes support please provide plunker demonstrates issue", "d": "1/2017"}, {"body": "ok think figured corejs shims need contrary docs dug found error happening zonejs led repo adding shim prior adding corejs shims allowed work normal perhaps help add docs somewhere", "d": "1/2017"}, {"body": "sounds right wardbell doced", "d": "1/2017"}, {"body": "mhevery documentation browser support information supplied us nt know responsible verifying recommending shims nt know vetted shim library mentioned dnation imo docs group capacity make call probably reopen issue figure respond adequately", "d": "1/2017"}, {"body": "wardbell would definitely benefited knowing additional shims needed ca nt speak vetting shims found know made app work anything help better left people know", "d": "1/2017"}, {"body": "look basically contains shims following functionality part corejs relevant systemjs documented documented documented also see might fixed documented based actionable items check status document need polyfill still need check status used document limitations need polyfill fence comes systemjs polyfill using recommending systemjs plunkers sure want document definitively add plunker setup needed believe mix investigation documentation tasks going reopen issue track", "d": "1/2017"}, {"body": "dnation could please go comment try pinpoint exact polyfill missing nt think using way go might licensing implications ca nt provide file first place", "d": "1/2017"}, {"body": "pkozlowskiopensource shimsforiedevjs nt work used shimsforie take look later today try pinpoint exact shim missing", "d": "1/2017"}, {"body": "ok one requestanimationframe polyfill requestanimationframe android author paul irish source requestanimationframe polyfill erik m\u00f6ller fixes paul irish tino zijdel mit license function var lasttime", "d": "1/2017"}, {"body": "case planning remove", "d": "1/2017"}, {"body": "planning removing wo nt fix", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "seem add semicolon function name creating typescript syntax error", "d": "1/2017"}, {"body": "believe also bug reporting cli checked nt direct paste", "d": "1/2017"}, {"body": "also get errors projects mine chunk mainbundlejs mainbundlemap main kb initial rendered chunk stylesbundlejs stylesbundlemap styles kb initial rendered chunk scriptsbundlejs scriptsbundlemap scripts kb initial rendered chunk vendorbundlejs vendorbundlemap vendor mb initial rendered chunk inlinebundlejs inlinebundlemap inline bytes entry rendered error error encountered resolving symbol values statically calling function combinereducers function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c mswebngskeletonsrcappappmodulets resolving symbol appmodule c mswebngskeletonsrcappappmodulets resolving symbol appmodule c mswebngskeletonsrcappappmodulets webpack bundle valid popular ngrx combinereduces function", "d": "1/2017"}, {"body": "fixed const reducers storedata appdb export const developmentreducer actionreducer compose storefreeze combinereducers reducers export const productionreducer actionreducer combinereducers reducers export function appreducer state initialapplicationstate action environmentproduction return productionreducer state action else return productionreducer state action return developmentreducer state action", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "confirm whereas pure component element available oninit per documentation upgraded component element available oninit sometime", "d": "1/2017"}, {"body": "sounds like aka issue one kevinverelst dbpieter confirm", "d": "1/2017"}, {"body": "gkalpak used described upgrade documentation", "d": "1/2017"}, {"body": "title mentions api", "d": "1/2017"}, {"body": "fair enough title bit wrong updated point element behaves differently component component", "d": "1/2017"}, {"body": "sure trying figure problem lies makes easier fix", "d": "1/2017"}, {"body": "progress", "d": "1/2017"}, {"body": "u try reproduce angular nt anything native events", "d": "1/2017"}, {"body": "dzmitryshylovich something like ca nt get lose mouseleave events maybe solution", "d": "1/2017"}, {"body": "something like yeah output console check ever fires see one fires enter never leave probably moved mouse fast nt think anything angular uses native hood", "d": "1/2017"}, {"body": "dzmitryshylovich raw way tried second plunkr using actual app still misses event workaround think said nt anything help issue", "d": "1/2017"}, {"body": "could close might good good record anyone else angular mouseenter mouseleave problems lots googling seems frameworks issue moved away favour css instead", "d": "1/2017"}, {"body": "angular nt support input type duplicate", "d": "1/2017"}, {"body": "indeed duplicate thnx dzmitryshylovich", "d": "1/2017"}, {"body": "found provider appbasehref get application refresh home page refresh state prior refresh sure", "d": "1/2017"}, {"body": "sure aot support stick need change language runtime extra feature bad terms performance way runtime already debate native implementation requiring user reload page load different app templates compiled another language nt use want runtime language switch", "d": "1/2017"}, {"body": "current angular impl allow change dom structure translating html would invalidate compiled view allow translating strings typescript source files midterm implemented possible support runtime language switching ts sources translated vs templates yet sure something implement vs community architecture allow might also possible support subset construct templates ie text html", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "pls add small repro plunk", "d": "1/2017"}, {"body": "cant see happens updated question", "d": "1/2017"}, {"body": "cant get button work plunker exactly prefix component avoid collisins native elements change something else", "d": "1/2017"}, {"body": "jorgedkoala expected behavior plunkr everything works intended", "d": "1/2017"}, {"body": "works well plunkr project try reproduce dzmitry shylovich notifications githubcom jorgedkoala expected behavior plunkr everything works intended receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "could reproduce behavior happens using label trigger click button works well click label", "d": "1/2017"}, {"body": "every form element created loop unique page see documentation attribute ensure id unique adding index example work see nt think anything angular", "d": "1/2017"}, {"body": "right thank much", "d": "1/2017"}, {"body": "pls add small repro plunk trying accomplish", "d": "1/2017"}, {"body": "moves children view new location ca nt duplicate insert twice works intended", "d": "1/2017"}, {"body": "appears issue querylist contains elements", "d": "1/2017"}, {"body": "see workaround seems pretty serious", "d": "1/2017"}, {"body": "received email notification shouhua providing workaround nt know show provide way reference appcomponent named replace paremeter reference passed see action new plunk perfect means user component needs know passed template referenced specific name therefore feel still needs fixed", "d": "1/2017"}, {"body": "better plunker behavior written correct fails plunker still issue select templates two one second point view works intended behavior persist even change happens even enter extra still bug", "d": "1/2017"}, {"body": "pls format code", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "hey dzmitryshylovich thanks replay example work either b would examle work difference make examples perfectly fine terms language contract angularangular cli contract broken e", "d": "1/2017"}, {"body": "aot mode limitations nt run code aot use values statically determine annotations ca nt call function inside annotations", "d": "1/2017"}, {"body": "thanks dzmitryshylovich pleae note though functions called inside static method fact exported functions also following example also produces error export function angularhttpfactory backend xhrbackend defaultoptions requestoptions http return new http backend defaultoptions export function authhttpfactory auth auth backend xhrbackend defaultoptions requestoptions authhttp return new authhttp auth backend defaultoptions ngmodule declarations loginloadercomponent imports commonmodule httpmodule exports loginloadercomponent export class authmodule static forroot authconfig authconfig modulewithproviders return ngmodule authmodule providers provide authconfig usevalue authconfig provide angularhttp usefactory angularhttpfactory deps xhrbackend requestoptions auth provide http usefactory authhttpfactory deps auth xhrbackend requestoptions authuser static forchild modulewithproviders return ngmodule authmodule error error encountered resolving symbol values statically calling function authmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c resolving symbol appmodule c", "d": "1/2017"}, {"body": "pls update latest angular", "d": "1/2017"}, {"body": "done angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularcompilercli problem still exsits error error encountered resolving symbol values statically calling function authmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c resolving symbol appmodule c", "d": "1/2017"}, {"body": "confirm problem", "d": "1/2017"}, {"body": "serhiisol bug supported see", "d": "1/2017"}, {"body": "laplacek pls add small repository reproduction without cli", "d": "1/2017"}, {"body": "dzmitryshylovich running compiler aot without aot", "d": "1/2017"}, {"body": "error aot", "d": "1/2017"}, {"body": "ngc ngtoolswebpack nt work expected", "d": "1/2017"}, {"body": "everything works expected", "d": "1/2017"}, {"body": "right running commands without aot producing bugs course ps seems like compiler analyzes code cases nt inside staticreflectorsimplify", "d": "1/2017"}, {"body": "cli issue", "d": "1/2017"}, {"body": "cli issue ngc issue ngc analyzes code cases aot without aot thought aot optional seems", "d": "1/2017"}, {"body": "ngc analyzes code cases aot without aot nt make sense pls read aot ngc", "d": "1/2017"}, {"body": "hits staticreflector angularcompiler performs analysis dude ps tsconfig nt specific angularcompileroptions aot", "d": "1/2017"}, {"body": "compilation modes aot jit ngc used aot ngc without aot nt make sense", "d": "1/2017"}, {"body": "uses ngc ngcapproach strings extraction also nt make sense", "d": "1/2017"}, {"body": "dzmitryshylovich make repo public since imported package property employer saying establish remote screen session would make sense obviously issue also occurres using aot without cli guess knew confirm full error produced following error error encountered resolving symbol values statically calling function authmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c resolving symbol appmodule c simplifyincontext c staticreflectorsimplify c staticreflectorannotations c ngmoduleresolverresolve c compilemetadataresolvergetngmodulemetadata c addngmodule c c arrayforeach native createngmodules c analyzengmodules c compilation failed please note authmodule presented issue fact npm package imported application produces error npm packages used aot compiled client app restrictions using anonymous functions inside module definitions also compiled ngc instead tsc prepared way work aot thanks", "d": "1/2017"}, {"body": "laplacek make repo public since imported package property employer nt need real code create mock module shape", "d": "1/2017"}, {"body": "aot trying supported aot described limitations fact getting error means running means aot maybe intending happening trying jit mode nt use use closing reopen reopen case", "d": "1/2017"}, {"body": "mhevery angularcli perform static analysis produce errors cli even wo nt enable aot afaiu triggers ngc well thought optional process seems like angular requires default would nice option use eg extract strings html without superper compilation", "d": "1/2017"}, {"body": "hansl true", "d": "1/2017"}, {"body": "mhevery easy reproduce new project add incorrect arrow function provider usefactory function run without aot flag voila happen ps tried today release cli", "d": "1/2017"}, {"body": "mhevery yes true let chat offline", "d": "1/2017"}, {"body": "mhevery hansl thank guys", "d": "1/2017"}, {"body": "mhevery sorry completly nt understand use aot want use importing npm package regular angular module forroot anf forchild methods neither anonymous functions lambas reason aot compiler still sees function calls calling function authmodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule neither lambdas anonymous functions called referenced modules issue obviusly appmodule descriptor shown first post contain lamba calls taking consideration closed issue seems guys really feel pressure close issues even solved ngc says authmodule function calls nt great way go bravo dzmitryshylovich understand hansl action nt want example repo reproduces issue since perfectly fine ngc say function calls supported even right", "d": "1/2017"}, {"body": "laplacek want link github repo demo run see error", "d": "1/2017"}, {"body": "moved opened issue since obviously closed dzmitryshylovich find repo", "d": "1/2017"}, {"body": "pls add steps reproduce observed vs desired behaviour", "d": "1/2017"}, {"body": "added original", "d": "1/2017"}, {"body": "please include instructions click see happen otherwise spend much time reverse engineering intent", "d": "1/2017"}, {"body": "hi mhevery thanks looking added much details could original issue description problem something happening bit trickier document", "d": "1/2017"}, {"body": "kara take look", "d": "1/2017"}, {"body": "asherbarak thanks reporting bug mdselect close core retain existing issue repo", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "dzmitryshylovich caused new problem ca nt use commonmodule service store data", "d": "1/2017"}, {"body": "hstarorg whey ca nt use commonmodule service store data", "d": "1/2017"}, {"body": "mhevery commonmodule dynamic load bug", "d": "1/2017"}, {"body": "see", "d": "1/2017"}, {"body": "dzmitryshylovich code tried bind ngmodel native type string vproperty type string avoid object reference nt work either know workaround problem", "d": "1/2017"}, {"body": "tried bind ngmodel native type string vproperty type string avoid object reference nt work either pls add small repro plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich created sample plnkr steps firefox browser open plnkr select deutschland click load list expected deutschland still selected real nothing selected", "d": "1/2017"}, {"body": "need use primitive types objects", "d": "1/2017"}, {"body": "repo", "d": "1/2017"}, {"body": "dzmitryshylovich link include many issuesi ca nt find answer could solve problem", "d": "1/2017"}, {"body": "remove typeswebpack fixed issue", "d": "1/2017"}, {"body": "sorry imports statically analyzable function prevents supported list explicitly", "d": "1/2017"}, {"body": "also problem trying use nontypescript module numeraljs working fine angular started error upgrading anyone knows update fix fixed", "d": "1/2017"}, {"body": "pfight thanks suggestion trying clean naming still differentiate two generations trying use names adopted community namely angularjs old generation angular versions later", "d": "1/2017"}, {"body": "please add small repro plunkr", "d": "1/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "1/2017"}, {"body": "exact error statecomponent source code ts import component output eventemitter ondestroy angularcore import containerservice servicescontainerservice import loggerservice servicesloggerservice import widgetconfigurationservice serviceswidgetconfigurationservice import http angular declare var module id string component template moduleid moduleid export class statecomponent implements ondestroy mytitle string hello world publishedstate subscribedstate subsharedstate instancemetadata configpath string wid string containerservice containerservice widgetconfiguration public patterndata string log loggerservice widgetconfigurationservice widgetconfigurationservice output statechanged eventemitter new eventemitter protected http thiscontainerservice containerservicegetinstance thiscontainerservice containerservice thiswidgetconfigurationservice widgetconfigurationservicegetinstance log log thishttp var thisref thisconfigpath configpath", "d": "1/2017"}, {"body": "vasuneet please put together live example using plnkr get started", "d": "1/2017"}, {"body": "seems like trying inject resolved probably something like", "d": "1/2017"}, {"body": "solution nt work", "d": "1/2017"}, {"body": "issue resolved removed config property seems anything injected resolved string injectable like services earlier version kind issue never came", "d": "1/2017"}, {"body": "also happening firefox chrome seems work fine though", "d": "1/2017"}, {"body": "open console ie try create date string valid date ie", "d": "1/2017"}, {"body": "also valid date safari funnily enough neither safari joke", "d": "1/2017"}, {"body": "dzmitryshylovich right worked date format", "d": "1/2017"}, {"body": "nt", "d": "1/2017"}, {"body": "toxicable ok agree", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "added plunker", "d": "1/2017"}, {"body": "problem using catch resolve returns empty observable check inside component empty", "d": "1/2017"}, {"body": "error observable closed wo nt get updates", "d": "1/2017"}, {"body": "flexible solution time observable", "d": "1/2017"}, {"body": "jbgraug still want feature closed", "d": "1/2017"}, {"body": "still want feature think must observable behaving need add extra code workaround future fixed break workaround code", "d": "1/2017"}, {"body": "agree jbgraug want able catch resolve service observable error activateroutedata observable controller", "d": "1/2017"}, {"body": "dzmitryshylovich may able offer insight impression router job ensure route loaded resolvers complete successfully need involved error handling consider handling errors component use workaround presented dzmitryshylovich", "d": "1/2017"}, {"body": "johannesrudolph successfully want load route resolver completes error observable actually completes want possibility show error inside component worked", "d": "1/2017"}, {"body": "oscargalindo understanding intricacies rxjs one biggest headaches personally angular far observable either two different things router navigate resolve canactivate guards returned observables", "d": "1/2017"}, {"body": "johannesrudolph yes trying say poor english limits terminates stream observable finished cases error result finished think fine possibility catch error inside component instead resolver", "d": "1/2017"}, {"body": "totally agree oscargalindo problem take router error handling resolver resolver fails router simply navigation modest point view options nothing cons workaround intuitive let component decide deal error cons nt see always get component matter treat error import router resolver exception navigate whatever url cons nt tried nt know works routes dispersed within code add another attribute errorcomponent resolvedata type follows regain control error cons need another component boilerplate code honestly would go solution initial idea intuitive one", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "whimchang needs information needs relatable angular produce reproduction shows chrome behaving expected regard angular please reopen issue", "d": "1/2017"}, {"body": "yeah known issue see", "d": "1/2017"}, {"body": "hi dzmitryshylovich thanks getting attention", "d": "1/2017"}, {"body": "problem want initialize things services set canactivate guard root component lazy loaded feature module guard initialize services starting feature module works access service component service created maybe someone work around", "d": "1/2017"}, {"body": "problem", "d": "1/2017"}, {"body": "mee work around downgrading router version using router version core version apparent issues unmet peer dependency messages", "d": "1/2017"}, {"body": "also posted issue", "d": "1/2017"}, {"body": "vsavkin perhaps look issue", "d": "1/2017"}, {"body": "issue seems reuse strategy default strategy works fine", "d": "1/2017"}, {"body": "vicb reuse strategy works fine top level paths reuse strategy compatible child paths", "d": "1/2017"}, {"body": "error message seems trying reattach route wrong place level", "d": "1/2017"}, {"body": "vicb sure mean wrong placelevel please elaborate please run plunker tried specify provider component level instead application wide level reuse strategy get invoked thanks", "d": "1/2017"}, {"body": "issue routes containing child routes using reuse strategy get error try navigate back stored route child routes", "d": "1/2017"}, {"body": "router config plunkr custom reuse strategy uses key local storage work child routes case see two child routes view edit storage entry gets overwritten retrieved last time actually returns route expected route question choose key routes implementing custom reuse strategy suitable reasons stated need unique route id given route another question get middle path", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "amyblankenship would nt mind could please recreate issue link nt much improve documentation guides", "d": "1/2017"}, {"body": "documentation issue design flaw", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "issue moved stack overflow thank", "d": "1/2017"}, {"body": "yeah known bug updated input changed duplicate would leave one open close better description", "d": "1/2017"}, {"body": "sure two tickets describing issue nt issue active nt updated page route changes understand ticket issue stay page change value link via observable", "d": "1/2017"}, {"body": "issues origin called input changed hard debug contains lot unrelated code want keep issue opened instead", "d": "1/2017"}, {"body": "dzmitryshylovich plunkr unrelated code repro buggy behavior steps retrace problem open project neverending url shows tests link orange highlighted change route url bar formerly highlighted tests link orange anymore", "d": "1/2017"}, {"body": "fyi confirmed even really need getter", "d": "1/2017"}, {"body": "closely related includes reference typescript update regarding handled seems latest versions typescript decision made go ahead let always replace value result means prototype chain broken inheriting recommended fix nt work ie lt think cases must work typescript transpiles classes classes case prototype chain broken current code works case delegating fields private error object broken suggested fix description issue wo nt work correctly assuming prototype chain correct typescript transpiles code classes left unchanged run closurecompiler case problem described bug prototype chain correct delegation broken typescript transpiles code run environment avoid breaking case workarounds cases", "d": "1/2017"}, {"body": "upon reflection actually original suggestion fine cases value returned real need workaround typescript native running environment closurecompiler inheritance error works typescript closurecompiler constructor returns object uses rather prototype object initialized correctly message stack etc constructor fields baseerrorprototype wo nt available separate issue considering typescript closurecompiler closurecompiler ensures object initialized correctly constructor executed one case return value equal using older version typescript compiler transpile code case current code designed handle suggested fix preserve workaround", "d": "1/2017"}, {"body": "mprobst since current workaround code relevant ts outdated version typescript would reasonable remove", "d": "1/2017"}, {"body": "sorry nt follow whole issue much mhevery seems know better going older typescript compiler referring angular needs support time move soon already moved", "d": "1/2017"}, {"body": "wanted add upvote initial solution remove property delegates detect mismatch return value copy properties got two additional thoughts typescript specification mention return value would good make allowances undefined value superthis could change detection code practice object actually link nt insulate us problems et al think removing workaround code completely suggested would better solution point", "d": "1/2017"}, {"body": "mprobst typescript release notes describe change behavior described typescript sounds prettydarnednew nt suppose count available", "d": "1/2017"}, {"body": "hlhicks thanks endorsement unsure whether endorsement sufficient spend time creating pull request mhevery think", "d": "1/2017"}, {"body": "cc jialipassion fixed zone closing issue please reopen case", "d": "1/2017"}, {"body": "also references page says nothing host", "d": "1/2017"}, {"body": "also would also nice know view encapsulation style matters example find higher level element emulated wont find actual shadowdom", "d": "1/2017"}, {"body": "pls report docs issues also would also nice know view encapsulation style matters di nothing encapsulation", "d": "1/2017"}, {"body": "worried since looking host element sure would change anything open", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "modifying directly also possible dynamically add new routes handy want add new routes children route existing deeply route hierachy maybe way route lazily loaded module bad news lacks validation newly added routes propose add like api make method user friendly", "d": "1/2017"}, {"body": "dzmitryshylovich solution available angular nt think resetconfig available angular please correct wrong", "d": "1/2017"}, {"body": "onixie please provide reference link demo go refer", "d": "1/2017"}, {"body": "try adds route adds route adds route one difference need notice statically configured routes dynamically added routes component explicitly list component want route using dynamic method statically configured routes use tricky token propogate components dynamically added routes lacks guess", "d": "1/2017"}, {"body": "ref", "d": "1/2017"}, {"body": "onixie thanks solution worked one issue able map unmapped routes resetconfig please update plunk ways tried working clear point router selects route first match wins strategy wildcard routes least specific routes route configuration sure last route configuration tried making changes plunker please look correct", "d": "1/2017"}, {"body": "raised new issue wild card routes please check onixie", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "available beta plunkr angular version latest", "d": "1/2017"}, {"body": "oh sorry thanks", "d": "1/2017"}, {"body": "pls remove unrelated angular party code ui router primeng etc reproduction simple small possible", "d": "1/2017"}, {"body": "yes please clean example bit hard follow issue code directly something within stack party plugins", "d": "1/2017"}, {"body": "dzmitryshylovich matsko created plnkr removing primeng datatable test need click click click click click button see data first element instead second row", "d": "1/2017"}, {"body": "plnkr update pkozlowskiopensource dzmitryshylovich matsko answer", "d": "1/2017"}, {"body": "use dynamic template manipulation take care disposing data like export class dynamiccomponent input data input template templateref private viewref embeddedviewref constructor public viewcontainer viewcontainerref trytodispose thisviewref return thisviewcontainerremove thisviewcontainerindexof thisviewref ngonchanges thistrytodispose ngondestroy thistrytodispose way template always one projectable node query plunker demonstrating feature", "d": "1/2017"}, {"body": "good way alexzuza", "d": "1/2017"}, {"body": "done work exercise trying add feature ok like make pr discussing changes regards", "d": "1/2017"}, {"body": "santialbo open pr", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "nt think worth field duplication user stop route paramsnext route params next", "d": "1/2017"}, {"body": "dzmitryshylovich mentioning public api correctness even guys access nt supported problem deviation type definition actual totally agree proposed idea", "d": "1/2017"}, {"body": "public api correct subject derives observable", "d": "1/2017"}, {"body": "absolutely right case clearly readonly api type definition indicating", "d": "1/2017"}, {"body": "favor closing one pb inherent js link back subject users always able access underlying js supports private members", "d": "1/2017"}, {"body": "dzmitryshylovich record property product could cast call could accidentally writing app javascript lacked typescript type guidance go ahead try reproduction problem vicb yes js ca nt stop probing get subject console returns takes deliberate act sabotage whereas appears js appears part api someday might ask ben lesh bothered add method nt intend us use scenario went trouble creating like nt accident otoh nt put docs comment either ca nt know thinking although disagree conclusion ca nt say biggest issue world offended difference opinion go", "d": "1/2017"}, {"body": "wardbell record params property product asobservable could cast call next know u need store subject private property anyway class activatedroute params new behaviorsubject get params observable return thisparamsasobservable u access", "d": "1/2017"}, {"body": "observable link back subject users always able access underlying js supports private members vicb todolist rename private properties people nt think valid thing purpose asobservable layer indirection authors nt want leak internal implementation details consumers libraries rxjs ca nt assume every user using typescript fact users using typescript provides explicit intent library authors spanning consumers contract types typescript help typescript users world typescript though remove method completely would nt point caveats find performance utmost importance subject critical path skip using minorly help performance paths inlineable think microoptimization trade leaking implementation detail way people might abuse rxjs fact subscriptions returned actually next error complete method allocation optimizations done performance reasons might move away thing", "d": "1/2017"}, {"body": "blesh thx clarification standard usage export class componenta constructor private route activatedroute ngoninit thisrouteparams pluck id subscribe id gt onclick e thisrouteparams next e params observable nothing push new values subscription break app nope care", "d": "1/2017"}, {"body": "dzmitryshylovich picky right nt looked ones problematic say observables visible outside particular component observable comes mind shared across routes knows people going bunch properties examine course argument applies use foot gun would shoot nt deserve somehow feel api take different attitude said done subject least ben lesh confirmed intentions continue recommend although require angular doc guidelines", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "repro", "d": "1/2017"}, {"body": "anyone know disable xss mechanism", "d": "1/2017"}, {"body": "think provide noop impl", "d": "1/2017"}, {"body": "hi hitting safesomethingtostring function took look think repro mixes two patterns playerref nativeelement using gives direct access dom element outside angular mechanisms passing wrapped value returned bypasssecurity already outside angular direct dom access assign directly value error see dom function stringifying safe type want stay within angular need wrapped type bind audio src attribute like guess error earlier trying bind value", "d": "1/2017"}, {"body": "thank nt know access elementref bypasses angular mechanisms like presented binding src attribute caused quite long onoff effect source changed anyway answer solves problem think issue close", "d": "1/2017"}, {"body": "bug", "d": "1/2017"}, {"body": "thanks dzmitryshylovich edited original description specify bug nt sure outside original design nt think", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "hello", "d": "1/2017"}, {"body": "u pls add small repro u trying accomplish plunkr", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "angular js could something like js fruitname scopefruits name apple selected true name orange selected false name pear selected true name naartjie selected false ca nt add labels additional data markup based model see fruitname example", "d": "1/2017"}, {"body": "u tried template driven forms", "d": "1/2017"}, {"body": "nt want work template driven app reactive forms like reactive approach", "d": "1/2017"}, {"body": "asked believe example accomplished template driven forms", "d": "1/2017"}, {"body": "yes saw internet solution categorytitle get selected categories export class app categories title food selected false title cars selected true title shopping selected false getselectedcategories const selected thiscategoriesfilter c gt cselected need solution reactive forms basic functionality exists every app today", "d": "1/2017"}, {"body": "nt want include formsmodule use case want able work reactive forms every case solved template driven", "d": "1/2017"}, {"body": "easily extend formcontrol class add data need see", "d": "1/2017"}, {"body": "nice still need like working reactive forms still missing point know object connected truefalse value like template driven example fill like punishing working reactive forms", "d": "1/2017"}, {"body": "nt understand mean object connected truefalse value access value control attribute", "d": "1/2017"}, {"body": "ca nt get results like model driven example js categories title food selected false title cars selected true title shopping selected false getselectedcategories const selected thiscategoriesfilter c gt cselected plunker ca nt set real object model value true false", "d": "1/2017"}, {"body": "mean solution js class superformcontrol extends formcontrol constructor value data syncvtors asyncvtors super value syncvtors asyncvtors component selector myapp template export class app checkboxgroup formgroup foodarray formarray constructor fb formbuilder getselectedfood const selected thisfoodarraycontrolsfilter c gt cvalue map c gt cdata", "d": "1/2017"}, {"body": "works feels hacky array like want able turn model list checkboxes know object selected angular js straightforward like showed example reactive forms", "d": "1/2017"}, {"body": "nt think formarray good choice suited build array values like get proper structure form rather use formgroup like plunk data like course zip later get selected fruit ids", "d": "1/2017"}, {"body": "arielgueta confuses using formgroups array something like constructor fb formbuilder thisfoodarray new formarray thisnewitem add thisfoodarraypush thisnewitem newitem return fbgroup checked id label neither bug feature request working intended therefore help request please use channels gitter future help requests", "d": "1/2017"}, {"body": "pls add small reproduction", "d": "1/2017"}, {"body": "gallivantor tried reproduce using example provided could nt could provide github repository could clone", "d": "1/2017"}, {"body": "also gotten burned attempting introduce aot existing application hitting one challenge another finally cleared away many others currently left exact problem windows angular version browser na language typescript node aot issues", "d": "1/2017"}, {"body": "strange created cutdown version app demonstrate error cut error longer happened tried upgrading app time nt get error bit stumped say longer reproduce getting problems typescript downgraded perhaps actually fixed", "d": "1/2017"}, {"body": "gallivantor typescript downgraded yeah ts supported yet close issue pls thx", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "internal google links intentional", "d": "1/2017"}, {"body": "yes use stuff internally ca nt change", "d": "1/2017"}, {"body": "issues handles event ignores attribute without works fine", "d": "1/2017"}, {"body": "dzmitryshylovich see working example still uses works correctly attribute set directly sure related event feels like something fun going bindings also directive seems", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "closing missing repro missing infos browser probably related angular try create set src property dom node see works try bind attribute use element", "d": "1/2017"}, {"body": "cause cursor position selection inside elements reset could u pls add small repro plunkr", "d": "1/2017"}, {"body": "go litte input box steps reproduce type abc cursor behind c press left arrow cursor behind b delete b insert character cursor wo nt stay instead jumps end input behavior pretty obvious input value getting reset even value ie oldvalue newvalue need way reset input value oldvalue newvalue possible create directive handles input fields something like input focus remember current value cursor position value setter getting called check oldvalue newvalue true reapply old cursor position nt know affects performance hundreds inputs page maybe even nt possible", "d": "1/2017"}, {"body": "think u create directive listen input event reset cursor position something like", "d": "1/2017"}, {"body": "look commits looks pretty nice simple could also add formgroup formarray also methods would equal behavior across classes methods", "d": "1/2017"}, {"body": "great thank would love see beta", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "realized creating sample app root cause error actually related angularcli framework closing", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "dzmitryshylovich may parts one bigger issue sure really duplicate concerns navigation events also suggests reloading current route possible introduction lt true knowledge", "d": "1/2017"}, {"body": "u want reload", "d": "1/2017"}, {"body": "dzmitryshylovich particular case route component nonangular dom needs updated point updating resolvers simultaneously also desirable route component state easily resetted without recompilation necessarily dev fault made points issue prematurely closed angular router ui router handle route reloading would make sense could handle situation provide nondefault reuse behaviour routes case reuse inconsistent treats route changed params route params differently see example op probably bug", "d": "1/2017"}, {"body": "probably bug intentional navigation url nt anything events routereusestrategy even called explanation found exactly issue", "d": "1/2017"}, {"body": "dzmitryshylovich thanks track", "d": "1/2017"}, {"body": "nt load", "d": "1/2017"}, {"body": "loads latest google chrome clicked link pasted", "d": "1/2017"}, {"body": "problem project id preselected dropdown projects", "d": "1/2017"}, {"body": "problem router route instances null inside routereventssubscribe access route params determine current project dropdown", "d": "1/2017"}, {"body": "following everything defined", "d": "1/2017"}, {"body": "make either feature request bug dont care fact page loads subscribed routerevents inside routerroute null inside component already far pipeline router must else something broken matter time routerroute available outcommented settimeout function routereventssubscribe settimeout put miliseconds access routerroute even worked angularjs ui router global route change handler appjs angular make worse", "d": "1/2017"}, {"body": "vsavkin think", "d": "1/2017"}, {"body": "sure understand problem issue expect work nt nt nt work plunker server configuration work server configured properly ie redirect sub path main application", "d": "1/2017"}, {"body": "vicb issue sure plunkr link attached guys asked put detailed description issue edit url put current behavior expected behavior still want clear", "d": "1/2017"}, {"body": "select nt use function comparing options duplicate", "d": "1/2017"}, {"body": "provide plunkr", "d": "1/2017"}, {"body": "guess expects expression instead literal properties component", "d": "1/2017"}, {"body": "closing nt heard back reproduce scenario happy reopen got minimal reproduce scenario plunker", "d": "1/2017"}, {"body": "please provide plunkr", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "wanted make sure notes universal integration well one thing note dealing aspnet core environment example typically wo nt given entire html document rather fragment root example since nets mvc handles cshtml file turn becomes html file rendering might create issues trying integrate metatags service wanted make sure radar example net amp universal action imports const platform platformnodedynamic export default createserverrenderer params gt return new promise resolve reject gt const requestzone zonecurrentfork name angularuniversal request properties baseurl requesturl paramsurl originurl paramsorigin preboot false document lt onhandleerror parentzone currentzone targetzone error gt error occurs rendering module reject whole operation reject error return true open issue provide way pass request data server side angular application first iteration vikerman talking object node also would love help integration way", "d": "1/2017"}, {"body": "already using copy metatags service universal app already agnostic transfer state querying dom oninit client side also compliment roadmap cli integration universal maybe universal starter rebased angular cli universal cli generated app would also like help anyway possible", "d": "1/2017"}, {"body": "markpieszak thanks pointers working patrick alex discuss separate document fragment fields platformserver options support use cases nt control whole document put proper proposed signatures apis bug soon still process reviewing api rest team frozenpandaz metatags service already working platform agnostic way matter moving place reflects cli needs required extension mechanism support universal definitely radar aim provide solid api foundation universal definitely use help getting feedback use cases integrations current set tools around universal", "d": "1/2017"}, {"body": "vikerman would able assist moving gave shot bigger underlying issue relies domadapter currently native angularplatformbrowser moved angularcommon well seems require refactoring", "d": "1/2017"}, {"body": "vikerman alxhub stevesandersonms go along comment manipulating amp outside angular application need work net imagine integrations might similar could propose slightly different optional syntax serializer one nt return html also optional metatags information could used outside angular applied needed import platformserver angularplatformserver import appservermodulengfactory serverngfactory platformserver document lt net pass application controls etc rendermodulefactory appservermodulengfactory result gt let html resulthtml let meta resultmeta lt titlemeta basically anything external data want expose see discussing necessary changes net side would need take place without something like nt clean way abstracting information currently storing titlemeta information route changes loads onto object searching html result put back together let know guys think throwing ideas around", "d": "1/2017"}, {"body": "question making different would also mandatory decorator function expression implementation ready good way use decorator reference supporting two different decorator types everything using injectable default needs explicitly declared injectable", "d": "1/2017"}, {"body": "would nt break people apps know breaking changes may much imo mean google renderer invokeelementmethod get lot results even recommended kara angular rookie mistakes solution viewchild local template variable may used internally angular people use access dom directly method gets removed would alternative", "d": "1/2017"}, {"body": "array", "d": "1/2017"}, {"body": "bind loop also tabs inavmenutabs array", "d": "1/2017"}, {"body": "output console", "d": "1/2017"}, {"body": "thisnavmenuservicegettabs xxxx subscribe tabs gt consolelog tabs thistabs tabs error gt thiserrormessage error get tabs object object private fileuploadapi constructor private http gettabs linkid number psnluid string observable linkidtostring psnluid map response response gt get result linktabid tabname upload file", "d": "1/2017"}, {"body": "see object must array", "d": "1/2017"}, {"body": "yes covert array bind object ngfor new angular", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "point link", "d": "1/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2017"}, {"body": "take look early next week unless gkalpak gets first", "d": "1/2017"}, {"body": "happens also upgraded component", "d": "1/2017"}, {"body": "petebacondarwin news", "d": "1/2017"}, {"body": "sorry todo list hopefully time later today", "d": "1/2017"}, {"body": "starter nt think able support service ngoninit lifecycle method put service injects upgraded services factory upgraded service called sooner bootstrapmodule upgradebootstrap injector available design upgrade angular module bootstraps angularjs module angular module provides services hooks called even begin create angularjs injector one workaround might lazy load modules services bootstrap angularjs completed", "d": "1/2017"}, {"body": "think ought better scenario look weekend sure understand scenario provide plunker concrete reproduction steps", "d": "1/2017"}, {"body": "think scenario basically scenario ie fixing get fixed well nt currently access project demonstrated would nt probably able provide working plunker able next tuesday necessary impossibility fixing think mentioned documentation", "d": "1/2017"}, {"body": "ok think know cause problem look see create angularjs upgrade module depends upon passed call bootstrap b run block initializes upgraded injector service problem angularjs run blocks dependent modules blocks current module injector initialized time modules run blocks executed think solve creating two modules new one simply initializes injector main upgrade module puts new module front dependencies list", "d": "1/2017"}, {"body": "please take look potential solution", "d": "1/2017"}, {"body": "confirm scenarios fixed", "d": "1/2017"}, {"body": "scenario found actually sure correct application code ie whether provided plunker valid code lifecycle hooks documented directives components services however least ngoninit called services providing method causes service created sooner lifecycle hook called application bootstrap omitting hook job costructor instance service instantiated later nt see anywhere documentation whether service initialization job constructor ngoninit components constructor approach clearly bad practice", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "seems like didnt find searches close thanks", "d": "1/2017"}, {"body": "tilde alias used webpack nt know anything webpack config nt know module folders added resolve config reasonable ask work could maybe work nodemodules nothing unless part official modules spec nt think case", "d": "1/2017"}, {"body": "yes might better would something like aot webpack plugin webpack plugin runs compiling rest app way use specific syntax need webpack transform regular typescript else send", "d": "1/2017"}, {"body": "angular core knows htmlcss formats converted ressource loaders", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "seems nt even problem lazy loaded modules containing aux routes using also result error", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "logic makes sense seems like want new feature could merge current amp new params right", "d": "1/2017"}, {"body": "yes would beneficial", "d": "1/2017"}, {"body": "seems work one", "d": "1/2017"}, {"body": "issue skiplocationchange query params removed use preservequeryparams", "d": "1/2017"}, {"body": "use case skiplocationchange prevent location changing", "d": "1/2017"}, {"body": "typing value filtering field sending requests backend every ms also want store filtering value query params", "d": "1/2017"}, {"body": "provide plunkr", "d": "1/2017"}, {"body": "queryparams nt work preservequeryparams skiplocationchange enabled otherwise see partially removing text press back", "d": "1/2017"}, {"body": "skiplocationchange enabled still get queryparams router nt get reflected location history", "d": "1/2017"}, {"body": "ok expected location changing without page reloading preservequeryparams", "d": "1/2017"}, {"body": "currently preservequeryparams ignore queryparams option", "d": "1/2017"}, {"body": "would capture subscription obscombined way route params first example", "d": "1/2017"}, {"body": "need unsubscribe u nt docs subscribing observable component almost always arrange unsubscribe component destroyed exceptional observables necessary activatedroute observables among exceptions activatedroute observables insulated router router destroys routed component longer needed injected activatedroute dies", "d": "1/2017"}, {"body": "matsko support request issue", "d": "1/2017"}, {"body": "pkozlowskiopensource closed", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "thank finding", "d": "1/2017"}, {"body": "u inject u pipe chain", "d": "1/2017"}, {"body": "anyway issue changedetectorref bound component instance", "d": "1/2017"}, {"body": "dzmitryshylovich thank solving issue plunker u inject u pipe chain data async translate chaining would real use case cumbersome think pipe must used combination almost antipattern using works feel free close issue let point allow injecting async pipe another service although probably rare", "d": "1/2017"}, {"body": "let point allow injecting async pipe another service although probably rare yes changedetectorref bound component instance feel free close issue u close", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "would following work ts const routes routes path settings component emptycomponent path component dashboardcomponent path home component homecomponent path welcome component welcomecomponent path tags loadchildren appmodulestagstagsmodule tagsmodule path component notfoundcomponent", "d": "1/2017"}, {"body": "nope nt work try break relevant parts productive application see reproduce", "d": "1/2017"}, {"body": "managed reproduce pushed github dunno work plunkr uses packages restored npm check repository run bring error hope helps quite annoying every minor update issues since start using spend hours find solution time hit wall noticed moving relevant parts aspnet core project structure change versions back problem still remains even though previously worked however restoring exactly works afterwards going router respectively still works also clearing cache nodemodules folder c usersusernameappdataroamingnpmcache restoring router breaks", "d": "1/2017"}, {"body": "tsengsr configuration given previous message fails pb probably side pretty typical configuration would interesting check side exact package version use npm ls check angular version pb still persist latest router angular please reopen issue thanks", "d": "1/2017"}, {"body": "vicb nothing unusual output full one", "d": "1/2017"}, {"body": "closed", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "reproduce app component initialized initial navigation", "d": "1/2017"}, {"body": "workaround use delay navigation", "d": "1/2017"}, {"body": "perfect thanks", "d": "1/2017"}, {"body": "maximemenard option disable initial navigation work expected vicb labeled docs issue think", "d": "1/2017"}, {"body": "plnkr tutorial nt start ie either error one works ie", "d": "1/2017"}, {"body": "dzmitryshylovich one works", "d": "1/2017"}, {"body": "ca nt reproduce works fine ie", "d": "1/2017"}, {"body": "working plnkr reproduction", "d": "1/2017"}, {"body": "angular issue probably need shimpolifyll", "d": "1/2017"}, {"body": "confirmed nothing angular closing issue sorry mess dispatchevent removed", "d": "1/2017"}, {"body": "appears problem without works expected", "d": "1/2017"}, {"body": "yes targetblank navigate", "d": "1/2017"}, {"body": "seems like thing", "d": "1/2017"}, {"body": "duplicated", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "pls add small demo plunkr otherwise actionable", "d": "1/2017"}, {"body": "ok bug click new template check console edit btw patchvalue function recursive function gets template array object items inside build form according template meaning exactly match template", "d": "1/2017"}, {"body": "dzmitryshylovich matsko someone confirm bug stuck would like move", "d": "1/2017"}, {"body": "cc kara", "d": "1/2017"}, {"body": "dejour please look carefully code ngif displays group checkboxes problem occurs dom updated", "d": "1/2017"}, {"body": "kara could please confirm bug bad implementation need change asap thanks", "d": "1/2017"}, {"body": "simplified plunker", "d": "1/2017"}, {"body": "taking close look seems like bug", "d": "1/2017"}, {"body": "added new form group second place changed template index inital control index works dzmitryshylovich kara", "d": "1/2017"}, {"body": "problem need add dynamically checkboxes form tried formarray add groupform formarray breaks think bug could someone show supposed done", "d": "1/2017"}, {"body": "bretto work", "d": "1/2017"}, {"body": "thank much nt aware", "d": "1/2017"}, {"body": "matsko kara dzmitryshylovich know lot new issues everyday spent two days trying find bug would expect least bug tag little attention sorry bit frustrated", "d": "1/2017"}, {"body": "vicb dzmitryshylovich little bit desperate someone add least bug tag", "d": "1/2017"}, {"body": "closed", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "u error", "d": "1/2017"}, {"body": "oh yes error thank understand correctly already fixed fix available soon", "d": "1/2017"}, {"body": "yeap available next release", "d": "1/2017"}, {"body": "iexela given submitted apart issue closed please reopen still nt work releases", "d": "1/2017"}, {"body": "sorry hear things working expected igorminar looking see related going", "d": "1/2017"}, {"body": "igorminar looking see related going nt think related plunkr template nt work ie missing shim already submitted pr fix", "d": "1/2017"}, {"body": "matsko think problem directly angular may way prevent problems conflicts commonly used party libraries think strange problems could caused part requestanimationframe windowrequestanimationframe windowmozrequestanimationframe windowwebkitrequestanimationframe windowmsrequestanimationframe cancelanimationframe windowcancelanimationframe windowmozcancelanimationframe requestanimationframe null requestanimationframe function fn return settimeout fn cancelanimationframe function id return cleartimeout id pacejs version may related animation rendering changes main reason issue mine prevent users living shadows like debugging issues", "d": "1/2017"}, {"body": "implemented pr doc pending", "d": "1/2017"}, {"body": "vicb great news sorry noticing thank", "d": "1/2017"}, {"body": "known issue icu messages yet supported xliff", "d": "1/2017"}, {"body": "ok thanks clarification clear documentation indeed mentions lack support nevertheless shows examples gives explanations translating using xliff", "d": "1/2017"}, {"body": "btw could nt leave issue opened indeed issue search open issues icu nt bring anything tends suggest issue nt known fixed already instead issues like also tend suggest icu working except html support", "d": "1/2017"}, {"body": "clear documentation please open bug angularangulario issues like already issues tracking one gh search sucks issue nothing sorry fyi main thing figure icu messages serialized xliff anybody pointers impl trivial might easy create po convert xliff virtaal tools", "d": "1/2017"}, {"body": "already supports multiple classes", "d": "1/2017"}, {"body": "nt shown following docs", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "exactly trying avoid prefer something like", "d": "1/2017"}, {"body": "create directive", "d": "1/2017"}, {"body": "vicb dupe something close", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "oh sweet thanks ericmartinezr find docs", "d": "1/2017"}, {"body": "ericmartinezr thx dessalines add example docs", "d": "1/2017"}, {"body": "u inside custom decorators nt inheritance address issues", "d": "1/2017"}, {"body": "wonder angular decorators converted annotations get rid metadata jit behavior consistent", "d": "1/2017"}, {"body": "dzmitryshylovich debugging decorators components needs references interact highlighting dom run conditionally well depending runtime settings also auto subscribe decorators much like pipe sets dependency subscription observable property tears description furthermore decorators automatically emits events based existing properties sent decorators depend custom services typically specified decorator possibly sure could specify dependencies everywhere tedious good separation concerns want introduce new functionality one decorators need new dependency thing inheritance whole idea decorators ruined instead neatly separated system thing one thing combined dependencies spill component constructor base component always wants everything every sub component write need pass references super component ifwhen super base component introduces new functionality sub components would updated well optimal example code wise hardterse accomplish inheritance note dependencies", "d": "1/2017"}, {"body": "schippie instead wrapping inside another component could inject component instance host element instead directive selector disableinput export class disableinputtdirective input disableinput role string constructor host private hostinput mdinputcomponent ngonchanges thishostinputdisabled thisrole user work temporary solution guess plnkr", "d": "1/2017"}, {"body": "rusev quite elegant solution indeed complete forgot moment indeed highlight problem even clearer possible directive tell host component change keep bug report open", "d": "1/2017"}, {"body": "exact issue setting component input outside using directive host binding elegant pattern makes componentdirective interaction easy allows generalization decoupling things addition wonder event binding works though whereas property binding nt", "d": "1/2017"}, {"body": "thanks reporting issue luckily already fixed available next release", "d": "1/2017"}, {"body": "closing issue due comment", "d": "1/2017"}, {"body": "dup", "d": "1/2017"}, {"body": "indeed", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "pls add repro plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich added plnkr please look", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "pls add repro plunkr", "d": "1/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2017"}, {"body": "allowed please add repro edit seems like supported ts", "d": "1/2017"}, {"body": "ya workaround change const telemetry microsoftapplicationstelemetry", "d": "1/2017"}, {"body": "use workaround", "d": "1/2017"}, {"body": "nt duplicate", "d": "1/2017"}, {"body": "nt think issue components children routers accessing parameters parent routers", "d": "1/2017"}, {"body": "proposal submitted", "d": "1/2017"}, {"body": "exactly recast concrete proposal processes commenting replace concrete proposal", "d": "1/2017"}, {"body": "updated content directly reference original request", "d": "1/2017"}, {"body": "chuckjaz asfernandes could add concrete use cases especially uses cases could implemented current", "d": "1/2017"}, {"body": "case inheritance makes sense composition example proposal valid one define base page generic layout maybe could implemented another component transclusion overall application designimplementation may make sense base class", "d": "1/2017"}, {"body": "inheritance analog would difficult impossible come example would could accomplished composition however supporting inheritance mechanism construct components use cases justify composition justify inheritance asfernandes points exist patterns conveniently efficiently expressed using inheritance feature would increase reach inheritance allowing used deemed appropriate composition", "d": "1/2017"}, {"body": "ok chuckjaz useful expected know include special value called inherited best option access value ancestor component knowledge compilation works limitations especially related compilation otc offline template compiler suggestion would think trivial solution like use functions similar one suggested alternative solution problem following example would something similar typescript component stylesurl basestylescss providers baseproviders selector base class basecomponent component inherited would necessary values already inherited default giving possibility overwrite merge providers provider sometoken usevalue somevalue lt override providers inheritedvalue gt inheritedvalue provider sometoken usevalue somevalue lt merge template selector sub override using base value selector parentselector gt return parentselector sub result basesub class mycomponent extends basecomponent ps commented g\u00fcnter z\u00f6chbauer stackoverflow otc could problem", "d": "1/2017"}, {"body": "otc could problem yeap u ca nt use functions matadata", "d": "1/2017"}, {"body": "dzmitryshylovich otc compilation another reason would possible change otc compilation support view user would elegant flexible way use unfortunate option", "d": "1/2017"}, {"body": "selector parentselector gt return parentselector sub instead functions would prefer something like angular compilation insert parent value instead", "d": "1/2017"}, {"body": "suggestion compilation would solve javascript compile would solve javascript think second option would supported ps sorry could questioning beginners", "d": "1/2017"}, {"body": "fernandocode nt run code aot use values statically determine annotations however consider supporting lambda follows restrictions macro functions would support wrote example means would still support consider supporting getting typing typescript correctly flow type information bit tricky give thought", "d": "1/2017"}, {"body": "chuckjaz efforts appreciated irrespective firmly held assertion undeclared fork language thus disingenuous misleading badly need actual specification find restrictions aot imposes crippling times anything would increase expressiveness would welcome however consider supporting lambda follows restrictions macro functions would support wrote example typescript macro ecmascript macro languages macros sounds like adding new concepts mind please try understand concern honestly desire intent offend question prior experience designing languages typescript team experience designing widely successful languages like c turbo pascal delphi also uncomfortable design languages coupled web application frameworks fear generality lost use example react jsx love hate big fan specified maintained independently react respective teams make concerted effort maintain separation leads better design", "d": "1/2017"}, {"body": "aluanhaddad know really understood position like better understand points mentioned understand term macro functions would context considered supported something language supports referred lambda nothing functions arrows functions would simplified way declare function similar lambda c problem another point would also uncomfortable design languages coupled web application frameworks fear generality lost think increase coupling framework language since end javascript called lambda support actually support javascript functions believe real problem hinders day day development applications know different view way work correct problem receive attention proposed appropriate think take step back review use annotations framework", "d": "1/2017"}, {"body": "aluanhaddad appreciate underdocument working trying document evaluated metadata collection start certainly sufficient specifically macro function subset javascript functions collector supports evaluating produce metadata currently supports function contains single return statement nonblock lambda shorthand thing resume considerable experience theoretic practical language design well features affect library using language specifically significant influence delphi vcl turbo pascal turbo vision owl minor effect c significant impact wpf xaml part original typescript team leaving microsoft decline debate relative merits general approach issue feel free take appropriate forum always good language discussion", "d": "1/2017"}, {"body": "chuckjaz thank response much appreciate credentials first class clearly know written wpf applications found xaml joy work qualifications time generally exceptional uniquely apropos work currently angular also want thank link documentation angular metadata collection process appreciate look forward seeing evolve", "d": "1/2017"}, {"body": "chuckjaz started playing tactics metadata inheritance current release tried various stunts see jit version plunker clearly work like work along lines propose pr nt madness see thanks happy chat directly time", "d": "1/2017"}, {"body": "pls add repro", "d": "1/2017"}, {"body": "repro", "d": "1/2017"}, {"body": "asfernandes unfortunate behavior due fact content processed part app part template thus directive find controlcontainer precise register usually case using instead example best solution come far", "d": "1/2017"}, {"body": "pls add repro", "d": "1/2017"}, {"body": "without transclusion error console transclusion error console", "d": "1/2017"}, {"body": "noticing issue weird nt get noticed long", "d": "1/2017"}, {"body": "transclusion error console error nothing transclusion need use safe navigation operator nt exist", "d": "1/2017"}, {"body": "without transclusion error console nt throw error ngif false u change throw error required fix works intended", "d": "1/2017"}, {"body": "perhaps right see evaluating xy app component nt think obviously see similar thing documented another vue library", "d": "1/2017"}, {"body": "asfernandes u open issue docs repo closed", "d": "1/2017"}, {"body": "asfernandes design see dzmitryshylovich created issue docs repo closed", "d": "1/2017"}, {"body": "issue element getting blurred removal ngif think think setting thisprogress false triggers change detection triggers ngif remove element containing ngcontent causes focused input blur sets nguntouched false original change detection sure happens ngcontent though tried look code nt think able get handle anytime soon try get plnkr running without using forms stuff helps narrow", "d": "1/2017"}, {"body": "barebones version without using anything forms module", "d": "1/2017"}, {"body": "updated workaround blur input nt good solution got multiple inputs guess quickfix would blur input elements submit", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "recast concrete proposal capture proposing", "d": "1/2017"}, {"body": "chuckjaz yes good", "d": "1/2017"}, {"body": "env angular version build tools", "d": "1/2017"}, {"body": "angular version description build tool blaze", "d": "1/2017"}, {"body": "angular version description commit reference description", "d": "1/2017"}, {"body": "using version internal google code base see latest version synced open source repository used sure exactly released version corresponds tue jan dzmitry shylovich wrote angular version description commit reference description receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "ca nt reproduce plunkr unhandled promise rejection failed load componenthtml zone task promisethen value failed load componenthtml", "d": "1/2017"}, {"body": "aot", "d": "1/2017"}, {"body": "fwiw also ran issue using aot turned html file template nt included build", "d": "1/2017"}, {"body": "similar error aot struggling days keep failing would nice error message would point sorce file part code causing failed compilation", "d": "1/2017"}, {"body": "turns bug error custom implementation use internal reference", "d": "1/2017"}, {"body": "could u pls strip repro single input control pair validators hard understand going", "d": "1/2017"}, {"body": "dzmitryshylovich ok tried remove code validators used better error bug happens one write password field email confirm password updates one time guess confirm password may also removed im sure relates problem", "d": "1/2017"}, {"body": "u save changes", "d": "1/2017"}, {"body": "sec", "d": "1/2017"}, {"body": "dzmitryshylovich ok gone check one write password field crazier updates become xd", "d": "1/2017"}, {"body": "nah still nt see changes", "d": "1/2017"}, {"body": "dzmitryshylovich dide open console changes every time one write password iteration indicator consolelog added see many times called increasing abnormally however used validator calling another validator like see bold calling validator wont incrise like crazy im also using latest chrome", "d": "1/2017"}, {"body": "dzmitryshylovich gif illustrating happening watch numbers", "d": "1/2017"}, {"body": "fixed part next release", "d": "1/2017"}, {"body": "great thanks", "d": "1/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2017"}, {"body": "nt import formsmodule angular involved", "d": "1/2017"}, {"body": "want allow user choose example one five options list disabling check update value click method sorry clear plunker description working properly ask plunker works intended could please try rephrase expected vs current behavior", "d": "1/2017"}, {"body": "pls update latest angular add small repro plunkr", "d": "1/2017"}, {"body": "hi dzmitryshylovich said updated latest angular cli provides luck tried creating sample scenario since route nt hold data page refresh ca nt verify issue plnkr bootstraps application refresh cheers aniket", "d": "1/2017"}, {"body": "latest angular latest angular router since route nt hold data page refresh ca nt verify issue plnkr bootstraps application refresh following pls add steps reproduce expected behavior thx", "d": "1/2017"}, {"body": "pld add small repro plunkr", "d": "1/2017"}, {"body": "added sample repo following link please check", "d": "1/2017"}, {"body": "nt load", "d": "1/2017"}, {"body": "sorry small issue side code got rectified creating plunker thanks responding dzmitryshylovich", "d": "1/2017"}, {"body": "please provide plunker reproduction", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "fixed", "d": "1/2017"}, {"body": "pls add small repro plunkr", "d": "1/2017"}, {"body": "plunkr updated angular alright", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "plnkr working", "d": "1/2017"}, {"body": "angular issue", "d": "1/2017"}, {"body": "ok ca nt help", "d": "1/2017"}, {"body": "issue tracker support channel u need help", "d": "1/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2017"}, {"body": "managed make work weird solution done make routing code module file make module file parent directory component delete default export like became reason module file folder component works worked plunkr environment know sounds weird tested example opened eyes nt know happening must bug", "d": "1/2017"}, {"body": "face problem knewtone move routing code separate files ngmodule file working", "d": "1/2017"}, {"body": "report issue please include repo said kind selector works see example", "d": "1/2017"}, {"body": "pls report docs issues", "d": "1/2017"}, {"body": "tx label would love see next version begin testing awesome service right many errors begin deploying wish adopt new files creating first tx", "d": "1/2017"}, {"body": "bump", "d": "1/2017"}, {"body": "information bug ie related problem work", "d": "1/2017"}, {"body": "u pls add github repo reproduction plunkr contains lot additional script besides angular app", "d": "1/2017"}, {"body": "wkoza yes think possible ie bug plays role iframe issue still looks like angular nt cleaning injector dependencies destroy though dzmitryshylovich get something together shortly post back still think original post might right related router also destroyed thank", "d": "1/2017"}, {"body": "host already providing functionality", "d": "1/2017"}, {"body": "please review merge pr", "d": "1/2017"}, {"body": "team facing similar problem rely service shares temporary states components module lazy loaded module injector recreated every navigates prevent state sharing", "d": "1/2017"}, {"body": "related", "d": "1/2017"}, {"body": "please explain related want abstract control generic right way valuechanges type would way infer type exactly asking means related another way could implemented without making abstractcontrol generic please explain", "d": "1/2017"}, {"body": "using definitively wrong solution typescript somethign like java unbounded wildcard would use maybe something done manner empty interface also typescript features may interesting study implement strongly typed form controls way currently unfortunately thing usable large app need design something top", "d": "1/2017"}, {"body": "noticed ts planned default generic types think might good idea revisit issue since could make generic like type value returned would would good idea currently since would massive breaking change default generics unless misunderstand breaking change", "d": "1/2017"}, {"body": "changes ryancavanaugh mentioned fix plus beginning receiving write transformed source confuses collector working fix", "d": "1/2017"}, {"body": "expect vs support available small fix angular bundled incompatible changes future angular", "d": "1/2017"}, {"body": "ticket linked ryancavanaugh closed complete days ago feat considered complete", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "using ts language feature see inherited decoratorsmetadata ai nt honored jit mode aot mode works plunker saw issue guess angular side", "d": "1/2017"}, {"body": "angular services automatically upgraded need builtin angular servicefilter part app need provide factory example found applies builtin custom services alike", "d": "1/2017"}, {"body": "tytskyi nt worry everybody mistakes even tried implementing without using regex complicated good news took regex placed html form using pattern keyword worked except beginning ending blanks easily remove using trim unfortunatly nt time create plunkr example going production six days version live see get rid nasty bug cheers alexander", "d": "1/2017"}, {"body": "aspetko repro", "d": "1/2017"}, {"body": "pkozlowskiopensource closed", "d": "1/2017"}, {"body": "sophianguyen u solve", "d": "1/2017"}, {"body": "workaround u wrap", "d": "1/2017"}, {"body": "unfortunately accees functionality trying use external library", "d": "1/2017"}, {"body": "update updated libraries change problem", "d": "1/2017"}, {"body": "reproduce plunkr file new issue", "d": "1/2017"}, {"body": "posted reproduction first post relaunched still get convert undefined null object", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "vicb may ask reopening", "d": "1/2017"}, {"body": "reproduce plunkr nobody time clone install apps github use starting point", "d": "1/2017"}, {"body": "plunkr uses systemjs able reproduce problem use webpack", "d": "1/2017"}, {"body": "angular issue something wrong local config", "d": "1/2017"}, {"body": "problem point angular tries access property parameter supplied route local anonymous function property exist idea throwing error plunkr instead anonymous use everything fine idea plunkr affects behavior execution", "d": "1/2017"}, {"body": "fixed works plunkr", "d": "1/2017"}, {"body": "ehh used plunkr exactly version used local machine posting issue today updated posting issue still exists", "d": "1/2017"}, {"body": "eventemitter fired different thread rapidly random time sure mean javascript single threaded true need way reproduce issue nt see could cause issue since exception happens electrone code perhaps execute electrone code outside angular", "d": "1/2017"}, {"body": "javascript single threaded electron necessarily main process renderer process runs single thread javascript respectively correct wrong try reproduction steps reproduce reason zonerun trigger ui update takes effect heavy lifting electron code already run main processthread nt use angular definitely electron issue course like collect proof absolutely angular issue see wait ngzone consolidate job issue another ngzonerun issue goes away", "d": "1/2017"}, {"body": "javascript single threaded electron necessarily electron may multiple threads thread must vm must ensure two threads nt run vm js vm single threaded possible electron turn multithreaded code confused statements sorry many issue look unless simple way reproduce issue end working something pressing", "d": "1/2017"}, {"body": "ca nt really find simpler reproduction steps depends capacity want issue wo nt mind closing issue actionable long multiple threads chance contest shared resource regardless whether two threads run separate vms electron remote module relies crossprocess rpc exchange data inclined believe different vms even processes nt require multithreaded code since essentially different processes maybe angular consider environments kind defensive protective reading data opinion", "d": "1/2017"}, {"body": "dzmitryshylovich vicb case think issue correct way answering cause solution", "d": "1/2017"}, {"body": "experiencing thing case need serverside validation makes multiple runs even worst", "d": "1/2017"}, {"body": "closed closed already", "d": "1/2017"}, {"body": "wrote issue found afterwards bug", "d": "1/2017"}, {"body": "anyone know workaround hoping gets fixed soon makes ngif unusable mixed app try resort hide time", "d": "1/2017"}, {"body": "works planned idea change detection always run top bottom check detection exception prevent app repeatedly change detecting changes done want modify parent update via change detection wrap changes parent inside promise", "d": "1/2017"}, {"body": "evaluated issue decided partially revert change starting due tomorrow throw error instead incorrect usage however throw error angular due march sorry innocence", "d": "1/2017"}, {"body": "wrong getting easier intuitive thing track property", "d": "1/2017"}, {"body": "easier intuitive thing track property syntax", "d": "1/2017"}, {"body": "alternativelyadditionally able new values route data would handy basic use case scenarios updated data already available needs propagated believe already cast route data back underlying feels hacky", "d": "1/2017"}, {"body": "snehagokarn u fix", "d": "1/2017"}, {"body": "closing nt actionable reproduce scenario", "d": "1/2017"}, {"body": "sumigoma excluding testts cause separate project rest application avoid recommend creating tsconfigbuildjson aot options specifically excluding testts leave tsconfigjson configuration want editors use", "d": "1/2017"}, {"body": "chuckjaz hansl makes sense recommended approach seems like adopted angularcli", "d": "1/2017"}, {"body": "angularcli way dealing still evaluating want approach interop command line tools since nt want multiple tsconfig files projects closing solved disagree let us know", "d": "1/2017"}, {"body": "reference workaround solving problem consists two steps target wo nt work exclude file teststs tsconfigjson", "d": "1/2017"}, {"body": "hansl still problem even suggested workaraound excluding teststs please advise command error message tsconfigjson angular angularcli typescript windows node edit got work starting src instead root application project documentation says", "d": "1/2017"}, {"body": "exclude testts tsconfigjson work anymore", "d": "1/2017"}, {"body": "could use global click handler html body handle routing internally process used angularjs framework reused code angular app contains external html fragments", "d": "1/2017"}, {"body": "related", "d": "1/2017"}, {"body": "situation provider token application packages root url find solution", "d": "1/2017"}, {"body": "code referenced uses static initialization broken however referencing using trigger error app works may broke mangled loosing lot time stuff", "d": "1/2017"}, {"body": "conform effect read initial comment breaks angular works order imports matter replacing reflectmetadata solves issue breaks existing dependency corejs breaking change must fixed please reopen", "d": "1/2017"}, {"body": "problem mentioned fost aajajim moving polyfill import top entry file maints solved issue polyfillts file js import import import import import import import import import import import import import import import import zonejsdistzone maints file js import polyfills lt moved polyfill import loaded angular import platformbrowserdynamic angularplatformbrowserdynamic import enableprodmode angularcore import polyfills lt original polyfill import import environment environmentsenvironment import appmodule app", "d": "1/2017"}, {"body": "cents concatenate angular umd bundles libraryjs use externals webpack builds faster way works nt work though remove step everything works tried add early possible nt help", "d": "1/2017"}, {"body": "switching helped first line first chunk load comes concatenated umd bundles everything ok", "d": "1/2017"}, {"body": "problem te chrome edge app running breaks systemjs resolve parameters parser error changed sort order afterwards systemjs file indexhtml works files also bundled uglified still works", "d": "1/2017"}, {"body": "fixed issue case changed import angularcommon import angularcore import angular import angularplatformbrowser import angularplatformbrowserdynamic import angularrouter import reflectmetadatareflect import rxjsrx import zonejsdistzonejs import tshelpers import reflectmetadatareflect import rxjsrx import zonejsdistzonejs import tshelpers import angularcommon import angularcore import angular import angularplatformbrowser import angularplatformbrowserdynamic import angularrouter", "d": "1/2017"}, {"body": "emiliomartinez attempt come reproducible case given description also produce minimal example create github repository clone repro", "d": "1/2017"}, {"body": "emiliomartinez believe test case longer need repository requested believe issue stems refactoring commit refactored static reflector simplify handles calls unfortunately causes us try evaluate parameters decorators angular decorator working fix", "d": "1/2017"}, {"body": "chuckjaz saw unit test added commit test case looks accurate thank", "d": "1/2017"}, {"body": "seeing error error determine module class dividerpanel c mswebstudiotouchsrccompsdividerpaneldividerpanelts determine module class entrypanel c mswebstudiotouchsrccompsentryentrypanelts determine module class forgotpass c mswebstudiotouchsrccompsentryforgotpassts determine module class footer c mswebstudiotouchsrccompsfooterfooterts determine module class infobox c mswebstudiotouchsrccompsinfoboxinfoboxts determine module class inputnumeric c mswebstudiotouchsrccompsinputnumericinputnumericts determine module class inputstring c mswebstudiotouchsrccompsinputstringinputstringts determine module class loading c mswebstudiotouchsrccompsloadingloadingts determine module class mapaddress c mswebstudiotouchsrccompsmapaddressmapaddressts determine module class minitab c mswebstudiotouchsrccompsminitabsminitabts determine module class minitabs c mswebstudiotouchsrccompsminitabsminitabsts determine module class modaldialog c mswebstudiotouchsrccompsmodaldialogmodaldialogts determine module class c determine module class c determine module class c determine module class simplelisteditable c mswebstudiotouchsrccompssimplelistsimplelisteditablets determine module class simplelist c mswebstudiotouchsrccompssimplelistsimplelistts determine module class filterpipe c mswebstudiotouchsrcpipesfilterpipets determine module class filterpipeequal c mswebstudiotouchsrcpipesfilterpipenotts determine module class orderby c mswebstudiotouchsrcpipesorderbyts determine module class replacepipe c mswebstudiotouchsrcpipesreplacepipets determine module class sortby c mswebstudiotouchsrcpipessortbyts analyzeandvalidatengmodules c mswebstudiotouchnodemodules extractorextract c mswebstudiotouchnodemodules extractorextractbundle c mswebstudiotouchnodemodules extractorextract c mswebstudiotouchnodemodules extract c mswebstudiotouchnodemodules objectmain c mswebstudiotouchnodemodules object c mswebstudiotouchnodemodules modulecompile objectmoduleextensionsjs moduleload extraction failed root desktopveuhfol cygdrivecmswebstudiotouch angular kitchen sink source regards sean", "d": "1/2017"}, {"body": "walk entire project structure instead look declarations used", "d": "1/2017"}, {"body": "tried clean directives used rabbit hole got deeper let add working fine angularcli angularcompiler liking project reference nice clean setup regards sean", "d": "1/2017"}, {"body": "method would nt cover using browser back forward buttons though correct seems predominant use case", "d": "1/2017"}, {"body": "routerback method would nt cover using browser back forward buttons though correct yeah returning history previous state way think", "d": "1/2017"}, {"body": "wbhob fix", "d": "1/2017"}, {"body": "fix requests completing throwing errors cors configured server think angular problem", "d": "1/2017"}, {"body": "angular nothing cors", "d": "1/2017"}, {"body": "always throws error use ngserve normal requests fine jan dzmitry shylovich notifications githubcom wrote gt angular nothing cors receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "u reproduce plunkr request using angular http module error request using xhr without error", "d": "1/2017"}, {"body": "plunker however something wrong plunker nothing working going change api url later nt sensitive data right please replicate different project", "d": "1/2017"}, {"body": "sorry forgive idiot testing several weeks ago port nothing working switched began pushing server continually got errors locally locally specifying port server reverse proxy kept pointing stuff running thank everyone help going go cry make sure never make mistake", "d": "1/2017"}, {"body": "wbhob thanks postmortem kind like hear one silly mistakes", "d": "1/2017"}, {"body": "dzmitryshylovich binding interesting workaround necessary nt want throw ever bug work wrote", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "dzmitryshylovich indeed although would known look without help nt mind marking duplicate like see remain open long issue open folks like find", "d": "1/2017"}, {"body": "think write warning dev mode", "d": "1/2017"}, {"body": "ha would end warning agree need call attention somewhere fixed encourage angular team fix", "d": "1/2017"}, {"body": "agreed kara benefits overweight actual work plus trivial workaround", "d": "1/2017"}, {"body": "disagree setting optional html great many people nt set nt even remember exists things usually work suddenly nt point idea wrong nt angular nt require developer html expert angular handle extremely common patterns grace", "d": "1/2017"}, {"body": "way means using aot ngc compiles files times right would possible compile execute generation aot time", "d": "1/2017"}, {"body": "ocombe sure understand question currently compiles ts files fixed compiles done compile files extraction compilation stays different processes", "d": "1/2017"}, {"body": "ok agree right compiles twice compile using ngc", "d": "1/2017"}, {"body": "great solution make use sure", "d": "1/2017"}, {"body": "vsavkin would someone accomplish wanted update param middle route something like mainsite make change mainsite mainsite route merge urltrees together created plunker illustrating trying", "d": "1/2017"}, {"body": "hours search found solution add server side expose authorization header", "d": "1/2017"}, {"body": "dzmitryshylovich see reproduction", "d": "1/2017"}, {"body": "nertzy thx take look", "d": "1/2017"}, {"body": "deployed github page well github page shows still happens angular routing root set nonroot path", "d": "1/2017"}, {"body": "looks like server config issue hash location strategy works expected believe", "d": "1/2017"}, {"body": "adding works inserts weird url problem nt happen previous project acli happens latest packages thought something wrong waiting correction tested custom node server problem happens", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "encountered problem created following workaround problem instead navigating canactivate guard navigating home path fake path redirecting", "d": "1/2017"}, {"body": "hey vicb ran issue angular master class wonder could ping look", "d": "1/2017"}, {"body": "problem workaround luno nt working", "d": "1/2017"}, {"body": "try", "d": "1/2017"}, {"body": "anderflash reason nt want redirect except sof solution manually redirect guard someroute without redirecting root", "d": "1/2017"}, {"body": "problem", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "working since", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "pkozlowskiopensource one library owner able overcame issue however says since library using rxjs dependency required updated library use latest version case would long term solution thank", "d": "1/2017"}, {"body": "record angular latest stripping comments html template expected behavior development environment keep comments", "d": "1/2017"}, {"body": "angular html parser comments templates significantly complicate parsing plus angular uses comments placeholders", "d": "1/2017"}, {"body": "moving forward tell next developer going code months previously code mechanism available", "d": "1/2017"}, {"body": "closing nt minimal reproduction plunker requesting one", "d": "1/2017"}, {"body": "angular backend agnostic reproduce error hitting url like see angular issue however could wrong something confirm could try reproduce plain xhr request see get behaviour experience behaviour something end indeed something going angular", "d": "1/2017"}, {"body": "found root issue internal one api without getting deep details another team company managed api core libraries rest calls caught code reaching controllers appeared calls making api closing issue", "d": "1/2017"}, {"body": "small plunker example switch see difference location output", "d": "1/2017"}, {"body": "vandres solution schroedan suitable", "d": "1/2017"}, {"body": "dzmitryshylovich sorry nt know mean feature request plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich fixed issue implementation hashlocationstrategy would nice see core configurable option simple code", "d": "1/2017"}, {"body": "already mechanism tune behavior default impl suitable provide impl extend override methods nt see need add configuration particular use case", "d": "1/2017"}, {"body": "think may common use case working another server side technology thats opened feature request angular team decides use case common close", "d": "1/2017"}, {"body": "found answer useful provides information official documentation improved", "d": "1/2017"}, {"body": "hydratedomconfig part angularcore get error try compile application error module homefahadworkspacesitecurioussnodemodules angularcoreindex exported member hydratedomconfig", "d": "1/2017"}, {"body": "fahadmullaji proposal", "d": "1/2017"}, {"body": "schippie luck know bug working expected", "d": "1/2017"}, {"body": "zahlprish sure yet bug working expected hopefully learn comming days early next week", "d": "1/2017"}, {"body": "hello encoutered thing order use immutables records started using workaround helps", "d": "1/2017"}, {"body": "simplifia believe another workaround everyone well involves creating record like unverified code writing hehe javascript export interface testmodel foo string export const test new record foo test export class dummy extends test implements testmodel foo string honestly solutions around problem manifest due fact extending expressions working expected within context aotngc", "d": "1/2017"}, {"body": "tried proposed import record immutable export interface testmodel foo string export const test recordclass record foo test export class dummy extends test implements testmodel foo string output error error encountered resolving symbol values statically calling function record function calls supported consider replacing function lambda reference exported function resolving symbol test resolving symbol dummy yeah agree nt work expected solution workaround", "d": "1/2017"}, {"body": "still avoiding workaround point thinking trying one simplifia provided", "d": "1/2017"}, {"body": "would possible angular working expected update exposed bug angularcli", "d": "1/2017"}, {"body": "zahlprish nt use angularcli personally problem within angularcompilercli", "d": "1/2017"}, {"body": "schippie ah okay well least good know first admit fairly new angularjavascript community trying brain dump possible ideas keep issue alive", "d": "1/2017"}, {"body": "tbosch also immutable record ngrx store interplay app incapable aot issue happy help way thanks", "d": "1/2017"}, {"body": "similar issue compiling project aot flag error error encountered resolving symbol values statically calling function record function calls supported consider replacing function lambda reference exported function resolving symbol categoryrecord usersdakobriiskbriiskblogbriiskblogsrccommonmodelscategorymodelts resolving symbol category usersdakobriiskbriiskblogbriiskblogsrccommonmodelscategorymodelts import record immutable export const categoryrecord record name undefined id undefined updatedat undefined createdat undefined export class category extends categoryrecord public name string public id number public updatedat string public createdat string static fromjson jsonobject category jsonobjectupdatedat new date dateparse jsonobjectupdatedat tolocalestring jsonobjectcreatedat new date dateparse jsonobjectcreatedat tolocalestring return new category jsonobject constructor name stringany id number updatedat string createdat string typeof name object super name else typeof name string super name id updatedat createdat angularcli angular typescript node", "d": "1/2017"}, {"body": "issue code thirdparty lib related ng app code scope imports execuded register editor custom format ts const blockembed iblotconstructor quillimport blotsblockembed export class imageblockblot extends blockembed error error encountered resolving symbol values statically symbol reference expected position original ts file resolving symbol imageblockblot angular version", "d": "1/2017"}, {"body": "really hope status update way form decide refactor models", "d": "1/2017"}, {"body": "hi im new angular started net core angular template updating newer version angular got error well uncaught typeerror angularcoreversion constructor objectdefinepropertyget object webpackrequire bootstrap fn bootstrap object webpackrequire bootstrap fn bootstrap object object testing tried create temporary workarround changing faulting line something like results error uncaught typeerror ctorparametersmap function reflectioncapabilitiesparameters reflectorparameters compilemetadataresolvergetdependenciesmetadata compilemetadataresolvergettypemetadata compilemetadataresolvergetdirectivemetadata arrayforeach native compilemetadataresolvergetngmodulemetadata arrayforeach native nt know maybe caused dirty try create workarround also related previeous error packages", "d": "1/2017"}, {"body": "problem tweichselbaumer screen error package list", "d": "1/2017"}, {"body": "tweichselbaumer nabokovef issue nt appear related original issue one create separate issue track problem", "d": "1/2017"}, {"body": "research think found problem using angular universal module currently compartible newer versions angular work workaround read somewhere want merge angular universal main angular repository hopefully solve problems", "d": "1/2017"}, {"body": "mechanism tell router reevaluate current location would welcome", "d": "1/2017"}, {"body": "matsko seeing error animation applied ngif occurs chrome inconsistent quite difficult track", "d": "1/2017"}, {"body": "matsko provided minimal repro", "d": "1/2017"}, {"body": "news", "d": "1/2017"}, {"body": "dzmitryshylovich titlemetadata depended route resolved data ex open article page titlemetadata reflect article titledata static available appropriate component gets data resolvers", "d": "1/2017"}, {"body": "artaommahe impl also work resolved data", "d": "1/2017"}, {"body": "word appending end observable becoming common practice would nice support", "d": "1/2017"}, {"body": "scobee u fix", "d": "1/2017"}, {"body": "would love see implemented many places application dropdown values loaded rest service dynamically represented complex objects without way track forced instead force singleton instances clientside write custom input object assigns value primitive later search proper instance", "d": "1/2017"}, {"body": "temporary solution written following component allows user pass label option field track options emptylabel getlabel option providers provide ngvalueaccessor useexisting forwardref gt trackableselectcomponent multi true export class trackableselectcomponent extends baseformcontrolcomponent used like", "d": "1/2017"}, {"body": "development looks like blocked rxjs support zonejs something edit good read", "d": "1/2017"}, {"body": "clear right", "d": "1/2017"}, {"body": "nt trigger creation numbervalueaccessor blocked", "d": "1/2017"}, {"body": "pkozlowskiopensource closed think", "d": "1/2017"}, {"body": "seeing huge regression coming jit went barely noticable lag js downloaded reason behind", "d": "1/2017"}, {"body": "vsavkin option method route need check current url would cool mode check like complex example route ts route url routerisactive null null type intersection true routerisactive null null type intersection true routerisactive null type intersection true", "d": "1/2017"}, {"body": "exactly issue form new object problem user types anything validation kicks however edit mode using form inserting value db form init fields asyncvalidators stuck pending status drilling bit found something odd runs sync first define asyncvalidator updatevalueandvalidity runs synchronous validator async control also receive asyncvalidator add validation using asyncvalidator gets assigned initial validation gets stuck pending status even though return validation valid", "d": "1/2017"}, {"body": "pkozlowskiopensource closed", "d": "1/2017"}, {"body": "vicb come across issue past", "d": "1/2017"}, {"body": "reynardmh shares lot code aot compiler part crawls source files heavily refactored past weeks guess must fixed sorry seeing message earlier otoh probably want work code first requires deep knowledge typescript internals want work issues get familiar code community help label good start digging code base could please issue reproducible thanks", "d": "1/2017"}, {"body": "still get error upgrading angular updated reproducible repo", "d": "1/2017"}, {"body": "callback name need work idea hard coded angular", "d": "1/2017"}, {"body": "still issue made variety updates aot animations recent wave commits", "d": "1/2017"}, {"body": "fixed", "d": "1/2017"}, {"body": "mhevery tbosch chuckjaz microsofttypescript master really important implementing mixin pattern use case activerecord library like ngresource full type information", "d": "1/2017"}, {"body": "shlomiassaf uncertain issue related mixins go detail", "d": "1/2017"}, {"body": "misinterpreted proposal wont help mixins functions supported compiler tsickle bad anyway effects mixin want create provider aot wants value", "d": "1/2017"}, {"body": "btshp u solve", "d": "1/2017"}, {"body": "nosideeffects wo nt cause infinite loop", "d": "1/2017"}, {"body": "sure would cause infinite loop explain worth looks like dom correct value visual checkbox state invalid", "d": "1/2017"}, {"body": "know dom events supported directly without host hostlistener", "d": "1/2017"}, {"body": "bigfax mean supported directly", "d": "1/2017"}, {"body": "mean ca nt click supported scroll need use angular event bindings respond dom event list dom event supported click default specifc list dom event supported angular", "d": "1/2017"}, {"body": "bigfax listens click events element added also listens element add add wo nt called window scrolls content div scrolles perhaps want", "d": "1/2017"}, {"body": "wanted use scroll element window test good scrollbar element thinking sorry thank", "d": "1/2017"}, {"body": "problem still nt work properly templates", "d": "1/2017"}, {"body": "problem looks like router nt resolve urls either nt path abstract paths component category try link one level still getting instead iven tried category component result", "d": "1/2017"}, {"body": "encountered issue spent half day found wrong problem ngoninit lifecycle method put service injects upgraded services factory upgraded service called sooner bootstrapmodule upgradebootstrap injector available reopen issue report new bug want", "d": "1/2017"}, {"body": "well another scenario injector undefined inject upgraded service eg rootscope downgraded service example myservice inject myservice run block myservice constructed injector still undefined", "d": "1/2017"}, {"body": "feel needs reopened", "d": "1/2017"}, {"body": "another case http interceptors http used early phase like angular translate downloading translation files myservice also instantiated injector undefined", "d": "1/2017"}, {"body": "well since nobody angular team interested closed issues resubmitted suggested", "d": "1/2017"}, {"body": "dzmitryshylovich error nt actually work either component appear happened updated app see plunkr linked using router lazy loaded page still never appears", "d": "1/2017"}, {"body": "slubowsky yeah working", "d": "1/2017"}, {"body": "denysyefimenko quick repro add", "d": "1/2017"}, {"body": "closed", "d": "1/2017"}, {"body": "vicb anyone taken take", "d": "1/2017"}, {"body": "yes u", "d": "1/2017"}, {"body": "thanks ask help stuck", "d": "1/2017"}, {"body": "one fixed", "d": "1/2017"}, {"body": "confirm issue version router update gt problem appears", "d": "1/2017"}, {"body": "think critical issue cause problems every nonstateless services like ngrxstore effecs translate etc ofc cause memory leaks", "d": "1/2017"}, {"body": "tried tweeting members team response believe bug still resolved pretty much show stopper us upgrade beyond angular people using lazy loading", "d": "1/2017"}, {"body": "update discussion design review today think workable solution solve verifying semantics right land pr", "d": "1/2017"}, {"body": "anyone experienced without lazy loading symptoms reported seems though everyone lazy loading", "d": "1/2017"}, {"body": "lreading yes accidentally added line effectsmodulerun appeffects run ngrx effects twice app module ngmodule imports", "d": "1/2017"}, {"body": "trying use service share data needed multiple components set break service constructor breaks every time accessed documetation says services singletons instantiated wrong store appwide data service", "d": "1/2017"}, {"body": "design doc issue able get would someone community like pick cc dzmitryshylovich would happy provide technical support", "d": "1/2017"}, {"body": "mhevery take look", "d": "1/2017"}, {"body": "issue lazy loaded module version like michalboska suggested resolve one problem nt know find version numbers packaged module think override version number fire action twice loading lazy route load effect root module either action fire every time go back lazy loaded route add actions dispatched although effects module nothing special import rxjsaddobservableof import rxjsaddoperatorcatch import rxjsaddoperatormap import rxjsaddoperatorswitchmap import injectable angularcore import actions effect ngrxeffects import store ngrxstore import observable rxjsobservable import apiservice coresharedservicesapi import logsactions coreactionslogs injectable export class logeffects constructor private actions actions private api apiservice private logactions logsactions effect fetchlogs thisactions oftype logsactionsfetchlivelogs switchmap gt consoleinfo effect logs return thisapifetchlogs map res gt thislogactionsfetchlogsfulfilled res catch error gt observableof thislogactionsfetchlogsfailed error", "d": "1/2017"}, {"body": "mxchange yup describing issue everyone yeah router different numeration rest angular components namely instead changed router heavily half way increase major version comply semver soon problem fixed released specially avoid types confusion stick old depenencies example", "d": "1/2017"}, {"body": "anyone find temporary workaround issue goal load component named outlets lazily", "d": "1/2017"}, {"body": "proxy route component simply typescript import component angularcore component selector bproxyroute template export class proxyroutecomponent", "d": "1/2017"}, {"body": "unwrittenfun yeah works however brings side effect extra level component tree bring problems use cases", "d": "1/2017"}, {"body": "know since commit vsavkin remember added componentless route named outlet set guard possible lazy load way maybe router designed something eventually resolved sometime", "d": "1/2017"}, {"body": "could please reopen ionic repo cc mlynch", "d": "1/2017"}, {"body": "ryanlangton pls add issue title related upgradeadapter", "d": "1/2017"}, {"body": "issue use workaround unique ids moizshabbir thanks without workaround could nt get angular update controls tried various lifecycle hooks updatevalueandvalidity direct dom access etc nt angular remove nonused form controls nt cause duplication errors also nt error say control found one rather saying attached", "d": "1/2017"}, {"body": "liongoncalves u solve issue code", "d": "1/2017"}, {"body": "solved issue deleted repo since test mark issue closed want pretty sure bug still", "d": "1/2017"}, {"body": "u ca nt reproduce ca nt anything", "d": "1/2017"}, {"body": "ok think problem router module system created small test see maybe something wrong maybe style guide right see example created core module topnav component tryng use topnav home module well ca nt use unless import module think goes style guide angulario page", "d": "1/2017"}, {"body": "modules inherit access components directives pipes declared modules appmodule imports irrelevant homemodule vice versa homemodulecan use topnavcomponent homemodule must import coremodule", "d": "1/2017"}, {"body": "tbosch using files track files symbols exist physically used webpack router loader lazy loading change literal strings webpack compatible dynamic import chunks module exists reexport symbols eg indexts file makes hard reference need search file hosting symbol ngmodule ts compilation ca nt search use track symbol subject change", "d": "1/2017"}, {"body": "facing problem updates regarding bug", "d": "1/2017"}, {"body": "exedriver u add small reproduction plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich look comment mine tamasfoldi already added plunkr", "d": "1/2017"}, {"body": "exedriver provided plunker big contains lot unnecessary componentsservice makes debugging much complicated probably issue still open", "d": "1/2017"}, {"body": "first plunkr ever still new plunkr see appts lazy loading external module extmodule clicking extmodule link extmodule extcomponent defines seconed named routeroutlet link extchildcomponent click extchildcomponent link get error mentioned error find outlet extoutlet load extchildcomponent hope help debugging", "d": "1/2017"}, {"body": "looking plunker hit situation seems like trying resolve outlet toplevel component move router outlet displays however feels like way accomplish stepping named outlet registers routeroutletmap outlet however router navigating seems like looks toplevel outlet map contains primary outlet modified plunker adds extoutlet outlet root outlet map router hacky workaround expected behavior", "d": "1/2017"}, {"body": "fixed", "d": "1/2017"}, {"body": "tbosch using providers good enough however obvious complicated could much better approach would provide filter function allow filter components want select fully customizable query", "d": "1/2017"}, {"body": "hey believe greatly improved also released please reopen still problematic", "d": "1/2017"}, {"body": "pkozlowskiopensource closed", "d": "1/2017"}, {"body": "trying final release throws error output", "d": "1/2017"}, {"body": "uses offlinecompiler performs static analysis code aotcompatible throw error", "d": "1/2017"}, {"body": "looking biggest challenge find format serialize icu messages xliff knowing format compatible translation tools research documented feedback welcome", "d": "1/2017"}, {"body": "wow took long time find google still happening using ngtoolswebpack npm package aot even care constructor arguments", "d": "1/2017"}, {"body": "case nt general provided type argument type instance created injector bug tracking nonreified interfaces handled correctly collector static reflector", "d": "1/2017"}, {"body": "provider alias also depend produces error", "d": "1/2017"}, {"body": "well fails aot compiler angular cli browser window interface export function getwindow return window ngmodule declarations appcomponent simpleroutecomponent imports browsermodule formsmodule httpmodule approutingmodule providers provide window usefactory getwindow bootstrap appcomponent export class appmodule constructor inject window w window consolelog w error error error encountered resolving symbol values statically could resolve type window position original ts file resolving symbol appmodule usersmeligycodegithubmeligyroutingangularclisrcappappmodulets details workaround using type constructor create dummy class type trick compiler like injectable export class windowwrapper extends window export function getwindow return window ngmodule declarations appcomponent simpleroutecomponent imports browsermodule formsmodule httpmodule approutingmodule providers provide windowwrapper usefactory getwindow bootstrap appcomponent export class appmodule constructor w windowwrapper consolelog w", "d": "1/2017"}, {"body": "still happening trying inject angular token ts import inject injectable angularcore import document angularplatformbrowser injectable export class myservice constructor inject document doc document lt fails ngc", "d": "1/2017"}, {"body": "also facing attempting inject window major pain realworld apps", "d": "1/2017"}, {"body": "hi got issue today think related one updated current project angular upgrading bunch dependencies like rxjs got tests failing kind error message turns caused date pipe using trigger tests import never got issue sure happening upgrading root cause looks lot related issue anyone issue guess nothing really patch released right thanks lot", "d": "1/2017"}, {"body": "morriq u pls reword title issue clear easier find", "d": "1/2017"}, {"body": "way fallbackcontent slot found workaround quite ugly", "d": "1/2017"}, {"body": "yet", "d": "1/2017"}, {"body": "isaacplmann plunkr nt seem work complete could use account summary component nested route really want shell component lazy loaded module important breadcrumbs initialising services really appreciate thank", "d": "1/2017"}, {"body": "experiencing issues", "d": "1/2017"}, {"body": "already possible provide implementation url serializer job transform url string url tree strucutre router works see starting point default implementation", "d": "1/2017"}, {"body": "close", "d": "1/2017"}, {"body": "quite time since anything new came going close issue", "d": "1/2017"}, {"body": "ibqn using text united keeps internal dictionaryglossary translations changed regenerate xmb file upload text united automatically match previous translations new strings translated need manually parse merge translations done download xmb file manually create xtb file string replacing stuff could use xlf causing issues markup html like bolditalic text united xmb combination worked us", "d": "1/2017"}, {"body": "pkozlowskiopensource close", "d": "1/2017"}, {"body": "lifesaver thing happening using visual code", "d": "1/2017"}, {"body": "also still missing something principal want load systemjs loader equivalently modules jit translated ngc aot means code templates compiler browser references angular src folders compiled ngfactoryts files generated ngc files files understand differences source code able run app jit aot mode like code loader injected di constructor relates systemjsngmoduleloader class instantiated sigleton provider app init load file machinerymodulejs jit machinerymodulengfactoryjs aot", "d": "1/2017"}, {"body": "problem actually directive uses injection virtual nodes attributes retrieved use tag case docs fixed part pending pr", "d": "1/2017"}, {"body": "using generates error", "d": "1/2017"}, {"body": "amaschas reproduce plunkr file new issue", "d": "1/2017"}, {"body": "could u add small repro u trying accomplish", "d": "1/2017"}, {"body": "plans fix", "d": "1/2017"}, {"body": "hey juliemr update something test written real alexzuza suggestion works btw", "d": "1/2017"}, {"body": "found issue frustating thanks discussion weirdest thing found nt seem anything tests ideas might get fixed", "d": "1/2017"}, {"body": "cexbrayat still issue could add small demo plunkr", "d": "1/2017"}, {"body": "thank looking still issue nt know setup tests plunkr repo repro angularcli app last commit removes test needed run error add set tests fine", "d": "1/2017"}, {"body": "problem couldnt fix application running fine without errors created app angular cli generate component use app component working import routertestingmodule declare component app spec create module export component import module spec workaround layoutmodulets appcomponentspects result hrome windows appcomponent create app failed failed base href set please provide value appbasehref token add base element document error base href set please provide value appbasehref token add base element document change appcomponentspects declaring components directly working appcomponentspects", "d": "1/2017"}, {"body": "configuration run test without including module runs fine tried include module", "d": "1/2017"}, {"body": "wardbell problem case users placing orders web api angular app tries navigate confirmation page instead app freezes happens desktop mobile devices due problem connection issues problem addressed asap meanwhile tried trycatch navigating maybe catch error reload application private redirectonerror error isdevmode return something different mind could share us", "d": "1/2017"}, {"body": "hi new plnk contains necessary information access admin click button go route error console guard provided adminmodule used adminmodule", "d": "1/2017"}, {"body": "also updated first post", "d": "1/2017"}, {"body": "also affects child used outside lazy loaded module", "d": "1/2017"}, {"body": "marvinscharle pls provide small demo plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich go created simple setup similar use internally today component provides method render declared however loaded trying render via thrown usecases approach modals shall rendered root component notifications etc way thank linked fixes", "d": "1/2017"}, {"body": "marvinscharle original issue fixed pls check issue entry components next release file new bug nt fixed", "d": "1/2017"}, {"body": "still problem", "d": "1/2017"}, {"body": "nene yes", "d": "1/2017"}, {"body": "address anyone months still happening", "d": "1/2017"}, {"body": "dupe", "d": "1/2017"}, {"body": "nt think angular team owes us anything actually agree sentiment last year angularconnect london angular team hyping aot claims quite bit making promises improvements documentation saner versioning policy yet aot released wild yet barely documented need external community projects companies like rangle figure works releasing stuff ready adequately documented", "d": "1/2017"}, {"body": "could please specify find missing docs", "d": "1/2017"}, {"body": "considerations issue brings quite lot problems inconsistency framework philosophy everything part tight observables", "d": "1/2017"}, {"body": "pleerock", "d": "1/2017"}, {"body": "vicb shed light one go creating component libraries specific styles", "d": "1/2017"}, {"body": "angular nt know anything sass need precompile css good examples component libs", "d": "1/2017"}, {"body": "angular typescript support ngc seems still play well flag tho", "d": "1/2017"}, {"body": "typescript support languageservice", "d": "1/2017"}, {"body": "oh besides supporting trouble run typescript missing something one exactly left", "d": "1/2017"}, {"body": "issue solved encountered issue", "d": "1/2017"}, {"body": "ljieyao pls provide plunkr repro", "d": "1/2017"}, {"body": "still reproduce issue previously posted plunkr sure vicb could nt run information reason could run would helpful errors browser console irrelevant appear perform post request nonexistent url using instead makes difference screenshot", "d": "1/2017"}, {"body": "set empty content type", "d": "1/2017"}, {"body": "default content type header applied automatically applicationjson case default header applied create http defaultoptions angular http needs generate content type boundary payload formdata object multipart form angular wo nt generate content type content type already set reason set empty content type", "d": "1/2017"}, {"body": "without works expected", "d": "1/2017"}, {"body": "dzmitryshylovich thx", "d": "1/2017"}, {"body": "hadrientoma see solution bypasses use creates manually dynamically create components", "d": "1/2017"}, {"body": "case helps anyone following still works angular project using angular cli know migrate ngdynamic import compiler angularcore import jitcompiler angularcompiler ngmodule providers provide compiler useexisting jitcompiler providecomponentoutletmodule imports commonmodule admit sure works fine love speed aot gives still allowing dynamic templates need without run fine application rightfully throws", "d": "1/2017"}, {"body": "avbentem solve issue however adds vendor bundle one reasons course use aot avoid include compiler way least include compiler module level added size chunk instead vendor", "d": "1/2017"}, {"body": "nope would need benchpress test", "d": "1/2017"}, {"body": "also need feature always use toolkits applications test play styling ui components separate app using angular components make whole toolkit setup useless use toolkit pages want add components like button datepicker test work etc possible angular loose functionality templating toolkit please consider changing bootstrap page things tbosch", "d": "1/2017"}, {"body": "possible consider web sites want use tbosch", "d": "1/2017"}, {"body": "awesome used browser dom document object implement conditional bootstrapping hope would save lot time developers", "d": "1/2017"}, {"body": "think might resolved tried select seems working", "d": "1/2017"}, {"body": "rolandjitsu nt think pls provide demo plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich true used select field seemed render properly submitted form noticed actually selected one option", "d": "1/2017"}, {"body": "would love feature implemented certainly figure get child component rerender view parent property changed ie property inside complex bound input object docs explain well question showing mean", "d": "1/2017"}, {"body": "question seems describe similar problem even write service provides emitter notify child deep property changed view still update ngif appears ignored", "d": "1/2017"}, {"body": "rmcsharry certainly figure get child component rerender view parent property changed use example link", "d": "1/2017"}, {"body": "dzmitryshylovich thanks removing code starting works child automatically updated without anything extra nt get updated question answer loop emedded properties updating parent child firing ngif one thought possible per feature request nt get lol", "d": "1/2017"}, {"body": "working windows using ng ts tsc v using qucikstart seed repo", "d": "1/2017"}, {"body": "markperrybv possible", "d": "1/2017"}, {"body": "issue mac ts ng", "d": "1/2017"}, {"body": "issue mac ts ng", "d": "1/2017"}, {"body": "sckorrapati dimpu probably ng", "d": "1/2017"}, {"body": "angular nt support ts latest supported version", "d": "1/2017"}, {"body": "tbosch appears fixed class ngondestroy hook triggers eager instantiation useclass keeps lazy instantiation type provider uses eager instantiation case ca nt reproduce providers instantiated eagerly expected investigate ngondestroy method called non type providers yes called called factory providers", "d": "1/2017"}, {"body": "veliancreate pls add small demo plunkr", "d": "1/2017"}, {"body": "changed", "d": "1/2017"}, {"body": "awesome feature thanks landing quick write wanted share w group", "d": "1/2017"}, {"body": "pulakb checked code removing warning also present webpacktestjs", "d": "1/2017"}, {"body": "seeing upgrading webpack warnings webpack code posted fixes rather config", "d": "1/2017"}, {"body": "happening anyway", "d": "1/2017"}, {"body": "hackfix made memory usage jump using also seems trigger watchers often might reason additional memory consumption really would like get rid another workaround comment suggests add webpack config like insights issue changing anything else", "d": "1/2017"}, {"body": "angular nt get warning anymore anybody confirm webpack config", "d": "1/2017"}, {"body": "cebor warning angular webpack", "d": "1/2017"}, {"body": "girokon loader use typescript tsc version", "d": "1/2017"}, {"body": "cebor", "d": "1/2017"}, {"body": "hmm use compiling ts files", "d": "1/2017"}, {"body": "keep mind using contextreplacementplugin workaround causes webpack watch file folder provide changes ended triggering rebuilds git folder changes seems work use folder nt exist avoid", "d": "1/2017"}, {"body": "vicb closed mlaval pr merged right", "d": "1/2017"}, {"body": "sure", "d": "1/2017"}, {"body": "guys progress also faced issue upgrade module", "d": "1/2017"}, {"body": "hello guys maybe know problem problem webpack plugin uglifyjs doe nt support keywords support support progress delopment mean interpreted like angularjs aot main file generated like look file find code line like follows file like file feature check let get point webpack using project optimize codes webpack using version know uglifyjs master branch still support harmony branch support check uglifyjs github issue follows solve problem way follow way use option webpack use uglifyjsplugin bundle aot way jit angular code support like important updated think support ecma statement webpack explain check link tested latest versions aot working beautifully uglifyjs working without additional options babelloader nt needed upgrade webpack think angularjs documentation dealing complete aot hope understand post good english", "d": "1/2017"}, {"body": "hi achive worked angular aot uglify webpack", "d": "1/2017"}, {"body": "guess also nt angular js", "d": "1/2017"}, {"body": "angular repo", "d": "1/2017"}, {"body": "issue webpack project using angularcli angular ngtoolswebpack removing indeed work however styles messed afterwards obviously today tried upgrading angular ngtoolswebpack keeping everything worked", "d": "1/2017"}, {"body": "wondering best workaround currently guys recommend use aot official release supports regards sean angular kitchen sink source", "d": "1/2017"}, {"body": "also getting exactly issue using external component really solution", "d": "1/2017"}, {"body": "joebri nope ca nt use default exports", "d": "1/2017"}, {"body": "hi months ago robwormald wrote plan support since nt find anything tangible take another month year decade chance would get supported upcoming version", "d": "1/2017"}, {"body": "sorry priority would accept pr thu jan peter grman notifications githubcom wrote hi months ago robwormald wrote comment plan support chance would get supported upcoming version receiving assigned reply email directly view github mute thread", "d": "1/2017"}, {"body": "think fixed see localeid", "d": "1/2017"}, {"body": "feature injection auto detection locale instead enus", "d": "1/2017"}, {"body": "laskoviymishka right sorry anyway quite easy get locale browser set locale bootstrap app", "d": "1/2017"}, {"body": "meriturva well first sight yes need keep mind app could executed server side straight forward locale detection mechanism browser agnostic works even safari worst browser far one thing locale id format exact locale could grabbed standard vanilla js ways like return locale instead except local machine", "d": "1/2017"}, {"body": "believe actually valid issue could reopened use dynamically build component parent component styles added dynamic one since ng attributes added update actually worked long commenting need add dynamic component metadata would component adds ng attributes", "d": "1/2017"}, {"body": "barbatus solve issue", "d": "1/2017"}, {"body": "dzmitryshylovich could work around status issue clear states fixed yet either fix needed docs update note extendable", "d": "1/2017"}, {"body": "barbatus could u add small repro plunkr", "d": "1/2017"}, {"body": "dzmitryshylovich ok one seems broken new one upd correct link", "d": "1/2017"}, {"body": "update issue temporary solution experience issue prod handling redirect url desktop site", "d": "1/2017"}, {"body": "yes also wonder update", "d": "1/2017"}, {"body": "kemsky kemsky commented sep actually seems like best approach imo first realized microsoft hand angular project saw much boilerplate gets implemented projects use reactiveforms things thrilled microsoft influence one area rejecting msboilerplating assuming hand correct way things right way throttling engineer productivity much without much benefit mention adding coupling system right way nt make application blows wrapped reactiveforms benefits really get seems like validation etc better done using visitor pattern decorator mediator service something else anyway said throw ugly baby bathwater could gives us insight caveats encountered noreactiveformsboilerplate bandwagon much appreciated", "d": "1/2017"}, {"body": "solve directive directive named canbedisabled poperty blocked example write setter blocked set nativelementdisabled property code example ts directive selector canbedisabled export class canbedisabled input set blocked blocked boolean thiselnativeelementdisabled blocked", "d": "1/2017"}, {"body": "tl dr subscribe events first solution following nt works really need operator like pairwise group let see found one new rx instead buffer group related event objects use objects contain redirect info", "d": "1/2017"}, {"body": "use need buffer events filter use", "d": "1/2017"}, {"body": "following recommendation working code ts import component angularcore import oninit angularcore import router angularrouter import localstorageservice component selector approot template export class appcomponent implements oninit constructor private router router private storage localstorageservice ngoninit thisrouterevents filter e gt econstructorname routesrecognized pairwise subscribe e gt thisstorageset referrer e urlafterredirects thank much", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thanks fixed code nt know good edit previous post indicate problems think easy follow get final version recommendations", "d": "1/2017"}, {"body": "nt sad need localstorage fetch last route component guess pretty simple use case", "d": "1/2017"}, {"body": "first approach using local storage realize persisting value nt necessary convert service", "d": "1/2017"}, {"body": "hi issue trying use aot setting data property routermodule trying compile getchildroutesdata compiler needs iroutedatacustomized object instead using new routedatacustomized reason need use way thank import iroutedatacustomized coreservicesroutingroutedatacustomized import aboutmodule aboutmodule import aboutcomponent aboutcomponent import ngmodule component angularcore import routermodule route angularrouter export function getchildroutesdata since new object instances throws exception gt see return new routedatacustomized infocircle string lt buildtype gt prod use toroutedata returns object using return objectassign return new routedatacustomized infocircle lt buildtype gt tostring prod toroutedata aot fails using line throwing error encountered resolving symbol values statically calling function routedatacustomized use next result return icon infocircle title ismenuitem lt buildtype gt tostring prod export function getchildroutes route return path component aboutcomponent data new routedatacustomized infocircle string lt buildtype gt prod toroutedata data getchildroutesdata ngmodule imports routermoduleforchild getchildroutes exports routermodule export class aboutroutingmodule", "d": "1/2017"}, {"body": "jordivila aot supports limited subset javascript evaluate preliminary documentation subset example create instance compile time", "d": "1/2017"}, {"body": "dgaeta still issue could u pls update repro", "d": "1/2017"}, {"body": "vicb feedback months think closed", "d": "1/2017"}, {"body": "pkozlowskiopensource close", "d": "1/2017"}, {"body": "followed pr superceded another pr replaced enhanced prs last ones merged mean compilation strict null checks works ist available angular", "d": "1/2017"}, {"body": "checked nt head still planning allow strictnullchecks angular nt know backporting", "d": "1/2017"}, {"body": "updates still working cli", "d": "1/2017"}, {"body": "somebody add small repro plunkr", "d": "1/2017"}, {"body": "important app going production updates issue", "d": "1/2017"}, {"body": "nt issues feature modules lazy loading probably cli issue without repro acctionable", "d": "1/2017"}, {"body": "angular cli specific never used cli issues created quick example run notice navigate back uses approach mentioned initial post build output production bundle directory navigate directory start local server open url open devtools click fail load shows error rcreate function", "d": "1/2017"}, {"body": "samverschueren rollup nt support lazy loading", "d": "1/2017"}, {"body": "dzmitryshylovich pinged wrong sam yes know issue nt lazy loading lazy loading happens use string literal value property issue passing function returns module property example approutingts example js import routes routermodule preloadallmodules angularrouter import homecomponent homehomecomponent import contactmodule contactcontactmodule export function loadcontactmodule return contactmodule export const routes routes path component homecomponent pathmatch full path contact loadchildren loadcontactmodule export const routing routermoduleforroot routes everything one bundle main benefit every route inside part application starts easily change yes rollup nt work lazy loading like said beginning", "d": "1/2017"}, {"body": "pinged wrong sam sorry github nt suggest name reason", "d": "1/2017"}, {"body": "using loadchildren way follow ngmodule encapsulation conception encapsulates routes without using loadchildren huge mess different conventions work aot box", "d": "1/2017"}, {"body": "need return instead compile runtime compiler available aot example pr merged need cast factory open feature request cli repo automatically convert compilation build tools need manually", "d": "1/2017"}, {"body": "mgol alexsapps see methods like part switching upgrade module approach upgrade adapter way aot support hybrid approach making built providers like available angular components dependencies see workaround achieve sending built services like angular context", "d": "1/2017"}, {"body": "shnmkhk access services different ways may available lazyloaded modules since get different services context angularelement documentbody injector get yourservicename replace documentbody bootstrapped app", "d": "1/2017"}, {"body": "guojenman thanks reply understand access user defined services accessing builtin services like try access says undefined", "d": "1/2017"}, {"body": "upgrade adapter approach simple make angular built services available angular", "d": "1/2017"}, {"body": "shnmkhk mispelled rootscope wrong case injector get functions corrected version assumes bootstrapped documentbody", "d": "1/2017"}, {"body": "need least option compile code ie replace type parameters example pretty simple could generic table generic list automatically get properly typed etc actually example already implemented works jit mode", "d": "1/2017"}, {"body": "kemsky currently apart work scheduled available beta form end month", "d": "1/2017"}, {"body": "working one provide plunker working problem", "d": "1/2017"}, {"body": "working need add class name appcomponent tue jan pm ashwinirajput notifications githubcom wrote working one provide plunker working problem receiving commented reply email directly view github mute thread", "d": "1/2017"}, {"body": "bit misleading conversation work work work without concrete code could reviewed", "d": "1/2017"}, {"body": "see lapis think u r aware ionic beta lot changes going daily lot changes might work day may deprecate hope understood tue jan pm milo\u0161 lapi\u0161 notifications githubcom wrote bit misleading conversation work work work without concrete code could reviewed receiving commented reply email directly view github mute thread", "d": "1/2017"}, {"body": "abhiramkadiri provide plunker totly confusing due update", "d": "1/2017"}, {"body": "ashwinirajput nt active plunker right explain right explanation error componentfactoryresolver component factory found mycomponent creating page say myclass class generated like export myclasspage declare myclasspage class two files appcomponentts appmodulets important declare appcomponentts like import myclasspage pagesmyclasspagemyclasspage declare appmodulets like import myclasspage pagesmyclasspagemyclasspage remeber appmodulets also declare another place ngmodule declarations myapp myclasspage aboutpage itemdetailspage listpage addingnewionicpage navgridpage quizpage mappagepage gallerypage glocationpage mappage photodisplaypage imports ionicmoduleforroot myapp bootstrap ionicapp entrycomponents myapp myclasspage aboutpage itemdetailspage listpage addingnewionicpage navgridpage quizpage mappagepage gallerypage glocationpage mappage photodisplaypage case provider declared providers connectivityservice locationtracker say thats error resolved hope explanation helps happy coding", "d": "1/2017"}, {"body": "exactly supposed keeping basic logic ngmodules officially documented problem would exist may clear beginning given accurate description code nothing beta version ionic angular concept changed bit rc phase ngmodules introduced small comment entrycomponents section necessary put components loaded type ie navigation controller components loaded declaratively referenced another component template defined routes nt need included", "d": "1/2017"}, {"body": "update latest error fixed", "d": "1/2017"}, {"body": "problem components components different module added module still giving error edit trying implement solution code passing array components fixed passing single component nt know error stack angular accurate issue place tells issue place", "d": "1/2017"}, {"body": "means sentence components different module added module mean attributeformcomponent attributesettingscomponent attributetimelinecomponent declared different module redeclare custommodule instead imports module declared custommodule read official doc ngmodules", "d": "1/2017"}, {"body": "mlcmlapis declared components saw posts saying need declare trying clear case using also declared thanks comment", "d": "1/2017"}, {"body": "want wait render view data wrap everything ngif trigger data arrives least temporary workaround", "d": "1/2017"}, {"body": "also getting issue injecting rootscope filter service using upgradeadaater aot though installed modules aot compatibility getting read property get null rootscope also getting provider filter", "d": "1/2017"}, {"body": "alexeagle vikerman updates", "d": "1/2017"}, {"body": "design doc started ready share yet high priority still months", "d": "1/2017"}, {"body": "nt like ask eta issue opened since august really problem able use auxiliary routes within lazy loaded module chance someone looks", "d": "1/2017"}, {"body": "anybody got workaround issue adamreisnz mentioned using routing module pattern well loading module synchronously via definitely work expected", "d": "1/2017"}, {"body": "arnaudoff provide sample code plunker", "d": "1/2017"}, {"body": "works appcomponentts use pairwise operator catch previous router event typescript export class appcomponent implements oninit ondestroy private routescrollpositions url string number private subscriptions subscription constructor private router router ngoninit thissubscriptionspush save restore scroll position route change thisroutereventspairwise subscribe prevrouteevent currrouteevent gt prevrouteevent instanceof navigationend amp amp currrouteevent instanceof navigationstart thisroutescrollpositions prevrouteeventurl windowpageyoffset currrouteevent instanceof navigationend windowscrollto thisroutescrollpositions currrouteeventurl ngondestroy thissubscriptionsforeach subscription gt subscriptionunsubscribe", "d": "1/2017"}, {"body": "yahasa error piecewise function exist would able update solution within plunkr original question", "d": "1/2017"}, {"body": "import pairwise operator though errors without angularcli project toh plankr made changes skip parameters url also windowscrollto moved settimeout case works without appappcomponentts changed way scrolls whole window need scroll parts replace", "d": "1/2017"}, {"body": "legend thanks", "d": "1/2017"}, {"body": "using typings cli resolve issue using angular seems changed way deals typings dependencies instead relying typings definitions typings cli done npm file longer need install npm module instead install npm package make sure tsconfigjson file types property defined tsconfigjson file looks like may modify path addremove depending setup", "d": "1/2017"}, {"body": "hey bogusred also running issue configured typeroots match setup getting error find type definition file corejs suggestions update missing lib dom compileroptions compilation successful noticed nt need types set angular quickstart tutorial nt set property either", "d": "1/2017"}, {"body": "continues severe problem project needing ugly workarounds reported august still fix sight kara mind taking look fiddle clearly shows issue", "d": "1/2017"}, {"body": "kara could clarify pls update target controls asynchronously updated synchronously resolve issue", "d": "1/2017"}, {"body": "dzmitryshylovich thanks answer looks like got still several questions probably nt understand implemented nt see code forces second change detection see following calling chain also see note comment probably original issue nt play well unidirectinal dataflow maybe example use property instead understand conception unidirectional dataflow somekind output property", "d": "1/2017"}, {"body": "closing issue think fair say filesize framework renders view inside browser wo nt ever become small dump entire application template code build played around webpack angularrouter split build chunks works surprisingly good anyone interested barebone started looks like terminal end always deliver applicationbuildjs template proper chunk automatically loaded router hits one paths thanks way webpack generates chunks even preload initial template like", "d": "1/2017"}, {"body": "compilercli", "d": "1/2017"}, {"body": "npm install open cmd administrator mode test", "d": "1/2017"}, {"body": "hello issue angular operative system ubuntu nodejs packagejson name mytest version description simple starter mytest project dependencies angularcommon angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs ieshim reflectmetadata rxjs zonejs devdependencies angularcompiler angularcompilercli angularplatformserver typescorejs typesjasmine typesnode typesseleniumwebdriver awesometypescriptloader codelyzer conventionalchangelogcli cssloader del extracttextwebpackplugin fileloader glob gulp git gulppug gulpsass gulpsourcemaps gulptypescript htmlloader htmlwebpackplugin jasminecore karma karmajasmine karmamochareporter karmaphantomjslauncher karmasourcemaploader karmawebpack nodesass npmcheckupdates nullloader phantomjsprebuilt postcsscssnext postcssloader protractor pughtmlloader rawloader rimraf runsequence sassloader shelljs styleloader tostringloader tsloader tslint tslintloader tslintstylish typescript undertakerregistry urlloader webpack webpackdevserver webpackmerge webpacknodeexternals", "d": "1/2017"}, {"body": "jaonhe support limited source evaluation statically produce metadata support call macro functions pretty simplistic support simple return statement contain expressions otherwise support working improving documentation around well improving error messages first step change function able evaluated metadata collector unfortunately help one types known static reflector complain call resolve style specifying animations work jit need reorganized work aot", "d": "1/2017"}, {"body": "ran problem unit testing took quite realize angular actually using value provided switching works nt intuitive", "d": "1/2017"}, {"body": "still unfixed", "d": "1/2017"}, {"body": "related", "d": "1/2017"}, {"body": "ran issue testing dialog component trying strategies writing simple test component test module correct worked use test module", "d": "1/2017"}, {"body": "lozord could provide code keep getting error provider mddialogref", "d": "1/2017"}, {"body": "something like bottom test file testing ts component selector dialogtest template open dialog class dialogtest dialogref mddialogrefnull constructor public dialog mddialog tests call directly opendialog thisdialogref thisdialogopen dialog returning observable useful testing see close result return thisdialogrefafterclosed ngmodule declarations dialogtest imports dialogmodule browsermodule mddialogmodule entrycomponents dialog lt important exports dialogtest export class dialogtestmodule test using component fixture hope helps", "d": "1/2017"}, {"body": "thanks sharing could share testing spec nt mind mine close enough minus fact testing dialog nt open button javascript describe confirmdialogcomponent gt let viewcontainerfixture componentfixture let overlaycontainerelement htmlelement let dialog mddialog beforeeach async gt testbedconfiguretestingmodule imports mddialogmoduleforroot dialogtestmodule really using yet beforeeach inject mddialog mddialog gt dialog beforeeach gt viewcontainerfixture testbedcreatecomponent confirmdialogcomponent viewcontainerfixturedetectchanges component fixturecomponentinstance fixturedetectchanges render dialog correctly gt ngmodule imports mddialogmodule declarations confirmdialogcomponent exports confirmdialogcomponent entrycomponents confirmdialogcomponent class dialogtestmodule", "d": "1/2017"}, {"body": "still getting mddialogref error also remember since dialog overlay use strategy used wo nt contain custom dialog query", "d": "1/2017"}, {"body": "yes reaches create component throws error provider mddialogref error di error noprovidererrorbaseerror constructor webpack lt angular", "d": "1/2017"}, {"body": "importing assume", "d": "1/2017"}, {"body": "lozord since running dialog test isolated importing mddialogmodule testbedconfiguretestingmodule think needed plus dialog shared module would pollute think edit adding imports mddialogmodule testing ngmodule fixes last error", "d": "1/2017"}, {"body": "basically works finds subsection gives errors", "d": "1/2017"}, {"body": "importing fix error worked", "d": "1/2017"}, {"body": "recommended workarounds nt worked update issue", "d": "1/2017"}, {"body": "share relevant information code plunker really helps", "d": "1/2017"}, {"body": "worked end lozord full gist using shared module pattern maybe fallxone could use ignore js extension ts seems gist support typescript", "d": "1/2017"}, {"body": "similar issue need declare component dynamically within featured module featured module loaded async route visited looks follows another sharedmodule import site wide components entrycomponents builder service able dynamically create factory entrycomponents using componentfactory works great components defined shared main module dynamiccomponent loaded dynamic module get even though obviously defined entrycomponents using component statically featuredcomponent template works trying create dynamically", "d": "1/2017"}, {"body": "featured module loaded async route visited looks follows need list entry components none lazy loaded module", "d": "1/2017"}, {"body": "dzmitryshylovich problem approach mainshared module none lazy likely contain entrycomponents creating large bundle file instead smaller bundle files featured part app", "d": "1/2017"}, {"body": "track issue", "d": "1/2017"}, {"body": "dzmitryshylovich issue seems closed yet think still issue able build entry components lazy loaded modules", "d": "1/2017"}, {"body": "working approach", "d": "1/2017"}, {"body": "overridecomponent works", "d": "1/2017"}, {"body": "also encountered issue blocking performing certain actions vsavkin plans concerning issue plans tackling near distant future thanks advance", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "minifier knew", "d": "1/2017"}, {"body": "monasteryjohn works thanks", "d": "1/2017"}, {"body": "updates nt really make sense rather simply listing dependencies module letting angular take care injecting end making shared module lists dependencies import every module whether needs dependencies", "d": "1/2017"}, {"body": "says nt want make multiple modules original problem ca nt share component across multiple modules forced make one big shared module make sure nt run problem thu jan dzmitry shylovich wrote nobody forces u create one shared module deps u crate many modules u want receiving commented reply email directly view github mute thread", "d": "1/2017"}, {"body": "dzmitryshylovich immature syntactical idiocy say create many modules want know whatever modules create go shared module real difference one cluttered significantly code problem remains understanding hard concept understand zoechi saying thread beating dead horse wrong expression like complaining wife packs every bit clothes shoes accessories owns every time goes somewhere nt ability take shit actually going use better example", "d": "1/2017"}, {"body": "legitimate feature request thread", "d": "1/2017"}, {"body": "nobody said create one shared module create many shared modules need grouping component functionality example code yes much scare course behaivior could better thinks make sense think optimization permormance remember one instance shared component create prefere less code best performance", "d": "1/2017"}, {"body": "dzmitryshylovich read comment linked nt explain justify restriction gives thought behind shared module scoping hierarchy cool talking jcmordan prefere less code best performance course question problem current method less performant desired method ability load components modules used everywhere desired behavior nt seen anyone say components loaded multiple times referenced multiple times caching seemingly undiscovered point need load cache every module component pipe directive etc every frackin time app loads still nt seen cogent argument explanation also continuing conversation hoping get fixed would nice though trying find reason madness far several major problems architecture evaluating frameworks find one willmight better project long term far still winning still nt help architecture suffering", "d": "1/2017"}, {"body": "prove file new issue benchmarks would suggest rewrite framework allow desired behavior", "d": "1/2017"}, {"body": "problem module possible include two component work trick share module possible declare component globally visible loadable due first two problems module possible use important module required change framework think done official thx", "d": "1/2017"}, {"body": "seems like community feedback going taken load unnecessary code even need one component sharedmodule", "d": "1/2017"}, {"body": "kennygitchen problem creating another shared module contains one component", "d": "1/2017"}, {"body": "lets say need component newly created module declare anothersharedmodule root module consolidate anothersharedmodule another sharedmodule large application consolidation likely create domino effect main issue discussion loading unnecessary component solved completely anothersharedmodule approach also adds complexity dependency management remember using requirejs load components need module nt load components nt need nowadays people using frameworks like webpack smart enough create codesplits bundle related javascript resource files one download help loading performance webpack likely load unnecessary components framework smart enough minimise well extend course nt manually new angular please forgive correct making sense", "d": "1/2017"}, {"body": "extreme cases create one module per one component load module programmaticaly want combination lazy loaded modules router", "d": "1/2017"}, {"body": "kennygitchen add modules want use components directives pipes module want use", "d": "1/2017"}, {"body": "extreme cases well extreme really good discussion find problem current system create shared named module feature named modules import needed dependencies time time need reorganize bit mean change point import specific dependency create new module makes sense modularise feature actually feel current implementation points good practices make reevaluate architecture time time", "d": "1/2017"}, {"body": "zoechi sure relevant add module imports means already added declarations one parent root modules mlcmlapis interesting idea workaround another workaround", "d": "1/2017"}, {"body": "kennygitchen hundred products uses different combination attributes workaround basic principe", "d": "1/2017"}, {"body": "mlcmlapis think principle declare documented angular documentation", "d": "1/2017"}, {"body": "kennygitchen nt add parent root module", "d": "1/2017"}, {"body": "funny see issue ever opinionated design decision point reconsider usage spaframeworks interesting one hand angular allows lot configuration decorators hand adds lot hidden restrictions configuration lot options miss configure point aurelia lot better job removing configuration boilerplate somehow discussion symptom unbalanced design adding lot freedom extremely restricting time less important dependent project goals design decisions", "d": "1/2017"}, {"body": "still study framework got feeling daschtour probably us askingchallenging design principles trying understand reason behind decisions compare frameworks like aurelia angular boilerplate example angular used convention configuration approach things like csshtml files eg appcomponentts automatically lookup appcomponenthtml appcomponentcss config specify needed probably removes templateurlsytleurls component", "d": "1/2017"}, {"body": "think also configure htmlloader try workaround webpack production configuration angular docs", "d": "1/2017"}, {"body": "tasosale check htmlmin loader seems lowercase attributes html files", "d": "1/2017"}, {"body": "seems trick", "d": "1/2017"}, {"body": "seems preprocess options needed option nt use plugins process user options wrote", "d": "1/2017"}, {"body": "alexkhymenko guojenman work appears bug upgrading component whereas pure component element available oninit upgraded component element available oninit sometime logged", "d": "1/2017"}, {"body": "kdorion know late ought able subscribe root app component use appwide service store attempted url login flow needs apply redirect", "d": "1/2017"}, {"body": "willshowell yes already found couple days comments thanks", "d": "1/2017"}, {"body": "danbucholtz looked hammerjs docs ca nt figure whathow pass hammergestureconfig order make vertical scrolling work also searched google luck even placed small bounty stackoverflow still nothing could share hammergestureconfig made vertical scrolling work tried seeing example providing appmodule import hammergestureconfig hammergestureconfig angularplatformbrowser export class myhammerconfig extends hammergestureconfig overrides pinch enabled false rotate enabled false ngmodule declarations imports providers provide hammergestureconfig useclass myhammerconfig vertical scrolling still nt work edit sorry made work bad enable false instead enabled false ca nt seem shake feeling point might need use disables events really solution", "d": "1/2017"}, {"body": "vicb means mutmansky reported bug documentation component controls patch screen called view however componentfactory create method creates entity working bingings ergo fulfil component definition enityt created componentfactory able control patch screen called view saying bug could described following way componentfactory create component", "d": "1/2017"}, {"body": "laplacek u think valid bug pls reproduce plunkr open new issue pls", "d": "1/2017"}, {"body": "laplacek dzmitryshylovich updated plunker previously created nt plan submit bug since bug closed bit moot point came working aggrid time wanted nativeelement returned certain scenarios like creating dynamic filters point aggrid updated recent version angular likely changed point revisit see still issues around side note laplacek still need get working similar situation elsewhere app tackled scenario different way basically created component dynamicitemcomponent took input name component wanted dynamically create dynamicitemcomponent map component names type component needed created type use map resolvecomponentfactory call using name look type create component want within dynamicitemcomponent nt like existence map feels like hack since true reflection like java nt see way around inner component still parallel whatever reference dynamicitemcomponent use put dynamicitemcomponent selector within whatever div really want dynamic component live btw zoechi answer inspired solution thanks zoechi nt make sence laplacek let know maybe create another plunker illustrate", "d": "1/2017"}, {"body": "already fixed", "d": "1/2017"}, {"body": "thnx dzmitryshylovich", "d": "1/2017"}, {"body": "dzmitryshylovich mean never work use cases like javascript root app component import component directive provide hostbinding input ngmodule angularcore import browsermodule angularplatformbrowser disable input directive directive selector disableinput export class disableinputtdirective input disableinput role string comment line work hostbinding disabled disabled boolean ngonchanges thisdisabled thisrole user mdinput compent component selector mdinput template export class mdinputcomponent input title string input disabled disabled boolean false app component component selector myapp template export class app role string admin ngoninit setinterval gt thisrole thisrole admin user admin module ngmodule imports browsermodule declarations app mdinputcomponent disableinputtdirective bootstrap app export class appmodule", "d": "1/2017"}, {"body": "ca nt bind disabled since nt known property mdinput hmm sure related issue", "d": "1/2017"}, {"body": "works fine", "d": "1/2017"}, {"body": "dzmitryshylovich updated plunker show wo nt work way talked problem first comment might open separate ticket set property component directive", "d": "1/2017"}, {"body": "updated plunker show wo nt work way works u need set instead u want remove element might open separate ticket think makes sense", "d": "1/2017"}, {"body": "right removes property applies property component never notified fact component nt aware change makes wonder design liked asked original comment bug directive set input value component applied", "d": "1/2017"}, {"body": "schippie file new ticket pls", "d": "1/2017"}, {"body": "might workaround", "d": "1/2017"}, {"body": "vixriihi thanks indeed provide workaround one entered comment referenced however workaround problematic relies private members ideally team would provide supported way becoming common problem thanks", "d": "1/2017"}, {"body": "issue well trying create reusable component needs access methods parent component parent component change method names generic injection parent component seems like answer progress solution angular team otherwise", "d": "1/2017"}, {"body": "giancarloa hehe nt notice workaround agree problematic hopefully get better solution point could use feature", "d": "1/2017"}, {"body": "vsavkin reviewed router somewhat matured since issue written continues problem far tell way currently allow browser default behavior able right click choose open new windowtab still maintain control prevent navigation needed suggested approach navigating imperatively works great deactivate guard nt allow browser default behavior nt think far fetched use case within one window use deactivate guard prevent navigation away changes user chooses open new window want work well see also think shows current behavior inconsistent unexpected", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "add", "d": "1/2017"}, {"body": "instead trying create component view component resolver instead create object properties match attributes want pass svg component append object array exsvgitems add ngfor svgitem svgitems svg component want create dynamically hope clear solve problem", "d": "1/2017"}, {"body": "mannybellas thanks restarting visual studio case trick also working angular startup project", "d": "1/2017"}, {"body": "chpasha dzmitryshylovich issue read property path undefined found workaround works got bug switch lazyloading change routes config current configuration appmodule routes testmodule routes testcomponent read property path undefined", "d": "1/2017"}, {"body": "hi get working dec pm mikey diamonds notifications githubcom wrote oh wow looking entirely wrong thanks much sudharsanmit receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "working nicely addjobhtml html add job addjobts typescript import component angularcore import navcontroller modalcontroller viewcontroller platform ionicangular import validators formbuilder formgroup formarray angularforms component selector pageaddjob templateurl addjobhtml moduleid moduleid export class addjobpage jobform formgroup private mydata formarray constructor public navctrl navcontroller public modalctrl modalcontroller public viewctrl viewcontroller public platform platform public formbuilder formbuilder thisjobform formbuildergroup tasks formbuilderarray thisinittask submit formdata thismydata formdata consolelog formdata thisviewctrldismiss task related functions gettasks jobform return jobformget tasks controls inittask initialize task return thisformbuildergroup task completed false addtask const control thisjobformcontrols tasks controlpush thisinittask removetask number const control thisjobformcontrols tasks controlremoveat electrician learning build hybrid mobile app appreciate willingness others help learn spirit opened twitter account lend expertise others electrical question let know askanelectricn", "d": "1/2017"}, {"body": "mikeydiamonds thanks workaround think cleaner solution kara dzmitryshylovich intention support iterations aot", "d": "1/2017"}, {"body": "fixed today thanks", "d": "1/2017"}, {"body": "nope angular support ts officially version", "d": "1/2017"}, {"body": "issue want disable component rest api call double checks nt returning value due call returning inbetween end disabled double check application definitively best solution works appcomponentts", "d": "1/2017"}, {"body": "maximemorin take look proper solution usecase", "d": "1/2017"}, {"body": "seems fixed contexts edit mistaken still nt work work still ca nt intervalbased timer", "d": "1/2017"}, {"body": "anyone know work around filter self item still getting updates angular querylist docs say x unmodifiable list items angular keeps date state application changes well need modify still receiving updates state changes moment filtered id seems return array would break updates would nt", "d": "1/2017"}, {"body": "dev expected behaviour", "d": "1/2017"}, {"body": "happens samsung browser verified galaxy galaxy worst part form validation one option select form never valid", "d": "1/2017"}, {"body": "quick hack case ngmodel sets undefined first option value undefined disabled worked well tested using angular", "d": "1/2017"}, {"body": "gordievich tried solution edgeie look good chrome null space list look bad try chrome", "d": "1/2017"}, {"body": "appears edgeie bug", "d": "1/2017"}, {"body": "anybody try reproduce firefox safari since original bug always two browsers bug ie related guess means wo nt make fixes angular wait fix microsoft", "d": "1/2017"}, {"body": "dzmitryshylovich patrickracicot happens samsung internet browser android devices", "d": "1/2017"}, {"body": "patrickracicot tried see chrome firefox work good edgeie safari problem", "d": "1/2017"}, {"body": "mrhoy mean null space list look bad yes tried chrome looks good also using materializecss framework interpret", "d": "1/2017"}, {"body": "gordievich add small repro plunkr maybe wrong", "d": "1/2017"}, {"body": "oddlyfunctional fire question", "d": "1/2017"}, {"body": "understand framework specifies event model ngonchanges way behavior testing infrastructure intuitive majority comments thread suggest natural expectation test code automatically executed ngzone application code granted things existing testing infrastructure fixturedetectchanges fakeasync tick already establish convention seamlessness ca nt expected perhaps needs better documentation testing manual", "d": "1/2017"}, {"body": "guessing query support nt implemented yet", "d": "1/2017"}, {"body": "nt understand closed since operator nt work missing nt work understand workaround works thanks", "d": "1/2017"}, {"body": "jjlorenzo items array undefined explains first example nt work initially undefined become set second example defined incomplete url valid", "d": "1/2017"}, {"body": "thanks see ca nt use array syntax common scenario ui react data changes right thanks", "d": "1/2017"}, {"body": "nt see prevents using array syntax unless entire url dynamically defined", "d": "1/2017"}, {"body": "information core team whether gon na supported day", "d": "1/2017"}, {"body": "really need feature work correctly ca nt simulate transparent input different browsers different text baseline inputs diff", "d": "1/2017"}, {"body": "also following usecase app switch several accounts accounts different permission routes inaccessible accounts let say usera access routea userb routea protected guard redirecting routex unauthorized user routea usera switch userb would like rerun guards stack redirect userb routex", "d": "1/2017"}, {"body": "great answer", "d": "1/2017"}, {"body": "good see typescript workaround workaround us using typescript simple angular javascript based node application needs issue fixed", "d": "1/2017"}, {"body": "nt think routes getting updated routermoduleforroot routes", "d": "1/2017"}, {"body": "rychkog ocombe lcurrens vicb shlomiassaf could someone pls help handle latest version", "d": "1/2017"}, {"body": "lazy load module imports notice", "d": "1/2017"}, {"body": "pipe uses internationalization api therefore reliable chrome opera browsers solution felipedrumond works well", "d": "1/2017"}, {"body": "hii guys facing isuue created dynamic checbox according dynamic value checkbox shoule checked ngmodel allow check box check der way functonalites reply soon posssible", "d": "1/2017"}, {"body": "two usecases would nice infinite horizontal scrolling navigation looks like would pass anchors want would create something like slot machine way know html create reelspin effect repeat results animate start end long set elements would reel pass potential results reel would handle repeating animation suppose achieved passing dataset creating structure parent also need pass options customise children need", "d": "1/2017"}, {"body": "hmm cases usable back mhevery post probably could something default assumption basic syntax using mean ngcontent repeated default extended allowrepetition could also mean repetition allowrepetition probably syntax unlimited necessary something like allowrepetition", "d": "1/2017"}, {"body": "pkozlowskiopensource plunker seems broken says loading", "d": "1/2017"}, {"body": "confused bug report closed argument fault typescript parent class constructor arguments sub class without constructor absolutely valid typescript works correctly typescript class parent constructor param string consolelog param class child extends parent new child lt error parameter missing new child foobar lt correctly logs foobar constructor specified typescript automatically generates constructor function passes arguments super constructor statement claiming typescript calls super constructor arguments undefined redefine parents constructor child classes completely wrong typescript fault angular problem think angular looks constructor toplevel component dive super constructors toplevel component nt constructor sub component class constructor absolutely clear pass dependencies super constructor already enforced typescript question bug report sub classes without constructor perfectly valid typescript nt work angular dependencies undefined angular typescript", "d": "1/2017"}, {"body": "kayahr statement claiming typescript calls super constructor arguments undefined redefine parents constructor child classes completely wrong fix origin issue angular able inject args anyway works like langs java c would like keep way much clear going", "d": "1/2017"}, {"body": "news im trying implament async validator observable debouncetime however working bugg still system", "d": "1/2017"}, {"body": "translate datetime", "d": "1/2017"}, {"body": "date translated using date pipe wed jan notifications githubcom wrote translate datetime receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "working regardless many directives used", "d": "1/2017"}, {"body": "robwormald support storage api", "d": "1/2017"}, {"body": "using supposing already installed typescript tooling typescript visual studio pl check go project properties typescript build tab select commonjs whichever module system using note settings different debug release config issue release builds set debug config errors disappeared", "d": "1/2017"}, {"body": "like add another use case would allow get rid wrapping component look much cleaner", "d": "1/2017"}, {"body": "issue ca nt navigate page loads must first add click event navigation works want navigate page loads", "d": "1/2017"}, {"body": "doudbanks", "d": "1/2017"}, {"body": "vicb repro closed", "d": "1/2017"}, {"body": "got googling quite hard time realizing function apparently nt exist snippet got working today future struggelers mixing mhevery vsavkin answers blog", "d": "1/2017"}, {"body": "sure one using receive error message warning srcappshareddirectivesbackgrounddirectivets export safestyle found angularplatformbrowser works though might issue webpack something sure", "d": "1/2017"}, {"body": "works fine complains part module", "d": "1/2017"}, {"body": "huh complains add input parameter", "d": "1/2017"}, {"body": "looks like webpackwebpack", "d": "1/2017"}, {"body": "also think support api elements text nodes would selected anyways tbosch mhevery would unfortunate us following reason support enterprise component library built native js successfully created adapters various libraries including angular components used various teams enterprise however ca nt programmatically access entire template require content projection use special directive example alternatively provide content projection property cases make angular experience bit awkward could select children including text nodes could update adapter support understand use case nt design goal wanted let know wild right angular odd man enterprise regards content projection end world would nice behaved way frameworks adapters would fully native angular environment", "d": "1/2017"}, {"body": "text node wrappered use templateref elementref pass though", "d": "1/2017"}, {"body": "text node wrappered hello bottom line need able select text node specifically entire template maybe misunderstood sounded like tbosch suggesting selection using supported", "d": "1/2017"}, {"body": "mhevery tbosch idea track progress item", "d": "1/2017"}, {"body": "placed back burner take care higher priority issues", "d": "1/2017"}, {"body": "mhevery thanks letting us know", "d": "1/2017"}, {"body": "good least workaround using time", "d": "1/2017"}, {"body": "also facing issue using following url getting following browser get activationabcxyz gmailcom works using angularrouter", "d": "1/2017"}, {"body": "question took look including third party libs closure compilation challenge normalizing import paths using typescript compiler third party libs likely published js source makes cumbersome normalize barrel imports without end path discussions reversing recommendation favor node thinking would nt bad instead use classic alway include import paths guessing might performance penalty compilation large projects especially compiler lookups every import detect rewrite compatible closure compiler imports said closure compiler compilation advancedoptimization isolation typically time consuming step maybe added time nt noticeable thoughts", "d": "1/2017"}, {"body": "agree compile time impacted index lookup added tsickle every import moduleresolution internally convert commonjs modules googmodulegoogrequire imagine would slow us extra tsickle step dev mode discuss question supporting nodemodulestyle resolution next week hackathon day closure compiler team said even closure compiler understood module syntax thirdparty libraries typical code gets broken advancedoptimizations largely due property access syntax dot syntax renamed square bracket syntax think third party libraries stay outside closure compilation internally take minjs distro concat onto end closure bundled js imagined would great file package could optout closure optimizations one practical way could imagine add closurecompilercompatible true packagejson libraries verified closure advanced optimization compat build tool could select libraries compiled bundle vs resolved using closure externs thu jan pm torgeir helgevold notifications githubcom wrote question took look including third party libs closure compilation challenge normalizing import paths using typescript compiler third party libs likely published js source makes cumbersome normalize barrel imports without index end path discussions reversing recommendation favor node moduleresolution thinking would nt bad instead use classic moduleresolution alway include index import paths guessing might performance penalty compilation large projects especially compiler lookups every import detect rewrite compatible closure compiler imports said closure compiler compilation advancedoptimization isolation typically time consuming step maybe added time isnt noticeable thoughts receiving mentioned reply email directly view github mute thread", "d": "1/2017"}, {"body": "thanks reply enjoy following progress project yeah definitely see challenges integrating third party libs especially ones written without closure compiler mind like proposal include sort closure compiler compatibility flag though experience closure compiler potentially offers incredible optimizations forces conventions still see expert tool wonder ways simplify things generating code complies conventions case case based specific libraries constants another common use case http calls dealing http calls way see square bracket protect model properties prevent closure compiler shortening property names references payload object otherwise shortened versions longer match runtime values actual http payload generally protected properties needed using square bracket notation approach works well people may love write code like though maybe decorator similar could cue ngc generate js format cases property names mush protected", "d": "1/2017"}, {"body": "within tsickle made declare interface user firstname string declare informs closure compiler mangle use firstname field vaguely consistent already works ts declare used represent types things outside ts code", "d": "1/2017"}, {"body": "evmar excellent thanks telling", "d": "1/2017"}, {"body": "please keep open obvious one must bind option property displayed text spec pretty clear value text specified explicitly doc mdn btw pretty tough issue find nt already know problem see issue", "d": "1/2017"}, {"body": "story typescript atloader property exist type typeof observable atloader property empty exist type typeof observable import observable rxjsobservable import rxjsaddobservableof import rxjsaddobservableempty service dataobs new replaysubject component constructor gt thisret requestdatajson ide highlighted throw throw unresolved function method", "d": "1/2017"}, {"body": "url body jsonp injected script invoke callback", "d": "1/2017"}, {"body": "ericmartinezr referencing code imo indeed causes error using rxjs libraries fault way user code always able account like promises resolvedrejected calls become noops way rxjs makea noop obscomplete already called unless soome sort good reason make noop course tell", "d": "1/2017"}, {"body": "one worked", "d": "1/2017"}, {"body": "fmon smoke achieves nothing child component ca nt override template styles anything specified decorator parent override code class export instead parent class module ca nt use classescomponents ca nt modify presentation etc idea inheritanceproper composition able create proper ui libs extendable components naive example button shows textual caption default click behaviours dev creates iconbutton different template icon embedded everything else stays angular allow sane way two ways right use js api lose aot capabilities hack handling decorators write custom stuff", "d": "1/2017"}, {"body": "auxx understand formulation child component ca nt override template styles actually creates problem override templates styles angular later also need inherit case ca nt", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "mlcmlapis component x want create descendant also want inherit component override want x injected injected maybe want add additional styles works every ui framework starting extremely old stuff like turbo vision newest stuff like android javafx use existing code extend override meta needed", "d": "1/2017"}, {"body": "parser destroyed lt x gt lt gt", "d": "1/2017"}, {"body": "auxx fine true missing something relates previous post specifically first part related question want formulate actual status component inheritance angular general concept", "d": "1/2017"}, {"body": "auxx example naive example button shows textual caption default click behaviours dev creates iconbutton different template icon embedded everything else stays perfect situation angular inheritance facilitate extension components original problem motivated issue similar lost anything done far problem continues understand easy change discourages relation future see something extencible would create components parts applications component responsibility reused easily application great best opinion allows develop components used third parties various applications architecture allow third party extend modifyoverride functionality component without practically rewrite component annotations", "d": "1/2017"}, {"body": "fernandocode would combination sufficient address concerns", "d": "1/2017"}, {"body": "chuckjaz relevant would extremely useful", "d": "1/2017"}, {"body": "chuckjaz something would useful solve problem know include special value called inherited best option access value ancestor component detail better suggestion issue", "d": "1/2017"}, {"body": "interested could print page phantomjs page ready", "d": "1/2017"}, {"body": "update would appreciate alternate workaround creating wrapper", "d": "1/2017"}, {"body": "also encounter issue update", "d": "1/2017"}, {"body": "update known workaround issue want create component two different variations widecompact currently ca nt realize using first ngcontent transclusions", "d": "1/2017"}, {"body": "solutions reiterating experiencing issue depending value boolean class variable would like ngcontent either wrapped div wrapped div ie div even dom whats best way go plunker tries assumed obvious way using ngif working displays content one boolean values kindly assist thank export class mycomponent insidereddiv boolean true component template export class app", "d": "1/2017"}, {"body": "somombo kind usecase problem also tried give content selectable atributes foo bar added select foo select bar two ngcontent elements work either", "d": "1/2017"}, {"body": "somombo working solution usecase ts inspired", "d": "1/2017"}, {"body": "possible workaround", "d": "1/2017"}, {"body": "shanehickeylk believe need unsubscribe specifically save subscription variable called routerevents subscribe directly subscription unsubscribe", "d": "1/2017"}, {"body": "believe subscription still alive even assigned variable angular knows event triggered reason assigning variable accessed later unsubscribed good article brian love goes additional detail topic", "d": "1/2017"}, {"body": "aight thanks need rewrite production asap", "d": "1/2017"}, {"body": "trouble understanding angular binding data forms ngcontrol problem angular done years apis model objects view binding list items one selected use key retrieve details express mongodb call express api using observable return json result class object problem form control ngcontrol format ca nt figure tell form want use class object bind data gap", "d": "1/2017"}, {"body": "tjunussov exactly situation current project big company management decisions possibility change architecture must way inject double bindings dynamically created party content real use cases sorry live dogmatic approaches core teammembers even suggested architecture efficientone framework must also work existing environments architectures", "d": "1/2017"}, {"body": "daschtour expedient final solution", "d": "1/2017"}, {"body": "going close stated going support nginclude functionality angular final decision recap components templates basic unit number useful ways assemble dynamic interfaces components template fragments using using creating structural directives etc may course manually run compiler whatever please strongly recommend forever couple app shipping large slow compiler many use cases nginclude style functionality involve compiling userprovided templates large attack vector would strongly caution even especially angular", "d": "1/2017"}, {"body": "kara still nt work", "d": "1/2017"}, {"body": "alexlukinsoftgrad reproduce plunkr file new issue", "d": "1/2017"}, {"body": "dzmitryshylovich fault managed figure works hope sample email validation using regexp pattern binding helpful someone", "d": "1/2017"}, {"body": "hi updateworkaround believe fundamental issue severity set inconvenient questionable makes unusable angular issues fixed nt think angular team claim support suggested", "d": "1/2017"}, {"body": "chuckjaz started integrate angularlanguageservice inside eclipse starts working like charm great work would like know best place create issues angularlanguageservice would like create issues support rename references features codefixes think thoses issues created inside would like confirmation cool could roadmap page like angularlanguageservice thanks", "d": "1/2017"}, {"body": "best place create issues angularlanguageservice", "d": "1/2017"}, {"body": "ever work big visual studio code", "d": "1/2017"}, {"body": "ever work big visual studio code goal collaborating microsoft nt time frame yet first step unify servers one process typescript angular instead two today due strict memory restrictions wo nt happen typescript", "d": "1/2017"}, {"body": "wo nt happen typescript fix problem today updating tsserver following idea little ugly works developping tslint language service like angular language service", "d": "1/2017"}, {"body": "angelozerr terrific works large set scenarios however make compromises information presented completions diagnostics look like came typescript collaborating typescript fix extending completion kinds allowing specifying source diagnostic etc also need define behavior happens file unknown interface passed well augment server way include template files calculating project etc none compromises feel acceptable vs integration", "d": "1/2017"}, {"body": "hi similar issue using function triggers expression function used functions updates code ui nt update using webpack awesome typescript loader case nt use babel looks seleccione dispositivo usb inputs name datatable label datatable type text placeholder map devices device gt label device value device type radio thinking either halts ui js context execution original issue runns angular zone", "d": "1/2017"}, {"body": "would work ways configure let know needed make pr", "d": "1/2017"}, {"body": "pretty sure since called needs done change noted previous comment", "d": "1/2017"}, {"body": "someone invested issue look let know kinds configuration available means options configurable", "d": "1/2017"}, {"body": "systemdisc really like suggested api update think users thread seem looking", "d": "1/2017"}, {"body": "think functionality provided manner specifying look dom event names formcontrol feels like leaky abstraction think needs way control validation pervalidator example run sync pattern validation input async validation blur", "d": "1/2017"}, {"body": "also probably need thought around onblur validation would work programatic changes via setvalue friends believe rerun validation today", "d": "1/2017"}, {"body": "agree points order set dom event name element would able specify validator attached think configuration pervalidator think setvalue call validators think something like programmatically also programmatically call validators run perhaps setvalue similar methods parameter whether call validators", "d": "1/2017"}, {"body": "sure would specify event names per validator though perhaps validatorfn asyncvalidatorfn would expanded way", "d": "1/2017"}, {"body": "perhaps api expanded", "d": "1/2017"}, {"body": "iirc setvalue also called ngmodel example binding changes sure expected behavior would case w validating blur changes think mostly makes sense use cases however part thinks event names something like ontouched onchange since better reflects abstraction controlvalueaccessor formcontrol actually working vs dom eventish names probably want directive equivalent templatedriven forms", "d": "1/2017"}, {"body": "first note figured used actual event names users could bind event number two agree perhaps done via attributes would assign multiple events plus nt really fit whole syntax", "d": "1/2017"}, {"body": "guys really need validation process run blur think op view ok validator logic running value change want better control users sees", "d": "1/2017"}, {"body": "would support arbitrary events understand formcontrol nt nt know dom events rather uses controlvalueaccessor bridge dom", "d": "1/2017"}, {"body": "ghetolay think main use case async validators hit remote services checking username available instance would nt say huge problem annoying running keystroke close enough iirc run sync validators pass chewing networkcpumemory resources impact overall validity control make validation complicated needs cases trying show error blur checking whether username use example said think ops requirements would need solved adding another directive monitor whether control currently focus keying error messages value", "d": "1/2017"}, {"body": "mattdistefano ok understand need case validation really separated nt think define event name directly control like systemdisc suggested would rather suggest using observable emits item every time wants run validators async validators observable would default user could submit observable like still create directive would inject control set observable accordingly vicb seems reasonable", "d": "1/2017"}, {"body": "ghetolay yes mostly regarding view horrible ux show error minimum length soon user start typing nt done anything wrong yet like suggestion would work without lot manual work every input", "d": "1/2017"}, {"body": "cuel something like need check control touched blurred displaying error think issue related errors show asyncvalidators people wanting ability run validation blur", "d": "1/2017"}, {"body": "cuel mostly nt enough need cover think mattdistefano case legit view would easier would work without lot manual work every input well like anything else form creation reactive form directive template driven one interrogations reactive form let say add constructor field use like problems must injected input undefined form must build make work would inject element create subjecteventemitter input feed events element ts viewchild elementref new eventemitter ngoninit thisform new formgroup new formcontrol validatorsminlength ngafterviewinit observablefromevent blur subscribe gt reached point lot manual work every input also even sure safe use maybe rather use makes thinking stuff part one linking dom element control", "d": "1/2017"}, {"body": "something also take care ca nt submit form without validating first custom events could happen", "d": "1/2017"}, {"body": "validating submit would really nice", "d": "1/2017"}, {"body": "systemdisc one could think nt explain well touched useless usecase", "d": "1/2017"}, {"body": "cuel couple options html structure permits always suppress error statesmessages via css ie sort thing probably write directive monitor whether element focus use template var get reference instance directive update template check value ie imo forms api latter particularly since iirc adding focus method", "d": "1/2017"}, {"body": "thanks already solved however custom form builder allows runs lost focus changed like see native", "d": "1/2017"}, {"body": "well think solution elegant enough create pullrequest reference issue", "d": "1/2017"}, {"body": "come something seems fit way things allows configuring least way validators run value changed blur would happy correct pr get taken care", "d": "1/2017"}, {"body": "systemdisc tried solution posted nt work form tell wrong also tried use add tag nt work validation triggered users start fill input field", "d": "1/2017"}, {"body": "nt solution proposed change api make work", "d": "1/2017"}, {"body": "zoechi posiable textarea instead input press enter move new line thank", "d": "1/2017"}, {"body": "felipedrumond another way get functionality talking could implement way could save state page essentially wanted rerender would also save service calls make user experience slightly better increased speed check stack overflow details used accomplish exactly asking", "d": "1/2017"}, {"body": "hi corbfon routereusestrategy keep scroll position components sure nt explicitly mention stack overflow contributing issue want believe strategy make job also strategy shared help lot ecommerce website make navigation faster speed key factor impacts revenue thanks sharing", "d": "1/2017"}, {"body": "cortopy code going", "d": "1/2017"}, {"body": "felipedrumond implementation site keeps scroll positions text place", "d": "1/2017"}, {"body": "never mind used solution provided rootscope statechangesuccess function documentbodyscrolltop documentdocumentelementscrolltop even better rootscope statechangesuccess function document bodyscrolltop document documentelementscrolltop remember inject document run function", "d": "1/2017"}, {"body": "ronalmog angular angular", "d": "1/2017"}, {"body": "went approach credits bezhermoso inspiring hunt solution updating keyup failed instead became import abstractcontrol asyncvalidatorfn angularforms import rx rxjsrx async validator debounces export class asyncobservablevalidator static create callback value gt promise debouncetime number asyncvalidatorfn let changed new rxsubject return control abstractcontrol rxobservable gt changed next signal previous stream terminate return controlvaluechanges takeuntil changed take debouncetime debouncetime switchmap value gt return callback value used like", "d": "1/2017"}, {"body": "workaround nt need take debouncing based thread", "d": "1/2017"}, {"body": "finleysg look plunk changed next missed takeuntil sure observable wrapped promise resolved either return observable guess technically fact observable nt complete part problem promise fire time wo nt debounced properly either guess", "d": "1/2017"}, {"body": "oh wait see next previous call awkward", "d": "1/2017"}, {"body": "escardin admittedly grasp shakey take debouncing end result nt get debouncing keystroke resulted request another minor annoyance valuechanges observable undefined hit form directly coming page via deep link edge case nt like red paint developer console remove promise wrapper return observable controlerrors collection never updated version tried without wrapper eventually want rewrite asyncvalidatorfn example", "d": "1/2017"}, {"body": "take code domain mit whatever suits ca nt remove promise subscribing subscription closure async validator expecting observable subscribe instead change subscribe nt worked observable async validators way way harder code plunk result bunch iterations even nt bug free right away", "d": "1/2017"}, {"body": "hi guys issue solution moment", "d": "1/2017"}, {"body": "vicb already implemented closed", "d": "1/2017"}, {"body": "dzmitryshylovich sure looks different feature", "d": "1/2017"}, {"body": "namek requested strategy", "d": "1/2017"}, {"body": "dzmitryshylovich thank response reuse misleading word strategy allow toggle visibility component without losing internal state", "d": "1/2017"}, {"body": "conclude official solution yet", "d": "1/2017"}, {"body": "good solution tcoz", "d": "1/2017"}, {"body": "charlesaraya thank perfect", "d": "1/2017"}, {"body": "charlesaraya thank workaround better put make sure page loaded edit bad idea create multiple subscriptions use method proposed charlesaraya instead typescript export class appcomponent implements afterviewchecked ondestroy constructor private route activatedroute ngafterviewchecked thisroutefragmentsubscription thisroutefragment subscribe fragment gt fragment let element documentgetelementbyid fragment element elementscrollintoview ngondestroy thisroutefragmentsubscriptionunsubscribe", "d": "1/2017"}, {"body": "hmm ca nt click anchor page loaded whatever works glad found way agree unsubscribe otherwise idea", "d": "1/2017"}, {"body": "dzmitryshylovich thanks helps set proxy config targeting rest api please could explain works response headers contains accesscontrolalloworigin properties works properly nt use proxy confing response headers contains accesscontrolalloworigin properties calling api successfull accesscontrolalloworigin header response thanks", "d": "1/2017"}, {"body": "enable production mode js based guess import enableprodmode enableprodmode typescript base right correct im wrong", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "good approach", "d": "1/2017"}, {"body": "problem usin hidden instead ngif solve problem", "d": "1/2017"}, {"body": "met issue finally found default inition object ngmodle object", "d": "1/2017"}, {"body": "setting decorator fixed", "d": "1/2017"}, {"body": "elvismercado thanks solves issue child component relying value passed parent template child template throwing exception parent value changed adding suggestion child component causes change detection run changed value pushed child component avoiding detection run prematurely assume", "d": "1/2017"}, {"body": "input focus remove dom ngif condition error expression changed checked occurs input form group associated plunker issue thanks", "d": "1/2017"}, {"body": "solution changing input value ngoninit trigger", "d": "1/2017"}, {"body": "coli wrap", "d": "1/2017"}, {"body": "tbosch renderer returning values land", "d": "1/2017"}, {"body": "return whatever invoked method returns nvm", "d": "1/2017"}, {"body": "idea relationship hammer documented currently runtime error attempt use etc hammer loaded", "d": "1/2017"}, {"body": "tsvetomir", "d": "1/2017"}, {"body": "thanks solves pretty well angular material users main angular documentation hand mentions hammer gestures passing nt go detail gestures use", "d": "1/2017"}, {"body": "config used create instance also contains list supported events", "d": "1/2017"}, {"body": "indeed asking going included documentation", "d": "1/2017"}, {"body": "counterpoint validator parent group errors created parent group large form cross dependent validations like could mean errors potentially generated root controlgroup however would like errors close input user actually rectify situation propopsed workaround works simple scenarios case forms could span fields support defining cross dependencies would greatly appreciated", "d": "1/2017"}, {"body": "zoechi shadowdom supported major browsers chrome firefox edge need polyfill already development currently investigating polymer components angular using webcomponents polyfill shadowdom custom elements etc try use firefox current painpoint polyfill really slow takes least second get couple native webcomponents integrated besides fact rendering issue using details described angularpolymer loader", "d": "1/2017"}, {"body": "fokusferit also serious blocker using polymer angular yes shadow dom polyfills slow shady dom needs special angular support issue guess wo nt happen anymore shadow dom way", "d": "1/2017"}, {"body": "question would kind classes modules patterns someone needs look solve issue topic around like try solve issue maybe bigger effort others", "d": "1/2017"}, {"body": "tried provide impl nt think part angular default", "d": "1/2017"}, {"body": "dzmitryshylovich project currently see details", "d": "1/2017"}, {"body": "ok expect us angular side", "d": "1/2017"}, {"body": "waiting", "d": "1/2017"}, {"body": "himanshuupadhyay already implemented type body", "d": "1/2017"}, {"body": "feature implemented available new version clear comments", "d": "1/2017"}, {"body": "cviccaro sorry nt get log string without arguments log tried dont see correct line numbers use dont see consolelog", "d": "1/2017"}, {"body": "mickl sorry bit old try approach get correct line numbers typescript import injectable angularcore injectable export class loggerservice enabled true noop gt", "d": "1/2017"}, {"body": "still dont get call get function without arguments know hello world also want string like server side logging without arguments", "d": "1/2017"}, {"body": "mickl javascript properties getters useful computed properties bound functions instantiate loggerservice log actually property returns properly bound consolelog function ready used loggerservicelog property returns function function clarify simple example component typescript export class somecomponent constructor private logger loggerservice ngoninit log variable properly bound consolelog function consolelog variable see function outputted string let log thisloggerlog variable used function log somecomponent initialized use way previous lines code help clarify works thisloggerlog somecomponent initialized", "d": "1/2017"}, {"body": "oh target", "d": "1/2017"}, {"body": "mickl mistake works receiving errors trying use code little unclear works", "d": "1/2017"}, {"body": "oh wow actually working get inserted string work", "d": "1/2017"}, {"body": "mickl inserted string never actually hits code within loggerservice loggerservicelog property regular object property value ie logger property value case getter setter property readonly thing loggerservice return function readytobe used different property function hope confusing would nt able access inserted string within code far know big caveat trying tie together two debuggers one console one log server interesting problem tried solve yet first inclination would write another service like debugservice something wraps around loggerservice create another service server debugging call within debugservice right sure handle returning components properlybound console function ensure file amp line numbers outputted correctly horrible workaround create another logger service server debugger call nt like idea maybe someone else thread better idea handle try think solution", "d": "1/2017"}, {"body": "yes currently want two loggers one also want hide consolelog production maybe stuff later tried alot googled alot nt find solution show line numbers", "d": "1/2017"}, {"body": "got working temporary workaround custom dts file hosted locally repo dt uibs typings file nt interfaces exported nice easilyimportable manner submitted pr dt merged easily importable using module import syntax able remove workaround custom typings file code", "d": "1/2017"}, {"body": "icfantv oh great news try way soon possible thanks", "d": "1/2017"}, {"body": "vicb since angular heading typescript think good time revisit ticket combining via dependency flags", "d": "1/2017"}, {"body": "also wandering routing issue anyone share workaround routing back previous component state", "d": "1/2017"}, {"body": "ronenmiller perhaps helpful example link stickyroutes custom reuse strategy", "d": "1/2017"}, {"body": "zoechi thanks lot exactly needed works like charm", "d": "1/2017"}, {"body": "renehamburger completely agree said fortunately use refelect case feel bit dirty works needing functionality single sitemap pages application defining title icon role permissions use authorization provider lookup page load determine user access page", "d": "1/2017"}, {"body": "issue upgarding app menu component chances get solution soon plnkr example", "d": "1/2017"}, {"body": "fixed different issue vue tags inside tags removed way avoid tag", "d": "1/2017"}, {"body": "fyi changed since final release access errors control path two methods", "d": "1/2017"}, {"body": "easy fix pass content cc tbosch think reasonable", "d": "1/2017"}, {"body": "cc dzmitryshylovich think could take crack", "d": "1/2017"}, {"body": "note compile index cmp templates", "d": "1/2017"}, {"body": "vicb true nt think feature compiling projecting nodes easy", "d": "1/2017"}, {"body": "mhevery pass content componentfactorycreate question access content something like would work nt access dom point renderer available yet throws must real dom nodes nt see impl point", "d": "1/2017"}, {"body": "good point could special tag would tell lower layer reproject send tag something like", "d": "1/2017"}, {"body": "mhevery nt css selector runtime even attribute would need somehow restrict feature work elements attribute throw others requires somehow marking elements compilation", "d": "1/2017"}, {"body": "also component reproject nodes really need list nodes could work following store ngcontent selectors view definition add new method renderer make call method get matching children call regular however bigger change sure would also make asynchronous method needs return promise webworkers", "d": "1/2017"}, {"body": "ok let post", "d": "1/2017"}, {"body": "form reset used jan angular documentation new model value used form fields", "d": "1/2017"}, {"body": "hm jan angular made work like newhero return thismodel new hero applied value new hero", "d": "1/2017"}, {"body": "reference path indexdts", "d": "1/2017"}, {"body": "get update seems longer current way use pipes inside component functions", "d": "1/2017"}, {"body": "hi arloduff mhevery nt know best way could something like export const pipeproviders provider provide capitalizepipe useclass capitalizepipe ngmodule imports browsermodule declarations appcomponent capitalizepipe bootstrap appcomponent providers pipeproviders import component angularcore import capitalizepipe capitalizepipe component selector myapp template name name capitalize export class appcomponent constructor pipe capitalizepipe thisname pipetransform ingens plnkr example", "d": "1/2017"}, {"body": "thanks danicomas way builtin type", "d": "1/2017"}, {"body": "yes also got cryptic error message going try fix one", "d": "1/2017"}, {"body": "facing issue click toggle state switch toggleenable event checking condition setting enablestate changes replicated ui click event applied switch need work around asap thanks advance", "d": "1/2017"}, {"body": "eta", "d": "1/2017"}, {"body": "realize bringing back dead mhevery example would great please thanks", "d": "1/2017"}, {"body": "alxhub working new proposal available done", "d": "1/2017"}, {"body": "issue closed may mhevery commented plan maptoiterable pipe still plan work nt tracked closed issue another place follow along core would better many third party implementations getting propagated think thanks", "d": "1/2017"}, {"body": "pdavin", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "closing favor support many use cases", "d": "1/2017"}, {"body": "please look issue router error selector ngcomponent match elements error using router handle bug angularcompiler cos happened packaging webpack", "d": "1/2017"}, {"body": "found great article explaining use svgcomponents angular namespace svg elements use attribute selector component", "d": "1/2017"}, {"body": "explain nt actionable", "d": "1/2017"}, {"body": "angular uses different strategy keep track old values every binding view detect pieces view changed update real dom virtual dom diffs view angular diffs model performance standpoint neither approach strictly better certain scenarios either approach slight advantage", "d": "1/2017"}, {"body": "vicb aot test release try", "d": "1/2017"}, {"title": "nested scoped slots provide content parent without losing child scopes", "body": "hello trying develop small component personal use data table component allow customization element child elements independently element types scoped slots offer fallback markup simplified example working html value html value asked question vue forums got answer assume nt currently possible submitting feature request codepen running testing thank much help", "num": "4826", "d": "1/2017"}, {"title": "splice working expected always removes last item array matter index given", "body": "parent vue component repeats child component feed item template component using emit function access von itemdeleted postssplice causing last item array removed also tried calling function similar example exactly result even console log get desired index would like removed genuine bug template code child item pretty complex even tried making absolutely minimal still result", "num": "4825", "d": "1/2017"}, {"title": "simplify use arguments object events", "body": "occasionally run situations project need data bound callback events example vue methods testhandler componentvalue args think explicitly accessing arguments object bit tedious propose creating new modifier automatically apply arguments object function final syntax would look like vue methods testhandler componentvalue already looked fairly small change compiler nt know correct word use nt allow change context maybe anyway feedback welcome desirable feature write tests create pr", "num": "4824", "d": "1/2017"}, {"title": "simplify listrendered slots", "body": "want render slot list need something like childvue elsewhere produces vue lorem ipsum dolor sit amet hello world want namespace slots eg slots starting need make computed property filters non slots iterate property instead would way vuejs sense given slot rendered list andor multiple entries like childvue elsewhere would rendered code would exactly mentioned think would greatly simplify uncommon useful practice", "num": "4823", "d": "1/2017"}, {"title": "warns", "body": "vuejs version reproduction link", "num": "4822", "d": "1/2017"}, {"title": "running vuecli first time", "body": "vuejs version reproduction link steps reproduce npm install g vuecli vue init webpack myproject cd myproject npm install npm run dev expected expect see page vuecli browser actually happening", "num": "4821", "d": "1/2017"}, {"title": "problem component rendering", "body": "vuejs version happening load object server axios vuex store computed property vue file want open vue component get following stack trace chrome console typeerror read property name null proxyrender eval vuecomponentvuerender eval vuecomponentupdatecomponent eval watcherget eval watcherrun eval flushschedulerqueue eval arrayeval eval nexttickhandler eval caused part code line expected would except maybe component doesnt show deal making user understand error occured actually happening actually complete program freezes browser click button example code behind runs see every logger console nothing screen changes", "num": "4820", "d": "1/2017"}, {"title": "shorthand binding properties", "body": "would convenient able write like think would make lot sense people already familiar shorthand objects would save lot characters people use props lot", "num": "4819", "d": "1/2017"}, {"title": "ca nt login vuejs website participate discussions", "body": "see empty login page", "num": "4818", "d": "1/2017"}, {"title": "lazy loading components resolved vue router vuecomponent nt display", "body": "vuejs version reproduction link repro code js componentsjs import vue vue function lazyloadcomponents paths let resolver return pathsreduce components path gt resolver resolve gt require resolve components path resolver vuecomponent path resolver return components let components lazyloadcomponents app user home inquiry product rental report users rentals products inquiries dashboard login export default components js routesjs import components components consolelog components const routes path component componentshome name home path login component componentshome name login path dashboard component componentsdashboard name dashboard children path users component componentsusers name users path rentals component componentsrentals name rentals path inquiries component componentsinquiries name inquiries path products component componentsproducts name products path user user component componentsuser name user path product product component componentsproduct name product path rental rental component componentsrental name rental path inquiry inquiry component componentsinquiry name inquiry export default routes steps reproduce install webpacksimple using vuecli install vuerouter create routerview appvue use lazyloadcomponents pass file names vue components without extensions use returned components vue router component paths expected resolve components use vue router vuecomponent actually happening component resolved using webpack displays blank page", "num": "4817", "d": "1/2017"}, {"title": "feature request access transition components via refs", "body": "hi wondering ca nt access transition components via fiddle would great listen transition hook programatically handle easily chained animations like misleading think good idea workaround stumbled upon cause need control timing multiple transitions within one project thanks", "num": "4816", "d": "1/2017"}, {"title": "string argument click single quote html encoded content breaks vue", "body": "vuejs version reproduction link steps reproduce call function vue instance using argument string single quote html encoded expected execution calling function vue instance actually happening vue js fails", "num": "4815", "d": "1/2017"}, {"title": "vbind getset function", "body": "sometimes connection data displays direct example need list checkboxes store checked one ids array would useful able add getset function pair vbind ability pass aditional value would called set id true clicking checkbox get id initialising perhaps extend computed property getset functions ability see", "num": "4814", "d": "1/2017"}, {"title": "svg foreignobject nt work first tag component", "body": "vuejs version reproduction link steps reproduce create component specify foreignobject first tag component look errors console output expected recognize valid tag carry actually happening look code pen notice vue looking component called foreignobject finding one gives warning interestingly inline template still seems work messing around single file component nt rendering error spit console noticed making lowercase attribute otherwise suspect would work despite warning dom output interestingly uncomment tag front tag works", "num": "4813", "d": "1/2017"}, {"title": "access array element index vue js", "body": "hello using vue js searching way get array element index without removing ps dont want iterate array", "num": "4812", "d": "1/2017"}, {"title": "vue fails render electron required", "body": "vuejs version reproduction link fairly complex repro nt time make whole repo steps reproduce install electron vue via npm create indexhtml html message var vue require vue windowaddeventlistener domcontentloaded gt var app new vue el app data message hello vue js const app browserwindow require electron let mainwindow appon ready gt mainwindow new browserwindow height width mainwindowloadurl bash electron mainjs expected message hello vue rendered actually happening nothing rendered warning produced note works epxected instead load via html stepping code versions comments appear identical actual code files different line numbers tried follow see whats going could nt figure thing could see null require case assigned empty renderer instead", "num": "4811", "d": "1/2017"}, {"title": "different behaviour value vmodel select tag dynamically adding options none yet selected", "body": "custom select component behaves differently compared simply using raw select element template custom select value null options loaded async first option automatically selected expected custom select selected value remain empty behavior using raw select template custom component simple fiddle illustrating issue uncomment option null optionid fiddle text selected optionid null select behaves perfectly fine selects option really workaround forces us add null option changes ux may related similar issues vuejs version chrome version reproduction link", "num": "4810", "d": "1/2017"}, {"title": "synchronization two variables one", "body": "vuejs version reproduction link steps reproduce would like height one element synchronised height another element contents second element change time visible linked example changes height upper blue background one changes height lower behaviour whether use expected height upper changes synchronization one moment actually happening change one next change lower height changed trigger change upper one note bug report initially question", "num": "4809", "d": "1/2017"}, {"title": "appjs boundle file incorrect injected html document", "body": "hello maybe issue opened webpack plugin page write commented notice official bootstrap site end body says add javascript plugins jquery tether near end pages right closing page looks like html last comment crashes whole page webpacked result html html see appjs injected inside comment", "num": "4808", "d": "1/2017"}, {"title": "prop change fail first time mentioned mounted", "body": "vuejs version js tablabel export default props tab data label string list type array required true default return default tab activeindex type number required true default data return tabpanels methods click index thistabpanelsforeach tabpanel gt tabpanelhide thistabpanels index show set activeindex index consolelog click thisactiveindex active index consolelog acitve thisactiveindex return index thisactiveindex mounted thistabpanels children thisclick thisactiveindex ther tab component pass click second tab class change second click look normal output like seemed change file first time pass run normal js tablabel export default props tab data label string list type array required true default return default tab activeindex type number required true default data return tabpanels methods click index thistabpanelsforeach tabpanel gt tabpanelhide thistabpanels index show set activeindex index consolelog click thisactiveindex active index consolelog acitve thisactiveindex return index thisactiveindex mounted thistabpanels children thisclick puzzled", "num": "4806", "d": "1/2017"}, {"title": "vuejs registering separate indexjs file", "body": "vuejs version latest steps reproduce simple html document logo sass components javascript jsindexjs file expected vue display navbar actually happening vue throwing nt happen indexjs code embed html", "num": "4805", "d": "1/2017"}, {"title": "vm el html comment chrome extension content script", "body": "vuejs version reproduction link steps reproduce open chrome go extensions ensure checked top right click select project directory navigate github labels page eg open chrome console look logs expected element element appears page actually happening html comment element appears page errors logged", "num": "4804", "d": "1/2017"}, {"title": "keepalive support switching component", "body": "maybe reason supported perhaps better ways achieving need explain working think need working vuikit tabs update allow preserving components states tests keepalive test keepalive different components works fine test keepalive component fails different two tests components used would expect keepalive support caching component reason behind bug vuejs version", "num": "4803", "d": "1/2017"}, {"title": "databind doesnt work", "body": "var todoapp new vue el app data displaytitle true displayaddtasks true displaytaskstatistics true displaytasks true displayprogressbar true check issue reproducible latest stable version vue using prerelease please indicate specific version using required clearly describe steps necessary reproduce issue running issues clear repro steps triaged issue labeled need repro receives input issue author days closed recommended make jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue potential ssr server side rendering issue bugs involves build setups create reproduction repository steps readme issue resolved still open hesitate close case found solution could helpful explain fixed feature request remove template provide thoughtful commentary code samples feature means product allow ca nt today make current workarounds straightforward potential bugs edge cases help avoid etc please keep productcentric vuejs version reproduction link steps reproduce expected actually happening", "num": "4802", "d": "1/2017"}, {"title": "asd", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4801", "d": "1/2017"}, {"title": "testing component", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4800", "d": "1/2017"}, {"title": "view change dispatch action work dispatch", "body": "hi author tested many times happend dispatch action methods inside firebase method please see demo video issue dont know explain exactly video projecy", "num": "4799", "d": "1/2017"}, {"title": "array syntax style binding working", "body": "vuejs version reproduction link steps reproduce use array syntax style binding described docs expected subsequent style refered array applied element actually happening first style applied none used see jsfiddle", "num": "4798", "d": "1/2017"}, {"title": "vmodel custom component behaves differently ie edge", "body": "vue version issue description based examples seen embedding checkbox custom component proxy value used emulate native behaviour checkbox radio input particularly important binding custom component array opposed boolean technique works fine firefox webkitbased browsers fails ie edge demonstration issue steps reproduce open fiddle firefox webkitbased browser check checkboxes note array selected items updated correctly open fiddle ie edge check checkboxes note difference behaviour step expected outcome array selected items raw output updated item checked actual outcome ie edge raw output displaying boolean value checked state checkboxes inconsistent thanks", "num": "4796", "d": "1/2017"}, {"title": "override compiled template using xtemplate usage", "body": "hi using components provide template inside component together script code soon provide template use xtemplate method override template even writing render function checks existing xtemplate uses found else template inside component work would super helpful would way override templates explicitly using xtemplate feature provided within html file", "num": "4795", "d": "1/2017"}, {"title": "computed property set method hit", "body": "vuejs version reproduction link steps reproduce create computed property getter setter create input field computed property expected set method get hit actually happening set method getting hit", "num": "4794", "d": "1/2017"}, {"title": "selected attribute option elements nt work", "body": "vuejs version reproduction link working vue working steps reproduce selected attribute option elements nt work expected selected attribute select value actually happening nt select value use case ca nt add default value vue data props dropdown list dynamic", "num": "4793", "d": "1/2017"}, {"title": "minor bug boolean props casting undefined gt false", "body": "vuejs version reproduction link steps reproduce simply omit boolean prop value casted expected expect property know user nt provide since required prop basically would expect previous example actually happening prop provided content casted also values like casted somewhat related guess intended using", "num": "4792", "d": "1/2017"}, {"title": "feature request allow destructuring scopedslot scope variable", "body": "nt know implementation simple example scope variable could many properties rendering usually need vue currently propsrow ideally row", "num": "4791", "d": "1/2017"}, {"title": "values unrelated inputs reseted", "body": "vuejs version reproduction link steps reproduce type something field click checkbox expected field keep value actually happening field value reseted", "num": "4790", "d": "1/2017"}, {"title": "raise error template contains interpolation string outside root node", "body": "replicate create simple component bind something immediately inside template tag tripped couple times vue simple binding outside root div gives output dom also gives error like would receive two root nodes valid reason allow bindings like root small thing might help new users scratching head like", "num": "4789", "d": "1/2017"}, {"title": "use vue component js cant change boolean object", "body": "think bug use way wont work js loadingvue \u52a0\u8f7d\u4e2d optionsloading \u52a0\u8f7d\u5b8c\u6210 optionsloading export default props options type object default loading true ld type boolean methods js function loading div options divappend thisoptions var loading windowreturnobject loading var loadingvue new vue el div data options options ld false components loading methods changeloading function thisoptionsloading thisoptionsloading thisld thisld use var optionsloading loading false var options optionsmessage page c show message var pagecdiv componentdiv div options \u52a0\u8f7d\u4e2d optionsloading \u5982\u679c\u4e0b\u9762\u7684ld\u90a3\u884c\u4e0d\u5199\u4e2a\u53d8\u91cf\u53bb\u6539\u53d8 \u90a3\u4e48\u4e0a\u9762\u7684\u4e0d\u4f1achange \u5982\u679c\u628aoptionsloading \u6362\u6210 \u666e\u901aboolean\u53d8\u91cf \u901a\u8fc7 props\u4f20\u5165\u4e5f\u6ca1\u95ee\u9898 use loadingvue vue wont show source install serve hot reload run dev bug tag loadingvue vue wont show js see demohtml srctestdemohtml keep server running dev dont open explorer url page c click button", "num": "4788", "d": "1/2017"}, {"title": "use vue component js cant change boolean object", "body": "loadingvue \u52a0\u8f7d\u4e2d optionsloading \u52a0\u8f7d\u5b8c\u6210 optionsloading export default props options type object default loading true ld type boolean methods js function loading div options divappend thisoptions var loading windowreturnobject loading var loadingvue new vue el div data options options ld false components loading methods changeloading function thisoptionsloading thisoptionsloading thisld thisld use var optionsloading loading false var options optionsmessage page c show message var pagecdiv componentdiv div options \u52a0\u8f7d\u4e2d optionsloading \u5982\u679c\u4e0b\u9762\u7684ld\u90a3\u884c\u4e0d\u5199\u4e2a\u53d8\u91cf\u53bb\u6539\u53d8 \u90a3\u4e48\u4e0a\u9762\u7684\u4e0d\u4f1achange \u5982\u679c\u628aoptionsloading \u6362\u6210 \u666e\u901aboolean\u53d8\u91cf \u901a\u8fc7 props\u4f20\u5165\u4e5f\u6ca1\u95ee\u9898 use loadingvue vue wont show source install serve hot reload run dev bug tag loadingvue vue wont show js see demohtml srctestdemohtml keep server running dev dont open explorer url page c click button waiting \u5c24\u5927 online", "num": "4787", "d": "1/2017"}, {"title": "ica nt dynamic add events tag custom grid component", "body": "company devloping grid component javaer use jsp html js question add events data props dynamic von nt want write click mouseover want like another example button component optionsbtnname methods eventbus function rowdata event var eventname eventtype var eventpos eventcurrenttargetlocalname vm trclick function something sometime emit dont kind settlement also use component javaer must write component much oh vif \u7ec8\u4e8e\u53ef\u4ee5\u5199\u4e2d\u6587\u4e86 \u9ebb\u70e6\u5927\u5bb6\u5e2e\u770b\u770b \u73b0\u5728\u5982\u4f55\u53ef\u4ee5 \u6839\u636e\u4f20\u5165\u7684props \u6570\u636e \u6211\u627e\u4e0d\u5230\u529e\u6cd5\u52a8\u6001\u6dfb\u52a0von \u60f3\u505a\u7684\u529f\u80fd\u591a\u4e00\u4e9b \u8fd8\u4e0d\u60f3\u603b\u8ba9\u7814\u53d1\u4eba\u5458\u5199\u52a8\u6001\u7684component \u6211\u5c3d\u91cf\u5c06vue\u5c01\u88c5\u6210 \u5176\u6b21\u662f\u6211\u73b0\u5728\u5728mainjs \u91cc\u628avue\u5199\u597d\u7684\u7ec4\u4ef6\u66b4\u9732\u51fa\u6765window grid gridvue \u7136\u540e\u5728\u5f15\u5165webpack\u6253\u5305\u597d\u7684js \u7136\u540e\u76f4\u63a5\u4f7f\u7528 \u8fd8\u6709\u5982\u679c\u6211\u8fd9\u79cd\u65b9\u5f0f\u5f15\u7528\u7684\u8bdd \u662f\u5426\u8fd8\u80fd\u4f7f\u7528vuerouter \u6700\u597d\u7ed9\u4e2a\u4f8b\u5b50 \u82f1\u8bed\u4e0d\u597d\u9ebb\u70e6\u5404\u4f4d\u4e86", "num": "4786", "d": "1/2017"}, {"title": "checkbox value binding vmodel present", "body": "value binded input type checkbox vmodel attribute present works radio text inputs case scenario compiled result note noted input type value correctly binded reason bug present checkboxes value also bindend attribute removed", "num": "4785", "d": "1/2017"}, {"title": "select showing correct option binding property retrieved ajax callback", "body": "initialization created event created function thisgetbyid routeparamsid thisgetallprofesiones getbyid return object backend correct indexes inside response following apellido basilico dni email franbasilico gmailcom nombre mateo profesion id nombre gasista frontend following select seems promise resolved undefined value asigned even promise resolved return profesionalprofesionid dropdown still shows empty value sometimes works sometimes thanks", "num": "4784", "d": "1/2017"}, {"title": "events triggering dom vmodel update", "body": "vuejs version recent reproduction link custom select element togglable option represent option might change realworld conditions want prevent value vue value select element sync compare value select element value vue lifecycle hook equal means corresponding option longer exists want simply set value null steps reproduce click toggle option buttons custom select element remove currently selected element top element customselect emit null value dom nt updated something else triggers dom update vue devtools worked jsfiddle would also able notice corresponding data value parent component immediately updated emitting null value prop child component updated dom updates bottom element customselectnexttick emits null value dom updated next tick expected expect emitting new value trigger new dom update docs suggest dom updated manipulating state actually happening emitting new value triggering dom update vmodel change unless wrapped thank", "num": "4783", "d": "1/2017"}, {"title": "triggered", "body": "vuejs version reproduction link steps reproduce open devtools click toggle button expected outputs actually happening outputs vue triggered triggered vue document mentions note leaving transition destroyed hook called transition finished also write demo vue works expected", "num": "4782", "d": "1/2017"}, {"title": "suggestion von slots", "body": "ties questionsuggestion closed common scenario would useful proposed solution suggestion would difficult apply suggestion limitation ran authoring reusable components ca nt add event handlers example making logout button intend reuse throughout multiple apps want allow apps override actual button element without worry handling click event call logout method slightly contrived example illustrates point would like able following logoutbuttonvue html log export default methods logout handler slot would applied components within slot button ideally also like able use component root long never ends containing one element topic sure would ever possible parent component could override button like parentcomponentvue everything would still work clicking would trigger handler current solutions knowledge currently three ways implement similar behaviour add directive wrapper element seems like obvious choice already need wrapper component work multiple named slots clutters dom useless elements logoutbuttonvue parentcomponentvue use scoped slot pass method feels like misuse scoped slots also tightly couples parentcomponent implementation logoutbutton logoutbuttonvue parentcomponentvue proposed solution could work reusable using override logoutbutton default slot wrapped another vue component knows event emit tightly coupling adding complexity want use would look little like logoutbuttonvue html log export default methods logout created catch logout event emitted component insert slot parent template logout thislogout parentcomponentvue mylogoutbuttonvue conclusion partial solution perhaps complex scenarios feel like would even cleaner using suggested syntax reasons stated think note fairly new vue overlooked anything apologize", "num": "4781", "d": "1/2017"}, {"title": "problem transition vshow list rendering", "body": "vuejs version reproduction link steps reproduce clone repo npm install dev npm run watch npm run dev time open leave animation working comment consolelog line enter animation wo nt work line removed animation wo nt appear expected rewriting bootstrap components vue animation work like actually happening", "num": "4780", "d": "1/2017"}, {"title": "scoped slot work dynamic slot name", "body": "admit might left field learning experience seems like either bug enhancement go gently see discussion even come point steps reproduce double named slot situation scope feature works fine ie parent child html get child slot text passed child scope child slot text passed child scope also dynamic slotting going like control order certain html blocks without scopes works fine parent html child slot child slot import child childvue export default data return switched true components child child computed return thisswitched return thisswitched html get child slot child slot expected mix two together dynamic slotting child scopes parent html child slot text passed child scope child slot text passed child scope import child childvue export default data return switched false components child child computed return thisswitched return thisswitched html vue least render something possibly even error nt feasible actually happening vue delivers blank page errors jsfiddles double named slots lt works dynamic slots lt works change switchedto true slots change places mix lt nt work interesting jsfiddle least renders results however dynamic slots nt work like said go easy scott", "num": "4779", "d": "1/2017"}, {"title": "failed exec lint script", "body": "vuejs version reproduction link steps reproduce clone mater success exec success exec success exec fail failed exec lint script exec fail expected actually happening vue libo npm run lint verbose npm info worked ends ok npm verb cli usrlocalbinnode npm verb cli usrlocalbinnpm npm verb cli run npm verb cli lint npm verb cli verbose npm info using npm npm info using node npm verb runscript prelint lint postlint npm info lifecycle vue vue npm info lifecycle vue vue vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrcplatformsweexframeworkjs error identifier weexrequiremodule camel case camelcase volumestranscendcodevuebuildbuildjs error identifier camel case camelcase error identifier asciionly camel case camelcase error identifier purefuncs camel case camelcase volumestranscendcodevuebuildkarmasauceconfigjs error identifier slchrome camel case camelcase error identifier slfirefox camel case camelcase error identifier slmacsafari camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier sledge camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase problems errors warnings npm verb lifecycle vue unsafeperm lifecycle true npm verb lifecycle vue path usrlocallibnodemodulesnpmbinnodegypbin volumestranscendcodevuenodemodulesbin usrlocalsbin usrlocalbin usrlocalsbib usrlocalbin usrbin bin usrsbin sbin npm verb lifecycle vue cwd volumestranscendcodevue npm info lifecycle vue failed exec lint script npm verb stack error vue lint npm verb stack exit status npm verb stack eventemitter npm verb stack emittwo npm verb stack eventemitteremit npm verb stack childprocess npm verb stack emittwo npm verb stack childprocessemit npm verb stack maybeclose npm verb stack processchildprocesshandleonexit npm verb pkgid vue npm verb cwd volumestranscendcodevue npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint verbose npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm verb exit true npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog system osx java version vue libo java version java version java tm se runtime environment build java hotspot tm server vm build mixed mode", "num": "4778", "d": "1/2017"}, {"title": "custom plugin imported production mode", "body": "hello two plugins made project registered package npm installed dependency run pops error acl one plugins copied plugins folder within src imported plugin folder worked import npm work problem definitely plugin follow link two file src folder multilanguage plugin acl plugin thank", "num": "4777", "d": "1/2017"}, {"title": "feedback", "body": "using vue prior version released various components community treeview form components fan less high praise vue simplicity power versatile two way binding components strong feature complex applications competition struggling convert many clients apps public repos vue restrictions limitations applied project say disappointed vue become terms development process debugging buggy two way binding restricted due mutation warning nonsense event system improved replaced completely feel vue going right direction following vision started project simplicity yet versatile perfect alternative likes angularjs reactjs vue nt feel like seems like going different direction think try mimic others instead staying something different feels like direction changed contributors make work like angular react derailed path going hope evan rework version put vue back path vision older versions simplicity key seriously considering sticking vue developing complex applications humble opinion best regards", "num": "4776", "d": "1/2017"}, {"title": "custom input object vmodel", "body": "vuejs version reproduction link steps reproduce using object vmodel custom input try clean nt work native input cleans still printing emitted value declare properties form variable like problem solved main advantage using objects case declare form fields something wrong way bind data using vmodel objects like object values updated way normal variables", "num": "4775", "d": "1/2017"}, {"title": "lost child components falsy vif root elements", "body": "vuejs version reproduction link steps reproduce uncheck checkbox check checkbox expected expect parent child root element child component repro code actually happening lost parent root element child component repro code related issue see", "num": "4774", "d": "1/2017"}, {"title": "custom methods vueclasscomponent recognized ref", "body": "hi got error message like points line like method implemented typescript using vueclasscomponent class extends vue located line typesvuedts guess modified using generics like nt work anyone know right thanks", "num": "4773", "d": "1/2017"}, {"title": "invalid render function present self closing tag", "body": "invalid render function generated vuejs version reproduction link steps reproduce expected button text actually happening button text render function generated vuetemplatecompiler", "num": "4772", "d": "1/2017"}, {"title": "chrome von events triggered elements hidden vif", "body": "hello noticed inconsistent behavior browsers regarding events triggered dom bound hidden please check js fiddle works expected firefox chrome version click lock lock unlock callbacks executed reproduction link thank ps vue awesome thanks great work", "num": "4771", "d": "1/2017"}, {"title": "vmodel value styled checkbox nt update", "body": "vuejs version reproduction link steps reproduce check semantic checkbox expected value become true actually happening still false semantic checkbox working vue broken", "num": "4769", "d": "1/2017"}, {"title": "wrong bind vue file methods", "body": "vuejs version code vue file start export default data gt value false methods start gt consolelog return undefined expected expected undefined actually happening found change functions arrow function general function solved mean code problem think file provide including arrow funciton wrong", "num": "4768", "d": "1/2017"}, {"title": "extend options confused super options", "body": "simple case javascript const base vueextend computed return aa const sub baseextend suboptionscomputedb gt bb consolelog baseoptionscomputedb bb consolelog baseoptionscomputed suboptionscomputed true reason found line return parent object maybe replaced code like problem line need change line type like submit pr familiar code like could array things done extend parentval hope someone fix bug thanks actually commonly used set directly met bug using vueloader css module example basevue vue base import vue vue export default vueextend name mybase base color red subvue vue sub import base basevue export default vueextend name mysub sub color blue finally find computed property replaced one share fact following lines using options directly vueloader line line mentioned bug vue cause final problem", "num": "4767", "d": "1/2017"}, {"title": "props slots", "body": "hi wonder would good something like maybe already achievable via current vue functional nt find imagine rows grid component props xs sm md lg single slot looks like want something like modifier wrapped components would possible something like elementslist takes props transforms passes grid accordingly component passes props slot something like", "num": "4766", "d": "1/2017"}, {"title": "props property vue useless demo perpus", "body": "var vuecomponent props list data function return list b template list var obj new vue el test data function return list created function thislist demo work expected even use ajax obj new vue el test define vue instance defined vue component use ajax fetch list remote server vue would say list undefined work doc dome demenstration purpos vuejs version reproduction link steps reproduce expected actually happening", "num": "4765", "d": "1/2017"}, {"title": "methods executed", "body": "vuejs version reproduction link html document getdata new vue el app data return key methods getdata consolelog value key changed return change steps reproduce modify value input view console panel expected getdata method repeated although data dependency normalonly executed actually happening getdata method executed although use computed solved feel executed multiple times", "num": "4764", "d": "1/2017"}, {"title": "dynamic component vmodel", "body": "vuejs behave properly use vmodel dynamic component jsfiddle adress focus input element fiddle press key see hehavior", "num": "4763", "d": "1/2017"}, {"title": "\u7ec4\u4ef6\u7ed1\u5b9a\u51fd\u6570\u4e0d\u6210\u529f", "body": "scripts vuecomponent xinput template lt input value value von input value eventtargetvalue gt data function return value props istype function watch value function val oval consolelog val typeof thisistype lt p gt var vm new vue el demo data function return value validval function str consolelog aa return valid digtest str msg \u8bf7\u8f93\u5165\u6570\u5b57 consolelog typeof vmvalidval \u7528\u4e0a\u9762\u7684\u65b9\u5f0f\u7ec4\u4ef6xinput\u65e0\u6cd5\u83b7\u53d6\u7ed1\u5b9a\u7684istype\u51fd\u6570 consolelog val typeof thisistype \u8f93\u51fa\u662fundefined scripts vuecomponent xinput template data function return value props istype function watch value function val oval consolelog val typeof thisistype var vm new vue el demo template lt xinput vmodel value vbind istype validval gt lt xinput gt data function return value validval function str consolelog aa return valid digtest str msg \u8bf7\u8f93\u5165\u6570\u5b57 vm mount demo consolelog typeof vmvalidval \u9875\u8fd9\u79cd\u65b9\u5f0f\u5219 consolelog val typeof thisistype \u8f93\u51fa\u662f\u6b63\u5e38\u7684", "num": "4762", "d": "1/2017"}, {"title": "change behavior watchers arrays vue", "body": "vuejs version reproduction link steps reproduce click link several times observe console output expected console see add new add new time click link watchers executed behavior code vue actually happening console see add new fieldvalue two new field id value two id value new add new fieldvalue new new field id value new id value new fieldvalue two new field id value two id value new time click link watchers executed", "num": "4761", "d": "1/2017"}, {"title": "incorrect firing hooks eg mounted rendering lists components", "body": "hello question working lists components using handlers mounted destroy monitoring add remove actions components noticed remove component fire beforedestroy hook another component example html css input height width input type button height width container display flex flexdirection row test display flex flexdirection row javascript var test template props element methods deleteme emit deletemeplz thiselementid inithandler consolelog inited thiselementid deinithandler consolelog deinited thiselementid beforedestroy thisdeinithandler mounted nexttick gt thisinithandler var demo new vue el demo data lastid elements id value components test test methods deleteme id vuedelete thiselements id addinput thislastid vueset thiselements thislastid id thislastidtostring value thislastid jsfiddle example algorithm actions open development tools watching console click button check console added message inited means added component id text fired mounted hook component ok click button opposite input text first initial component fired beforedestroy hook second component console writes deinited profit beg pardon english", "num": "4759", "d": "1/2017"}, {"title": "parser fails tags one space inside tag", "body": "vuejs version reproduction link steps reproduce element one space inside tag element html initialize vue parent element expected vue initializes correctly actually happening exception thrown try adding attribute tag wrapper element nt work either changing space worked nt always control code bootstrapping vue", "num": "4758", "d": "1/2017"}, {"title": "typeerror child undefined", "body": "got odd one today doublechecked code everything looks order google turns nothing either missing something subtle obvious simply blind tripped bug using version cdn firebug reports error line reproduced one calls copy code causing import day day code new vue components mcday day data function return page parseint getqueryvariable page computed days function var orders values storestateorders days uniq pluck orders shipdate concat pluck thisshipments shipdate concat pluck thismotds date filter date gt date map date gt startofday date sort motdsbyday indexby values storestatemotds motd gt startofday motddate ordersbyday groupby orders order gt startofday ordershipdate shipmentsbyday groupby values storestateshipments shipment gt startofday shipmentshipdate relevant mount point", "num": "4757", "d": "1/2017"}, {"title": "bug dynamic binding multiple select tag", "body": "hello first thank great framework work faced issue tried use select html tag binded multiple attribute work example jsfiddle partially copy bellow html item item error log safari firefox error vue warn expects array value binding got string found root instance warn setselected componentupdated callhook anonymous function patchvnode updatechildren patchvnode patch update updatecomponent get run flushschedulerqueue anonymous function nexttickhandler promisereactionjob error typeerror bindingvaluesome function bindingvaluesome function v return hasnomatchingoption v eloptions bindingvaluesome undefined componentupdated callhook patchvnode updatechildren patchvnode patch update updatecomponent get run flushschedulerqueue nexttickhandler promisereactionjob expected option filled array selected values actually happening error reported log parameter assigned", "num": "4755", "d": "1/2017"}, {"title": "vmodel components wraps text inputs default model", "body": "vuejs version reproduction link steps reproduce checkuncheck checkboxes expected inputs checkedunchecked represent model value first paragraph bold value actually happening second custom input nt reflect nt change binded model value hi porting mobile framework vuejs provides huge set ready use ui components mobile development including custom component inputs required addition inputs appearance issue use component vmodel wraps input checkbox radio select binded default model used text inputs binds value input events believe vue recognize type input inside ok looks like way control behavior handle change event manually bind checked attribute would good kind additional modifiers vmodel directive allow us tell vue kind model inside eg etc according source code fix could pretty simple let know good idea send pr fix", "num": "4754", "d": "1/2017"}, {"title": "please look bug color link changed", "body": "please visit read description added", "num": "4752", "d": "1/2017"}, {"title": "component use vueserverrenderer vshow disabled", "body": "example result", "num": "4751", "d": "1/2017"}, {"title": "data reactivity bug component discarding change", "body": "may specific scenario found using data tree structures recursion ie parent child relations bug mutation child occurs parent receives reactivity event child components disregards updated property simplest scenario able reproduce bug fiddle reproducing problem able see root components rendered without problem however childs added cause change trigger however see reactivity still play parent parent updated childrens added parent childid", "num": "4750", "d": "1/2017"}, {"title": "keepalive include\u62a5\u9519", "body": "sos \u70b9\u51fb\u8fde\u63a5\u62a5\u9519", "num": "4749", "d": "1/2017"}, {"title": "named slot working render function", "body": "appjs mycmpjs", "num": "4748", "d": "1/2017"}, {"title": "von change randomly fails range input bound computed property", "body": "vuejs version reproduction link steps reproduce jsbin contains slider range logs value computed property bound changes log declared function expected would expect time slider changes prop logged console actually happening two different scenarios drag release slider handler aka thumb prop always logged console ie change handler fires properly times directly click want handler get prop nt logged times ie change handler fails occasions see animated gif using provided jsbin recorded google chrome osx happens safari thought thank", "num": "4746", "d": "1/2017"}, {"title": "input radio reset checked state using component", "body": "vuejs version reproduction link steps reproduce clicking radio click reset button expected one radio must keep checked reset redio clicking reset button radio must checked actually happening radio keep checked", "num": "4744", "d": "1/2017"}, {"title": "compile simple html via vuecompile method", "body": "hi got problem vuecompile method use jquerydatatables want use child row functionality details please look following link want use datatable way described link nt know implement vuecomponent method could please help issue thanks advance", "num": "4743", "d": "1/2017"}, {"title": "set data string input type number value empty", "body": "input value empty turn string type feature think number data input value empty", "num": "4742", "d": "1/2017"}, {"title": "\u7236\u5b50\u7ec4\u4ef6\u901a\u4fe1 \u7528 emit \u89e6\u53d1\u4e8b\u4ef6 \u4e8b\u4ef6\u540d\u4e0d\u80fd\u4f7f\u7528\u9a7c\u5cf0 \u53ea\u80fd\u7528\u5c0f\u5199 \u76d1\u542c\u4e8b\u4ef6\u65f6\u4e5f\u662f\u4e00\u6837 \u5426\u5219\u65e0\u6cd5\u89e6\u53d1\u6216\u8005\u54cd\u5e94", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4741", "d": "1/2017"}, {"title": "vhtml ca nt work vif", "body": "ok first mounted change data thows uncaught promise domexception failed execute removechild node node removed child node tryed sometimes found work way", "num": "4738", "d": "1/2017"}, {"title": "\u7f16\u5199 vue pluginapply function", "body": "node npm os macos sierra webpack import components name components const version const options prefix base \u524d\u7f00 const install vue opts options gt installinstalled return installinstalled true const prefix optsprefix nameforeach key gt vuecomponent components key export default version install components import vue vue import app app import basecomponents components \u63d2\u4ef6\u6e90\u6587\u4ef6\u76ee\u5f55 vueuse basecomponents prefix vue new vue el app template components app pluginapply function import vue vue import app app import basecomponents distindex \u63d2\u4ef6\u7f16\u8bd1\u76ee\u5f55 vueuse basecomponents prefix vue eslintdisable nonew new vue el app template components app \u4e0d\u786e\u5b9a\u662f webpack \u7684\u539f\u56e0\u8fd8\u662f vue", "num": "4737", "d": "1/2017"}, {"title": "\u591a\u6b21\u8c03\u7528vueuse\u62a5\u9519", "body": "\u6ce8\u518c\u4e86\u5417 \u6211\u73b0\u5728\u5fc5\u987bvueuse vuejs version", "num": "4736", "d": "1/2017"}, {"title": "history mode refresh page without", "body": "order nice looking paths without hash bang using history mode var router new vuerouter routes routes mode history however refresh page get error remove mode history go directly urls path refresh pages browser remove hash bang urls able refresh pages use direct urls path", "num": "4735", "d": "1/2017"}, {"title": "ca nt signup vuejs forum", "body": "vuejs version reproduction link steps reproduce go try signup github account expected able sign forum actually happening getting following error", "num": "4734", "d": "1/2017"}, {"title": "disabling warnings inline value attributes vmodel", "body": "hi forms generated phoenix html helpers inline value like rails use vuejs forms creating view model data fly introspecting form inputs values works fine warnings longer necessary case wonder could way disable", "num": "4733", "d": "1/2017"}, {"title": "vuecommonjs errors", "body": "hopefully day wisdom errors nt transcend common sense may dawn somebody somewhere somehow already actually bothered suggest repo seems fix error shite tracing nt stand bug reporting protocol", "num": "4732", "d": "1/2017"}, {"title": "catch errors thrown lifecycle hooks", "body": "vuejs version reproduction link steps reproduce expected expect see alert saying caught error actually happening see uncaught exception console", "num": "4730", "d": "1/2017"}, {"title": "using vif vfor string render result unexpected", "body": "vuejs version reproduction link steps reproduce use vif vfor render string value array velse also render vfor item else desc expected value array render velse string expected actually happening velse render multiple times", "num": "4729", "d": "1/2017"}, {"title": "vueconfigerrorhandler handle vuenexttick vm nexttick exceptions", "body": "app attempts catch unexpected exceptions captured reported back base use vueconfigerrorhandler vue render watch exceptions nt catch exceptions within vuenexttick vm nexttick closures interposed nexttick prototype nexttick functions catch errors feels fragile suggestion existing errorhandler used report vuenexttick vm nexttick exceptions", "num": "4728", "d": "1/2017"}, {"title": "vue view render fail", "body": "view update vue component data update view touch view update view error model number huawei", "num": "4727", "d": "1/2017"}, {"title": "bug", "body": "updating version immediately get", "num": "4726", "d": "1/2017"}, {"title": "mixins props correctly mixed registered globally", "body": "duplicates vuejs version reproduction link steps reproduce open devtools consoleerror expected props imported via mixin render without problems actually happening console throws error prop transmitted", "num": "4722", "d": "1/2017"}, {"title": "vue correctly makes hierarchy components", "body": "vue correctly makes hierarchy components enclosure components necessary example result help please problem", "num": "4721", "d": "1/2017"}, {"title": "perhaps vuejs violation status mpl", "body": "happening vue included modified htmlparserjs moreover chosen mozilla public license mpl mpl obliges following provision since vue chosen mit license vue two licenses include copy license mpl obliges considered violation mpl terms modify include copy license terms mpl avoid violating rules may necessary able distribute modified vuejs license described mit distributed possibility may differ intention expected choose apache software license instead mpl problems solved vue use htmlparserjs selecting apache software license license case want explicitly select apache", "num": "4720", "d": "1/2017"}, {"title": "fire multiple times exist others event binding", "body": "far know would fire one time however would fire multiple times dom last binding dom template example change order two buttons ie would expected behavior issue ca nt assign multiple listeners multiple doms wondering feature bug thank vuejs version latest mac os chrome reproduction link order cause fail ca nt use multiple expected btn fire one time hitting buttons fire alert three buttons actually happening btn fire multiple time btn btn fire multiple times", "num": "4719", "d": "1/2017"}, {"title": "call event child elements contenteditable div", "body": "hi code call keypress keyup keydown events child elements contenteditable div vuejs stackoverflowcontenteditable copy txt stack overflow link", "num": "4718", "d": "1/2017"}, {"title": "transition immediately finished rendering fast", "body": "vuejs version reproduction link steps reproduce click button see ripple transition transition finished ripple removed dom double click button fast could see first ripple immediately removed without transition second ripple remained dom expected act transitions actually happening mentioned", "num": "4717", "d": "1/2017"}, {"title": "element ui \u7684 popover \u548c vif \u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u914d", "body": "", "num": "4716", "d": "1/2017"}, {"title": "jest testing feedback", "body": "migrated unit tests jest feedback webpack poorly supported reason precompile apps testing big deal though jest support snapshots support simple enough converting rendered dom json nicer standard way guess rise idea creating official testing utils new recall think jest relaunch everything test message rise time kind annoying vue rise production mode inbrowser window global variable defined adding check testing environment could help solve using min version ideal testing beside found experience using jest satisfactory heavy testing dependencies one gets installed fast watch mode awesome", "num": "4715", "d": "1/2017"}, {"title": "help checkbox directive misbehavior working intended", "body": "ca nt reproduce error anymore clue hell happened sorry", "num": "4713", "d": "1/2017"}, {"title": "maybe need better childtemplate overriding solution slot", "body": "change order parent nothing change need wrappers like css framework course wrap componet like button img complex practical works working right button img yes still resolve slot one layer like button img complex situation example button img level button img situation cuz slotxxx wrote inside pair htmltag working example write parts wrappers inside componet template make component tightly coupled slot defects ca nt change order ca nt nested still newbie vue maybe understand wrongs please favor instructions \u62b1\u6b49 \u521a\u4e0d\u5c0f\u5fc3\u8fd8\u6ca1\u5199\u5b8c\u5c31\u70b9\u5230\u4e86\u56de\u8f66 p", "num": "4712", "d": "1/2017"}, {"title": "maybe slot good idea flexible especially", "body": "", "num": "4711", "d": "1/2017"}, {"title": "boolean prop parses true empty string", "body": "issue project created repo try recreate issue appears exact problem may resolved later version vue project using still able reproduce part latest version create component prop expects type boolean passing empty string return true expect return false since empty string falsey", "num": "4710", "d": "1/2017"}, {"title": "slot emit go component", "body": "hi rencently got vuejs question dumb please excuse follow doc example provided stumbled accros something expected wanted overlay actually component slot replace main part mostly like one provided example bug example close button emit close slot footer works intended replace slot footer put another button also trigger emit close event passed back component handy presume bug otherwise demo would missleading provided reproduction link copy paste example overrided button thanks lot everything vuejs version reproduction link steps reproduce run click button nothing happen expected run click button overlay close actually happening event triggered passed component", "num": "4709", "d": "1/2017"}, {"title": "\u5173\u4e8e vif \u4e0e vfor \u7684\u4e00\u70b9\u95ee\u9898", "body": "\u5f00\u53d1\u7684\u65f6\u5019\u53d1\u73b0 vif \u548c vfor \u5982\u4e0b\u9762\u7684\u4ee3\u7801 \u5f53 counter \u5f00\u59cb\u8ba1\u6570 \u7684\u65f6\u5019 resend \u6309\u94ae\u4e0a\u7684\u4e8b\u4ef6 \u7136\u540e\u5f53 counter resend devtool \u68c0\u67e5dom \u53d1\u73b0 counter \u7684 classname \u5c45\u7136\u4e5f\u4ecd\u7136\u5b58\u5728 \u6240\u4ee5 \u731c\u6d4b\u662f\u5426 vif \u4e0e velse \u5e76\u6ca1\u6709\u9500\u6bc1\u539f dom \u53ea\u662f\u6700 dom \u6211\u8bb0\u5f97 vfor \u573a\u666f\u662f\u6211\u5728\u4f7f\u7528 vfor \u5bf9\u4e00\u4e2a \u7ec4\u4ef6\u8fdb\u884c repeat list index \u4e3a \u4e2d index vue \u7248\u672c\u662f", "num": "4708", "d": "1/2017"}, {"title": "", "body": "li ul", "num": "4707", "d": "1/2017"}, {"title": "image render improperly listrendering", "body": "new nt know vue support use vrepeat render list list unshifts new item vue reuses dom rebind data however image show old one loaded uncomfortable network slow mobile phone struggled choose way resolve develop directive togglling visibility around loaded time image vue work around shift new item new image loaded", "num": "4706", "d": "1/2017"}, {"title": "entering value text input resets unconnected select box", "body": "select list input select item enter value input box select value gets reset vuejs version amp works correctly reproduction link steps reproduce select item select list enter anything text input expected chosen item select list item stays selected actually happening select list item reset", "num": "4705", "d": "1/2017"}, {"title": "checked state bugged using checkbox checked truefalse state vuex", "body": "seems fixing bug created new bug checked binding using combination vuex states maintaining checkbox states code example checked set true false whenever active filter array seems component updated via vuex checked stated nt get updated like application state managed almost totally vuex vuejs version reproduction link howto reproduce selecting several checkboxes like brands use browser back button fallback previous states managed popstate event uses vuex actions update actively new state expected checkbox go depending previous action new current state actually happening everything get correctly updated value wise except checkbox nt honored update checked truefalse keeps previous state selecting multiple eachother navigating back forward looks like beat missing last changed checkbox code goes full github repo reading docs vuex seems best practise like work worked like charm seems really fixing bug triggered bug created", "num": "4704", "d": "1/2017"}, {"title": "generic von syntax without argument", "body": "special syntax somewhat inspired let take component example html export default methods handleevents type args consolelog event type args handleaction args consolelog action args call method event emitted following signature call methods call method event emitted usual signature mix everything store reactive property html export default data handlers handleevents action handleaction methods handleevents type args handleaction args props could allow making specialized components generic ones much easier html import modal componentsmodalvue export default name uiinputmodal props modalprops value placeholder string example expose interface component props events making specialized news propsevents premade template want take look working proof concept", "num": "4703", "d": "1/2017"}, {"title": "custom transition component triggering ignoring done inside leave hook", "body": "vuejs version reproduction link steps reproduce click section inside console see pressing button section section content leaving instantly whereas section fading pressing button section content section fading whereas content fading see hooks also triggered different order expected sections fadeinfadeout section section instead disappearing immediatly seen section section actually happening depending order elements animated differently put order problem vice versa", "num": "4702", "d": "1/2017"}, {"title": "firing selection change", "body": "vuejs version reproduction link steps reproduce use internet explorer change selection field next wo nt fire expected method called fires actually happening nothing internet explorer chrome firefox method triggered expected", "num": "4701", "d": "1/2017"}, {"title": "using modifier self mousemove event working", "body": "methods onmousemove e consolelog etarget wan na consolelog always print div synonymlistwrapper using mousemove onmousemove event target would child element li element ul element using mousemoveself onmousemove event onmousemove never triggered", "num": "4699", "d": "1/2017"}, {"title": "things arise using textarea", "body": "issue hopes see understand vuejs version reproduction link demo steps reproduce add picture delete pictures previous step next step save database expected value textarea store last store value inconsistent save database actually happening vmodel textarea store value value always save data vmodel display correct note bug way", "num": "4698", "d": "1/2017"}, {"title": "vuerouter refresh", "body": "vuejs version reproduction link deployment vue app iis refresh page spa component go error", "num": "4697", "d": "1/2017"}, {"title": "working safari", "body": "issue safari vuejs version posted issue find anything issue release notes comments works chrome firefox safari called works well chrome firefox safari function called safari ps testing osx", "num": "4696", "d": "1/2017"}, {"title": "defines name props", "body": "component properties converted name vm member variable personally think provide relevant configuration modify component property name example use following code convert name attribute componentname member variable html export default props componentname name name type string", "num": "4695", "d": "1/2017"}, {"title": "warning error", "body": "remove error webpackprodconfjs var path require path var config require config var utils require utils var webpack require webpack var merge require webpackmerge var basewebpackconfig require webpackbaseconf var extracttextplugin require extracttextwebpackplugin var htmlwebpackplugin require htmlwebpackplugin var env configbuildenv var webpackconfig merge basewebpackconfig module loaders utilsstyleloaders sourcemap configbuildproductionsourcemap extract true devtool configbuildproductionsourcemap sourcemap false output path configbuildassetsroot filename utilsassetspath js name chunkhash js chunkfilename utilsassetspath js id chunkhash js vue loaders utilscssloaders sourcemap configbuildproductionsourcemap extract true plugins new webpackdefineplugin processenv env new webpackoptimizeuglifyjsplugin compress warnings false new webpackoptimizeoccurenceorderplugin extract css file new extracttextplugin utilsassetspath css name contenthash css generate dist indexhtml correct asset hash caching customize output editing indexhtml see new htmlwebpackplugin filename configbuildindex template indexhtml inject true minify removecomments true collapsewhitespace true removeattributequotes true options necessary consistently work multiple chunks via commonschunkplugin chunkssortmode dependency split vendor js file new webpackoptimizecommonschunkplugin name vendor minchunks function module count required modules inside nodemodules extracted vendor return moduleresource amp amp js test moduleresource amp amp moduleresourceindexof pathjoin dirname nodemodules extract webpack runtime module manifest file order prevent vendor hash updated whenever app bundle updated new webpackoptimizecommonschunkplugin name manifest chunks vendor configbuildproductiongzip var compressionwebpackplugin require compressionwebpackplugin webpackconfigpluginspush new compressionwebpackplugin asset path gz query algorithm gzip test new regexp configbuildproductiongzipextensionsjoin threshold minratio moduleexports webpackconfig require shelljsglobal envnodeenv production var path require path var config require config var ora require ora var webpack require webpack var webpackconfig require webpackprodconf var spinner ora building production spinnerstart var assetspath pathjoin configbuildassetsroot configbuildassetssubdirectory rm rf assetspath mkdir p assetspath webpack webpackconfig function err stats err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false n", "num": "4694", "d": "1/2017"}, {"title": "ca nt mount created hook", "body": "vuejs version stopped working thing latest attow reproduction link gt gt steps reproduce try mount vue instance createdhook work wrap mount nexttick expected instance mounted actually happening en error thrown uncaught referenceerror c defined", "num": "4693", "d": "1/2017"}, {"title": "class applied component extending abstract component", "body": "vuejs version reproduction link codepen outer class applied component el node try comment absract true line see class applying expected outer class must applied root component element actually happening outer class applied component extends base component abstract flag", "num": "4692", "d": "1/2017"}, {"title": "vue warning error", "body": "remove error webpackprodconfjs var path require path var config require config var utils require utils var webpack require webpack var merge require webpackmerge var basewebpackconfig require webpackbaseconf var extracttextplugin require extracttextwebpackplugin var htmlwebpackplugin require htmlwebpackplugin var env configbuildenv var webpackconfig merge basewebpackconfig module loaders utilsstyleloaders sourcemap configbuildproductionsourcemap extract true devtool configbuildproductionsourcemap sourcemap false output path configbuildassetsroot filename utilsassetspath js name chunkhash js chunkfilename utilsassetspath js id chunkhash js vue loaders utilscssloaders sourcemap configbuildproductionsourcemap extract true plugins new webpackdefineplugin processenv env new webpackoptimizeuglifyjsplugin compress warnings false new webpackoptimizeoccurenceorderplugin extract css file new extracttextplugin utilsassetspath css name contenthash css generate dist indexhtml correct asset hash caching customize output editing indexhtml see new htmlwebpackplugin filename configbuildindex template indexhtml inject true minify removecomments true collapsewhitespace true removeattributequotes true options necessary consistently work multiple chunks via commonschunkplugin chunkssortmode dependency split vendor js file new webpackoptimizecommonschunkplugin name vendor minchunks function module count required modules inside nodemodules extracted vendor return moduleresource amp amp js test moduleresource amp amp moduleresourceindexof pathjoin dirname nodemodules extract webpack runtime module manifest file order prevent vendor hash updated whenever app bundle updated new webpackoptimizecommonschunkplugin name manifest chunks vendor configbuildproductiongzip var compressionwebpackplugin require compressionwebpackplugin webpackconfigpluginspush new compressionwebpackplugin asset path gz query algorithm gzip test new regexp configbuildproductiongzipextensionsjoin threshold minratio moduleexports webpackconfig require shelljsglobal envnodeenv production var path require path var config require config var ora require ora var webpack require webpack var webpackconfig require webpackprodconf var spinner ora building production spinnerstart var assetspath pathjoin configbuildassetsroot configbuildassetssubdirectory rm rf assetspath mkdir p assetspath webpack webpackconfig function err stats err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false n", "num": "4691", "d": "1/2017"}, {"title": "\u5173\u4e8echeckbox", "body": "hi truefalse", "num": "4690", "d": "1/2017"}, {"title": "things arise using textarea", "body": "vuejs version reproduction link demo steps reproduce add picture delete pictures previous step next step save database expected value textarea store last store value inconsistent save database actually happening vmodel textarea store value value always save data vmodel display correct note asked forums people say complex situation resolved know hope resolved", "num": "4689", "d": "1/2017"}, {"title": "custom events must emitted lowercase", "body": "first time opening issue happy address concerns helping someone fiddle gitter noticed oddity sorry got open console get jsfiddle demonstrate issue vuejs version reproduction link steps reproduce register custom event listener component emit event callback triggered emit new event callback triggered expected events emitted match case custom event trigger callback caveat noted docs actually happening event triggered unless lowercase", "num": "4688", "d": "1/2017"}, {"title": "servercachekey generation vuex store", "body": "working vue application ssr lot pages components driven data coming contentful cms fed like implement component caching construct data currently available nt see workaround reason available called settles fires", "num": "4687", "d": "1/2017"}, {"title": "unshift array behaves unexpected way passing props", "body": "vuejs version latest reproduction link steps reproduce input value two text inputs press unshift button change values inputs press unshift expected recently inserted values prepended list actually happening values first submit prepended list description problem occurs props passed via vfor proxied local data properties rendered problem occur push method used modify array possible workaround add key vfor directive", "num": "4686", "d": "1/2017"}, {"title": "item index inside vforvif loop", "body": "interface item list based array items displayed vforvif loop like put index number visible item could vuejs expose kind counter visible items guess vuejs info internally would nice expose thanks sorry something already done see", "num": "4685", "d": "1/2017"}, {"title": "click reset button vmodel change", "body": "click input value empty vmodel still old value code", "num": "4683", "d": "1/2017"}, {"title": "vmodel every html tags", "body": "hello possible add vmodel tag example add tag use contenteditable attribute bad thanks", "num": "4681", "d": "1/2017"}, {"title": "ssr update warning message runtimestandalone builds", "body": "currently ssr warn like standalone build used ssr bundle vueserverrenderer using standalone build vuedistvuejs serverside rendering recommended use commonjs build vuedistvuecommonjs instead code run production mode setting nodeenvproduction server renderer supports template option regardless build using new build introduced vue probably read vueserverrenderer using standalone build vuedistvuecommon js serverside rendering recommended use runtimeonly commonjs build vuedistvueruntimecommonjs instead code run production mode setting nodeenvproduction server renderer supports template option regardless build using", "num": "4680", "d": "1/2017"}, {"title": "type\u4e3anumber\u7684input\u8868\u5355\u7ed1\u5b9a\u6570\u636e\u540e\u8f93\u5165 \u5f00\u5934\u7684\u6570\u5b57\u65e0\u6cd5\u4fdd\u7559", "body": "vuejs version vuecli vue reproduction link steps reproduce expected \u9700\u8981\u8f93\u5165 actually happening \u5b9e\u9645\u4e0a\u7ed3\u679c\u5374\u662f \u8bf4\u660e \u7528type tel number \u662f\u5141\u8bb8\u9996\u4f4d\u6570\u5b57\u4e3a \u7684", "num": "4679", "d": "1/2017"}, {"title": "devtools development defined", "body": "development \u6539\u6210nodeenv development defined \u9519\u8bef", "num": "4678", "d": "1/2017"}, {"title": "things arise using textarea", "body": "vuejs version reproduction link demo steps reproduce click left add picture add two remove front one expected find textarea data changed value shown start finish last one removed reason vmodel enter end textarea vuex current value stored contents inside result actually happening pictures textarea correspond one another textarea contents vuex stored inside contents time preservation database popup tips different data saved data case less preservation database poor performance page user clicks back forth operation possible previous step next step save database product demand also used method calculation assignment first problem following prompts least enter judgment ten words input ten words contents emptied click delete textarea appear two page refer link forms note asked forums people say complex situation resolved know hope resolved", "num": "4677", "d": "1/2017"}, {"title": "prop validation work correctly native constructors", "body": "binding value child value created native constructor validate correctly printing following console created jsbin demonstrate behaviour", "num": "4676", "d": "1/2017"}, {"title": "convenient operator hero address street instead vif hero amp amp heroaddress", "body": "hello vue lovers today realized something really miss vuejs liked operator explained good give quick example everybody knows problem get hero async want display subproperty like hero yet loaded get error like usually make something like socalled operator something like statements us really convenient way possible integrate something like vuejs would amazing", "num": "4675", "d": "1/2017"}, {"title": "post product created vuejs", "body": "hello vuejs vuerouter vuex helpers things super helpful awesome create online javascript editor vue post tool post explain people fast web apps vue golang link playcodeio", "num": "4673", "d": "1/2017"}, {"title": "textarea bind bug", "body": "vuejs version vuejs reproduction link english good issue also issued perhaps express clearly questions forum website issued problem almost week passed answered anxious waiting project online yet although small problem optimization point page performance think important business code complex first made gif link demo connection code know use page problem bug understand gif animation problem put array json object package number pictures address description information saved vuex inside page variable data piclist vuex corresponding know use page problem bug understand gif animation problem put array json object package number pictures address description information saved vuex inside page variable data piclist vuex corresponding uploaded picture picture address description information described push piclist page change inserted dom picture information textarea picture horizontal scrolling current selected picture used vmodel itemdescript bind textarea data changes vuex storage content textarea value value samei would like database data storage time steps reproduce test uploaded less equal three pictures problem picture iscroll rolling three pictures bound iscroll plugin three pictures strange fourth picture outside screen mobile end page fit upload total five pictures first three pictures described fill fourth also wrote fifth write time went back first one picture deleted set delete picture automatically move selected picture describe pictures write picture display textarea content time found description fifth picture although written fourth information displayed strangeat time textarea set display found textarea show exactly console piclist vuex corresponding data display correct page display normal expected actually want get result upload picture inserted page insert corresponding textarea dom editor user operation stepbystep must filled textarea ten contents word select operation next step meet requirements described order select next map delete operation selected position current image target first image meet requirements images uploading pictures delete pictures user edit textarea content save database want textarea content picture switch previous step next step switch content change save database actually happening described problems know clearly described know used wrong problem strange thing happened really hope someone answer question really places answer know write demo vue extension sites vue beginner one answer question tell write online vue example code also ok way", "num": "4671", "d": "1/2017"}, {"title": "freshly installed nodemodules error", "body": "developing vuejs couple weeks tried deploy production ran issue wanted test different system rebuild dependencies npm install however npm run dev nt work anymore nt change anything packagejson webpage gives following errors running vue development mode make sure turn production mode deploying production see tips unknown referenceerror h defined proxyrender eval vuecomponentvuerender eval vuecomponenteval eval watcherget eval new watcher eval vuecomponentvuemount eval vuecomponentvue mount eval vuecomponentvue mount eval init eval createcomponent eval logerror possible", "num": "4670", "d": "1/2017"}, {"title": "get infinite update loop warning data watching nan", "body": "think caused see", "num": "4669", "d": "1/2017"}, {"title": "arrayprototypesplice would trigger view update", "body": "error please see", "num": "4668", "d": "1/2017"}, {"title": "contents component slots early rendered", "body": "vuejs version reproduction link first second steps reproduce open two jsfiddle expected show items seconds u click run button actually happening firstly sorry poor english frist jsfiddle codes run successfully show items seconds u click run button second jsfiddle codes run failed typeerror try read property length null difference two jsfiddles line first jsfiddle put bar component slot foo second one itemslength instead bar component bar component render itemslength nothing else however different behaviors u change line jsfiddle items run successfully clearly vue reads properties sending slot fragment components u set null bar vif foo bar rendered set array items u output property null guess bug special design behavior slot", "num": "4667", "d": "1/2017"}, {"title": "class instance working computed definition", "body": "hi code javascript class people constructor name lastname age thisname name thislastname lastname thisage age class computed filteredpeople return thispeoplefilter person gt class data constructor thissearch thispeople new people santi aguilar new people paito moreno new people javier florian new people luisa cordoba class app constructor thisel app thisdata new data thiscomputed new computed var app new vue new app get following error happens methods class always defined nonenumerable implemented code solve javascript function getobjectkeys obj var keys objectkeys obj function initcomputed vm computed var keys getobjectkeys computed var index keys var key keys index istanbul ignore would think nt tested computed definitions problem also make filter keys always returns constructor object pd know use plain object use classes vuejs would way thanks", "num": "4666", "d": "1/2017"}, {"title": "extend template using vueextend", "body": "works well think way extend corresponding template without changing scope example like achieve like renamed confused current slot implementation title form inputs go save delete data return title base title apiurl null record methods saverecord axiospost thisapiurl thisrecordid deleterecord axiosdelete thisapiurl thisrecordid const personform baseformextend template data return title title apiurl apimy record id name age methods incage thisrecordage js merged usual base template blocks replaced new ones compiling template everything works within scope changed different wordsoptions api make sense better way intact vue principles end results", "num": "4665", "d": "1/2017"}, {"title": "vue changing typed arrays", "body": "vuejs version fiddle links reproduction link steps reproduce enter value first input box array value changes enter value second input box array value change expected value changed within typed array vue actually happening value typed array changing", "num": "4664", "d": "1/2017"}, {"title": "", "body": "\u4f7f\u7528vuerouter\u7684\u94fe\u63a5\u65f6\u53d1\u73b0 \u8fd9\u4e2a\u7ec4\u4ef6\u4f1a\u4e0d\u65ad\u521b\u5efa\u53ea\u8981\u5bfc\u822a\u53d1\u751f\u53d8\u5316\u5c31\u4f1a\u521b\u5efa\u4e00\u6b21thisuid\u5728\u53d8", "num": "4663", "d": "1/2017"}, {"title": "delimiters single file components", "body": "delimiters single file components working component vue custom message export default name mycomponent delimiters data return message component", "num": "4661", "d": "1/2017"}, {"title": "enter key handler select elements", "body": "vuejs version reproduction link steps reproduce assign event handler select element override default behavior opening element see expected would expect keyhandler method fire select element focus enter key pressed actually happening enter key presses select elements handled listener keys appear work fine see jsfiddle easy reproduction set focus select element press keyboard key handler called pressing enter key impact default behavior browsers enter key expand select list would like submit form data consistent inputs form behavior adding prevent modifier inline handler nt appear override behavior", "num": "4660", "d": "1/2017"}, {"title": "finding vmodel array works inlined", "body": "vuejs version reproduction link steps reproduce create list form inputs value needs found array expected able extract logic finding function actually happening works logic inline sure bug intended behavior", "num": "4659", "d": "1/2017"}, {"title": "strange binding behaviour", "body": "vuejs version reproduction link steps reproduce change input value click button value rolls back expected input value must touched actually happening input value rolls back origin value remove vbind disabled button works needed nothing happened", "num": "4658", "d": "1/2017"}, {"title": "scope ofn fninvoker", "body": "function fninvoker return function ev var single argumentslength single ofn ev ofnapply null arguments scope ofn different single", "num": "4656", "d": "1/2017"}, {"title": "modifier von except last one nt work one modifier used von multiple elements", "body": "vuejs version reproduction link steps reproduce clicks element expected event handler removed first click actually happening event handler except last one modifier removed", "num": "4655", "d": "1/2017"}, {"title": "textarea element default value bug vmodel bound array", "body": "hope textarea element default value blank textarea default value set textarea default value", "num": "4654", "d": "1/2017"}, {"title": "feature request dynamic subcomponents", "body": "hello situation like computed local subcomponents something like tests nt work exist using wrong feasible implement specific case custom data grid row cell components thank", "num": "4651", "d": "1/2017"}, {"title": "events listeners unbound reusing nodes", "body": "vuejs version reproduction link steps reproduce click toggle select value select expected error console actually happening select trying fire change previous adding attribute one selects workaround rorc", "num": "4650", "d": "1/2017"}, {"title": "race condition data overridden computed property", "body": "vuejs version reproduction link steps reproduce click set user department click set departments expected actually happening", "num": "4649", "d": "1/2017"}, {"title": "html vue correctly updated change model performed inside timeout", "body": "hi big structure data whose content changes dynamicaly want observe tiny variables simplicity made code triggered click code call timeout order sure pending works jquery vue others finished timeout change boolean variable associated html checkbox far seems html vue correctly updated change model timeout call vuejs version reproduction link provided codeexample click html checkbox timeout set called checkbox variable value changed code checkbox var vm new vue el test data checkbox true methods click function windowsettimeout function vmcheckbox true expected expect checkbox updated setting value actually happening variable correctly updated html checkbox", "num": "4648", "d": "1/2017"}, {"title": "uncaught typeerror arr function", "body": "choose approved choose reason open console try choose steps", "num": "4647", "d": "1/2017"}, {"title": "checkbox unchecking programmatically", "body": "expected behaviour one second counter equal checkbox must unchecked", "num": "4645", "d": "1/2017"}, {"title": "vfor data datas error", "body": "vuejs version vuejs old version also problem reproduction link jsfiddle steps reproduce error expected success compile template think variables parentheses like parameters vfor attach data wrong one parameter actually happening", "num": "4643", "d": "1/2017"}, {"title": "timing gap transitions", "body": "resolved gap still occurs repro", "num": "4641", "d": "1/2017"}, {"title": "vuetemplatecompiler compiling correctly", "body": "vuejs version specifically vuetemplatecompiler reproduction link steps reproduce im using vuejs works fine vuetemplatecompiler soon moved project compiler updated get errors compiled webpack script expected errors actually happening property method v defined instance referenced render make sure declare reactive data properties data option something need script vue files work", "num": "4640", "d": "1/2017"}, {"title": "safe navigation operator null property paths", "body": "feature request problem accessing data view template expression null object used like view rendered displayed value blank suppose template expression involves property path next example displaying name null book would throw null reference error typeerror read property name null workaround find workaround using conditional block like bookname abcd solution use safe navigation operator elvis operator similar angular help reducing lot conditional tags complex code", "num": "4638", "d": "1/2017"}, {"title": "use import throw error", "body": "vuejs version steps reproduce newest vuecli init webpack project import components npm run dev look expected console panel report prompt error message actually happening browser display blank throw error", "num": "4637", "d": "1/2017"}, {"title": "warning duplicated options", "body": "see repeatly defined option twice last one overwrite first one warning nt know matter error said defined cause actually defined", "num": "4636", "d": "1/2017"}, {"title": "property nt work using camelcase name custom template see example code", "body": "property testdata wo nt work unless changed testdata anything wrong camelcase miss something thanks lot vuecomponent test template hello testdata props testdata var app new vue el root", "num": "4635", "d": "1/2017"}, {"title": "missing data requested gracefully handled", "body": "note bug report believe behaviour may expected design probably follows best practices js case please close issue maybe treat feature idea vuejs version reproduction link steps reproduce call html code element defined yet crashes script jsfiddle example console information expected exception would caught gracefully ignored actually happening untaught typeerror stops execution script different account cases data provided asynchronously though api call instance available yet js script starts workarounds yes define defaults consumed calls actual data available leads lot code potentially amount data largecomplicated", "num": "4634", "d": "1/2017"}, {"title": "conditionally keepalive component cache goes wrong include prop dynamically changes", "body": "vuejs version vuerouter reproduction link steps reproduce b c back b back b c back b expected b cached enter activated lifecycle component b cached actually happening b cached mounted new one component b b cached", "num": "4633", "d": "1/2017"}, {"title": "space item index vfor loop work", "body": "expect output actually output", "num": "4632", "d": "1/2017"}, {"title": "\u7236\u7ec4\u4ef6\u5f02\u6b65 set \u5b50\u7ec4\u4ef6\u83b7\u53d6\u4e0d\u5230", "body": "\u7236\u7ec4\u4ef6\u5f02\u6b65 set \u5b50\u7ec4\u4ef6\u83b7\u53d6\u4e0d\u5230", "num": "4631", "d": "1/2017"}, {"title": "vif css empty", "body": "one vif empty work vuejs version reproduction link", "num": "4630", "d": "1/2017"}, {"title": "vue filter causes render error raw defined", "body": "vuejs version reproduction link fiddle actually happening custom filter app sample fiddle calculate time difference given datetime string data comes api thats based laravel component gets initialized error console sayin screenshot error remove filter everything workes fine thats want could also happen first rendering fine update date dropbox upload time update error app thx", "num": "4629", "d": "1/2017"}, {"title": "catch vue events similar way lifecycle hooks", "body": "hello proposal feature basically boils one thing catching vue events triggered way hook lifecycle events fiddle clearly show mind catching outside methods without using listener directly added vue instance called everytime event triggered think could also described custom lifecycle event perspective think fits nicely vue current design convenient way catch events multiple situations something like would make listening bigger internal changes component little cleaner think", "num": "4628", "d": "1/2017"}, {"title": "unit test warn infinite update loops leaves warning", "body": "changes scheduler code noticed warn infinite update loops test succeeds following tests fail contain following think leading false understanding happening probably warn infinite update loops clear debugging messages shown later", "num": "4627", "d": "1/2017"}, {"title": "vue file string variable include alert", "body": "use vuecli establish project webpack template file js variable include alert error code file like finally found happed include try write variable include like js let export default name hello data return alert bug use vue version thanks", "num": "4625", "d": "1/2017"}, {"title": "vmodel working properly korean chars ie", "body": "vuejs version reproduction link open link please steps reproduce type english characters input click search button see alert popup every characters typed input filed put korean characters english characters copy amp paste korean character input filed work properly types korean characters hit search button see alert pops english characters value input freezing modified via input filed expected alert properly characters including korean characters actually happening alert english characters typed korean characters vmodel looks like freeze typing korean characters vmodel change even english characters typed guess connected korean ime issue situation bit different cause happens tested though chrome amp ff works properly intended opinion reason issue unfinished compositing characters difference c amp p typing korean characters copy amp paste finishing compositing typing finishing compositing please check", "num": "4624", "d": "1/2017"}, {"title": "tool generate document vuejs", "body": "something like ngdoc vuejs", "num": "4623", "d": "1/2017"}, {"title": "visjs network amp vuejs working properly", "body": "hi using vis network vuejs created two simple applications none working properly first app problem delete first node nodes deleted browser console errors vuecomponent ovsnetwork template mytmp data return network null nodes id label id label id label id label id label edges options manipulation enabled true initiallyactive true deletenode function deletedata callback callback deletedata container second app problem applying method wrong labels displayed see example click button vue method executed updatedata var nodes id label id label id label three nodes reason nodes label browser console errors sure problem vue vis", "num": "4622", "d": "1/2017"}, {"body": "issue somebody please outline common cause problem", "d": "1/2017"}, {"body": "hello kgrosvenor thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "think proposed syntax quite confusing static inside loop nt make use represent think use case render function would make much sense since get full javascript flexibility really nt think adding micro syntax slots good idea", "d": "1/2017"}, {"body": "thank interest project please read contributing guide opening new issues warning pretty clear warning triggered unexpected scenario please provide repro give bit details expected behaviour", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help simply trying access property object make something like use computed property makes sure access existing object", "d": "1/2017"}, {"body": "see", "d": "1/2017"}, {"body": "chrome macos", "d": "1/2017"}, {"body": "looking archives old forum read", "d": "1/2017"}, {"body": "see created second account deveclipse looks like still nt read issue reporting guidelines relevant docs case missed case using webpack check please next time open post forums instead ask help come back found bug narrowed reproduction thanks", "d": "1/2017"}, {"body": "ca nt really post forums ip blocked nt know even registration blocked read documentations see code resolve gt require resolve resolver variable passed well guess try import function", "d": "1/2017"}, {"body": "reached help ip block", "d": "1/2017"}, {"body": "uhm posted hours ago", "d": "1/2017"}, {"body": "well good thing post right thanks", "d": "1/2017"}, {"body": "transition components abstract nt show parent chain refable intentional keep declarative possible use case directly use listener template", "d": "1/2017"}, {"body": "use listener template nt want couple transition action one way emit event trigger animation callback like component definition methods triggeranimationa change state trigger animation triggeranimationb thistriggeranimationa animationafinish gt change state trigger animation b correct seemed little verbose way go thanks", "d": "1/2017"}, {"body": "think would work definitely looks better refbased solution", "d": "1/2017"}, {"body": "bug gets parsed html parser vue sees valid expression want pass literal function entity encode ampersand want pass literal function escape javascript expects", "d": "1/2017"}, {"body": "fyi supports checkboxs bound arrays box", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "would binding type checkboxes work radio buttons storing selected radio item value array removing others values leaving values array intact might use store selections", "d": "1/2017"}, {"body": "andrisi unlikely radio buttons represent single value definition think better stick data structure aligns form inputs designed", "d": "1/2017"}, {"body": "form inputs display might represent ideal data structure home selectable features use checkbox features mutually exclusive house flat door colors use radio button still like store features list suites relational model vuejs data based surprise need workaround initial feature request would come handy setget functions vmodel", "d": "1/2017"}, {"body": "form inputs definitely represent least subpart data structure since already achievable computed setters nt think need add anything new api", "d": "1/2017"}, {"body": "posva yes requires us create computed property radio group getset function pair would support id param solution could cleaner lots radion button groups", "d": "1/2017"}, {"body": "computed property would gather getters setters together would imo cleaner edit nt know code writing looks like imagine", "d": "1/2017"}, {"body": "maybe nt understand solution computed property getset function radio group say doable course nt simpler add vmodel computedwithparam single computedwithparam one set id val one get id function", "d": "1/2017"}, {"body": "nt see difference think add jsfiddle show trying groups enough example", "d": "1/2017"}, {"body": "store form data structure natural form input bindings likely object create single computed property translates whole data structure desired format eg array", "d": "1/2017"}, {"body": "sure work somehow wanted avoid intermediate step lots code translate back forth single view data require even mingling sending data server data come props array manually added computed property", "d": "1/2017"}, {"body": "posva let say something based controls even implement set function instead vmodelset setprop called setprop name value", "d": "1/2017"}, {"body": "talking ofc looks silly simple example imo better approach would using object instead array keep mind computed setters getters generated hope helps cheers", "d": "1/2017"}, {"body": "tag child tag checkout updated fiddle", "d": "1/2017"}, {"body": "right understand bit lazy example still highlights issue said problem nt happen foriegnobject nt first tag component goes without saying would nt work outside svg tag app svg specified component calls component mentioned", "d": "1/2017"}, {"body": "please provide minimal reproduction fiddle", "d": "1/2017"}, {"body": "absolutely one shows problem see error console notice child component inside svg tag exact fiddle except foreignobject wrapped tag nt exhibit issue", "d": "1/2017"}, {"body": "reopening since sure expected maybe added list", "d": "1/2017"}, {"body": "text removed form ask question issue list repo exclusively bug reports feature requests simple questions please use following resources read docs watch video tutorials ask gitter chat room ask forums look forask questions stack overflow", "d": "1/2017"}, {"body": "lol resolved", "d": "1/2017"}, {"body": "default npm export runtimeonly build nt support compiling templates fly better yet may want use electron vue boilerplate", "d": "1/2017"}, {"body": "see thanks trying lazy avoid webpack since nt technically need electron would solve problem thanks info", "d": "1/2017"}, {"body": "behaviour different binding instead workaround use computed property custom select use directive instead", "d": "1/2017"}, {"body": "thank workaround worked great quite sure works anywhere docs explained", "d": "1/2017"}, {"body": "noticed neither custom select workaround demonstrated posva handle null option properly contrary originally stated first comment original select value null properly selects selected options added dynamically initially however toggle blue back selected show empty combobox instead selected edit completeness found workaround problem well would nice component developers updated fiddle following workaround see", "d": "1/2017"}, {"body": "actually value select dom element always string instead null empty string", "d": "1/2017"}, {"body": "use content displayed retrieving div size", "d": "1/2017"}, {"body": "appears webpackhtmlplugin issue please file issue", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "hello sorry added id end happen also correct id", "d": "1/2017"}, {"body": "solved error renaming indexjs file looks like bug", "d": "1/2017"}, {"body": "update webpack config", "d": "1/2017"}, {"body": "hi thanks filing issue simply key components work expected", "d": "1/2017"}, {"body": "fnlctrl got working thank much", "d": "1/2017"}, {"body": "please follow issue reporting guidelines opening new issues", "d": "1/2017"}, {"body": "hello lyquocnam thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "array syntax accept array style objects strings top level value direct css string", "d": "1/2017"}, {"body": "ooops apologies", "d": "1/2017"}, {"body": "added ieedge virtualbox running edge windows screencap reference errors popping console either edit noticing clicking john returns false extremely odd behaviour", "d": "1/2017"}, {"body": "worth pointing worked fine vue lt", "d": "1/2017"}, {"body": "although nt quite understand use case something like", "d": "1/2017"}, {"body": "hm quite solve issue use case want compile whole application templates within one single component file style script template sections deliver within package easier customization template modifications needed nt go directly components rather create xtemplate within html file overrides already provided template onecomponentfile idea could solve", "d": "1/2017"}, {"body": "using single file components", "d": "1/2017"}, {"body": "application using single file components yes", "d": "1/2017"}, {"body": "case possible singlefile components templates precompiled build time also allowing users arbitrarily overwrite component template sounds messy maybe consider using slots allow content composition instead", "d": "1/2017"}, {"body": "computed properties readonly want format values input create component put formatting logic", "d": "1/2017"}, {"body": "stefanosandes computed properties readonly", "d": "1/2017"}, {"body": "working intended setter hit argument would would tell field actually changed want computed property every field single property bulk", "d": "1/2017"}, {"body": "intended behavior use nonminified build see warning fixed", "d": "1/2017"}, {"body": "hmm list using generate option elements computed property constantly changes based several computed properties simply want first value selected means add another watcher computed property keep preselected value correct seems like lot work something worked simply", "d": "1/2017"}, {"body": "vorror quite getting nt first option example static option dynamically rendered based computed property say able hook", "d": "1/2017"}, {"body": "since give prop boolean type normal value missing prop bothers value passed prop cast boolean getting error happens", "d": "1/2017"}, {"body": "posva sometimes required use modals parent control state modal prop value prop parent trigger event", "d": "1/2017"}, {"body": "znck yeah remind read something similar able explicitly pass type prop probably feature", "d": "1/2017"}, {"body": "able explicitly pass type prop probably feature passing works bug prop provided user component naturally expected", "d": "1/2017"}, {"body": "nt think asking type missing prop false intuitive keep prop missing use type", "d": "1/2017"}, {"body": "znck yeah purpose would called edit nevermind issue", "d": "1/2017"}, {"body": "posva honestly way missing prop become would expect missing guess matter opinion thing pointed values like casted true also kind weird javascript empty string falsy value", "d": "1/2017"}, {"body": "boolean casting follows rule boolean attribute presence value casted true absence means false personally think bad idea differentiate state boolean props", "d": "1/2017"}, {"body": "mistaken actually already possible using vueloader", "d": "1/2017"}, {"body": "yes templates", "d": "1/2017"}, {"body": "working tests vueloader component using code works fine specific case rising syntax errors tried well", "d": "1/2017"}, {"body": "original object destructuring syntay nt require vbind either", "d": "1/2017"}, {"body": "facepalm nt know head sorry guys thanks", "d": "1/2017"}, {"body": "every rendering faithfully patch real dom virtual dom render function returns case returning virtual dom something like vue correctly resets input value template single way changing content input update data model might need two way binding update vm fixed", "d": "1/2017"}, {"body": "herringtondarkholme came say exactly variable method changed input value changed therefore never reset never set begin need use directive bind input values data model", "d": "1/2017"}, {"body": "makes sense thanks", "d": "1/2017"}, {"body": "thanks using vue read correct simonmurdock proposing vue allow multiple nodes eg text node element node component root right best knowledge afraid probably scope since code base strong assumption component root single node supporting text node outside root node would require total rewrite also introduce calamitous breaking changes", "d": "1/2017"}, {"body": "herringtondarkholme allow multiple nodes warn binding output placed root outside div code would expect error saying title rendered outside root node currently runs produces output", "d": "1/2017"}, {"body": "simonmurdock record add reproduction jsfiddle thanks", "d": "1/2017"}, {"body": "nt think replicate jsfiddle think webpack required replicate nothing change generated stuff immediately opening tag like", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described case asking question chat room forum beloved stackoverflow issue list repo exclusively bug reports feature requests thanks support", "d": "1/2017"}, {"body": "think bug", "d": "1/2017"}, {"body": "think bug please provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "1/2017"}, {"body": "reproduce particular scene u clone github try", "d": "1/2017"}, {"body": "use variable type boolean object wont work use boolean work scene", "d": "1/2017"}, {"body": "herringtondarkholme", "d": "1/2017"}, {"body": "project count reproduction reproduction minimal concise displaying issue nothing else make concise reproduction likely bug code library thus problem belongs forum issue tracker fine reproduction repo instead fiddle still concise explain result expected goes wrong", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "1/2017"}, {"body": "message created automatically mail delivery software message sent could delivered one recipients temporary error following address es deferred acmeideal gmailcom domain biomassives exceeded max emails per hour allowed message reattempted later copy message including headers received esmtps exim envelopefrom noreply githubcom id greg biomassives thu jan date tue jan dkimsignature crelaxedrelaxed dgithubcom hfrom replyto cc inreplyto references subject listid listarchive listpost listunsubscribe evan notifications githubcom replyto vuejsvue reply replygithubcom vuejsvue vue noreplygithubcom cc subscribed subscribed noreplygithubcom messageid inreplyto references subject vuejsvue ica nt dynamic add events tag custom grid component mimeversion contenttype multipartalternative boundary contenttransferencoding precedence list xgithubsender xgithubrecipient biomassives xgithubreason subscribed listid vuejsvue listarchive listpost reply replygithubcom listunsubscribe xautoresponsesuppress xgithubrecipientaddress greg biomassives contenttype textplain contenttransferencoding please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks receiving subscribed thread reply email directly view github contenttype texthtml contenttransferencoding quotedprintable please make sure read issue reporti ng guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks amp dash receiving subscribed thre adreply email directly view github mute thread", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "1/2017"}, {"body": "object expect see markup binding tested using latest dev branch value bound string renders properly", "d": "1/2017"}, {"body": "binding even text happens input checkbox though jan pm evan notifications githubcom wrote row object expect see markup binding value tested using latest dev branch value bound string renders properly receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "need provide reproduction otherwise nothing", "d": "1/2017"}, {"body": "seems working pen check differs client code come back needed thanks update using dynamic type inputs think might issue got warning codepen though", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "sorry evan new github issues main idea problem want edit entity getting data entity binding one property select sometimes appear selected one undefined value instead one related value retrieved callback", "d": "1/2017"}, {"body": "need actual code run identify problem familiar repro please read", "d": "1/2017"}, {"body": "works intended changing data sadly hairy behavior implementation specific would recommend using hint vue schedule updating dom manually problem vue schedules data changes watchers internally every watcher run hook get called data change gets chance captured executed wrapped change scheduled next update queue doc correctly warns changing state reason might misleading chrisvfritz idea", "d": "1/2017"}, {"body": "herringtondarkholme unless misunderstanding use case nt think even use computed properties watchers advantage updated even dom updates would made eg option removed state change initiated current user updated doc make clearer", "d": "1/2017"}, {"body": "sorry computed properties watchers part want make validity check dom changes used instead use watcher prop take account dom changes take place tick nt think use computed property want sure emit correctedverified value back parent component immediately possible", "d": "1/2017"}, {"body": "use computed property instead component still rerender emit updated value right case nt see advantage using computed property please disregard third paragraph comment nt make sense edit oh unless events emitted computed property function nt trigger rerender either case seems like duplicating state little bit think rather eat second render cycle", "d": "1/2017"}, {"body": "mean something like notice watcher parent component rather custom input using updated hook nt trigger second render cycle makes application brittle since parent component longer sole source truth example changed parent component passed dynamic props instead assigning initial data chance select could start invalid state also select would need rendered times value parent updated properly", "d": "1/2017"}, {"body": "oh see right better thanks", "d": "1/2017"}, {"body": "probably intended may missing something", "d": "1/2017"}, {"body": "yes intended behavior", "d": "1/2017"}, {"body": "explained nt make sense add listeners nt always render single element wrapper element required also take step back say slot simply proper mechanism want actual visual content expected provided parent component thing component fact providing implementation method case scoped slots actually looks like plausible solution however providing javascript method component first place simply javascript module exports method instead importing component try compose template using esoteric techniques simply import method use js import logout authservice export default methods logout point want encapsulate common markupstyling suggest allowing customizations via props instead slots", "d": "1/2017"}, {"body": "thanks insights example perhaps bit simple right importing method would better case idea behind reusable components creating provide functionality eg logout button something complex like navigation control automatically populated well default look feel using style guide apps implement components without involved implementation still override styling classes also custom elements complex scenarios scoped slots might indeed way go", "d": "1/2017"}, {"body": "please take time make reproduction jsfiddle instead sharing whole project also narrow issue appreciate thank", "d": "1/2017"}, {"body": "html item toggle export default data function return items active methods beforeenter function el elclasslistadd beforeenter enter function el elclasslistadd enter afterenter function el elclasslistremove beforeenter beforeleave function el consolelog leave getcomputedstyle el display leave function el elclasslistadd leave consolelog leave getcomputedstyle el display consolelog elclasslist afterleave function el elclasslistremove enter leave toggle function el thisactive thisactive gt thisactive transition transition linear position fixed top display block beforeenter left enter left enterleave left posva made example leave span class transition enter transition enter leave animations nothing happened span disappear", "d": "1/2017"}, {"body": "calling callback enter leave", "d": "1/2017"}, {"body": "posva using javascriptonly transitions done callbacks required enter leave hooks otherwise called synchronously transition finish immediately done callback optional used combination css obviously using css transition", "d": "1/2017"}, {"body": "remove need help please head forums open topic people help cheers", "d": "1/2017"}, {"body": "posva tested solutions neither make sense", "d": "1/2017"}, {"body": "done callback required although using css adding classes via javascript auto css transition handled vue", "d": "1/2017"}, {"body": "hi smolinari thanks report almost perfect thing missing would small reproduction jsfiddlenet similar service could add one look also failing example element parent template never closed typo code example real app well thanks", "d": "1/2017"}, {"body": "hey linusborg thorsten see put together jsfiddle missing closing tag typo corrected scott", "d": "1/2017"}, {"body": "jsfiddles double named slots lt works dynamic slots lt works change true slots change places mix lt nt work interesting jsfiddle least renders results however dynamic slots nt work scott", "d": "1/2017"}, {"body": "thanks quick resolution kind service another reason know vue great choice scott", "d": "1/2017"}, {"body": "moved relevant repository bad nt read correctly", "d": "1/2017"}, {"body": "install packages yarn good go", "d": "1/2017"}, {"body": "install yarn brew made npm broke find semver module reinstall npm fixed use yarn install package lint still exec fail vue libo npm run lint verbose npm info worked ends ok npm verb cli usrlocalbinnode npm verb cli usrlocalbinnpm npm verb cli run npm verb cli lint npm verb cli verbose npm info using npm npm info using node npm verb runscript prelint lint postlint npm info lifecycle vue vue npm info lifecycle vue vue vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings npm verb lifecycle vue unsafeperm lifecycle true npm verb lifecycle vue path usrlocallibnodemodulesnpmbinnodegypbin volumestranscendcodevuenodemodulesbin usrlocalsbin usrlocalbin usrlocalsbib usrlocalbin usrbin bin usrsbin sbin npm verb lifecycle vue cwd volumestranscendcodevue npm info lifecycle vue failed exec lint script npm verb stack error vue lint npm verb stack exit status npm verb stack eventemitter npm verb stack emittwo npm verb stack eventemitteremit npm verb stack childprocess npm verb stack emittwo npm verb stack childprocessemit npm verb stack maybeclose npm verb stack processchildprocesshandleonexit npm verb pkgid vue npm verb cwd volumestranscendcodevue npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint verbose npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm verb exit true npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog", "d": "1/2017"}, {"body": "probably caused eslint configuration reproduce local machine clean clone install eslint prefer local configuration global one would like recheck eslint", "d": "1/2017"}, {"body": "check global config eslint global config make node crash exit status", "d": "1/2017"}, {"body": "believe configuration problem error message indicates eslint using local configuration confident seems path strange maybe clean cloning installing directory full permission generate different results", "d": "1/2017"}, {"body": "work vue libo node nodemoduleseslintbineslintjs src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings work vue libo npm run lint vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog work vue libo eslint src build test oops something went wrong eslint could nt find plugin eslintpluginflowtype happen couple different reasons eslint installed globally make sure eslintpluginflowtype also installed globally globallyinstalled eslint find locallyinstalled plugin eslint installed locally likely plugin nt installed correctly try reinstalling running following npm eslintpluginflowtype latest savedev still ca nt figure problem please stop chat team", "d": "1/2017"}, {"body": "work eslint global config check found something call eslint", "d": "1/2017"}, {"body": "remove global path try source directory report error", "d": "1/2017"}, {"body": "hello leonardovilarinho thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help hint probably fact babelloader nt convert files plugins use classes works files", "d": "1/2017"}, {"body": "thanks feedback sorry disappointment design process pretty open alphabeta phases community plenty feedback many affected outcome final released simply bit late feedback point twoway binding change discussed many times design process nt really feel like repeating thing short story found less maintainable less flexible props events pattern recommended also particularly constructive go nt like removal particular feature project lost way respect personal impression tend believe otherwise based combined feedback community whole overall believe clear improvement nt plan bring breaking changes fix foreseeable future ps please note contribution guidelines explicitly stated issues fit general feedback like better post forums", "d": "1/2017"}, {"body": "thank reply evan", "d": "1/2017"}, {"body": "example success vue dev quasar framework refactor get framework working vue took weeks refactor quasar using well written migration guide said rough patches get also said upgrading vue like keeping toy opposed spaceship safely say efforts get going vue well worth scott", "d": "1/2017"}, {"body": "nt declare set empty object even reactive fixed", "d": "1/2017"}, {"body": "either need cast reify", "d": "1/2017"}, {"body": "weird using templates work fine", "d": "1/2017"}, {"body": "yes template works find render function compiled vuetemplatecompiler using rollup posva basically plugin template", "d": "1/2017"}, {"body": "znck tested locally updating dependencies everything works fine maybe vuetemplatecompiler outdated", "d": "1/2017"}, {"body": "share generated render function", "d": "1/2017"}, {"body": "work webpack rollup build maybe rollup plugin deps outdated", "d": "1/2017"}, {"body": "okay update moving peerdeps", "d": "1/2017"}, {"body": "compiles compiles", "d": "1/2017"}, {"body": "issue method", "d": "1/2017"}, {"body": "looks like chrome event propagated triggered div well sure anything vue meantime utilize modifier like", "d": "1/2017"}, {"body": "yes probably chrome vue patches dom faster event propagates soon event reaches divitem callback already reattached", "d": "1/2017"}, {"body": "works add keys vue reuse div instead destroy create fresh one velse part", "d": "1/2017"}, {"body": "linusborg thanks right", "d": "1/2017"}, {"body": "events styled checkbox captured semantic script modified fiddle add click event counter imo file bug semantic repo", "d": "1/2017"}, {"body": "using events instead events checkboxes trigger updates however based znck showed consider bug semantic ui styling checkbox affect click events element", "d": "1/2017"}, {"body": "encounter issue found solution using pure css version semantic ui checkbox remove checkbox call eg remove hidden class checkbox become unclickable add label tag inside even label content styled checkbox shown checkout fiddle thanks znck", "d": "1/2017"}, {"body": "vue fault use arrow function like use object shorthand syntax lt see babel transpiles code also article probably explain better", "d": "1/2017"}, {"body": "sqal right arrow function captures lexical case return undefined strict mode expected", "d": "1/2017"}, {"body": "could write since values directly available really want values updating one place able achieve scoped slots simply referring variable grid meant used inside elementlist example reference pointed doable render function nt dig since behaviour asking implicit version something already achieved doubt makes sense implement", "d": "1/2017"}, {"body": "yep looks like solution though would nice something looks simple front example kindly provided simple syntax would maybe readable actually nt know complex find children elements according props slot pass parentdefined props hard would really awesome", "d": "1/2017"}, {"body": "dorseth prefer explicit way always rely implicit way means component depends parent reusable", "d": "1/2017"}, {"body": "achieve want using render function iterate vnodes find nodes add appropriate props requires bit familiar vnode structure nt anything extra vue needs expose allow", "d": "1/2017"}, {"body": "sorry bump quick dirty solution without render function looking maybe help someone write cleaner lib html import match jquerymatchheight import grid gridvue export default props width default height default xs type string md type string lg type string elems default extra type string default childextra type string default type string default wrapper type string default components grid created thisxs thisfxs parseint thisxs thismd thisfmd parseint thismd thislg thisflg parseint thislg thismd thisfmd thisfxs thislg thisflg thisfxs mounted thissamelength gt thissame matchheight byrow false data return fwidth parseint thiswidth fheight parseint thisheight", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "templates compiled render functions entire function called whenever component updates means templates never contain side effects put lifecycle hooks instead", "d": "1/2017"}, {"body": "compiler generates different code based wether tag component native tag element vs etc treated component use render native elements wontfix use branches want render different elements", "d": "1/2017"}, {"body": "html dom \u91cc\u7684\u6a21\u677f\u5728\u88ab vue", "d": "1/2017"}, {"body": "make sure lists", "d": "1/2017"}, {"body": "thanks lot sorry invalid issue new vue migrating vue codebase vue", "d": "1/2017"}, {"body": "please consult guide api docs property solves problem questions encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "linusborg thank much worked", "d": "1/2017"}, {"body": "slightly modified test like one triggers error also pinpoint line comment describes problem", "d": "1/2017"}, {"body": "hey thanks fast", "d": "1/2017"}, {"body": "full stack trace", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "happy report building reproduction noticed bug code fixing appears caused issue go away sorry taken time thanks", "d": "1/2017"}, {"body": "note example works bound", "d": "1/2017"}, {"body": "fixed example", "d": "1/2017"}, {"body": "znck well solution current case distributable components need preserve input value radios case example custom radios", "d": "1/2017"}, {"body": "supported component read docs input components", "d": "1/2017"}, {"body": "znck examples docs text inputs otherwise modify example custom radios compatible vmodel", "d": "1/2017"}, {"body": "provide prop different name map checkbox radio option value", "d": "1/2017"}, {"body": "posva ok checked state binding wo nt work value string case makes always checked", "d": "1/2017"}, {"body": "value used input value use different name value", "d": "1/2017"}, {"body": "posva mentioned ok checkbox nt work input type radio check example", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "bug field items list defined upfront vue ca nt pick changes field consider reactive fixed demo information please read", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "1/2017"}, {"body": "thinking may design better way structure data changes reflected currently option repopulate entire tree", "d": "1/2017"}, {"body": "updated fiddle updated please refer", "d": "1/2017"}, {"body": "supermeng \u8bf7\u6309\u7167 issuereportingguidelines \u6765 \u62a5\u544a \u63cf\u8ff0\u6e05\u695a\u6f5c\u5728\u7684 bug", "d": "1/2017"}, {"body": "parent template fault", "d": "1/2017"}, {"body": "thanks undavide seems bug looking", "d": "1/2017"}, {"body": "defcc simplified example make less random click within bar see", "d": "1/2017"}, {"body": "thanks posva", "d": "1/2017"}, {"body": "posva please help check issue nt got enough time follow days", "d": "1/2017"}, {"body": "browser seems triggering change event purpose nt manually trigger event side sure though needs research undavide may already instead listening event watch slider value reliable way", "d": "1/2017"}, {"body": "actually example posted implemented slightly complex scenario building interface photoshop plugin user drags slider andor directly types number stepper routine run either user press enter key stepper easy implemented done dragging handler ie drops nt need routine constantly run slider bound value dragging number properly mirrored stepper done thanks ways binding vmodel dropping function needs called could perhaps implement kind debounce function really far ideal case thank", "d": "1/2017"}, {"body": "imagined needed computation release maybe mouseup event works well", "d": "1/2017"}, {"body": "usage incorrect fixed", "d": "1/2017"}, {"body": "oh dude thanks", "d": "1/2017"}, {"body": "hi thanks filing issue however issue tracker reserved bug reports feature requests please use gitter forum stackoverflowto ask questions thanks", "d": "1/2017"}, {"body": "expected behavior vue try cast string number type return original string fails also reasonable always get delete input value case better deal userland", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "vuejs uses internally", "d": "1/2017"}, {"body": "right", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "dom \u4e2d\u7684 html", "d": "1/2017"}, {"body": "version", "d": "1/2017"}, {"body": "\u53ef\u4ee5\u54cd\u5e94\u554a", "d": "1/2017"}, {"body": "iburning", "d": "1/2017"}, {"body": "\u6211\u7528\u7684\u662f vue", "d": "1/2017"}, {"body": "works fine update vue version fix nt open new issue reproduction", "d": "1/2017"}, {"body": "vue \u63d2\u4ef6\u7684 github \u4e2d\u90fd\u6709\u8fd9\u6837\u7684", "d": "1/2017"}, {"body": "\u6709\u7684vue\u63d2\u4ef6\u662f\u4e00\u4e2a\u7ec4\u4ef6 components\u800c\u975e\u63d2\u4ef6 pluginapply function", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described may import use try something seems wrong webpack setup", "d": "1/2017"}, {"body": "posva sterilesummer \u5728 webpack \u4f46\u662f\u6253\u5305\u540e\u7684\u63d2\u4ef6\u9700\u8981\u624b\u52a8\u5f15\u7528 css vue npm publish", "d": "1/2017"}, {"body": "closing op said issue resolved", "d": "1/2017"}, {"body": "issue \u7528\u6765\u8ddf\u8fdb vuejs bug \u548c feature issuereportingguidelines \u6765 \u63cf\u8ff0\u6e05\u695a\u6f5c\u5728\u7684 bug \u6211\u57fa\u4e8e vueuse", "d": "1/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "issue web server configuration server needs set deliver page urls assuming nt endpoints server server service using deliver page", "d": "1/2017"}, {"body": "thanks issue vuerouter could open issue vuerouter repository next time rpkilby skaterdad mentioned duplicate could get information", "d": "1/2017"}, {"body": "skaterdad using linux box apache server development using osx", "d": "1/2017"}, {"body": "could file repo codebase filing issue", "d": "1/2017"}, {"body": "confirm issue scott", "d": "1/2017"}, {"body": "public email address associated github account", "d": "1/2017"}, {"body": "selected nt show email address github account settings", "d": "1/2017"}, {"body": "couple folks gitter channel also confirmed issue happening", "d": "1/2017"}, {"body": "also confirm issue guessing comment need public email address order sign using github", "d": "1/2017"}, {"body": "may auth callback url using https updated settings try", "d": "1/2017"}, {"body": "works fine thanks", "d": "1/2017"}, {"body": "worked thanks", "d": "1/2017"}, {"body": "first disable logs warnings setting see understand probably want hide warnings however would also welcome way exclusively turn warnings attribute use case generate html code pythonflaskwtforms use vue optional nice things would like keep javascript optional possible using attribute provide default values everyone people javascript activated still provide object values vue nt need warning", "d": "1/2017"}, {"body": "makes sense imo user explicitly uses provided option know fact input take value instead inline rendering warning believe result upgrade redundant", "d": "1/2017"}, {"body": "please nt project anger onto others", "d": "1/2017"}, {"body": "stated docs handle catches errors render runtime error occurs component render passed global vueconfigerrorhandler config function set demo might good enhancement make possible lifecycle hooks well optinions vuejsvue", "d": "1/2017"}, {"body": "considered error render happen rendering parent component", "d": "1/2017"}, {"body": "quite annoying noncought error stop spa working example using small catch around watcherrun flushschedulerqueue makes live easier error happens evaluating watcher", "d": "1/2017"}, {"body": "exists node vfor higher priority vif", "d": "1/2017"}, {"body": "repsacby said use tag", "d": "1/2017"}, {"body": "repsacby posva got thanks", "d": "1/2017"}, {"body": "moving discussion", "d": "1/2017"}, {"body": "thanks kellerlong need make jsfiddlejsbincodepen demonstrate issue us look please refer happen huawei", "d": "1/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "error result one children undefined still tracking template came", "d": "1/2017"}, {"body": "thanks glittle need provide reproduction repository steps us look please refer", "d": "1/2017"}, {"body": "seeing working everything fails error seems similar issue", "d": "1/2017"}, {"body": "already fixed latest version please provide jsfiddle reproduce", "d": "1/2017"}, {"body": "able resolve updating quasarframework maybe really vue issue least us clue coming though really much go blank white page error also could nt find related issue quasar repo", "d": "1/2017"}, {"body": "dominikbln makes sense frameworks like quasar ship precompiled components older versions component may compiled using older version vue template compiler basically causes version mismatch due different render function code generated glittle suspect due something similar find difficult provide reproduction could provide following information version vue upgrading party vue componentsplugins using", "d": "1/2017"}, {"body": "wo nt able easily close issue however possible include value may want put checks place used", "d": "1/2017"}, {"body": "glittle usually normalized filter values cases skip normalization phase performance optimization based static analysis template structure change introduced issue optimization behavior assumes render code generated newer versions template compiler could potentially runtime errors using party component compiled using older versions vue least case imagine running error seeing try upgrading dependencies latest version see makes difference nt probably still bug needs resolved information", "d": "1/2017"}, {"body": "thanks think issue upgrading everything problem went away problems one dependency critical removing app running", "d": "1/2017"}, {"body": "template outside app also prop needs lower case due html limitations", "d": "1/2017"}, {"body": "ok got problem nt export mixin var", "d": "1/2017"}, {"body": "opened instead please check issues similar one nt exist make sure provide repro found one may related edit nt need worry vue issue nothing going change code component tree looks like devtools", "d": "1/2017"}, {"body": "context component nt find parent childrens also parent inherits root element uitab parent uitabs uitab parent root wtf", "d": "1/2017"}, {"body": "think fact original developers licenses mentioned top code question satisfies rules mpl read section also think larger works may create larger work combining covered code code governed terms license distribute larger work single product case must make sure requirements license fulfilled covered code words cause vue using nt mean must follow license type scott", "d": "1/2017"}, {"body": "searching problem using piece code released apache license long leave notice replace line smolinari said need", "d": "1/2017"}, {"body": "smolinari pointed seems fine attribute specific covered code mpl means still usedistribute vue mit long keep mpl notice vue source code intact", "d": "1/2017"}, {"body": "thanks duplicate fixed via", "d": "1/2017"}, {"body": "hello subhapy thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "using instead dynamic key bindings", "d": "1/2017"}, {"body": "fault made mistake writing demo fixed demo using instead bug remains see updated demo expect rendering two transitions double click button transtions finished immediately triggering hook left second rendered element dom", "d": "1/2017"}, {"body": "\u8fd9\u662f popover", "d": "1/2017"}, {"body": "blakenewman testing well may provide feedback", "d": "1/2017"}, {"body": "discovered jestvuepreprocessor vire merges pr blakenewman saves need use webpack simplifies process thanks", "d": "1/2017"}, {"body": "hey yes playing around jest recently processor needs little fine tuning possibly ability hook apply custom languages one issue highlight coverage reports currently map back correctly experimenting get support little tricky possible provide sourcemap jest internal coverage mechanism moment nt think fully possible however could missing something", "d": "1/2017"}, {"body": "deed preprocessor even updates compiling well components got missing entire props definition example getting back precompile webpack need coverage moment anyway getting better time satisfied", "d": "1/2017"}, {"body": "miljanaleksic vire want let know keyboard thursday take look pr get back", "d": "1/2017"}, {"body": "ok elmariofredo check report issues found thanks", "d": "1/2017"}, {"body": "elmariofredo thanks update rush miljanaleksic use exotic reference branch packagejson test pr exotic reference supports yarn", "d": "1/2017"}, {"body": "blakenewman know already tested works found new issues think better address current changes merged", "d": "1/2017"}, {"body": "blakenewman pr merged", "d": "1/2017"}, {"body": "running issue regarding css modules use preprocessor jest style property nt getting created attempting render template breaks style undefined nt found preprocessor scripts take care seeing vueify ca nt reason vueloader well enough determine", "d": "1/2017"}, {"body": "joezimjs experience say vue jest preprocessors mature enough opted build pre testing running another build jest watch mode would trigger tests run pretty good", "d": "1/2017"}, {"body": "miljanaleksic work build include jest spec files set webpack config", "d": "1/2017"}, {"body": "joezimjs separate two steps first build package use dist files testing check working example vuikit next branch tests util file loads vue vuikit dist directly perfect want start experimenting jest good start", "d": "1/2017"}, {"body": "miljanaleksic completely different trying building application bundled file script runs immediately nt export anything importing bundle nt help one bit", "d": "1/2017"}, {"body": "joezimjs build process end returns script code want test firing build tests execution exactly jest autoexecutable script testable help lot still think nt please open new issue would unrelated topic", "d": "1/2017"}, {"body": "miljanaleksic build process returns entire application tests want test individual pieces application get access importing bundle belong feedback testing vue jest issue files need sort processing used script needed sort utility fully process single file spit javascript module like vueloader except needs work outside webpack unless way use webpack handle individual files without changing module system", "d": "1/2017"}, {"body": "joezimjs always create separate build return functions features want test without production execution seems referencing jest vue preprocessor", "d": "1/2017"}, {"body": "separate build definitely great create new entry file similar file imports everything need test reexports means edit file every time want test new file seems like work also seems like something nt need jestvuepreprocessor works great except completely ignores styles section css modules break style property vm", "d": "1/2017"}, {"body": "testing vue components test separately isolated mocking data environment one index build components like vuikit would job testing entire app behaves workflow etc perhaps jest domjs best tool case", "d": "1/2017"}, {"body": "right right index build probably way go something nt necessary feedback jest testing unnecessarily difficult test components using css modules", "d": "1/2017"}, {"body": "cristian carlesso published awesome post jest vue time refactor workflow", "d": "1/2017"}, {"body": "imo slots content distribution like holes ui filled anything component decides content go parent component know markup children need reorder slots use take forum", "d": "1/2017"}, {"body": "znck nt agree reordering even though slots reorder passing prop better solution reading order parent make slots component like mutable array least mutable named slots nesting html wrappers common usage nt seen opinion better solution child template overriding mixin maybe", "d": "1/2017"}, {"body": "components self contained entities theory component know surrounding way interact using specific problem post forum", "d": "1/2017"}, {"body": "plz check example znck named slots component nt need fetch content parent rendering yes got slots order nt", "d": "1/2017"}, {"body": "wrote something like something slot content something b slot content something c organize component display content parent maybe works slots level deal mentioned button img maybe would say combine two slots one two slots different scope props", "d": "1/2017"}, {"body": "ordered nested contents use default slot instead named slots", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests", "d": "1/2017"}, {"body": "jingsam default slots could nested", "d": "1/2017"}, {"body": "slot composition mechanism overriding seem misunderstand designed slots reordered parent exactly position slots inside child controlled child whole point slots however order elements distributed slot controlled parent nt see point nested slots makes lot complex obvious gain always use render functions feel achieve specific goal via slots open issue concrete proposal think may better solution stated several times already general questions posted forum please respect rule time maintainers", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests also note pointless raise discussions along lines maybe feature x good idea vue relied upon tens thousands users existing feature simply changed removed may good idea", "d": "1/2017"}, {"body": "html boolean attributes considered truthy value empty string vue treats boolean props way", "d": "1/2017"}, {"body": "bug misunderstanding compilation scope slots please read corected example please visit forumvuejsorg support", "d": "1/2017"}, {"body": "many thanks quick answer understand point slot compiled however find behaviour predictable especially way presented example let us believe override keep behaviour correct initial question slot default content trigger call method component correctly overrided slot trigger call method parent component ideal break context separation may missleading somewhere assuming bug could also use event bus send event wild everything else component could handle directly override default call appmodal close override default call app close direct examples probably better solution could think thanks", "d": "1/2017"}, {"body": "dont see confusing slot defaults defined child directives run scope child slot content defined parent directives run scope parent want pass template child child run scope look scoped slots docs", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen could start template already includes latest version vue", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "ping phanan", "d": "1/2017"}, {"body": "lmnsg issue \u4e4b\u524d\u8bf7\u53c2\u8003 \u4f60\u9700\u8981\u6309\u7167 znck jsfiddle \u6765\u5c55\u793a bug", "d": "1/2017"}, {"body": "closing due inactivity also seems working based yijixiuxin fiddle please open new issue reference one follow information list issue make sure key components reordered instead patched place", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen could start template already includes latest version vue", "d": "1/2017"}, {"body": "please use forum questions iirc thread exact topic", "d": "1/2017"}, {"body": "znck see thanks", "d": "1/2017"}, {"body": "cecilpeng use fixed fiddle use forum questions", "d": "1/2017"}, {"body": "fixed released soon", "d": "1/2017"}, {"body": "great thx sorry nt recognise issue", "d": "1/2017"}, {"body": "select multiple boxes keep going back ones seem properly update sure bug code", "d": "1/2017"}, {"body": "described issue seems skip last checked checkbox ran several tests code nt change since running works perfect seems changes reffered issue causing problem", "d": "1/2017"}, {"body": "gotcha fair enough leave experts", "d": "1/2017"}, {"body": "duplicate fixed via released yet", "d": "1/2017"}, {"body": "runned code dev branch issue remained especially state nt get updated click change event", "d": "1/2017"}, {"body": "fkobus build dev branch code", "d": "1/2017"}, {"body": "missed part running new fixes behaving thanks response", "d": "1/2017"}, {"body": "really like", "d": "1/2017"}, {"body": "hmm feel introduces way much syntax variations purpose benefits becomes bit flexible deal programmatic event handling templates however imo need level flexibility attaching event handlers better use render function rather adding new syntax templates", "d": "1/2017"}, {"body": "could syntax support extending templates would implement example", "d": "1/2017"}, {"body": "done render function vnode representing component parent tree directly pass data component makes component inherit props event listeners", "d": "1/2017"}, {"body": "jsx would", "d": "1/2017"}, {"body": "yes", "d": "1/2017"}, {"body": "also thought building custom transitiongroup component reason want take key section calculate fade upper direction lower direction based previous active section", "d": "1/2017"}, {"body": "fork working works provide id via data really interested first example nt work", "d": "1/2017"}, {"body": "following updates regards issue exactly issue custom javascript animation enter leave events seem triggered time first codepen", "d": "1/2017"}, {"body": "working version sot sure bug nt add labels", "d": "1/2017"}, {"body": "posva like example put blocks one transition element works really weird normally use transitiongroup multiple elements otherwise get warning", "d": "1/2017"}, {"body": "right skipped comment sorry", "d": "1/2017"}, {"body": "actually nothing vue simply behaves", "d": "1/2017"}, {"body": "version", "d": "1/2017"}, {"body": "use forum gitter questions html", "d": "1/2017"}, {"body": "znck trying consolelog refs empty object", "d": "1/2017"}, {"body": "use forum gitter questions forumvuejsorg", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "questions please use gitter forum stackoverflowto ask questions also vuerouter issues please open vuerouter repo", "d": "1/2017"}, {"body": "server iis solution", "d": "1/2017"}, {"body": "may help", "d": "1/2017"}, {"body": "works repro", "d": "1/2017"}, {"body": "paulocheque updating latest version vue seems fix issue", "d": "1/2017"}, {"body": "use case nt see point", "d": "1/2017"}, {"body": "closed inactivity feel free open new issue explanation use case", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "error message would like suppress message use minified build build production mode please read link message refer", "d": "1/2017"}, {"body": "use vuecli take good look update vue npm run build", "d": "1/2017"}, {"body": "ca nt reproduce vue latest webpack vuecli template really think bug please report repository template using want supports ask questions ask forum gitter", "d": "1/2017"}, {"body": "warning message nt anything except upgrade vue fron output webpack config supposed according doc really nt know warning message", "d": "1/2017"}, {"body": "extending abstract component component becomes abstract imo abstract components bindingsattributes defined props", "d": "1/2017"}, {"body": "abstract components designed render templates like decorators simply wrap componentselements via composition eg abstract components dom elements simply enhances slot children extending abstract component give concrete dom nt make sense also abstract mode publicly documented may change without notice avoid using unless really sure know", "d": "1/2017"}, {"body": "plan include abstract components doc", "d": "1/2017"}, {"body": "vue", "d": "1/2017"}, {"body": "error message already told please refer", "d": "1/2017"}, {"body": "use look", "d": "1/2017"}, {"body": "need define string literal within quotes example instead", "d": "1/2017"}, {"body": "vuecli prodenvjs moduleexports nodeenv production look", "d": "1/2017"}, {"body": "vuejs", "d": "1/2017"}, {"body": "buildjs edit vuecli generated file sorry since vuecli issue please open issue vuecli repo instead thanks", "d": "1/2017"}, {"body": "solve nodeenv production code error", "d": "1/2017"}, {"body": "en thanks", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "\u7528vfor\u6e32\u67d3\u6709\u72b6\u6001\u7684dom\u5143\u7d20 input\u7b49 dom", "d": "1/2017"}, {"body": "fnlctrl \u5728 mac \u4e0b\u7684chrome", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "fnlctrl", "d": "1/2017"}, {"body": "\u7ee7\u7eed\u6d4b\u8bd5\u4e86\u4e00\u4e0b \u7684\u786e\u6709\u95ee\u9898 \u6700\u540e\u4e00\u4e2a\u70b9\u51fb\u7684checkbox \u72b6\u6001\u4f1a\u51fa\u9519 last clicked remain wrong state chrome edge", "d": "1/2017"}, {"body": "fnlctrl bug actually happens checkbox still focused nt update purpose least makes sense text inputs may want reconsider inputs", "d": "1/2017"}, {"body": "fixed via", "d": "1/2017"}, {"body": "hi thanks filing issue closing seems usage question believe bug please specific problem provide minimal reproduction please nt copypaste code demo try remove code nt cause issue", "d": "1/2017"}, {"body": "html attribute names caseinsensitive converted lowercase browser converted browser general convention like follow always use kebabcase dealing html everywhere except attribute values case vue attribute values treated like js expressions", "d": "1/2017"}, {"body": "thanks clarification rule thumb makes sense suspected something nature still surprising tue jan pm matthew pietz notifications githubcom wrote html attribute names caseinsensitive converted lowercase browser von updatedpoints converted von updatedpoints browser general convention like follow always use kebabcase dealing html everywhere except attribute values case vue attribute values treated like js expressions receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "unfortunately something vue fix unless use string templates instead indom templates", "d": "1/2017"}, {"body": "understood would mind opened pull request docs making note tue jan pm evan notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread brian kung unicorn", "d": "1/2017"}, {"body": "intentionally limited props component caching tricky get right directly using vuex store state easily lead cache keys loose ie returning cached result actually needs rerender components need cached designed decoupled vuex stores accept props", "d": "1/2017"}, {"body": "component set data function references shared across component instances", "d": "1/2017"}, {"body": "check console warnings correct way access variables inside template fixed example", "d": "1/2017"}, {"body": "thanks quick action regarding warnings console referring main vue instance component x code based mentions define local data property uses prop initial value initial value props initialcounter data function return counter thisinitialcounter bit misleading also please explain different case push used code without warnings following docs", "d": "1/2017"}, {"body": "keying components child components reordered simply stay position receive new props child components use initial props update receiving new props either properly key components use props directly update", "d": "1/2017"}, {"body": "use computed property js index item data return items computed selecteditems return thisitemsfilter item gt condition", "d": "1/2017"}, {"body": "znck said guess vuejs info internally vue nt keep track", "d": "1/2017"}, {"body": "use computed property method filter array instead using inside", "d": "1/2017"}, {"body": "thanks znck fnlctrl perfect solution still two way sync base data", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "many edge cases need handled differently form elements best use dedicated library purpose otherwise vue core would bloated relatively lowusage use case bad", "d": "1/2017"}, {"body": "actually new dist file setup users likely using commonjs builds default check longer necessary", "d": "1/2017"}, {"body": "set input type number", "d": "1/2017"}, {"body": "znck reading doc nt think expected behavior cast result number modifier native input element allows user input leading zero defcc know better", "d": "1/2017"}, {"body": "currently vue handles input number type logic maybe need improvement behavior keep consistence native number type input", "d": "1/2017"}, {"body": "native input element allows user input leading zero revert real number instead basically value always treated number say current behavior correct", "d": "1/2017"}, {"body": "think good remove leading zeros number need leading zeros number probably want use input nt", "d": "1/2017"}, {"body": "something like social security number native input property always yield string value constraint user input digit decimal mark type necessary least mobile platforms informs browsers pop number pad user", "d": "1/2017"}, {"body": "something like social security number number perse value field floatingpoint number per specs", "d": "1/2017"}, {"body": "say number strict meaning use one aswell", "d": "1/2017"}, {"body": "close per spec se typenumber state appropriate input happens consist numbers strictly speaking number example would inappropriate credit card numbers us postal codes alternatives found", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "1/2017"}, {"body": "used build vue production mode refer", "d": "1/2017"}, {"body": "please use refer updated code", "d": "1/2017"}, {"body": "know however determine whether data store last store value method encounter demand must keep open", "d": "1/2017"}, {"body": "say expected instance actually type rather tested happens boolean usually used without operator return proper types", "d": "1/2017"}, {"body": "closing duplicate tldr nt want introduce nonstandard syntax expressions said existential operator ever lands javascript work templates", "d": "1/2017"}, {"body": "nt know write request", "d": "1/2017"}, {"body": "proper place", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests thanks", "d": "1/2017"}, {"body": "happierall nice work editor open source", "d": "1/2017"}, {"body": "smolinari thank sure editor must open source based ace editor open source", "d": "1/2017"}, {"body": "ah ok understand still good work scott", "d": "1/2017"}, {"body": "questions forum website issued problem almost week passed answered anxious waiting project online yet question answered skip issue reporting guidelines really find bug within vue make sure create repro fiddle please keep code short possible open new issue need add long explanation shorter makes clearer", "d": "1/2017"}, {"body": "sunriseshow \u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u6700\u5c0f\u5316\u7684 demo \u6765\u590d\u73b0\u4f60\u9047\u5230\u7684 demo \u653e\u5230 jsfiddler demo", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks depends last version basically make sure missing peer dependency yarn npm warn also make sure delete previous dir reinstalling modules", "d": "1/2017"}, {"body": "using jsfiddle vue global scope fixed", "d": "1/2017"}, {"body": "think bug please provide repro instead stackoverflow question", "d": "1/2017"}, {"body": "thanks using vue second example breaks intended reason quite similar compilation scope component slot must compiled parent template slot content fed container component case first example works pass null props component vue guards runtime error example design thanks understanding", "d": "1/2017"}, {"body": "herringtondarkholme close issue", "d": "1/2017"}, {"body": "please nt component options expected plain objects nt really see point using class class sake proper way use classes vueclasscomponent", "d": "1/2017"}, {"body": "got", "d": "1/2017"}, {"body": "hi thanks filling issue seems trying make template access two scopes parent time violates principal vue component system thus coupling implementation detail parent child really want way simpler approach would accessing eg inside recommended approach would passing everything via props using custom events parentchild communication eg inside inside", "d": "1/2017"}, {"body": "thanks fnlctrl familiar approaches provide problem vmodel bindings inputscustominputscomponents nt think currently way around proposal sure probably vue parentchild relation component specification extending template context using vueextend makes sense mind using basefrom lot personform probably end using js extend writing full templates", "d": "1/2017"}, {"body": "serves creating subclass vue create component instances later nothing templatescope etc though name may suggested talking merging two scopes example template bound want merged data methods available scopes nt seem good idea maybe try something like inside inside", "d": "1/2017"}, {"body": "vue reactivity system currently support typed arrays", "d": "1/2017"}, {"body": "vue awesome", "d": "1/2017"}, {"body": "maps", "d": "1/2017"}, {"body": "closing track along likely implement new data types reach significant support rate alternatively may ship mordern browser build leverages proxy makes supporting new data structures including less hacky", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks bug \u7684\u8981\u6c42\u63d0\u4f9b", "d": "1/2017"}, {"body": "delimiters option available standalone build single file components compiled statically changing delimiters via runtime option possible afaik practical reason change delimiters singlefile components except stylistic preferences", "d": "1/2017"}, {"body": "thanks explanation evan right practical reason change delimiters maintain coherence code", "d": "1/2017"}, {"body": "browser test osx sierra chrome seems work", "d": "1/2017"}, {"body": "fascinating windows chrome", "d": "1/2017"}, {"body": "confirm firefox windows behavior expected appears windows chrome issue", "d": "1/2017"}, {"body": "anyone idea rework around chrome bug close issue fixable vue", "d": "1/2017"}, {"body": "linusborg agree nickfederighi look see bug report already exists report", "d": "1/2017"}, {"body": "thanks help guys believe solved problem chrome windows seems difference browsers well windows vs osx chrome whether default select behavior triggered keyup keydown changing handler allowed intercept default behavior fixed jsfiddle", "d": "1/2017"}, {"body": "thanks scottbedard expected behavior vuejs generate code like hood", "d": "1/2017"}, {"body": "expected behavior vuejs value changes app gets rerendered input value reseted could use updated fiddler also could use", "d": "1/2017"}, {"body": "defcc behavior appeared vue prev releases breaking change cause say works start working like release specific", "d": "1/2017"}, {"body": "defcc say whole template rerender change input textarea value rolled back like input value", "d": "1/2017"}, {"body": "defcc need submit form ajax without bind values vue cant use vue correct", "d": "1/2017"}, {"body": "rhincodon check", "d": "1/2017"}, {"body": "rhincodon good usecase actually defcc pointed coincidence worked vue true could optimised need send data ajax put container element every child parent nt need vue otherwise put every child correct absolutely use vue", "d": "1/2017"}, {"body": "thanks rhincodon open issue", "d": "1/2017"}, {"body": "static value attribute added dom property introduced different behavior previous version related issue textarea different input element internal implemention", "d": "1/2017"}, {"body": "defcc posva thanks partially understand parts html binded inputs inside app template need wrapped", "d": "1/2017"}, {"body": "fact vue automaticly nt need keep mind could check doc details issue fix case", "d": "1/2017"}, {"body": "thanks hitvalley please follow issue reporting guidelines close questions could use official forum stackoverflow segmentfaultcom help", "d": "1/2017"}, {"body": "maybe bug use blank string literal instead empty array", "d": "1/2017"}, {"body": "want bound content array dotneet", "d": "1/2017"}, {"body": "\u6211\u7528 textarea \u6a21\u4eff multiple checkboxes bound array input typetext \u662f\u4e0d\u662f\u6682\u65f6 \u4e0d\u652f\u6301 \u5c06 \u7ed1\u5b9a\u5230", "d": "1/2017"}, {"body": "model \u7ed1\u5b9a\u5230\u591a\u4e2a textarea", "d": "1/2017"}, {"body": "\u8ddf\u540e\u7aef textarea \u5bf9\u5e94\u4e00\u4e2aid \u7c7b\u4f3c\u4e8e", "d": "1/2017"}, {"body": "\u76ee\u524d\u60f3\u5230\u7684\u89e3\u51b3\u529e\u6cd5\u662f \u5c06 vmodel \u8bbe\u7f6e\u6210", "d": "1/2017"}, {"body": "matmoo thank hoping documented like properties accept arguments would computed subcomponents possible implement logistically impossible", "d": "1/2017"}, {"body": "hi simply use computed property return component", "d": "1/2017"}, {"body": "number components known statically ok var components var component components components watch columns function columns change nt smell well", "d": "1/2017"}, {"body": "necessary declare subcomponents property actual component declaration", "d": "1/2017"}, {"body": "necessary declare subcomponents property actual component declaration necessary delcar components inside option since directly use component declaration eg please refer docs thanks", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "seems edge case updatelistener cur function type breaks fix", "d": "1/2017"}, {"body": "posva forked jsfiddle example found added run normally", "d": "1/2017"}, {"body": "jimczj yes makes function defined trying invoke", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "like understand problem goal set selected value instance editing record actual selections available render scott", "d": "1/2017"}, {"body": "would end game kinda like props component sent via prop prop would overridden select options nt rendered yet", "d": "1/2017"}, {"body": "way get selection options setting selected value scott", "d": "1/2017"}, {"body": "could seems like something vue could handle nt seem intuitive property gets overridden data gets loaded also catch developing may push bad code", "d": "1/2017"}, {"body": "options select consider application data ground rule personally always see application data priorty user data terms rendering words form make sure application specific data loaded render form first fill user created data take situation definitely nt mean right scott", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "sorry seems kind duplicate mine simpler ps checked bug tracker bug filling bug report closed bug code exactly", "d": "1/2017"}, {"body": "doublechecked bug thanks work", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks closing providing enough information therefore post looks like stackoverflow question issue report however find actually bug open new issue minimal reproduction", "d": "1/2017"}, {"body": "posva try going steps result error console guess core error else needed describe problem jsfeedle enought", "d": "1/2017"}, {"body": "describing problem enumerating steps get error may bug please take time effort report properly", "d": "1/2017"}, {"body": "understand must write words written code jsfiddle", "d": "1/2017"}, {"body": "changing select field programmatically function trying chose another select shows parent div dom catch error console", "d": "1/2017"}, {"body": "u close issue giddily fast without try see understand really bug", "d": "1/2017"}, {"body": "closing providing enough information therefore post looks like stackoverflow question issue report however find actually bug open new issue minimal reproduction think read issue reporting guidelines debugging found real issue event triggered element removed due englobbing go open another issue shorter simpler repro coming back", "d": "1/2017"}, {"body": "posva ok thanks waiting", "d": "1/2017"}, {"body": "limitation inputs focused update however get around running method", "d": "1/2017"}, {"body": "posva ok thanks", "d": "1/2017"}, {"body": "posva way right using watch", "d": "1/2017"}, {"body": "yes also works vmodel nt change input focused may end weird ux", "d": "1/2017"}, {"body": "vfor usage documented already however maybe could improvement case", "d": "1/2017"}, {"body": "true jsfiddle", "d": "1/2017"}, {"body": "relevant documentation variables parentheses interpreted properties single javascript objects contents arrays", "d": "1/2017"}, {"body": "syntax design braces indicate presence index key", "d": "1/2017"}, {"body": "solved reverted introduced breaking change transitions see example works need use different classname make work find details release notes", "d": "1/2017"}, {"body": "posva got thank much explanation unfortunately nothing mentioned believe documentation updated soon well anyway thanks fixing", "d": "1/2017"}, {"body": "ive realized vuejs version wrong didnt latest scriptonce updated everything worked fine", "d": "1/2017"}, {"body": "thanks suggestion fan idea introducing nonstandard syntax template expressions imo javascript much possible also deep path may may exist level access sounds like code smell modelstate predictable possible", "d": "1/2017"}, {"body": "throw error", "d": "1/2017"}, {"body": "thank found reason chrome plugin block error tip", "d": "1/2017"}, {"body": "hi thanks filling issue vue nt get detect duplicate property inside object literal automatically removed javascript engines eg need configure code editoride give warning", "d": "1/2017"}, {"body": "use testdata", "d": "1/2017"}, {"body": "html attributes caseinsensitive using nonstring templates camelcased prop names need use kebabcase hyphendelimited equivalents", "d": "1/2017"}, {"body": "using indom template nt support cased prop names please use instead zhangyufen suggested using vueloadervueify ok use cased prop names", "d": "1/2017"}, {"body": "right vue designed nt already read doc talks concern change detection caveat declaring reactive properties sections explains vue requires data rootlevel properties upfront scott", "d": "1/2017"}, {"body": "smolinari said", "d": "1/2017"}, {"body": "might wanted mention change time looks complicated track", "d": "1/2017"}, {"body": "linusborg yes like cache components see cached content hit back button want destroy last component order rerender enter sure describe situation clearly", "d": "1/2017"}, {"body": "thanks update", "d": "1/2017"}, {"body": "space required warning telling expression invalid", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "vue preserves whitespace two put line without whitespace using use option", "d": "1/2017"}, {"body": "line replace line good go", "d": "1/2017"}, {"body": "crswll said line error offset lt minute span raw seconds ago", "d": "1/2017"}, {"body": "holy sh sry didnt see took almost whole day kinda debug stuff thx quick response", "d": "1/2017"}, {"body": "fyi inspect stack trace thrown error points exactly error occurs code", "d": "1/2017"}, {"body": "hi thanks filling issue feature events component option removed along dispatch broadcast custom events emit meant parentchild communication already declaratively use inside templates listening events within component actually almost practical benefit adding listener eg catch selfemitted event since call method instead words custom events works best parentchild communication component using instead calling antipattern therefore option like nt really necessary", "d": "1/2017"}, {"body": "fnlctrl thanks comment nt exactly mind nest similarly methods proposal detecting event top level yeah methods best solution cases sometimes larger event would kinda neat treat almost like lifecycle event feature would used right could improve code readability", "d": "1/2017"}, {"body": "sometimes larger event would kinda neat treat almost like lifecycle event feature would used right could improve code readability nt know exactly use case would sounds like want promote method option improve code redability eg access write pluginmixin use adding lifecycle hooks", "d": "1/2017"}, {"body": "clear magically inferring event listeners toplevel options unlikely core easily implemented via userland plugin fnlctrl suggested", "d": "1/2017"}, {"body": "fnlctrl thank mixin replies guys something curious people would think yeah maybe would nt much use cases", "d": "1/2017"}, {"body": "oops think connected changes closing", "d": "1/2017"}, {"body": "files parsed using html parsing rules parsing html parser encounters considered ending current script block fact html file let browser parse also get syntax error escape closing script get around add note vue file documentation", "d": "1/2017"}, {"body": "tested ie korean ime worked fine may missing something usually never type language uses ime", "d": "1/2017"}, {"body": "sorry phanan could nt reproduce issue", "d": "1/2017"}, {"body": "picture recorded test ie korean ime windows blue block disappeared clicked button alert nt show last korean characters keep typing letters alert still show letters type characters composed letters like korean chinese blue block disappear work", "d": "1/2017"}, {"body": "tested seems bug nt fire middle writing something blurring input however listen event work around issue even done userland", "d": "1/2017"}, {"body": "kow closing issue violates contribution guidelines", "d": "1/2017"}, {"body": "tried remove vue examples first one still nt work expect think nt anything vuejs ca nt remove guess vis checks truthyness ids use string id works remove node second example actually work remove vue updating nodes works sure hope helps", "d": "1/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "danieldiekmeier yeah first example definitely nothing vue second example also sure nt work vue without vue everything works fine anyway thanks", "d": "1/2017"}, {"body": "using laravel vue however looks like issue happen use laravel pass data laravel controller blade template vue components", "d": "1/2017"}, {"body": "personally think may much edge case add special treatment current behavior actually gives ability decide whether content cached seems changes really necessary", "d": "1/2017"}, {"body": "hook think need manage animation purely js object higher scope like instance gsap eg would give options cancel reverse animations", "d": "1/2017"}, {"body": "otherwise maybe insight could dig stopreverse css transitions finish", "d": "1/2017"}, {"body": "hey lunelson thank reply unfortunately problem stopreverse animationtransition works well already problem transition reversed transition say finished vuejs still show component stopped transitioning see mean play fiddle drag little right let go component slides back original position vuejs replaces replace turn split second see none less", "d": "1/2017"}, {"body": "run run", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "run run \u5728 vuerouter\u7684\u914d\u7f6e\u91cc\u589e\u52a0 path test redirect \u53c2\u8003\u81ea", "d": "1/2017"}, {"body": "seems similar issue anyone help", "d": "1/2017"}, {"body": "bug seems persisted see two referenced issues", "d": "1/2017"}, {"body": "gd", "d": "1/2017"}, {"body": "issue reproduced end closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "still seeing similar problem running latest code example references github", "d": "1/2017"}, {"body": "njleonzhang deleted al local packages reinstalled nt matter", "d": "1/2017"}, {"body": "make sure local package consistent colleagues npm yarn", "d": "1/2017"}, {"body": "getting worse project growing ca nt even use chrome anymore every page always get mergehook error random anymore calls annoying", "d": "1/2017"}, {"body": "solution solution issue sircharleswatson worth got error realized turned experimental javascript chrome flags settings turning solved issue", "d": "1/2017"}, {"body": "worth got error realized turned experimental javascript chrome flags settings turning solved issue", "d": "1/2017"}, {"body": "sircharleswatson dude thank much looked flags page feature enabled turned restarted chrome solved happy thank much cc njleonzhang posva", "d": "1/2017"}, {"body": "posva linusborg hope help guys debug hopefully come fix maybe issue reopened since actually way reproduce", "d": "1/2017"}, {"body": "jessereitsma experimental features stable think wait error appears stable environment since error seems disappear production build new issue repo repro proper steps reproduce issue would great", "d": "1/2017"}, {"body": "thanks much works thanks", "d": "1/2017"}, {"body": "native fire event setting property invalid value jsfiddle think bit unexpected setting property vue would cause immediately overwrite property", "d": "1/2017"}, {"body": "also confused expected behavior may helpful mention form input bindings select section documentation", "d": "1/2017"}, {"body": "seems fixing bug created new bug checked binding using combination vuex states maintaining checkbox states code example checked set true false whenever active filter array seems component updated via vuex checked stated nt get updated like application state managed almost totally vuex vuejs version reproduction link howto reproduce selecting several checkboxes like brands use browser back button fallback previous states managed popstate event expected checkbox go depending previous action actually happening everything get correctly updated value wise except checkbox nt honored update checked truefalse keeps previous state selecting multiple eachother navigating back forward looks like beat missing last changed checkbox code goes reading docs vuex seems best practise like work worked like charm seems really fixing bug triggered bug created", "d": "1/2017"}, {"body": "fkobus please open new issue instead adding bottom closed ones thanks", "d": "1/2017"}, {"body": "vue version still problem", "d": "1/2017"}, {"body": "hello tried reproduce issue ca nt reploduction link anything missed", "d": "1/2017"}, {"body": "thanks looking checkout jsfiddle get back problem apps testing ie however also quite large nt much luck isolating problem last time try", "d": "1/2017"}, {"body": "ok think know hapenning unfortunately nt know reproduce jsfiddle basically code built webpack use strict case everywhere according mdn method called undefiend case strict mode thiswindow however enabled stays undefined would seem call raf detached window object strict mode throw error see would best practice fix would also seem case everything except ie good testing code using standard vue builder executes code eval statements hotreloading note ie following throws error example chrome firefox enough evidence issue get fixed", "d": "1/2017"}, {"body": "repro issue hot reloading ie create pr", "d": "1/2017"}, {"body": "ran app started silently failing errors visible firefox loading chrome worked showed cause assuming want make vue work chrome need make warnings cause firefox fall completely", "d": "1/2017"}, {"body": "found version firefox windows worked annoying seems related either running firefox inside vm doubtful something ubuntu version something way handled transition firebug builtin firebug merge first turned offer use builtin dev tools later think accepted realized mistake even firebug theme nt look really sluggish ironic since supposed performant native dev tool nt know revert long story short installed chromium dev browser use google chrome leisure browser thay way continue using separate unity shortcuts switch nt find resolution issue also tried firefox esr release think already displaying css issues something transform origin scrap posva sadly could nt figure completely remove firefox ubuntu install ealier version confirm infirm switched chromium agree likely vue related although encountered silent error scenarios maybe nt seen happen javascript tools maybe related babel build way outputting errors since unable make reproducible scenario understand closed", "d": "1/2017"}, {"body": "running latest versions firefox firebug mac see issue seems like legit bug", "d": "1/2017"}, {"body": "firebug one", "d": "1/2017"}, {"body": "posva nt buy asking everyone wants use software develop chrome good enough answer", "d": "1/2017"}, {"body": "asking everyone wants use software develop chrome good enough answer nt recommend chrome benefit vue devtools enjoy better dx firebug bug unrelated vuejs someone ever finds way fixing happily welcome pr running latest version firefox mac see issue still running firebug addon know maintained anymore firefox devtools integrate find issues around", "d": "1/2017"}, {"body": "find issues around interesting thanks confirming", "d": "1/2017"}, {"body": "yeah interesting one firebug seem broken completely consoleerror test typeerror dbg undefined fair enough nt support unmaintained plugins time move however want keep vue working cases could use", "d": "1/2017"}, {"body": "using vuejs identified issue strange issue related check jsfiddles one uses book appears one uses book appear ideas issue missing something", "d": "1/2017"}, {"body": "epub framework changing dom directly vue managing dom kinds sideeffects happen good practice manually update dom hierarchy vue manages", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "would great sub elements might transition delay preference would something flexible like posva suggested little full control steps", "d": "1/2017"}, {"body": "akryum example implies bug detection nt case since possible check target event bug", "d": "1/2017"}, {"body": "problem nested transitions detected nt think bug", "d": "1/2017"}, {"body": "okay see animations events transitions way determine nested ones finished explicit value probably best way", "d": "1/2017"}, {"body": "perhaps hack would transition nonchanging property separately force duration", "d": "1/2017"}, {"body": "currently still hack", "d": "1/2017"}, {"body": "certainly", "d": "1/2017"}, {"body": "higher level think strategy brings lot complexity unknown perf gain cases rerendering single component extremely fast also computed properties never used eg falsy branch never evaluated example html computed inside code assume truthy current behavior preevaluating render throw turns undefined technically breaking change makes nogo ultimately vue reactivity system designed immutable data structures intrinsically relies mutations able efficiently determine components need rerender nt think worth shoehorn able play nicer immutable data structures", "d": "1/2017"}, {"body": "yea looking precomputing indeed bad idea subjected many unpredictabilities fact already figured solution userland get precomputation functionality comes immutable structures initially thought manually passing prop values best approach rather referencing data root always changes order get best performance mutable props outside component however mean manually managing lot properties passed unwieldy avoid hassle manually passing props outside component markupcreateelement calls figured using custom higher order component approach sort like mapstatetoprops used redux implementations would good get around higher order component call initial render pass end passing precomputed leafed props hocs precomputation thus props final values passes wrapped component remains wrapped component skip rendering haxevx thinking ifwhen needed low priority implement macro used detect something like bindings used substitute regular computed getter fields may optionally also create full method dynamism similiar redux implementations detected also mixin fields accessible fully typehintedtypechecked props within current haxe component class context also would link underlying implementation higher order component refer prototype functions generated class would transparent enduser ie need call manually macro even better haxe supports inlining higher order component run inlined code well component class static function marked higher order component reference whatever long return explicit objdecl mapstatetoprops note without expando props static typing determined explicit set computedstoreprop static getter functions macro pick fields ast know exactly properties reference hoc rendering short need hoc dynamically iterate keys given mapstatetoprops object macro already knows beforehand object keys use generally though performing virtual dom resolution components nt bad anyway stlli fast enough though sure case components complex markup case higher order component filter pass might come useful", "d": "1/2017"}, {"body": "closing doable userland akryum already implemented one", "d": "1/2017"}, {"body": "found case may make sense see dev console every time click tab tabs rerender depend guess think need rerender fact nt case even props components still update want optimize performance reactlike may helpful", "d": "1/2017"}, {"body": "codincat case tabs forced update slot children technically means implement tabs solely depends prop incorrect slot children may changed accounted lead subtle bugs slot content tab component changes react use pure component purpose also always rerender prop always gets new reactelement references shallow compare consider different course try diff children nodes custom unlikely correct edge cases plus point much different rerendering containing component", "d": "1/2017"}, {"body": "modifiers except actually specific native events nt really make much sense components anyway think best keep component events simple use event name differentiate since ultimately different events rather event different behavior", "d": "1/2017"}, {"body": "aierui remove", "d": "1/2017"}, {"body": "vpre also disables attribute parsing though ie wo nt show since html escaping already done applications way disable moustache interpolation would nice currently setting delimiters long random string sort hacky", "d": "1/2017"}, {"body": "submitted pr review needed", "d": "1/2017"}, {"body": "mdreizin actually find mixin approach quite plausible since super common use case handled userland think better leave userland", "d": "1/2017"}, {"body": "posva thanks guys currently found workaround create really common solution post", "d": "1/2017"}, {"body": "use case trying implement react styledcomponents ca nt pass event handlers since bound parent instance tt would love able far javascript style vuejs components import insertcss insertcss import hash shorthash import tags htmltags import vue vue cache duplicated styles const cache new set get tag name like div return function accepts styling param string element valid html tag name return function style str function styled tagname return style gt const classname syntactic sugar call instead tagsforeach tag gt styled tag styled tag expose export default styled", "d": "1/2017"}, {"body": "rusintez get listeners second argument stateless render functions", "d": "1/2017"}, {"body": "completely forgot thanks", "d": "1/2017"}, {"body": "progress made area laravel community really needs something like vuejs concerned", "d": "1/2017"}, {"body": "basic ideas component properties parentchild communication please explicitly declare props need events emit technically impossible think must feature sometimes main dom element nt highest element component template ca nt know attributes added component want attributes transferred marked element fnlctrl rethink feature please help many framework developers", "d": "1/2017"}, {"body": "nt think implicitly routing html attributes event bindings internal html nodes good idea fact see behavior causing major headaches implicit bindings never good idea opinion trying pass html attributes directly component without declaring props also terrible idea components html nodes components treated want html node write html node use case easily solvable simply explicitly declaring attributes props populating component could also computed value return default event one props undefined", "d": "1/2017"}, {"body": "ajaxhttp layer frameworkagnostic ajax extremely important part web days basically saying users find way making framework work ajax whole point using framework nt figure things know ajax dom manipulations etc would use framework first place", "d": "1/2017"}, {"body": "ajax extremely important part web days basically saying users find way making framework work ajax really saying vue viewlayer library complete framework vue plays nicely pretty much ajax solution axious superagent vueresource ajax integrating vue works pracitcally ame import app use per readme nt see advantage importing vuespecific ajax solution many people would new api learn either way additional value offers nt install import fact retired vueresource exactly reason offered little benefit using something mature like ajax axios superagent also people need personally prefer people prefer different solutions nt want force one solution people might need generalpurpose ajax lib use framework technology clientside libarary example meteor feathersjs apollojs situations would unnessessary bloat include vue ajax implementation final bundle nt need provide ajhax support core extension wer back first point lack value compared established solutions", "d": "1/2017"}, {"body": "vue viewlayer library complete framework case makes perfect sense thanks followup", "d": "1/2017"}, {"body": "wrote changelog version need add classes elements leaving floor impact new ones coming personally created class makes elements absolute position added class attributes hope work guys jerome", "d": "1/2017"}, {"body": "bug back", "d": "1/2017"}, {"body": "please open new issue reproduction thanks", "d": "1/2017"}, {"body": "issue upgraded project generated vuecli months ago problem maybe declared peerdependencies vueloader solution may right one add library manually devdependencies generated project json devdependencies", "d": "1/2017"}, {"body": "error nt seem appear use believe still get functionality intentional", "d": "1/2017"}, {"body": "probably nt get functionality vmodel unless mistaken going happen get gendefaultmodel wo nt work properly select checkbox radio", "d": "1/2017"}, {"body": "nkovacs point use case creating generic text input component part ui toolkit wo nt used selectcheckboxradio specific components could used textemailpasswordphoneetc text input", "d": "1/2017"}, {"body": "updates issue envomer solved problem also trying implement datatables vue vue recompile datatable dom inside datatable drawcallback function make action buttons work datatable datatable drawcallback function settings var element appdatatable vm compile elementget work compile removed", "d": "1/2017"}, {"body": "chrislandeza try dynamic component instead demo", "d": "1/2017"}, {"body": "using vue meteor really miss feature meteor default frontend blaze ref available part party package part core possible core least plugin would valuable option", "d": "1/2017"}, {"body": "majority libraries uses window document clientoriented think instead asking everyone find solution problem better think global universal solution would solve problems glance thank", "d": "1/2017"}, {"body": "agree ramyou end forking libraries patching check environment would great incorporated vue way vue convert framework hells totally love sailsjs vuejs architecture kudos vuejs team regards", "d": "1/2017"}, {"body": "issue var todoapp new vue el app data displaytitle true displayaddtasks true displaytaskstatistics true displaytasks true displayprogressbar true", "d": "1/2017"}, {"body": "wontfix addressed via ability explicitly declare transition durations", "d": "1/2017"}, {"body": "chrisvfritz since vue utilizes objectdefineproperty convert instance data observed object inline expression without instance data would compiled bug suspect anyone would inline expression interpolation like good reason", "d": "1/2017"}, {"body": "intended work reusable components instance say party component order warn user needs know implementation details appjs import thirdpartycomponent thirdpartycomponentjs vueconfigignoredelements customelement new vue el root template components thirdpartycomponent alternative third party module modifies global config state seems antipattern similar better modules export component configs rather", "d": "1/2017"}, {"body": "onenewlife script requirejs \u62a5\u9519 \u53c2\u8003requirejs\u7684\u6587\u6863", "d": "1/2017"}, {"body": "cmal vuejs \u4f7f\u7528\u4e86 define html \u4e2d\u5f15\u5165 vue api requirejs amd", "d": "1/2017"}, {"body": "onenewlife \u521a\u5f00\u59cb\u662f\u76f4\u63a5\u5728html\u4e2d\u52a0\u5165script", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "computed vs filters", "d": "1/2017"}, {"body": "filters possibly bad performance since computed every render like methods computed properties easy cake recomputed necessary otherwise results cached means vue fly oh scott", "d": "1/2017"}, {"body": "hey fiddling get great concept", "d": "1/2017"}, {"body": "lock thread discussion long finished vue couple months critique drop filters largely subsided discussion thread productive see new angle topic think needs discussion please open new issue", "d": "1/2017"}, {"body": "like idea trim modifier like idea automatically trimming whitespace generally implicit arbitrary modifications data always bad thing", "d": "1/2017"}, {"body": "component html moved expected least worked hahah", "d": "1/2017"}, {"body": "\u5373\u4f7f\u4f7f\u7528\u4e86 disabled disabled", "d": "1/2017"}, {"body": "thanks great framework issue would agree niceue vuejs supports full power javascript expressions inside templates use template like strange vuejs supports syntax nt support bitwise wrote demo show strange behavior html n amp n js new vue el app data n alert amp alert html renders shows nt like nt thought perfect solution", "d": "1/2017"}, {"body": "xcatliu revisiting issue turn happier computed property bitwise issue also flexible filters still limited text interpolations vbind expressions", "d": "1/2017"}, {"body": "warning would great spent hour trying figure custom event nt responded answer camel cased name", "d": "1/2017"}, {"body": "warning corresponding component prop would respond version component prop make typo event much vue mean default existing event props like short", "d": "1/2017"}, {"body": "guidobouman template file child component actual event listened parent course took ages figure easy debug thinking would good warn camel case attribute would parsed forgetful folk like perhaps already discussed apologize", "d": "1/2017"}, {"body": "anthonygore unfortunately impossible browser converts html lowercase vue chance access", "d": "1/2017"}, {"body": "somewhat related stumbled upon thread searched eventtarget clicked element vue eventcurrenttarget always null turns due consolelog works thus consolelog event expanded browser console currenttarget always null however consolelog eventcurrenttarget contain element clicked stackoverflow explanation bug vue caused js consolelog works leaving users issue waste hours scratching head hope helps", "d": "1/2017"}, {"body": "simple work around create computed property output bool value let explain example yourcomponentfilevue script section data return myobject computed hasmyobject function return objectkeys thismyobject length yourcomponentfilevue template section", "d": "1/2017"}, {"body": "agreed would nice able tell changed array", "d": "1/2017"}, {"body": "thought try hand fixing vue looks like directive code executed props values populated loss chance seeing vue think current behavior considered bug documentation states possible", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "still valid vue work arraypush works find change unshift alters array correctly dom duplicates last element trackby thing work", "d": "1/2017"}, {"body": "rgigger need use attr vue", "d": "1/2017"}, {"body": "created private props ca nt track vue nt think reasonable props defined vue data props methods one scope vue define data prefix vue tell ca nt find prop", "d": "1/2017"}, {"body": "wtf document", "d": "1/2017"}, {"body": "\u4e0b\u9762\u7684\u4ee3\u7801 \u4e3a\u4ec0\u4e48\u8981\u89e6\u53d1 input \u4e8b\u4ef6\u5462 \u8fd9\u4e2a input dreampie", "d": "1/2017"}, {"body": "gongph", "d": "1/2017"}, {"body": "\u591a\u8c22\u4f60\u7684\u94fe\u63a5 fnlctrl", "d": "1/2017"}, {"body": "hi fnlctrl \u6211\u5728\u770b vladimir kharlampidi \u5927\u795e\u5c01\u88c5\u7684 html export default props active boolean methods ontabshow function e emit tab show e ontabhide function e emit tab hide e html export default methods onopen event consolelog button open emit button open event onclosed event consolelog button closed emit button closed event js import vue vue import vuewebpack srcvuewebpackjs vueuse vuewebpack const app new vue el app methods onopentest event alert hello html button", "d": "1/2017"}, {"body": "ps \u4e3b\u8981\u662f fnlctrl", "d": "1/2017"}, {"body": "sirlancelot nice solution whenever need computed property accomplish append computed property name computed would become personal convention sharing case someone finds useful", "d": "1/2017"}, {"body": "made simpler reference reactive properties return value guaranteed different every time way avoid performance overhead array operation original example sirlancelot though trivial cases also x z objects would give result every time xyz changed prevents watcher fired js new vue computed compoundproperty required reference properties thisx thisy thisz return different value every time return datenow performancenow", "d": "1/2017"}, {"body": "two cents watchers supported expressions could globally mix method would return way generate unique value define watcher would called every time changed demo watch expression define computed prop watch instead best way think ease creation computed field", "d": "1/2017"}, {"body": "sorry english \u6211\u7528\u7684\u662fvuecil phone \u6211\u7528\u4e86\u8fd9\u4e2a\u65b9\u6cd5 return detect incompatible browsers", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "lshnltt check", "d": "1/2017"}, {"body": "sterilesummer", "d": "1/2017"}, {"body": "gamadril question answer vuejs used together requirejs thanks", "d": "1/2017"}, {"body": "cmal yes would nt although recommend use bundlers like webpack", "d": "1/2017"}, {"body": "posva hi currently problem using vuejs requirejs add vuejs html tag requirejs props error described followed instructions given result use jquery way problem vue give opinions deal examples successed using vuejs requirejs thank much", "d": "1/2017"}, {"body": "cmal sorry last time used requirejs years ago recommend use something else bundling like webpack start remember post question forums locking keep quiet", "d": "1/2017"}, {"body": "package vue component web component could nt find examples far oh see gist provided shows would nice recipe accessible via official docs real life examples cheers", "d": "1/2017"}, {"body": "nt answer question question bind model select question preselect select element pretty different personaly need von change behavior preselect without binding model property need oneway databind", "d": "1/2017"}, {"body": "please nt comment closed issues years ago ask questions forumvuejsorg open new issue found bug thanks", "d": "1/2017"}, {"body": "vm watch array callback second parameter mutation component created hook expected log mutation object speak actual logs array reverted", "d": "1/2017"}, {"body": "hi crescentfresh issue made two years ago vue version find current docs", "d": "1/2017"}, {"body": "reading docs looking relevant code see information made available watchers know mutation event caused array change accurate statement", "d": "1/2017"}, {"body": "billxcode thanks lot problem errors tip helped days searching solution", "d": "1/2017"}, {"title": "events trigger often events view", "body": "hi events block using custom events fire often events defined view example adding jquery plugin tappyjs provides xdevice save click amp tap behavior bound element anchor tap callback using backbone event bindings like events tap elementone callbackone tap elementtwo callbacktwo tap elementthree callbackthree click bound elements would trigger callback times events setup", "num": "4121", "d": "1/2017"}, {"title": "stoplistening null removes registered callbacks", "body": "currently removes registered callbacks however think noop seems like would unintentional pass since simply call instead test logic expect current behavior causes fail", "num": "4120", "d": "1/2017"}, {"title": "routes without hash working page refresh", "body": "using backbonehistorystart pushstate true get rid url top created global event clicking href force router navigate routes issue refreshing page goes saying get use history anymore going back forth want know known solution fixed somehow backbone developer", "num": "4119", "d": "1/2017"}, {"title": "model removed collection even delete command failed", "body": "issue http delete request request fails model still removed collection", "num": "4118", "d": "1/2017"}, {"title": "protractor select heavily nested dropdown element", "body": "get protractor click links like user accounts within dropdown menu", "num": "4117", "d": "1/2017"}, {"title": "cuckoo sandbox installing issue", "body": "hi face issue installing cuckoo could u plz one tell suggestion issue already download sign communitypy wafb start cuckoopy still show error also try cuckoopy debug test show error msg plz help use tool python vmware winxp", "num": "4116", "d": "1/2017"}, {"title": "select drop menu", "body": "administrative tools user accounts suppliers resources tried element bymodel element bycss lidropdown gt adropdowntoggle click element bylinttext user accounts click anyone help", "num": "4115", "d": "1/2017"}, {"title": "saving changed attributes model multiply", "body": "think would good method without attrs first parameter save changed attributes example model expect send server yes call ca nt get attrs simple way ca nt use modeltojson unneeded fields modelchangedattributes last set obtain attrs think", "num": "4113", "d": "1/2017"}, {"body": "sounds like problem tappy behind scenes use delegate threearg version binds delegator view element might start", "d": "1/2017"}, {"body": "passing", "d": "1/2017"}, {"body": "situation arises unintentionally passing instance could expect cause stop listening however set dynamically listeners removed line executed intention line code", "d": "1/2017"}, {"body": "behaving intended general javascript apis making distinction antipattern", "d": "1/2017"}, {"body": "russplaysguitar isnt option", "d": "1/2017"}, {"body": "thanks reviewing clarifying intended behavior elgubenis yes pattern need remember use thanks", "d": "1/2017"}, {"body": "problem backbone server configuration pointing index file solution indexphp indexhtml apache server using nodejs solution depends framework use ect", "d": "1/2017"}, {"body": "using nodejs indeed start local server grunt dropped indexhtml url ok using routes least point right direction configure local server work hashless routes jan mateuszwrobel notifications githubcom wrote problem backbone server configuration pointing index file solution indexphp indexhtml apache server using nodejs solution depends framework use ect receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "google pushstate support nodejs", "d": "1/2017"}, {"body": "pass wait true like wait server respond removing model collection hope helps", "d": "1/2017"}, {"body": "well look reading documentation help sorry opening ticket creating needless noise", "d": "1/2017"}, {"body": "inappropriate", "d": "1/2017"}, {"body": "question nothing backbone", "d": "1/2017"}, {"body": "oops sorry nt noticed", "d": "1/2017"}, {"body": "discussed multiple issues see probably returns last changed attributes via call object regardless last diff attributes hash passed parameter bug model saved managed left backbone provides tools accomplish easily question stack overflow one best place get answer", "d": "1/2017"}, {"body": "yup yup thanks emileber", "d": "1/2017"}, {"body": "needed model went ahead made spirit backbone use personal extension backbone better simple followed merges defaults back model letting passed attributes override like initialization clears model attributes sets default attributes param object attributes overwrite defaults param object options pass set call return backbonemodel object chain function calls reset function attributes options options extend reset true options private method help wrap reset custom behavior child classes param object attributes overwrite defaults param object options pass set call reset function attrs options thisclear silent true set attrs options triggers change events addition custom event could easily customized trigger event think change events always trigger resetting model", "d": "1/2017"}, {"body": "see also", "d": "1/2017"}, {"body": "okay", "d": "1/2017"}, {"body": "way late party came across need extended backbonecollection base collection added wrap function like usage looks like cheers backbone users maybe cleanest syntax job minimal hackery", "d": "1/2017"}, {"title": "supported active lts version node conflicting obsolete ember docs", "body": "says ember prefers current active lts version node specifies nodejs links nodejs downloads page however linked page says current active lts maximum ember compatibility use nodejs realize ember doc may date could update confusing see conflicting statements dep versions happy help edits desire thanks", "num": "14893", "d": "1/2017"}, {"title": "objects always equal", "body": "javascript convention compare objects allow object implement method convert primitive compared looks like respect", "num": "14892", "d": "1/2017"}, {"title": "nt people would naturally expect", "body": "", "num": "14891", "d": "1/2017"}, {"title": "read property eventname undefined", "body": "got component conditionally rendered based value boolean boolean value changed action within component error thrown component removed view seems like introduced canary happening onward simple twiddle demonstrating seems related stack trace points block patched pivotaltopherbullock stack trace uncaught typeerror read property eventname undefined htmlbuttonelement htmldivelementdispatch htmldivelementelemdatahandle objecttrigger objectsimulate htmldocumenthandler clear updatableblocktrackerreset tryopcodehandleexception updatingvmframehandleexception disclosed anonymous dispatch elemdatahandle trigger simulate handler clear reset handleexception handleexception throw evaluate execute rerender thisrender runintransaction renderroots renderrootstransaction revalidate invoke flush flush end run run handler anonymous dispatch elemdatahandle", "num": "14888", "d": "1/2017"}, {"title": "ember test could find module moduleforacceptance", "body": "hello using embercli node os started new project tests documented tutorial test redirect rentals route function assert visit andthen function assertequal currenturl rentals redirect automatically test list available rentals function assert visit andthen function assertequal find listing length see listings running getting error uncaught error error could find module imported line", "num": "14885", "d": "1/2017"}, {"title": "isempty returns false negative tested object falsey size attribute", "body": "given object foo name foo size emberisempty foo return true expected return false causing weird issues passing records emberselectize records arbitrary size attribute default number", "num": "14884", "d": "1/2017"}, {"title": "quest module unification", "body": "quest module unification quest issue tracks highlevel tasks needed complete implementation module unification rfc ember module unification offers updated file system layout based updated pods structure well simpler set rules module must named leading significantly improved application boot time prior art exists created resolver implements module unification rules however resolver designed maximum compatibility testing feature designed take advantage performance benefits new proposal part work building glimmerbased apps monegraph dgeb reimplemented smaller moreperformant subset ember container resolver registry typescript open sourced components mit license hope serve basis ember older semantics still need support implemented compatibility layer top libraries apps nt need get maximum performance libraries glimmerdi container registry resolver interface glimmerresolver implementation resolver using module unification rules tasks x publish github x publish npm least commonjs x write readme generate api docs x publish github x publish npm least commonjs write readme generate api docs emberjs import package ember build x support typescript compilation files ember repo refactor inherit move tests cover api container tests passing refactor inherit move tests cover api registry tests passing create new embermoduleunificationresolver package ember resolver config inherit figure fallback mechanism mu dir embercli legacy globals resolution multiple resolvers one resolver fallback implemented internally likely latter since works today fallback deprecate default resolver one relies lookup anymore deprecate add lot code complexity write deprecation rfc update embercli blueprints generators use mu layout make new resolver log x import emberresolver x update resolver inherit x backwardscompatibility delegate oldstyle resolver rules something looked found x also export resolver module unificationonly rules x release new version npm ember cli build pipeline update embercli include new resolver update app blueprint use module unificationonly resolver instructions using old resolver file system compatibility needed update addon blueprint update build pipeline consume js tree must also still read update hooks pass tree peer hooks x additional ember cli build pipeline tasks x embercli requires directory present per emberappjs needs change upstream x embercli contstraining permits us look single place indexhtml example new resolver rules suggest look srcui first templates currently compile default export meaning name compiler needs know export template file named output module path developer ergonomics integrate mu migration tool ember cli automatically offer update apps new layout update x migration tool update app muonly resolver rearranged files lint applications warn app directory nt use fallback resolver app directory still using slower fallback resolver", "num": "14882", "d": "1/2017"}, {"title": "linkto fails apply active class nested transitionto within willtransition", "body": "created ember twiddle instructions illustrate problem nt active class applied correctly leaf route linkto component transitionto gets called inside willtransition action", "num": "14880", "d": "1/2017"}, {"title": "ember snapshot belongsto always return null inverse relation", "body": "relationship two models many b b belongs loading b sideloaded use inverse relationship b fine template however try use snapshot one loaded b models returns null supposed work come works template snapshot adapter said works fine template snapshot adapter also see debugger relationship stepping code edit created twiddle example check adapter log output pressing delete expected able resolve relationship adapter seen returns also seen works fine template", "num": "14879", "d": "1/2017"}, {"title": "failed find valid digest integrity attribute resource css file", "body": "hello everybody issue ember build app command line ember build environnementproduction upload website online problem integrity css ressource file identified caused happen unclear modification scss file get integrity error cancel modification everything back normal edit packagejson case", "num": "14877", "d": "1/2017"}, {"title": "transitionto queryparams initial render still broken", "body": "problem described still exists filing new ticket initial ticket already closed", "num": "14875", "d": "1/2017"}, {"title": "emberrsvp removed emberjscomapi documentation", "body": "discovered missing lists trying access update seems happened", "num": "14874", "d": "1/2017"}, {"title": "events bubble fired twice integration tests", "body": "ember twiddle bug seems similar events fired twice jquery event triggered first followed native event difference bug occurs integration tests event triggered one descendants dom node listening event", "num": "14867", "d": "1/2017"}, {"title": "array query params track mutation", "body": "link like one url link get updated mutated replace array different array bad bug clicking link still works expected clicked href link one nt update perhaps something take account new helpers part new route service reproduction twiddle", "num": "14865", "d": "1/2017"}, {"title": "backburner call instead", "body": "recently discovered bug application tests caught error actually crash inside ember router occurred action sent router transition route another router details important mistake could probably provide fiddle desired despite error tests continued actually passed left bad feeling acceptance test use qunitadapter ensure errors cause test failure decided dig see going normal stack exception test stack failed silently difference found contrasting rsvp error handling backburner error handling see rsvp error handling logic call dispatcherror defer set unfortunately backburner calls directly nt really possess whole lot knowledge embermetal looking ca nt see obvious reason backburner error handling could nt call instead directly calling thoughts sleep much better knowing error routed test suite", "num": "14864", "d": "1/2017"}, {"title": "configure indexhtml eg script src assetsvendorjs version", "body": "order force updated static assets load stubborn cdn looking method adding end references appindexhtml maybe indexhtml somewhere else might override custom value random number build tag ideas thanks", "num": "14863", "d": "1/2017"}, {"title": "undefined emberenvironmentlibglobaljs", "body": "eslint warning cleanup brake compilation grunt environment previous conversation issue opened issue repo cc andyhot", "num": "14859", "d": "1/2017"}, {"title": "performance emberutils assign expose objectassign polyfill", "body": "hello emberjs method basicly polyfill objectassign defined existent polyfill many internal packages import function directly emberutils native implementation existent never used internally ideia exposes functions js export function assign original polyfill implementation export default objectassign assign assignobjectassignassign let know guys think", "num": "14855", "d": "1/2017"}, {"title": "integration test nested components renders outermost component", "body": "upgraded application ember come across broken tests due components rendered seems specifically integration tests component uses another component inside example integration test looks like following import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile import loadappstate utilloadappstate moduleforcomponent modalsautomationrulesnewimagesensorrule integration component modalsautomationrulesnew image sensor rule loadappstate integration true test renders function assert thisrender hbs newimagesensorrule component renders another component defined called simpledialog testing purposes modalsmodaldialogsimpledialog buttonsbuttons titletitle targetthis classdialogclassnames smartrules rule buttonadc icon add textruletitle primarytrue onclick action createrule rule ruledescription modalsmodaldialogsimpledialog debugging test element rendered div testing purposes text inside something special need test nested components integration tests ember bug", "num": "14849", "d": "1/2017"}, {"title": "doc ember router documentation method", "body": "url scenario go url click methods see nothing", "num": "14847", "d": "1/2017"}, {"title": "computed using index array causes error using removeat", "body": "recreated twiddle click click add click click remove get assertion error using js splice remove object fires mandatory setter array property replaced object position applies watcher mandatory property may benefits applying mandatory setters array positions rather objects position ca nt see none perhaps mandatory setters nt set twiddle underlying object property still setter applied object removed computed longer fired aside nt know computed actually persist reapplied new object position", "num": "14846", "d": "1/2017"}, {"title": "add shorthand emberobjectcreate ember namespace", "body": "embera nativearray reason add example embero ember namespace", "num": "14844", "d": "1/2017"}, {"title": "arraycontentdidchange often call objectat objectat len", "body": "subclassing surprising mutation trigger happens checks triggering change events causes difficulties dematerializing records ember data removing unloaded records relationships done asynchronously would cause records rematerialized materialization lazy records retrieved sake check reported never fixed closed favour limited problem fixed one possible solution trigger changes based indices deletions additions mean change events triggered even case case today cc igort", "num": "14843", "d": "1/2017"}, {"title": "httpsonly emberjscom", "body": "hi surprised notice emberjscom still even available https let alone httpsonly done make happen anything help free certs available let encrypt aws acm could get free tls termination cloudflare note apply guidesemberjscom httpsonly cheers v", "num": "14838", "d": "1/2017"}, {"title": "tutorial templatesapplicationhbs contain full html page", "body": "tutorial please mention included full html page current text implies replaces default page contains full html page doctype tags page rendered blank", "num": "14837", "d": "1/2017"}, {"title": "queryparams name conflict nested route uses controller outer route", "body": "attempting upgrade ember encountered problem route nested inside another route use controller controller query parameter created ember twiddle reproduce problem go route get following error seems method method raised nt consider fact two controllers maybe okay nt actually know okay reason ca nt work means ca nt use query parameters nested route uses controller outer one motif employed extensively throughout app used work", "num": "14835", "d": "1/2017"}, {"title": "doc embertemplateshelpers code examples rendering filename correctly", "body": "impression code examples filenames rendered differently seems follow rule cc locks sclatter", "num": "14834", "d": "1/2017"}, {"title": "lookups noninjected objects", "body": "repeatedly stumbled across following problem create object using instead ca nt use inside also ca nt use within object order use understand technical reason also understand set owner object nt think satisfying workaround use case follows dashboard contain several widgets dashboard configuration along widgets class name stored database widget library extended party developers writing ember addon important topic main point mostly inexperienced developers widgets hold custom objects classes extending custom objects use services need owner course creating object think passing owner time ca nt expect inexperienced developers forget nt know resulting error message wo nt help much another possibility would custom classes use create instance party developers could also add custom classes advanced concept explain nt feel creating custom classes advanced technique come limitations solutions seem daring beginner puts burden developer sadly ca nt really come better solution guess issue get closed soon mistaken assigning default owner would nt work engines would nt know instance right one hope ember developers might understand unsatisfying current situation maybe think something might better thank reading", "num": "14831", "d": "1/2017"}, {"title": "ember new fails windows", "body": "tried cygwin cmd prompt result testapp package ember found error package ember found createerror c c fulfilled c selfpromisedispatchdone c promisepromisepromisedispatch c remove reinstall bower npm install g bower get point using npm node", "num": "14819", "d": "1/2017"}, {"title": "attributebindings documented embercomponent", "body": "searching docs property could nt find documentation discovered linked anywhere docs little hard find", "num": "14815", "d": "1/2017"}, {"title": "dom order rendering updated array", "body": "twiddle demo interesting case found recently believe appears since case happens render array update part rendering array follow index append updated item end block", "num": "14814", "d": "1/2017"}, {"title": "", "body": "probably question rather issue notice using choose one example using template literals without", "num": "14813", "d": "1/2017"}, {"title": "update documentation information setting rooturl", "body": "url information provided updating rooturl incomplete least mention setting rooturl configenvironmentjs allow setting correct rooturl indexhtml generated build example desired behavoir", "num": "14812", "d": "1/2017"}, {"title": "quest update deprecations include property", "body": "eventual introduction svelte builds mechanism say strip code deprecated features however enable rangebased decision need start range well end currently end form property passed method ways find deprecations method codebase tags changelog let see example emberk phase compile list deprecations present master branch phase update deprecations include field helper", "num": "14811", "d": "1/2017"}, {"title": "firefox typeerror observers index undefined", "body": "component member called tries observe fails obscure error firefox ember twiddle demonstrating problem", "num": "14803", "d": "1/2017"}, {"title": "memory leak emberobjectproxy", "body": "example use wrap model pass template render nt know properties model proxy subscribed want remove proxy later model retains references proxy listeners causes memory leak way unsubscribe listeners trigger change given target would nice functionality", "num": "14802", "d": "1/2017"}, {"title": "embercomputedintersect nt work dsrecordarray", "body": "hit issue trying intersect ds records movieroles departmentroles application developing seems intersect uses forloop bracket notation get array elements recordarray nt support kinda work last array recordarray others nativearray call toarray instances recordarray first twiddle thanks", "num": "14798", "d": "1/2017"}, {"title": "missing api documentation embertemplateshelpershtml methodyield", "body": "docs gone missing much luck finding source either api change page appears existed point dead links guides thin information nt link api page looking specifics", "num": "14797", "d": "1/2017"}, {"title": "issue acceptance test computed object created runtime", "body": "hi case even though code works fine acceptance test always throw exception scenario component code preferencesservice export default emberserviceextend async init const data await someasyncfetcher error message acceptance test think object reset runtime cause error solution solve thanks", "num": "14795", "d": "1/2017"}, {"title": "property route creates unexpected result", "body": "controller used map property route used update page param changed functionality works change value controller property gets unexpected value hook route object param gets two properties second wanted also helper template generates url better way remove query param url", "num": "14792", "d": "1/2017"}, {"title": "explore routerjs creation done ember application rather ember application instance", "body": "krisselden suggested looking heap snapshots server side rendered app creating route recognizer every request app instance created could extract ember application creation static containing request specific information router created every instance since might holding request specific info help reduce memory load per visit bug something worth exploring though touch critical parts framework", "num": "14790", "d": "1/2017"}, {"title": "use travisci jwt addon encrypt sauce labs credentials", "body": "instead see", "num": "14789", "d": "1/2017"}, {"title": "query param sticky different route model routeable emberengine", "body": "reproduced issue repo sample steps reproduce issue create route inside routable ember engine dynamic segment eg viewers id create linkto viewershbs template add query param viewer controller eg queryparams active go activetrue see linkto generated also query param eg activetrue case done outside engine another developer traced issue calculatecachekey called changing fixed problem us let know correct solution create pull request", "num": "14788", "d": "1/2017"}, {"title": "queryparams lifecycle unpredictable inconsistent", "body": "overview guides queryparams discuss length set queryparams including customizations however formally specify lifecycle queryparams specifically following left unspecified point transition queryparams synced location controller point transition queryparams synced controller location embertwiddle demonstrates oddities load directly typing location bar pressing enter value controller value controller specifies default value route hook controller value default value load directly value controller value still think particular issue related application running iframe value route hook sees controller meaning queryparam nt synced controller load directly acts like case click link footer link changes kicks changing affects location value controller shows invoked every transition first load directly nt declared queryparam ember strips url shows invalid queryparams valid ones reserialized first transition recommendations yet clear holistic implementation mind think following requirements bare minimum define available effects modifications object serialize queryparams back location time first transition like transitions define transition eg queryparams synced location controller allow routes manipulate queryparams point flow use cases queryparam lets admin users see users accounts application nt know whether current user admin session established say nonadmin goes route clear queryparam established user lacks permissions queryparam represents splittesting state user navigates application generates splittesting id onthefly sets queryparam location immediately reflect id id url could make easier handling support tickets since would clear version interface using existing work emberqueryparams attempts move queryparam logic service good encapsulating logic around validating filtering manipulating queryparams nt address lifecycle issues unresolved questions queryparams synced location controller queryparams synced controller location", "num": "14785", "d": "1/2017"}, {"title": "camel cased route template rendering", "body": "tested version clicking forgot password link takes route nothing rendered another note two routes dasherized version clobbers camelcased one makes work see", "num": "14783", "d": "1/2017"}, {"title": "deprecate calling method parent class", "body": "support calling super parent class method defined aka super likely means adding deprecation converting error examples js let emberobjectextend foo return foo qux embercomputed function return qux let b aextend bar trigger deprecation return thissuper arguments b bar foo trigger deprecation return thissuper arguments b foo thisbar qux embercomputed function trigger deprecation return thissuper arguments b qux baz embercomputed function trigger deprecation return thissuper arguments b baz see original context", "num": "14780", "d": "1/2017"}, {"title": "componentreplacein regression", "body": "calls similar function glimmer renderer function nt exist called get understand private would seem used internally anymore likely meant removed component well regardless gets addressed bugregression could really use way call like able updating specific use case ca nt wrapping element open suggestions", "num": "14779", "d": "1/2017"}, {"title": "ember helper recompute bug", "body": "calling recompute helper recompute twiddle change dependency code works work might related glimmer update", "num": "14774", "d": "1/2017"}, {"title": "emberrunschedule afterrender occurs next run loop instead current", "body": "specific ember lower note order consolelog statements occurs function scheduled switching dependency ember resolves issue", "num": "14773", "d": "1/2017"}, {"body": "hi joelpresence moved issue website repository blog posts source left comment please follow thank", "d": "1/2017"}, {"body": "herriau please provide description behaviour expect current behaviour", "d": "1/2017"}, {"body": "thank reporting gavinjoyce related event dispatcher refactors mind taking look", "d": "1/2017"}, {"body": "welcome small addition error thrown component added back view also demonstrated twiddle", "d": "1/2017"}, {"body": "sure take look", "d": "1/2017"}, {"body": "looks like guard needed working test", "d": "1/2017"}, {"body": "oh even comment explaining needed test", "d": "1/2017"}, {"body": "trouble creating failing test believe fail nt", "d": "1/2017"}, {"body": "could manually unregister action ensure exception nt thrown much rather use high level api drive test suggestions welcome", "d": "1/2017"}, {"body": "looks like firefox nt throw chrome run travis build chrome", "d": "1/2017"}, {"body": "run travis build chrome nt yet managed create failing test chrome", "d": "1/2017"}, {"body": "ah hm userland tests fail", "d": "1/2017"}, {"body": "noslouch thanks point source failing test", "d": "1/2017"}, {"body": "ah acceptance test", "d": "1/2017"}, {"body": "oh see need trigger handled", "d": "1/2017"}, {"body": "fix late creating failing test proving tricky think merge fix leave issue open follow test later week", "d": "1/2017"}, {"body": "fyi solution rename size attributes models sure anything else done maybe documentation de facto reserved attribute names would helpful", "d": "1/2017"}, {"body": "great report please move emberjsdata thank", "d": "1/2017"}, {"body": "course sorry", "d": "1/2017"}, {"body": "problem thank", "d": "1/2017"}, {"body": "alxistn integrity check hash file gets generated upload css file integrity constraint appears satisfied block loading css believe issue need republish assets please stop help ember community slack future seek help wonderful people community closing issue likely bug please feel encouraged keep commenting upon investigation side discover may fact bug still continue receive notifications followup comments issue closed nt mean ignoring thread", "d": "1/2017"}, {"body": "aproach get around ember solution posted taras dec solutions mentioned nt work js let redirectafterdidtransition embermixincreate redirectafterdidtransition args thisrouterone didtransition gt thisroutertransitionto args export default routeextend redirectafterdidtransition aftermodel thisredirectafterdidtransition index", "d": "1/2017"}, {"body": "updated jsbin ember updated beta seems fixed provide test breaks fixed make sure nt regression thank", "d": "1/2017"}, {"body": "workaround still access top nav search", "d": "1/2017"}, {"body": "thanks reporting take look", "d": "1/2017"}, {"body": "thank report", "d": "1/2017"}, {"body": "asked question stackoverflow", "d": "1/2017"}, {"body": "closing stackoverflow question thanks", "d": "1/2017"}, {"body": "kkincade nt think bug see embertwiddle example component nested component within template file integration test component asserts component rendered", "d": "1/2017"}, {"body": "pixelhandler familiar twiddles tests nt seem run least assertions made tried putting debugger lines tests never hit something make tests run", "d": "1/2017"}, {"body": "rwjblue locks pixelhandler spent lot time looking think finally figured issue problem lies using dotseparatedpaths specify components ways work fine component pathtocomponent component component pathtocomponent component pathtocomponent pathtocomponent way work pathtocomponent pathtocomponent replicated fresh app located deprecation warningerror within console assuming bug affect tests affects actual applications ability render components", "d": "1/2017"}, {"body": "thanks reporting tracked", "d": "1/2017"}, {"body": "hi craigbilner nt think actually valid syntax happens sometimes work sure trying observe twiddle want know first item array changed", "d": "1/2017"}, {"body": "thanks locks twiddle demonstrate issue use avoid error suppose getting adding mandatory setters arrays perhaps actually invalid throw much earlier", "d": "1/2017"}, {"body": "senthe bar adding new apis ember raised since introduction ember cli addon ecosystem effort keep ember codebase focused addons allow developers provide experiment new functionality easily quickly could move issue rfcs repository carry conversation thanks feedback", "d": "1/2017"}, {"body": "hjdivad curious know anyone pr failing test issue", "d": "1/2017"}, {"body": "pixelhandler aware one", "d": "1/2017"}, {"body": "site currently hosted github pages yet support custom tls certs nt think possible get free tls cloudflare using domain name unless pay business plan", "d": "1/2017"}, {"body": "nt think possible get free tls cloudflare using domain name unless pay business plan incorrect get free tls shared cert cloudflare using personal cert", "d": "1/2017"}, {"body": "see correct read shared certs assumed meant cloudflare domain really mean snibased certs domain subjectaltname would work", "d": "1/2017"}, {"body": "realize probably different issue since talking tls still cert even sending auth credentials clear see thought bring someone going spend cycles cover domains turned easy also cover discuss nevermind", "d": "1/2017"}, {"body": "workmanw hmm works", "d": "1/2017"}, {"body": "rwjblue oh hey look nt force go sweet", "d": "1/2017"}, {"body": "thank discussion everyone already tracking website repository", "d": "1/2017"}, {"body": "thanks report next time track guides issues repository next release changed work generate template default contains hope helps users", "d": "1/2017"}, {"body": "kbullaughey sounds quite similar fixed yet released beta version app able pull copy repo build cherry picked changes commits fixed recommend going route quick test", "d": "1/2017"}, {"body": "locks closed merged", "d": "1/2017"}, {"body": "thanks pixelhandler", "d": "1/2017"}, {"body": "hello ctusch understand problem given deal similar situations past closing issue triage policy given feature request inviting follow process thank", "d": "1/2017"}, {"body": "edoloughlin github outage morning also affected bower could please try report back whether still issue", "d": "1/2017"}, {"body": "closing assuming issue happy reopen nt resolve things", "d": "1/2017"}, {"body": "fixes", "d": "1/2017"}, {"body": "uuuhhhh awesome assuming uploaded together docs release", "d": "1/2017"}, {"body": "seems introduced", "d": "1/2017"}, {"body": "guessing something key falsy andor falsy collision key generation", "d": "1/2017"}, {"body": "make default value something nt coerce false works", "d": "1/2017"}, {"body": "krisselden lol interesting thank least easily hacked right", "d": "1/2017"}, {"body": "also use prevent issue", "d": "1/2017"}, {"body": "sclatter rwjblue points using works forked twiddle example", "d": "1/2017"}, {"body": "pixelhandler think meant cc jennieji", "d": "1/2017"}, {"body": "sclatter pixelhandler rwjblue thank works well", "d": "1/2017"}, {"body": "rwjblue using also causes falsy keys definitely something string key glad workarounds still bug", "d": "1/2017"}, {"body": "different people write different parts code older interest currently updating eslinting codebase related", "d": "1/2017"}, {"body": "would ok create pull request updated code", "d": "1/2017"}, {"body": "close since track progress pull requests", "d": "1/2017"}, {"body": "reopening useful somewhere discuss things relevant prs concern performance size bloat due transpilations currently nt way benchmark pull requests might want come subset features know safe suggestions template strings interpolation object property shorthand letconst", "d": "1/2017"}, {"body": "avoid array destructuring anything anything requiring regenerator babel polyfills", "d": "1/2017"}, {"body": "locks could used scripts instead manually everywhere used tool converting old files", "d": "1/2017"}, {"body": "fyi", "d": "1/2017"}, {"body": "nt know artemgurzhii p", "d": "1/2017"}, {"body": "lebab converting code using loop methods throwing errors tests failing mostly trying", "d": "1/2017"}, {"body": "artemgurzhii status help taking one part job converting", "d": "1/2017"}, {"body": "githubsathishkumar list packages nt refactored yet container emberglimmer embertesting externalhelpers internaltesthelpers loader", "d": "1/2017"}, {"body": "thanks pointing moved issue guides repository", "d": "1/2017"}, {"body": "looks good first step quest issue building list current deprecations code base", "d": "1/2017"}, {"body": "also need update require flag look similar deprecation optionsuntil present deprecation optionsid present", "d": "1/2017"}, {"body": "also new public api require rfc reference options introduced see final rendered version", "d": "1/2017"}, {"body": "reviewed file file got list function deprecateresolverfunction packagescontainerlibcontainerjs review field getter setters defined property packagesemberlibindexjs definition definition definition packagesemberdebugtestsmaintestjs deprecate test adapted packagesembermetallibmixinjs top level packagesemberruntimelibmixinsproxyjs packagesemberruntimelibmixinsactionhandlerjs getter packagesemberviewslibmixinsviewsupportjs", "d": "1/2017"}, {"body": "firefox defined take look ultimately nt issue ember perse close issue absolutely sympathetic debugging nightmare nt think much make better", "d": "1/2017"}, {"body": "oh see thanks quick reply maybe warning try observe", "d": "1/2017"}, {"body": "example leaking memory create disposable proxies model retains references logical step would unsubscribe old proxy create new one problem simply unsubscribe listeners target know exactly properties observed", "d": "1/2017"}, {"body": "relatedly removed layouts section moving documentation embercomponent class", "d": "1/2017"}, {"body": "please provide reproduction ember twiddle repo thank", "d": "1/2017"}, {"body": "lucaszheng one best ways dig issue create sharable reproduction issue using would mind creating simple example also reached help chat room", "d": "1/2017"}, {"body": "pixelhandler please refer click button twice see object contain console used top level route used sub controller", "d": "1/2017"}, {"body": "kratiahuja great suggestion seems like featureenhancement see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo typically emberjs issue tracker mainly bugs since rfc process prs issues new featurerefactor issues tracked rfc repo would mind moving issue one", "d": "1/2017"}, {"body": "pixelhandler sure porting", "d": "1/2017"}, {"body": "opened", "d": "1/2017"}, {"body": "closing favor emberjsrfcs thank kratiahuja", "d": "1/2017"}, {"body": "know would primary person make change best guess involves using proper credentials sauce labs cc rwjblue maybe one needs assignee", "d": "1/2017"}, {"body": "pixelhandler think need cycle current saucelabs credentials use new ones command line call encrypt needs done someone able log saucelabs write access repo", "d": "1/2017"}, {"body": "intentionally left clear text credentials travisyml encrypt run sl tests pr", "d": "1/2017"}, {"body": "rwjblue please read link precisely feature", "d": "1/2017"}, {"body": "thanks reporting let know correct solution create pull request solution seems reasonable general specifically need ensure cache key built correctly inside engine think next step getting isolated failing test case please take look engine tests tests idea set believe able add test file replicates scenario describe issue description", "d": "1/2017"}, {"body": "written failing test case fix one commit originally failing passed change", "d": "1/2017"}, {"body": "rajaalauddin perhaps make pr failing test fix", "d": "1/2017"}, {"body": "pixelhandler created pull request", "d": "1/2017"}, {"body": "closed via", "d": "1/2017"}, {"body": "originally opened emberjsrfcs rwjblue suggested switch issue sort implementation plan become rfc related emberjsemberjs emberjsemberjs see also works action handler route hook like", "d": "1/2017"}, {"body": "jamesarosen nice write curious issue needs tracked rwjblue suggest emberjsissue rfcissue see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo", "d": "1/2017"}, {"body": "curious issue needs tracked rwjblue suggest emberjsissue rfcissue said originally opened emberjsrfcs rwjblue suggested switch issue assumed meant emberjs issue guess could rfc issue many rfc issues rfc docs nt describe usecase contributing use rfc issues propose rough idea basically great place test waters think exactly case wish information rfc readme well idea", "d": "1/2017"}, {"body": "jamesarosen pixelhandler yall take care improving contributing moving issue rfcs repo issue thanks", "d": "1/2017"}, {"body": "moved emberjsrfcs", "d": "1/2017"}, {"body": "might bug per say camelcase named routes automatically look dasherized files user camelcased file least warning", "d": "1/2017"}, {"body": "put together rfc deprecating nondasherized route names remove magic file name transforms", "d": "1/2017"}, {"body": "one thing came mind component lifecycle hooks etc appears hooks defined noop functions component class emberglimmerlibcomponentjs seems like would trigger deprecation feels like could slightly problematic requires component class extends another know whether parent implemented lifecycle hook wants use hook even creates bad practice always call hooks seems like one native solution would implement noop functions class hooks thoughts could submit pr seems favorable", "d": "1/2017"}, {"body": "yes absolutely conclusion made comment linked main issue description pr ensure framework hook methods properly defined definitely welcome", "d": "1/2017"}, {"body": "issue affects mixins always define base mixin expects hook present otherwise extend something understand base class overriding", "d": "1/2017"}, {"body": "otherwise extend something understand base class overriding always easy ember p", "d": "1/2017"}, {"body": "krisselden well extending mixing addon addon nt currently implement nt call point release comes along add hook viceversa remove call throws regularly audit code addons sure breaking anything", "d": "1/2017"}, {"body": "regularly audit code addons sure breaking anything thing supposed", "d": "1/2017"}, {"body": "locks saying think ember users regularly auditing code addons use every time new point release seems impractical even advanced developers", "d": "1/2017"}, {"body": "otherwise extend something understand base class overriding always easy ember p concisely easy language untyped dynamic language locks saying think ember users regularly auditing code addons use every time new point release seems impractical even advanced developers workmanw deprecation must audit every point release rather every major said deprecation warning surface future issues next major much sooner allowing addressed well ahead actual blocker deprecate calling method parent class combined mixins current usage mixins may tricky transition need test impact wild comparing languages even javascript becomes rather obvious need tighten although may want consider enabling detecting something super example ruby javascript objectivec iirc could check via ruby class bar end class foo lt bar def baz defined super super super end puts foobaz end foonewbar gt foobaz class bar def baz puts barbaz end end foonewbar gt barbaz gt foobaz js class bar typeof supera function supera consolelog bara new bara gt bara objectprototypea function consolelog objecta new bara gt objecta gt bara", "d": "1/2017"}, {"body": "stefanpenner trying point ember throw error would easy change addon using create error application even point release addon addon suddenly get ride calling super get error viceversa commonly deprecation errors addons addon using deprecated api quickly fixed affects everyone equally however issue would potentially affect user uniquely addon may may implementing hook sounds like everyone really agreeing value implementing default hooks", "d": "1/2017"}, {"body": "stefanpenner trying point ember throw error would easy change addon using create error application even point release addon addon suddenly get ride didinsertelement calling super get error viceversa commonly deprecation errors addons addon using deprecated api quickly fixed affects everyone equally however issue would potentially affect user uniquely addon may may implementing hook implemented baseclass would cause issue", "d": "1/2017"}, {"body": "stefanpenner yea right mistake concern still valid", "d": "1/2017"}, {"body": "concern still valid didreceiveattrs didrender willrender didupdateattrs yup sure add baseclasses take route way concern also mitigated", "d": "1/2017"}, {"body": "looks like test suggest adding test file fix likely manually empty element call roughly done work around clear element call instead", "d": "1/2017"}, {"body": "rohmann work around mentioned rwjblue good enough perhaps close also work around seems like good way avoid using private method work around clear element call instead", "d": "1/2017"}, {"body": "locks chadhietala think issue address documentation perhaps label", "d": "1/2017"}, {"body": "definitely seems funky agree work around ensure recompute done within runloop fixes twiddle top head sure runloop required function wrapping setsrerenders like almost certainly better testing would prevent autorun assertion tests reasonable solution", "d": "1/2017"}, {"body": "fault think runloop would solution wrap prevent future users", "d": "1/2017"}, {"body": "kybishop took look example noticed order log statements indicated curious use case describe trying accomplish regarding order scheduling using also able upgrade", "d": "1/2017"}, {"body": "hey pixelhandler real issue lack consistency ember versions documentation differences made debugging unnecessarily confusing also unclear difference run loop schedule intentional hence bug report ember schedules tasks current run loop ember lt schedules tasks next run loop api suggests scheduled tasks run next run loop editing example guides shows scheduled tasks run current run loop regardless guide version example edit always act defensively dealing run loop order issues would make life lot easier run loop consistent ember versions docs noted differencewere consistent ember version behavior", "d": "1/2017"}, {"body": "kybishop likely could explain semantics confusing run loop nt changed thing really changed didinsertelement like afterrender flushes immediately rendering would like actually understand complaint depending timing like bit dubious nt fully understand mean current next task example", "d": "1/2017"}, {"body": "hey krisselden current mean current iteration queues run loop next mean next iteration queues hoping quick rundown clears mean current next ember function executing render queue schedule function run emberrunschedule afterrender run loop eventually finishes tasks render queue moves afterrender function scheduled eventually run whilst emptying tasks afterrender queue ember lt function executing render queue schedule function run emberrunschedule afterrender run loop eventually finishes tasks render queue moves afterrender function scheduled run instead schedule queues next iteration queues means first empty afterrender queue destroy queue etc arrive back afterrender queue effect schedule task next iteration run loop queues task show edit guide example see example executes scheduled tasks current run loop iteration regardless ember version guide set", "d": "1/2017"}, {"body": "depends scheduling afterrender description nt accurate change run loop behavior think seeing effect interaction afterrender scheduled", "d": "1/2017"}, {"body": "krisselden going see provided twiddle switching ember versions apologies describing seeing appropriatelyaccurately sounds like considered nonissue dealt needed flexi close", "d": "1/2017"}, {"body": "yes frozen array params object closing thank", "d": "1/2017"}, {"body": "bad test defaults ember textfield spellcheck attribute false function initialize application textfield application instance owner", "d": "1/2017"}, {"body": "locks update", "d": "1/2017"}, {"body": "problem passing objects constructed positional params component", "d": "1/2017"}, {"body": "similar problem passing hash helper twiddle reproduces issue note mycomponenttotallength ca nt computed fixed replacing helper simple helper returns full object instead emptyobject ember uses note totallength shown edit problem occurs also available twiddle", "d": "1/2017"}, {"body": "willing help fix issue pointers focus search reason bug", "d": "1/2017"}, {"body": "fwiw also found problem yesterday pred workaround using using plain think good reason use ever since ember weirdness found happened first time rendered view error transitioned somewhere else come back worked", "d": "1/2017"}, {"body": "hi locks rudymacias nightire trouble getting test nested component within pod findable qunit ember nt upgraded yet wonder ideas file want test path names substituted test file test file starts javascript import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent componentnamesubcomponent integration component componentnamesubcomponent integration true error assertion failed helper named componentname could found tried generating new component test command acceptance test passed next alert could nt find helper", "d": "1/2017"}, {"body": "confused regarded regression fix application", "d": "1/2017"}, {"body": "blocking us happy attempt fix someone confirm regression", "d": "1/2017"}, {"body": "issue well barring fix way turn emptyobject regular object", "d": "1/2017"}, {"body": "also interested status bug holding upgrading time", "d": "1/2017"}, {"body": "hoping could work around explicitly registering route leaving error template route etc place tried found failed route hook router bubble error route custom template shown deliberate transition error router transition template interestingly though log error message get route nt exist thinking maybe could leave template route controller etc place register custom error route pointing template explicitly handled error cases maybe would handle caught uncaught errors custom template nathanhammond thoughts worth hackery better wait official fix", "d": "1/2017"}, {"body": "nevermind proposal would still require mapping would trigger bug may go making custom route handled errors using error component template seems approach pending fix cc nathanhammond", "d": "1/2017"}, {"body": "noticed fixed ember chance get fix backported release since beta introduces whole bunch new issues", "d": "1/2017"}, {"body": "since beta introduces whole bunch new issues please report issues find beta cycle chance get fix backported release yes think good idea", "d": "1/2017"}, {"body": "recommendations work perhaps close one seen strong support changing testing behavior error handing case acceptance testing seems work around sufficient", "d": "1/2017"}, {"body": "sure solution adequate thanks", "d": "1/2017"}, {"body": "running problem acceptance test login page using embersimpleauthtoken addon addon actually wrapping ref seems option keep looking", "d": "1/2017"}, {"body": "pfmmfp could try workaround", "d": "1/2017"}, {"body": "pr shows inspired jquery migration guide ca nt migrate usage looks random failures testing words seems wait correctly wrapping inside rsvp embersimpleauth library also calling jqueryajax call expect random failures acceptance testing jquery course regarding testcase dwickern ps working issue pfmmfp helps", "d": "1/2017"}, {"body": "morhook apparently jquery still calls synchronously p deferred resolve pdone r gt consolelog r consolelog done prints done pthen r gt consolelog r consolelog prints standard promise apis though may want rely", "d": "1/2017"}, {"body": "issue posted another twiddle efx pointed may reproduce problem described issue left issue open case anyone want use twiddle verify fix also resolves problem", "d": "1/2017"}, {"body": "also plugin jetbrains ides called tabdir lets customize tabs even show folders title get rid componentjs distinguish folder appearance file colors etc", "d": "1/2017"}, {"body": "run app used helpers nested folders eg used invoke depending scenario upgraded ember app made changes third party libraries upon deploying staging environment triggered happened app stopped working throwing error console debug discover helper helper somehow issue fix use slashnotation helper invocations order reproduce dev totally dump amp folders amp error easier diagnose dev able determine exactly happened seems obvious sort node dependency ember ecosystem recently changed trickled old version", "d": "1/2017"}, {"body": "bitten well turns started move app using dotted component references since webstorm ember plugin prompting us insert components way liked way looked code ide going help us way end nt something fight hard aware least one tool prompting people insert component references using dotted notation instead slashes", "d": "1/2017"}, {"body": "csetera ahh nt realize webstorm plugin suggesting believe tracking issue", "d": "1/2017"}, {"body": "yep looked make sure registered issue saw open ticket", "d": "1/2017"}, {"body": "took little time yesterday write ruby script combs emberjs application replaces dotnotation paths slashnotation may helpful others cheers", "d": "1/2017"}, {"body": "may may bug addon encountered error", "d": "1/2017"}, {"body": "found issue using mixin entry points update property controller mixed definitely different properties cause simply belongs different controllers assertion fails blocking js tested mixin unwrapping controllers made transition routes reproduce nt reproduced trying get rid mixins simply kill create work around", "d": "1/2017"}, {"body": "believe valid use case seeing rerendering issue app button contains state ok validating warning error component shows current state validates certain things happen based result validation activation displays different things spinners different button text different button class check validation based response validation set appropriate button state button class computed property sets appropriate classes based button state since happens init seems like error triggered start status ok instantiation transition validating validating version final state based response however use case seems reasonable therefore state changes happening also seem reasonable", "d": "1/2017"}, {"body": "might able create twiddle sample app demonstrates believe incorrect error", "d": "1/2017"}, {"body": "reduce usecase twiddle", "d": "1/2017"}, {"body": "chancancode try post one soon thanks quick response", "d": "1/2017"}, {"body": "chancancode would twiddle seeing error seeing app might thing causing", "d": "1/2017"}, {"body": "seeing several computed properties one simple since none suggestions applicable case would appropriate workaround", "d": "1/2017"}, {"body": "mention flag feature mentioned chancancode", "d": "1/2017"}, {"body": "cbou far know flag nt exist", "d": "1/2017"}, {"body": "changed name id field router thisroute parent path parent id function thisroute child path child childid nemanja stojanovic notifications githubcom experiencing issue solve dmagunov happens id property change dynamic segment property unique child property exists called id value child property gets shown receiving mentioned reply email directly view github mute thread \u0441 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0434\u043c\u0438\u0442\u0440\u0438\u0439 \u043c\u0430\u0433\u0443\u043d\u043e\u0432 wwwawwsoftua", "d": "1/2017"}, {"body": "news", "d": "1/2017"}, {"body": "yea would real nice", "d": "1/2017"}, {"body": "still happening bit different stack trace suppose issue reopened", "d": "1/2017"}, {"body": "problem", "d": "1/2017"}, {"body": "somebody every look similar issue one willdestroyelement hook threw exception element destroyed", "d": "1/2017"}, {"body": "updates mmun trek", "d": "1/2017"}, {"body": "see marked intentional means avoid overriding", "d": "1/2017"}, {"body": "issue came implementation router service rfc identified issue fixed also added tests ensure working", "d": "1/2017"}, {"body": "hi thanks link think additional documentation somewhere would helpful saucelabs graphic currently shows mean supported firefox chrome bit info shows slchromecurrent slfirefoxcurrent mean current supported firefox esr documentation page somewhere like would clearer though even lacking clarity firefox esr aside slsafaricurrent slsafarilast probably need bumped respectively", "d": "1/2017"}, {"body": "update thanks", "d": "1/2017"}, {"body": "karellm yet still work decorators stage", "d": "1/2017"}, {"body": "stage means ember needs", "d": "1/2017"}, {"body": "irony ember creating dotted property name route paramname functionality fails probably underlying problem course additional usecases outside ember api less surprising nt work expected unfortunately even escaping data works method find", "d": "1/2017"}, {"body": "twiddle code defines property dot name misunderstanding", "d": "1/2017"}, {"body": "locks nested route needing access params regardless point sometimes object keys may use dot whether originates ember ultimately inconsequential pointed ironic context conversation api actually ember fact ember nt support property keys dots troubling light means interacting objects via standard api", "d": "1/2017"}, {"body": "need functionality wo nt fix issue", "d": "1/2017"}, {"body": "version ember using", "d": "1/2017"}, {"body": "locks working guessing something metalviews happened", "d": "1/2017"}, {"body": "current behavior consistent browsers behave try put tags nt run time people introducing major security vulnerabilities really want run javascript embedded html coming cms allowing anyone edit content steal user identity implement via domparser eval", "d": "1/2017"}, {"body": "argument security vulnerabilities seems little offbase triple braces security optout already open vulnerabilities images iframes insecure elements functionality pretty basic things like embedding tweet blog post broken script tags nt evaluated many social site embeds rely tags evaluated broken ember core leave app developer fix", "d": "1/2017"}, {"body": "argument security vulnerabilities seems little offbase triple braces security optout already open vulnerabilities images iframes insecure elements agree triple curlies already offer attack vectors still important distinction terms developer ergonomics random developer tasked allow people embed tweets posts probably try using triple curlies nt want succeed triple curlies wrong implementation feature dangerous right implementation twitter oembed api claiming panacea people obviously try use triple curlies reasons sometimes appear want leave users vulnerable unsympathetic argument making triple curlies even useful would make feel broken could", "d": "1/2017"}, {"body": "still happening", "d": "1/2017"}, {"body": "feature still needed still happening ember", "d": "1/2017"}, {"body": "something resolved long time ago ember give tools things user expects happen github issues filter click issues link would expect go back global issues would simply remove query params github exactly logical ember ca nt proper way either either use custom helper specify every single possible param every single nt want query params nt leaving route obviously far maintainable use method even pain maintain bad enough define query params multiple areas let alone reset nt even understand reason use stick query params caused issues since day nt seen benefits pagination links part route could easily get benefit ways without ruining every link page going create mentioned", "d": "1/2017"}, {"body": "people solve hackyish way actually maintainable still need stuff transition programmatically although changes could add query params hash get effect helper might make addon find time added helper use called place want use exactly sent js import ember ember export function explicitqueryparams params hash let values emberassign hash valuesexplicitqueryparams true return emberobjectcreate isqueryparams true values values export default emberhelperhelper explicitqueryparams queryparams one able pass hash example assume extending already add following method extend js hydrateunsuppliedqueryparams state queryparams queryparamsexplicitqueryparams delete queryparamsexplicitqueryparams nt cleanest way proper way would also involve replacing component creating classes detect functionality etc instead underscore param", "d": "1/2017"}, {"title": "deleted spam", "body": "deleted spam", "num": "3523", "d": "1/2017"}, {"title": "reference error undefined property like elemuniquid", "body": "description please fix alls undefined property errors spaming complet firebug console", "num": "3522", "d": "1/2017"}, {"title": "maximum call stack size exceeded parents call nonlowercase selector", "body": "description infinite recursion running works chrome logs work fine code near recursive call see note saving restoring attribute getter nt use tolowercase version attribute name thing calls link test case jsfiddle", "num": "3521", "d": "1/2017"}, {"title": "computestyletests memory leak reference removed div", "body": "description jquery small memory leak end function releases reference div used measurements also variable never nulled holds reference another div used look like ending lines", "num": "3520", "d": "1/2017"}, {"title": "xbox ms edge jquery event handler supported", "body": "description xbox ms edge jquery event handler supported throws error object support property method", "num": "3519", "d": "1/2017"}, {"title": "bower package updated", "body": "currently still version", "num": "3518", "d": "1/2017"}, {"title": "events improvement jquery adding priority", "body": "suggest add new feature bindon method like example priority number user clicks target jquery order callbacks executed target ordering priority way decide order executing events decide event executed always specific needs example", "num": "3517", "d": "1/2017"}, {"title": "bug delegation", "body": "etarget seams atached dom compare etarget specific node", "num": "3516", "d": "1/2017"}, {"title": "data values differ dashed camel cased named variables", "body": "description happens jquery version nt happen jquery version removing data removedata foobar moobar remove foobar moobar well removing setting dashed names camel cased variables take precedence removed values returned instead fresh ones browsers affected link test case", "num": "3515", "d": "1/2017"}, {"title": "computestyletests throws firefox windowgetcomputedstyle div returns null", "body": "description jquery seeing occasional errors production site due firefox returning null windowgetcomputedstyle div inside jquery support function computestyletests related firefox bug workaround computestyletests var divstyle windowgetcomputedstyle div link test case test case yet perhaps firefox bug states iframes involved", "num": "3514", "d": "1/2017"}, {"title": "map undefined return undefined returns", "body": "description expect return instead returns empty array tested chrome jquery expect return optionally blow instead magic translating empty array also happy educated turning empty array ok thanks link test case might related", "num": "3513", "d": "1/2017"}, {"title": "parameters get body", "body": "feel free delete frequently asked using jquery ajax calls seems impossible pass body parameters get calls fact allowed http specs particularly one developing internal apis one also controls server backend code etc necessary able many enterprise apis need send complex queries decide get elastic search lot example current clients like perl mojolicious allow without problems able pass body parameters get calls forces one use postput situations really nt used makes one http verb slots api endpoint useless cases come across problem developing several internal enterprise apis makes using jquery client side really difficult please consider allowing body parameters get calls request query path params naturally", "num": "3512", "d": "1/2017"}, {"title": "uc browser mobile slidetoggle method nt working", "body": "testing website uc browser testing found bug slidetoggle want expect happen created menu mobile one button expecting click button menu appears slidedown effect click button menu disappear slideup effect actually happens menu nt appears also done check css end like increase zindex property css work change version jquery latest version work guys something browsers affected uc browser android", "num": "3511", "d": "1/2017"}, {"title": "question minimum server support needed", "body": "sirs written simple webserver ssi support arduino tried using file upload script looks great browser file upload post code dropped file serverphp directory error return json invalid first byte html guru script query code looks like foreign language decode simple reference describes response data widget expecting like preview multiple file upload progress bars little server storing data either eeproms flash memory chips slow bytessec write speed means file take seconds minutes progress bar nice feature anyone point explanation protocol php backend browser widget thanks chuck", "num": "3510", "d": "1/2017"}, {"title": "jqxhrgetresponseheader key crashes key passed", "body": "description stack exception uncaught typeerror read property tolowercase undefined objectgetresponseheader onfail object fire objectfirewith rejectwith process line code builds headers hashtable needed getresponseheader function key var match completed responseheaders responseheaders match rheadersexec responseheadersstring responseheaders match tolowercase match match responseheaders keytolowercase return match null null match obviously key nt defined required documentation mention key needed keys feasible even test null returned key nullundefined gracefully handle case using minified version bug untraceable also getallresponseheaders nt documented mention required key getresponseheader btw general fail jqxhr textstatus errorthrown deficient eg crossorigin issue get textstatus error errorthrown pretty useless also mention fail documentation even general arguments passed fail terrible textstatus errorthrown ofter useless sometimes jqxhr message attribute sometimes responsetext html page sometimes stack sometimes none challenge anyone try decent error popup dialog shows pertinent info link test case none needed", "num": "3509", "d": "1/2017"}, {"title": "jqxhrgetresponseheader key crashes key nt passed", "body": "description expect happen graceful return key parameter missing documentation mention key required possible values note value legal cause crash decent consistent attributes jqxhr argument passed fail even better informative values textstatus errorthrown arguments actually happens exception thrown see description browsers affected stack exception uncaught typeerror read property tolowercase undefined objectgetresponseheader onfail object fire objectfirewith rejectwith process line code builds headers hashtable needed getresponseheader function key var match completed responseheaders responseheaders match rheadersexec responseheadersstring responseheaders match tolowercase match match responseheaders keytolowercase return match null null match obviously key nt defined required documentation mention key needed keys feasible maybe jqxhrkeys function even test null returned key nullundefined gracefully handle case using minified version bug untraceable also getresponseheaders end nt documented mention required key getresponseheader btw general fail jqxhr textstatus errorthrown deficient eg crossorigin issue get textstatus error errorthrown pretty useless also mention fail documentation even general arguments passed fail terrible textstatus errorthrown ofter useless sometimes jqxhr message attribute sometimes responsetext html page sometimes stack sometimes none challenge anyone try decent error popup dialog shows pertinent info link test case none needed", "num": "3508", "d": "1/2017"}, {"title": "rangeerror maximum call stack size exceeded using recursive animate another tab", "body": "used code code works open page switch another tab seconds infinite loop occurs see developer console open happens chrome firefox also seems happen less brutal looks like animate completed instantly called tab active regardless duration callback also called", "num": "3507", "d": "1/2017"}, {"title": "url parameter eval js jquery ajax", "body": "relation dangerous response eval jquery get function refereced far see still vulnerable xss different attack vector url parameter attacker control data uris used nt even need set external website exploit flaw jquery ajax url data textjavascript alert documentcookie datatype jsonp jquery ajax url data textjavascript alert documentcookie ajax url data textjavascript alert documentcookie datatype jsonp jquery ajax url data textjavascript alert documentcookie ajax url data textjavascript alert documentcookie datatype jsonp", "num": "3506", "d": "1/2017"}, {"title": "properly detect attachment shadow dom elements", "body": "places check document attachment showhide inline style fallback managing script evaluation dom manipulation fail inside shadow dom return false elem shown shadow dom change works investigate cost remedy eg shadowdomcompatible function", "num": "3504", "d": "1/2017"}, {"title": "animations get skipped old ones stopped midtick", "body": "description mutation timer list inside timer callback affect timer index resulting skipped callbacks link test case", "num": "3503", "d": "1/2017"}, {"title": "immediatelydone animations miss final progress notification", "body": "description accidentally broke immediatelydone animations suppressing final progress notification link test case must loaded without https get right ci build", "num": "3502", "d": "1/2017"}, {"title": "jquery click work ios let works var", "body": "description jquery bug simple click event use let declare variables images links click event stops working ipad chrome switch let works use var click works mobile let link test case", "num": "3500", "d": "1/2017"}, {"title": "catch enough storage exceptions reading responsetext ie", "body": "description exclusively affects ie basically happens try read ajax request contains several mb worth data occasionally get exception says enough storage available complete operation using version jquery however exception becomes unhandelable error callback nt called happens callback function javascript callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null code see fail read never gets called becomes impossible handle exception outside onerror handler link test case research issue notoriously difficult reproduce involves loading several mb data ajax possibly requires memory fragmentation browser starts happening almost always get happen sometimes goes away reduce response size ajax request enough definitely goes away relevant instances people experience issue general particularly jquery proposed solution solution proposing would pull request would prefer somebody team could polish get look pull javascript callback callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null tryelsecomplete done ajax along apibackwards compatibility considerations leaving optional powersthatbe think would good include tell error simply error", "num": "3499", "d": "1/2017"}, {"title": "jqueryanimation nt end empty animations early", "body": "description although finishes immediately deeper infrastructure occasionally showhide animations end empty observed intermediate step nt want throw timing cases link test case", "num": "3498", "d": "1/2017"}, {"title": "jqueryfxtick insufficiently guards timer queue manipulation", "body": "description executes queued timer turn maintaining place removes finished animation however also remove timers queue invoked iterating ie animation callbacks cause lose place skipping one animations often harmless since animation revisited next tick introduce visible stutter pathological case nt bother demonstrating starve animation outright additionally iterates end queue new animations get processed twice first tick fix making three functions aware cooperative link test cases stutter extra processing", "num": "3497", "d": "1/2017"}, {"title": "called empty element nt account document clienttop", "body": "description implementation getter misidentifies element content notrendered element result accounted code demo page could nt figure way repro issue jsfiddle jsfiddle puts result page scroll box thus docelemclienttop stays see discrepancy need open page scroll document refresh alerts showing empty populated elements expected popups show number however relevant code line make sure element hidden display none rectwidth rectheight ifexpression true empty elements check new breaks scrollspy anchor tag page scrolled defined example", "num": "3495", "d": "1/2017"}, {"title": "incorrectly resolve instantly array passed", "body": "trying use dynamically managed array one deferred however found pass array one deferred resolve immediately expected behavior expect jquery base master deferred one element array fiddle representing issue jquery", "num": "3493", "d": "1/2017"}, {"title": "browser compatibility issue css function", "body": "hi found browser compatibility issue css function see happens chrome happens firefox wander run code console however get undefined chrome block firefox used tried multiple versions two browser looking forward replay", "num": "3492", "d": "1/2017"}, {"title": "chrome map area elements seen hidden", "body": "description found chrome version jquery test hidden map area element returns true even map area elements well inserted page result firefox course talking visibility map bit strange behavior identical browsers also requesting width height map returns chrome valid integers firefox link test case", "num": "3491", "d": "1/2017"}, {"title": "jquery erroneously calls pointerleave handlers entering descendent input textbox chrome", "body": "description attach handler element descendant textbox using jquery attach handler element using native javascript starting outside container element move mouse textbox expected behaviour events fire actual behaviour chrome jquery event handler called native event handler expected behaviour occurs firefox feature flag edge emphasize using otherwise identical test code reproduce one browser event handlers added using substituting two functions fix web app tested scaled touchscreen windows laptop chrome beta firefox dev edn edge link test case jquery fail jquery tip fail jquery fail jquery tip fail native js pass", "num": "3490", "d": "1/2017"}, {"title": "improve offset setter testing", "body": "description lands add missing offset setter tests fix bugs revealed", "num": "3488", "d": "1/2017"}, {"title": "typeerror read property contains null", "body": "calling jquery function element ie elementtoggle false inside template created documentcreateelement template get exception using seems easy fix changing following line possibly even reason code like something wrong well may possible please let know", "num": "3485", "d": "1/2017"}, {"title": "error uncaught illegal access", "body": "error happens prod server users data file line file error object l l e g l c c e length", "num": "3484", "d": "1/2017"}, {"title": "size method removed jquery nt included upgrade guide", "body": "description per title api doc removed mention upgrade guide", "num": "3482", "d": "1/2017"}, {"title": "find breaks simple queries parsed html unless ghost div used", "body": "description query element string html solution recommended stackoverflow use parsehtml create jquery object execute find however find work certain queries html strings work elements part dom eg descendant queries workaround append parsed elements ghost div necessary see example jsfiddles link test case expected show stuff looking find returns nothing workaround adding ghost div use case discussed", "num": "3481", "d": "1/2017"}, {"body": "nt sound like jquery problem case none information template provided please ask help stackoverflow", "d": "1/2017"}, {"body": "sounds like broken jquery ui build project know method case provide reduced test case showing problem file bug", "d": "1/2017"}, {"body": "firefox go config set javascriptoptionsstrict true go site actually development take look firebug console see mean", "d": "1/2017"}, {"body": "look live sites either provide reduced test case bug report look help stack overflow irc forums etc", "d": "1/2017"}, {"body": "syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property anodetype weitere informationen referenceerror reference undefined property thispositionx weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property bresult weitere informationen", "d": "1/2017"}, {"body": "nothing original bug report posted also nt run strict mode third party code actual bugs report please create issue specific issue posting comments unlikely get responses", "d": "1/2017"}, {"body": "support latest jquery version currently works nothing us", "d": "1/2017"}, {"body": "hack place place ie lt browsers since gc could nt handle circular references longer support environments case provided question would nt removed memory since still present outer scope function yes also serves singleton guard whereas could nullify would add gzip size practically would decrease memory consumption bit mention logic variable picked modern gc form optimization possible second execution method speculation course reasons nt think need", "d": "1/2017"}, {"body": "please provide test case", "d": "1/2017"}, {"body": "test running following game xbox edge", "d": "1/2017"}, {"body": "realised using older requirejquery version looking function try updated jquery thanks", "d": "1/2017"}, {"body": "working outdated jquery version thanks close", "d": "1/2017"}, {"body": "ca nt reproduce problem bower install jquery bower jquery cached bower jquery validate bower jquery install jquery jquery bowercomponentsjquery repositories even depend jquery try clearing bower cache", "d": "1/2017"}, {"body": "bad cache issues", "d": "1/2017"}, {"body": "thanks suggestion however planning utilize native event scheduling instead using event queuing ca nt add support things like nt exist native apis", "d": "1/2017"}, {"body": "pass suggestion", "d": "1/2017"}, {"body": "notification born code debug etarget closest thattip length wrong", "d": "1/2017"}, {"body": "changing thatisvisible amp amp etarget parents html length amp amp etarget closest thattip works dont understant event come element attached", "d": "1/2017"}, {"body": "made another test checking cloned old events seams old node attached another question node children removed events might removed", "d": "1/2017"}, {"body": "found problem priority executing events different jquery component first click div refreshing second body second executed cause complex situation would usefull tell executed event example body click function priority", "d": "1/2017"}, {"body": "please look programming help stack overflow", "d": "1/2017"}, {"body": "problem found stackoverflow problem related impossibilty give order events example body click function priority example body click function permit order execute events specific target specific problem related design", "d": "1/2017"}, {"body": "read issue template states note fix bugs latest version jquery therefore problem exists jquery latest nothing us update jquery problem disappear", "d": "1/2017"}, {"body": "ok thought still maintaining bug gave us headache production days since nt easy reproduce", "d": "1/2017"}, {"body": "ok thought still maintaining note unclear stand enough trying figure whether message clear enough improve somehow note even maintaining issues like precisely reason simplified logic jquery required breaking change could nt backported change line follow semver would fix issue might break others sites thanks report anyway", "d": "1/2017"}, {"body": "saw comment thought latest version means latest latest", "d": "1/2017"}, {"body": "see trying put message nt updated time release new major version maybe current one clear enough thank input", "d": "1/2017"}, {"body": "prevent exception css methods wo nt actually work without gcs called ondemand loading jquery nt constitute demand happening triggers computation hidden iframe much fix would change prevents exception yields incorrect behavior", "d": "1/2017"}, {"body": "happening triggers computation hidden iframe getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info much fix would change prevents exception yields incorrect behavior environment returns null getcomputedstyle may indeed issues throwing exception stops javascript block execution think fixing limiting issue something specific like jquery css methods fail perhaps always better generally preferable", "d": "1/2017"}, {"body": "getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info case definitely something sweeping rug keep error log clean determine particular error harmless case always filter error reporting", "d": "1/2017"}, {"body": "sounds like gecko people gon na fix moreover css specification might change", "d": "1/2017"}, {"body": "docs say returns array takes two arguments first argument either array object neither second argument callback function calling method invalid inputs undefined results case note callback provided callback returned would removed resulting array", "d": "1/2017"}, {"body": "special needs like roll xhr use jquery helper methods like heavy lifting", "d": "1/2017"}, {"body": "please provide test case jsfiddlenet jsbincom ca nt anything based short description", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "mgol made assignee since given discussion meeting better understanding", "d": "1/2017"}, {"body": "sure file upload script mean case support forum jquery bug tracker please look help stack overflow", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "take general stance undocumented inputs result unpredictable output particular prioritize adding code handle invalid input moving improving documentation though", "d": "1/2017"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "let move discussion", "d": "1/2017"}, {"body": "allow third parties modify js code already lost attacker insert whatever code want original issue loaded url expecting harmless json third party code suddenly started sending scripts jquery evaluating fixed", "d": "1/2017"}, {"body": "ok respect criteria nt see difference cases attacker must control de content url parameter passed jqueryajax redirect website control answers scripts malicious code", "d": "1/2017"}, {"body": "attacker nt control code particular control contents property pass url attacker page via property attacker changes sent contents harmless json script jquery user may suspect jquery listen new mime type execute script fixed issue case attacker control foreign domain load stuff control pass code control insert code want change basically ban dataurls completely valid use cases", "d": "1/2017"}, {"body": "ipad probably using example nt even use values declared nt related jquery please ask help stackoverflow", "d": "1/2017"}, {"body": "see dilemma sure generally worked hard avoid trycatch eliminate possible codebase often catches things nt although made implementation compatible promisea method still throw errors nt catchable chain like ideally ajax errors thrown inside method reject could know sure lot existing code nt use twoarg dunno maybe trycatch least painful pains", "d": "1/2017"}, {"body": "practice nt even know point catching things nt thought weekend like update proposed solution following catches error concerned issues since pretty sure would catch errors donefail callbacks well thought probably given appropriate place put trycatch ensure appropriate callbacks called start given callback evaluated top stack middle chain sure make strong argument need trycatch particularly revolving around fact user ca nt code imo also breaks contract promises used ajax nt call fail callback result error request literally disappears system need reliably track requests actually finished particular reason eg metricsonunload handlers ca nt creates obscure bug workaround manually handle ajax requests instead using jquery javascript callback callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null", "d": "1/2017"}, {"body": "yeah problematic somehow detail worm way could acted upon least logged caller", "d": "1/2017"}, {"body": "agree ideal would problematic could probably pull request drop passing exception hoping somebody familiar internals jquery would willing pick awesome", "d": "1/2017"}, {"body": "duplicate already fixed master included", "d": "1/2017"}, {"body": "per single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately example exactly passes single argument array containing object happens deferred thus donecallback executed immediately sounds like may want use whenapply", "d": "1/2017"}, {"body": "oh apologize misread signature thank help", "d": "1/2017"}, {"body": "fastfasterfastest wondering might opportunity document clarification ran problem cervengoc reason calling think helpful see mention like single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately includes arrays deferredpromise objects call jquerywhenapply array", "d": "1/2017"}, {"body": "documented way mozilla documents things would think probably would clearer applies jquery api calls well may trivial update make documentation change case think proper venue discuss may", "d": "1/2017"}, {"body": "example asking style property element document value would expect ca nt know rules may apply element inserted document since may different cascading rules depending inserted", "d": "1/2017"}, {"body": "see also think sufficiently ambiguous solved browser people make assumptions detached elements", "d": "1/2017"}, {"body": "hi dmethvin got point support option people make assumptions detached elements also great favor nt think bug jquery coding like thanks help", "d": "1/2017"}, {"body": "using jquery need upgrade problem nt jquery example", "d": "1/2017"}, {"body": "jquery behavior changed area seen hidden firefox chrome still issue", "d": "1/2017"}, {"body": "reopening based updated test case still needs decided whether something canshould fixworkaround", "d": "1/2017"}, {"body": "whoa nice one order support delegated events mouse pointer enterleave jquery uses corresponding overout event looks determine whether pointer actually entering leaving parent element seems bug chrome event reporting shadow dom element inside shadow dom called reporting jquery ca nt find element current thinks pointer must left building fires event see problem action turn settings show user agent shadow dom inspect screen shot attached", "d": "1/2017"}, {"body": "rbyers look like bug", "d": "1/2017"}, {"body": "whoa yes chrome bug thanks sorry trouble get fixed asap likely chrome guessing wo nt hard", "d": "1/2017"}, {"body": "chrome patch sounds like good", "d": "1/2017"}, {"body": "hello take tell proceed", "d": "1/2017"}, {"body": "incorrectusername sure find details contribute info commits prs", "d": "1/2017"}, {"body": "longer supporting releases problem still exists line please provide live test case eg jsfiddle js bin help us diagnose issue", "d": "1/2017"}, {"body": "please look programming help stack overflow ca nt debug app", "d": "1/2017"}, {"body": "thanks report however migrate guides lie issues reported could rereport one would like prepare pull request relevant file", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thanks report observed behavior expected jquery object create represents outer nt contain another invoke parts selector need lie inside element different works think documentation clear enough please open issue andor pull request", "d": "1/2017"}, {"body": "submitted correct behavior browsers implementing although still add new tests issue nt want override host environment offsetparent logic instead think deprecate already eliminates internal use", "d": "1/2017"}, {"body": "thanks hopping looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property", "d": "1/2017"}, {"body": "also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case", "d": "1/2017"}, {"body": "looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property explicitly fact soon documenting reliable elements transformed ancestors cf although may change future step towards also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case depends situation case far better live host environment definition upon box model properties depend impose cssom view algorithm start diverging dom css properties variety painful incompatible ways words report relative actual offset parent relative offset parent", "d": "1/2017"}, {"body": "whoops wrong button certainly appreciate suggesting technically right thing concerned consumers jquery start writing checks implementation offsetparent current browser supports code around use position offset nt seem like positive step fundamental library web situation worth exactly found bug sent email several hundred browser developers company warning hey nt rely method anymore check existing uses", "d": "1/2017"}, {"body": "hmm exploring live examples see mean guess like pr land update match spec add back", "d": "1/2017"}, {"body": "fine thank", "d": "1/2017"}, {"body": "hello think fix issue jquerynodename function removed srccorejs added srcdeprecatedjs correct wrong missing somethingcan take issue work approach", "d": "1/2017"}, {"body": "would great find information contribute info commits prs far required work issue work needed jquery core also want add warning jquery migrate plugin", "d": "1/2017"}, {"body": "clarify done know got pr eliminate internal calls order warn jquery migrate create internal put srcvarnodenamejs change internal calls new function expose internal deprecatedjs sound right everyone", "d": "1/2017"}, {"body": "dmethvin yes exactly said days ago", "d": "1/2017"}, {"body": "although seems nt varmodule case exported function", "d": "1/2017"}, {"body": "mgol oh sorry missed", "d": "1/2017"}, {"body": "looking distributed version jquery contains sizzle contains every single instance feature detection uses example linked rehash history feature detection first paragraphs address issue type conversion short history shows bad idea history enlighten us issues regardless fact sizzle originates another repository addressed makes lion share jquery know talk eliminating future nt help present jquery users feel free address wherever makes sense really know referring could saved time moving issue wherever sizzle maintained sorry confusion", "d": "1/2017"}, {"body": "feature detection drawbacks sometimes browser detection hat best strategy", "d": "1/2017"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "supposed actually use follow documentation fails", "d": "1/2017"}, {"body": "logic broken shadow dom return false elem shown shadow dom change works notice getrootnode new feature may require polyfill awful maybe access parentnode recursively javascript var ishiddenwithintree function elem el", "d": "1/2017"}, {"body": "removing deprecating", "d": "1/2017"}, {"body": "farseeing nothing changed respect external tooling relying interfaces hand plan big event refactor among things make possible support passive event listeners possible method change process maybe go away knows", "d": "1/2017"}, {"body": "anybody else curious issue think relevant chromium issue", "d": "1/2017"}]