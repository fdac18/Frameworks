[{"title": "way work around deprecation directly calling proptypes validators", "body": "came rather crude think promising way autogen component rendering tests throwing big list values components proptypes validators kind like using fuzzer use construct set supposedlyvalid values prop subsequently combine supposedlyvalid sets props direct calling prop validators deprecated way accomplish missing think test generator would really useful given dependent deprecated feature clear future fiddle demo", "num": "7623", "d": "8/2016"}, {"title": "bug using react net webbrowser", "body": "use react web application works well also office addins use problem occurs addins try show tag application show script error like go mentioned line code see following function located debugging found select looks like nt accept node tried increase ie version according guide shows following string refers ie luck error occurs ms office environment word addin excel addin etc try use net webbrowser component windows form application works correctly ideas use tag case", "num": "7622", "d": "8/2016"}, {"title": "setstate state updates status value array attributes original array length added length original array", "body": "setstate state updates status value array attributes original array length added length original array value inside original array ispush", "num": "7620", "d": "8/2016"}, {"title": "error shown use undefined variable", "body": "use react webpack use variable component like instead component fail silently errors shown", "num": "7617", "d": "8/2016"}, {"title": "bug onchange fires often using range sliders", "body": "react version chrome version current behavior react fires onchange events type even browser input event fire example html js const container documentgetelementbyid container class app extends reactcomponent componentdidmount thisrefs slider addeventlistener change event gt consolelog eventtargetvalue render return reactdomrender container try expected behavior observe console output dragging sliders first slider behavior incorrect fires dragging slider second slider behavior correct seen workaround incorrect behavior reference", "num": "7614", "d": "8/2016"}, {"title": "bug embedded slidesiframe mobile", "body": "want request feature report bug bug current behavior google slides nt show full screen mode button allowfullscreen attribute set truthy value current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expect slide display full screen mobile versions react browser os affected issue work previous versions react trying chrome safari using latest jsfiddle available react version application react", "num": "7613", "d": "8/2016"}, {"title": "reacttestrenderer custom depth rendering", "body": "want request feature report bug feature current behavior jsx mycomponentjs import react react import thirdpartycomponent thirdpartycomponent function myinternalcomponent return test export default function mycomponent return testjs import reacttestrenderer reacttestrenderer import react react import mycomponent mycomponentjs const renderer reacttestrenderercreate consolelog renderertojson renders whole tree dom actually expected behaviour problem dont want render shallow renderer isnt answer shallow would render problem hard divide component smaller internal chunks done work order achieve fully working patch done part shallowrenderer testrenderer besides patch pretty old resolving conflicts would hard expected behavior would love provide blacklist components nt want render js import thirdpartycomponent thirdpartycomponent const renderer reacttestrenderercreate dontrender thirdpartycomponent would return jsx js test test props returned internal logic combine full shallow renderer ideas implementation dont want waste time writing code wo nt marged master anyway possibly would allow resolve", "num": "7612", "d": "8/2016"}, {"title": "components render nonempty ca nt rerender", "body": "want request feature report bug bug react user perspective matter matters context serverside rendering want structure page template contains jsdisabled users see static one jsenabled users see dynamic one everyone happy current behavior bug please provide steps reproduce possible minimal demo problem via similar template open js console click rerender button fiddle current behavior expected behavior button update rerender remove set versions react browser os affected issue work previous versions react tried chrome linux understand happening nt think browser os issue jsx fiddle seems work firefox reproduce nonminimal version problem nt know much rehydration process works seems like reasonable solution might pass right rehydrating js enabled wo nt visible anyway chrome firefox least noscript setting seems constant mod refresh nt worry changing renders seems like might deserve fix trunk would also appreciate workaround short rendering outputting whole page twice would really prefer", "num": "7607", "d": "8/2016"}, {"title": "getting new inapplicable prop warnings please make less painful developers", "body": "passing userland nonapplicable props etc already widespread large codebase lot components add various properties eg bootstrap want pass rest props case applicable saw reason waste cpu timememorymy time cloning props deleting componentspecific props example code bottom post trying hard contain anger painstakingly change components get rid slew new react warnings inapplicable props react team really expect people write components way certainly nt remember seeing thorough explanations nt documentation even unknown prop warning page says ensure dom elements spurious props floating around without justification unkind developers providing kind global switch flag prop makes dom elements delete inapplicable props codemod wraps object spread props dom elements filter function example jsx flow import react component react import classnames classnames import addclass wrappersaddclass import getcontextclass getcontextcontent getshadeclass bootstrapproputils import alertsass import errormessage utilsreacterrorutils type props contextclass alarm error danger warning info success ok alarm error danger warning info success ok shade darker brighter darker boolean brighter boolean classname string children export default class alert extends component static link addclass alertlink render reactelement let classname children thisprops let contextclass getcontextclass thisprops type let shadeclass getshadeclass thisprops let content getcontextcontent thisprops", "num": "7604", "d": "8/2016"}, {"title": "unknown prop warning allowed props", "body": "jest snapshot test see warning classname react set class attribute understand change brought react sure getting classname get warning attributes use jest react", "num": "7601", "d": "8/2016"}, {"title": "native map detection reactcomponenttreehook fails corejs", "body": "want request feature report bug bug current behavior using polyfilled browsers without native map support current behavior bug please provide steps reproduce possible minimal demo problem via similar returns expected behavior using objects instead method implemented ca nt detect corejs polyfills look discussion comments versions react browser os affected issue work previous versions react", "num": "7593", "d": "8/2016"}, {"title": "documentmode document check giving inconsistent results", "body": "bug current behavior line changeeventpluginjs incorrectly returning false nonie browsers paired party code specifically returning false google tag manager case setting documentdocumentmode undefined causing errors input fields better check case might would still accomplish intended check minimizing conflicts codebases found couple instances issue versions react browser os affected issue chrome react", "num": "7583", "d": "8/2016"}, {"title": "rename", "body": "zpao gave talk react rally mentioned could improved renamed happy file pr make reality huge task anything consider big findreplace", "num": "7575", "d": "8/2016"}, {"title": "isrequired nesting validation functions", "body": "possible implement adding generic variant custom validation function without including checks null undefined function prior validator wrapped another validation function called value present allowed anymore call validations function directly nest", "num": "7574", "d": "8/2016"}, {"title": "oncontextmenu stoppropagation nt work", "body": "bind oncontextmenu div call eventstoppropagation event handle still reach contextmenu event handle document js documentaddeventlistener contextmenu preventmenuofcontextmenu false function preventmenuofcontextmenu event consolelog always log oncontextmenu event eventpreventdefault eventstoppropagation render return", "num": "7573", "d": "8/2016"}, {"title": "using react edge dangerouslysetinnerhtml nt work svg tag", "body": "hi everyone issue following fix works unfortunately nt edge seems edge implementing innerhtml property svg tag inefficient way using appends svg text dom tree seen using inspector edge nt render anything unless modify svg string inspector see codepen updated use react edge see issue course enforce edge use hack works nt know enforce except browser sniffing grr", "num": "7563", "d": "8/2016"}, {"title": "defaultprops replacing undefined function props", "body": "bug current behavior default function given replacing function prop defined defaultprops works string minimal example expected behavior calling appears returns value returned defaultprop versions tried result nt know versions", "num": "7562", "d": "8/2016"}, {"title": "dom property warning", "body": "support prop", "num": "7561", "d": "8/2016"}, {"title": "basicjsxprecompile working", "body": "hi downloaded script mentioned starter kit referred file indexhtml reactjs components renderingi got one console error referred online link new reactjs please help resolve error regards thangavel e", "num": "7560", "d": "8/2016"}, {"title": "reactjs components rendering ajax", "body": "hi used ajax load reactjs components html filebut components rendering explained sample link achieve regards thangavel e", "num": "7559", "d": "8/2016"}, {"title": "react nt override eventphase property fires synthetic event component event hander", "body": "demo eventphase always equal", "num": "7555", "d": "8/2016"}, {"title": "using throws securityerror firefox", "body": "want request feature report bug bug current behavior development mode firefox throws exception thrown line current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo expected behavior exception versions react browser os affected issue work previous versions react sure behave previous versions ff", "num": "7553", "d": "8/2016"}, {"title": "support symbol keys props", "body": "want request feature report bug want report bug current behavior nt receive props symbol keys example guess reactelementcreateelement current behavior bug please provide steps reproduce possible minimal demo problem via jsfiddle similar expected behavior symbolkeyed passed versions react browser os affected issue work previous versions react every single one far know", "num": "7552", "d": "8/2016"}, {"title": "react compiled latest google closure compiler", "body": "trying compile react latest closure compiler following output produced warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers function warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers function warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers null error nosideeffects may appear externs files render specpolicydefineonce error warning last one errors others warnings reproduce", "num": "7551", "d": "8/2016"}, {"title": "update html table without refresh table", "body": "let database table name hrtblemployee open webpage html table employee records insert record hrtblemployee database crontrigger call second get new row insert table table refresh html table add new row top delete row update delete row webpage delete frontend database table refresh please anyone simple solution tell regards ehsan fida", "num": "7547", "d": "8/2016"}, {"title": "input unable enter decimal", "body": "input unable enter decimal", "num": "7545", "d": "8/2016"}, {"title": "warn checkbox changes controlledness", "body": "warning controlled component becomes uncontrolled vice versa thought fixed apparently either fixed checkbox components maybe subsequently broke similar regardless fix demo case warn", "num": "7544", "d": "8/2016"}, {"title": "support link preload", "body": "rel preload new functionality latest browsers preload content however reactjs currently strips warning get unknown prop tag remove prop element details", "num": "7543", "d": "8/2016"}, {"title": "defaultvalue trigger onchange event", "body": "opinion defaultvalue programmatically init input value change input init input defaultvalue triggers onchange event wrong change yet think like defaultvalue pushing value input attribute keep consistency native events onchange triggering always value changes", "num": "7542", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml wo nt set html", "body": "come across issue dangerouslysetinnerhtml set html renders correctly situation need render dangerouslysetinnerhtml strips tags think missing outer table tags please see attached link example suggestionsworkaroundsfixes would awesome", "num": "7541", "d": "8/2016"}, {"title": "warnings antipatterns render", "body": "want request feature report bug right use setstate within render get tons warnings imagine quite expensive two reasons mainly warnings render every time ie setstate antipattern rendering message make browser go crazy current behavior current behavior makes warning message render setstate causes browser crash setstate rendered functions declared within render method current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug quite easy reproduce make function within render method calls setstate make instance event get error reproduced expected behavior get tons warnings console browser likely freeze need forceexit chromebrowser suggestion really want help feel like need contribute back react using extensively walkthrough would similar find react calls finds rendered trigger warning trigger warning first render experiment see make exception similar current build nt crash perhaps reset previous state something like print message state resets previous one es", "num": "7538", "d": "8/2016"}, {"title": "allow generators yield components place arrays", "body": "want request feature report bug feature current behavior generators silently discarded current behavior bug please provide steps reproduce possible minimal demo problem via similar template allowed legal would even better trailing nt required executed function expected behavior examples generate html foobar would make much easier write conditions middle jsx block snippet used current project jsx generatortoarray function samevehicleanddriverforallsegments yield billing type hourly flat notice write conditions statements without instantiate empty array push elements needed return array end generators take care versions react browser os affected issue work previous versions react na", "num": "7536", "d": "8/2016"}, {"title": "unclear docs api children esp children", "body": "writing table cell component specially handle case given single number looking documentation api unclear multiple components toplevel api say opaque suggest apis used preserve encapsulation type children props gives full details implemented suggests provided simply convenience docs reactchildrenonly say gets single child reality gets single child long child react element react least improves error message case questions suggestions improvements docs supposed opaque type children props updated supposed public multiple components toplevel api updated documentation updated clarify requires valid react element possibly explain use case requirement see comments confusion caused current documentation official recommended way get anything renderable child opposed valid react element child changing allow string number nodes closed wo nt fix using directly goes docs statement opaque using seems like overkill supposed opaque would new function useful solution", "num": "7535", "d": "8/2016"}, {"title": "reactrouter longer defaults history prop hash history", "body": "totally new react stuff get node application uses react ironed errors except shown picture pointers great total newbie node n react thanks", "num": "7534", "d": "8/2016"}, {"title": "ship", "body": "ship little bit x update latest semverpatch issues x ship amp update fbjs need x write changelog", "num": "7531", "d": "8/2016"}, {"title": "proposal stateful functional components", "body": "functional components awesome numerous reasons react way declare stateful equivalents functional components today feature proposal introduces backwardscompatible solution including optional observable state map object functional component example js import observablemap react const counter props state new observablemap value gt counter stateget value export default counter example state changes easily tracked using object initial value counter incremented decremented clicking one rendered buttons soon state changes stateful functional component calls resulting rerender component initial state provided assigned empty instance furthermore immutable variant made time travel debugging could made possible", "num": "7529", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml large amounts markup", "body": "display large amount markup generated server inside component lot markup around dangerouslysetinnerhtml takes long time stalls page several seconds sometimes crashes chrome assume happens react parses html creates elements everything way around behaviour ps also tried creating normally would takes way long well", "num": "7528", "d": "8/2016"}, {"title": "input file upload panel shows seconds chrome opening tabs", "body": "new react user upload file chrome opening tabs click upload button upload file panel display seconds use code chrome opening tabs local ps file upload panel show second open page separate window chrome upload file panel show second seem normal thanks", "num": "7527", "d": "8/2016"}, {"title": "set state defaultvalue ca nt work", "body": "", "num": "7525", "d": "8/2016"}, {"title": "chromium fails inline style display revisited", "body": "want request feature report bug bug revisited current behavior posted bug error description correct bug using inline style display flex fails add dom display block variants work like reproduce bug jsfiddle jsfiddle adds display flex correctly browser working example jsfiddle versions react browser os affected issue work previous versions react react chromium os ubuntu", "num": "7524", "d": "8/2016"}, {"title": "test onselect", "body": "testutils allows simulation several types events could nt find way simulate onselect event input element looking wrong place test onselect event thank", "num": "7522", "d": "8/2016"}, {"title": "chromium fails inline style display", "body": "want request feature report bug bug current behavior using inline style display relativeabsoluteflex fails add dom every attribute added except display versions react browser os affected issue work previous versions react react chromium os ubuntu", "num": "7521", "d": "8/2016"}, {"title": "feature request reactdom server rendering chunked encoding", "body": "feature request current behavior currently must synchronously render complete component means react servers connect data sources must wait respond beginning send http response desired behavior support serverside use exposing streaming render api eg providing way react components block rendering serverside would improve would enable much lower latency cases server connecting multiple backing services service request content early document delivered browser backends responded", "num": "7518", "d": "8/2016"}, {"title": "optimization env production", "body": "development process staging env rely nodeenv staging since staging close possible production would like react optimization enabled way explicitly ask optimization without setting nodeenv", "num": "7512", "d": "8/2016"}, {"title": "add new properties received object call fn object argument without freezing", "body": "strange bug behaviour following code works following codes freeze browser", "num": "7509", "d": "8/2016"}, {"title": "number input uncontrolled mode issues changing defaultvalue", "body": "want request feature report bug bug current behavior providing number input causes element enter sort semicontrolled mode changing noop element mounted seems set property element break behavior uncontrolled component current behavior bug please provide steps reproduce possible minimal demo problem see fiddle try enter expected behavior show input box since dom property changed provided changed think dom trying programmatically set input interim value real number like wipes resets empty string caught handler persisted back effectively losing input versions react browser os affected issue work previous versions react latest react latest chrome", "num": "7507", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml working svg elements edge browser", "body": "appears bug react microsoft edge browser previously bug older internet explorer browsers well appears fixed unfortunately fix resolve issue edge modified codepen original issue use react includes abovereferenced pull request demonstrates bug edge output codepen ie expected behavior available internet explorer yet react still able function output codepen edge problem seems edge use ie workaround code yet edge appear refreshing dom updating least see svg contents added dom using inspect element visible browser", "num": "7506", "d": "8/2016"}, {"title": "reactcomponenttreehook end production build", "body": "noticed getting included production builds filing track specifically fixed recently regressing likely related", "num": "7492", "d": "8/2016"}, {"title": "input element backspace work", "body": "want request feature report bug report bug current behavior open demo type five character text caret position ie forced every change use arrow mouse move caret position ie press backspace caret goes position ie expected behavior caret obey go position even backspace versions react browser os affected issue work previous versions react bug started react react problem issue reported heymdall found wrap sets position correctly though user would type slowly ensure always happens workaround", "num": "7489", "d": "8/2016"}, {"title": "controlled input typeemail produces console warnings chrome", "body": "want request feature report bug bug current behavior chrome osx produces console warnings reactcontrolled fields current behavior bug please provide steps reproduce possible minimal demo problem via similar template js class app extends reactcomponent constructor super thisstate value render return expected behavior chrome produce warnings versions react browser os affected issue work previous versions react os os x browser chrome react version gt including current release earlier issue closed comment documented still issue see currentlyopen issues related problem", "num": "7487", "d": "8/2016"}, {"title": "better error message reactelementvalidator type error", "body": "currently throws warning warning reactcreateelement type null undefined boolean number string dom elements reactclass composite components would helpful warning actually said value passed eg warning reactcreateelement invalid value type string dom elements reactclass composite components", "num": "7485", "d": "8/2016"}, {"title": "printwasted nt show wasted renders", "body": "want request feature report bug possibly bug current behavior using react addons perf printwasted see many entries think example case see entries current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior root gt app show printwasted rerender click output cached element wasted render see code walk tree bottom component nt wasted render mark app wasted render even though versions react browser os affected issue work previous versions react mac osx unsure", "num": "7484", "d": "8/2016"}, {"title": "master umd builds work commonjs using webpack alias config", "body": "sure yet putting forget check later past could put webpack config many people improve build times works master likely related recent sebmarkbage changes fails like seems like claims umd shim assumes global environment whereas true umd shim would detect environment fallback available cc zpao", "num": "7482", "d": "8/2016"}, {"title": "doc explain bind methods arrow functions", "body": "want request feature report bug feature specifically improvement docs current behavior read trough react documentation last days confused section docs say better performant could nt find place docs shows arrow function alternative accidentally learn open source github projects reactcodemod approach performance nt somewhere docs current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug expected behavior kind mention arrow function approach bind methods component preferably well documented versions react browser os affected issue work previous versions react sure due update react sure version pd btw issue accepted planned would happy make pr fix guidance community else include docs wink", "num": "7479", "d": "8/2016"}, {"title": "problematic code tutorial", "body": "page pollinterval caused browser load apicomment every instead pollinterval load every seconds", "num": "7478", "d": "8/2016"}, {"title": "input typesearch trigger react change event clicking clear button", "body": "want request feature report bug bug current behavior chrome firefox edge etc using clicking clear button x right triggers react onchange event probably earlier versions onchange event fire even though input cleared get fired search box cleared expected behavior react event consistently fire well versions react browser os affected issue work previous versions react react definitely affected sure worked previously affected browsers including edge appear", "num": "7475", "d": "8/2016"}, {"title": "unable run babel code without serving http file source file", "body": "new trying install run without serving http file following package manager installed created file root directory following code removed http source file access doest work trouble please help solve thank advance", "num": "7470", "d": "8/2016"}, {"title": "warning react attempted reuse markup", "body": "want request feature report bug bug current behavior says warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client serverside react render discarded make sure initial render contain clientside code one see parts equal nt know complaining expected behavior would complain unequal strings versions react browser os affected issue work previous versions react latest react", "num": "7469", "d": "8/2016"}, {"title": "bug embedded slidesiframe", "body": "want request feature report bug bug current behavior google slides enter full screen mode allowfullscreen attribute set truthy value current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expect slides display full screen versions react browser os affected issue work previous versions react trying chrome firefox using latest jsfiddle available react version application react", "num": "7467", "d": "8/2016"}, {"title": "alternatives dangerouslysetinnerhtml methods", "body": "hi read alot warnings dangerouslysetinnerhtml api react suggest instead official page examples simple strings like first second nt know implement methods wide spread cases like displaying text inner markup database like even complicated case text created tinymce editor display properly without dangerouslysetinnerhtml ps saw different plugins like similar much popular stars count less", "num": "7462", "d": "8/2016"}, {"title": "element migration one parent another", "body": "want request feature report bug feature request current behavior currently high performance way move rendered element one parent another causes lot overhead requires full mountcomponent new place even reuse component instance versions react browser os affected issue work previous versions react need trying optimize one specific case need render component invisibly order measure dimensions need render component visible area currently need buy overhead case fact done pure dom simple appendchild call almost overhead specific talking reactvirtualized library specific cellmeasurer component become faster avoid overhead", "num": "7460", "d": "8/2016"}, {"title": "inline style including important ignored", "body": "set style works expected ignored like example", "num": "7459", "d": "8/2016"}, {"title": "hanging process references pulling shim bundling", "body": "occurs bunch times leaves references usual replacement done creating production build resulting shim pulled increasing bundle size unless manually configure eg webpack config mentioned release notes", "num": "7447", "d": "8/2016"}, {"title": "react shows warnings unknown props root level components", "body": "probably bug unpleasant change many passing props root components ie div etc unknown prop large stack trace displayed us using cljs libs omreagent frequently leverage passing props around amp args div quite bit write components take open ended markupcontent would painful go back refactor many components deal massive amounts obnoxious stack traces make development extremely unpleasant show warnings prior display behavior", "num": "7445", "d": "8/2016"}, {"title": "feature request change default shouldcomponentupdate shallowcompare", "body": "understand backwardcompatible guess people use pure component approach majority components", "num": "7443", "d": "8/2016"}, {"title": "pass default parameter values function", "body": "got error updating reactnative react think right syntex dont know error coming thislist function table callback wheredata selection extra syntaxerror unexpected token exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs", "num": "7441", "d": "8/2016"}, {"title": "bug didputlistener tries finddomnode unmounted component", "body": "believe bug potentially related specific details different enough wanted file separate issue feel free close root cause repro clickme component runs click first renders components type b let call componentdidmount function calls setstate comes play later updates new prop acomponentdidupdate unmounts mounts new b done react runtime performs ops presumably due setstate leads warning react ca nt find root component node datareactid value seeing message probably means loaded two copies react page time single copy react loaded time uncaught typeerror read property firstchild undefined peeking stacktrace looks like trying finddomnode alreadyunmounted component weird details leaving onclick removes error calling setstate bcomponentdidmount also removes error bit different erroring unmount b click erroring onclick setstate react tested briefly react got invariant violation react dom tree root always node reference presumably better formed version error", "num": "7440", "d": "8/2016"}, {"title": "add catch block function rendervalidatedcomponent", "body": "like js rendervalidatedcomponent function var renderedcomponent reactcurrentownercurrent try renderedcomponent thisrendervalidatedcomponentwithoutownerorcontext catch error consolelog error alert error", "num": "7439", "d": "8/2016"}, {"title": "import addons reactwithaddons", "body": "want require reactlibreactmount reactlibreactinputselection precompiled reactjs got none", "num": "7437", "d": "8/2016"}, {"title": "inline style working dynamically", "body": "want request feature report bug report bug current behavior style props component render dom rendertabscontent return thispropschildrenmap tab index gt const activestyle visibility visible const disabledstyle visibility hidden console images expected behavior render dom style visibility hidden versions react browser os affected issue work previous versions react version react", "num": "7432", "d": "8/2016"}, {"title": "write documentation", "body": "first day used already stumbled upon three problems injectenvironment called twice bug fact refs rendered setting ref dom element react erroneously warns stateless function components given refs also probably related going shipped soon think deserves comprehensive documentation soon possible least troubleshooting bulletpoints text one supposed refs sometimes use refs example setting focus input code fail always test ref nt undefined using plans near future solve issue way", "num": "7431", "d": "8/2016"}, {"title": "contains nonstandard property", "body": "want request feature report bug report bug current behavior object includes icon property section title attribute supported standard html element included specs list attributes list attributes mozilla developer network includes list attributes specifies element use obsolete element supported desktop mobile browser expected behavior property might better placed section titled nonstandard properties removed altogether documentation html attributes could omit encountered issue working typescript opened issue react type definition react includes custom interfaces extend definitelytyped reacthtmlattributes include nonstring property versions react browser os affected issue work previous versions react added react alpha commit message mentions possible part draft standard time omitted final spec", "num": "7430", "d": "8/2016"}, {"title": "reactcsstransitiongroup working ie webpack", "body": "want request feature report bug bug current behavior transitionappear working ie webpack current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior transition appear ie versions react browser os affected issue work previous versions react react reactaddonscsstransitiongroup browser ie os window", "num": "7429", "d": "8/2016"}, {"title": "proposal ordered attribute white list new property injection types", "body": "working lot wrapper fix ie chrome bugs noticed good portion code exists prevent attributes assigned wrong order inserting specific way got curious benefits centralized ordered property assignment might yield interested eliminating special attribute assigning ordering cases like assigning eliminate special assignment order code investigating reimplementing chrome backspace fix logic moved code eliminated guarantees property assignment order curious could eliminated wrappers dom utilities work sort hesitate share curious type thing would accept contribution safe work parallel react fiber feature going start reproducing edge cases fixed wrappers start working towards reducing amount rule breaking require get properties assign expected otherwise guess much better understanding property assignment works", "num": "7428", "d": "8/2016"}, {"title": "investigate recent performance regressions dev", "body": "development build become much slower lately likely due new warnings perf measurements intend look next week", "num": "7427", "d": "8/2016"}, {"title": "updating style attribute radial gradient chrome safari", "body": "want request feature report bug current behavior attribute nt get updated changing see update value though current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open chrome safari click closestside button css string changes gradient remain click update position button update attribute dom node position extent keyword changing value directly via developer tools update must reactrelated bug see update gradient change position expected behavior try steps firefox see proper behavior versions react browser os affected issue work previous versions react reproducible", "num": "7425", "d": "8/2016"}, {"title": "falsepositive mutation warning", "body": "given following test case jsx function testcmp return nan reactdomrender documentgetelementbyid app produces following warning probably caused mutation check introduced nt work nan nan nan", "num": "7424", "d": "8/2016"}, {"title": "missing polyfill ie", "body": "using getting error offending line adding suggested seems fix problem believe issue introduced moving reverted older react verify nt react include polyfill", "num": "7423", "d": "8/2016"}, {"title": "ca nt set caret setstate callback ie v", "body": "controlled input works fine ie press backspace setselectionrange works sample sample", "num": "7422", "d": "8/2016"}, {"title": "onfocus onblur events input elements cause issues", "body": "want request feature report bug bug current behavior use events element react app event handler set input value empty string get looking stack trace trying delete value detach onpropertychange handler onfocus onblur called versions react browser os affected issue work previous versions react react browsers frankly able reproduce locally browser seeing error happen times bug tracking system know probably helpful figured least see anyone else run happy close issue feel enough information", "num": "7421", "d": "8/2016"}, {"title": "bug reacttestutilsimulate tolowerstring mutating event type", "body": "current behaviour reacttestutil returning nodes event type cast lower case strings causing test failures several external repos reactselect publicfacing example far tell issue appears type mismatch causing dom nodes return node initially called expected behaviour reacttestutil return proper event type cast string steps verify clone verify tests fail react reactaddontestutil using replace line run verify tests pass tested react chrome os x", "num": "7418", "d": "8/2016"}, {"title": "freeze classes defaultprops dev mode", "body": "make compiler optimizations around classes inlining defaultprops need know nt get mutated escape analysis difficult js compiler start enforce nt rely escape analysis also make getterssetters make nice warning messages sets although weigh slowing dev mode property exists preserve enumerability property nt exist still ok attach gettersetter long nonenumerable", "num": "7415", "d": "8/2016"}, {"title": "doc confusing rather", "body": "wherever else applicable var myformcomponent reactcreateclass myformcomponentrow reactcreateclass myformcomponentlabel reactcreateclass myformcomponentinput reactcreateclass three dots type spread operator pseudocode placeholder think order help confused reader use comments instead pseudocode var myformcomponent reactcreateclass myformcomponentrow reactcreateclass myformcomponentlabel reactcreateclass myformcomponentinput reactcreateclass", "num": "7413", "d": "8/2016"}, {"title": "shouldcomponentupdate nt work well component accepts children", "body": "react shouldcomponentupdate based performance improvements work great improving performance mediumweight components large numbers instances even work well event handlers ignore event handler changes instead pass locally bound method access demand however fails apart start passing react elements pure components js use strict import react component proptypes react import reactdom reactdom import shallowequal recomposeshallowequal shallowequalexcluding fictional function works like shallowequal ignores changes list props passed third argument class button extends component static proptypes icon proptypesnodeisrequired onclick proptypesfunc class icon extends component static proptypes name proptypesstringisrequired color proptypesstring const nilclick gt reactdomrender documentqueryselector container reactdomrender documentqueryselector container invovation reactdomrender documentqueryselector container invovation given sample component expects icon passed prop simple pure components button also coded rerender changed pretend button actually heavy props state nt change frequently second invocation icon require prop change render button prop changed require render third invocation icon require render button need render except change icon however practice button always rerender including second invocation nothing changes always result new instance never normally could work around within component without telling users store variable think need change props functions could pass function use objects deep comparison know structure object react elements even though allows react know current component render dependency subcomponent access information button tell icon requires render practice turn problem writing libraries rather application notably material ui suffers problem production light used use react element prop reasonably checkboxes one page even pure identify whether icon requires update result render component containing checkboxes check single checkbox result instances think ideas type api could added react solve issue shouldcomponentupdate helper obvious api would toplevel react function given instance context old reactelement new reactelement would return result component heavy parent components use implement aware render dependencies children bonus theoretically could temporarily remember walking current tree instead calling multiple times every potentially nested component result simply calls raised highest level component renderdependent however expect problem also responsible state dependent updates supposed rendered instance reactelement instance know passing current instance reference state either props ref based shouldcomponentupdate helper second obvious api would helper instead uses ref downside get ref component nt create inevitably use render passthrough next idea render passthrough way render process component say need render update children mine may would tell react skip render run instances deeper tree however components know need updates pass new props passthrough wo nt work instead need way tell react run pass update specific component instance advantage using instead allowing medium components wrapping light components child requires also allow heavy components never unless require still allowing permit light children update partial renders based applying updates component child feels somewhat awkward forced though robust idea might partial render lifecycle optionally runs call render subtree belongs current component js class heavycomponent extends component shouldcomponentupdate nextprops ignore icon children return nextpropstext thispropstext though probably potential conflicts expect reactline way name would something like would invoked using used would really light component probably would render children probably accept dom refs part react lifecyclewalker part client side browser reactdom like", "num": "7412", "d": "8/2016"}, {"title": "bug onclick firing radio button selcted arrow keys", "body": "current behaviour handler fired radio button selected using arrow keys expected behaviour fired navigating radio buttons arrow keys example click radio press right navigate second radio box reactevent logged console alert appears tested react amp chrome os x", "num": "7407", "d": "8/2016"}, {"title": "memory leak react nonproduction server side rendering", "body": "memory leak appears introduced server side rendering react size heap grows proportionally number requests received confirmed node also confirmed work correctly react reproduce start app configured serverside rendering production inspect heap hitting server number requests used heapdump take snapshots wrk hit app bunch requests load snapshots chrome dev tools profiler see culprit appears react children mutation warning saves reference given react element props object cleanup steps never called server thus object ever growing versions react browser os affected issue work previous versions react react reactdom node express", "num": "7406", "d": "8/2016"}, {"title": "ca nt fire ontouchend ontouchcancel events", "body": "hello trying create horizontal scroll issue create two buttons button add events ontouchstart ontouchend ontouchcancel event ontouchstart triggers change margin container contains scrollable elements ontouchend ontouchcancel need stop scroll events nt trigger ca nt stop scroll cases events may trigger use chrome os ubuntu react tested chrome device mode code", "num": "7404", "d": "8/2016"}, {"title": "transform stateless component stateful harmlessly", "body": "want request feature transform stateless component stateful awful git diffs want better way write stateless statefull component switched harmlessly less diffs possible maybe someone recommend better way construct code", "num": "7401", "d": "8/2016"}, {"title": "question update context descendant component", "body": "want use context pass data parent descendant components also need update context descendant component like clicking descendant component find document tell wondering antipattern", "num": "7399", "d": "8/2016"}, {"title": "reactdom package longer listed npm registry", "body": "page show via search npmjscom either package still linked zpao npm profile npm issue", "num": "7398", "d": "8/2016"}, {"title": "reacttestrenderer outputs undefined html tag", "body": "currently starting test coverage jest using reacttestrenderer compare snapshots running issue simple component rendering prop leaving proptypes jsx const poccomponent props gt propssomeattribute export default poccomponent use test jsx import poc poccomponent describe poc gt work gt const component reacttestrenderercreate const tree componenttojson expect tree tomatchsnapshot reacttestrenderer gives us output snapshot poc work pass someattribute string instead number snapshot generated expected number instead tag using react amp reacttestrenderer v", "num": "7392", "d": "8/2016"}, {"title": "reusable components probably wrong", "body": "using react business projects since built large medium many small apps one dreams create reusable components shared across projects still support highly customization even css framework changes mean want support bootstrap foundation semantic ui raw styles frameworks nt know discovered highly explicit nt make styling assumptions example ps trying say approach best others bad sharing fixed problem others try approach see fit projects problem passing building reusable api create formal api general defining database model allowing consumer pass anything cool small projects prototypes reusable component need make formal assuming bootstrap used pass classes foundation semantic ui users nt use css framework reusable component support many styling frameworks techniques every project different solve make formal api early create formal api reusable component nt mean still experimenting looking good api reusable component nt define classes styles except styles know never change type component building eg dropdown autocomplete popup always need styles like etc case problem styles define component behave never change change css framework aesthetics styles real world example getclassnamegetstylebutton know always types formalize consumer use apply specific styles classes function reusablebutton type getclassname getstyle children return reusablebuttonproptypes type proptypesoneof primary secondary success warning danger isrequired getclassname proptypesfunc getstyle proptypesfunc children proptypesnodeisrequired reusablebuttondefaultprops getclassname gt null getstyle gt null myappbuttonjs future need change css framework probably need change function function getclassname type return function getstyle type type danger return fontsize return null function myappbutton type children return advantages simple example probably wo nt see advantages try list creating formal api helps thinking apply styles next project defines types every app needs nt need think possible styles use every project use api back project weeks months later know use pulling fixes easy upgrading easy updating one file build platform top eg etc instead trying cover every use case inside use power composability", "num": "7391", "d": "8/2016"}, {"title": "url references react reactdom tutorial docs showing undefined", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7389", "d": "8/2016"}, {"title": "purecomponent breaks hot reload", "body": "seems switching breaks hot reloading error messages reliably reproduced project simply switching back fix problem", "num": "7388", "d": "8/2016"}, {"body": "server side rendering actually mount components means get called either use case", "d": "8/2016"}, {"body": "makes sense use case incorporating function calls create chart axis charts must rendered server need take pictures store send client requires call function pass actual node think alternate method involves making additional child component allows add extra function calls component actually rendered better suggestion", "d": "8/2016"}, {"body": "sorry quite understand without example requires call function pass actual node presumably real node server would", "d": "8/2016"}, {"body": "solved ended trying impossible ended solving solution running within context server using convert string used phantom render image generated dom", "d": "8/2016"}, {"body": "warning measure meant educate people rely existing production code thus using product features eg creating schemas executed production think remove warning react completely make throw hard production work development kind functionality still work without risk somebody relying prod would throw right away prod", "d": "8/2016"}, {"body": "however looking future likely start deemphasizing proptypes eventually recommend people use flow typescript instead would rather recommend looking side tool spectrum", "d": "8/2016"}, {"body": "need inspect really properties", "d": "8/2016"}, {"body": "sorry format way see object properties webbrowser component sign delimeter", "d": "8/2016"}, {"body": "interesting would recommend trying reproduce without react create similar dom structure vanilla js", "d": "8/2016"}, {"body": "pure select rendered correctly doesnt use domlazyload \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c dan abramov \u043d\u0430\u043f\u0438\u0441\u0430\u043b interesting would recommend trying reproduce without react create similar dom structure vanilla js receiving authored thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "certainly looks like dom node tagname nt property list sounds like narrow sure first argument issue case think dan meant try reproduce behavior without react think ie work top perf something like", "d": "8/2016"}, {"body": "react swallow exceptions must something else chance using promise polyfill log unhandled rejections", "d": "8/2016"}, {"body": "way able help unless provide example reproducing", "d": "8/2016"}, {"body": "bumped past callstack promise results reflow react catching errors render process best ability debug anyway possible going edit sorry get skimming", "d": "8/2016"}, {"body": "hey woutervh thanks report expected behavior react normalizes event consistent across browsers see spicyj comment plan make onchange consistently fire every change browsers see use onblur maybe onmouseup behavior looking native onchange event varies widely across browsers even nt anything special react probably want", "d": "8/2016"}, {"body": "ingikim tried outside jsfiddle believe run issues already running", "d": "8/2016"}, {"body": "aweary yes tried outside jsfiddle full screen mode working desktop browser showing full screen button mobile", "d": "8/2016"}, {"body": "ingikim warning console indicating capitalization wrong still nt work fiddle add attribute iframe element dom vendor prefixed versions nt supported apparently react could handle prefixes whenever provided nt already", "d": "8/2016"}, {"body": "brigand thanks letting know typo put website full screen button appears desktop browser nt appear mobile browser ca nt make google slide full screen mode mobile", "d": "8/2016"}, {"body": "attribute amp working desktop nt know much else sounds like might limitation mobile browsers fwiw prefixes unnecessary unless supporting older browsers unprefixed sometime major browsers suspect issue though could try setting attributes manually", "d": "8/2016"}, {"body": "full screen button appears desktop browser nt appear mobile browser look sounds like might issue responsive ui embed think reports google slides look get home", "d": "8/2016"}, {"body": "possibly would allow resolve airbnbenzyme reference change would affect enzyme api rely", "d": "8/2016"}, {"body": "amend penultimate paragraph perhaps reasonable solution would patch dehydration process hello becomes instead hello nt imagine react would problems essentially use instead inside reasoning applies updates thither wo nt matter anyway", "d": "8/2016"}, {"body": "okay looks like quite easy thought implemented really hackily nt looked react code passes tests right thing server ie outputs rehydration time react tries noscript chokes nt contain child nodes immediate attempts patch unsuccessful still open suggestions", "d": "8/2016"}, {"body": "related", "d": "8/2016"}, {"body": "thank sure missed search take discussion", "d": "8/2016"}, {"body": "old gist included justification unfortunately comments nt get copied transitioned selfhosted warning pages providing switchwrapper strips unknown props whole point get rid whitelist understand react community large work hard minimize burden migrations community however philosophy continuously improve react rather letting stagnate due legacy codebases balance always consider community burden honestly believe best long run fwiw opensource wrapper may want record recommend solution recommend follow one patterns documented warning page however looking simple shortcut people found useful appears match asking extent request suppress warnings tracking", "d": "8/2016"}, {"body": "copying justification reference historically react maintained whitelist valid dom attributes would strip unrecognized attributes approach couple major downsides performance means must check every prop every dom element sanity check prop valid strip prop legal silly majority elements completely safe illegal attributes thus checks wasted cpu cycles old technique forced us maintain huge whitelist possible dom attributes pain maintain importantly accidentally miss one browser vendors add new one means prop ca nt used update whitelist old technique less flexible impossible render nonstandard attribute rendering nonstandard attributes recommended use attribute instead sometimes situationsframeworks require sucks react previously could nt support", "d": "8/2016"}, {"body": "jimfb nt guys get rid whitelist entirely render every single prop whether legal would problems mentioned assume worried safety safety could nt warn unsafe props provide alternative way pass unsafe props nt warn", "d": "8/2016"}, {"body": "jimfb nonrecommendable", "d": "8/2016"}, {"body": "nt guys get rid whitelist entirely render every single prop whether legal need warn version otherwise hard engineers figure invalid props introduced order clean would problems mentioned assume worried safety safety could nt warn unsafe props provide alternative way pass unsafe props nt warn sure understand question throw darts see sticks passing unexpected prop component indication bug influential decision however fact people massive legacy codebases blindly forward props like majority people though sounds like may one opinion spewing props dom terrible thing sufficiently bad need provide migration plan users clean components difficult fix without proper warnings warn ultimately believe code better maintainable explicit pass props intend render effect nonrecommendable reactknownprop less oppose rest team maybe let one chime think main arguments less explicit explicit makes code maintainable requires maintaining whitelist inevitably go date works solution want use probably fine imo mentioned", "d": "8/2016"}, {"body": "could course provide api users whitelist additional props case falls behind temporarily really nt see big problem never thought spewing random props dom okay mind react dom elements behaved like custom components could add additional inapplicabe properties wanted properties would get ignored indeed", "d": "8/2016"}, {"body": "share componenttest case getting warnings better yet repo reproducing", "d": "8/2016"}, {"body": "also getting try get test repo later today also getting", "d": "8/2016"}, {"body": "suggestions could", "d": "8/2016"}, {"body": "ugly solutions like detecting feature availability iframe", "d": "8/2016"}, {"body": "running dev builds old browser major use case noticeably slower corejs polyfill", "d": "8/2016"}, {"body": "problem wanted attract attention problem nativeness detection corejs detection used somewhere else future", "d": "8/2016"}, {"body": "think want use maps production code path eventually wo nt always devonly issue", "d": "8/2016"}, {"body": "would like send pr", "d": "8/2016"}, {"body": "sure thing", "d": "8/2016"}, {"body": "merged close thanks", "d": "8/2016"}, {"body": "potentially need update react native react art reacttestutils etc followup", "d": "8/2016"}, {"body": "smile", "d": "8/2016"}, {"body": "actually wo nt problem anymore react native ships copy renderer open diff", "d": "8/2016"}, {"body": "clarify suggesting wait happen make refactor less need changed", "d": "8/2016"}, {"body": "yea think", "d": "8/2016"}, {"body": "issuepr subscribe know work issue", "d": "8/2016"}, {"body": "think sebmarkbage submitted diff internally visible pr react native assign issue keep track ping road clear", "d": "8/2016"}, {"body": "warning message see contains link follow link see instructions writing generic validators last section", "d": "8/2016"}, {"body": "specifically section looking called fixing false positive third party proptypes", "d": "8/2016"}, {"body": "thank using reactnative nt get warning messages saw parameter value debugging validator nt work", "d": "8/2016"}, {"body": "mean work hard say work without code", "d": "8/2016"}, {"body": "used last parameter secret pass isrequired flag", "d": "8/2016"}, {"body": "afraid understand without code", "d": "8/2016"}, {"body": "code broken changed works thanks javascript import lodash export function enumtype typename typevalues", "d": "8/2016"}, {"body": "hey lgra thanks report version edge using", "d": "8/2016"}, {"body": "hi brandon aweary tried using edge edgehtml modernie vm", "d": "8/2016"}, {"body": "thanks lgra think duplicate going close favor feel free subscribe issue updates", "d": "8/2016"}, {"body": "perfectly true perfect duplicate uses codepen nt know nt seen switch one", "d": "8/2016"}, {"body": "lgra understand correctly version edge prerelease version correct get looking modernie briefly edit nevermind seem like current stable release might still worth mentioning edge team regression", "d": "8/2016"}, {"body": "weird file jsfiddle minimal example behaviour", "d": "8/2016"}, {"body": "forgot save apparently tried understood mistake sorry trouble making mistake defined function class definition since static defaultprops evaluated undefined moreover made minimal example jsfiddle think end using note colon instead equal sign defaultprops ignored wanted redo noticed following throws jsfiddle right", "d": "8/2016"}, {"body": "attribute html standard mean", "d": "8/2016"}, {"body": "ocx plugin firefox must set attribute", "d": "8/2016"}, {"body": "please refer relevant documentation", "d": "8/2016"}, {"body": "html file screenshot contains instructions run babel compile jsx files need follow instructions example work new projects learning react recommend recently released create react app mentioned documentation yet new recommend try easier figuring build configuration", "d": "8/2016"}, {"body": "thanks reply textbabel scripts trigger append ajax response content dom resolve", "d": "8/2016"}, {"body": "even sure yall askin", "d": "8/2016"}, {"body": "sorry understand asking provide sequence steps screenshots demonstrating goes wrong expected", "d": "8/2016"}, {"body": "hi gaearon thanking reply indexhtml buttondefaulthtml used ajax load buttondefaulthtml file debugger hit append ajax response data dom use script type textbabel achieve solution regards thangavel e", "d": "8/2016"}, {"body": "right example precompiles jsx hand seem want use executed runtime reason use create react app instead", "d": "8/2016"}, {"body": "yes previous comments attached screenshot comments attached screenshotplease check previous comment screenshots solution", "d": "8/2016"}, {"body": "would like repeat reason use create react app instead much easier use examples tried work need ensure line file please consider trying create react app instead much easier explain", "d": "8/2016"}, {"body": "hi gaearon script type textbabel work need ensure line html file referred browserjs file indexhtml fileits trigger domcontenteloadthis script trigger append ajax response content dom normal script tag trigger append ajax response append dom try create react app let know regards thangavel e", "d": "8/2016"}, {"body": "okay realize adding scripts ajax call bit unusual try create react app let know", "d": "8/2016"}, {"body": "never even mentioned ok thanks", "d": "8/2016"}, {"body": "solution reactjs components rendering ajax", "d": "8/2016"}, {"body": "hi section documentation explains loading initial data via ajax example uses jquery use preferred way fetch hope helps encourage post usage questions issue tracker mainly bugs react thanks", "d": "8/2016"}, {"body": "additional information happens firefox autofills form use get error", "d": "8/2016"}, {"body": "got problem", "d": "8/2016"}, {"body": "familiar code happy work fix struggling reproduce issue test code html know firefox autocompleting file input", "d": "8/2016"}, {"body": "zdila say development mode referring specifically", "d": "8/2016"}, {"body": "please explain use case", "d": "8/2016"}, {"body": "frameworkspecific props example brabadutanok internal implementation elmarchitecture uses convention deprecated property name pass around sending actions instead export mark component frameworkdependent without inventing names avoid collisions guess find place acdliterecompose nt use much nt possibility receiving keyed props enough reason process way passing element throwing warning mentioning behavior documentation", "d": "8/2016"}, {"body": "framework could also choose cryptographically random alphanumeric key would effectively eliminate possibility name conflict save variable use symbol desired another workaround create prop called takes general object containing frameworkspecific props use symbols anything else desire usage would simplicity keys strings something little reluctant give component authors start accepting symbols keys things become complicated instance story around jsx intuition anything perhaps throw warning encounter symbol prop key", "d": "8/2016"}, {"body": "random string key fine alternative overloaded look jsx symbol jsx import randomkey framework", "d": "8/2016"}, {"body": "replaced passing props component warning react behavior", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "know fix", "d": "8/2016"}, {"body": "sorry removing annotation make compile sure valid fix tried find clue commit history added annotation already present initial public release commit", "d": "8/2016"}, {"body": "hi ehsan use github tracking issues changes react implementation nt general support encourage seek help places stack overflow generally really great place start good luck", "d": "8/2016"}, {"body": "please elaborate issue able enter decimals input", "d": "8/2016"}, {"body": "codepen type adds cursor shifts beginning input end typing", "d": "8/2016"}, {"body": "thanks reporting duplicate", "d": "8/2016"}, {"body": "yup looks like core issue bunch discussion let close", "d": "8/2016"}, {"body": "like give try anything else need know pick", "d": "8/2016"}, {"body": "marcinmazurek sounds good recommend looking issues linked collect background andor ideas also add couple unit tests verify new functionality make sure nt regress", "d": "8/2016"}, {"body": "seems like determining controlledness consistent validation treats component uncontrolled undefined however rendered checkboxradio toggled also checked page suggests null considered uncontrolled value text input mention checkboxradio input think happen checkbox want warn changing null boolean way round solution would look like proof concept final solution final solution requires work implement consistent solution everywhere present switching controlled value text input getting following warning comes maybe implement similar warning checkboxes null bit unexpected value guess boolean value allowed", "d": "8/2016"}, {"body": "think happen checkbox checked null behave exactly setting undefined want warn changing null boolean way round solution would look like marcinmazurek yes looks approximately correct left inline comment comes srcrenderersdomsharedhooksreactdomnullinputvalueprophookjs maybe implement similar warning checkboxes null bit unexpected value checked guess undefined boolean value allowed yeah probably true historically generally tried treat agree passing null almost always indicates bug nt strong opinion", "d": "8/2016"}, {"body": "hey jimfb take look please regarding comment used rather comparing undefined equality operator forbidden linter mentioned pr nt warnings changing controlledness textarea select something improve", "d": "8/2016"}, {"body": "would interested adding", "d": "8/2016"}, {"body": "sunnygurnani want add may give try", "d": "8/2016"}, {"body": "ran issue well made fix apologies soupaj first time contributing react please let know something missing signed cla followed instructions outlined contributing section", "d": "8/2016"}, {"body": "closed", "d": "8/2016"}, {"body": "input trigger onchange defaultvalue also react defaultvalue trigger change view pen please elaborate think onchange called defaultvalue init see onchange defaultvalue fixed please share codepenfiddle link example", "d": "8/2016"}, {"body": "set dangerouslysetinnerhtml element seen fiddle browsers weird things include inside", "d": "8/2016"}, {"body": "vjeux actually need render multiple row wrapped outer table example time inject code wrapped outer way could suggest", "d": "8/2016"}, {"body": "thing comes mind right js rowsmap row gt length length pretty trick", "d": "8/2016"}, {"body": "let know something unclear terrible explaining", "d": "8/2016"}, {"body": "afaik expected calling unconditionally cause call stack overflow since triggers think consider reducing number warnings interrupting render cycle avoid call stack error nt really something react responsible especially result abuse api", "d": "8/2016"}, {"body": "think would helpful show custom error instead confusing stackoverflow error", "d": "8/2016"}, {"body": "interrupting render cycle avoid call stack error nt really something react responsible especially result abuse api disagree preventing giving helpful errorwarning exception much better crashing program browser", "d": "8/2016"}, {"body": "suggesting calling throw immediately instead warning react reasonably detect potential call stack error processing render cycle providing better error reporting sure understand heuristic would require", "d": "8/2016"}, {"body": "trigger warning first render se setstate warning message", "d": "8/2016"}, {"body": "clarity talking third suggestion detecting preventing call stack overflow think reducing number warnings reasonable something done elsewhere reduce console noise", "d": "8/2016"}, {"body": "yea would partly lead sorry unclear", "d": "8/2016"}, {"body": "fwiw eslint good way printing warnings based previous one", "d": "8/2016"}, {"body": "someone wants help", "d": "8/2016"}, {"body": "came across issue current workaround wrap", "d": "8/2016"}, {"body": "hi react router warning believe warning contains link click find warning description relation react repo react router third party project react issues right place discuss second warning says says deprecated use instead code like js var react require react reactfinddomnode need change js var react require react var reactdom require reactdom reactdomfinddomnode something similar depending import react", "d": "8/2016"}, {"body": "great thanks help first time dealing react", "d": "8/2016"}, {"body": "tried figure line spit error whole bunch makes things worse cos use react first time node js gps tracker sample application need test code course written another screenshot expanded error lines", "d": "8/2016"}, {"body": "usually look stack trace first line code warning deprecated react third line", "d": "8/2016"}, {"body": "also search source finddomnode", "d": "8/2016"}, {"body": "finally enable break caught exceptions chrome debugger stops click frames call stack one one find code really related react use debugger", "d": "8/2016"}, {"body": "pointed gaearon official proposal", "d": "8/2016"}, {"body": "disregard please seems chrome currently slow setting large amount content innerhtml", "d": "8/2016"}, {"body": "theduke likely lazy loading instead pushing list items page user ca nt process items time studies suggest chunks info time comparisons sake facebook easily news feed items could load log push time sake bandwidth cpu cycles fact users would likely never reach past items anyway users google never go past page items", "d": "8/2016"}, {"body": "hey oceanpad share small case test case reproducing issue use jsfiddle starting point afraid code provided nt enough help valid javascript details would great", "d": "8/2016"}, {"body": "well first u typing error", "d": "8/2016"}, {"body": "aweary thankyou much code want show model option default option init show none reason", "d": "8/2016"}, {"body": "muxahuk thank much found basic problem resolve", "d": "8/2016"}, {"body": "nt get u equal empty string u render u pass empty string defaultvalue u expect set u tried setting works link u would bind value", "d": "8/2016"}, {"body": "since oceanpad says problem resolved going close seems like usage question anyways directed somewhere else like stackoverflow", "d": "8/2016"}, {"body": "need trace bug tested code rendering closely reactdom works somewhere rendering tree fails display flex", "d": "8/2016"}, {"body": "seems bug related radium assume problem react side close issue", "d": "8/2016"}, {"body": "hey bensampaio try use issue tracker solely tracking bugs feature requests general encourage post usage questions stackoverflow said exist would start trying implement reference stackoverflow run issues thanks", "d": "8/2016"}, {"body": "hey sonsyphon thanks report share reproducible test case use jsfiddle starting point also test using latest version react tested using forked jsfiddle latest chromium build os x worked expected", "d": "8/2016"}, {"body": "fwiw relative absolute position property display sure matters", "d": "8/2016"}, {"body": "ohh great catch alexeyraspopov nt notice almost certainly issue tried would invalid value subseqently render sonsyphon check difference position display going close since pretty certain usage error revisit", "d": "8/2016"}, {"body": "related adds ability components say quite ready yet block rendering server", "d": "8/2016"}, {"body": "one thing could think leave use another environment variable want detect staging environment somehow", "d": "8/2016"}, {"body": "sure might add confusion true env var", "d": "8/2016"}, {"body": "currently explicit way request react build production outside building second recommended since staging mirror production closely possible looking implementing profile build well might appropriate staging environments nt overhead also profiling", "d": "8/2016"}, {"body": "moezalez worth ran issue exactly mentioned included environment variable use determine real environment ie api targets like reliance unfortunately uncommon react ecosystem least determined least painful solution mirroring staging production environments know nt exactly solve issue hand wanted add idea notincrediblyawful workaround", "d": "8/2016"}, {"body": "hey madeinmoon share test case reproduces issue use starting point would also helpful know affecting specific browser tried latest version react", "d": "8/2016"}, {"body": "believe issue happens defaultvalue always gets reassigned change invoked handlechange callback inputs", "d": "8/2016"}, {"body": "yupp root cause nt specific issue used going close feel free subscribe updates", "d": "8/2016"}, {"body": "closing admitted legitimate bug", "d": "8/2016"}, {"body": "closing bug closing issue already tracking multiple issues open variations root issue serves fragment discussion see another example ignoring trying keep issues organized subscribe get updates progress made nhunzaker prs open seem address might matter getting reviewed", "d": "8/2016"}, {"body": "okay thanks", "d": "8/2016"}, {"body": "thanks report jasford first glance seems like potential regression edge tested rendered successfully exact build number edge version using case trying update verify taking sweet time", "d": "8/2016"}, {"body": "looks like took screenshot", "d": "8/2016"}, {"body": "seen issue nt able find clever test detect use workaround except adding browser detection windownavigatoruseragentindexof edge gt really proud meantime working", "d": "8/2016"}, {"body": "think edge regressed somewhere going see verify someone edge team", "d": "8/2016"}, {"body": "fwiw actually still broken need fix patrickkettner perhaps know somebody look edge side since seems like regression side things", "d": "8/2016"}, {"body": "happy dive tomorrow morning aug pm paul shannessy notifications githubcom wrote fwiw actually still broken need fix patrickkettner perhaps know somebody look edge side since seems like regression side things receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "experiencing chrome version", "d": "8/2016"}, {"body": "think going end coming jimfb said last time chrome trying smart warning set invalid value outside event handler idea getting value app instead user input valid value personally think chrome overly aggressive warning design decision could file bug chrome like explain use case etc regardless bug react nt know anything could mitigate issue going close", "d": "8/2016"}, {"body": "worth nt seem issue react", "d": "8/2016"}, {"body": "jenanwise believe reactdominput manually update chrome seems complaining", "d": "8/2016"}, {"body": "bumped working pr refactor dom input stuff believe happening check gif never trips nodevalue assignment input current value check nt happen inside throws warning pr consolidates lot logic custom mutation method aggressive change fixes issue", "d": "8/2016"}, {"body": "thanks nhunzaker nt actually run code yet based seems like something would nt explicitly make change pr resolves side effect keep open prs reviewed", "d": "8/2016"}, {"body": "filed bug chrome would love reactbased solution possible", "d": "8/2016"}, {"body": "thanks issue wilfred agree message lacking luck would already tracking pr open improve message linking descriptive doc think going try include kind info warning well going close duplicate feel free subscribe provide input", "d": "8/2016"}, {"body": "imo sure help much print actual value cases hit error get questions mostly caused faulty component requireexport ideally would like log component error occurred also maybe point value tell check component requiresexports value nt may nice log value", "d": "8/2016"}, {"body": "yea came pr zpao said broken anyway used commonjs built assume global add detection umdshim files", "d": "8/2016"}, {"body": "could set example file unit test tests would helpful ensure regressions", "d": "8/2016"}, {"body": "next week", "d": "8/2016"}, {"body": "zpao said broken anyway used commonjs see", "d": "8/2016"}, {"body": "clear broken use cjs build broken alias node webpackbrowserify", "d": "8/2016"}, {"body": "intents purposes iirc feature accepted standard yet changed", "d": "8/2016"}, {"body": "according proposals repo public class fields stage moment", "d": "8/2016"}, {"body": "oh matter whether ends ecmascript ok facebook team prepared codemod anticipation", "d": "8/2016"}, {"body": "dogfooding proposal internally facebook", "d": "8/2016"}, {"body": "babel react preset probably support added documentation currently need use transformclassproperties get working", "d": "8/2016"}, {"body": "written without quotes tutorial ok possibly mistype", "d": "8/2016"}, {"body": "sorry mistake issue closed everything working fine", "d": "8/2016"}, {"body": "looks like fixed least ca nt reproduce locally definitely happens ca nt see anything obvious git log thought issue might quick look git log since maybe fixed", "d": "8/2016"}, {"body": "beat comment thing bumping threshold fixes issue comments suggest fires pretty noisily believe issue edit lines", "d": "8/2016"}, {"body": "nhunzaker ah nice thanks going close given fixed master presumably make release point soon", "d": "8/2016"}, {"body": "ca nt without something works parse transform want use react amp transform jsx case need build bundle appears add script tag referencing bundle", "d": "8/2016"}, {"body": "found possible cause warning rendered markup server added css class element via class happened already present server side render nt change anything rendered react client side commented adding css class via warning disappeared maybe react measured positions inside text adding css classes via dom incorrect positions closing issue still inside react", "d": "8/2016"}, {"body": "make sure using correct attribute names check console see error mentioning also note wo nt work jsfiddle even use plain html jsfiddle already renders output", "d": "8/2016"}, {"body": "ah yes figured wondering mozilla documentation seems indicate lower case appears react uses camelcase names attributes website html attributes react documentation", "d": "8/2016"}, {"body": "react uses javascript syntax accessing attributes typically camelcase see list attributes supported", "d": "8/2016"}, {"body": "excellent exactly looking", "d": "8/2016"}, {"body": "raw html coming trusted source dangerouslysetinnerhtml correct way render method named dangerously markup contains malicious code like run arbitrary javascript code context logged user", "d": "8/2016"}, {"body": "ok got thank u", "d": "8/2016"}, {"body": "seems like issue", "d": "8/2016"}, {"body": "oh yes thanks year old", "d": "8/2016"}, {"body": "hard problem", "d": "8/2016"}, {"body": "since conversation continuing going close", "d": "8/2016"}, {"body": "open issue explains work", "d": "8/2016"}, {"body": "mentioned tracking thanks chiming feel free subscribe issue", "d": "8/2016"}, {"body": "great thanks help", "d": "8/2016"}, {"body": "intentional change nt thought case cc gaearon", "d": "8/2016"}, {"body": "yeah temporary build size regression nt affect umd builds affect ones bundle nt think worth mentioning intend fix rollup pr let keep issue open though", "d": "8/2016"}, {"body": "future versions react plan pass attributes long requested feature warning warns behavior okay things like appearing dom nodes browser inspector future safely ignore warning intend add different ui warnings soon easier ignore sure ok weird attributes dom node maybe refactoring components consume props instead blindly passing worthwhile", "d": "8/2016"}, {"body": "given course action yes seems like choice refactor point thanks speedy reply", "d": "8/2016"}, {"body": "yeah understand frustration far know reasonable way forward solve issues like", "d": "8/2016"}, {"body": "apologize got done mowing yard grandmother nt able pay proper attention", "d": "8/2016"}, {"body": "hmm found may answer still annoying using reactcreateclass", "d": "8/2016"}, {"body": "thanks request wo nt changing default considering alternatives part outcome considerations introduce purecomponent may future", "d": "8/2016"}, {"body": "sorry unfortunately enough information help ask stackoverflow instead use issue tracker bugs react since get syntax error relation react javascript library perhaps could try reporting react native repo related react native build pipeline would need provide full example reproducing someone help cheers", "d": "8/2016"}, {"body": "record version react better describe error point view spicyj fixed similar bug exact cause might changed since", "d": "8/2016"}, {"body": "leaving onclick removes error likely special logic related always puts specific node document root calling setstate bcomponentdidmount also removes error likely batched bug appears related batching like", "d": "8/2016"}, {"body": "want dig", "d": "8/2016"}, {"body": "gaearon sure context bandwidth look temporary workaround place defer work next stack frame thought report someone experience could help", "d": "8/2016"}, {"body": "hoping get feet wet contributing react free time good first bug issues seem scooped think one sane take probably time friday spend time anyone else picks beforehand understand", "d": "8/2016"}, {"body": "quicksnap sure classify good first bug feel free give shot never hurts eyes issue", "d": "8/2016"}, {"body": "hey lianpen far know block intended actually catch handle errors wrapping call block lets use also add block know run even error occur means always set afterwards even render errors nt catch errors since want bubble handled elsewhere future reference use repo track actual issues react question usage implementation better served using something like stackoverflow", "d": "8/2016"}, {"body": "future might provide way handle rendering errors however solution would need put behavior hands developer rather log error track issue interested", "d": "8/2016"}, {"body": "could describe use case usually discourage requiring library internals since public api nt relied", "d": "8/2016"}, {"body": "want get react bundle", "d": "8/2016"}, {"body": "internal apis nt expose browser bundle intentionally want use risk must use npm package bundle", "d": "8/2016"}, {"body": "zpao ok get", "d": "8/2016"}, {"body": "problem method cloneelement ignores style classname props doc resolve", "d": "8/2016"}, {"body": "hitting called twice bug considering options talking reacttestrender docs may obvious ca nt use reacttestrenderer react code due module dependencies jest documentation bug", "d": "8/2016"}, {"body": "please see replies", "d": "8/2016"}, {"body": "inject bug slightly complicated gaearon turned automocking entirely still happens detail donesuggested", "d": "8/2016"}, {"body": "turned automocking entirely still happens sorry clear saying solution mock relation automocking turn automocking recommend still need mock empty mock get snapshot testing working references", "d": "8/2016"}, {"body": "thanks spotting probably remove done major version", "d": "8/2016"}, {"body": "would become moot already removing whitelist right", "d": "8/2016"}, {"body": "correct clear exactly happens would fine take smaller change like first removing whitelist would also likely major version change", "d": "8/2016"}, {"body": "thanks taking look happy open pr contribute section readme looks like need remove line ensure tests pass amp linter output clean submit pr want make sure missing version changelog step edit reading contributing doc specifically step assume update tags attributes page localizations included pr", "d": "8/2016"}, {"body": "smockle takes people nt usually update localizations since easy update languages would great could", "d": "8/2016"}, {"body": "actually leave docs part change usually generate manually around releases makes bit easier batch line lengths reasonable", "d": "8/2016"}, {"body": "oh good know nt realize generated", "d": "8/2016"}, {"body": "thanks submitted pr address issue originally pr also updated docs per comment removed commit tests pass linter errors", "d": "8/2016"}, {"body": "like idea improving code however generalizing much seems like likely introduce perf regressions every case array allocation something operation every think good explore probably bit cautious around code cc spicyj since probably done code recently", "d": "8/2016"}, {"body": "performance angle bit bummer killing cost index look sorting storing order property insertion time nt figured way get around cost building array every time something mull", "d": "8/2016"}, {"body": "also nono leftmost names must keys gcc advanced optimizations work problem extend inputs perhaps related elements probably nt really make sense globally js lowerlevel may negligible doubt js nlogn solved implementing radix sorting case would n right circumstances could even avoid additional allocations imagine actual overhead would still significant reality quite sure everythingconsideredsolution implement specialcases per element type number affected attributes per element minimal simply iterating special ones predefined order way go skipping nt set rather reverse taking set ones reordering edit perhaps marking mustbeordered props flag separates fast sorting leaving properties current approach", "d": "8/2016"}, {"body": "implementing specific elements specifically looking eventually seems like good compromise middleground jam bit see looks like", "d": "8/2016"}, {"body": "syranide comment gcc optimization bummer properties need ordered revert arrayification keep list properties maybe migrate wrapper see localizing ordered property list could look like", "d": "8/2016"}, {"body": "fwiw actually nt think gcc important think nt getting crushed even advanced mode since mostly dom properties might couple cases nt true", "d": "8/2016"}, {"body": "slowly chipping away fun problem keeping tag specific priority list solves performance problem basically check see tag name defined within map priorities enumerate properties first benchmarks report expect controlled inputs faster less work everything else appears roughly least within margin error", "d": "8/2016"}, {"body": "finally got state feel good thought might easier comment code directly", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "write simplified version using plain js see problem create div set nodestylebackgroundimage set new value suspect might browserspecific issue ca nt anything editing style devtools nt userland important test well also nt see inline style actually changing chrome text content updating inline style value nt", "d": "8/2016"}, {"body": "yeah also wondering case create minimal example test vanilla dom api", "d": "8/2016"}, {"body": "yea probably use inlined polyfill", "d": "8/2016"}, {"body": "also issues well using draft js specifically ordered unordered list items add either list block styles line receive similar error component children mutated ul div created drafteditorcontents caused line seems shadowchildren array empty elementpropschildren length followed example although slightly modified using reactcreateclass modularized several separate files however even copy paste example still getting error ideas may occurring", "d": "8/2016"}, {"body": "cc keyanzhang looking shadow children", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "issue well", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "could please stop issue confirmed fix", "d": "8/2016"}, {"body": "instead add reaction directly original post makes easier us sort popularity", "d": "8/2016"}, {"body": "react simply sort passing map render function var children thispropschildren childrensort function b return atitletolowercase localecompare btitletolowercase", "d": "8/2016"}, {"body": "michaelsoriano sort method sorts elements array place mutation false positive need new array going mutate create copy old one mutate react data", "d": "8/2016"}, {"body": "nt react perhaps meant generated code nt actually contain function neither think must coming something code compiles code going close result turns actually problem react reopen encourage open debugger work stack see calling", "d": "8/2016"}, {"body": "sorry course meant poking suggests issue babel transpilation spread apologies misreading react issue", "d": "8/2016"}, {"body": "worries transpile babel nt realm possibilities", "d": "8/2016"}, {"body": "without diving would recommend base component uncontrolled input instead control exact timings behaviors possible react may play ball anyway probably never going guaranteed understand problem correctly", "d": "8/2016"}, {"body": "need controlled input blocks migration", "d": "8/2016"}, {"body": "reimplement controlled behavior easily", "d": "8/2016"}, {"body": "syranide nt mind incorrect assumptions forgot react polyfills wrong cases uncontrolled works", "d": "8/2016"}, {"body": "least show example setting input value empty string example probably move stack overflow however still need show example using wrapper around html input controlled uncontrolled input sure called called detachevent called probably internet explorer issue supported legacy ie browsers", "d": "8/2016"}, {"body": "jamesblight iampeekay error nexus nexus devices problems latest chrome error appears focusing unfocusing input field following error appears uncaught typeerror delete property value lt htmlinputelement gt code error appears function stopwatchingforvaluechange delete activeelementvalue tries remove value attribute dom input element", "d": "8/2016"}, {"body": "turns case one analytics libraries clash react issue appears iampeekay using analytics library", "d": "8/2016"}, {"body": "analytics companies using new relic bugsnag friday august komlev notifications githubcom wrote turns case one analytics libraries clash react issue appears iampeekay using analytics library receiving mentioned reply email directly view github mute thread preethi kasireddy twitter linkedin github facebook", "d": "8/2016"}, {"body": "komlev says issue analyticstracking library", "d": "8/2016"}, {"body": "good know thank", "d": "8/2016"}, {"body": "point specific failing test keydown nt browser event type creating place code", "d": "8/2016"}, {"body": "zpao sure thing specific failing test found node queried returning empty", "d": "8/2016"}, {"body": "alright tracked problem reactselect way testing react purely setting tests passing testing utils improve exposing tests written correctly let start code checking event type checking button pressed nothing wrong previously nt set type button condition nt checked set type undefined return early first test failure simulating mousedown event however specifying button pressed resulting leading condition ton probably see pattern related failing tests may cases slightly different fixed well code react correct used recommendation going fix tests reactselect feel free point need something back claim projects suffering", "d": "8/2016"}, {"body": "keen look", "d": "8/2016"}, {"body": "sure jamesblight working willing take crack sebmarkbage give idea start happening somewhere reactelementvalidator", "d": "8/2016"}, {"body": "yes would probably good place normally try keep renderer specific things element creation phase many warnings nt kick seems like would belong", "d": "8/2016"}, {"body": "wbrefvem thanks reminder go implemented method nonstatic properties class made immutable frozen suggested freezing causes lots tests fail due tries bind methods prototype already frozen jest causing tests fail well probably due attempting mock immutable class methods played around implementing method tests pass nt frozen interpreted issue correctly keen feedback", "d": "8/2016"}, {"body": "merge pr fixing", "d": "8/2016"}, {"body": "anyone else running issue event shows x amp click keyboard fires onclick event possible check etc code using", "d": "8/2016"}, {"body": "seems behavior without react", "d": "8/2016"}, {"body": "tested browsers chrome changing arrow keys causes onclick event fire react native onclick firefox arrow key fires onclick arrow key navigate tab radio buttons click radio button use arrow keys safari ca nt use arrow keys navigate radio buttons ca nt tab radio buttons", "d": "8/2016"}, {"body": "reading spec correct behaviour according certain elements html activation behavior means user activate triggers sequence events dependent activation mechanism normally culminating click event described user agent allow user manually trigger elements activation behavior instance using keyboard voice input mouse clicks user triggers element defined activation behavior manner clicking default action interaction event must run synthetic click activation steps element leave issue open see anyone else comment different interpretation spec commentsdifferent ideas close issue", "d": "8/2016"}, {"body": "seems pretty clear spec behavior match even ignoring spec opinion think rare care anything radio selected would nt change react filter events", "d": "8/2016"}, {"body": "thanks investigation everybody since browser behavior nt seem need correction going close", "d": "8/2016"}, {"body": "awesome detective work fix cc jimfb spicyj gaearon thread transaction hook determine store reference something else nt looked closely actual hook code precedent", "d": "8/2016"}, {"body": "hmm devtool storing elements already available reactcomponenttreedevtool correctly cleans server rendering tests think devtool needs switch ask reactcomponenttreedevtool element", "d": "8/2016"}, {"body": "specifically provide information test using instead local dictionary fixes issue", "d": "8/2016"}, {"body": "tricky part get called ssr currently asserts called think want ssr code path might move assertion get element gaearon mentioned", "d": "8/2016"}, {"body": "send us code snippet", "d": "8/2016"}, {"body": "probably biggest source diffs method indented one stop deeper comparing diffs using also supported github gitlab query argument pull requests reduce noise maybe lines", "d": "8/2016"}, {"body": "always write stateless components way would write stateful ones today extending base class createclass future may ways write stateful components similar stateless functional components otherwise planning optimize feature sets around reducing git diffs commit history always important encourage make meaningful commits ultimately want code read given point readable possible might need bit work trace blame specific lines spend way time reading code looking history highest priority", "d": "8/2016"}, {"body": "encourage avoid using context app code advanced feature fully supported trying seems like antipattern think guide describes trying hope helps general encourage post usage questions stackoverflow use issue tracker tracking bugs react usage questions cheers", "d": "8/2016"}, {"body": "yea known npm issue working leave open though somewhere point case comes resolved", "d": "8/2016"}, {"body": "looks like good", "d": "8/2016"}, {"body": "ca nt reproduce test passes", "d": "8/2016"}, {"body": "hey spicyj test passes issue rather generated output function modification generate snapshot file contents", "d": "8/2016"}, {"body": "maybe issue jest rather react", "d": "8/2016"}, {"body": "yea would issue jest see filed let close one", "d": "8/2016"}, {"body": "gaearon good example new warning unknown props really good", "d": "8/2016"}, {"body": "hnordt recommend flushing ideasrecommendations reusable components blog post something repo usually meant tracking actual issues react say though think developing reusability done carefully certain constraints generalized component less useful powerful becomes lot cases apis like seem superficially flexible nt really offer example least advantage calculating passing component", "d": "8/2016"}, {"body": "aweary simple example nt shows real advantages looking try list creating formal api helps thinking apply styles next project defines types every app needs nt need think possible styles use every project use api back project weeks months later know use pulling fixes easy upgrading easy updating one file build platform top eg etc instead trying cover every use case inside use power composability", "d": "8/2016"}, {"body": "would counter saying react already provides standardized formal api ideal ask users provide nonstandard getter returns values could calculate method component generate based data nt available rendered depends passed via props alongside getters obviously available parent component methods like might make sense really though nt appropriate venue discussing best practices keen continuing discussion maybe post something medium somewhere community discuss elsewhere", "d": "8/2016"}, {"body": "understand said aweary problem real world business apps developers crazy things react creating formal apis opinion approach use react respect approach close issue start discussion blog post suggested thank", "d": "8/2016"}, {"body": "hnordt think overthinking without thinking outsidetheboxhtml speak native styling implementation detail also breaks isolation perfect world exposed props component css classes css styles html attributes etc imho solution realize hypothetical nt render anything implement functionalitybehavior defines buttons commonly used say hover state disabled state click handling etc pass information separate component deals drawing hypothetical way makes assumptions rendered free design however wish often find drawing buttons look much alike probably implement may takes bunch props determine color padding preferably via enums arbitrary values may rendered differently probably still relies implementation logic edit proposing specific way implement idea", "d": "8/2016"}, {"body": "syranide idea", "d": "8/2016"}, {"body": "yeah point nt concept stylesclassnamesetc exposes underlying ui framework makes assumptions button look imho point hypothetically take single function draw think component draws button given label drawfunction render button imagineable style behavior ui framework html perhaps misunderstanding intentions", "d": "8/2016"}, {"body": "point make api explicitly supports mean button type styled different way one type defines accept enum types styling delegated consumer knows app domain logic needs published npm consumed", "d": "8/2016"}, {"body": "changed version make work", "d": "8/2016"}, {"body": "propagating soon looks like mistake part resulted ending cdnjs appropriately", "d": "8/2016"}, {"body": "working sorry", "d": "8/2016"}, {"body": "iirc need tell rhl base classes react components rhl also updated include default", "d": "8/2016"}, {"body": "please file appropriate repo react hot reloading experimental feature provided third party plugins react officially providing repo depends tool use hot reloading unfortunately nt specified details ca nt point right one", "d": "8/2016"}, {"body": "iirc need tell rhl base classes react components afaik correct rhl react transform deprecated nt intend update", "d": "8/2016"}, {"body": "gaearon also broke react native hot reloading reactpurerender works must something react core", "d": "8/2016"}, {"body": "nicolast see issue seems like related change made react downgrade react problem got solved injectenvironment called", "d": "8/2016"}, {"body": "happens tool assuming reactdom would mocked example jest could write prevent ideally happening first place work done avoid", "d": "8/2016"}, {"body": "solutions mocking reactdom giving another error believe bc enzyme uses", "d": "8/2016"}, {"body": "maybe cpojer could offer insight think possible mock one file clear jest docs scope limit one file always limited", "d": "8/2016"}, {"body": "think always limited one file", "d": "8/2016"}, {"body": "looked bit seems reacttestrenderer enzyme compatible due issue enzyme load reactdom hook sure jest could mock test frameworks might able additionally would assume people would want snapshot tests next tests currently possible due mentioned renderers try inject type test would expect someone would want write could nt moment js import react react import renderer reacttestrenderer import mount enzyme class mycomponent extends reactcomponent state active true render return describe mycomponent gt matches snapshot gt const tree renderercreate tojson expect tree tomatchsnapshot updates state click gt const wrapper mount wrapperfind onclick simulate click anything help make compatible sure solution guys looking", "d": "8/2016"}, {"body": "yes limitation right ca nt use reactdom reacttestrenderer file unfortunately", "d": "8/2016"}, {"body": "plans resolve conflict something community needs aware seems like would work injection invariant would removed skirted somehow allowing environments replaced", "d": "8/2016"}, {"body": "would like change core modules instantiable instead relying global injection could share two environment might also switch copying renderer files reacttestrenderer modules totally independent nt shared state", "d": "8/2016"}, {"body": "bug also makes difficult write tests components use reactnativelistener also relies reactdom mocking reactdom nt fix problem simply causes another error thrown", "d": "8/2016"}, {"body": "spicyj builds master support since copy close", "d": "8/2016"}, {"body": "sure nt look like change released fixed", "d": "8/2016"}, {"body": "could return function math using props passed transformed high order function use prevent unnecessary rerenders test send feedback js using stateful components class something extends reactcomponent constructor super thisdosomething thisdosomethingbind dosomething take return event gt eventpreventdefault return take define outside something function dosomething take return event gt eventpreventdefault return take using stateless components function something props return", "d": "8/2016"}, {"body": "yeah issue invoking method passing also pass arguments invoked invoked arguments access arguments initial bind like use prevent unnecessary rerenders test send feedback hnordt method wo nt prevent unnecessary renders still returning new function time component rendered", "d": "8/2016"}, {"body": "use arrow functions", "d": "8/2016"}, {"body": "milesj would still mean function recreated every call", "d": "8/2016"}, {"body": "milesj yea using arrow functions cause recreate onclick every render call milesj", "d": "8/2016"}, {"body": "recreating functions expensive please blindly follow advice see articles always applicable measure test makes difference using arrows even prevents like optimizations enabled default anyway use addon components tree gain anything binding constructor", "d": "8/2016"}, {"body": "really know binding expensive case measuring performance app want pass arguments pass props let child component something like benefits dubious change often data changes shallow comparisons help anyway useful rare cases code perf critical arguments relatively stable eg ids", "d": "8/2016"}, {"body": "gaearon ask think performance hit app ask better way efficient way things using would rather best way rather going back later changing whole lot code pain nt sure without arrow functions article could nt find docs curious really handler usually use something like kind like issue going around twitter developers passing props using rest rather passing whats needed work one preferred explicit needed view like rather right first time around way wrong think might beneficial slightest way", "d": "8/2016"}, {"body": "timeche thought child component would need call function props handler well", "d": "8/2016"}, {"body": "gaearon use props directly function example js dosomething return thispropsx thispropsy render return", "d": "8/2016"}, {"body": "timche think presumably would different item list usual use case sure example trivial", "d": "8/2016"}, {"body": "sandysaders ask better way efficient way things using purerendermixin would rather best way rather going back later changing whole lot code think best way write code naturally issues optimize individual components wo nt changing whole lot code likely need tweak components desired perf also apps wo nt even issues begin funny thing perf hard rule could follow every time nt recommend making every single component use equivalent recommend write app normally need optimize use react perf tools figure best components optimize optimize", "d": "8/2016"}, {"body": "pain nt sure without arrow functions bind article could nt find docs sandysaders take look recommend bind event handlers constructor bound every instance", "d": "8/2016"}, {"body": "stateless functional components insist never passing arrows either able pass callbacks stateless functional components", "d": "8/2016"}, {"body": "gaearon totally hear dude really curious never thought properly bind functionsmethods handlers timche nice", "d": "8/2016"}, {"body": "sandysaders btw also use arrow functions classes babeltransformclassproperties nt bind anymore example js class something extends reactcomponent dosomething x gt x render return", "d": "8/2016"}, {"body": "using html data attributes every item list needs know", "d": "8/2016"}, {"body": "reading dom generally great already data provided react", "d": "8/2016"}, {"body": "yep agree pattern workaround avoid writing new component javascript render return thispropsitemsmap item index gt return onclick item gt alert item buttonjsx render return onclick item gt const item onclick thisprops onclick item", "d": "8/2016"}, {"body": "article provided way pass arguments without bind perhaps helps", "d": "8/2016"}, {"body": "erythrome take article grain salt truth really slow depending browser environment arrow functions inefficient exactly use case anything transpilation regular functions via babel performance loss furthermore nt use finalized specs deaddenied specs best easiest idiomatic approach opinion bonus standard solves use cases", "d": "8/2016"}, {"body": "think great idea definitely something thinking recommend using going close radar", "d": "8/2016"}, {"body": "remember solve different whitespace handling surprised react native preserves whitespaces thank", "d": "8/2016"}, {"body": "related", "d": "8/2016"}, {"body": "confusing thing pure component functional stateless component nt extend class", "d": "8/2016"}, {"body": "kevinsuttle wait", "d": "8/2016"}, {"body": "yeah great docs topic functional components implement default logic developers could enforce use functional components need lifecycle hooks need local state normal", "d": "8/2016"}, {"body": "pure component functional stateless component nt extend class case effectively base class extend purerendermixin built need docs", "d": "8/2016"}, {"body": "hello guys think nt docs one question dump component render something better use stateless component class extends purecomponent thanks", "d": "8/2016"}, {"body": "raphaguasta question", "d": "8/2016"}, {"body": "serverside components never mounted nt fire server literally generate html markup use see fiddle", "d": "8/2016"}, {"body": "would safe say snapshot testing something like reactframecomponent would nt work", "d": "8/2016"}, {"body": "looks like react also logs warning using refs caused code similar example put example github want", "d": "8/2016"}, {"body": "would safe say snapshot testing something like reactframecomponent would nt work possible options mock assuming use jest future test renderer could provide firstclass component mocking api box unrelated jest could give mock object looks like dom node actually anything solutions prefer", "d": "8/2016"}, {"body": "natew ended using lodash function proptypes array deal automatic way looks something like jsx class component extends reactcomponent render return componentproptypes foo reactproptypesstring optimize precaching keys etc", "d": "8/2016"}, {"body": "encountered well looks like way set inner html would cause half children added specifically change loop loop would work since original nodes get moved working unit test", "d": "8/2016"}, {"body": "thanks following seeing fix sure stenrap seeing thing definitely possible clear much change upgrade range really confirm", "d": "8/2016"}, {"body": "fixed react", "d": "8/2016"}, {"body": "also thank much providing way reproduce", "d": "8/2016"}, {"body": "hi guys similar error browser console due debugging found uncatched exception componentwillmountcomponentwillunmount functions exception traced browser console wrapped code trycatch black message react disappeared catch block execute error js componentwillmount try dosomestuff catch e consoleerror e guess try wrap code inside component lifecycle functions trycatch upd stuff catch error prod use", "d": "8/2016"}, {"body": "adding trycatch recommended solution working around real problem something swallows exceptions would great could share project could take look exceptions swallowed", "d": "8/2016"}, {"body": "gaearon explain error tries describe even relevant original issue expect componentdidmount timer start whowhich functioncomponent expect every element get timer central timer starts render timer still progress another instance instance instance instance error wrongly outputted aka real error previous error swallowed yes outputted might specific questions answer fact people coming solve mysterious error shows specific cases intended also unindended cases way distinguish called one caused something else think letting people post specific circumstances helpfull get grip saying posting useless irrelevant occurs error simply true", "d": "8/2016"}, {"body": "gaearon cause trycatch detecting problem surprise exceptions functions logged console default", "d": "8/2016"}, {"body": "thanks clarifying errors functions logged nothing special react lifecycle methods browser point view problem setup react share project reproducing take look happens", "d": "8/2016"}, {"body": "blockchange explain error tries describe even relevant original issue sure calls lifecycle methods instrumented performance measurement calls development example start timer call componentdidmount next line stop timer happens render method lets us later calculate much time spent component reactperf measurements normally every call corresponds call ensure sets variable called sets back null make sure forget call edge case emitting warning current timer set something null timer starts intention use warning prevent people forgetting call working react safety measure also wanted enable user code case pattern timer gets messed fix one thing missed app code throws lifecycle hook like current timer reset warning appear false positive think big deal thought see real error anyway warning apparently common errors get swallowed react apps people see original error sure asking people share examples maybe bad promise polyfill maybe block people realize swallows exceptions hard guess currently busy createreactapp dedicate enough time looking yet sorry", "d": "8/2016"}, {"body": "error accessing prop constructor js constructor super removing moving statements componentwillmount help", "d": "8/2016"}, {"body": "vinhlh", "d": "8/2016"}, {"body": "vinhlh chance read replies currently warning error code see real error alongside please share project reproducing", "d": "8/2016"}, {"body": "facing problem app try find code caused publish note using redux", "d": "8/2016"}, {"body": "exactly error application noticed simply forgotten comma json returned promise corrected json everything back order", "d": "8/2016"}, {"body": "gaearon example reproduces warning line marked help import connect reactredux import react react const mycomponent mail gt return mailtitle mailmessage export function mapstatetoprops state ownprops const id ownpropsparamsid const mail statemailsfilter mail gt return mailid id return mail export const container connect mapstatetoprops mycomponent originally posted different issue guess posted instead", "d": "8/2016"}, {"body": "noticed get error whrn print props undefined inside deep nested component ecample render const name thisprops return name dont get error render const name thisprops name return false return name", "d": "8/2016"}, {"body": "got error without accompanying errors tracing back led finding syntax error binding tag attribute like class myclass extends reactcomponent dosomething render return culprit case", "d": "8/2016"}, {"body": "got error missing props render bad simple debug fix actual error message threw bit brought good read reasons occurs", "d": "8/2016"}, {"body": "anyone project could run reliably reproduces", "d": "8/2016"}, {"body": "happened lot intermittent able get rid sure tue aug dan abramov notifications githubcom wrote anyone project could run reliably reproduces receiving subscribed thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "fixed via next release", "d": "8/2016"}, {"body": "react supposed support multiple renderers think reasonable renderer extends reactdom renderer support shadydom exist fact one already whatever change made add warning please make sure nt stop reactpolymer extending reactdom support shadydom emit warnings way reactpolymer wo nt able negate since warnings would longer true", "d": "8/2016"}, {"body": "transitionappeartimeout replace transitionleavetimeout using animation initial mount still getting error facebook docs replaced leavetimetout appeartimeout looks like still must leavetimeout", "d": "8/2016"}, {"body": "sorry late reply gaearon tried many time vista bit npm install webpack savedev every time failure stuck two days windows okay", "d": "8/2016"}, {"body": "interesting thanks sharing extra time check works vista", "d": "8/2016"}, {"body": "thanks reply gaearon may right due reason system changed ubuntu next day getting chance try another system vista future send status thanks support", "d": "8/2016"}, {"body": "jin updates busy let us know ask somebody else look", "d": "8/2016"}, {"body": "gaearon really sorry losing track please free someone else took little long digest react source", "d": "8/2016"}, {"body": "jin anything help involve changing lines also would love hear feedback confusing parts codebase", "d": "8/2016"}, {"body": "pick guys decide needs fresh pair eyes", "d": "8/2016"}, {"body": "gaearon actually done changing warning link warning docs page right primarily blocked coming different examplesscenarios issue occur top ones mentioned codebase nt confusing per se part transforming understanding actual applications react underlying implementations", "d": "8/2016"}, {"body": "gaearon done happy hear feedback", "d": "8/2016"}, {"body": "discussed think also report value saw rather list forbidden types compare warning reactcreateelement type null undefined boolean number string dom elements reactclass composite components warning reactcreateelement invalid value type string dom elements reactclass composite components", "d": "8/2016"}, {"body": "hi really really sorry delayed response moving cities couple weeks nt chance sit address feedback yet expect move settle middle next week resume progress asap aug wilfred hughes notifications githubcom wrote discussed think also report value saw rather list forbidden types compare warning reactcreateelement type null undefined boolean number string dom elements reactclass composite components warning reactcreateelement invalid value type string dom elements reactclass composite components receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "thx gaearon", "d": "8/2016"}, {"body": "stephenkingsley", "d": "8/2016"}, {"body": "gaearon mentioned microsoftgoogleapple using react various projects however future facebook let say infringe vr patent microsoft microsoft initiate legal action hard work react project worked would gone waste license react would revoked correct assume microsoft google apple etc believe risk scenario nt high enough use react currently response heard arguably scenario could also occur oss many large corporations release oss often patents cover parts oss get legal battle could potentially sue retaliation stop using open source software guess difference facebook decided explicitly state react license whereas someone like google may may stop using go angular similar situation thoughts", "d": "8/2016"}, {"body": "expected components rendered client yes way build proper data structures handle events updates client side", "d": "8/2016"}, {"body": "imo way much overhead also keeping unopinionated core", "d": "8/2016"}, {"body": "ok started looking super high priority since errant warning fail tests still like get fixed course", "d": "8/2016"}, {"body": "gaearon understand efforts react redux really appreciated make work awesome", "d": "8/2016"}, {"body": "gaearon fwiw seeing lot warnings tests feature uncontrolled input elements using enzyme api using edit ended tests coincidence seems", "d": "8/2016"}, {"body": "nathanmarks could find minimal repro would helpful one flaky warning disappears try trim", "d": "8/2016"}, {"body": "give shot tonight", "d": "8/2016"}, {"body": "gaearon got fairly minimal repo least produces error testing tdd always present though best tell seems happen longer keep watchingrunning try create simple testscomponents try trigger tonight report back discover trigger reliably pardon adding noise though", "d": "8/2016"}, {"body": "tsnieman luck one heck time trying create minimal repro case noticed missing element previous mount deepest node mount getting really extreme cases", "d": "8/2016"}, {"body": "tsnieman chance using noticed run tests karmaphantomjs get significantly fewer warnings", "d": "8/2016"}, {"body": "nathanmarks alright bunch tdd try trigger discovered odd stuff get occur desktop using repo get occur laptop using exact repo steps triggering repo laptop clean repo installed edit see less clean initial testing start jest add extra line whitespace file example trigger test exclamation error occurs numbered way exact steps nt reproduce error desktop thinking might cause given situation decide likely package difference two since occur laptop lo behold emits errorwarning specification went ahead deleted ran tried test case success error tada seems case dependency one machines date tl dr deleted nodemodules reinstalled everything works hope fix works", "d": "8/2016"}, {"body": "new clone git hash new directory get errors referencing errors appear first second test removing blank lines file remove errors", "d": "8/2016"}, {"body": "tsnieman wish case end glad got sorted", "d": "8/2016"}, {"body": "may worth cloned tsnieman repo git hash app seems work expected must remove test script get test results show screen tests run pass numerous errors test failures errors", "d": "8/2016"}, {"body": "help anybody probably minimal boilerplate problem", "d": "8/2016"}, {"body": "aocenas cloned installed tested errors recently done fresh install deleted npm test reactstarterkit test usersglendocumentsjavascriptresearchreactstarterkit jest config jestjson using jest cli babeljest pass testsclickertestjs test passed total test suite run time", "d": "8/2016"}, {"body": "gihrig clean install git clone cd reactstarterkit npm install npm test reactstarterkit gt npm test reactstarterkit test usersandrejocenasdevreactstarterkit jest config jestjson using jest cli babeljest running test suite warning reactcomponenttreedevtool missing react element debugid building stack warning reactcomponenttreedevtool missing react element debugid building stack warning reactcomponenttreedevtool missing react element debugid building stack warning reactcomponenttreedevtool missing react element debugid building stack pass testsclickertestjs test passed total test suite run time maybe thats difference", "d": "8/2016"}, {"body": "aocenas updated node os x node v npm v git clone cd reactstarterkit npm install npm test reactstarterkit glen npm test reactstarterkit test usersglendocumentsjavascriptresearchreactstarterkit jest config jestjson using jest cli babeljest pass testsclickertestjs test passed total test suite run time ps still get errors described updating node rebuilding", "d": "8/2016"}, {"body": "try sticking config whether makes warnings go away gon na ship default next major jest annoying nt done jest actually resets modules calls give even isolation something like js works gt const sum require sum sum works gt const sum require sum sum sum modules actually different instantiations module nt want change option also inline requires manually works gt const react require react expect persist module registry true downside might module local state tests carried think since people decided predominantly use statements new code option makes sense default", "d": "8/2016"}, {"body": "persist module registry true downside might module local state tests carried think since people decided predominantly use import statements new code option makes sense default cpojer may onto something running mocha ca nt implement suggestion got thinking crop errors get occur tests commented test function bodies related imports featurepage tests run pass without errors similar errors occur tests run featurepage tests previous commenting featurepage tests homepage tests ran without errors suggests errors related test per se possibly caused resource limitation conflict kind", "d": "8/2016"}, {"body": "cpojer case helped warnings changing setting one call spec would assume reseting registry calls happen also inline requires call example warning disappears", "d": "8/2016"}, {"body": "aocenas gihrig guys seen warning volume like check build log worst case line log also note mocha test suite runs twice using node dom using karma ton debug errors run", "d": "8/2016"}, {"body": "aocenas jest resets registry every test required react already might get rerequired inlinerequires reevaluated", "d": "8/2016"}, {"body": "nathanmarks errors seeing occur one block whether run local travis test suit runs tests", "d": "8/2016"}, {"body": "also occurring without jest technologyadvicestardust errors checked ensure react reactcomponenttreedevtool called using consolelog gaearon used called start tests also tried executing single test file test bundle errors persists figured exactly causes error related certain tests running succession isolating tests seems resolve issues node npm react reactdom reactaddonstestutils karma karmacli karmacoverage karmamocha karmamochareporter karmaphantomjslauncher karmaphantomjsshim karmawebpackwithfastsourcemaps chai chaienzyme dirtychai enzyme mocha phantomjsprebuilt sinon sinonchai", "d": "8/2016"}, {"body": "levithomason sounds similar experiencing", "d": "8/2016"}, {"body": "aye may delve point right annoying actually breaking anything", "d": "8/2016"}, {"body": "levithomason ditto next time look going try track root cause rather trying create simple repro none simple repros seem work", "d": "8/2016"}, {"body": "op error disappeared using latest build", "d": "8/2016"}, {"body": "yaycmyk would mind posting versions modules", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "think one prs fixed although know one longer reproduce used", "d": "8/2016"}, {"body": "confirmed works technologyadvicestardust thanks much", "d": "8/2016"}, {"body": "longer reproduce reactboilerplate confirmed true problem resolved thank gaearon", "d": "8/2016"}, {"body": "thank much gaearon confirm resolves issue spent time trying make sense issue project found nt add much value thought might worthwhile sharing findings certainly curly one tests component shallow rendered twice render three times issues would disappear add additional expect test existing test case issues would disappear tried many many scenarios help warnings javascript describe gt render tag gt const renderedcomponent shallow expect renderedcomponent tohavetagname img alt attribute gt const renderedcomponent shallow expect renderedcomponent tohaveattr alt test warnings javascript describe gt render tag gt const renderedcomponent shallow expect renderedcomponent tohavetagname img src attribute gt const renderedcomponent shallow expect renderedcomponent tohaveattr src testpng alt attribute gt const renderedcomponent shallow expect renderedcomponent tohaveattr alt test warnings javascript describe gt render tag gt const renderedcomponent shallow expect renderedcomponent tohavetagname img alt attribute gt const renderedcomponent shallow expect renderedcomponent tohaveattr alt test expect renderedcomponent tohaveattr alt test", "d": "8/2016"}, {"body": "fixed thanks sending us repros clues", "d": "8/2016"}, {"body": "thanks detailed report ianstormtaylor sorry nt get easy fix adding onkeyup onkeydown", "d": "8/2016"}, {"body": "symptom larger issue approach error messages eg ok ca nt refs give link", "d": "8/2016"}, {"body": "nt know would use facebook bot infrastructure kind thing danger really good", "d": "8/2016"}, {"body": "fixes issue", "d": "8/2016"}, {"body": "fixes issue maullerz issue jest using jest provide sample project demonstrating issue", "d": "8/2016"}, {"body": "gaearon dont use jest helps see errors bash console run serverside rendering using jade template", "d": "8/2016"}, {"body": "gaearon please look simple boilerplate execute warning appear", "d": "8/2016"}, {"body": "thanks repro case reopen get back fixing issues working right", "d": "8/2016"}, {"body": "hack filter test output installation save following file root project var spawn require childprocess spawn consolelog run like node testrunfilterjs npm test var ls spawn processargv shell true lsstdouton data data gt dataindexof missing react element debugid consolelog data lsstderron error data gt consolelog data lson close code gt consolelog code usage conclusion", "d": "8/2016"}, {"body": "fixed react confirmed following instructions", "d": "8/2016"}, {"body": "banged head wall couple hours nt forget error message ca nt explained nowhere", "d": "8/2016"}, {"body": "okay fix one like fixed", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "encountered problem try solution solved problem componentwillmount function", "d": "8/2016"}, {"body": "ran issue trying test custom prop type validation multiple similar scenarios currently using displayname hack mentioned gaearon definitely ideal", "d": "8/2016"}, {"body": "encounter issue wondering due released", "d": "8/2016"}, {"body": "seeing issue pretty big deal us since users enterprise policy reasons bug renders app almost unusable chance getting fix backported comes workaround apply code meantime", "d": "8/2016"}, {"body": "would like back penguinofthunder backporting fix release would immensely helpful screwing us pretty royally customers stuck unfortunately many", "d": "8/2016"}, {"body": "best suggest build master grab nightly master build obviously guaranteed stable please make copy link zpao website", "d": "8/2016"}, {"body": "gaearon good know thanks resource anywhere outlining however unreliably kind breaking changes likely land thus likely run looked last couple react meeting notes could nt find anything", "d": "8/2016"}, {"body": "gon na leave", "d": "8/2016"}, {"body": "one last comment one honestly pretty confused yall nt taking time back port react web app users probably crucial aspect entire app complex dynamic forms users currently receive extremely unpleasant occasionally unusable user experience obviously apps substantially lower percentage users construction space thus high count even general browser share estimates place somewhere vicinity usage know facebook runs react master production guessing nt feel pain particular bug causes want make sure aware pain substantial", "d": "8/2016"}, {"body": "curious total ie usage fb", "d": "8/2016"}, {"body": "hankmccoy fb defending personally started switching away current uncontrolledcontrolled behavior instead rely controlled behavior unfocused focused becomes uncontrolled still emits onchange naturally imho generally far desirable behavior applying formatting controlled inputs broken anyway bug way apply formatting show harmlessly unfocus also avoids issues imes", "d": "8/2016"}, {"body": "go hankmccoy company serve saas onpremise usage pretty low saas close onpremise customers past react always helped much abstracted away quirks helped us develop fast however bug reported onpremise customers would highly appreciated fix could get release fast possible least would need clue ready simply telling customers wait till fixed really putting us hard place", "d": "8/2016"}, {"body": "thought would comment progress far hopefully help people come looking answers workaround inconvenient truth bug affects developers like run applications strictly regulated enterprise environment lucky could ask users temporarily use different browser able convince department allow users run firefox developers like hankmccoy frontendphil nt quite fortunate convince users switch means try nobody run day age unfortunately reflect reality people thread fix cloned react master branch able bit effort get work system found bug present react testing continues make sure showstoppers want attempt upgrade warned mileage going vary wildly depending complex dependency tree whether app modules depend using deprecated features couple modules fork edit work react others could replaced new modules maintained better rant retrospect valuable lesson exactly fragile npm module system ca nt trust semantic versioning prevent breaking changes dependency hell real going forward sure lot careful upgrade modules even single patchlevel unique react either semantic versioning simply become meaningless point likely change way sure test test test others come looking fix react fix imo backported facebook zero motivation move fast break things reason fix old version run newer one production use banging head brick wall longer application currently broken try moving react like jquense recommended works upgrade eventually anyway make sure test thoroughly freeze dependencies know works end rant", "d": "8/2016"}, {"body": "ca nt trust semantic versioning prevent breaking changes dependency hell real nt really true bug introduced major bump patch feature update pinned major version default problems", "d": "8/2016"}, {"body": "sorry jquense clear mean imply react case violated semantic versioning spec commenting fragile ecosystem whole react specifically referring happens update thirdparty modules relied older versions react case new versions support least react strict versioning leading unexpected breakage react fine used isolation madness start importing thirdparty components chalk one lesson learned", "d": "8/2016"}, {"body": "feel pain pain particular area mostly due browsers still widely different behaviors way events work case point bug regression caused inadvertently fixing bunch really old ie event bugs trying make excuse bugs react would definitely benefit code covered actual browser tests something sadly missing right", "d": "8/2016"}, {"body": "wanted open seems difference react controlled field nt experience repeated warnings look pens exact code open devtools type random chars pen react react guess wondering fixed chrome thing also appears way react updating dom since solved previous version really problem app super annoying trying use console meaningful logs errors", "d": "8/2016"}, {"body": "\u03c3\u03c4\u03b9\u03c2 \u03b1\u03c5\u03b3 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 brad westfall notifications githubcom \u03ad\u03b3\u03c1\u03b1\u03c8\u03b5 wanted open seems difference react controlled field nt experience repeated warnings look pens exact code open devtools type random chars pen input react react image react receiving subscribed thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "bradwestfall tested almost versions react results", "d": "8/2016"}, {"body": "thanks radekmie still nt fully understand mean fix coming new behavior new status quo", "d": "8/2016"}, {"body": "unfortunately nt know", "d": "8/2016"}, {"body": "complicated nt come often nt general use case rerender component clientside comes rendered markup server see three benefits using serverside rendering every page easily parsable bots therefore seo works greatly user see content instantly client browser need wait anything client js blocking code different process execution still great important opinion", "d": "8/2016"}, {"body": "still looking solution one tried using callback ref seems resolve hoc rather child really expected work well", "d": "8/2016"}, {"body": "tommoor one workaround use add prop component wrapped hoc something like inside componentdidmount thispropscomponentref amp amp thispropscomponentref componentdidupdate thispropscomponentref amp amp thispropscomponentref also curious gaearon learned led closing issue though seemed like good idea", "d": "8/2016"}, {"body": "error warning internal error react performance measurement code expect componentdidmount timer start render timer", "d": "8/2016"}, {"body": "michaelsync thanks comment help diagnose issue way already know warning exists please read comments two situations get warning application code throws error warning byproduct case look real error close agree fix case output warning todo list actual bug react case saying see warning helpful need example reproducing fix bug thanks", "d": "8/2016"}, {"body": "anyone searching finding thread saw warning losing race condition arising dispatching async action trying render data available fixed adjusting logic", "d": "8/2016"}, {"body": "hey tayiorbeii could expand think got problem sure looking", "d": "8/2016"}, {"body": "hey patrickgordon funny long ago days seems wish would clear previous comment recall problem along lines issue looking truthy therefore data call short react issue look around code late night slip ups like", "d": "8/2016"}, {"body": "fixed via next release", "d": "8/2016"}, {"body": "still problem windows suppose jest nt updated master yet", "d": "8/2016"}, {"body": "yes updated finds tests", "d": "8/2016"}, {"body": "experiencing bug development build begun since started using reduxdevtools reproduce committing state changes click around app hit debugger breakpoint chrome devtools like uncaught exception code try commit state changes error", "d": "8/2016"}, {"body": "hi finally found faulty native fact comes snippet tried find source couldnt dont know interfering iframe guess possible reason part browser extension think address codebase could addressed react core already users affected anyway try intercept original try restore rendering app", "d": "8/2016"}, {"body": "thanks investigating know offending code likely cause popup blocker open adding fix left comments busy pick week please feel free submit another pr since affecting thanks", "d": "8/2016"}, {"body": "get around issue time created stateless component use oninput instead onchange ie import react react const attributename somedepisie oninput onchange export const myinput onchange props gt props attributename onchange return", "d": "8/2016"}, {"body": "sebmarkbage would libraries injecting features globally acceptable use method conflict another library symbols js js import amp reactamp const foo gt reactcreateelement html amp true worried situation multiple copies react could demand plugins use registration function js import amp register registeramp reactamp registeramp react export default gt reactdom rendertostring symbol check also allow libraries know already registered called multiple times react multiple instances wo nt problem either", "d": "8/2016"}, {"body": "dantman imho first probably realistic path ie locally provide configuration rather register globally doubt future feature least really loop take grain salt seems intention unknown props passed node asis near future solve general problem people", "d": "8/2016"}, {"body": "seeing bug react also small fiddle displaying issue looks chrome os x looks windows version", "d": "8/2016"}, {"body": "toonvanacker worked fine", "d": "8/2016"}, {"body": "believe deserves mention accidentally discovered issue several months using react mentioned documentation would aware avoided", "d": "8/2016"}, {"body": "unfortunately help without reproducing case", "d": "8/2016"}, {"body": "thear code logs appear appear seems never componentwillenter componentdidenter even others class child extends component componentwillappear callback consolelog appear callback componentdidappear consolelog appear class carousel extends component state idx items abc def hij", "d": "8/2016"}, {"body": "probably sorry still need find ship fix", "d": "8/2016"}, {"body": "afaict simplest fixes revert earlier pr backport better one p looking existing code mind current polyfill approach wo nt work well tbh issue probably present lack usage features like autofill means less folks likely notice", "d": "8/2016"}, {"body": "fwiw changes master could back ported without breaking changes folks wanted noted issues jimfb feel free ping anyone interested approach", "d": "8/2016"}, {"body": "documented anywhere went looking eventually got via google could nt find", "d": "8/2016"}, {"body": "depoulo think document inspired usage contextinstatelessfunctionalcomponents", "d": "8/2016"}, {"body": "far ideal thx anyway", "d": "8/2016"}, {"body": "appears bug chrome using chrome continues dispatching new event another event fired mouse moves key pressed loop halts", "d": "8/2016"}, {"body": "went ahead filed issue", "d": "8/2016"}, {"body": "thanks nhunzaker", "d": "8/2016"}, {"body": "gaearon deleted previous comment think design choice component value uncontrolled actually causing issues bunch people see problem using work input datatype could number date object saving data db empty string numberdateetc datatype make sense", "d": "8/2016"}, {"body": "getting warning nt make sense even using minification use browserify build app bundle demand", "d": "8/2016"}, {"body": "hitting something similar using object spread reordering props particular following get really seems like bug frustratingly reproduce within component ca nt seem reproduce elsewhere note babelified code uses babel defines module level add get objectassign react dom node npm point toward babel issue babelcore babelplugintransformobjectrestspread adding top webpack config help run webpack grateful advice", "d": "8/2016"}, {"body": "wchargin would able share small test case reproducing", "d": "8/2016"}, {"body": "aweary smallest manage dependencies babel react webpack noted top bug goes away force objectassign polyfilled run generated bundle looks like polyfill nt getting injected properly somehow see following sh git clone git githubcom wcharginobjectspreadreprocasegit cloning objectspreadreprocase remote counting objects done remote compressing objects done remote total delta reused delta packreused receiving objects done resolving deltas done checking connectivity done cd objectspreadreprocase nodemodules amp amp rm rf nodemodules npm install gt devnull devnull npm run build build homewchargingitobjectspreadreprocase rm rf dist amp amp webpack hash version webpack time asset size chunks chunk names bundlejs kb emitted main hidden modules npm run demo demo homewchargingitobjectspreadreprocase node demojs first render classname onclick ariapressed ariarole children classname onclick ariapressed ariarole children classname onclick ariapressed ariarole children classname onclick ariapressed ariarole children second render classname onclick ariapressed ariarole children onclick children ariapressed ariarole classname reproduced bug classname onclick ariapressed ariarole children onclick children ariapressed ariarole classname reproduced bug node version amp amp npm version npm ls grep objectassign npm ls grep objectassign objectassign", "d": "8/2016"}, {"body": "wchargin likely need move override component uses spread required override use default incorrect node yes good place", "d": "8/2016"}, {"body": "yeah best include similar entry point app use node", "d": "8/2016"}, {"body": "thanks mridgway spicyj considered might problem tried js indexjs const isserverrendering typeof document undefined isserverrendering objectassign null objectassign require objectassign import initializeclient client isserverrendering initializeclient export default server nt work failed realize babel hoists imports including become js const isserverrendering typeof document undefined isserverrendering objectassign null objectassign require objectassign isserverrendering require client default moduleexports default require server default appears peaceful tl dr people passing later read generated code make sure polyfill really happening think", "d": "8/2016"}, {"body": "got nice sleuthing", "d": "8/2016"}, {"body": "current status issue passive events", "d": "8/2016"}, {"body": "hit warning chrome handling wheel event could optimized registered passive event handler react would neat", "d": "8/2016"}, {"body": "know might unrelated wrong thread use events element react app set value empty string event handler get looking stack trace trying delete value detach handler idea might causing", "d": "8/2016"}, {"body": "iampeekay please file separate issue ideally repro case exhibits problem", "d": "8/2016"}, {"body": "bit silly get warning actually changing uncontrolled input controlled input default value element controlled start warning wrong ignore warning implement workaround invalid warning specifying prefer first sadly console gets way messy possible disable warnings", "d": "8/2016"}, {"body": "please really annoying", "d": "8/2016"}, {"body": "may dumb question fixed mean ie opinion expected output static markup component html sneaky nested squashed particular rendering html sneaky incorrect first indented ends whole thing sneaky text appears argument enables local reasoning code otherwise audit components might appear noscript create make sure nt noscripts also component never appear noscript whole app would break seems like nobrainer react job handle author definition fixed code fixed sh babelnode const reactdomserver require reactdomserver use strict const react require react use strict const c sneaky use strict reactdomserverrendertostaticmarkup c sneaky reactdomserverrendertostring c sneaky fiddles also demonstrate imoincorrect behavior confused marked fixed", "d": "8/2016"}, {"body": "nt warn like invalid nesting situations", "d": "8/2016"}, {"body": "still get error using reactcsstransitiongroup latest react version render neither tried use static file reactwithaddonsjs required npm package react would work use reactwithaddonsjs code make work", "d": "8/2016"}, {"body": "problem took found issue", "d": "8/2016"}, {"body": "fkling thanks", "d": "8/2016"}, {"body": "closed", "d": "8/2016"}, {"body": "bug example javascript class mycomponent extends reactcomponent render return class wrapper extends reactcomponent dosomething consolelog clicked render return", "d": "8/2016"}, {"body": "sounds like able return promise would indeed really nice feature currently facing issue component needs clean section main application state exit used next component enter giving warning internal error react performance measurement code expect componentdidupdate timer start componentwillunmount timer still progress another instance uncaught typeerror read property apply undefined could wait job complete proceeding similar reactaddonscsstransitiongroup using hack around problem terrific", "d": "8/2016"}, {"body": "giving warning internal error react performance measurement code expect componentdidupdate timer start componentwillunmount timer still progress another instance please file issue bug totally solveable", "d": "8/2016"}, {"body": "tired fully understand problem laid probably correct solution fiber reconciler already partial support", "d": "8/2016"}, {"body": "thinking recently really like better subtree support p happy help flesh said partial support though ive sort renders deferring sort things new reconciler flux place particular start looking", "d": "8/2016"}, {"body": "hey guys issue quite sure solve allochi jimfb thanks", "d": "8/2016"}, {"body": "share jsfiddle reproducing make sure using", "d": "8/2016"}, {"body": "ok checked seems something wrong nevertheless sure would best solution case need load main component case localstorage pair value logged true exists redirect app using reactrouter using reactredux code class main extends component componentwillmount return true redux state localstorage found thispropschecklogstatus componentdidmount redirect case redux state returns logged true thispropslogstatuslogged consolelog entered statement hashhistorypush app render return thispropschildren redux action component gets componentdidmount stage redux state still updated manage get work using sure elegant solution thanks advance", "d": "8/2016"}, {"body": "sure bug react please provide example reproducing react please ask help stackoverflow use issue tracker tracking bugs react thanks", "d": "8/2016"}, {"body": "work taken", "d": "8/2016"}, {"body": "zpao let chat week react rally goals used react simple complex webpack builds might able help", "d": "8/2016"}, {"body": "sort rule thumb react quicker component render many stateless functions many classes shouldcomponentupdate shallow equals something needs profiled every use case case many small components small constantly mounted unmounted assume massive perf savings mounting unmounting stateless lifecycle", "d": "8/2016"}, {"body": "currently special optimizations done functions although might add optimizations future perform exactly classes", "d": "8/2016"}, {"body": "fair enough running parts react source see stateless functions still mount like regular classes", "d": "8/2016"}, {"body": "idrm hi point memoization works give component props exactly want trigger render components receives different props thus getting pure rendering stateless components well without shouldcomponentupdate", "d": "8/2016"}, {"body": "memoize already done react code sun aug giltig notifications githubcom wrote idrm hi point memoization works give component props exactly want trigger render components receives different props thus getting pure rendering stateless components well without shouldcomponentupdate receiving subscribed thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "library use memoize stateless components export example", "d": "8/2016"}, {"body": "giltig saying memoization function purify essentially component instance cache bucket size per purified component nt see memoize approach become substitute shouldcomponentupdate way react currently works", "d": "8/2016"}, {"body": "looks like fixed fixes emitting change event value different", "d": "8/2016"}, {"body": "thanks close unless hear otherwise", "d": "8/2016"}, {"body": "react problem still persists", "d": "8/2016"}, {"body": "ismounted many meanings clear correct one inclined leave current behavior even though little bit confusing noncreateclass classes support ismounted anyway", "d": "8/2016"}, {"body": "looks like issue closed", "d": "8/2016"}, {"body": "thanks yes following fixing link readme npm links right thing", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "hey zpao still issue", "d": "8/2016"}, {"body": "nt seen anything recently probably ok close revisit still issue traced back something specific", "d": "8/2016"}, {"body": "see also", "d": "8/2016"}, {"body": "took nearly one hour came page know actual cause warning one whitespace like went everything confusing understand kind bug text appear child really hard resolve message", "d": "8/2016"}, {"body": "issue thanks confirming nt crazy react really consider changing error message warning jsx spacing would save people much time", "d": "8/2016"}, {"body": "okay clarify", "d": "8/2016"}, {"body": "problem mine constructor props super props thisfireonscroll thisfireonscrollbind fireonscroll consolelog fire componentdidmount const elem reactdomfinddomnode thisrefselementtofire elemaddeventlistener scroll thisfireonscroll componentwillunmount const elem reactdomfinddomnode thisrefselementtofire elemremoveeventlistener scroll thisfireonscroll render return thispropschildren problem nothing happens scroll div div contains table", "d": "8/2016"}, {"body": "problems code posted bug tracker q amp find better help stackoverflow something similar", "d": "8/2016"}, {"body": "check implementation onscroll module working", "d": "8/2016"}, {"body": "thanks", "d": "8/2016"}, {"body": "sorry commenting old issue want add problem halfsolution problem like others reusable components might statefull stateless example stateless want know text add new class jsx onblur thissetstate hasemailtext thisrefs inputname value render return confused wrongly assumed recommended way oldskool events found page jsx onchange event thissetstate hasemailtext eventtargetvalue render return remaining problem find input value onload guess back recommending components", "d": "8/2016"}, {"body": "something wrong js const customtags gt let input const didclickbutton gt consolelog inputvalue return", "d": "8/2016"}, {"body": "blamy work though cases end wanting state component nt come much", "d": "8/2016"}, {"body": "going close issue nt think plans change anyone usage questions needs code help please ask stack overflow", "d": "8/2016"}, {"body": "spicyj thanks", "d": "8/2016"}, {"body": "upgrading node resolved issue", "d": "8/2016"}, {"body": "posted include well found seems pretty good solution use prop force rendering entirely new particular case nt need controlled prop surrounding ultimately controls state within store populates store state might asynchronously initializedupdated case updated condensed version particular case js import react proptypes react import form providepage const gathercontact classes onsubmit movingcontactname movingcontactemail movingcontactphone username useremail userphone gt gathercontactproptypes classes proptypesobjectisrequired onsubmit proptypesfuncisrequired movingcontactname proptypesstringisrequired movingcontactemail proptypesstringisrequired movingcontactphone proptypesstringisrequired username proptypesstringisrequired useremail proptypesstringisrequired userphone proptypesstringisrequired export default gathercontact", "d": "8/2016"}, {"body": "maybe real life use cases add priority issue", "d": "8/2016"}, {"body": "kof could expand wall text nt see anything obviously applies intuitively nt see use reparenting implementation virtual lists", "d": "8/2016"}, {"body": "syranide good explanation quick summary measure size rendered component invisibly user show user need mount hidden container calc size unmount mount visually visible container need mount hidden container calc size reparent visually visible container without much overhead", "d": "8/2016"}, {"body": "lot background particular usecase specific architecture reactvirtualized trying summarize much possible rv needs know actual sizes elements point window things elements ahead current cursor sizes estimated elements behind leftof actual sizes need known scrolling would janky hoc helps justintime measure given row column sometimes cells measuring nt actually visible eg user quickscrolls skips range cells rv needs measure ones skipped uses measure cells hidden div measured cells may later rendered depending direction user scrolls", "d": "8/2016"}, {"body": "kof bvaughn ah ok see mean although imho would say technical perspective reparenting right solution problem react world would require one render measuring immediately scheduling another render perform reparenting works abusing react would unintended sideeffects would quickly suggest general solution problem would probably say able render react components nodes without attaching dom able render raw nodes dom kindof accomplished today performing hidden elements moving virtual list caveats probably aware however rendering nodes discussed version could make last part native really necessary though", "d": "8/2016"}, {"body": "yes caveat mounting overhead somehow need avoid second mount transfer element different parent", "d": "8/2016"}, {"body": "kof mean rendering hidden element moving virtual list caveat currently need wrapper element manage dom stuff may also subtle differences due rendering separate subtrees", "d": "8/2016"}, {"body": "still issue", "d": "8/2016"}, {"body": "explicitly worked around part sure whether ff still bug imagine may problem react anymore due react tracking dom nodes immediately rather demand anyway guess apart already done nt much react mostly created issue offchance someone else stumbles upon problem", "d": "8/2016"}, {"body": "hello facebook guys fact issue causes serious problem ca nt update input asynchronously chinese input example ca nt use meteor reactive datasources stores like redux feedback update asynchronously simplest example show problem use settimeout async update really hope fix quickly wo nt waste efforts workaround thanks workaround anyone face problem look", "d": "8/2016"}, {"body": "made simple example demo use events prevent inputing chinese ime event problem link", "d": "8/2016"}, {"body": "eyesofkids nice work could made default implementation input textarea", "d": "8/2016"}, {"body": "nice work", "d": "8/2016"}, {"body": "hitting issue eyesofkids workaround works perfectly thank workaround place diving react source code least try add failing test later add expected behavior although seems bit complicated someone unfamiliar internals initially expecting test similar already available work ie simulating native checking callback fired also checking would fired simulated however nt seem work hence thinking maybe checking would feasible approach similar done tests reason always get extracting events though reference test code tried within changeeventplugintestjs jsx var eventconstants require eventconstants var reactdomcomponenttree require reactdomcomponenttree var topleveltypes eventconstantstopleveltypes function extract node toplevelevent return changeeventpluginextractevents toplevelevent reactdomcomponenttreegetinstancefromnode node target node node function cb e expect etype tobe change var input reacttestutilsrenderintodocument reacttestutilssimulatenativecompositionstart input var change extract input topleveltypestopchange expect change tobe null afraid nt know exactly one supposed debug clearer picture going guidance proceed pointers would highly appreciated", "d": "8/2016"}, {"body": "also way event differentiate button click form enter keypress ideally want able hit enter click button", "d": "8/2016"}, {"body": "definitely problem accessibility testing need components attached test fully current method makes tree appear hidden would really helpful blessed methods appending body removing messes tests dom unexpectedly mutated errors", "d": "8/2016"}, {"body": "marcysutton thanks useful feedback need append document straightforward flexible solution call reactdomrender manually also exactly implementation test helper might provide would", "d": "8/2016"}, {"body": "latest documentation classes looks like lot great work months ago maybe project pushed back burner think changes would great help many newer devs", "d": "8/2016"}, {"body": "one big problems recommended environment people run example code took month solve create react app still working polishing included official solution docs official solution running code start updating code snippets know frustrating takes time need attack problems one one", "d": "8/2016"}, {"body": "cool gaeron create react app looks awesome thanks quick update", "d": "8/2016"}, {"body": "element value always empty options generated dynamically appear list however node empty inspect whatever method use value set ie etc", "d": "8/2016"}, {"body": "zpao many projects use react materialize isolated case even sure yet materialize lists options nt inspect dom closing issue basis make wrapper circumstances almost insulting", "d": "8/2016"}, {"body": "closing issue basis make wrapper circumstances almost insulting yanickrochon materialize replaces react renders outside react simply possible support thus nothing react fix materialize simply incompatible react may workarounds doubt truly work due nature materialize may hide immediate issues cause errors later edit ps always render markup using apply materialize fully supported", "d": "8/2016"}, {"body": "syranide well luckily people agree created reactmaterialize seems solve many issues react ca nt fix", "d": "8/2016"}, {"body": "yanickrochon literally make wrapper advice means applied", "d": "8/2016"}, {"body": "zpao news regarding able use mozdirectory rest without whitelist", "d": "8/2016"}, {"body": "sorry nt remember context issue", "d": "8/2016"}, {"body": "tried running following test could produce error guessing nt appropriate situation existing pattern test suite could reproduce", "d": "8/2016"}, {"body": "quicksnap sure would nt work could try simulateclick generally preferred unless trying test event system code", "d": "8/2016"}, {"body": "think fixed point open pull request syranide discuss changes made first", "d": "8/2016"}, {"body": "already code written harm opening pr like discuss andor ask questions writing code may save timeeffortenergy", "d": "8/2016"}, {"body": "appears like already fixed run get following error message console", "d": "8/2016"}, {"body": "hey spicyj supposed fixed using ie react looks like issue still persists neither onchange oninput called point lifecycle drag", "d": "8/2016"}, {"body": "possible set using server side rendering got working client side need initial markup well update seems possible well gets string used sneak attribute feels pretty dirty worked", "d": "8/2016"}, {"body": "pierbover well turns likely although string refs deprecated considered legacy likely deprecated point future callback refs preferred could rewritten follows js toarrayofvalues thisforminputs gt", "d": "8/2016"}, {"body": "thanks lot halthammerzeit banging head wall hours finally got access inputs form component solution turned lot simpler expected jsx export default class schoolform extends reactcomponent constructor props super props thisinputs", "d": "8/2016"}, {"body": "pierbover method works understand react mount may empty callback method could invoked even later could try module reactnodefinder use module could call class search children example executable", "d": "8/2016"}, {"body": "sulinixl yes works access user clicks submit button", "d": "8/2016"}, {"body": "followup modified getsentry fetch original message display crash reporting ui pull request getsentrysentry announcement blog", "d": "8/2016"}, {"body": "status supporting multiple css classes feature intended implemented css based styling solutions getting popular see planning switch css classnames usually use one base css class user provided class customizations like currently unusable", "d": "8/2016"}, {"body": "blocking issues implementing multiple css classname support", "d": "8/2016"}, {"body": "useful option use promises instead callbacks", "d": "8/2016"}, {"body": "spectrox avoid introducing new base class entirely", "d": "8/2016"}, {"body": "already one simplest solution add function hard add helper function mixin environment every js file works scope import everytime depends environment option choose", "d": "8/2016"}, {"body": "love promise way", "d": "8/2016"}, {"body": "guys support nt think add moving syranide solution well", "d": "8/2016"}, {"body": "hi aldredcz thanks shearing licence monkeypatching could use project", "d": "8/2016"}, {"body": "wangyangjun use anywhere wish", "d": "8/2016"}, {"body": "gaearon spicyj still issue load one version react page even instances managing totally separate dom trees nt explicitly instantiated globals like say package dependencies depended different versions react npm dependency manager could used together one page", "d": "8/2016"}, {"body": "mnquintana work recent version react", "d": "8/2016"}, {"body": "still broken", "d": "8/2016"}, {"body": "alternative solution update need render dropdownmenu botstraap possible idea thanks", "d": "8/2016"}, {"body": "clearly wrapped single shown docs", "d": "8/2016"}, {"body": "yes course two elements wrapped html button notification two element wrapped single element possible thanks time primajin", "d": "8/2016"}, {"body": "shift everything one level", "d": "8/2016"}, {"body": "okay items parent move problem html lt listwrapper lt react wrap element element thisstateitemsmap thisadditem lt react gt case react replace contained possible add without replacing elements thanks", "d": "8/2016"}, {"body": "works multiple elementscomponents siblings wrapped container restriction component multiple elements code posted work said come example nt work polite read entire thread consider whether adding new example repeating issue already acknowledged known restriction thread contains extended discussion details reasoning restriction dan also stated intend fix support eventually trying accomplish pointing another example acknowledged issue", "d": "8/2016"}, {"body": "sorry wanted know anyone would alternative solution meantime delete posts necessary", "d": "8/2016"}, {"body": "using react works everywhere iphone ios tried buttons tag cant click run function", "d": "8/2016"}, {"body": "two years ago still debated restricting use subjective argument regressive mainly prevent people abuse well quite idiotic use important many use cases part specification supporting react however balance important declaration delimiter token keyword important follow declaration takes precedence normal declaration author user style sheets may contain important declarations user important rules override author important rules css feature improves accessibility documents giving users special requirements large fonts color combinations etc control presentation", "d": "8/2016"}, {"body": "solution jsx handleupdate e etargetvalidityvalid input numeric thissetstate inputvalue etargetvalue else etargetvalue input numeric thisnumberinputvalue suppress ui change thissetstate inputvalue reset state render return use ref expose underlying dom node idea version nt use jquery", "d": "8/2016"}, {"body": "see pen key setting allow decimal numbers intention reseting target value last know valid value also nt need already event object handler erence dom node side effect far able detect safari possibly firefox untested type place cursor ie type nondigit cursor go end input ie avoidable imo worth code complexity edit shortened following without consequence still works safari without cursor end issue discribed edit although see exactly case original post confused problem works chrome safari", "d": "8/2016"}, {"body": "trying build side nav dragged left listen event screen thumb slides right keep calculating push state used render sidenav problem touchmove event fired high speed though throttle events using calculating synthetic events even though consumed take valuable frame", "d": "8/2016"}, {"body": "srcspider could explain choose render empty noscript client instead noscript dangerouslysetinnerhtml try get serverside rendering mismatch totally makes sense rendering static html cases works fine performancewise purerender decorator", "d": "8/2016"}, {"body": "taken day form handling onsubmit first form refreshing iphone even though executing eventpreventdefault every device tested works problem since beginning tried everything ended replacing form div making button handling onclick running react including cursor pointer click event never happens execute function really know left try would wholeheartedly appreciate could find solution thanks", "d": "8/2016"}, {"body": "works", "d": "8/2016"}, {"body": "wanted leave another usecase happen using custom css checkbox click handler needs text checkbox thispropslabel looks like state correctly stored input useragent style checkboxes set change handler nt work actual input clickable", "d": "8/2016"}, {"body": "looking workarounds time found stackoverflow", "d": "8/2016"}, {"body": "would adding states classes transition easier adding class initial render basing hard make happen automatically current architecture spicyj previous post workaround seeing better alternative reactcsstransitiongroup point edit record workaround wont work everyone something like keyframes enter opacity transform translatex opacity transform translatex wrapper position relative absolutely positioned children animation enter animationduration enter leave eliminates popping animation position absolute top width enter handleded wrapper prevent popin bug caused animation enter animationduration enteractive leave animation enter reversed animationdirection exit animationdirection reverse animationduration leaveactive", "d": "8/2016"}, {"body": "issue spacebar could plz help", "d": "8/2016"}, {"body": "hi guys update may probably nt need use posted comment reason remembered touch events detected without tapeventplugin installed tested longer case since chrome safari removed tap delays mobile pages probably time stop using tapeventplugin us onclick event", "d": "8/2016"}, {"body": "hi using fastclickjs touch based devices needed react regards shishir arora pm markian ivanicho notifications githubcom wrote hi guys update reacttapeventplugin may probably nt need use posted reason remembered touch events detected without tapeventplugin installed tested longer case since chrome safari removed tap delays mobile pages probably time stop using tapeventplugin us onclick event receiving subscribed thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "markwain many popular apps relying webview show web pages china weixin taobao alipay still using old uiwebview ios still love removing tap delays mobile pages tap event still necessary several years", "d": "8/2016"}, {"body": "would think older mobile devices updated latest versions chromesafari would also need plugin", "d": "8/2016"}, {"body": "meteor coffeescript react jade", "d": "8/2016"}, {"body": "yungsters update blog post curious renderlayer amp rendersubtreeintocontainer still used handle layering", "d": "8/2016"}, {"body": "modern solution something like reactportal", "d": "8/2016"}, {"body": "yea actually codemodded mixin away month ago removed distinction components regular components little awkward without fragments big deal", "d": "8/2016"}, {"body": "wanting well lacing native event listeners component lifecycle events feels haphazard opens potential memory leaks amp exceptions steps nt taken properly tear listeners unmount", "d": "8/2016"}, {"body": "nearterm plans sorry", "d": "8/2016"}, {"body": "update", "d": "8/2016"}]