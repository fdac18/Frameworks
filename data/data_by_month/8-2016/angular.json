[{"title": "rangeerror maximum call stack size exceeded", "body": "forms current behavior given following form item changes let itemsarray thisformcontrols items thissubscriptionspush itemsarrayvaluechangessubscribe value gt let items modelsjetreturnitem calling causes error addremove validators force validation run error angular version", "num": "11205", "d": "8/2016"}, {"title": "async templates variables rendering nt work", "body": "try load data using xhr request fulfill template received data xhr executed successfully template changed sorry ca nt provide plnkr reproduce plnkr nt work angular version browser ie language typescript", "num": "11204", "d": "8/2016"}, {"title": "prevent code evaluated templates", "body": "current behavior consider following angular template jit aot html output template expecteddesired behavior would expected using would prevented evaluation template motivation use case changing behavior would like create code examples documentation website would like angular component able display angular code angular version browser chrome macos el capitan language typescript", "num": "11203", "d": "8/2016"}, {"title": "ca nt reset nested form", "body": "submitting check one x current behavior created control extends formgroup using nested form generating properly handles validation correctly send nested form values back containing form group one thing ca nt figure reset darn thing first child form component stripped code showing relevant parts parent component parent form instantiates nested form component selector mainform templateurl contenttemplatescoremainformhtm directives nestedformcomponent export class mainformcomponent implements oninit public formobj formgroup constructor private fb formbuilder ngoninit create form group thisformobj thisfbgroup mynested thisfbarray new nestedformcomponent rest implementation omitted problem requirement user able reset form back pristine state however matter try ca nt figure way reset controls nested form back pristine even gone far trying implement reset method nested form control calling like problem approach get back reference nested form get method find references nested form controls gone got public properties nested form controls set method nestedformcomponent class get properties empty yet subform working would expect every way expecteddesired behavior able either call reset method something whether parent form child form reset pristine state even possible least able get reference child form reset individual controls expected behavior end nested form reset initial state drop downs default values drop downs reset default values text boxes prompts text boxes reset empty values prompts appear controls nt display initial state like radio button controls set back unset state also underlying state nested form pristine also able get reference nested form containing controls parent form even went far setting reference nested form first parent control passing reference formbuilder call creates parent form trying access nested form reference motivation use case changing behavior fairly common use case user filling form realize screwed beyond possibility fixing hit reset button option start please tell us environment angular version browser language typescript", "num": "11202", "d": "8/2016"}, {"title": "usecapture true event handlers", "body": "submitting check one x current behavior events click keys etc registered browseradapter want cancel ahead capturing event calling stoppropagation use nonangular native js desired behavior way add handler element adds event listener capture phase leave syntax something like seems logical similarly motivation use case changing behavior creating directives disables clickskey eventsetc element custom handler need cancel event gets please tell us environment angular version", "num": "11200", "d": "8/2016"}, {"title": "redirectto child route working", "body": "redirectto child route working const heroesroutes routes path heroes component herolistcomponent children path redirectto test pathmatch full path test component testcomponent path hero id component herodetailcomponent error match routes heroes plunkr link", "num": "11199", "d": "8/2016"}, {"title": "unexpected token export importing angularcoresrcfacadelang", "body": "submitting current behavior since nightly build angular application start importing error chrome uncaught syntaxerror unexpected token export firefox syntaxerror export declarations may appear top level module expecteddesired behavior error reproduction problem expected behavior error motivation use case changing behavior error please tell us environment angular version nightly build browser tested latest chrome firefox language typescript", "num": "11197", "d": "8/2016"}, {"title": "plunker typescript demo working", "body": "submitting check one x current behavior plunker typescript demo working morning noticed stopped following error browser xmlhttprequest load accesscontrolalloworigin header present requested resource origin therefore allowed access noticed node system windows generating error basically stopping demoonline code running well offline development environment please tell us environment angular version browser language typescript", "num": "11196", "d": "8/2016"}, {"title": "providers work setting via bootstrapmodule", "body": "hello trying specify provider bootstrapping module like get exception provider apiprovider found mimic provider setup ngmodule writing straight metadata everything works fine angular version browser language typescript", "num": "11195", "d": "8/2016"}, {"title": "checkbox radio buttons working child routes bug child routing", "body": "checkbox radio buttons working child routes changing states click named router outlet inside dom routerlink plunkr link exact issue first section put outside routerlink dom works perfectly", "num": "11194", "d": "8/2016"}, {"title": "feature request possibility insert js logic class helper", "body": "submitting x feature request current behavior expressions like impossible used suggesting possibility use expressions like motivation use case changing behavior functional help write less code", "num": "11193", "d": "8/2016"}, {"title": "quickstart plnkr working", "body": "quickstart plnkr seems broken console displays following error xmlhttprequest load accesscontrolalloworigin header present requested resource origin therefore allowed access", "num": "11191", "d": "8/2016"}, {"title": "angular apps issues loading ios device", "body": "submitting check one x current behavior lots issues loading angular application works perfectly browsers windows macbook pro application load properly ios safari browser investigation seems ios devices requests return framework javascript files indeed location refreshing browser couple times clearing caches website data application everything loaded correctly works fine sometimes takes lot refreshes clearing data seems linked order application javascript files loaded files loaded files created deep angular framework files clear application works perfectly macosx windows using safari chrome ie application work ios safari chrome additionally tour heroes application load ios device well expecteddesired behavior application load correctly ios device desktop browser reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point seems random devices loads ok devices expected behavior application startup browsers including motivation use case changing behavior users forced refresh browser clear cache please tell us environment dependencies packagejson dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade bootstrap bootstrapdatepicker bootstraptimepicker chartjs corejs reflectmetadata rxjs systemjs zonejs devdependencies concurrently liteserver typescript typings systemjs config function global map tells system loader look things var map app app dist angular nodemodules angular rxjs nodemodulesrxjs packages tells system loader load filename andor extension var packages app main mainjs defaultextension js rxjs defaultextension js main indexjs defaultextension js main defaultextension js var ngpackagenames common compiler core forms platformbrowser platformbrowserdynamic router routerdeprecated upgrade individual files requests function packindex pkgname packages angularpkgname main indexjs defaultextension js bundled requests function packumd pkgname packages angularpkgname main bundles pkgname umdjs defaultextension js environments use umd karma need individual index files var setpackageconfig systempackagewithindex packindex packumd add package entries angular packages ngpackagenamesforeach setpackageconfig var config map map packages packages systemconfig config angular version browser ios safari language typescript", "num": "11190", "d": "8/2016"}, {"title": "structural directives using shorthand exportas", "body": "submitting check one x current behavior using structural directive export works template declared using element using syntactic sugar asterisk syntax export fails following error expecteddesired behavior consistent regardless syntax used reproduction problem see plunker please tell us environment angular version", "num": "11189", "d": "8/2016"}, {"title": "intl api timezone issue formatting dates android emulators", "body": "old versions chrome android emulators time formatting returns dates timezone vm host instead device timezone symptoms happens locally saucelabs checks disabled test suite avoid failures browsers checks reactivated issue fixed", "num": "11187", "d": "8/2016"}, {"title": "use commonjs amd", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser language", "num": "11186", "d": "8/2016"}, {"title": "duplicated sub url angular sample navigating", "body": "submitting check one x current behavior navigating refresh sample typescript dashboard suburl duplicated like expecteddesired behavior routing simple url motivation use case changing behavior please tell us environment angular version browser chrome xx language typescript xx", "num": "11184", "d": "8/2016"}, {"title": "di exception aot mode packumd caused ngzone difference coreumdjs ngzonejs", "body": "submitting bug report check one x current behavior angular ngzone nodemodules angularcoresrczonengzonejs nodemodules angularcorebundlescoreumdjs slightly different example ngzonejs line thisonunstable new false coreumdjs line thisonunstable new eventemitter false cause di exception aot mode packumd becaused compiler generated appmodulengfactoryts import angularcoresrczonengzone thisparentget packumd systemjs mode di provider keyed ngzone coreumdjs nt match endup di exception packindex works expected expecteddesired behavior reproduction problem clone add compilercli change maints use aot bootstrapmodulefactory run ngc compile load page expected behavior page loaded exception motivation use case changing behavior please tell us environment angular version browser language typescript xx", "num": "11183", "d": "8/2016"}, {"title": "ngmodel updated", "body": "submitting check one x current behavior issue found version value changes modelproperty nt change value template modelproperty changes mouse click expecteddesired behavior soon modelproperty changes component reflects new value template modelproperty reproduction problem reproduce issue downloading application need install npm running issue orderpapercomponentts drag drop item sequence number change new sequence number appears updatedsectionsequence nt manually mouse click item header trigger value update either click blue pink header expected behavior motivation use case changing behavior please tell us environment reproduce issue downloading application angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "11182", "d": "8/2016"}, {"title": "unable create alternative xhrbackend", "body": "submitting check one x current behavior angulario project rely fake xhr implementation simulate web api samples implementation found short circuit injection provide fake backend like approach works well jit compiled samples reason work aot compilation compile error seeing complains defined class tried defining leads new error sure nt aot compile comparing internal private properties two implementations thanks", "num": "11178", "d": "8/2016"}, {"title": "canactivatechild guard root effect", "body": "submitting check one x current behavior implemented simple guard app root level redirect one submodule routes effect navigation way presuming guard returns false time logging console reveals guard instance created expecteddesired behavior canactivatechild guard set app root level expected navigation least submodules routes guarded including explicit redirects ie app root route configured guard submodules routes b initial redirect configured b navigation b would trigger root level canactivatechild guard reproduction problem modified router live app example demonstrate problem adding canactivatechildguard root routing expected behavior plunker example would navigation child siblings blocked respective console message motivation use case changing behavior expect work documented please tell us environment angular version router browser chrome xx language typescript", "num": "11177", "d": "8/2016"}, {"title": "modeldriven reactive forms", "body": "could someone point documentation forms something shows following custom validators conditional validation clearvalidators setvalidators updatevalueandvalidity nested items validation help getting docs would great thanks", "num": "11175", "d": "8/2016"}, {"title": "provider controlcontainer child component ngmodelgroup", "body": "bug report gt search github similar issue pr submitting original plunker written paskal prekht explanation template driven forms fork exactly thing except trying load one fieldsets separate child component code export class formgroupcomponent component selector formcomponent directives formgroupcomponent template export class formcomponent cutting one feildsets loading inside seperate directive wo nt work anymore couple closed issues non working", "num": "11174", "d": "8/2016"}, {"title": "codegenerator sync", "body": "bazel workers eventual branch need synchronous api run code generation", "num": "11173", "d": "8/2016"}, {"title": "typeerror thisformget function formgroupdirectiveaddcontrol", "body": "submitting check one x current behavior using angular following tools webpack esnext reactive form introduce rc reproduction problem please see following link full code please see following link live example please tell us environment angular version browser language", "num": "11171", "d": "8/2016"}, {"title": "bad filenamepath httptutorial", "body": "submitting check one x current behavior code show due bad filenamepath expecteddesired behavior example code shown reproduction problem go expected behavior shown code please tell us environment chrome bit", "num": "11169", "d": "8/2016"}, {"title": "feature ngcomponentoutlet", "body": "submitting check one x current behavior none expecteddesired behavior directive able create components dynamically way created embedded view dynamically pros remove boilerplate component developer need query manually create component expressed template simple aligned ngtemplateoutlet idea concept cons host attribute bindings expressed template much con expected used set values instance getting reference returned via callback directive ts directive selector swapcmp export class swapcomponentdirective private component constructor private cfr componentfactoryresolver private vcref viewcontainerref private tref templateref input swapcmpbindings resolvedreflectiveprovider input swapcmpinjector injector input swapcmpprojectables output oncreate eventemitter new eventemitter false input set swapcmp component thiscomponent component thisvcrefclear thiscomponent let injector thisswapcmpinjector thisvcrefparentinjector name swapcomponent example took code base developer provides component changing component recreate injector optional supplied current injector used bindings used allow additional providers injector something like case needed developer supply projectablenodes think", "num": "11168", "d": "8/2016"}, {"title": "error read property injector null injecting injectable component", "body": "submitting current behavior component defined js injectable export class odataservicefactory test defined js describe odataservice function testbedresettestenvironment testbed error please tell us environment angular version unit test environment mocha language typescript", "num": "11165", "d": "8/2016"}, {"title": "queryencoder encodes equal semicolon", "body": "submitting check one x current behavior queryencoder replaces equals char semicolon char expecteddesired behavior queryencoder replaces equals char char reproduction problem let q new queryencoder let text qencodevalue ab expected behavior text equal ab motivation use case changing behavior please tell us environment angular version angular browser language", "num": "11164", "d": "8/2016"}, {"title": "unable print object object json pipe", "body": "print object object give error typescript converting circular strucutre json print text object", "num": "11163", "d": "8/2016"}, {"title": "migration troubleshooting", "body": "maints appmodulets import ngmodule angularcore import browsermodule angularplatformbrowser import routermodule angularrouter import appcomponent appcomponent import approuterproviders approutes import partiesformcomponent importspartiespartiesformcomponent ngmodule declarations appcomponent partieslistcomponent partydetailscomponent partiesformcomponent bootstrap appcomponent imports browsermodule router routermoduleforroot approuterproviders providers approuterproviders export class appmodule appcomponentsts import component angularcore import partieslistcomponent importspartiespartieslistcomponent import template appcomponenthtml component selector app template directives partieslistcomponent export class appcomponent approutests import routerconfig providerouter angularrouter import partieslistcomponent importspartiespartieslistcomponent import partiesformcomponent importspartiespartiesformcomponent const routes routerconfig path component partieslistcomponent path party partyid component partydetailscomponent path edit partyid component partyeditcomponent path new component partiesformcomponent export const approuterproviders providerouter routes", "num": "11162", "d": "8/2016"}, {"title": "child canactivate called parent canactivate resolved using authguards", "body": "current behavior child canactivate called parent canactivate resolved eg output parent auth guard called child authguard called parent authguard resolved expecteddesired behavior parent authguard resolved child authguard called output parent auth guard called parent authguard resolved child authguard called motivation use case changing behavior opinion nt child canactivate hold parent resolved guys say whats motivation behind waiting parent resolve angular version browser language typescript", "num": "11161", "d": "8/2016"}, {"title": "formarrayremoveat nt throw error element found", "body": "submitting check one x current behavior trying remove element formarray error thrown element found removat index expecteddesired behavior kind feedback operation failed reproduction problem motivation use case changing behavior trying clean form specific timepoints recreate new structure wondered formarray still controls please tell us environment visual studio code update node js tools latest chrome etc angular version language typescript xx typescript", "num": "11160", "d": "8/2016"}, {"title": "regex validatorspattern breaks works fine html tag attribute", "body": "hi using datadriven approach form problem put regex inside input attrbiute pattern works fine using validatorspattern method string regex param input never validate code something wrong validate url email regex wo nt works", "num": "11159", "d": "8/2016"}, {"title": "sanitize allow custom regexp", "body": "submitting check one x current behavior using vulnerable features like setting url style attribute backgroundimage custom values extension safe get rejected sanitizer detects unsafe expecteddesired behavior way edit sanitizer regexp use sanity checks motivation use case changing behavior although opens new vulnerability nonexperienced devs change approvedbyeveryone safe regexp vulnerable one gives responsability developer imagine one simple case stylebackgroundimage want provide placeholder image case url want show available gets load error current sanitizer regexp regexp allows single url value regexp prevents us using although first one safe second one safe well thinking submiting issue pr changing regexp one fits need thought maybe better api allowed set custom regexp sanitizer checks", "num": "11158", "d": "8/2016"}, {"title": "feature variants overriding components amp routes aka experiments support", "body": "summary design discussion tbosch vsavkin applications commonly need support multiple variants code base need serve slight variation application certain circumstances time still need serve original version common use cases experiments eg shipping slightly different app users special events black friday serve different app shipping admin version users incrementally rolling feature etc common want surgically vary specific part app circumstances wholesale replace fork code base another consideration many variants available concurrently individual app download might need include multiple variations time admin user black friday yet another thing disabled variants effect served code rest application ie used code hiding unlaunched features basic idea encapsulate variants source files source files patching global symbols load way changing application behaves server side chooses serve appropriate combination source files user depending variants apply client side lazily loads particular variants needed two use cases support initially changing single component behaves adding entire route application components components user side support syntax like worth noting must assignment compatible eg implement interface injected place across application also must content view projection drop angular component side things routes routes basic idea lazily load routes contain variants module loader chance inspect load appropriate module even server side return appropriate module likely nicer api wrapping might specific module loader used", "num": "11151", "d": "8/2016"}, {"title": "tour heroes broken references", "body": "submitting check one x current behavior going tour heroes everything fine last section http looking code addchange multiple places following displayed page instead code snippets files bad filename current path docs ts latest tutorial pathtodocs one particular post section add edit delete instances page point looks like reason code changed original pointing code longer used example post section put save sections code shown overall file displayed later uses create update methods never referenced tutorial instead postput methods save method referenced expecteddesired behavior code snippets andor files supposed display correctly page user follow tutorial reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point go browser scroll page top add edit delete section tutorial note code snippet post section nt come expected expected behavior seeing code snippets files user follow along motivation use case changing behavior learning nt involve troubleshooting web pages learning please tell us environment angular version na browser language na", "num": "11148", "d": "8/2016"}, {"title": "error generating new project vagrant", "body": "submitting check one x current behavior try create new project angularcli throws error expecteddesired behavior successfully generated project please tell us environment use vagrant box ubuntu windows shell script angular version", "num": "11147", "d": "8/2016"}, {"title": "overriding templatestemplateurls components", "body": "submitting check one x current behavior currently one able override templates component using aot compiler creates inflexibility one wants override template used third party library example expecteddesired behavior ability override templatetemplateurl component undesired template nt compiled app bundle unnecessarily example perhaps one approach would like ability something like ts import componentoverride angularcore import foocomponent mylib componentoverride template foocomponent motivation use case changing behavior see addition feature highly requested ui bootstrap users almost certainly come third party ui libraries angular avoid rigidity allow users take advantage prebuilt widgets avoid rigidity csshtml structure important customizability", "num": "11144", "d": "8/2016"}, {"title": "condition routeroutlet working router", "body": "submitting bug report check one x current behavior add condition routeroutlet worked using routerdeprecated ex expecteddesired behavior routeroutlet activated condition satisfied currently getting error routeroutlet found reproduction problem expected behavior backward compatible nt want rewrite code every release motivation use case changing behavior load component validations passed nt want move internal logic routing level please tell us environment windows visual studio web api angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "11142", "d": "8/2016"}, {"title": "angular changing chained pipe parameters nt invoke pipes downchain", "body": "submitting check one x current behavior reproducing plunker following template theuserid numpages use bind clicks table header single function changes andor calls injected added calls two pipes functions noticed click header pipe gets called change gets called quicksort outputs th block objects input array expecteddesired behavior changing parameters count changing parameters namely input pipes downchain cause rerun motivation use case changing behavior currently changing parameters pipe middle chain change output seen user find counterintuitive currently work around please tell us environment angular version browser firefox windows linux mint language typescript", "num": "11138", "d": "8/2016"}, {"title": "dynamiccomponentloaderloadasroot", "body": "use dynamiccomponentloaderloadasroot method following code get result", "num": "11137", "d": "8/2016"}, {"title": "ngif reacting change decodeaudiodata callback", "body": "submitting check one x current behavior ts servicets apiurl string token string getdataitem urlpart string id string callback void let oreq new xmlhttprequest oreqopen get true oreqresponsetype arraybuffer oreqsetrequestheader authorization ts audiocomponentts import component input oninit ondestroy output angularcore import service service component selector audioitem templateurl audiocomponenthtml export class audioitem implements oninit ondestroy input itemid string input type string loading wav file arraybuffer decoding file nt loaded want display spinner issue icon never appears placed breakpoint line get called correctly expecteddesired behavior spinner disappears play icon appears reproduction problem ca nt provide one since ca nt find source wav file allow make request plunkr please tell us environment angular version browser chrome firefox language typescript", "num": "11136", "d": "8/2016"}, {"title": "multilingual routes", "body": "wonder angular router vision add easy way multilingual routes maybe achieved actually good simple official way mean webapp share link lot times believe writed url example en fr think really realisable hard named routes navigate name routes object simply use instant translate fetch named routes path different language json", "num": "11135", "d": "8/2016"}, {"title": "router canload replaces url guard returns false", "body": "submitting check one x current behavior navigating within guard returning false router replaces url previous url instead navigated url expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point click link notice current url click link notice view displays route notice current url still expected behavior current url navigating within guard returning false motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx cc vsavkin", "num": "11134", "d": "8/2016"}, {"title": "aot module import logic setroot call fails", "body": "submitting check one x think bug aot compiler trying import module combination method logic simple return statement function anything return statement object ngc error message use case try build object dynamically based input reproduction problem sample code ngmodule export class testmodule static forroot modulewithproviders ngmodule imports testmoduleforroot declarations appcomponent bootstrap appcomponent export class appmodule please tell us environment angular version", "num": "11133", "d": "8/2016"}, {"title": "duplicates html", "body": "submitting check one x current behavior created component navheader meant contain code ensure maintained across application use duplicates body application component called instance call navheader component duplicates inserts application component navheader component expecteddesired behavior nt duplicate code reproduction problem look application particular files application component application modules header navigation component expected behavior motivation use case changing behavior please tell us environment angular version browser chrome latest firefox latest language typescript", "num": "11132", "d": "8/2016"}, {"title": "router redirect canactivate app initial load", "body": "submitting check one x current behavior typescript export class authguard implements canactivate constructor private router router canactivate route activatedroutesnapshot state routerstatesnapshot thisrouternavigate login return false navigate one route one canactivate guard everything works fine app loads first time router redirect example home dashboard login routes dashboard route canactivate guard canactivate redirecting login navigate home dashboard router redirects login route directly entering dashboard browser router navigate login please tell us environment angular version browser language typescript", "num": "11131", "d": "8/2016"}, {"title": "adviceguidelines optimized bundling strategies", "body": "submitting check one x request guidelines production bundles experimented approaches would love see input angular team generate optimized bundles realistic sample applications one concerns seems pushed post final gave us lot cool things unfortunately longer mangle code part minification tree shaking awesome tell biggest reliable size reduction comes minifymangle uglify terminology done experiment sample application minify tree shake application observation tree shaking minify without mangle gets mangle added end roughly significant reduction gzipped numbers btw see bundlejs application huge probably medium size app uses fair amount angular since point app explore different features angular granted tree shaking without ahead time compilation aot may reduce effectiveness tree shaking aot one suggested workaround get mangle work without aot establish baseline since aot feasible environments one example aot supported yet sharing results would like compare notes others may gone similar experiments know angular team worked hard achieved amazing results wrt bundle sizes seems like mangling issue introduced may reduce net benefit common use cases like asking bundling guidelines angular team since perfectly possible approach using rollup optimally configured current approach transpile original typescript running rollup minify without mangle perhaps optimized shake even case point perhaps moot otherwise hope mangling bug introduced gets prioritized final", "num": "11128", "d": "8/2016"}, {"title": "snippet links broken", "body": "submitting check one x current behavior documentation bug number snippet links tour heroes page broken example appheroservicets post bad filename current path docs ts latest tutorial pathtodocs note issue like previously opened closed search issues bad filename expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "11127", "d": "8/2016"}, {"title": "feature request pipe perform type checking", "body": "submitting check one x current behavior following code produces typescript compile errors typescript import pipe angularcore pipe name tolocaleupper export class tolocaleupperpipe trnsform value string typo gt runtime error return valuetolocaleuppercase expecteddesired behavior code produce following error motivation use case changing behavior trivial decorator check argument implements interface typescript excels kinds structural checks leveraged improve tooling robust pipe decoratorfactory signature could look like please tell us environment angular version language typescript", "num": "11126", "d": "8/2016"}, {"title": "router service singleton", "body": "submitting check one x current behavior using angular modules combined router documented official docs example services provided child module treated singletons ie new service instance created time route within module expecteddesired behavior services scoped module level treated stateful singletons maintain state long user routed page module unload user routes away elevating service specific child module shared application scope possible breaks architecture pattern reproduction problem access following plunker link crisisservice add following constructor browser console log string every time link different subroute eg crisiscenter expected behavior like able share state across components module via service cleared whenever route away module without moving service global shared model motivation use case changing behavior able share state components module using service without elevating local service shared global scope please tell us environment angular version browser language typescript", "num": "11125", "d": "8/2016"}, {"title": "negative numbers", "body": "submitting check one x reproduction problem messagemapping messagemapping etc messagemapping item items item items works fine infinite following negative numbers throw exception expected behavior negative numbers get value stored key please tell us environment angular version browser chrome language typescript", "num": "11124", "d": "8/2016"}, {"title": "shadowcss shimming fails android", "body": "see related", "num": "11123", "d": "8/2016"}, {"title": "replace observable asyncsubject xhrconnectionresponse", "body": "submitting check one x current behavior current implementation time observer subscribes observable returned http methods thus connectionresponse http request executed observable executed expecteddesired behavior add option return asyncsubject instead last value returned without executing http request consumer wants execute request create new connection reproduction problem let osubscribe makes http request returns response osubscribe makes http request returns response expected behavior let osubscribe makes http request returns response osubscribe returns previous response motivation use case changing behavior multiple observers subscribing response waiting observablecomplete also expect get value currently case subscriber may get different values angular version browser language typescript", "num": "11122", "d": "8/2016"}, {"title": "bug routerlinkactiveoptions nt exactly match queryparams", "body": "bug report enabling exact path matching nt fully match path query parameters listed would useful highlighting page number current page based query parameter expected behavior setting match path exactly including query parameters listed actual behavior setting matches routerlink value exactly without consideration query parameters reproduction create new project appcomponentts javascript import component angularcore component selector pnroot templateurl styles export class appcomponent numbers number serve reproduction results root path eg numbers active class case red right border path query parameter eg numbers active class expected result none links active link number active least case setting version details os windows node angularcli", "num": "11121", "d": "8/2016"}, {"title": "publish closure externs angular", "body": "tsickle generate closure externs example trying use langts gets generated coreexternsjs commonexternsjs closure compiler errors duplication try workaround", "num": "11119", "d": "8/2016"}, {"title": "dependency injection fails extending routeroutlet", "body": "submitting check one x current behavior extending routeroutlet unable inject dependencies error thrown however dependency undefined due large part makes extended custom router outlet less useful explained expecteddesired behavior ideally would inject example auth service would allow validate user routing auth fails redirect login example useful prevents need calling canactivate components less almost like global way resolve rendering angular reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point nt believe example needed create default directive extend routeroutlet try inject service constructor undefined using latest router greater expected behavior service instantiated using dependency injection motivation use case changing behavior extending routeroutlet largely useless access router inject custom services please tell us environment angular version rc browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "11118", "d": "8/2016"}, {"title": "aot compiler nt output template path name ngfactory files prod mode", "body": "submitting check one x current behavior aot prod mode produces snippet ngfactory files output contains pathtotemplatetemplatehtml ends final bundle even closure compilation really need output full template path prod mode expecteddesired behavior file path output prod mode angular version language typescript", "num": "11117", "d": "8/2016"}, {"title": "implementing meta class getting changing html meta tags", "body": "submitting like implement shortcut getting setting html meta values think long changing title often useful change meta values well current behavior currently possible use getdom setattribute el content something method change content therefore implementation would serve shortcut expecteddesired behavior class would similar title class would method something like meta name metaname getdom setattribute el metaname contentvalue optionally maybe method returning content meta entire element angular version browser language", "num": "11115", "d": "8/2016"}, {"title": "test failing", "body": "mlaval managed tests green tests broken seems like due", "num": "11114", "d": "8/2016"}, {"title": "ngc enforce strict null checks", "body": "enable strict null checks ngc integration tests see fix type errors show", "num": "11105", "d": "8/2016"}, {"title": "routeroutlet child route inside conditional ca nt found", "body": "identical closed even though issue persists see comment said issue links plunk creating new issue since response dev team closed issue past weeks thought might get notifications closed issues understand busy something else", "num": "11100", "d": "8/2016"}, {"title": "parent children communicate via service working two components", "body": "find interesting example transfer data one component another component using subjectobservable service example working acording notice subscribe data changes component inishiated data change possibility get data changing one component another component changed could serios issue case need rerender data component another component chaanged", "num": "11099", "d": "8/2016"}, {"title": "angular headers response", "body": "submitting check one x reproduction problem send headers c web api response everything ok use postman see use angular http seems mapped please tell us environment angular version browser chrome latest language typescript", "num": "11098", "d": "8/2016"}, {"title": "infinitive loop custom controlvalueaccessor certain conditions", "body": "submitting check one x current behavior implementing custom accept nonprimitive model easily go infinitive loop browser crash workaround exists nonintuitive requires boilerplate happens following condition returns returns objects nonprimitive value return different objects subsequent calls equal terms content equal terms references expecteddesired behavior people able use functions binding case till recently believe used work till async component introduced ngmodel impl reproduction problem minimal plunker based real life scenario plunker simple timepicker implementation requires following data structure input works fine used user wants create function call ex convert internal string structure structure required datepicker go infinitive loop see infinitive loop browser crash uncomment following line warning crash browser expected behavior people use functions convert model values internal data structures component ex string plunker data structures required control conceptually need mechanism similar parsers formatters pipeline angular please tell us environment angular version browser language additional info discuses use case mhevery advised ping kara issue originally raised project", "num": "11097", "d": "8/2016"}, {"title": "feat di make depsproperty optional usefactorytokens using reflectiveinjector", "body": "submitting check one x current behavior creating tokens via usefactory reflectiveinjector currently need provide depsarray even factory dependencies case would nice depsarray would needed motivation use case changing behavior less boilerplatecode please tell us environment angular version browser language", "num": "11094", "d": "8/2016"}, {"title": "router appear support string id", "body": "submitting following lazy loaded routing defined import routes routermodule angularrouter import forumcomponent forumcomponent import forumthreadcomponent forumthreadforumthreadcomponent import forumthreadlistcomponent forumthreadlistforumthreadlistcomponent const routes routes path component forumcomponent children path id component forumthreadcomponent path component forumthreadlistcomponent export const routing routermoduleforchild routes constructing link works fine id number id string link uri constructed id query string parameter called str eg numeric id string id nt tried numeric id supplied string property expecteddesired behavior would expect number string id properties result format link uri reproduction problem see expected behavior number string ids passed part uri path specified simple values link component array motivation use case changing behavior possible use name guid example identity object please tell us environment angular version router version browser chrome ubuntu language typescript", "num": "11090", "d": "8/2016"}, {"title": "currency pipe working safari version", "body": "submitting check one x current behavior working throwing error expecteddesired behavior work properly like chrome firefox ie reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "11087", "d": "8/2016"}, {"title": "children componentless routes named outlets placed incorrect routeroutlet", "body": "submitting current behavior route specified outlet children activated child put main router outlet along side route component already active inside outlet rather named outlet expecteddesired behavior routes whose componentless parents specified outlet go said outlet reproduction problem relevant route plunkr reproducing issue click three different links see login register routes put main outlet alongside already activated home route whereas confirmation route correctly placed named outlet motivation use case changing behavior believe bug use case demonstrated plunkr please tell us environment angular version browser language typescript", "num": "11082", "d": "8/2016"}, {"title": "request aot prettyprint metadata", "body": "compileroptions prettyprint metadata", "num": "11080", "d": "8/2016"}, {"title": "security safe values sanitization web components", "body": "mprobst clarify note security context external web component elements vulnerability scenario user angular component passes data web component eg polymer component class myclass data someinput meanwhile polymer customelement properties someprop string ready function thisinnerhtml thissomeprop oh noes change way tell angular needs sanitize element html context bit sad hand polymer code arguably wrong needs sanitize input binding potential fixes allow require user declare security context properties adding custom elements kind nice line architecture hoping user properly declare dangerous properties might overly optimistic reality would expect go wrong time end something complicated leaves users apps less safe also separating declaration dangerous actual implementation meaning likely diverge share knowledge safe values sanitization etc angular polymer strong boil ocean vibe think google security team somewhat vague plans shared library could definitely revisit happened require web component properly sanitize inputs anyway correct failure mode data coming angular might oversanitized user use whatever way component expects mark data safe potentially sanitizing using think list reasonable scenario failure mode mostly benign sanitization reasonable expectation components proper escaping unsafe inputs expect broken anyway ifwhen happens migrate improve later approach currently implemented vicb pr good go", "num": "11079", "d": "8/2016"}, {"title": "hostbinding set global css classes", "body": "submitting check one x current behavior component component style private rendered effect obviously expecteddesired behavior possible specify internalprivate component class please tell us environment angular version browser language typescript", "num": "11077", "d": "8/2016"}, {"title": "angularcore gives uncaught typeerror read property type null", "body": "submitting check one x current behavior install angularcore npm linked package get error message expecteddesired behavior either error message specific able install angularcore without problem reproduction problem afraid ca nt replicate plunkr npm linked package spent hours getting cause problem found ngmodule web app works great decide move ngmodule somewhere else computer use web apps install app single line code edited app nt work anymore get error uncaught typeerror read property type null anonymous function gettransitivemodules compilemetadataresolvergettransitivengmodulemetadata compilemetadataresolvergetngmodulemetadata runtimecompilercompilecomponents runtimecompilercompilemoduleandcomponents runtimecompilercompilemoduleasync platformrefbootstrapmodulewithzone platformrefbootstrapmodule anonymous function webpackrequire bootstrap fn bootstrap anonymous function webpackrequire bootstrap webpackjsonpcallback bootstrap anonymous function stack trace expecting would something webpack typescript however errors presented console lot trial error find error message impossible debug found remove npm linked package web app works weird thing angular packages installed package nt seem cause conflict right done remove angularcore npm linked package least makes app work however gives typescript errors angularcore nowhere found npm linked package expected behavior conflict angularcore motivation use case changing behavior able use ngmodules npm linked packages please tell us environment angular version browser chrome xx language typescript", "num": "11076", "d": "8/2016"}, {"title": "bug routeraot unable use featuremodules routing aot compilation", "body": "submitting check one x current behavior using featuresmodules encapsulate things belonging together using theses featuresmodules routing like appmodulets ts ngmodule imports sharedmoduleforroot browsermodule routermoduleforroot approutes export class appmodule approutests ts export function gettasksmodule return tasksmodule export const approutes routes path tasks canload loginguard loadchildren gettasksmodule works fine aot calling application compiles without errors runtime get following exception enterting route debugging looks like application get needs exception happens code routerconfigloaderts r tasksmodule exeption occurs expecteddesired behavior possible use loadchildren combination aot motivation use case changing behavior currently possible encapsulate routing featuremodules using aotcompiler please tell us environment angular version commit browser language", "num": "11075", "d": "8/2016"}, {"title": "aot compiler support typescript nounusedparameters setting", "body": "submitting check one x current behavior compiler generates function parameters might used project runs typescript getting errors nearly ngfactory files used expecteddesired behavior generated code compile please tell us environment angular version language typescript rather quickanddirty fix prefix variable names underscore supresses error", "num": "11074", "d": "8/2016"}, {"title": "form reset nt work custom valueaccessor", "body": "submitting check one x current behavior form reset form contains custom valueaccessor displayed value control nt reset gets reset backend form user perspective expecteddesired behavior expect reset empty form value displayed value reproduction problem expected behavior expect reset empty form value displayed value motivation use case changing behavior expect bug fixed please tell us environment angular version browser chrome language typescript", "num": "11073", "d": "8/2016"}, {"title": "memory leak running test campaign", "body": "running test campaign browser see memory consumption keeps growing without effective gc browsers low memory available causes crashes disconnections eg mobile browsers saucelabs browserstack reproduce issue add spec file project run usual watch chrome getting slower slower crashing import component angularcore import testbed angularcoretesting export function main fdescribe leak memory gt beforeeach gt testbedconfiguretestingmodule declarations testcomponent component selector testcmp template class testcomponent", "num": "11071", "d": "8/2016"}, {"title": "using upgradeadapter nested ngmodules", "body": "currently possible use one instance upgradeadapter created main appmodule instance adapter becomes bootstrapped capable initializing components using several feature ngmodules becomes issue project structure javascript upgradeadapterts imports appmodule const upgradeadapter new upgradeadapter forwardref gt appmodule uiselectcomponentts component selector uiselect template class uiselectcomponent uiselectmodulets imports uiselectcomponent ngmodule declarations uiselectcomponent exports uiselectcomponent export class uiselectmodule featuremodulets imports uiselectmodule ngmodule imports uiselectmodule export class featuremodule appmodulets imports featuremodule ngmodule imports featuremodule class appmodule plane code works fine place separate files result cyclical dependency issue using ts rollup setup bundling places code order described commented lines allert cyclical dependency upgradeadapter initialization code becomes last result bundle uiselectmodule unable reference workaround reference appmodule upgradeadapter store somewhere else fe window", "num": "11069", "d": "8/2016"}, {"title": "nested ngfor lose object", "body": "submitting current behavior nesting ngfor object passed accordingly see small plnkr check mycubecomponent appcomponentts expecteddesired behavior clear design decision expect however able pass object reproduction problem motivation use case changing behavior one simple fix component middle pass data component bit useless acts like bridge angular version browser language typescript", "num": "11068", "d": "8/2016"}, {"title": "errors trying module inside docker behind corporate proxy", "body": "trying lazy load module behind corporate proxy get following error server side following one client side routes use components nt lazy loaded get static files things like work app works fine pc updated docker proxy settings set variables starts happening could causing fix", "num": "11067", "d": "8/2016"}, {"title": "overriding provider aot compiler might generate invalid code", "body": "submitting check one x current behavior root bare implementation supports calls application actually needs typescript error one services providers requires aot compiler generates code injects member ngfactory service however member typed typecompatible constructor argument expecteddesired behavior generated code support duck typing possible runtime although actual declared types nt match please tell us environment angular version language typescript xx workaround case ngfactory member provider type", "num": "11066", "d": "8/2016"}, {"title": "template element reference nt updated ngif state changes", "body": "current behavior template element reference used another element condition container rendered condition changes template element reference nt updated neither called nt matter element reference declared implemented mycontainer assigned yet export class app constructor thisname release candidate expecteddesired behavior element reference update every time referred element changed triggering change detector consequence reproduction problem please tell us environment angular version browser chrome believe happens language typescript", "num": "11065", "d": "8/2016"}, {"title": "aot compiler nt support subject type output members", "body": "submitting check one x current behavior aot compiler generates invalid typescript code member component reason base class function returns valid type method compiling runtime works fine expecteddesired behavior aot compiler nt generate invalid code angular version rxjs language typescript xx workaround declare member class contains overload parameter return type matches", "num": "11064", "d": "8/2016"}, {"title": "aot compiler tries call ngonchanges parameter although none declared", "body": "submitting check one x current behavior component implements error create function without parameter typescript fine runtime javascript always fine calling function many parameters however aot compiler generates call component function parameter error typescript land expecteddesired behavior quickly hacked casting component interface calling avoids typescript error even better solution probably change code generation leads call objects nt necessary case creating means less stress garbage collector please tell us environment angular version language typescript", "num": "11062", "d": "8/2016"}, {"title": "import class service childcomponent want use", "body": "simple question import time need service file subcomponent already root component bootstrap ngmodule subcomponent put constructor constructor private dataservice dataservice need also import dataservice thinked root component available childs use instance need explanation maybe santa", "num": "11061", "d": "8/2016"}, {"title": "aot compiler support input output base classes", "body": "submitting check one x current behavior runtime compiler works members declared base class aot compiler nt expecteddesired behavior aot compiler work well reproduction problem use template works runtime aot compiler complains please tell us environment angular version", "num": "11060", "d": "8/2016"}, {"title": "use character urlsearchparams", "body": "submitting current behavior code exemple let body new urlsearchparams let values bodyset values let options requestoptions optionsheadersappend contenttype applicationxwwwformurlencoded return body options character replaced spaces expecteddesired behavior sent character please tell us environment angular version browser chrome xx firefox xx ie xx language typescript", "num": "11058", "d": "8/2016"}, {"title": "add support generic types compiler", "body": "submitting check one x current behavior compiler nt emit generic type parameters compiling typescript code fails expecteddesired behavior compiler use generic type information angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx code base couple places use generic types help share code lose type information existed compile time runtime compiler saw javascript code without type information aot compiler currently remove type information reduce shudder compiler ignores generic parameters two distinct examples code base put separate comments", "num": "11057", "d": "8/2016"}, {"title": "angular work templates include braces using compiler", "body": "angular work templates include braces found similar bug current behavior angular work templates include braces expecteddesired behavior angular work successfully templates include braces reproduction problem typescript component selector dynamiccomponent template work correctly test class stub constructor thiscompilercompilecomponentasync stub dynamiccomponentfactory componentfactory gt thiscomponentinstance thisviewcontainercreatecomponent dynamiccomponentfactory use works fine testhtml dom work correctly test use empty output inside dom testhtml dom motivation use case changing behavior wish use arbitrary template like work correctly test please tell us environment angular version browser chrome language typescript", "num": "11056", "d": "8/2016"}, {"title": "upgrade service breaks angular router", "body": "submitting check one x current behavior angular app components use upgrade service bootstrap application upgrading angular router stop working somehow line invoked handler catch event init expecteddesired behavior router loads defined view init angular version browser language", "num": "11055", "d": "8/2016"}, {"title": "date pipe custom time format", "body": "used date pipe format timestamp custom format like work right chrome wrong result html rendered removed time part right result", "num": "11054", "d": "8/2016"}, {"title": "ngc fails generate angular factories symlinked nodemodules", "body": "submitting check one x current behavior noticed ngc work correctly compilation done using symlinked nodemodules folder compilation app code succeed compiler fails generate new nodemodules folder containing angular specific factories like expecteddesired behavior assuming compiler would able follow symlink generate necessary factories least throw error scenario nt supported reproduction problem sample source code used project reproduce problem important symlink nodemodules running regular nodemodules folder works expected maints import platformbrowser angularplatformbrowser import appmodulengfactory appmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory appmodulets import ngmodule angularcore import component angularcore import browsermodule angularplatformbrowser component selector myapp template export class appcomponent ngmodule imports browsermodule declarations appcomponent bootstrap appcomponent export class appmodule tsconfigjson compileroptions target module commonjs moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany true suppressimplicitanyindexerrors true files appmodulets maints typingsindexdts app code factories generated correctly dist new nodemodules folder created angularcompileroptions gendir dist debug true angular version", "num": "11053", "d": "8/2016"}, {"title": "question security ngnonbindable elements", "body": "template parser uses visitors regular nodes non bindable nodes seems like securityschema checks used former one could vulnerability would allow js injections nt time investigate cc mhevery rjamet mprobst igorminar", "num": "11052", "d": "8/2016"}, {"title": "ngc codegen quotes properties breaks closure compiler", "body": "say configure routes ngc produces ngfactoryts containing get null path search redirectto path component path upload component note got quoted closure compiler renames property short name wo nt rename one ngfactoryts quoted", "num": "11050", "d": "8/2016"}, {"title": "aot metadata collector collect static fields", "body": "submitting check one x current behavior collect initialized static fields references metadata assumed types resulting incorrect code generated means references typescript export class mystatics export myproviders provide token usevalue value component selector mycomponent providers mystaticsmyproviders class mycomponent generates bad code expecteddesired behavior factory generated code generated example correct reference treated exported variable", "num": "11048", "d": "8/2016"}, {"title": "one level working routerlink", "body": "updating route link working one level title url link redirects", "num": "11047", "d": "8/2016"}, {"title": "angular router ca nt handle refresh base href root virtual directory iis", "body": "submitting check one x current behavior site hosted hosted router gets confused refresh base href set something expecteddesired behavior router work correctly hosted iis url rewrite correctly configured work initially refreshed request reproduction problem host dist folder iis virtual directory called sitea angular app routes ie sitedashboard install url rewite iis configure url rewrite rules put webconfig contents next indexhtml change indexhtml set base href browse see site comes correctly default route say localhostsiteasitedashboard click refresh browser see redirected iis home page expected behavior angular iis work together angular able route appropriately inside iis something root web site motivation use case changing behavior hosting multiple named sites single machine environment iis hosted sites want add overhead additional web server please tell us environment angular version browser language typescript iis version url rewrite installed", "num": "11046", "d": "8/2016"}, {"title": "upgrade component uses multislot transclusion", "body": "submitting check one x current behavior upgrade component uses multislot transclusion example component following definition try two errors thrown say component works fine long nt try upgrade expecteddesired behavior expected components use multislot transclusion upgrade please tell us environment angular version browser language typescript", "num": "11044", "d": "8/2016"}, {"title": "remove tags compiled angular templates", "body": "submitting feature request currently build angular application internationalization add attributes many tags compilation would nice tags removed included rendered site", "num": "11042", "d": "8/2016"}, {"title": "input typerange updating ngmodel", "body": "submitting x bug report current behavior using input typerange updating model values ngmodel bindings expecteddesired behavior reproduction problem ie left chome right expected behavior slider models update browsers please tell us environment windows ie emulated via edge angular version browser ie lt language typescript latest need create plunkr reproduction essentially changing slider variable updating let know help", "num": "11041", "d": "8/2016"}, {"title": "feature request pseudotranslation", "body": "current behavior waiting expecteddesired behavior developing environment sometimes become difficult spot raw strings application qa due cognates would useful nonvalid localization could used display keys instead values zz example motivation use case changing behavior ease troubleshooting strings yet translation bundle please tell us environment angular version browser language", "num": "11040", "d": "8/2016"}, {"title": "viewchildren viewchild searching child children", "body": "submitting check one x current behavior viewchildren viewchild searching child children expecteddesired behavior search descendents also reproduction problem steps reproduce lets say declare inside declare inside ca nt use viewchildren get expected behavior would expect find motivation use case changing behavior want find descendents specific type children please tell us environment angular version browser chrome language typescript", "num": "11039", "d": "8/2016"}, {"title": "trigger modal using routing", "body": "hi issue nt know bug feature need add angular routing trying trigger modal using routing rc application navigate correct routing modal appear background error code uaaddfunctioncomponent import component viewchild angularcore import modaldirectives bsviewproviders import router angularrouter component selector uaaddfunction templateurl srcapppagesuserauthcomponentsfunctionadminadduaaddfunctionhtml directives modaldirectives viewproviders bsviewproviders exportas child export class addfunction uaaddfunctioncomponenthtml add function system routing export const fleetroutes routerconfig path fleet component fleetcomponent children path home component homecomponent path help component helpcomponent expected output", "num": "11038", "d": "8/2016"}, {"title": "expression changed checked", "body": "submitting check one x current behavior get exception expression changed checked expecteddesired behavior exception reproduction problem change page search item like item get error issue related cuz change angular version configjs error nt happen nb problem nt occur search page please tell us environment angular version browser chrome language typescript", "num": "11037", "d": "8/2016"}, {"title": "angular runtime error messages helpful external developers", "body": "x feature request current behavior react error messages tell wrong code angular error messages tell wrong angular code fixed angular error messages point developers issues code instead pointing things went wrong angular framework would change world developers great platform reproduction problem create issue including dependencies issues see stack trace console completely stack get bottom line point mainjs issues mainjs components referenced mainjs entry point angularcli helpful error messages good example expected behavior runtime errors describing expected behavior root cause issue displayed console motivation use case changing behavior team developers want begin using angular rtm see stack traces major hurdle productivity please tell us environment angular version browser chrome lastest language typescript", "num": "11036", "d": "8/2016"}, {"title": "adding pagination table", "body": "want add pagination show items per page using bootstrap table proceed", "num": "11035", "d": "8/2016"}, {"title": "bug compiler di token thirdpartylibrary crashes aot compiler", "body": "submitting check one x current behavior trying provide token thirdpartylibrary object lets aot compiler crash module like ts import io socketioclient ngmodule providers provide socketio usevalue io export class appmodule calling throws following exception research looks like aot compiler iterating tokens tries precompile nt work provided function expecteddesired behavior possible provide functions thirdpartylibraries using aot compiler please tell us environment angular version commit browser language", "num": "11034", "d": "8/2016"}, {"title": "http read custom error message returned backend", "body": "submitting check one x current behavior backend return custom error message response type text message ignored way read backend says send json body inside text message expecteddesired behavior expect get text response exactly work success response angularjs angular contenttype textplain reproduction problem email email password password topromise response response gt consolelog hello response catch function response consolelog failed response response see plunker expected behavior get error message returned message backend please check email password response backend backend send error response content type textplain think code need changed something like ever fix issue motivation use case changing behavior return messages backend user login user entered invalid username password user inactive way read another real example use stripe backend validate credit card error message return stripe credit card invalid expired blocked etc need pass message user also old angularjs working need big refactor backend break old applications well please tell us environment angular version browser nativescript exact language typescript", "num": "11033", "d": "8/2016"}, {"title": "testbedoverridecomponent working expected", "body": "submitting check one x current behavior nontrivial component hierarchy testing root component x children b trying mockstub subset children b declared directive use use mockstub implementation x told template x parsing errors since two implementations choose expecteddesired behavior mocked use x b uses real implementation template parse errors reproduction problem plnkr highlights issue expected behavior tests pass plnkr commenting line currently allows tests pass motivation use case changing behavior able selectively mock dependencies component test independent transitive dependencies please tell us environment angular version trying upgrade browser chrome language typescript", "num": "11032", "d": "8/2016"}, {"title": "inject host form group custom component two levels", "body": "submitting check one x x bug report feature request support request current behavior reactive form top level appcomponent add customcomponent within form turn add nestedcomponent within custom one customcomponent nestedcomponent require hosting form group injected dependency opposed passed manually input console reports template parsing error next nested component adding provider nested component error disappears injected form group actual hosting one newed form group instance adding provider custom component app component error remains time error firstlevel custom component gets actual hosting form group injected fine expecteddesired behavior nested component receive hosting form group dependency like firstlevel component passing manually neither required reproduction problem plunker illustrating scenario note moment nested component provider added error shows see injected form group host contains directive comment line error shows console issue stackoverflow expected behavior see expecteddesired behavior motivation use case changing behavior fixing error allow inject hosting form group please tell us environment angular version browser language typescript", "num": "11031", "d": "8/2016"}, {"title": "componentfactoryresolver component factory found mycomponent", "body": "submitting check one x current behavior used dynamiccomponentloader order create components dynamically based type also needed provide specific list provider component worked like charm list pagepanel components template viewchild container read viewcontainerref container viewcontainerref something like thisdynacomploaderloadnexttolocation thispagehandlerdescriptorcomponenttype thiscontainer resolvedproviders componentref componentref gt thispagehandlerinitialize componentref dcl deprecrated moved componentresolver code became far good new componentfactoryresolver tried migrate something like let factory componentfactory thiscomponentfactoryresolverresolvecomponentfactory thispagehandlerdescriptorcomponenttype let componentref componentref thiscontainercreatecomponent factory thischildinjector thispagehandlerinitialize componentref get exception component factory found mycomponent read bit surprise seems order work declare component want dynamically create entrycomponents section module like works indeed consider regression kind beats purpose able create components dynamically without declare advance whole idea app able create components based metadata including type created like would really bad hardfor add entrycomponents section understand might able use compiler instead chance aot production expecteddesired behavior would really like able use componentfactoryresolver similar componentresolver without declare components entrycomponents section goal still able use aot future reproduction problem check plunker removing entrycomponents break expected behavior way dynamically create components similar dynamiccomponentloader working eg without declare list components ideally still able use aot think might trickyproblematic motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "11030", "d": "8/2016"}, {"title": "ngmodule open different component due something like user type", "body": "ngmodule open different component due something like user type ngmodule two different pages want open different page due user type ngmodule imports sharedmodule routermoduleforchild path edit component editcomponent path view component viewcomponent declarations editcomponent viewcomponent export default class mainmodule constructor private u userservice environment thanks", "num": "11029", "d": "8/2016"}, {"title": "form group directives fully support reassigning formgroup", "body": "repro case ts form new formgroup first new formcontrol somemethod thisform new formgroup first new formcontrol", "num": "11025", "d": "8/2016"}, {"title": "installing min quickstart project", "body": "submitting x bug report gt search github similar issue pr submitting current behavior min quickstart app nt installstart expecteddesired behavior app start wo errors reproduction problem nodejs npm setting configuration files running npm install yields typings err message unable connect typings err caused connect enetunreach typings err cwd typings err system darwin typings err command usrlocalbinnode install typings err node v typings err typings v typings err code eunavailable typings err need help may report error typings err npm warn description npm warn repository field npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm install npm err node npm err npm npm err code elifecycle npm err postinstall npm err exit status npm err npm err failed postinstall script typings install npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err typings install npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err typings install yields typings err message unable connect typings err caused connect enetunreach typings err cwd typings err system darwin typings err command usrlocalbinnode usrlocalbintypings install typings err node v typings err typings v typings err code eunavailable typings err need help may report error typings err npm start start tsc amp amp concurrently npm run tsc w npm run lite nodemodules angularcommonsrcdirectivesngclassdts error find name set nodemodules angularcommonsrcfacadelangdts error find name map nodemodules angularcommonsrcfacadelangdts error find name set nodemodules angularcommonsrcfacadelangdts error find name map nodemodules angularcommonsrcpipesasyncpipedts error find name promise nodemodules angularcoresrcapplicationinitdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcapplicationrefdts error find name promise nodemodules angularcoresrcchangedetectiondiffersdefaultkeyvaluedifferdts error find name map nodemodules angularcoresrcchangedetectiondiffersdefaultkeyvaluedifferdts error find name map nodemodules angularcoresrcdireflectiveproviderdts error find name map nodemodules angularcoresrcdireflectiveproviderdts error find name map nodemodules angularcoresrcfacadecollectiondts error find name mapconstructor nodemodules angularcoresrcfacadecollectiondts error find name setconstructor nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name map nodemodules angularcoresrcfacadecollectiondts error find name set nodemodules angularcoresrcfacadecollectiondts error find name set nodemodules angularcoresrcfacadecollectiondts error find name set nodemodules angularcoresrcfacadelangdts error find name map nodemodules angularcoresrcfacadelangdts error find name set nodemodules angularcoresrcfacadelangdts error find name map nodemodules angularcoresrclinkercompilerdts error find name promise nodemodules angularcoresrclinkercompilerdts error find name promise nodemodules angularcoresrclinkercompilerdts error find name promise nodemodules angularcoresrclinkercomponentresolverdts error find name promise nodemodules angularcoresrclinkerdynamiccomponentloaderdts error find name promise nodemodules angularcoresrclinkerdynamiccomponentloaderdts error find name promise nodemodules angularcoresrclinkerdynamiccomponentloaderdts error find name promise nodemodules angularcoresrclinkerdynamiccomponentloaderdts error find name promise nodemodules angularcoresrclinkerngmodulefactoryloaderdts error find name promise nodemodules angularcoresrclinkersystemjsngmodulefactoryloaderdts error find name promise nodemodules angularcoresrclinkersystemjscomponentresolverdts error find name promise nodemodules angularcoresrclinkersystemjscomponentresolverdts error find name promise nodemodules angularplatformbrowserdynamicindexdts error find name promise nodemodules angularplatformbrowserdynamicindexdts error find name promise nodemodules angularplatformbrowserdynamicindexdts error find name promise nodemodules angularplatformbrowserdynamicsrcfacadelangdts error find name map nodemodules angularplatformbrowserdynamicsrcfacadelangdts error find name set nodemodules angularplatformbrowserdynamicsrcfacadelangdts error find name map nodemodules angularplatformbrowsersrcdomdomadapterdts error find name map nodemodules angularplatformbrowsersrcdomdomrendererdts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name mapconstructor nodemodules angularplatformbrowsersrcfacadecollectiondts error find name setconstructor nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name map nodemodules angularplatformbrowsersrcfacadecollectiondts error find name set nodemodules angularplatformbrowsersrcfacadecollectiondts error find name set nodemodules angularplatformbrowsersrcfacadecollectiondts error find name set nodemodules angularplatformbrowsersrcfacadelangdts error find name map nodemodules angularplatformbrowsersrcfacadelangdts error find name set nodemodules angularplatformbrowsersrcfacadelangdts error find name map nodemodules angularplatformbrowsersrcwebworkerssharedclientmessagebrokerdts error find name promise nodemodules angularplatformbrowsersrcwebworkerssharedclientmessagebrokerdts error find name promise nodemodules angularplatformbrowsersrcwebworkerssharedservicemessagebrokerdts error find name promise nodemodules angularplatformbrowsersrcwebworkersworkerlocationprovidersdts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm start npm err node npm err npm npm err code elifecycle npm err start npm err exit status npm err npm err failed start script tsc amp amp concurrently npm run tsc w npm run lite npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err tsc amp amp concurrently npm run tsc w npm run lite npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err angular version browser chrome version language typescript", "num": "11024", "d": "8/2016"}, {"title": "parameters available component target", "body": "submitting check one x current behavior using parametrized route targets component component access parameters expecteddesired behavior might necessary read parameters components reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point consider following route configuration export const routes routerconfig path confirmation hashid component confirmationcomponent canactivate authguard consider following code part confirmationcomponent use code component hashid wo nt available necessary read locationpath extract hashid value expected behavior although understand targeted component confirmationcomponent sometimes components might need access parameters explicitly written url motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "11023", "d": "8/2016"}, {"title": "feature request rendering nested component root parent component", "body": "want component inside component inside couple components looks kinda like would like placed body even possible instead still able pass data class handle emitted events class goal nice stateless modal component nt ugly api want simply css html layers rendering works wanted absolutely position parent components would position set would screwed parent components wanted modal would screwed existing solutions none portal looks like could something like project abandoned b ca nt quite achieve want want experience seamless end user possible nt want querying shenanigans portal requires nt want define new host element want appended host instead providing host render want provide portal render imagine would work sure possibilities imagine could work structural directive something like default would appended root component could pass ref parent component want append sure could get ref mainly interested appending root anyway cc pkozlowskiopensource", "num": "11020", "d": "8/2016"}, {"title": "angular angularcli errors ng serve", "body": "submitting check one x error default sampleappnodemodules find name dateconstructor error default sampleappnodemodules find name string sampleappnodemodules find name object error default sampleappnodemodules find name date error default sampleappnodemodules find name map error default sampleappnodemodules find name regexp current behavior able generate ngfactoryts files ng serve get errors sure might missing something expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "11017", "d": "8/2016"}, {"title": "error xhr implementation provided", "body": "submitting check one x current behaviour compiler receives module component throws next error error thrown use decorator expecteddesired behaviuor compiler able compile properly reproduction problem see behaviour plunkr expected behaviour compiler able compile properly motivation use case changing behavior load components dynamically apps please tell us environment node version typescript version angular version browser language typescript", "num": "11015", "d": "8/2016"}, {"title": "request fix deprecate package npm", "body": "developers still installing nt deprecation warning link explaining difference time rc versions less also warning", "num": "11014", "d": "8/2016"}, {"title": "bug testing whenstable template driven forms working expected autodetectchanges needed", "body": "submitting check one x current behavior testing template driven forms work using however template driven form like test ts describe welcomecomponent gt beforeeach gt testbedconfiguretestingmodule imports formsmodule declarations welcomecomponent describe two way forms gt fit create controls automatically done gt fixtureautodetectchanges true fixturewhenstable gt fixturedetectchanges let form fixturecomponentinstancengformform expect formget title valid tobefalsy read property valid null done test crashes read property valid null chance get test passing without adding expecteddesired behavior able make test pass without adding autodetectchanges true also reason situation nt want autodetectchanges could default current behaviour almost cost day trial error one forum idea fact autodetectchanges needed quite sure people run get frustrated got test work reproduction problem motivation use case changing behavior able test components without add please tell us environment angular version browser language", "num": "11012", "d": "8/2016"}, {"title": "viewchildren query abstract base class run dynamically creating component", "body": "submitting current behavior directive use lot application works via service scoped component viewchildren query pull instances directive component make easier created abstract base class containing service setup afterviewinit using viewchildren query also abstract class works fantastically except components create dynamically using componentfactoryresolver viewcontainerref viewchildren query nt populated afterviewinit remaining undefined replacing abstract class direct implementation dynamically created components works base class approach works normally generated components nt see base class approach nt work dynamic components expecteddesired behavior either viewchildren query always work via base class nt depend component comes router parent component dynamically created reproduction problem rather complex setup largeish app would take setup plunker try requested expected behavior see motivation use case changing behavior consistency please tell us environment angular version browser chrome language typescript", "num": "11011", "d": "8/2016"}, {"title": "forms templatedriven validating type email", "body": "submitting check one x current behavior angular considering input type check validity expecteddesired behavior consider type validation rule reproduction problem input two validation rules one required type email angular considering first one example plunkr expected behavior validate rules please tell us environment angular version browser chrome language typescript", "num": "11010", "d": "8/2016"}, {"title": "route children redirect issue", "body": "submitting current behavior children route redirects another route level throws exception expecteddesired behavior redirection expected children element reproduction problem trying redirect children route level produces error change route loaded expected click router link enderecamento gon na produce error redirection plnkr redirection routerlink plnkr please tell us environment angular version angular router browser", "num": "11008", "d": "8/2016"}, {"title": "nested dynamic components break componentfactoryresolver viewchildren", "body": "submitting check one x current behavior trying render nested dynamic components via componentfactoryresolver receive exceptionerror message expression changed checked previous value cdinitvalue current value null seems like view created parent children dirty checked created change detection hook expecteddesired behavior render nested dynamic controls worked introduction componentfactoryresolver reproduction problem plunkr recreating issue duplicate except solution provided work viewchildren works viewchild expected behavior able render control via componentfactoryresolver turn also renders multiple controls via componentfactoryresolver motivation use case changing behavior used work please tell us environment angular version browser language", "num": "11007", "d": "8/2016"}, {"title": "method get current route object", "body": "hi want create breadcrumbs menu using routerconfig current route need get current route object routerconfig see using solution solve breadcrumbs menu items nt see method angular provide current route object routerconfig thank hard work angular", "num": "11006", "d": "8/2016"}, {"title": "unable get property add undefined ngclass", "body": "submitting current behavior using ngclass svg element throws error internet explorer unable get property add undefined expecteddesired behavior using ngclass svg throw error internet explorer reproduction problem example import component ngmodule ngclass angularcore import browsermodule angularplatformbrowser component selector myapp template export class app constructor thisname release candidate get svgclass return test ngmodule imports browsermodule declarations app bootstrap app export class appmodule demo expected behavior expected behavior css class applied svg element motivation use case changing behavior na please tell us environment angular version browser ie language typescript", "num": "11005", "d": "8/2016"}, {"title": "router routernavigate fails routerlink works", "body": "x bug report feature request support request current behavior parent component child components load loadchildren parent child child module router try navigating programaticaly using routernavigate get error match routes use routerlink works module router looks like export const routing routermoduleforchild path component path loadchildren pathtomodule please tell us environment angular version angular router version browser chrome language typescript xx", "num": "11004", "d": "8/2016"}, {"title": "unable capture scroll position ngondestroy", "body": "submitting current behavior checking scroll position ngondestroy always returns expecteddesired behavior return scroll position reproduction problem check console scroll position clicking button switching menu expected behavior return scroll position motivation use case changing behavior would like save scroll position component destroyed please tell us environment angular version browser chrome language typescript", "num": "11003", "d": "8/2016"}, {"title": "router import error import like mentioned documentation", "body": "import router mention documentation like import routes routermodule angularrouter gives error", "num": "11002", "d": "8/2016"}, {"title": "angular working browsers ipad air iphone", "body": "current behavior showing loading application used work browsers iphone ipad expecteddesired behavior work used please tell us environment angular version browser ios xx safari device iphone ipad air", "num": "11000", "d": "8/2016"}, {"title": "event emitter reset forms", "body": "submitting check one x current behavior forms one subscribe ngsubmit able perform actions result equivalent resetting form expecteddesired behavior would handy ngreset eventemitter could notify subscribers act resetting form reproduction problem expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript xx", "num": "10999", "d": "8/2016"}, {"title": "compiler providers coming bootstrapmodule override default compile providers", "body": "symptom nt work jit ca nt override default compile providers sample bootstrap provide tokens compilerts works correctly", "num": "10995", "d": "8/2016"}, {"title": "resolve feature modules dynamic loading", "body": "submitting check one x current behavior way load feature modules demand without using router expecteddesired behavior using ngmodule able load module demand like example thismodulefactory modulefactoryresolverresolvemodulefactory hellomodule similar done component thiscomponentfactory componentfactoryresolverresolvecomponentfactory hellocomponent reproduction problem plunker dynamically load components achieve functionality using ngmodule expected behavior expect able load modules dynamically way set required modules provider section motivation use case changing behavior large enterprise application multiple components business entity dependencies components wrapped module able resolve module like components lazy load module could explicitly set dependencies components using directive declaration meant loading dynamically parent component would ensure dependencies component automatically resolved please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10993", "d": "8/2016"}, {"title": "upgradeadapter read property injector null", "body": "submitting check one x current behavior unhandled promise rejection typeerror read property injector null getting error trying inject downgraded service service except works inject controller b service use injectorget timeout error happens gt modulerefinjectorget injector runs moduleref gets assigned bootstrapmodulewithzone expecteddesired behavior downgraded service available injection immediately reproduction problem expected behavior prints hello ng service angular version final browser language typescript amp systemjs iife", "num": "10992", "d": "8/2016"}, {"title": "returning false hostlistener stop propagation event listeners host", "body": "following directive following component inside app component clicked clickhandler directives triggers expected foo method inside app triggers also since returning false hostlistener click event inside app propagate pass event hostlistener call stoppropagation click event host fire expected see plunker", "num": "10990", "d": "8/2016"}, {"title": "router fails reuse loaded component parameters change lazyloaded routes", "body": "submitting check one x current behavior navigating route uses component type currently loaded eg router fails reuse component instance route lazyloaded instead component destroyed new instance created expecteddesired behavior already loaded instance reused according docs default router reuses component instance renavigates component type without visiting different component first parameters change reuse reproduction problem open plunker trigger navigation clicking button notice time component reinitialized action cause effect expected behavior component instance reused accordance docs motivation use case changing behavior behavior comply docs inefficient destroy component rebuild please tell us environment angular version browser language typescript", "num": "10987", "d": "8/2016"}, {"title": "testing components isolation", "body": "submitting check one x current behavior order test components isolation test tests going individual mocked providers ideally test would declarations needed test earlier versions angular trivial components separately listing componentdirectivepipe dependencies test compiledused necessary components new changes testing framework using provided code tests become unreasonable declare components needed test manually trace dependency tree component make sure components added hand test module use list components used module component recompiled every test takes several seconds per test recompile component reusing providers components tests global mess question expecteddesired behavior way used work could test components isolation dependencies custom providers without manually building dependency tree", "num": "10984", "d": "8/2016"}, {"title": "directives used one module", "body": "submitting check one x current behavior directives used one module example main ngmodule import mydirective mydirective ngmodule imports declarations mydirective need use mydirective another module provides general purpose functionality declare directive module get error error type mydirective part declarations modules hand try use directive without declaring second module directive undefined expecteddesired behavior way define directive top level module lower level modules use directive declare modules error nt declare second module undefined reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior allow directive shared modules motivation use case changing behavior general purpose directive need able use one module please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "10982", "d": "8/2016"}, {"title": "lazy load auxilary", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior multiple modules triggered aux routing always create fake component operate first route please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10981", "d": "8/2016"}, {"title": "link live example min quickstart missing", "body": "link live example minute quickstart nt appear see try try loads sample app displays simple message error console typeerror object nt support property method includes isdoc compile angular typescript selected top seems minor made us think first perhaps still supported", "num": "10979", "d": "8/2016"}, {"title": "importing feature module nt correctly import directives", "body": "submitting check one x current behavior creating directive declaring declarations section feature module nt make directive available feature module imported app module works remove feature module import add directive app module declarations directly expecteddesired behavior declare directive feature module import feature module app module allow use directive reproduction problem plunker available featuredirectivets contains directiveselector prints featuredirective instantiated directive instantiated featuremodulets feature module adds featuredirective declarations appts outputs simple html uses directiveselector running plunker stands outputs nothing console log comment featuredirective featuremodulets uncomment featuredirective appts run directive instantiated featuredirective instantiated outputted console log note leave featuredirective declared modules get error directive defined twice see feature module expected behavior expected featuredirective instantiated outputted featuredirective declared featuremodulets motivation use case changing behavior na please tell us environment plunker angular version browser chrome language typescript", "num": "10978", "d": "8/2016"}, {"title": "angularrouter component throws error creation removed outlet navigation", "body": "submitting check one x current behavior component throws error creation router nt destroy next navigation attempt reproduction problem plunkr click link view looks like look like please tell us environment angular version browser language typescript", "num": "10977", "d": "8/2016"}, {"title": "feature request configure dynamic basehref bootstrap", "body": "submitting current behavior html head expecteddesired behavior set base href bootstrap runtime motivation use case changing behavior angular projects problems able change base href bootstrap runtime please tell us environment angular version browser language", "num": "10976", "d": "8/2016"}, {"title": "angularforms read property validate null aot compiled app", "body": "submitting check one x current behavior normalizevalidatorts checks undefined default values controls null results error reproduction problem error happen jit app precompiled router used plunkr precompiled via versions used please tell us environment angular version language typescript", "num": "10975", "d": "8/2016"}, {"title": "datepipe nt format date safari", "body": "submitting check one x current behavior using safari datepipe format date correctly formatting minutes seconds made plunker recreates bug bug might related chrome correct safari wrong also throws following exception trying transform date manually component constructor error recreated uncommenting line file plunker example expecteddesired behavior format time correct reproduction problem bug reproduced safari plunker expected behavior date show minutes seconds choosing format motivation use case changing behavior please tell us environment angular version browser safari ios safari ios uiwebview ios wkwebview language", "num": "10974", "d": "8/2016"}, {"title": "twice import service file ngmodule file component file", "body": "submitting check one x current behavior use service needed import ts file ngmodule ts file component expecteddesired behavior injecting service component must enough realize service must took ngmodule", "num": "10973", "d": "8/2016"}, {"title": "unable mock http response invoked service constructor", "body": "got following code injectable export class attributetypesservice constructor private http thisgetitems public getitems consolelog get items consolelog got http response consolelog value following test describe products service gt beforeeach gt testbedconfiguretestingmodule providers describe suite gt test inject attributetypesservice mockbackend fakeasync service mockbackend gt mockbackendconnectionssubscribe c gt consolelog backend hit let response responseoptions cmockrespond new response new responseoptions status body blablablabla current behavior output test expected behavior expecting following output see method invoked twice one test one constructor logging twice unfornatelly touching mockbackend called directly test angular version browser language typescript", "num": "10972", "d": "8/2016"}, {"title": "rxjs updated gives error mapping", "body": "recently updated version rxjs packages map work tried like others error looks like import rx rxjs import http import injectable import observable rxjsobservable import rxjsaddobservablefrom import rxjsaddoperatormap injectable export class apiservice constructor private http get onnext json gt void gt responsejson subscribe onnext package json looks like part also realised updated bundles folder changed also also left thought might visual studio download full library however tried also downloaded files find anything rxjs changelog changes would appreciated help", "num": "10970", "d": "8/2016"}, {"title": "possibly incorrect example docs webpack component relative paths", "body": "docs mentions using stylescomponents however example given makes use require statements import component angularcore import publiccssstylescss component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent looks like example wrong yes", "num": "10968", "d": "8/2016"}, {"title": "aot compiler writes private field referenced another class", "body": "submitting check one x current behavior viewquery one component another aot compiler produces code private field child component referenced generated code view query causes typescript compilation error generated code compiled viewchildren childcomponent cards querylist produces something like viewparentcomponent nestedview gt return nestedview gt private causes compilation error expecteddesired behavior compilation errors angular version language typescript", "num": "10967", "d": "8/2016"}, {"title": "changes detected setinterval update turns fontawesome cdn breaks angular databinding", "body": "x bug report gt search github similar issue pr submitting testing reasons constructor template test current behavior upon loading reloading page either displays value change ticks somtimes works intended updates value every tick sometimes displays initial value change seems random expecteddesired behavior display update value upon change reproduction problem official plunkerversion problem occur seems first thought issue even removing polyfillsts using webpack seem help anyone idea please tell us environment angular version browser language typescript", "num": "10966", "d": "8/2016"}, {"title": "undefined value app module", "body": "getting error starting application migrating found get found got thi error components thanks", "num": "10965", "d": "8/2016"}, {"title": "compiler read property transform undefined", "body": "submitting check one x current behavior trying integrate polymer component angular app provides cool templating feature table cells via structural directives interpolation works fine try use custom pipes get error beginning think something wrong directive implementation would ok pipes nt work common pipes work fine think bug angular well reproduction problem sample project json pipe works fine custom one throws exception please tell us environment angular version nt tested browser chrome language typescript", "num": "10964", "d": "8/2016"}, {"title": "location subscribe event fire routing", "body": "submitting check one x current behavior subscribe url change events via locationsubscribe event never fires navigate via routerlink clicks expecteddesired behavior event fire reproduction problem code root component contains routeroutlet expected behavior see location changed console log routing motivation use case changing behavior used angulartics please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "10963", "d": "8/2016"}, {"title": "docs viewchildren querylist ca nt used change data dirty checked", "body": "interacts bad manner change detection results exceptions dev mode broken behavior prod mode fundamental problem updated change detection occurred causes two errorprone effects bindings including take new values change detection causing throw changeafterchecked errors dev mode reproductionexample subscribers run change detection meaning anything change detected changes template cause changeafterchecked errors reproductionexample problems seem fairly serious anyone attempts use app encounter", "num": "10962", "d": "8/2016"}, {"title": "formreset reset formarray length", "body": "submitting check one x current behavior form using datadriven method use formreset controls getting cleared values controls formarray getting cleared amount controls nt inside formarray expecteddesired behavior expect formreset clear also formarray reset value amount reproduction problem plunker expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "10960", "d": "8/2016"}, {"title": "angular offline compiler documentation", "body": "since rc angular near final launch think right time add documentation offline compiler best practices though seems support available cli also blog posts offline compilation post explaining offline compilation process angular team best practices ways manual offline compilation would really helpful", "num": "10959", "d": "8/2016"}, {"title": "feat support ngmodules hierarchy sans lazy loading", "body": "submitting problem statement app ngmodule structure children child module defined routes current behavior modules imported routes flattened loaded whereas intented behavior loaded upon discussion gitter brandonroberts pointed design parentmodule imported modules shares context also one injector created parentmodule imports achive composition need lazy load three modules hierarchy maintained modules small fit loaded lazily hierarchy modules needed another alternative define routes load need import component inside child modules file add routes breaks module concepts components inside child modules public accessed outside module also addressable outside module components needs added short forcing internal implementations made public support routing defined parent module see expecteddesired behavior proposal support hierarchy modules defining child module routes conflicts context injector enable ngmodules children child imports parent module approach seems fit way angular provide helps creating ngmodule hierarchy routes composition motivation use case changing behavior enabling ngmodule children compose application ngmodule hierarchy without need lazy loading every module language typescript xx", "num": "10958", "d": "8/2016"}, {"title": "metadata collector provides metadata nonexported enums", "body": "appears appears appears causes error mentioned", "num": "10955", "d": "8/2016"}, {"title": "privatelyreferenced classes still emitted metadata", "body": "inside class transitioncheckstate exported despite class exported referenced public way may pose issues running ngc", "num": "10954", "d": "8/2016"}, {"title": "making cors post request using angular", "body": "scratching head regards sending post request using angular service running wish send post request server service running username passwd params server written golang also tried packet capturing using wireshark nt seem recognise post requests properly http type packets tcp packets thought something wrong current method url method post data jsonstringify username scopeusername passwd scopepasswd", "num": "10952", "d": "8/2016"}, {"title": "router activatedroute params acts weird browser backforward buttons", "body": "submitting check one x really nt know explain words created gifs show problem careful press browser buttons failed creating working plunker bug particular first gif correct behaviour uses code buttons see buttons changes page param correctly navigate back forward via buttons via browser buttons second gif ca nt navigate correctly using browser buttons second gif weird behaviour uses code buttons thisroute activatedroute thisrouter router nt use params example assume need use real params url angular version router browser chrome language typescript", "num": "10950", "d": "8/2016"}, {"title": "featurerequest checkbox amp radios support formbuilder", "body": "submitting check one x related issue angular material current behavior clear support array values radios checkboxes expecteddesired behavior template component export class mycomponent implements oninit radiooptions radioinput new radioinput new radioinput new radioinput radioinput radioinput thisradiooptions checkboxoptions checkboxinput new checkboxinput new checkboxinput new checkboxinput checkboxinput checkboxinput thischeckboxoptions thischeckboxoptions constructor fb formbuilder thismyform fbgroup radio thisradioinput checkboxes thischeckboxinput case three radios second selected checkboxes first third checked motivation use case changing behavior moment work checkboxes something like template component opinion way smells using really simply whatever like subscribe etc angular version language typescript", "num": "10948", "d": "8/2016"}, {"title": "add support trim list ngmodule imports necessary minimum without runtime trialanderror", "body": "submitting check one x current behavior currently process converting app thinking without big bang landed first creating leaf components nt reference components declarations put entry components still automatically hoisted root module still work first level position starting next level conversions see modules imported entry needed modules actual toplevel module way figure imported modules actually needed members module entry module really expecteddesired behavior faster way remove module webpack browser refresh watch error window put back module cycle check actually needed angular version documentation help moment instead says stuff wo nt work soon wo nt tell wo nt tell convert go figure better fast", "num": "10945", "d": "8/2016"}, {"title": "precompile app ngc extending urlresolver", "body": "submitting x bug report current behavior extending urlresolver class angularcompiler module include version querystring order break caching new production builds trying precompile application ngc error thrown error ca nt find symbol componentindex exported module c inetpubreposcredentialingwebsrcnodemodules angularcompilersrcurlresolverdts remove extended class project compiler completes successfully expecteddesired behavior ngc compile successfully extending urlresolver class angularcompiler reproduction problem unable plunker since problem reproduced using cli tool please tell us environment angular version language typescript", "num": "10944", "d": "8/2016"}, {"title": "inject combination testbedcompilecomponents fails", "body": "submitting check one x current behavior noticed injecting services combination compileconfiguretestingmodule fails reproduce modified test juliemr test seed project import async inject testbed componentfixture angularcoretesting import component angularcore import bordercomponent appbordercomponent import userservice appuserservice component template directives bordercomponent class testcomponent describe greeting component gt beforeeach gt testbedconfiguretestingmodule declarations testcomponent providers userservice injecting fails create component async inject userservice service gt testbedcompilecomponents gt var fixture testbedcreatecomponent testcomponent fixturedetectchanges var compiled fixturedebugelementnativeelement remove test pass also seen result try error getting please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10943", "d": "8/2016"}, {"title": "router", "body": "bug report gt search github similar issue pr submitting authguard executed dashboardmodule authguard executed dashboardmodule angular version", "num": "10942", "d": "8/2016"}, {"title": "ca nt assignte imports type componentmetadatatype", "body": "import component oninit angularcore import todoservice todoservice import formsmodule angularforms component moduleid moduleid selector apptodos templateurl todoscomponenthtml styleurls todoscomponentcss imports formsmodule run server said", "num": "10941", "d": "8/2016"}, {"title": "add support query component templates use specific directivecomponent", "body": "submitting check one x current behavior directive exported module instead part component virtually impossible see component templates use directive might use could declared used instead find references searching component templates especially reexporting shared module orthogonality js modules search space easily grows large handle properly better memorized entire html expecteddesired behavior needs proper find references figure templates use directive instantiate component angular version", "num": "10940", "d": "8/2016"}, {"title": "reference documentation nt list extended classes implemented interfaces", "body": "submitting check one x first sorry submitting wrong project bug reference documentation nt know submit angulario somewhere else please forgive wrong place current behavior reference documentation nt mention superclass implemented interfaces classes making impossible find attributes methods actually available type understand examples listed reference doc tutorials without reading source code example documentation ngform example showing use attribute submit form attribute ngform way could find information reading source code discovering value field inherited class expecteddesired behavior reference documentation minimum display superclass implemented interfaces classes link would even better types attributes arguments return types way could link documentation type even better would list inherited members linking directly documentation superclass documentation short expect level usability javadoc example reproduction problem go try find ngform really attribute expected behavior able find information without read source code motivation use case changing behavior understand examples able discover attributes methods without reading source code please tell us environment angular version browser language typescript", "num": "10939", "d": "8/2016"}, {"title": "template render errors code blocks", "body": "submitting check one x current behaviour escaping code snippets nt stop containing code causing template rendering errors want able display code blocks template example get error expecteddesired behavior rather error would like display error message like reproduction problem see plunk uncomment snippet srcappts file template break application error message console please tell us environment angular version browser language", "num": "10938", "d": "8/2016"}, {"title": "ca nt set indeterminate state htmlinputelement type checkbox", "body": "submitting check one x current behavior ca nt set indeterminate state htmlinputelement type checkbox expecteddesired behavior want set indeterminate state checkbox via viewchild annotation reproduction problem somewhere ts method nothing happens expected behavior want get motivation use case changing behavior please tell us environment os x el capit\u00e1n angular version browser chrome language typescript xx", "num": "10937", "d": "8/2016"}, {"title": "feat router router must case insensitive router", "body": "submitting check one x current behavior router case sensitive define route path route navitage route get error like expecteddesired behavior router must case insensitive default resolve route route path reproduction problem used example plunkr routing amp navigation docs changed defining login route path login login link nt work motivation use case changing behavior defining routes application normally write url lower upper case applications must work please tell us environment angular version router browser language typescript", "num": "10935", "d": "8/2016"}, {"title": "angulario documentation candeactive incorrect example", "body": "api documentation router candeactive interface uses example canactivate interface page url something like", "num": "10934", "d": "8/2016"}, {"title": "angular lazy load error loading class module within bundle", "body": "hi using using lazy load bundle get routing import routes routermodule angularrouter const routes routes path redirectto main pathmatch full path modulea loadchildren moduleabundlejs export const routing routermoduleforroot routes module import ngmodule angularcore import routing modulearouting import moduleacomponent ngmodule imports routing declarations moduleacomponent export class moduleamodule also tried using default export module moduleamodule loadchildren name js bundle working since js ts seems find class name within bundle sure bug find anything related bundles documentation", "num": "10933", "d": "8/2016"}, {"title": "angular templates use dart syntax nonnull assertion operator", "body": "typescript lets dereference possiblynull value safely angular html template syntax required sad since expect users know typescript syntax dart cc rkirov", "num": "10932", "d": "8/2016"}, {"title": "hostlevel animations work ngc", "body": "noooooooooooooo", "num": "10931", "d": "8/2016"}, {"title": "router resolve guard throw exception observable emits error", "body": "submitting check one x current behavior resolve guard throw exception observable emits error wonder desired behavior think annoying expecteddesired behavior block navigation nt throw exception reproduction problem open console click admin see navigation nt complete expected throw exception plunker reason plunker nt work ie exception error uncaught promise problem herebrowserdomadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise problem resolvepromise zonedelegateinvoke objectoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask browserdomadapterlogerror unhandled promise rejection problem zone angular task promisethen value problem hereconsoleerror error uncaught promise problem consoleerror failed load resource server responded status found expected behavior throw exception please tell us environment windows chrome angular version browser chrome language typescript", "num": "10930", "d": "8/2016"}, {"title": "keep scroll position navigating back", "body": "submitting check one x current behavior navigating forward back scroll position lost expecteddesired behavior navigating extensive list items user scrolls list click item app activates next routecomponent shows product details user decides navigate back page scroll previous point reproduction problem live example step first adjust browser zoom heroes hero list disappear step scroll end page step click rubberman step click back button either browser component step page scrolled position stop expected behavior browser scroll previous position like happens nonsingle page application motivation use case changing behavior considered bug reduce level user experience please tell us environment angular version browser language typescript", "num": "10929", "d": "8/2016"}, {"title": "use formsmodule reactiveformsmodule feature module", "body": "submitting check one x one feature module two components one templatedriven form style another one reactive form style using formsmodule templatedriven reactiveformsmodule reactive form style validations whenever use feature module getting error formcontroldirective part declarations modules reactiveformsmodule formsmodule solve issue alternative used reactiveformdirectives part component directive also throwing similar error current behavior throwing error formcontroldirective part declarations modules reactiveformsmodule formsmodule expecteddesired behavior templatedriven form style reactive form style work feature module reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior templatedriven form style reactive form style work feature module motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "10925", "d": "8/2016"}, {"title": "exception using typescript gettersetter function together ngmodel reactiveformdirective", "body": "submitting check one x current behavior binding ngmodel gettersetter functions together reactiveformdirective problem occur binding formcontrolvalue local field expecteddesired behavior correct binding exception reproduction problem expected behavior exception please tell us environment angular version browser language typescript amp", "num": "10924", "d": "8/2016"}, {"title": "safenavigation operator event binding exception thisvisit isblank function", "body": "submitting check one x current behavior use safe navigation operator event binding expression compiler fails message thisvisit isblank function expecteddesired behavior safe navigation operator event expressions ok works fine rc reproduction problem use example component together template follows code even compile instead stack trace javascript console unhandled promise rejection thisvisit isblank function zone task promisethen value typeerror thisvisit isblank function asttoirvisitorconvertsafeaccess asttoirvisitorvisitsafemethodcall safemethodcallvisit astwithsourcevisit objectconvertcdstatementtoir compileeventlisteneraddaction expected behavior compile clicking button display clicked console motivation use case changing behavior na please tell us environment angular version browser language typescript", "num": "10923", "d": "8/2016"}, {"title": "ng life cycle methods working production mode use routernavigate", "body": "submitting x bug report gt search github similar issue pr submitting current behavior ng life cycle methods working production mode use routernavigate expecteddesired behavior ng life cycle methods work production mode use routernavigate reproduction problem hero list page navigating add hero page add hero adding would navigate back hero list page using code thisrouternavigate herolist herolist alias herolist page step getting blank page refresh data getting expected behavior navigate previous page load execute life cycle methods motivation use case changing behavior common feature work please tell us environment angular version browser chrome xx firefox xx ie xx safari xx language typescript xx", "num": "10922", "d": "8/2016"}, {"title": "ng life cycle methods working production mode use routernavigate", "body": "life cycle methods like ngoninit ngondestroy steps reproduce hero list page navigating add hero page add hero adding would navigate back hero list page using code thisrouternavigate herolist herolist alias herolist page step getting blank page refresh data getting npm version app type typescript", "num": "10921", "d": "8/2016"}, {"title": "ngsubmit event returns null submit", "body": "submitting check one x current behavior html onsubmit event event always null expecteddesired behavior onsubmit event getting enter event reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10920", "d": "8/2016"}, {"title": "formarrayname exported directivesreactivedirectivesformgroupname", "body": "submitting check one x current behavior formarrayname exported instead formarrayname actually exported expecteddesired behavior expected behavior formarrayname exported please tell us environment angular version forms", "num": "10918", "d": "8/2016"}, {"title": "specifying routes feature module imports weird", "body": "submitting check one x current behavior feature module contains information needs declared property documentation property mentions use cases pointing inside module something supposed used outside component surrounding router feels weird entirely counterintuitive also need decide module level whether entrypoint module expecteddesired behavior dedicated properly typed property routing information also router job correctly gather information setup necessary providers different levels angular version", "num": "10917", "d": "8/2016"}, {"title": "use browser bootstrap import browsermodule", "body": "submitting check one x current behavior faq import goes lengths describe entry module import modules must import hand bootstrapping application already says run browser expecteddesired behavior stuff part call either nt see developer specify multiple times running browser note nt affect need declare removed imports component needing needs import without distinction entry point components angular version browser", "num": "10916", "d": "8/2016"}, {"title": "nt detect changes http returned modified variable", "body": "submitting check one x current behavior updating ui http returned updated variable nt invoke detectchangeinternal expecteddesired behavior detech change update ui throws error startup reproduction problem quite able make example yet trying upgrade real experimental project beta rc however debugging days comparing project modified official example found difference js lib version including zonejs systemjs reflectmetadata rxjs zones different calling moduledobootstrap official example mine official slightly modified example project please note name zone stack trace different well example shows called zonewrap official one scheduletask example shows lot systempolyfills app bootstrapped zone call detectchangeinternal attached onleave angular zone reason project nt get updated guess might something wrong initializing steps still hunting maybe guys knows better anyway think throw error zone angular tries bootstrap app cost days check source code component routing service changing subscribe promise entity async comparing version js libs nothing wrong luck finally dig put break points everywhere inside zonejs ps expected behavior make work official example least throws error warn developer initialization something wrong motivation use case changing behavior cost days frustrate lot please tell us environment angular version browser chrome edge language compiled typescript update project call applicationreftick moduledobootstrap angular zone official example nt causes still unclear anyone give advice tips debugging big thanks update thank information provided thing ruins whole thing library official example beta left somewhere project anyway quite worthwhile throw exception shows warning zone becomes trying startup quite possible user leave something unexpected corner nt notice something wrong order plus adding check nt hard adding much overhead", "num": "10915", "d": "8/2016"}, {"title": "access component custom validator", "body": "note duplication stackoverflow question asked weeks ago without answer nt know related bug desired behavior find answer stackoverflow thought place left find one writing custom validator custom form component right inject dependencies custom validator services need access within validator informations stored component trying inject component validator class work maybe missing something di look plunker open everything work fine uncomment everything validator constructor like check log output see di failed resolve second parameter idea thanks lot", "num": "10914", "d": "8/2016"}, {"title": "using formmodule gives old forms module warning", "body": "using version like described official guide use method disappeared still get warning message complaining old module exact warning using typescript happens chrome vivaldi firefox", "num": "10913", "d": "8/2016"}, {"title": "reopening issue angular angularrouter find name set map promise mapconstructor setconstructor", "body": "solved", "num": "10911", "d": "8/2016"}, {"title": "router locationpath old url component hooks updates tick", "body": "submitting check one x current behavior value remains old url component lifecycle hooks called tick value becomes current url told change arrived within last rcs expecteddesired behavior expect become new url least time navigation complete components dom reproduction problem please tell us environment angular version browser language", "num": "10909", "d": "8/2016"}, {"title": "validate metadata produced angularangular", "body": "submitting check one x current behavior changes expression used metadata result compiler error metadata used aot compile without test failing expecteddesired behavior validate metadata annotations variables functions intended used constructing metadata produce error used statically", "num": "10907", "d": "8/2016"}, {"title": "ngmodule error loading entrycomponent transitively imported module", "body": "reproduction plunker hover button trigger error explanation bootstrapping imports imports declarations exports entrycomponents created dynamically using upon hover upon attempting hover create error thrown add import directly error stops occurring seems imply error check determine whether component already module graph already automatically adding current module backwards compatibility nowhere entire application component configuration property cc igorminar vsavkin", "num": "10904", "d": "8/2016"}, {"title": "add support scoped dependency injector without lazy loading", "body": "submitting check one x current behavior far understand current situation nonlazyloaded proper term yet modules hoisted entry could wrong paraphrasing documentation since injector uses stringified class name searching providers providers application must unique class name otherwise start hiding resolving one global scope instantiate wrong thing current application design component shows visualization component live data server meaning collection services connect server provide live data component well help component visualization component fed fake services contain constant data stage several possible visualizations lazyloaded shown sidebyside expecteddesired behavior part component tree naturally scoped quite narrowly able declare necessary service providers visualization component saw live data fake data depending instantiated component tree angular version issue misses point changes dependency injection great hate reading word documentation opportunity improve documentation otherwise new way dependency injection works wo nt scale large applications seemingly distinct modules sudden start breaking internal service part combined global scope", "num": "10901", "d": "8/2016"}, {"title": "angular regression forms controlvalueaccessor", "body": "submitting current behavior provide custom value accessors without specifying attribute try get fatal error expecteddesired behavior able define custom value accessors without need add happened previous versions reproduction problem go remove attribute app fail even appropriate controlvalueaccessor provided please tell us environment angular version browser language typescript", "num": "10897", "d": "8/2016"}, {"title": "routerlink outside link tabindex property", "body": "submitting check one x current behavior use routerlink directive element link element may focusable expecteddesired behavior like ngaria make automatically html element routerlink focusable add tabindex defined already developer reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser language", "num": "10895", "d": "8/2016"}, {"title": "error using http get headers options angular", "body": "submitting check one x current behavior getting error call headers example error exception error uncaught promise typeerror null object evaluating thisbodytostring pass empty body requestoptions code works fine example expecteddesired behavior code work without need pass empty body think makes sense get operations package dependencies thanks", "num": "10894", "d": "8/2016"}, {"title": "docs basicsarchitecturedirectives include link developer guideattribute directives", "body": "submitting check one x directives section basicsarchitecture describes structural attribute directives examples gives builtins nt say anything writing custom directives varieties fortunately nice chapter tucked away different section docs implementing custom attribute directive think helpful link context", "num": "10893", "d": "8/2016"}, {"title": "angular angularrouter find name set map promise mapconstructor setconstructor", "body": "submitting environment angular version language typescript npm version typings version issue single loc approutingts giving following compile error approutingts project files packagejson tsconfigjson typingsjson trying different ways like targeting could nt get working appreciate help", "num": "10891", "d": "8/2016"}, {"title": "would like formcontrol also event pristinetoucheduntouchedvalid valuechanges statuschanges", "body": "submitting check one x current behavior formcontrol nt observable subscribe one following changed pristinetoucheduntouchedvalid well okay valid want include others statuschanges tells valid invalid fires valid changes need know touched changed expecteddesired behavior either observable every one one combines fctouchedchangessubscribe x gt stuff motivation use case changing behavior reason want making little form components sending formcontrol input one nt want lot logic component html would like avoid showwarning could set subscription component looking pristinetouched etc angular version", "num": "10887", "d": "8/2016"}, {"title": "ca nt include static json content part template html", "body": "include json content part template html getting template parsing errors like use json content heavily current angular application inject locale content used directive html text labels template parse errors unexpected character eof unescaped template use escape ex page template html use custom directive transcluded json content custom directive template html internally get transcluded json content vmcontent variable use directive template trying research upgrading application version getting template parsing errors trying include json content like options support feature allow us override add support template parser ignore json content like error message specifies need escape char escape complex json content structure would time consuming looking options available", "num": "10886", "d": "8/2016"}, {"title": "https calls set contenttype applicationjson fail normalization added header", "body": "submitting current behavior calls set contenttype applicationjson fail message error occurs last line function thisbody null change made introduced behavior changing contenttype contenttype header although header values supposed caseinsensitive seems case practice application calls fail early enough nothing appears chrome network tab work around changing nodemodules angular return argument sustainable solution expecteddesired behavior https calls headers succeed reproduction problem nt know reproduce problem plunker prerequisite able make call nt know plunker able reproduce locally following appcomponent replacing url needed typescript constructor http const config requestoptionsargs headers new headers configheadersappend contenttype applicationjson expected behavior https calls headers succeed motivation use case changing behavior able define contenttype json calls please tell us environment angular version browser chrome firefox language typescript", "num": "10885", "d": "8/2016"}, {"title": "party library change detection", "body": "bug report x feature request support request current behavior change detection triggered every event party library expecteddesired behavior somehow silence party librariescomponents would trigger change detection every event reproduction problem zooming moving around would triggers change detection events per second even worse use mouseover event motivation use case changing behavior application speed please tell us environment angular version browser language typescript", "num": "10883", "d": "8/2016"}, {"title": "unable create child injector appmoduleinjector", "body": "submitting check one x current behavior injecting injector instance service got reflectiveinjector instance allowing create child injector using resolveandcreatechild updating injecting injector get appmoduleinjector instance nt allow creating child instance resolveandcreatechild nt exist nt find documentation though expecteddesired behavior getting subclass reflectiveinjector another way create child appmoduleinjector would great please tell us environment angular version browser language typescript beta", "num": "10882", "d": "8/2016"}, {"title": "traceur error using ngmodule inside", "body": "simply updating application without changing code works yet try change bootstrap use recieve following error stripped project basic version could think like mins quickstart error persists first guess properly mapping traceur yet went mins quickstart node modules code references could find traceur angular causing error order fix requesting using", "num": "10881", "d": "8/2016"}, {"title": "find module angularrouter", "body": "followed guid get error message visual studio code find module angularrouter", "num": "10880", "d": "8/2016"}, {"title": "application stopped working migrated", "body": "running application stopped working migrated using following bootstrap statement upgradeadapterbootstrap documentbody myattapp strictdi true error description error typeerror read property injector null objecteval objecti invoke n objecti invoke n objectinstantiate object evaluating error loading originalerr typeerror read property injector null stack message typeerror read property injector error loading typeerror read property injector objecteval objecti n objecti n objectinstantiate object evaluating error loading typeerror read property injector nullmessage read property injector null stack get stack function native code set stack function native code proto errorstack get stack function native code set stack function native code", "num": "10879", "d": "8/2016"}, {"title": "custom input value accessor form control unspecified name attribute", "body": "please stackoverflow link contains codes issue", "num": "10878", "d": "8/2016"}, {"title": "router lazy loaded module loaded even route activate guard rejects", "body": "submitting check one x current behavior even lazy route definition rejects route router still loads module expecteddesired behavior load module rejects reproduction problem try go heroes see guard routes please tell us environment angular version browser language", "num": "10877", "d": "8/2016"}, {"title": "typeerror thislocationiscurrentpathequalto function", "body": "mentioned upgraded still getting error angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade please let know working solution", "num": "10876", "d": "8/2016"}, {"title": "angular angular hybrid application noprovidererror", "body": "legacy application written angular want add new components written angular problems component homets import component angularcore import translateservice translateloader translatestaticloader translatepipe import http angular component selector home providers translateservice templateurl homehtml export class home homehtml home component welcome angular seed appsystem translate maints import ngmodule forwardref angularcore import upgradeadapter angularupgrade import home homehome import translatemodule translateservice import browsermodule angularplatformbrowser import httpmodule angular declare let angular const upgradeadapter new upgradeadapter forwardref gt const app angularmodule app appdirective home home ngmodule declarations home imports browsermodule translatemoduleforroot providers translateservice bootstrap home class upgradeadapterbootstrap documentdocumentelement app see following error using latest version angular tried put code cloned angular github works nt hybrid application anyone help problem", "num": "10875", "d": "8/2016"}, {"title": "ca nt get right type data router resolve", "body": "submitting check one x current behavior service method method return type object resolve method js injectable export class meetupdetailresolve implements resolve lt meetup gt constructor private ms meetupservice private router router resolve router activatedroutesnapshot observable lt gt promise lt gt consolelog resolve method new date gettime let id routerparams id return thismsgetmeetupdetail id subscribe meetup gt consolelog router resolve new date gettime consolelog meetup debugger meetup debugger return meetup else thisrouternavigate meetuplist return false got right type component init comes problem int method type expecteddesired behavior return right type data expected behavior method get data please tell us environment angular version angularrouter version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10874", "d": "8/2016"}, {"title": "final version publish", "body": "ngmodule new concept big changed reconstructed app ngmodule makes program complex thinking really need complex structure hope find balance powerful easy use", "num": "10871", "d": "8/2016"}, {"title": "improve component autodeclaration router compiler", "body": "seems bug compiler overly greedy components automatically declares consider following imports routes used setup path points delcared attempt compile code aot jit get error component declared myappmodule nt automatically declared compiler reproducing plunkr cc vsavkin", "num": "10862", "d": "8/2016"}, {"title": "compilercompilecomponentasync", "body": "submitting check one x current behavior trying load component dynamically via compilercompilecomponentasync load providers defined module thus ends provider helloservice error example expecteddesired behavior compilecomponentasync load dependencies declared module file know works define provides attribute component metadata thought would responsibility defined module", "num": "10860", "d": "8/2016"}, {"title": "style animation use value component attribute", "body": "submitting expecteddesired behavior style animation use value component attribute like pass function style dynamic value motivation use case changing behavior component handle like unpredictable height animate play offsetheight somethings else please tell us environment angular version browser language", "num": "10859", "d": "8/2016"}, {"title": "reflectmetadata shim required using class decorators ngc", "body": "ngc uses files binaries run required load currently get error subject", "num": "10857", "d": "8/2016"}, {"title": "add firstchild lastchild classes ngfor", "body": "submitting check one x current behavior right renders list data dom elements expecteddesired behavior suggesting first element rendered firstchild class last lastchild class motivation use case changing behavior would make styling lists easier angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10856", "d": "8/2016"}, {"title": "support operator angular template expressions", "body": "updated description rkirov reopening issue modifying proposal take away back compat might coming js type aot users get strictnullchecks type errors foobar templates first approach try foo bar pure typescript end propose support emitted aot elided jit mode old description closed bug submitting check one x current behavior present angular provides useful postfix property access operator template language called elvis operator shortcircuits usual exception triggered one attempts access property value like typescript provides new nonnull assertion operator functions analogously except postfix operator expecteddesired behavior eliminate confusion syntax typescript angular templates elvis operator angular templates use bang question mark alternative could also discussed would change postfix nonnull assertion operator typescript bang question mark obviously angular team charge motivation use case changing behavior expect angular introduce much new syntax causes proactive interference fact team done fantastic job balancing competing interests respect think especially true typescript considering close coupling two projects really want spend next five years explaining junior developers typescript uses bang angular uses question mark nonnull property access please tell us environment angular version browser language typescript", "num": "10855", "d": "8/2016"}, {"title": "using", "body": "submitting check one x current behavior receiving error expecteddesired behavior receive error reproduction problem given component called selector property called component called references binds write unit test create instance override provider get error remove call longer get error sample unit test code please tell us environment angular version browser chrome language typescript", "num": "10854", "d": "8/2016"}, {"title": "selector regression", "body": "submitting check one x current behavior selectors worked previously breaking expecteddesired behavior selectors work css previous versions cause errors reproduction problem components one selector divfeed another selector subscriptionlist div get one component error previously would work expected updated subscriptionlist div corresponding templates subscriptionlist divchildsubscriptionlistitem fixed problem chrome amp firefox however still fails edge subscription list divs recognized bound component fails nonnative property specified bound template one component expected behavior errors components bind elements motivation use case changing behavior breaking change selectors work consistently according specs please tell us environment angular version browser chrome firefox edge language", "num": "10853", "d": "8/2016"}, {"title": "model driven form binding broken manually updating form values", "body": "following form defined html corresponding component definition looks like following export class userdetailscomponent public form formgroup public userdetails userdetails constructor private formbuilder formbuilder ngoninit thisform thisformbuildergroup firstname lastname email updateformvalues method called result getting user details web api backend service manually update form control value show user details database also set validators updated form values validator present ngoninit method updating form values control state invalid change value three inputs change reflected formcontrols always return value set updatevalue method looks like two way data binding broken call updatevalue form controll manually using angular rc version suggestions solutions problem", "num": "10852", "d": "8/2016"}, {"title": "little tour heroes mistakes", "body": "submitting check one x current behavior following tour heroes found points application crashes expected work according instructions example routing select hero heroescomponent says refresh browser select hero dashboard app navigate directly hero details application crashed nt kept console error something hero declared myherodetail necessary remove template de tags worked http first appmodulests sample makes reference herosearchcomponent imagine declared later import herosearchcomponent herosearchcomponent declarations section final version file removed http heroservicets new constructor revised getheroes sample invites add constructor constructor private http invites import import rxjsaddoperatortopromise crashing application evaluating error loading seen console far see new version heroservicets http imported adding import http angular heroservicets works expecteddesired behavior would great yo could revise chapters avoid errors lead application crash mark text indicating whether application could tested would great newbies sure error due mistake following instructions mistake provoked tutorial reproduction problem expected behavior motivation use case changing behavior improving learning experience tutorial please tell us environment angular version browser firefox language typescript xx", "num": "10851", "d": "8/2016"}, {"title": "component correct name overrules selector", "body": "submitting check one x current behavior component named overrules component since expecteddesired behavior template parser consider components selector reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior sigh motivation use case changing behavior sigh please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx application component couple properties still declared components using component template throws set breakpoint throw statement observe variables fix problem things become seemingly unrelated removing router config component nt even declared", "num": "10850", "d": "8/2016"}, {"title": "tour heroes quick start fails multiple users", "body": "found issues tour heroes quick start example current behavior upon successfully running application system shared url friends surprise type name search box friends get see well trying point components perhaps behaving like singletons bounded variables getting shared across check image two side side browsers expecteddesired behavior expect us able search favorite heroes must see user typing reproduction problem try running tour heroes application using npm start open two browsers choose one incognito mode well observe issue environment browser used chrome nt try browser language typescript", "num": "10849", "d": "8/2016"}, {"title": "", "body": "submitting check one x current behavior ngmodule constructor calls two times loading module lazy using loadchildren active route different ngmodule active route constructor invoked single time expecteddesired behavior single time loading compiling please tell us environment angular version browser chrome language typescript", "num": "10848", "d": "8/2016"}, {"title": "error uncaught promise typeerror thislocationiscurrentpathequalto function", "body": "per mentioned issue upgraded still getting error angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade error uncaught promise typeerror thislocationiscurrentpathequalto function please let know solution", "num": "10847", "d": "8/2016"}, {"title": "animations multipleconfigurable void states", "body": "submitting current behavior currently one void state used define element style element enters leaves stage possible use case question bugs implement animation behavior provide different gt void animations depending user action issueing route change example user click button called left issue route change click want current component element translate slide left click button called right want element slide right desired behavior maybe possibility configure state element transitions unloaded currently state defined void state could configured dynamically would possible define multiple void states eg voidleft voidright comparison use case stated could accessed depending user action leaving current route maybe kind desired behavior could extended void state element appearing eg voidinleft voidinright base idea void state could stay currently customized necessary similar use cases one mentioned environment angular version", "num": "10846", "d": "8/2016"}, {"title": "activate child activate operational order", "body": "current behavior canactivate guard child component called canactivatechild guard parent routerconfig canactivate canactivatechild check guards array routerts expecteddesired behavior feel parent guard called prevent transition child guard called motivation use case changing behavior specific use case parent route want get validate set tenant use child components services want check user authenticate child routes big issue authguard depends tenant set tenantguard parent route generically though feel makes logical sense parent guard checked child guard checked happy fix update tests pull request happy order swap please tell us environment angular version browser language typescript", "num": "10845", "d": "8/2016"}, {"title": "error typeerror function", "body": "hello following error console remove code error vanish away appcomponentts code import component angularcore import routerdirectives router routes angularrouter import navbarcomponent componentsnavbarnavbarcomponent import jumbotroncomponent componentsjumbotronjumbotroncomponent import homecomponent componentspageshomecomponent import aboutcomponent componentspagesaboutcomponent component selector myapp template directives navbarcomponent jumbotroncomponent homecomponent aboutcomponent routerdirectives routes path component homecomponent path component aboutcomponent export class appcomponent constructor private router router maints code import bootstrap angularplatformbrowserdynamic import appcomponent appcomponent import routerproviders angularrouter bootstrap appcomponent routerproviders help appreciated", "num": "10844", "d": "8/2016"}, {"title": "testing add static class method", "body": "submitting check one x instance methods covered static methods almost rarely needed justifiably excluded method would handy static class method current behavior example testing service injected stuff could write expecteddesired behavior prefer write obvious discoverable code like chain method call static methods like method critical advantage inject optional services method ca nt throws exception reason teach method write tests like obviously critical feature always write discoverable would nice people expect static class method perhaps please tell us environment angular version browser language", "num": "10843", "d": "8/2016"}, {"title": "angular async validations formgroup", "body": "submitting current behavior currently async validations applied formgroups possible use case found problem tried make name field object created unique time name field unique within object order make happen need pass parent object id name field value child object rest service created formgroup parent object name child object create async validator formgroup instead create async validator formcontrol name pass parent object id validator desired behavior formgroup able async validator pass multiple values form validator environment angular version", "num": "10842", "d": "8/2016"}, {"title": "router reinitialize component params changed lazy loaded modules", "body": "submitting check one x current behavior routes defined lazily navigate component paramsquery params changed component reinitialized eg ngoninit called using lazy routes components reinitialized paramsquery params changed expected behaviour expecteddesired behavior routes defined lazily navigate component paramsquery params changed component reinitialized reproduction problem problem lazy routes open plunker go crisis center open console choose open latest item crisis center see component initialized console click change param button see component initialized console wrong behaviour see problems non lazy routes open plunker open console choose latest item list heros see component initialized console click change param button see component initialized console correct behaviour please tell us environment angular version browser language", "num": "10841", "d": "8/2016"}, {"title": "using ngmodule track componentlevel dependencies", "body": "submitting check one x use tool manage components dependencies ever upgrade use ngmodule lib help us tracking dependencies component level wonder update component pipe service directive could know components would affected exactly maybe track module dependencies would great ng team could provide official tool componentdependencies tracking", "num": "10840", "d": "8/2016"}, {"title": "interpolating expression shorthand ifelse return unexpected value", "body": "submitting check one x current behavior returns expecteddesired behavior return tested browser console please tell us environment angular version browser chrome mac osx language ts transpiled systemjs think", "num": "10839", "d": "8/2016"}, {"title": "make resolve results injectable constructor", "body": "first many thanks really great work angular love going thanks current behavior given component typescript component template require bookdetailhtml export class bookdetail implements oninit resolver typescript injectable export class bookdetailresolve implements resolve constructor private bookservice bookservice configuration router way book passed bookdetail done bookdetail implement oninit using nginit read book activatedroute expecteddesired behavior ideally would possible following code typescript component template require bookdetailhtml export class bookdetail words book described route returned bookdetailresolve injected directly constructor bookdetail removes code basically serves purpose since resolve guarantees arguments resolved prior initializing component code becomes predictable programming model much easier understand motivation use case changing behavior reduce code serves boilerplate strive towards cleaner easiertounderstand codebase angular version", "num": "10838", "d": "8/2016"}, {"title": "reflectiveproviderjs uncaught invalid provider instances provider type allowed got undefined", "body": "debug cyclic dependency way folders aligned cyclicdependency first indexts top second indexts top export shared export authloginauthlogincomponent files importing done directly via shared folder debug message think many would like know help highly appreciated", "num": "10835", "d": "8/2016"}, {"title": "hostlistener touchmove behave like hostlistener mousemove", "body": "submitting current behavior feature request inspired part behave like regards event propagation decorated callback function however underway original dom element initiated removed angular eg ngfor update events stop firing bad experience mobile users issue arises browser implementation touch spec touchevents actually continue fire dom removal targeted nodeelement original occurred nt bubble unlike mouseevents confusing userdeveloper cant perform simple expect work like dom removal changes touch event propagation since host event listener attached outer component element touchmove event never reaches host listener solution dynamically add event listeners eventtarget element touchstart event occur perform cleanup since angular framework take care browser quirks us least document company lost countless hours trying get bottom quirk like save others current workaroundhack typescript hostlistener touchstart event hostlistener mousedown event onstart event eventtouches touch thisremoveprevioustouchlisteners avoid mem leaks thistouchmovelistenfunc thisrendererlisten eventtarget touchmove e gt thisonmove e thistouchendlistenfunc thisrendererlisten eventtarget touchend e gt thisremoveprevioustouchlisteners thisonend e thistouchcancellistenfunc thisrendererlisten eventtarget touchcancel e gt thisremoveprevioustouchlisteners thisonend e hostlistener mousemove event hostlistener touchmove event nt declare added dynamically onmove event stuff event hostlistener mouseup event hostlistener touchend event nt use added dynamically hostlistener touchcancel event nt use added dynamically onend event stuff ngondestroy thisremoveprevioustouchlisteners removeprevioustouchlisteners thistouchmovelistenfunc null thistouchmovelistenfunc remove previous listener thistouchendlistenfunc null thistouchendlistenfunc remove previous listener thistouchcancellistenfunc null thistouchcancellistenfunc remove previous listener nt forget inject constructor import expecteddesired behavior hostlistener touchmove behave like hostlistener mousemove without requiring hacks angular framework responsible ensuring touchevents reach host listener mouseevents reproduction problem without workaround workaround expected behavior instructions shown plunker workaround touch dragging works expected motivation use case changing behavior easier mental model developers consistency touch mouse events framework hide browser quirks use case booking system drag appointment new day ngfor updates removes dom node see plunker please tell us environment angular version browser language reading", "num": "10834", "d": "8/2016"}, {"title": "quickstart systemjsconfigjs double slash problem", "body": "think little mistake systemjsconfigjs seen page look bundles old line new line leading results complete url makes trouble executing fat jar file sparkjava jetty problem executing eclipse problem executing war tomcat files unzipped could please verify need leading slash please", "num": "10828", "d": "8/2016"}, {"title": "router serializing fragment parts routerrunnavigate causing corrupted url", "body": "submitting check one x current behavior fragment serialized using url encoding causing corrputed payload unexpected navigation process occur without modification url expecteddesired behavior reproduction problem take sample run first route see parameters converted expected behavior url kept untouched navigation bootstrap course redirect actions excepted motivation use case changing behavior example relying parameters passed hash part auth callback request working angular version browser language", "num": "10827", "d": "8/2016"}, {"title": "router bug child routes", "body": "submitting check one x current behavior reported bug fixed using fix multichild routes nt seem work completely child links nt always navigate reproduction problem see steps reproduce issue inside plunker please tell us environment angular version browser chrome", "num": "10826", "d": "8/2016"}, {"title": "better exception message missing dependencies", "body": "submitting check one x current behavior testing dependency injection throws exception missing information like expecteddesired behavior developer would really like see dependency missing service reproduction problem implement test service component use jasminecreatespyobj instead real defined mock class forgot one mock dependencies expected behavior kind information like motivation use case changing behavior motivation understand explore testing mocked dependencies really works need see dependency really missing please tell us environment angular version browser chrome xx language typescript", "num": "10824", "d": "8/2016"}, {"title": "ngmodule better errors add module declarative", "body": "submitting check one x current behavior common mistake made even seasoned devs add module list b add declarative class componentdirectivepipe list current errors obscure horrible b always bad expecteddesired behavior better error b extend thought c adding providers declarations viceversa c might warning ca nt think reason provide component directive pipe please tell us environment angular version browser language", "num": "10823", "d": "8/2016"}, {"title": "test deprecated apis", "body": "current behavior api marked deprecated without demonstrating tests pass deprecated api removed expecteddesired behavior api deprecated tests rely deprecated feature required deprecated feature test fail recommendation create ci test test build run tests deprecated apis removed", "num": "10821", "d": "8/2016"}, {"title": "upgrade error unhandled promise rejection provider elementref", "body": "submitting check one x current behavior project built electron recently upgraded nothing else changed making npm modules breaking change breaks app already commented code related elementref still got following error message error happened rendering indexhtml file var pjson require packagejson documenttitle pjsonname loading please tell us environment angular version browser chromium language typescript", "num": "10817", "d": "8/2016"}, {"title": "ngmodel works incorrectly using onpush changedetection strategy", "body": "submitting current behavior two components first one simple child component input basic support directive via interface second one parent component change detection strategy populates value child component via directive right marked changes via class updated child component still displays old value template component object actual value target property see ngmodel directive updates target component asynchronously following scenario occurs change detection executes parent component change detection updates ngmodel value ngmodel schedules async task updates child component change detection executes child component actual value arrives child component expecteddesired behavior change detection work already updated component ensure new value populated ui looks like last two steps swapped even better ngmodel update child component synchronously reproduction problem tiny example issue expecting right seconds app component display new value new example found thanks andreialecu use following markup example instead work expected please tell us environment angular version browser chrome language typescript", "num": "10816", "d": "8/2016"}, {"title": "getting attempted assign readonly property safari", "body": "im currently finishing angular see wierd behaviour safari cant explain working el captian safari get fair amount errors error exception typeerror attempted assign readonly property error stacktrace error setproperty setelementproperty detectchangesinternal detectchanges detectcontentchildrenchanges detectchangesinternal detectchanges detectcontentchildrenchanges detectchangesinternal detectchanges detectcontentchildrenchanges detectchangesinternal detectchanges detectcontentchildrenchanges detectchangesinternal detectchanges detectviewchildrenchanges detectchangesinternal detectchanges detectviewchildrenchanges detectchangesinternal detectchanges detectchanges foreach native code tick invoke oninvoke invoke run runinner run tryorunsub next next next finalnext next next emit checkstable onleave oninvoke invoke runguarded runinnerguarded runguarded outsidehandler invoketask runtask invoke error typeerror attempted assign readonly property works fine browsers tested link test problem start hittin start check button", "num": "10815", "d": "8/2016"}, {"title": "routing children routes lazy routing recreates instance parent", "body": "submitting check one x current behavior router lazy route routes imported change url time created new instance thing done without lazy routing works correctly instance created first time route starts prefix changing sufix create new parent component remove lazy routing change routing module everything ok expecteddesired behavior creating routed components behave exactly way independently whether use lazy routing reproduction problem please tell us environment angular version browser language typescript", "num": "10814", "d": "8/2016"}, {"title": "provider radiocontrolregistry inn new forms lib", "body": "submitting check one x current behavior forms component uses elements strangely get exception ca nt reproduce behaviour plunker yet codebase bit big find cause problem far component hosting form calling different component actually rendering form elements based data model input element module init idea could cause finding registry provider expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point plunker difficult create far could reproduce simplistic component expected behavior forms lib rendering ok new version motivation use case changing behavior please tell us environment angular version forms browser language typescript", "num": "10813", "d": "8/2016"}, {"title": "compilercli ngfactory files huge make prone mangle", "body": "submitting check one x current behavior ngfactoryts files generated huge case total components code nt become much smaller minifymangle statements example component output component transcode amp mangle factory alone output one component expecteddesired behavior minify friendly output angular version", "num": "10812", "d": "8/2016"}, {"title": "error addproviders ca nt called injector already created test likely already used injector inject beforeeach current function", "body": "bug report trying create simple unittest luck took consideration breaking changes usage keeps throwing exception whenever try use function get errors however add function scope get code class mainconfigmock usemocks boolean true describe something gt beforeeach gt addproviders provide mainconfig useclass mainconfigmock also mentioned resolved thanks", "num": "10811", "d": "8/2016"}, {"title": "safe navigation aka elvis operator guarding null async", "body": "submitting current behavior could use safe navigationelvis operator guard nulls property paths using async pipe nt seem able inside template assuming observable var data id property data async id throws error typeerror read property id null expecteddesired behavior per reproduction problem working expected workingthrowing error expected behavior accessing properties currently null values throw error elvis operator would ideally guard error please tell us environment angular version browser language", "num": "10810", "d": "8/2016"}, {"title": "disscussion internationalization api issues", "body": "per vicb issue mostly summarize issues intlapi currently formatting pipes number date highly coupled intlapi api known issues top overview could aggregated following groups compatibility issues browsers browser limited support intlapi edge browser support safari issue easily resolved adding proper pollyphil point well informed possible documentation issue list compatibility issues issue formatting minutes second edge chakra implementation intlapi little bit strange reason allow developer format date single minute second required current implementation date pipe far know fixed simply adding polyphil issue safari mobile browser issues already closed regulary faced new version issue latest issue created days ago missed api requested feature could implemented upon standard intlapi require additional implementation could inconsistence intlapi list issues allow pass timezone parameter current implementation datepipe allow us implement basic time changing troubles displaying name specified time zone current intlapi allow us add milliseconds support exist intlapi rather simple implement displaying way one harm become inconsistence itnlapi symbols currencies exist standard intlapi contain common used symbols honorable mentions one clearly related intlapi still need mentioned right quite flexible locale point intlapi fine issue mostly aroung global locale setting angular app related one aggregation component right code internationalization angular system internationalization big difference even correlated right question stand intlapi consistence abondon intlapi start work implementation internationalization angular module become consistence standing intlapi lead feature loss since possible implement api implementing implementation pretty much like way main benefit full control api yet issues think integrate current app bundles requires additional work could implement part module fit current apps nicely", "num": "10809", "d": "8/2016"}, {"title": "dependency injection nested modules nt seem work", "body": "submitting check one x current behavior app module modules sub components ngdobootstrap main app module initialize shared services give created instance different sub components like myothermodule simple wrapper component uses declarations bootstrap bootstrap component component crashes says provider myservice expecteddesired behavior since component providers array look provider myservice module bootstrapped since module explicitly given provider myservice component get instance sharedservice asking myservice reproduction problem verbose example also listed stack please tell us environment macos el capitan angular version browser chrome language typescript tsc version", "num": "10808", "d": "8/2016"}, {"title": "load ngmodule div", "body": "hi way load ngmodule modulets div without navigate like routeview something like", "num": "10807", "d": "8/2016"}, {"title": "bug report http get body null typeerror read property tostring null", "body": "created http get request following code get following error line requestbodytext undefined causes error htttpget defined options object given params hope understand problem fix easily help find wrong google chrome angularcommon angularcompiler angularcore angularforms angularhttp angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade systemjs reflectmetadata rxjs zonejs", "num": "10806", "d": "8/2016"}, {"title": "bug report multiple components error nested routeroutlet", "body": "submitting check one x use official demo indexhtml custom component customherodetailcomponentts import component input angularcore import hero hero component selector customherodetail template export class customherodetailcomponent input hero string use customherodetail modify crisiscentercrisisdetailcomponentts modify heroesherodetailcomponentts amp declaration current behavior exception error uncaught promise template parse errors ca nt bind hero since nt known property customherodetail myherodetail angular component hero input verify part module myherodetail web component add customelementsschema ngmoduleschema component suppress message hero abcdefg crisis center crisiscentercomponent expecteddesired behavior know please tell us environment angular version browser chrome language typescript", "num": "10805", "d": "8/2016"}, {"title": "phantomjs render rc site render beta site", "body": "submitting check one x current behavior phantomjs render rc site render beta site expecteddesired behavior phantomjs render rc site properly important prerender cache crawlers testing reproduction problem maybe phantomjs problem filed ticket detail repro steps please tell us environment angular version browser phantomjs language typescript xx typescript", "num": "10804", "d": "8/2016"}, {"title": "setting properties component test autodetectchanges", "body": "currently change detection using autodetectchanges triggered way happens actual application event triggered however users might expect change detection happen even properties component test set directly provide behavior watching property set component test using javascript proxy actually triggering change detection autodetectchanges mode", "num": "10803", "d": "8/2016"}, {"title": "component names ngmodules", "body": "submitting check one x current behavior ngmodules component could pick components wishes use component name matter everything mixed together ngmodule isolate component name example using two third party components use name component modal cant isolate one expecteddesired behavior able isolate ngmodule component names maybe prefix used component name eg reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior isolation component names via ngmodules please tell us environment angular version browser language", "num": "10801", "d": "8/2016"}, {"title": "router serializing url prevent secondary routes work", "body": "submitting check one x current behavior ca nt navigate secondary routes expecteddesired behavior navigate secondary routes reproduction problem anchor like click get happens programmatically trigger navigation use works problem shown plunker expected behavior motivation use case changing behavior please tell us environment angular version browser tested chrome firefox language typescript", "num": "10800", "d": "8/2016"}, {"title": "doc live example links angular modules ngmodule document shown text ie", "body": "submitting check one x current behavior try live example text shown hyperlink expecteddesired behavior text link plunker reproduction problem ie open search try live example please tell us environment windows angular version browser ie", "num": "10799", "d": "8/2016"}, {"title": "ngrouteprovider behaviour", "body": "trying call spring mvc angular issue cache values ie ngview try form different view based route hit spring mvc time since hit db fetch results since caches view showing updated values db please advice hit controller using angular js triggering spring mvc controller first time called hit next time calling springmvc want set behaviour time call hit spring mvc controller value patientcontroller requestmapping savepatientdetails public modelandview savepatient model model httpservletrequest req mainroot root mainroot reqgetattribute root int resut patientserviceinsert root string message uploaded sucessfully resut message insertion failed reqsetattribute message message reqgetsession setattribute message message modelandview mv new modelandview mvaddobject message message mvsetviewname mainjsp var contextpath pagecontextrequestcontextpath var app angularmodule mainapp ngroute appcontroller ctrlmain function routeprovider routeprovider templateurl contextpath patientdetails controller patientcontroller templateurl contextpath getpatientdetailshtm insurancedetails controller patientcontroller templateurl contextpath getpatientinsurancedetailshtm diagnosisdetails controller patientcontroller action contextpath getpatientdiagnosisdetailshtm clientinfodetails controller patientcontroller action contextpath getclientinfohtm otherwise controller patientcontroller templateurl contextpath", "num": "10798", "d": "8/2016"}, {"title": "bug ngfor trackby", "body": "submitting check one x current behavior first parameter trackby function index array element array expecteddesired behavior first parameter trackby function element list index reproduction problem please tell us environment angular version browser language typescript", "num": "10796", "d": "8/2016"}, {"title": "feat routing consider merging canactivate canload", "body": "submitting check one x current behavior exposing less functionality implemented classes functions consider loginguard currently need implement two classes ts injectable export class loginguard implements canactivate constructor private loginservice loginservice private router router canactivate routesnapshot activatedroutesnapshot routersnapshot routerstatesnapshot observable boolean ts injectable export class logincanload implements canload constructor private loginservice loginservice private router router canload route route observable boolean thisloginserviceisloggedin let redirect encodeuri routepath thisrouternavigate login queryparams redirect redirect return false return true combination issue would useful merge attempts one possible use class motivation use case changing behavior able reuse functionality please tell us environment angular version browser language", "num": "10795", "d": "8/2016"}, {"title": "regression http contenttype enforces body", "body": "submitting current behavior header contenttype set body ca nt null expecteddesired behavior previously possible set contenttype header request post get without request payload ignored requestprototypegetbody ca nt case anymore fails motivation use case changing behavior would great support since simplifies client code avoid maintain multiple shared header sets request without body please tell us environment angular version browser tested chrome suspect affects ones language typescript note browsers", "num": "10793", "d": "8/2016"}, {"title": "aot compiler work windows", "body": "submitting check one x current behavior windows compiler emit file instead emits files ubuntu works expected expecteddesired behavior produce file please tell us environment windows professional nodejs angular version language typescript next", "num": "10792", "d": "8/2016"}, {"title": "router aot compilation fails using function loadchildren", "body": "submitting check one x current behavior order enable lazy loading webpack custom must implemented lazy load routes implemented example loader custom function used running provided repo error occurs comment line completes successfully uncomment line running bundle webpack app works desired lazy loading adds support using callback function cause aot compilation fail also error expecteddesired behavior providing callback function cause aot compilation fail used vanilla webpack bundling tool reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior webpack use callback function provide lazy loading returning promise please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10789", "d": "8/2016"}, {"title": "providerusevalue appears clone supplied value", "body": "submitting check one x first detected testing issue describes unexpected cloning behavior filipesilva reproduced plunker regular cloning behavior documented api see reproduction problem expected behavior expect inject value clone angular version browser language", "num": "10788", "d": "8/2016"}, {"title": "testing testbedtestmodule provide usevalue obj clones obj good tests fail", "body": "submitting check one x know seems impossible praying something incredibly obviously stupid component gets injected deep clone object scenario fixture testbedconfiguretestingmodule declarations welcomecomponent means changes test effect actually injected service reproduction problem expected behavior expect injected value provided please tell us environment angular version browser language", "num": "10787", "d": "8/2016"}, {"title": "request compiled template caching aot runtime", "body": "submitting check one x current behavior angular two compilers aot compilation component compiled template resolved statically component uses reads file url resolution depends file system path browser angular provides jit compilation components needed jit compilation problem component fetches resource url resolution depends base path difference processing even though component compiled phases expecteddesired behavior aot compilation templates resolved cached used jit compilation motivation use case changing behavior dynamic component creation aot want fetch template server create component dynamically relates please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10785", "d": "8/2016"}, {"title": "type ngselectoption part declarations modules internalformssharedmodule sharedmodule", "body": "getting error could find actual reason", "num": "10784", "d": "8/2016"}, {"title": "service provided appmodule behaving singleton", "body": "submitting check one x current behavior using service provided root module however module gets loaded router asynchronously seems access expecteddesired behavior service provided root module accessible whole application single instance reproduction problem open plunker notice imported part main notice service array main open bootstrapped notice call register icons template used display icon view icon shown successfully nav bar open open crisis center view note template present however icon displayed crisis list view dom inspector browser dev tools shows angular parser nt even recognize angular component dom left exactly code expected behavior referring icon sprite behave throughout app motivation use case changing behavior behavior abide docs please tell us environment angular version browser firefox language typescript", "num": "10779", "d": "8/2016"}, {"title": "safari wo nt render template problems zonejs", "body": "safari browser wo nt render template throw errors seems something goes wrong chrome works fine safari error log attached errorsinzonetxt", "num": "10778", "d": "8/2016"}, {"title": "virtual scroll using dom recycling tombstones scroll anchoring", "body": "submitting check one x current behavior currently without material design using ngfor consumming lot memory become slow lot collection shown detect scrolldown scrollup add items collection dom poor website block expecteddesired behavior nice add new feature implement easy virtual scroll using dom recycling tombstones scroll anchoring like see google developers article thanks motivation use case changing behavior speed site like facebook twitter please tell us environment angular version browser chrome last date language typescript", "num": "10776", "d": "8/2016"}, {"title": "requestoptionsargs null body causes exception", "body": "submitting check one x current behavior causes exception pass empty string body work expecteddesired behavior null body requestoptionsargs nt cause exception since get requests often nt contain body reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10773", "d": "8/2016"}, {"title": "router services needing router service fail ondestroy implemented", "body": "submitting check one x current behavior services implement interface included root providers automatically instantiated service injects throws error expecteddesired behavior services injecting router implement interface instantiated without error reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx meenie vsavkin", "num": "10770", "d": "8/2016"}, {"title": "improve ngc", "body": "print cli args add error message translation file provided either file exist locale specified", "num": "10766", "d": "8/2016"}, {"title": "formatting pipes fail safari", "body": "submitting check one x current behavior using nearly formatting pipe including percent causes angular fail safari due missing safari ios also implicated example template always raises uncaught exception safari angular templates stop rendered point expecteddesired behavior angular formatting pipes raise uncaught exceptions safari reproduction problem bug reproduced opening following plnkr safari bug also reproduced using default build install current using add following template expected behavior go motivation use case changing behavior going would good please tell us environment angular version browser safari ios safari language typescript related issue related discussion", "num": "10764", "d": "8/2016"}, {"title": "nested dynamic components break componentfactoryresolver", "body": "submitting check one x current behavior trying render nested dynamic components via componentfactoryresolver receive exceptionerror message expression changed checked previous value cdinitvalue current value null seems like view created parent children dirty checked created change detection hook expecteddesired behavior render nested dynamic controls worked introduction componentfactoryresolver see reproduction problem plunkr recreating issue expected behavior able render control via componentfactoryresolver turn also renders multiple controls via componentfactoryresolver use case rendering form wizard made several dynamic components one dynamic components pulling fields defined database render set user controlled fields motivation use case changing behavior used work please tell us environment angular version browser language", "num": "10762", "d": "8/2016"}, {"title": "componentfactoryresolver aware components compiled via testbed", "body": "internal map containing factories components compiled however testbed compiles components declared factories stored testbed internal modulewithcomponentfactories factories never made known tests use resolver create component declared test module fail workaround simply create real declare test components import test module cc tbosch igorminar", "num": "10760", "d": "8/2016"}, {"title": "router aot compiler errors routerlinkactiveoptions", "body": "submitting check one x current behavior using compile template contains compiler throws error expecteddesired behavior input nt cause compiler error reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10755", "d": "8/2016"}, {"title": "loadchildren routermoduleforroot nt respect folder app", "body": "submitting check one x current behavior using ngmodule routermoduleforroot need specify fullpath children module systemjsconfigts approutests import routermodule angularrouter export const routing routermoduleforroot path loadchildren scriptstesttestmodule pathmatch full path admin loadchildren scriptsadminadminmodule usehash true tried platform still looking instead approutesjs compiled js located inside directory expecteddesired behavior angular look directly please tell us environment angular version browser language", "num": "10750", "d": "8/2016"}, {"title": "angular routing working serving content spring", "body": "submitting check one x current behavior build simple multi page application using compile bundle application using webpack take files dist folder move spring boot static folder application works fine served user npm start served static resources spring routing seems working note spring related problem application working inside spring uses works perfectly fine true servers like wamp moving files dist folder wamp bring application believe way routing works problem everything perfectly works served using npm expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10748", "d": "8/2016"}, {"title": "metadata contains errors function used", "body": "contains function allowed definition appidrandomprovider cc mhevery", "num": "10747", "d": "8/2016"}, {"title": "unification imports declares providers using single attribute eg imports ngmodule", "body": "submitting check one x current behavior developer needs think three different options imports declares providers deciding put related code expecteddesired behavior use single attribute eg imports simplify way things imported module framework smart enough detect runtime type imported entry required reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior simplify less code think less code write less code maintain please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "10746", "d": "8/2016"}, {"title": "create onthefly test component wrapper testing components", "body": "submitting feature request check one x current behavior currently testing component need manually create new component testing inputs set template pretty verbose difficult test templates optional bindings various input parameters example expecteddesired behavior instead would nice testbed create onthefly test wrapper component pass component template using component set bindings template consider something along lines motivation use case changing behavior concise testing easier test different template bindings please tell us environment angular version browser language", "num": "10743", "d": "8/2016"}, {"title": "http get contenttype json empty body exception", "body": "submitting check one x current behavior sending http get headers causes exception expecteddesired behavior exception content contenttype set nt cause exception ambiguous angular version browser language", "num": "10738", "d": "8/2016"}, {"title": "still animate nested elements correctly persistent problem", "body": "submitting persistent problem animations nested elements current behavior problem reported resolved commit true problem still exists plunker demo outermost div contains another inner div buttons allow expand collapse individually steps show expand outer inner continue collapsing outer finally expand outer expecteddesired behavior expanding animation outermost div respect full content including inner div available actual moment reproduction problem plunker please tell us environment angular version browser language", "num": "10737", "d": "8/2016"}, {"title": "issue either router form module", "body": "current behavior button inside form click goes redirected please tell us environment angular version browser chrome latest version language typescript", "num": "10736", "d": "8/2016"}, {"title": "component factory found error using componentfactoryresolver ngmodule", "body": "submitting check one x current behavior typescript component selector factorycomponent template export class factorycomponent constructor private viewcontainerref viewcontainerref private resolver componentfactoryresolver line err add factorycomponent metadataresolverjs finds cmpmetaentrycomponents one element undefined results error angular code breaks boostraping reproduction plunker nt use ngmodule confusing comments mine nt show use ngmodule componentfactoryresolver fail continually referenced solution nothing solves issue way expecteddesired behavior ability use ngmodule componentfactoryresolver create components dynamically via reflection runtime please tell us environment angular version browser chrome firefox language typescript tsc", "num": "10735", "d": "8/2016"}, {"title": "improve error message provider x contain requester name", "body": "submitting check one x current behavior refactoring large project ngmodules point got error used many places app split several ngmodules finding needle haystack expecteddesired behavior would helped lot error printed componentservice requested reproduction problem plunkr typescript import platformbrowserdynamic angularplatformbrowserdynamic import component angularcore import ngmodule component injectable angularcore import browsermodule angularplatformbrowser class myservice component selector mycomponent template mycomponent class mycomponent error mycomponent could nt resolve myservice mentioned exception constructor myservice myservice component selector myapp template myapp class appcomponent ngmodule imports browsermodule providers declarations appcomponent mycomponent bootstrap appcomponent class appmodule platformbrowserdynamic bootstrapmodule appmodule current error message error message would nice angular version", "num": "10734", "d": "8/2016"}, {"title": "formbuilder seems trigger fallback message old forms lib", "body": "submitting check one x current behavior inject formbuilder component trigger message looks like using old forms module optin next rc expecteddesired behavior formbuilder fallback old deprecated forms library reproduction problem look debug console edge chrome see highlighted message motivation use case changing behavior make sure components use new forms library please tell us environment angular version browser language typescript", "num": "10733", "d": "8/2016"}, {"title": "function", "body": "submitting check one x current behavior upgraded amp getting error maints modulets amp componentts maints import locationstrategy hashlocationstrategy angularcommon import platformbrowserdynamic angularplatformbrowserdynamic import httpproviders angular import enableprodmode angularcore import approuterproviders appapproutes import appmodule appappmodule enableprodmode platformbrowserdynamic bootstrapmodule appmodule httpproviders approuterproviders provide locationstrategy useclass hashlocationstrategy catch err gt consoleerror err module import ngmodule angularcore import browsermodule angularplatformbrowser import app app ngmodule declarations app imports browsermodule bootstrap app export class appmodule component import component angularcore import router activatedroute routerdirectives event navigationend navigationstart angularrouter declare let ga function component selector app pipes providers directives routerdirectives styles string require templateurl export class app constructor public router router ga create thisanalyticscode cookiedomain none please tell us environment angular version browser", "num": "10732", "d": "8/2016"}, {"title": "ca nt use method generate route paths compilercli", "body": "submitting check one x current behavior typescript export const generateroute function route string params object string return decodeuricomponent routinggenerate route params substr export const routes routes path generateroute firstaction component myfirstaction path generateroute secondaction arg arg component mysecondaction error generateroute generates route name defined backend api locale route name differ static required create seperate builds locale expecteddesired behavior nt require path known compile cli generate custom router given routes", "num": "10731", "d": "8/2016"}, {"title": "rename ngmodule container", "body": "submitting check one x current behavior seems potential friction caused confusion ngmodules modules commonjs modules commonjs modules fit taxonomy purpose module ngmodules quite different seems two main purposes ngmodules ability group components services pipes together make code reuse easier allow dependency components services pipes defined isolation without side effects ngmodules looking item would appear feature fits concept modules two items together appears overall purpose inversion control container reality side effect said sure container best name feature maybe kernel many ioc containers would call feature kernel understand ngmodule might best name feature want start conversation motivation use case changing behavior reduce friction caused confusion please tell us environment angular version browser language", "num": "10729", "d": "8/2016"}, {"title": "fix automatically stringify json objects http requests introduces hard diagnose problem", "body": "submitting check one x current behavior function run every request api interact expects json data function sets header every request never problem though probably commit application crash cryptic error requests suspect angular sees contenttype header tries serialize body course null request expecteddesired behavior clearer error message check serialization avoid error altogether would great reproduction problem details stackoverflow board basic steps set header make request body data eg request expected behavior make error message specific skip stringifying altogether request body empty motivation use case changing behavior everything going big application tough isolate problem error thrown line code even function sets header message generic says nothing http json fixed easily little cost addressed please tell us environment angular version browser firefox language typescript", "num": "10728", "d": "8/2016"}, {"title": "provide mock service using testbed", "body": "submitting check one x current behavior testbed providers looks dependencies original service although mocked service none sometimes running test get test module uses component dummyrestapicomponent using templateurl never compiled please call testbedcompilecomponents test although calling testbedcompilecomponents expecteddesired behavior addproviders used mock without looking dependencies reduces knowledge component test knows service reproduction problem vs old way need configuration service test using testing angular version using karma jasmine angular cli language typescript", "num": "10727", "d": "8/2016"}, {"title": "bug router auxroutes working emptypath toplevel routes", "body": "submitting check one x current behavior auxroutes found using two levels default routes config works open tasksoverview see plnkr click list open aux want extract whole tasksfunctionality need able something like would assume configs equivalent normal routing works perfectly fine link leads see plnkr expecteddesired behavior auxroutes also work emptypath parents reproduction problem working version nonworking version expected behavior versions route definition lead behavior motivation use case changing behavior current implementation impossible create encapsulated config module tasks behaviour include certain path main config eg mytasks cc vsavkin please tell us environment angular version browser language ts", "num": "10726", "d": "8/2016"}, {"title": "data bound value radio button breaks chrome", "body": "x bug report current behavior using radio buttons bound value either value mystring value mystring click multiple times chrome ngmodel switches actual bound value expecteddesired behavior clicking radio button multiple times nt change value change time reproduction problem angular version browser observed chrome works fine firefox language typescript", "num": "10725", "d": "8/2016"}, {"title": "ngupgrade original exception type tooltipcontainercomponent part declarations modules appmodule constructor", "body": "submitting check one x current behavior using ngupgrade tooltip tooltip plugins getting error without using ngupgrade works fine maybe ngupgrade creating another module adding already declared components using ngmodule mdtooltip expecteddesired behavior errors able use components third parties please tell us environment angular version browser language typescript systemjs", "num": "10723", "d": "8/2016"}, {"title": "feature request add styledeepurls property decorator component", "body": "component moduleid moduleid selector chat templateurl chathtml appversion styleurls chatspecifictohostcss appversion styledeepurls chatglobalcss appversion possible another array pass styles want inject children annoying write deep every css selector styles example want able styles chatglobalcss children chatcomponent", "num": "10722", "d": "8/2016"}, {"title": "httpget gt thisbody null", "body": "submitting check one x current behavior set header perform get request course non sense done get error firefox chrome caused method calling getbody looks contenttype call method text tries convert string body null get requests expecteddesired behavior fail even non sense probably return null empty string reproduction problem please tell us environment angular version browser language typescript", "num": "10721", "d": "8/2016"}, {"title": "nt want angular router see path separators separate route segments", "body": "route address parameter contain string code routes address get exception matching routes suppose considers different route segments hence throws exception need single param route number segments random url without string replacement way let angular know anything single param using versions", "num": "10720", "d": "8/2016"}, {"title": "urlsearchparams custom queryencoder work", "body": "submitting check one x urlsearchparams custom queryencoder work call still uses default queryencoder seems requestoptionsmerge function replace custom queryencoder default one", "num": "10719", "d": "8/2016"}, {"title": "wrongly encoding urlsearchparams value contains", "body": "submitting check one x current behavior queryencoder encode expecteddesired behavior queryencoder encode please tell us environment angular version browser language", "num": "10718", "d": "8/2016"}, {"title": "fix automatically stringify json objects http requests introduces hard diagnose problem", "body": "upgraded http request code working since beta stopped figured think could save devs lot heartache lines code function run every request api interact expects json data function sets header every request never problem though probably commit application crash cryptic error requests suspect angular sees contenttype header tries serialize body course null request clearer error message check serialization would great everything going big application tough isolate problem error thrown line code sets header message generic says nothing http json details stackoverflow board", "num": "10717", "d": "8/2016"}, {"title": "unable use reactiveformdirectives multiple modules", "body": "submitting check one x current behavior using reactive forms modules fails error expecteddesired behavior work reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point see forked lazy load example minor addition app component crisis detail component try create formgroup formcontrol crisis detail loaded click crisis center fails error maybe documentation shows correctly nt found tried various combinations includingnot including things modules components nt hit combination works based documentation seen looks like bug expected behavior nt fail motivation use case changing behavior able use reactive forms please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "10716", "d": "8/2016"}, {"title": "ngmodule better error message error invalid provider got object object", "body": "submitting check one x got error know error find fortunately app small started top eventually came see error answer belongs current behavior mysterious error clue offending thing tell something providers expecteddesired behavior indication file problem class would really nice could say something reproduction problem pick app eg sample angular modules chapter find feature module move give someone else ask person find bug please tell us environment angular version browser language ts", "num": "10714", "d": "8/2016"}, {"title": "testbedcompilecomponents give error called twice", "body": "currently error try something like error instead silently ignores overrides fail good error message", "num": "10712", "d": "8/2016"}, {"title": "using ngform myformreset effect submitted property", "body": "using ngform calling formreset reset submitted false expecteddesired behavior form property submitted reset motivation use case changing behavior ways access submitted reset reset properties form using disabled myformsubmitted submit button request returns data want form available choose using myformreset effect submitted property angular version windows chrome", "num": "10709", "d": "8/2016"}, {"title": "redirectto steals back button", "body": "submitting check one x current behavior coming outside application another web site example route using redirectto hash mode least redirect happens using back button nt work anymore redirect goes previous route redirects example config ngbootstrap const routes routes path pathmatch full redirectto home path home component defaultcomponent path gettingstarted component gettingstarted path components redirectto componentsaccordion path componentsaccordion component ngbdaccordion export const routing routermoduleforroot routes usehash true expecteddesired behavior user able use back button go back reproduction problem go uses routing configuration redirected clicking back button go back redirect angular version browser language", "num": "10706", "d": "8/2016"}, {"title": "routerlinkactive activating used different tag routerlink used", "body": "submitting check one x current behavior routerlinkactive activating added element used different tag routerlink used navigating parent component example works html page one page two nt html page one page two expecteddesired behavior would expect routerlinkactive work tags since frameworks like bootstrap style tag active etc reproduction problem motivation use case changing behavior cue user screen want please tell us environment angular version angularrouter browser osx el capital chrome language typescript", "num": "10704", "d": "8/2016"}, {"title": "lazy loaded modules nt preserve instance", "body": "submitting check one x current behavior time navigate links components crisiscentermodule get new instance expecteddesired behavior motivation use case changing behavior think multiform steps previous next ca nt save state step go step forced dump lazy loading entire module also would helpful able make routerlinkactive take account query params example boths link active please tell us environment angular version angularrouter nt thoroughly test seems like issue related browser language", "num": "10703", "d": "8/2016"}, {"title": "possible router bugunexpected behavior", "body": "submitting check one x current behavior recreated child navigation expecteddesired behavior nt recreated child navigation issue private app checked plunker angulario noticed issue well reproduction problem plunker taken angulario docs added displayed time got original plunker angulario please tell us environment angular version browser chrome", "num": "10702", "d": "8/2016"}, {"title": "route params non route component", "body": "submitting check one x current behavior approutests path hero component herocmp path hero id component herodetailcmp appcomponenthtml navigated hero id route tried get route params herodetailcmp like route instance everything ok try get route params root component returned empty object expected behavior expected get route params case heroid heroheader component way cause want highlight depended hero id angular version", "num": "10700", "d": "8/2016"}, {"title": "longer manually inject httpproviders module", "body": "ad since providers modules longer inject expecteddesired behavior used work need know functionality supported available still reproduction problem see code expected behavior hope get workaround feature used work motivation use case changing behavior able manually create injector please tell us environment windows angular version chrome os latest language typescript xx typescript", "num": "10699", "d": "8/2016"}, {"title": "app downgraded want use existing directive", "body": "submitting check one x current behavior angular application also library angular directives would like use angular directives angular application order looks like still downgrade angular application want run angular application use existing angular directives angular application let appcomponent appcomponent ngupgradeaddprovider http ngupgradeaddprovider httpproviders angularmodule app directive awmyapp appcomponent bootstrap hybrid mode ngupgradebootstrap documentbody app ready function ref upgradeadapterref let injector let appref globalcontextrootinjector apprefinjector globalcontextgetinstance expecteddesired behavior downgrading angular application order use angular directives want run angular application still use existing angular directives examples web documentation talk upgrade angular application incrementally scenario developed angular application also want leverage angular directives angular application question drawbacks downgrading angular application use angular directives downgrading affect performance application expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10698", "d": "8/2016"}, {"title": "typescript invalid lefthand side assignment expression", "body": "typescrit export class hero id number name string export class hero id number name string hero id name windstorm facing following issue appappcomponentts error unused label appappcomponentts error invalid lefthand side assignment expression npm debugtxt submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10697", "d": "8/2016"}, {"title": "changes operator async", "body": "submitting check one x previous behavior using following would work current behavior throws syntax work expected behavior original behavior seems intuitive especially checking since evaluate observable returned please tell us environment angular version browser chrome language typescript", "num": "10695", "d": "8/2016"}, {"title": "router routerlink treats root level secondary route matrix params", "body": "submitting check one x current behavior want deep link nested secondary aux route root component object treated matrix parameter expecteddesired behavior generate correct href nested secondary route root component reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx cc vsavkin", "num": "10694", "d": "8/2016"}, {"title": "migration fail", "body": "easy said backwards compatible said found differently tried exaclty migration doc said updated angular packages packagejson added simple module import ngmodule angularcore import browsermodule angularplatformbrowser import app appcomponent ngmodule declarations app imports browsermodule bootstrap app export class appmodule modified appts import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule supposedly needed backward compatibility would take care rest go got javascript errors console saying route provider updated approutes added router module added routes provider approutes import authguard authredirect authorizationauthorize import authservice authorizationauthservice import login loginlogin import passwordreset passwordresetpasswordreset import registeruser registeruserregisteruser import portalhome portalhomeportalhome import customerprofile customerprofilecustomerprofile import itemdetail itemdetailhomedetail import finditem finditemfindproperty import messagecenter messagecentermessagecenter import routes routermodule angularrouter export const routes routes path component login canactivate authredirect path login component login canactivate authredirect path pwdreset component passwordreset canactivate authredirect path register component registeruser canactivate authredirect path portalhome component portalhome canactivate authguard path customerprofile component customerprofile canactivate authguard path itemdetail itemid component itemdetail canactivate authguard path finditem component finditem canactivate authguard path messagecenter component messagecenter canactivate authguard export const routing routermoduleforroot routes update appmodule import routermodule angularrouter ngmodule declarations app imports browsermodule routermodule routing bootstrap app export class appmodule error app nt load next step add app components listed approutes declarations module still go added formsmodule imports module nope added services created app providers property module still app wo nt load good news errors kind reported idea problem really huge pet peeve mine app wo nt load yet errors", "num": "10693", "d": "8/2016"}, {"title": "http request empty body", "body": "submitting check one x current behavior right set contenttype header request leave body request empty throwing original exception typeerror read property tostring null even try make request expecteddesired behavior far know contenttype header empty request body perfectly valid request suppose correct behaviour execute request reproduction problem see wrong behaviour plnkr expected behavior expect able load application made request contenttype without body http module motivation use case changing behavior think perfectly valid http request nt see value make impossible http library please tell us environment angular version browser tried chromefirefoxsafari language typescript used plnkr provides default typescript plunk", "num": "10692", "d": "8/2016"}, {"title": "router replace history instead pushing", "body": "submitting check one x current behavior currently way use historyreplace within router expecteddesired behavior need introduce option router replace history instead pushing new motivation use case changing behaviour example im question list opening new modal new route adding new question go question view press back would like go instead please tell us environment angular version browser language", "num": "10691", "d": "8/2016"}, {"title": "giving applicationjson headers make fail restricted area", "body": "submitting check one x upgrading using give options access authrestricted area website current behavior uncaught exception error original exception typeerror read property tostring null original stacktrace typeerror read property tostring null requestbodytext requestgetbody observableeval subscribe observablesubscribe observablesubscribe mapoperatorcall observablesubscribe hospitalscomponentgethospitals hospitalscomponentngoninit error context object object expecteddesired behavior get observable call subscribe exception like one really hard time understand code failed upgrading strange remove call made extract data remove part think bug report please tell us environment angular version browser chrome language typescript last", "num": "10690", "d": "8/2016"}, {"title": "provide smoother way remove declaration testing module", "body": "cases like set testing module larger module exporting want mock declarations currently way remove declaration though make whole new module duplicate list eg ts lib ngmodule declarations b c e class mylibmodule test e want mock testbedconfiguretestingmodule declarations b c mockd e instead would nice able something like", "num": "10689", "d": "8/2016"}, {"title": "confusing usage children routes new router", "body": "submitting check one x current behavior correct wrong nt get first working nice second throws find primary outlet error expecteddesired behavior resolve sort routing motivation use case changing behavior maintenance readability please tell us environment angular version browser chrome language typescript", "num": "10686", "d": "8/2016"}, {"title": "testing testbed could offer method", "body": "submitting check one x current behavior new testbed designed replace testcomponentbuilder introduced looks like mistaken lost equivalent forcing us use expecteddesired behavior maybe could something like angular version", "num": "10685", "d": "8/2016"}, {"title": "routerlinkactive handle root routes properly", "body": "x bug report feature request support request gt please submit support request instead see current behavior two tabs web app initially enter page refresh hit url tabs inactive see screenshot code two tabs screenshot tried variations luck way got work add root route called home whenever root hit redirected home routerlinkactive tab would work expected would like use route expecteddesired behavior expect tab root link active motivation use case changing behavior would like use trigger routerlinkactive expected clutter url home route please tell us environment angular version browser language typescript", "num": "10684", "d": "8/2016"}, {"title": "page refresh loses current route using angula router", "body": "hello routes defined redirect root navigation works properly refreshing page route lost root called triggering redirect whatever url refresh current behavior route result redirect dashboard show schemalistcomponent route dashboard result show schemalistcomponent route users result show userlistcomponent route refresh users dashboard result refresh redirect dashboard show schemalistcomponent expecteddesired behavior route refresh dashboard result refresh show schemalistcomponent route refresh users result refresh show userlistcomponent reproduction problem import routes routermodule angularrouter import schemalistcomponent schemalistcomponent import userlistcomponent userlistcomponent const approutes routes path redirectto dashboard pathmatch full path dashboard component schemalistcomponent path users component userlistcomponent export const routing routermoduleforroot approutes usehash true expected behavior route currently used refresh motivation use case changing behavior please tell us environment angular version browser chrome language typescript xx", "num": "10683", "d": "8/2016"}, {"title": "rendering children components minified webpack p", "body": "submitting check one x current behavior executing webpack p existing project wo changes upgrading version number aka converting code use ngmodule child components get rendered webpack p works version also works webpack expecteddesired behavior expected minified code via webpack p would render components like angular version browser latest chrome language typescript generated vs", "num": "10682", "d": "8/2016"}, {"title": "multiple root components shared zone base module", "body": "submitting check one x current behavior nt spa ca nt go full spa right multiple root components placed dom typescript ngmodule imports browsermodule providers myservice export class basemodule ngdobootstrap applicationref applicationref const zone applicationrefzone platforminjector applicationrefinjector const platform platformbrowserdynamic platformbootstrapmodule basemodule expecteddesired behavior multiple root modules share one base injector zone nt override private properties call private methods maybe method reproduction problem plunkr motivation use case changing behavior everyone might want switch go full singlepageapp angular version", "num": "10681", "d": "8/2016"}, {"title": "router navigationendevents emitted guards cancel navigation", "body": "submitting check one x current behavior guard cancels attempt navigation router still fires navigationendevent subscribing navigationendevents router possible determine whether navigation actually happened expecteddesired behavior either cancelled navigation emit navigationend navigationendevent contain information whether navigation actually occured reproduction problem plnkr reproduce try navigating away view check console navigationendevents emitted router angular version", "num": "10680", "d": "8/2016"}, {"title": "compile directives added fly", "body": "submitting check one x current behavior directive component selector interfaces template child class interfacelist dosomething alert add drective interfaces fly questions compile angular version browser language typescript", "num": "10678", "d": "8/2016"}, {"title": "shared components issue", "body": "hi everyone upgraded application working fine also working fine modified latest root module method converted one section application using ngmodule approach module pulled using routing issue two components nav header used different components put part featured module get warning browser console declared two places appmodule catalogmodule even though explicitly declared appmodule research found automatically pulls declarations avoid breaking changes developers using previous versions added components explicitly appmodule root module removed catalogmodule feature module compilerbrowser errors components loaded route header nav simply missing components working belong appmodule anyone please shine light could wrong", "num": "10677", "d": "8/2016"}, {"title": "request body", "body": "submitting check one x bug report x feature request support request current behavior seeing get function receive request body expecteddesired behavior able send get request request body motivation use case changing behavior example wants filter server side want pass filter object params body please tell us environment angular version angular version browser language typescript xx", "num": "10676", "d": "8/2016"}, {"title": "template driven form select field resets change", "body": "submitting check one x current behavior select one multiple options model gets updated select field resets expecteddesired behavior selected options stay highlighted reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior user select options stay highlighted case since rc update motivation use case changing behavior ux please tell us environment angular version browser chrome latest language typescript", "num": "10675", "d": "8/2016"}, {"title": "bidirectional binding bannana box nt work outofthebox", "body": "submitting check one x current behavior bidirectional binding bannana box nt work outofthebox parentchild component child event emitter parent component property updated expecteddesired behavior avoid duplication binding attibutes reproduction problem parent template dont work parent template works child component please tell us environment angular version browser language", "num": "10674", "d": "8/2016"}, {"title": "problem combining ngmodule", "body": "first want say read document official website try simulate project failed code structure approutests import providerouter routerconfig routermodule angularrouter import wechatroutes wechatwechatroutes export const routes routerconfig wechatroutes path redirectto wechat export const approuting routermoduleforroot routes appmodulets import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent appcpn import routes approuting approutests import locationstrategy hashlocationstrategy angularcommon import wechatmodule wechatwechatmodule ngmodule imports browsermodule approuting declarations appcomponent providers provide locationstrategy useclass hashlocationstrategy bootstrap appcomponent export class appmodule appcpnts import component oninit angularcore import router routerdirectives angularrouter component selector app template export class appcomponent wechatmodulets import ngmodule angularcore import httpmodule angular import formsmodule angularforms import wechatcentercomponent wechatcentercpnt import wechatrouting wechatroutes import browsermodule angularplatformbrowser import autoreplycomponent autoreplyautoreplycpnt import autoreplyservice autoreplyautoreplysvc import chatcomponent chatchatcpnt import imagemessagedirective chatimagemessagedrt import followerservice followerfollowersvc import chatservice chatchatsvc import followercomponent followerfollowercpnt import menucomponent menumenucpnt ngmodule imports browsermodule formsmodule httpmodule wechatrouting declarations imagemessagedirective wechatcentercomponent menucomponent chatcomponent followercomponent autoreplycomponent providers autoreplyservice chatservice followerservice export class wechatmodule wechatroutests import routerconfig routermodule angularrouter import wechatcentercomponent wechatcentercpnt import chatcomponent chatchatcpntts import menucomponent menumenucpnt import autoreplycomponent autoreplyautoreplycpntts export const wechatroutes routerconfig path wechat component wechatcentercomponent children path chat component chatcomponent path menu component menucomponent path autoreply component autoreplycomponent path component autoreplycomponent export const wechatrouting routermoduleforchild wechatroutes wechatcentercpntts import component angularcore import routerdirectives angularrouter component selector wechatcenter template directives routerdirectives export class wechatcentercomponent confusing whether imports wechatmodule appmodule whether import nt work", "num": "10673", "d": "8/2016"}, {"title": "http request text nt manage case null body", "body": "submitting check one x current behavior making get request body results exception read property tostring null seems commit text function nt check causing failure falls null causing error expecteddesired behavior able send http get request request body reproduction problem far making http get request empty body reproduces issue expected behavior able send http get request request body angular version browser tested chrome safari language typescript", "num": "10672", "d": "8/2016"}, {"title": "unhandled promise rejection typeerror read property type null", "body": "submitting check one x current behavior met error running application migrating appmodulets almost examples ca nt get hint resolve problem unhandled promise rejection typeerror read property type null eval arrayforeach native gettransitivemodules compilemetadataresolvergettransitivengmodulemetadata compilemetadataresolvergetngmodulemetadata runtimecompilercompilecomponents runtimecompilercompilemoduleandcomponents runtimecompilercompilemoduleasync platformrefbootstrapmodulewithzone platformrefbootstrapmodule evaluating error loading zone task promisethen value error typeerror read property type null consoleerror error uncaught promise error typeerror read property type null packagejson expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "10671", "d": "8/2016"}, {"title": "ca nt bind touser since nt known property input", "body": "code works fine dont know", "num": "10670", "d": "8/2016"}, {"title": "ca nt bind ngmodel since nt known property textarea", "body": "ngmodel nt support element anymore", "num": "10669", "d": "8/2016"}, {"title": "ca nt find formsmodule httpmodule jsonpmodule", "body": "submitting check one x current behavior upgrades rc soon tried run app hit follow error find indexdts angularforms like l cant find formsmodule formsdts packagejson expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10665", "d": "8/2016"}, {"title": "change work", "body": "submitting bug current behavior expecteddesired behavior please tell us environment angular version browser chrome language typescript", "num": "10664", "d": "8/2016"}, {"title": "support styling components outside style hooks", "body": "submitting feature request shadow dom create style hooks using css custom properties possible polymer customcssmixins angular support style hooks style projections syntax host display inlineblock class nsbutton component selector nsapp template styles class nsapp pkozlowskiopensource foxandxss", "num": "10663", "d": "8/2016"}, {"title": "thisformsetvalue function", "body": "submitting check one x current behavior upgrades rc soon tried run app hit follow error error template component javascript import component afterviewinit forwardref changedetectionstrategy angularcore import control angularcommon import reactiveformdirectives ngvalueaccessor controlvalueaccessor angularforms import routerdirectives router angularrouter import observable rxjsobservable import subjectservice lzsubjectsshared import authservice shared export const subjectsearchcontrolvalueaccessor provide ngvalueaccessor useexisting forwardref gt nsgsearchcomponent multi true const noop gt todo user able type name press enter taken search results page component moduleid moduleid selector nsgsearch templateurl nsgsearchcomponenthtml styleurls nsgsearchcomponentcss directives routerdirectives reactiveformdirectives providers subjectservice subjectsearchcontrolvalueaccessor changedetection changedetectionstrategyonpush export class nsgsearchcomponent implements afterviewinit items observable term new control hidelist boolean true issearchinprogress boolean false listindex number activesubject zeroresults boolean false private results array internal data model private value placeholders callbacks private ontouchedcallback gt void noop private onchangecallback gt void noop constructor private subjects subjectservice private auth authservice private router router ngafterviewinit thissearch requirements hit search endpoint every key stroke hit search endpoint query params subsequent requests deal outoforder responses private search thisitems thistermvaluechanges gt thisissearchinprogress true debouncetime distinctuntilchanged switchmap term gt thissubjectssearch term gt thishidelist false thisissearchinprogress false onblur event thiszeroresults false hide list blur settimeout gt thishidelist true onkeyup event let activesubjectname subject gt return get accessor get value return thisvalue set accessor including call onchange callback set value v v thisvalue thisvalue v thisonchangecallback v controlvalueaccessor interface writevalue value thisvalue value controlvalueaccessor interface registeronchange fn thisonchangecallback fn controlvalueaccessor interface registerontouched fn thisontouchedcallback fn resetinput thishidelist true thisissearchinprogress false thiszeroresults false thislistindex thisvalue expecteddesired behavior expect breaking changes like angular team said previously writing angular application app continue work worked hard ensure applications worked continue work migrate reproduction problem created much simplied demo issue remove ngmodel error goes actually component template get either two errors please tell us environment angular version latest angular everything browser el capitan osx chrome language typescript", "num": "10662", "d": "8/2016"}, {"title": "change detection work sometime hybrid app", "body": "submitting check one x hybrid application mixture change detection nt work sometime current behavior expecteddesired behavior change change detection seems work one drawback reintroduce infinite reproduction problem unfortunately nt able replicate issue plunker happens specific situation one production servers hopefully someone familiar codes give light affect code give another go replicating issue plunker thanks guys motivation use case changing behavior make hybrid application possible angular version browser chrome language typescript", "num": "10660", "d": "8/2016"}, {"title": "router add factoryprovider field router", "body": "example usage typescript function getthatthing return systemimport mypathtomodule x gt return xmyclass ngmodule declarations imports routermoduleforroot path lazy factoryprovider getthatthing export class mymodule signature function would useful webpack lazy routes webpack understand deep module resolver providers string parsing etc", "num": "10659", "d": "8/2016"}, {"title": "upgradeadapterbootstrap throws typeerror read property injector null", "body": "submitting check one x everything working ok upgrade noticed new ngmodules went added ng modules along appmodule appropriate instantiated upgradeadapter like javascript import upgradeadapter angularupgrade import appmodule appmodule let upgradeadapter new upgradeadapter appmodule upgradeadapterbootstrap documentbody myapp current behavior app fails bootstrap error shown javascript console uncaught typeerror read property injector null expecteddesired behavior app bootstraps successfully reproduction problem person fails put something please tell us environment angular version browser chrome language typescript looked code upgradeadapterjs erroring noticed moduleref gets set call went ahead added hoping needed make null ref error go away javascript import platformbrowserdynamic angularplatformbrowserdynamic platformbrowserdynamic bootstrapmodule appmodule another error module appmodule bootstrapped declare ngmodulebootstrap components ngdobootstrap method please define one javascript import ngmodule angularcore import browsermodule angularplatformbrowser import componentmodule componentscomponentmodule ngmodule declarations imports browsermodule componentmodule bootstrap export class appmodule thing nt components add currently app mostly providers downgrade used using upgradeadapter setup worked", "num": "10656", "d": "8/2016"}, {"title": "xjs", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10655", "d": "8/2016"}, {"title": "authorization bearer token header sent since update http get", "body": "submitting bug current behavior angular http get request longer sets authorization header http request expecteddesired behavior authorization bearer xxxxxxx expected get accept applicationjson contenttype applicationjson authorization bearer referer sent get accept applicationjson contenttype applicationjson authorization negotiate referer reproduction problem private setheaders expected behavior bearer token sent http request motivation use case changing behavior security please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10654", "d": "8/2016"}, {"title": "troubleshoot errors", "body": "angular apparently hiding errors many times made changes app longer loads errors console troubleshoot issues like flag turned force reporting internal errors", "num": "10653", "d": "8/2016"}, {"title": "use service extended class", "body": "try configure like import resolvedreflectiveprovider directive componentfactoryresolver viewcontainerref injector angularcore import routeroutlet activatedroute routeroutletmap angularrouter import loadingservice servicesloadingservice directive selector routeroutlet export class loadingrouteroutlet extends routeroutlet constructor private parentoutletmap routeroutletmap private location viewcontainerref private resolver componentfactoryresolver private name string private loadingservice loadingservice super parentoutletmap location resolver name consolelog thisloadingservice thisloadingservice undefined activate activatedroute activatedroute loadedresolver componentfactoryresolver loadedinjector injector providers resolvedreflectiveprovider outletmap routeroutletmap void superactivate activatedroute loadedresolver loadedinjector providers outletmap deactivate void superdeactivate got thisloadingservice undefined loadingservicets import injectable angularcore injectable export class loadingservice public loading false", "num": "10651", "d": "8/2016"}, {"title": "router resolve working", "body": "submitting check one x current behavior trying add resolve root component resolve export class initresolver implements resolve resolve route activatedroutesnapshot state routerstatesnapshot promise root pr promise resolve prematch root resolved expected behavior expected prematch root resolved pr resolved case settimeout angular version language typescript xx", "num": "10649", "d": "8/2016"}, {"title": "module routing children", "body": "submitting check one x current behavior define module fully routes components apply module child module intended parent module routes still act independently example adminmodule admin component routeroutlet setupcomponent usermodule usercomponent routeroutlet newusercomponent setup url adminsetup outputs admin component routeroutlet good new user url usernewuser outputs user components routeroutlet ends main appcomponent routeroutlet instead admin component bad expecteddesired behavior example desire would route would adminusernewuser user component would load routeroutlet admin component rather basically want able navigate components child modules though defined child routes parent modules routing configuration prior moving app modules would stack route definitions import child routes children higher level route configs realize could expand definition modules making user components part admin module separation rather reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior sure expected behavior assuming way acts correct according current design routing module systems motivation use case changing behavior application intended composition multiple modules modules intended able stand reused sibling applications different ways said composed routes outlets make reasonably good sense end users developers nt change definitions modules get stack appropriately please tell us environment angular version router browser chrome xx firefox xx ie xx language typescript", "num": "10647", "d": "8/2016"}, {"title": "using multiple components different modules causing type x part declarations modules error", "body": "submitting check one x current behavior right import two directives module expecteddesired behavior use directivescomponents multiple modules without errors motivation use case changing behavior concept shared module shared resources good components used everywhere complex application contain modules components services pipes together multiple components reused different way example questionlistpage uses useractivelistpanel user module also photolistpage uses useractivelistpanel videolistpage uses useractivelistpanel reuse panel best way see provide component right ca nt create lets say usersharemodule put good put everything used modules user module lot things unnecessary times create useractivelistpanelsharemodule create lot trash files maybe simply provide directives multiple times without annoying error tell design answer opinion bad design please tell us environment angular version browser language", "num": "10646", "d": "8/2016"}, {"title": "bugreport explicit error message directives missing", "body": "submitting current behavior forgot add directive one components use inputs feature error ca nt bind inputname since nt known native property expecteddesired behavior error nt make sense according actual mistake proper error would report lack directives declaration component reproduction problem build little example app clone follow readme expected behavior explicit message motivation use case changing behavior friendly users particularly new ones please tell us environment angular version browser language typescript", "num": "10644", "d": "8/2016"}, {"title": "enable prod mode platform setup", "body": "submitting current behavior calling enableprodmode maints raises error enable prod mode platform setup expecteddesired behavior error prod mode enable reproduction problem see example maints document webpack please tell us environment angular version browser firefox language typescript webpack used instead systemjs", "num": "10643", "d": "8/2016"}, {"title": "router redirects take precedence routes", "body": "submitting check one x current behavior routes redirect override component routes calling meaning desired destination never reached behaviour appears changed expecteddesired behavior would like redirects routing default behaviour also able navigate around components using relative urls reproduction problem see code running using router loaded app redirects via parent component sister component working links sister brother components uses identical code update router app loads still redirects via parent component sister component clicking brother link briefly shows brother url redirecting back sister component expected behavior redirect override higher priority component routes motivation use case changing behavior please tell us environment angular version router browser chrome language typescript", "num": "10642", "d": "8/2016"}, {"title": "angular one component", "body": "submitting check one x current behavior angular multiple components selector previous versions working without problem single context directives stored whole module previously added component component directives array processed template component adds component shared directives array whole module way could considered breaking change mentioned anywhere changelog expecteddesired behavior would expected similar behaviour providers components added ngmoduledeclaration available templates components components added componentdirectives override ngmoduledeclaration available template component know probably solution would use modules create module contain component bad usage ngmodule since components html files shared would create modules crazy reproduction problem plunker showing problem exactly code would work without problem working motivation use case changing behavior need one html file multiple components share public interface different components injected directives array single html display different components way almost html files except one element please tell us environment angular version browser language typescript", "num": "10641", "d": "8/2016"}, {"title": "async pipe works different operator upgrade", "body": "submitting check one x templates value observable current behavior read property number null wrote pipe simple value amp amp valuenumber changed template works expected sad ca nt reproduce generic project expecteddesired behavior error data come value updated please tell us environment angular version browser chrome language typescript", "num": "10639", "d": "8/2016"}, {"title": "run change detection update template input value previous value current value", "body": "run change detection update template input value previous value current value using use case want set default value input blur event input value empty input value dumb component taken take value way ts main component template template thisformat thisstorelet getformat formreduserts export function getformat return state observable gt state map gt sformat run action problem event update value inserted previous value example store value gt input value gt clearing cut input value gt blur event gt input empty setting default value store gt store value gt input value store value gt input value gt clearing cut input value gt blur event gt input empty setting default value store gt store value gt input value empty fix", "num": "10638", "d": "8/2016"}, {"title": "get angular visual studio running", "body": "really tried everything web api core runs good angular running error error error run sample installed angulario npm error ca nt load moduls also example download internet systemjs error key found one example internat run month make one change runs error search search rc wrong library develop javascript c otherlanguage years something seen year somewhere example really works asp webapi core", "num": "10637", "d": "8/2016"}, {"title": "typeerror righthand side instanceof object", "body": "submitting check one x current behavior using router javascript simple route configuration routerlinks configured like html home clicking link following error produced typeerror righthand side instanceof object expecteddesired behavior update routeroutlet correct component resolved problem changing returns undefined rather submit pull request thought better raise bug sure change impacts parts router would affect example typescript implementation please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx", "num": "10636", "d": "8/2016"}, {"title": "ca nt bind ngmodel since nt known property select ngmodel foo ngmodelchange onchange event", "body": "submitting check one x current behavior adding ngmodel caused error upgrading expecteddesired behavior two way binding using ngmodel angular version browser chrome language typescript", "num": "10634", "d": "8/2016"}, {"title": "access formcontrolname value inside custom validation function", "body": "submitting check one x current behavior way get value formcontrolname inside custom validation function identify control beeing actually validated modeldriven forms parameter c formcontrol actual api formcontrol expecteddesired behavior able get formcontrolname value inside custom validation generic function use identity actually validated control allows dynamic set validation rules control example json syntax could maintenated outside app code motivation use case changing behavior flexible minimize code reducing number custom validators please tell us environment angular version browser language", "num": "10633", "d": "8/2016"}, {"title": "dependency mismatch", "body": "hey mates since today app crashes following nailed dependency mismatch packagejson defined following problem seems installs following angularcommon angularplatformbrowserdynamic angularcompiler angularcore angularupgrade zonejs rxjs version match dependencies result error upgrading resolves issue", "num": "10632", "d": "8/2016"}, {"title": "feat ngmodule remove need add bootstrapcomponent declarations", "body": "submitting check one x current behavior defining ngmodule angular expects bootstrapcomponent defined declarations bootstrap ts ngmodule bootstrap app declarations app start contact export class appmodule imo unneccessary boilerplat component boostrap component clear part module expecteddesired behavior sufficient ts ngmodule bootstrap app declarations start contact export class appmodule motivation use case changing behavior reducing amount boilerplate please tell us environment angular version browser language", "num": "10631", "d": "8/2016"}, {"title": "detach changedetectorrefdetectchanges ngonchanges sync", "body": "submitting x bug report x feature request current behavior using change detection takes place every seconds expected called higher rate afaics means expensive renderings might still take place much higher frequency reproduction problem see expected behavior expected change detection sync motivation use case changing behavior situation imho complex context surprise closed wo code change declared works intended led investigations discussions obtain control update mechanism ran another surprise therefore propose one two code changes order consistent andor intuitive connection maybe interception makes sense documentation changes ie clarification added vs play together please note works intended one thing works intuitively expected another eg completely surprising declarig overrules least see experiments find neither docs closing comment clear helpful topic fine grained control updates renderings please tell us environment angular version current browser language typescript", "num": "10630", "d": "8/2016"}, {"title": "unneccessary boilerplate routing", "body": "current behavior currently import components declarations bootstrap router config expecteddesired behavior import declarations router config module take care adding declarations reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior extra work needed please tell us environment angular version browser language", "num": "10629", "d": "8/2016"}, {"title": "http go wrong body null", "body": "submitting check one x current behavior body null bodytext go wrong expecteddesired behavior add method deal null body angular version", "num": "10628", "d": "8/2016"}, {"title": "application lost hit refresh angularrouter", "body": "basically happens application running click url browser application lost http error found use new routing dependencies angularcommon angularrouter old one changed strategy use although find normal links query string natural question achieved without modify server", "num": "10627", "d": "8/2016"}, {"title": "bug compiler components containing moduleid crash webpack build uncaught typeerror urimatch function", "body": "submitting check one x current behavior component containing moduleid cause webpack build crash related bug reported moduleid like causes function crash app get passed number instead string temp work around put stop app crashing sure problem effects systemjs bug effect anyone using webpack", "num": "10626", "d": "8/2016"}, {"title": "make syntax idiot proof", "body": "", "num": "10625", "d": "8/2016"}, {"title": "ca nt resolve parameters decoratorfactory", "body": "submitting check one x current behavior bookmarking app bookmarksolvercom currently trying create service pulls data json file view module consumes display app continually fails load error resolve parameters decoratorfactory looking decoratorts seems like decoratorfactory create object injected created interface named observable app kept failing error changed bookmarks object used observable error persisted expecteddesired behavior json object loaded displayed template reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point public repo github bookmarksolver also live bookmarksolvercom expected behavior app load motivation use case changing behavior fix apparent defect please tell us environment developing net solution artifacts stripped project push github pull web host angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome edge firefox ie tested language typescript", "num": "10623", "d": "8/2016"}, {"title": "", "body": "submitting possible misspelling afaik misspelling comments really valuable context angularcoresrclinkercompilerts amp lines current behavior link compilemodulesync put also creates componentfactories components expecteddesired behavior link compilemodulesync also creates componentfactories components angular version", "num": "10619", "d": "8/2016"}, {"title": "", "body": "submitting check one x current behavior minified bundle breaks solved temporarily either turning change option reorder componentspipesdirectives declarations ngmodule use aot compilation ngc aka angularcompilercli update igorminar recommended error traces expecteddesired behavior minified bundle work reproduction problem bash npm install try run dev works well npm start try run prod bundle created break npm run servebuild try changing mangle option retry works expected behavior work motivation use case changing behavior please tell us environment angular version browser chrome web browser language typescript", "num": "10618", "d": "8/2016"}, {"title": "getting unhandled promise rejection migrating", "body": "submitting check one x current behavior following migration ended getting using angularcli beta would get error using angularcli webpack would get error expecteddesired behavior app launch reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point plnkr nt seem yet import platformbrowserdynamic angularplatformbrowserdynamic import enableprodmode angularcore import environment app import appmodule appappmodule environmentproduction enableprodmode platformbrowserdynamic bootstrapmodule appmodule import ngmodule angularcore import browsermodule title angularplatformbrowser import formsmodule angularforms import appcomponent appcomponent ngmodule declarations appcomponent bootstrap appcomponent imports browsermodule formsmodule title export class appmodule expected behavior app launch motivation use case changing behavior please tell us environment angular version angular cli version browser version beta language typescript", "num": "10617", "d": "8/2016"}, {"title": "private function private let exported part public api broken links docs", "body": "show api docs exported clearly private private page createdefaultcookiexsrfstrategy exported robwormald see workeruiplatformproviders exported tbosch see", "num": "10615", "d": "8/2016"}, {"title": "component relative paths respected", "body": "submitting check one x current behavior trying create custom component install using however templateurl loaded relative root dev server instead relative package read documentation component relative paths angular docs well thoughtram component bundled commonjs module added component decorator thought came mind maybe something fact using webpack disconnect two however imagine would common problem searching issues loss expecteddesired behavior load relatively package please tell us environment angular version browser language typescript typescript code typescript import component input angularcore import card cardmodel component moduleid moduleid selector appcard templateurl cardcomponenthtml styleurls cardcomponentscss export class cardcomponent input card card showbilling boolean false constructor togglebillingaddressview event mouseevent eventpreventdefault thisshowbilling thisshowbilling transpiled commonjs code screenshot", "num": "10614", "d": "8/2016"}, {"title": "breaking change http umd", "body": "submitting check one x current behavior post upgrade facing error exception typeerror read property tostring nullbrowserdomadapterlogerror stacktrace browserdomadapterlogerror typeerror read property tostring null requestbodytext requestgetbody observableeval subscribe observablesubscribe observablesubscribe mapoperatorcall observablesubscribe observablesubscribe catchoperatorcall observablesubscribe browserdomadapterlogerror typeerror read property tostring null consoleerror angular version browser language typescript", "num": "10612", "d": "8/2016"}, {"title": "add multiple lefthand assignment", "body": "hello noticed multiple lefthand assignments ca nt work inside ngfor loop included could extremly helpful code sample course dose nt work", "num": "10611", "d": "8/2016"}, {"title": "angular forms library version documentation issue", "body": "submitting check one x current behavior states use npm install angularforms quick start link says angularforms expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10608", "d": "8/2016"}, {"title": "pristine status nt altered statuschanges observer fires", "body": "submitting current behavior abstractcontrolpristine updated prior abstractcontrolstatuschanges observer handler expecteddesired behavior current observer emits values reproduction problem motivation use case changing behavior within handler sometimes necessary check pristine know whether display something page right defer behavior using pristine value ca nt trusted please tell us environment angular version browser language", "num": "10606", "d": "8/2016"}, {"title": "abstractcontrolstatuschanges seems fire needlessly", "body": "submitting current behavior named changes moniker feel like abstractcontrolstatuschanges emit values whenever status actually changed instead seems run whenever runs except status value callback expecteddesired behavior fire status changed reproduction problem motivation use case changing behavior found profiling extra slow area application caused ui lag chief complaint would performance however terribly easy add operator subscriber fix issue expectation would nt need easy miss without testing please tell us environment angular version browser language", "num": "10603", "d": "8/2016"}, {"title": "element", "body": "submitting check one x current behavior u try upgrade directive uses element service use component element children nodes expecteddesired behavior u try upgrade component uses element service element children nodes expected behavior u try upgrade component uses element service element children nodes motivation use case changing behavior available update directives uses element service use hybrid application please tell us environment angular version browser language typescript", "num": "10597", "d": "8/2016"}, {"title": "provide xsrfstrategy randomly generated uuid", "body": "submitting current behavior currently reads value cookie however cookie must set expecteddesired behavior providing additional uuidcookiexsrfstrategy also sets cookie randomly generated uuid motivation use case changing behavior think desired behaviour almost cases", "num": "10593", "d": "8/2016"}, {"title": "router nt seem work", "body": "submitting check one x current behavior path pathmatch prefix nt match url aa expecteddesired behavior reproduction problem expected behavior angular version router version browser chrome firefox language typescript", "num": "10592", "d": "8/2016"}, {"title": "issue rootscope service upgraded used", "body": "created following rootscopeservice wrapper rootscope used service named example xservice import injectable bind inject angularcore injectable export class rootscopeservice private static instance rootscopeservice constructor inject rootscope public rootscope rootscopeserviceinstancenull rootscopeserviceinstance return rootscopeserviceinstance export var rootscopeserviceinjectables array bind rootscopeservice toclass rootscopeservice import injectable inject angularcore import logger level import rootscopeservice rootscopeservice injectable export class xservice private log logger private static instance xservice constructor inject rootscope public rootscopeservice xserviceinstancenull thislog new logger thisloglevel leveldebug xserviceinstance return xserviceinstance trackcustomevent customevent currentscope try xserviceinstancerootscopeservicebroadcast customevent currentscope catch ex xinstancelogerror x trackcustomevent extostring trackactionevent actionevent scope xserviceinstancetrackcustomevent actionevent scope downgrading service using getting following issue typeerror read property get reflectiveinjectorinstantiate", "num": "10590", "d": "8/2016"}, {"title": "router unit tests fail chrome mobile android", "body": "running router test suite chrome mobile android following unit tests failing exception chrome mobile android create router state work create new state failed chrome mobile android recognize support secondary routes failed chrome mobile android recognize set url segment index properly failed chrome mobile android recognize sort routes outlet name failed investigations caused usage apparently uses intl code internally root cause fact vsavkin nt router test campaign run main campaign order benefit testing saucelabs browserstack", "num": "10589", "d": "8/2016"}, {"title": "unit testing router", "body": "struggling inject router component unit test class gives following error error resolve parameter router make sure parameters decorated inject valid type annotations router decorated injectable spec file looks like following import router angularrouter describe component basicregistration gt let promptwindow promptwindowservice let translator translatorservice let userregistration userregistrationservice let userinfo userinfoservice let formbuilder formbuilder let router router able find date help inject latest router unit testing purposes could please provide information update official angulario documentation", "num": "10587", "d": "8/2016"}, {"title": "router expose errors events instead failed promises", "body": "submitting check one x current behavior router fails match url fails message logged console also happens guard fails expecteddesired behavior emit failed promise events captured handled without console error messages reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx cc vsavkin", "num": "10585", "d": "8/2016"}, {"title": "router add routerstatesnapshot canload guard", "body": "submitting check one x current behavior guard called argument expecteddesired behavior future state provided url stored use case would redirecting user login page returning previously attempted url logging reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx cc vsavkin", "num": "10584", "d": "8/2016"}, {"title": "router lazy loaded module nt honor component provider list", "body": "submitting check one x component lazy loaded module provider provider registered component injector provided service available children component works eagerly loaded components nt working component lazy loaded scenario router route lazy loads hero module module single top component host child routes components two components depend belongs hero management feature area preferred approach provides child components router load outlet current behavior application throws error saying ca nt find provider workaround add provider lazy loaded module necessary prevents kind service encapsulation component offer expecteddesired behavior find service provided parent reproduction problem plunker instructions revealing bug please tell us environment angular version candidate august browser language", "num": "10577", "d": "8/2016"}, {"title": "callback functions adapter amp directive", "body": "hi appears amp event handler binding attached directive callback function works completely differently vs world adapter updgradedevjs value return emitteremit value locals return parentget scope locals happens due callback waiting user input say return true false wont work emitteremit runs right away returning undefined async callback done app controller function stopping designs rely callback return value perform certain operations looked eventemitter upgradedevjs seems always initializing isasync true plus handling returning next use rxjs observables achieve wondering guys faced issue yet workaround possible thanks kanwaljeet singh kalra", "num": "10576", "d": "8/2016"}, {"title": "interpolated values working datetime attribute date element", "body": "submitting current behavior attribute element ca nt filled interpolated value expecteddesired behavior feel like default curly braces work since nt property native element however value need filled binding usecases sure expected behaviour though reproduction problem angular version browser language typescript", "num": "10571", "d": "8/2016"}, {"title": "routing fails path argument contains slash", "body": "submitting current behavior routes contain path arguments slashes fail resolved example approutests import routerconfig providerouter angularrouter import detailcomponent detailcomponent import listcomponent listcomponent const routes routerconfig path component listcomponent path details id component detailcomponent export const approuterproviders providerouter routes appcomponentts import component angularcore import listcomponent listcomponent import detailcomponent detailcomponent component selector myapp directives listcomponent detailcomponent template export class appcomponent listcomponentts detailcomponentts import component angularcore import activatedroute angularrouter component template export class detailcomponent id string constructor private route activatedroute thisrouteparamssubscribe params gt thisid params id clicking link labeled slash angular fails resolve url link without slash works error error uncaught promise error match routes detailswithslash expecteddesired behavior angular deal url variables containing slashes looks like angular already properly using url encoding tries route matching decoded value example contains slash lets angular think want navigate another path matching would applied url encoded value would work reproduction problem plunkr show bug mentioned therefore resources shown please tell us environment angular version router browser language typescript", "num": "10570", "d": "8/2016"}, {"title": "unable add router angular", "body": "component router dependency trying test mocha chai sinon test bundle current behavior ever adding router beforeeach giving exceptions beforeeach gt addproviders routerproviders applicationref service component httpproviders riginal exception unimplemented riginal stacktrace rror unimplemented new baseexception bnsfcodegrailsnewseniorityrostersgrailsappassetsangularnodemodules angular version", "num": "10569", "d": "8/2016"}, {"title": "unable add router angular", "body": "component router dependency trying test mocha chai sinon test bundle current behavior ever adding router beforeeach giving exceptions beforeeach gt addproviders routerproviders applicationref service component httpproviders riginal exception unimplemented riginal stacktrace rror unimplemented new baseexception bnsfcodegrailsnewseniorityrostersgrailsappassetsangularnodemodules expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10568", "d": "8/2016"}, {"title": "formcontrolsetvalidators would like addvalidators", "body": "submitting check one x x feature request current behavior creating formcontrol via typescript following model driven approach validations coming questions model using dynamic form cookbook example use setvalidators method however validators apply question example new textboxquestion key phone label phone value required true minlength maxlength order new textboxquestion key email label email value required true minlength maxlength order using setvalidators though would start write pretty complicated statement look want apply certain validators since setvalidators add replaces code set last validator toformgroup questions questionbase let group motivation use case changing behavior would great add like toformgroup questions questionbase let group angular version browser language", "num": "10567", "d": "8/2016"}, {"title": "guards implementing appropriate interface fail runtime", "body": "submitting check one x add service array nt implement interface get cryptic runtime error expecteddesired behavior would expect caught compile time could route canactivate stricter type intuitive error message motivation use case changing behavior better developer experience angular version browser language typescript", "num": "10566", "d": "8/2016"}, {"title": "rc router queryparams change triggered component destroyed", "body": "submitting check one x current behavior let say component subscribed query params change via ngoninit private sub subscription constructor private router router ngoninit thissub thisrouterrouterstatequeryparamssubscribe subscription unsubscribed ngondestoy component rendered specific route problem route changed queryparams subscription triggered component destroyed create problem causes unwanted reinitialization component destroyed breaks application case heavily depends query params due compatibility reasons expecteddesired behavior component destroyed queryparams changed event please tell us environment angular version router version browser language typescript", "num": "10565", "d": "8/2016"}, {"title": "hashlocationstrategy backforward nt work ie mobile", "body": "submitting current behavior back navigation hashlocationstrategy ie mobile broken jumps default route nt update address bar reproduction problem windows phone device use ie mobile open launch preview seperate window navigate route route press osbrowser back button redirected directly route skipping route address bar still shows expecteddesired behavior route loaded shown address bar happens platforms backporting fixed fixes issue desktop mobile please tell us environment angular version browser ie mobile using pathlocationstrategy would also avoid issue nt option project msappx url without http server", "num": "10564", "d": "8/2016"}, {"title": "jquery plugin working angular", "body": "new expecting find solution following scenario jquery plugin working getting data got issues var owl jquery thiselementrefnativeelement find breif owlowlcarousel full code given bellow angular component beautify ignore start import component oninit elementref inject angularcore import formdirectives angularcommon import carouseldirectives beautify ignore end import api servicesapi declare var jquery component selector breif directives carouseldirectives template require templatehtml export class breifcomponent implements oninit elementref elementref breifs object public myinterval number public nowrapslides boolean false public slides array constructor inject elementref elementref elementref private api api thiselementref elementref thisloadbreif ngoninit loadbreif thisapigetbreif subscribe data gt thisbreifs dataresultarticles templatehtml lt div class owlcarousel id breif lt div class item ngfor let breif breifs breiftitle", "num": "10562", "d": "8/2016"}, {"title": "jquery plugin working angular", "body": "new expecting find solution following scenario jquery plugin working getting data got issues var owl jquery thiselementrefnativeelement find breif owlowlcarousel full code given bellow angular component beautify ignore start import component oninit elementref inject angularcore import formdirectives angularcommon import carouseldirectives beautify ignore end import api servicesapi declare var jquery component selector breif directives carouseldirectives template require templatehtml export class breifcomponent implements oninit elementref elementref breifs object public myinterval number public nowrapslides boolean false public slides array constructor inject elementref elementref elementref private api api thiselementref elementref thisloadbreif ngoninit loadbreif thisapigetbreif subscribe data gt thisbreifs dataresultarticles templatehtml breiftitle", "num": "10561", "d": "8/2016"}, {"title": "routernavigate fails unhelpful error part path", "body": "submitting current behavior unhelpful error thrown appears path example happens call line number referenced expecteddesired behavior would fantastic error something along lines please tell us environment angular version", "num": "10560", "d": "8/2016"}, {"title": "two way binding fails silently foo used instead foo", "body": "submitting current behavior attempting use twoway binding instead fails silently expecteddesired behavior would fantastic warning used angular version", "num": "10559", "d": "8/2016"}, {"title": "dynamically load columns data table angular", "body": "html page want create table columns table dynamic means fetched server variable component using type data table also dynamic means time programming nt know columns data come get bound table tried code nt seem work give error creates empty td tbody expensecomponenthtml expenses column datacolumn code column getting created successfully data column mash working sure must way angular achieve expensecomponentts export class expensecomponent implements oninit errormessage columns string data constructor private commonservice commonservice private expenseservice expenseservice ngoninit void thiscommonservicegetcolumnnames condomanagement expenses subscribe data gt thispromise data error gt thiserrormessage error private promise data string thiscolumns data thisexpenseservicegetexpenses condomanagement thiscolumns subscribe data gt thisanotherpromise data error gt thiserrormessage error private anotherpromise data thisdata data consolelog thiscolumns consolelog thisdata private handleerror error response consoleerror error return observablethrow errorjson error server error data getting logged console code working html per trial ideas please", "num": "10558", "d": "8/2016"}, {"title": "perhaps router resolve nt wait observable complete", "body": "probably best classified router feature request describe thinking use case currently router waits observable complete completing navigation would like instead continue navigation first observable item returned thinking currently resolve treats observable promise defeating power observable nt present barrier angular http one item returned unless misunderstand point using observable http allow easy extension throughout angular scenario data actually stream use case live data feed remote server subscribe resource rather get viewing resource page need one snapshot complete navigation display component would still like updates bound view detail observables firstclass citizens great displaying live data currently rely becoming common integrate live data streamedsyndicatedpublished web services regardless framework used deliver streams client observables obvious choice act intermediary receiving agentservice view resolvers angular also nice reasons one sure data performing initialization greatly simplifies component initialization logic also simplifies managing builtin operations angular performs avoiding errors binding templates properties null models live data comes current resolve behavior difficult make use suppose live data stream never completes instead resolve example observablefirst throw away remainder stream go extra steps observables observablepublish etc enough symmetric exit hook resolve see instead extra magic tear resources nt initialize component imo spirit rx better behavior would share observable eg via publishreplay connect subscribe wait first item unsubscribe complete navigation pass shared observable resolveddata exiting navigation disconnect something similar thoughts appreciated also happy contribute effort someone design authority confirms approach", "num": "10556", "d": "8/2016"}, {"title": "formcontrolname doesnt work formcontrol works", "body": "hello im trying use formcontrolname directive works nested formgroup doesnt parent example created gwuli import component oninit angularcore import formbuilder formgroup validators reactiveformdirectives formarray angularforms import recipe sharedrecipe import activatedroute router angularrouter import recipeservice recipeservice component templateurl templatesrecipesrecipesedittplhtml directives reactiveformdirectives export class recipeseditcomponent implements oninit recipeform formgroup constructor private formbuilder formbuilder private router router private activatedroute activatedroute private service recipeservice initmyform thisrecipeform thisformbuildergroup id name validatorsrequired content validatorsrequired ingredients ngoninit thisrefillformm refillformm thisactivatedrouteparamssubscribe params gt thisservicegetrecipe params id subscribe res gt thisfillmyform res consolelog response res fillmyform recipe recipe thisrecipeform thisformbuildergroup id recipeid name recipename validatorsrequired content recipecontent validatorsrequired ingredients thisformbuilderarray thisinitingredients recipe initingredients recipe recipe recipe null let ingredientsformgroupsarray formgroup let ing recipeingredients ingredientsformgroupsarraypush thisformbuildergroup name ingname amount ingamount return ingredientsformgroupsarray onaddingredient dynamic adding another form ingredient var formcontrol thisrecipeformcontrols ingredients formcontrolpush thisformbuildergroup name amount ondeleteingredient index number var formcontrol thisrecipeformcontrols ingredients formcontrolremoveat index oncancel consolelog im trying navigate back detail id thisrecipeformvalueid thisrouternavigate recipesdetail thisrecipeformvalueid onsave thisservicesaverecipe thisrecipeformvalue subscribe template save cancel refill form name image content name amount delete ingredient add ingredient matter submit form im getting old value editing parent formgroup fields use formcontrolname directive example input field content top field name uses formcontrol ok comes new value time nested formgroup ingredients works like charm formcontrolname directive sorry code im studying", "num": "10555", "d": "8/2016"}, {"title": "option selected attribute work ui", "body": "select element expression change event form nt ngmodel pug codes chrome generated html look seems first option attribute selected true selected select element ui last option user chooses still selected tried change still work", "num": "10554", "d": "8/2016"}, {"title": "exception error uncaught promise typeerror set property null", "body": "hello practicing quickstart guide came across problem please help line thisheroservicegetheroes heroes gt thisheroes heroes works fine part marked white throws error please tell whats wrong part marked white", "num": "10553", "d": "8/2016"}, {"title": "ngmodule large projects", "body": "submitting check one x reading ngmodule want lay use cases entirely sure current proposal takes consideration context part team building enterprise framework based angular framework base apps within ecosystem divided framework smaller projectsmodules think separated npm packages modules sets controls reused across modules pages use controls example quick example controls module ts import component angularcore component selector mycombobox export class mycombobox checklist module checklist module depends controls module controls treated party module ts import component angularcore import mycombobox controlsmodulecomponentsmycombobox please note loading specific component within module components inside module component selector mychecklistpage directives mycombobox export class checklistpage bootstrap nt know controls checklist modules lazy loaded depending user interaction case user navigates checklist checklistpage component loaded mycombobox also follow import made checklistpage checklist module dozen components depending dozen components multiple modules impractical say nearly impossible components imported ngmodule declaration talking several hundreds components might used app run time also application needs modular lazy load possible different interactions within app lead completely different modules loaded expecteddesired behavior current solution component scoped directives works like charm use case sure play ngmodule currently clearly see dependencies needed component case checklistpage making maintenance much easy needed components imported ngmodule using indistinctly several components seems fantastic solution small applications feel long term development several iterations across multiple years team rotation component explicitly state depends without looking template compilation errors something missing great advantage conclusion please let know clear explanation goal issue raise awareness situation get feedback proceed available show current work several hundred angular components across projects developed last year since alpha", "num": "10552", "d": "8/2016"}, {"title": "enable loader switching one component", "body": "hi guys someone give insight trying show loader switching components trying enable using ngif set boolean value ondestroy event showing properly someone help show loader switching component thanks advance", "num": "10551", "d": "8/2016"}, {"title": "importing httpproviders causes ngc blow", "body": "x bug report feature request support request gt please submit support request instead see current behavior create app uses import httpproviders angular compile app ngc p see following error symbolicreference modulesrcbackendsxhrbackend namecookiexsrfstrategy error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol httpproviders varwwwcommonlibtscommontscompnodemodules angular resolving symbol eqsiftindexmain varwwwcommonlibtscommontscompappeqsiftlibtsindexeqsiftindexmaints resolving symbol eqsiftindexmain varwwwcommonlibtscommontscompappeqsiftlibtsindexeqsiftindexmaints simplifyincontext varwwwcommonlibtscommontscompnodemodules staticreflectorsimplify varwwwcommonlibtscommontscompnodemodules staticreflectorannotations varwwwcommonlibtscommontscompnodemodules directiveresolverresolve varwwwcommonlibtscommontscompnodemodules compilemetadataresolvergetdirectivemetadata varwwwcommonlibtscommontscompnodemodules compilemetadataresolvermaybegetdirectivemetadata varwwwcommonlibtscommontscompnodemodules codegeneratorreadcomponents varwwwcommonlibtscommontscompnodemodules generateonefile varwwwcommonlibtscommontscompnodemodules arraymap native codegeneratorcodegen varwwwcommonlibtscommontscompnodemodules expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior use import http angular everything works fine error message cryptic motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10550", "d": "8/2016"}, {"title": "unexpected behavior html object interpolation ie", "body": "submitting check one x current behavior using html object tag show pdf document webpage data attribute provided angular interpolation result dark page ie working expected chrome doclocation stringabcpdf browser support inline pdfs please download pdf view working use plain html without angular ie browser support inline pdfs please download pdf view download pdf expecteddesired behavior reproduction problem exactly reproduced plunker requires pdf added punker folder possible plain html interpolation using angular interpolation expected behavior webpage similar angular interpolation plain html motivation use case changing behavior please tell us environment angular version browser ie language typescript", "num": "10549", "d": "8/2016"}, {"title": "constructor function syntax working nonbootstrap components", "body": "submitting check one x current behavior adding component ngmodule declaration array component constructor function component added module everything fine array notation constructor used though expecteddesired behavior using function constructor supported reproduction problem edited difference constructors declared show motivation use case changing behavior function supported way declaring component constructor still works bootstrap components please tell us environment angular version browser chrome language", "num": "10545", "d": "8/2016"}, {"title": "feature request c", "body": "currently app created using dart typescript javascript c also made xamarin net c roslyn open source framework useful developing mobile apps using c thanks amp regards kalpesh", "num": "10544", "d": "8/2016"}, {"title": "hammer blocking scroll", "body": "submitting check one x current behavior listen hammerjs event element blocks vertical scrolling expecteddesired behavior would expect scrolling blocked reproduction problem create new project update appcomponentts look like import component angularcore component moduleid moduleid selector approot template styleurls appcomponentcss export class appcomponent private items constructor thisitems let lt thisitemspush id test alert swiping block execute open page mobile device tested iphone attempt scroll observe unable open go line comment section looks like modify recompiles refresh page mobile device verify scrolling happen hammerjs docs please let know help resolve issue thanks dan", "num": "10541", "d": "8/2016"}, {"title": "request feat router provide extraoptions turn analyzeforentrycomponents", "body": "developer needs control forces created root module leads errors dev created multiple", "num": "10539", "d": "8/2016"}, {"title": "import renaming components name working ngmodule", "body": "submitting check one x current behavior components name different selectors etc import renaming export add array first one rendered expecteddesired behavior components rendered app reproduction problem switch order see bug first displayed motivation use case changing behavior user able rename imports use components class name please tell us environment angular version browser chrome language typescript cc igorminar", "num": "10538", "d": "8/2016"}, {"title": "request provide better errors bootstrap dynamicmodule erorrs", "body": "dynamicmodule created bootstrap error declarations entrycomponents developer know start since create ngmodule", "num": "10536", "d": "8/2016"}, {"title": "locationreplacestate overrides parameters name upon navigation", "body": "submitting check one x current behavior navigating route query params use name parameters get replaced last occurrence route processed example locationreplacestate search qabc amp facetfoo bar amp facetstate pa url created gets replaced upon navigation search qabc amp facetstate pa expecteddesired behavior urls would support query params name produce array values reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10535", "d": "8/2016"}, {"title": "locationreplacestate work activatedrouteparams", "body": "submitting check one x current behavior using locationreplacestate path querystring update search part path route resolvers properly map query string route parameters way access query string route resolver without parse manually expecteddesired behavior navigating route uses query string parameters would populate activatedrouteparams way matrix parameters seems like ngcommon ngrouter agree pass query string parameters reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10534", "d": "8/2016"}, {"title": "locationnormalizequeryparams creates string nt match routes", "body": "submitting check one x current behavior locationnormalizequeryparams generates normal query parameters match router paths since expect matrix style parameters expecteddesired behavior router support standard productiontested html query parameters provide mechanism working router parameters reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10532", "d": "8/2016"}, {"title": "ngmodel ngif ngmodel ref variable combination strange behavior", "body": "submitting x bug report current behavior appreciated strange behavior use referenced ref variable ref variable seems set use example null however remove works fine expecteddesired behavior think nt affect ngmodel ref varialbe reproduction problem plunkr two inputs attributes first works fine second nt work remove ngif second input works expected behavior nt affect motivation use case changing behavior could want conditional show input please tell us environment angular version browser language typescript", "num": "10531", "d": "8/2016"}, {"title": "feat forms expose formcontrol errors parent formgroup", "body": "submitting check one x current behavior errors form group formgroupstatus invalid formgrouperrors property null ex expecteddesired behavior validity formcontrol changes parent formgrouperrors merged errors controls similar angularjs formcontroller error property works motivation use case changing behavior would helpful prefer disable submit button specific errors form required could drive attribute formcontrolerrors value instead formcontrolstatus ex submit submit", "num": "10530", "d": "8/2016"}, {"title": "inmemorybackendservice model id always returns inmemorybackendservicejs", "body": "x bug report able mock fake backend service using primary id model object instead always returns error case cause conditional inmemorybackendserviceprototypedelete method evaluates falsey causes method execute thiscreateerrorresponse also appears put post similar issues existing framework code angular version browser language", "num": "10529", "d": "8/2016"}, {"title": "routernavigate ngoninit parent component ngoninit child still called", "body": "submitting check one x current behavior routernavigate ngoninit parent component ngoninit child still called routernavigate child ngoninit navigate destination child component expecteddesired behavior would expect ngoninit child component called already routed another site reproduction problem fixed previously mentioned error adding param check child ngoninit childts l please tell us environment angular version browser chrome language typescript", "num": "10526", "d": "8/2016"}, {"title": "di bug", "body": "submitting check one x current behavior using injected service makes di fail following error error error invalid provider instances provider type allowed got undefined invalidprovidererrorbaseexception constructor new invalidprovidererror eval arrayforeach native normalizeproviders eval arrayforeach native normalizeproviders resolvereflectiveproviders functionreflectiveinjectorresolve evaluating error loading report error function index zonejs zonejs anonymous function zonejs zonejs zonejs zonejs zonejs works expecteddesired behavior reproduction problem expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "10525", "d": "8/2016"}, {"title": "build passing even ddescribe left test", "body": "know since travis circle cis green", "num": "10524", "d": "8/2016"}, {"title": "dynamically creating component componentfactory created expected", "body": "submitting bug report current behavior using componentfactorycreate passing node want component created results component template partially inserted dom html inserted text field functioning twoway data binding expecteddesired behavior expected component completely inserted function component created statically andor works created via viewcontainerrefcreatecomponent reproduction problem plunker based angular quickstart illustrates problem expected behavior click create dynamic component button create dyncomponent within note one experiment plunker comment create call componentfactory uncomment createcomponent call viewcontainerref see components created way work fine understand insertion div directly dom highly discouraged angular using third party package aggrid exactly furthermore angular api seems support functionality nt work expected please tell us environment angular version although problem existed browser chrome windows chrome centos language typescript", "num": "10523", "d": "8/2016"}, {"title": "routerstate documented tree", "body": "routerstate documentation nt reflect tree methods includes assume important part state also inconsistent code segment includes usage tree", "num": "10522", "d": "8/2016"}, {"title": "router passing parameter", "body": "submitting check one x current behavior datatable showing car models choosing model try navigate version overview get error error match routes versionoverview modelnamecamaro expecteddesired behavior routing versionoverview component passing parameters reproduction problem one path matched already tried different ways pass parameter nothing works passing parameter works like charm way please tell us environment angular version router version browser chrome language typescript supposed work something wrong thanks advance martin", "num": "10521", "d": "8/2016"}, {"title": "animation void gt animation fired component detach", "body": "submitting check one x current behavior looks like gt void animation fired try detach component viewcontainerrefdetach following animation defined component dynamically create component using viewcontainerrefcreatecomponent entering animation works fine remove component using viewcontainerrefdetach viewcontainerrefclear leave animation fired expecteddesired behavior leave animation fired viewcontainerrefdetach environment chrome os windows anniversary update angular", "num": "10520", "d": "8/2016"}, {"title": "ngcontent duplicated dont work", "body": "submitting check one x current behavior multiple works last one expecteddesired behavior paint content condition met reproduction problem title expected behavior paint content condition met motivation use case changing behavior paint content one another container please tell us environment angular version browser language typescript", "num": "10517", "d": "8/2016"}, {"title": "setter method using everytime", "body": "x probably bug report sure bug probably componennts firt emmit array second get input display list components correct input using setter run remove first element next loot plnkr example always component set new value counter increment max value first increment component init second first click remove list asked gitter nobody know angular version browser language typescript", "num": "10516", "d": "8/2016"}, {"title": "root component nt present page angular throws multiple exceptions", "body": "submitting current behavior bootstrapping application browser environment root element nt present page angular throws multiple exceptions course optimal load angular wo nt serve purpose sure would use case erroring manner expecteddesired behavior entryroot component nt present page rather erroring maybe consolewarn would suffice even catching promise multiple exceptions occur reproduction problem reproduced bootstrapping angular app main element host page motivation use case changing behavior nt particularly see use case forcing root app element page legitimate reason would great know otherwise almost think overkill please tell us environment angular version browser language typescript", "num": "10515", "d": "8/2016"}, {"title": "typo deprecated angular cheat sheet docs", "body": "angular version angular cheat sheet documentation routing navigation import statement listed routeconfig longer router routerconfig believe hooks mentioned section also deprecatedremoved routeronactivate routeronreuse etc could wrong", "num": "10514", "d": "8/2016"}, {"title": "ngmodel initially sets text input last property value array objects using angularforms", "body": "submitting check one x current behavior using forms library bind property object derived ngfor text input initial value text input value property last item array expecteddesired behavior initial value textboxes value property object reproduction problem motivation use case changing behavior happens using form library omit forms library functions normally user form utilizes arrays iterate similar objects reliability form poor please tell us environment angular version browser chrome language typescript transpiling", "num": "10511", "d": "8/2016"}, {"title": "flow type information across ngforlike directives", "body": "alternative proposal allow template local variables publish type information ides provide better completion thanks chuckjaz clever idea class person first string last string class mycomp items string people person assume template peoplelength itemfirst global variables flow type information var comp mycomp var peoplelettype ngforextracttypefromof comp amp amp comppeople class mycomponentfactory context mycomp ngfor ngfor new ngfor new divinnerfactory create thisngforof thiscontextpeople class divinnerfactory context ngforrow text string create thiscontext implicitfirst expected type ok implicit person thiscontext implicitname expected type error implicit person class ngforrow implicit component need way hint template generated property use type extraction static function use property typetransformation ngforextracttypefromof class ngfor input typetransform ngforextracttypefromof constructor factory factory static extracttypefromof expr iterable return undefined interface factory create interface iterable function component function return null function input function return null try typescript playground", "num": "10510", "d": "8/2016"}, {"title": "ff date pipe repeats string", "body": "submitting check one x current behavior firefox date pipe producing string incorrectly using custom formatting mask aware fact support problems intl api firefox want get backlog expecteddesired behavior date string produced per formatting string reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point unfortunately could nt reproduce plunkr set breakpoint code ran following produces error datepipetransform new date mmddy gt see behavior child component created page via one additional thing note using shortdate format seems work ff feed custom format error occurs expected behavior would expect following code produce datepipetransform new date mmddy gt motivation use case changing behavior please tell us environment angular version browser chrome xx firefox ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10509", "d": "8/2016"}, {"title": "tutorial pt routing problemconcern", "body": "submitting check one x current behavior following code pt tutorial routing nt work specifically getherothen promise ngoninit async causes error template first attempt interpolate heroname heroid occurs hero still undefined get sorts ugly red errors saying read property nameid undefined found moving promise constructor works nt seem like good practice debugging good solution import component oninit ondestroy angularcore import activatedroute angularrouter import hero hero import heroservice heroservice component selector myherodetail templateurl appherodetailcomponenthtml export class herodetailcomponent implements oninit ondestroy hero hero sub constructor private heroservice heroservice private route activatedroute ngoninit thissub thisrouteparamssubscribe params gt let id params id thisheroservicegethero id hero gt thishero hero ngondestroy thissubunsubscribe goback windowhistoryback please tell us environment angular version browser language typescript", "num": "10508", "d": "8/2016"}, {"title": "router outlet activate event nt seem fire", "body": "submitting check one x current behavior activate event nt fire expecteddesired behavior activate event fire reproduction problem parent component child routes one default option link go child routes activate event nt fire router outlet expected behavior activate event fire motivation use case changing behavior please tell us environment plunker angular version browser chrome xx language typescript xx", "num": "10507", "d": "8/2016"}, {"title": "unexpected behavior html object interpolation ie", "body": "submitting check one x current behavior using html object tag show pdf document webpage data attribute provided angular interpolation result dark page ie working expected chrome doclocation stringdocstrainingpdf expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior behavior html object google chrome across browsers motivation use case changing behavior please tell us environment angular version browser ie language typescript", "num": "10506", "d": "8/2016"}, {"title": "validation attribute binding nt work fine", "body": "submitting check one x current behavior bind validation attributes ngmodel nt expose correct errors set binding attribute ngmodelerrors never expose error set binding attribute ngmodelerror error wrong pattern value null expecteddesired behavior ngmodelerrors expose correct errors validation ngmodelerrors expose validation ngmodelerrors expose reproduction problem plunkr two inputs validation attributes showing value classes ngmodel validation errors first one attributes setted values works fine second one validation attribute bindings required works fine never apperars validation errors wrong value example pattern requiredpattern null actualvalue dd seems work fine think due native htmlinputelement implementation expected behavior think able bind directly without attr preffix important ngmodelerrors expose correct error used show error messages motivation use case changing behavior need validation attribute binding order create custom input components example see mdinput implementation angular material binding however nt work please tell us environment angular version browser language typescript", "num": "10505", "d": "8/2016"}, {"title": "multiple aux route working component", "body": "submitting check one x current behavior multiple aux route component activated time expecteddesired behavior multiple aux route component activated time reproduction problem motivation use case changing behavior aux routes powerful feature new routing engine multiple situation one needs activate multiple aux routes eg may aux routes showing chat window another one showing tools main component please tell us environment angular version angular router version", "num": "10504", "d": "8/2016"}, {"title": "probably async tests use expected zone", "body": "calling function uses injectorget retrieve ngzone tasks microtasks macrotasks occur part added zone instantiated called using whatever zone constructor run means called outside direct child result tasks spawned calling added zone instead testing zone test uses either example ts beforeach inject tcb testcomponentbuilder gt builder tcb test something fakeasync fakeasync gt let appfixture componentfixture buildercreateasync somecomponent fixture gt appfixture fixture flushmicrotasks expect appfixture tobetruthy fail appfixture undefined call cause ed function execute task added zone workaround write function returned called current zone forked expected zone runs instantiates consumed causing microtasks added expected zone cc igorminar mhevery juliemr", "num": "10503", "d": "8/2016"}, {"title": "router path matching fails route parameter includes forward slash", "body": "using routes loggedout user tries go redirects user successfully redirected far good problem open new browser tab navigate directly router fails match instead taken browser url bar changes path matched accessed directly string prepended value parameter case replace new browser tab navigate router recognizes route loads problem may presence parameter try navigating directly router successfully matches path", "num": "10502", "d": "8/2016"}, {"title": "http options implimented", "body": "submitting check one x current behavior required use http options expecteddesired behavior implemented similar reproduction problem call fails method found expected behavior would method would return web server options request motivation use case changing behavior use http methods etc please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10500", "d": "8/2016"}, {"title": "hostbinding working input properties", "body": "submitting current behavior defining hostbinding attribute directive referring input property host component update host property changing value expecteddesired behavior hostbinding probably apply properties host including input properties reproduction problem plunker stackoverflow question answer solution using template reference variable expected behavior example attribute directive feed input property component motivation use case changing behavior see plunker could useful want create directive feeds input component please tell us environment angular version browser chrome likely applies language typescript likely applies", "num": "10499", "d": "8/2016"}, {"title": "issue metadataresolverts gettransitivemodules function", "body": "submitting current behavior metadataresolverts debug stack trace shows null object included array causing following error reproduction problem maints import enableprodmode angularcore import platform angularplatformbrowserdynamic import environment appenvironment import rxjsaddoperatordo import appmodule appappcomponent environmentproduction enableprodmode consolelog platformplatformbrowserdynamic bootstrapmodule appmodule appcomponentts import component oninit applicationref ngmodule angularcore import formsmodule angularforms import title browsermodule angularplatformbrowser import routerdirectives activatedroute routermodule angularrouter import translateservice translateloader translatestaticloader import navbarcomponent sharedcomponentsnavbarcomponent import footercomponent sharedcomponentsfootercomponent import signincomponent sessionsessionsignincomponent import homecomponent homecomponentshomecomponent import sessionservice sessionsessionservice import useraccountservice useraccountuseraccountservice import locationstrategy hashlocationstrategy angularcommon import stylingservice sharedservicesstylingservice import passwordvalidationservice sharedservicespasswordvalidationservice import approutes routesapproutes import authenticatedhttpclient sharedservicesauthenticated import http angular import momentlocalefr import moment moment component selector app template directives navbarcomponent footercomponent signincomponent homecomponent routerdirectives export class appcomponent implements oninit constructor private translate translateservice private sessionservice sessionservice private titleservice title private activatedroute activatedroute let userlang fr translateuse userlang momentlocale userlang ngoninit thissessionservicereloadpersonalinfo settitle event fixme remove consolelog later consolelog event ngmodule declarations appcomponent homecomponent imports browsermodule routermoduleforroot approutes formsmodule homecomponent providers sessionservice useraccountservice authenticatedhttpclient stylingservice translateservice passwordvalidationservice provide locationstrategy useclass hashlocationstrategy provide translateloader usefactory gt new translatestaticloader json deps http entrycomponents appcomponent homecomponent export class appmodule ngdobootstrap appref applicationref apprefbootstrap appcomponent please tell us environment angular version latest github master august browser chrome language typescript anyone please tell could cause issue bug problem configuration could nt error message explicit", "num": "10497", "d": "8/2016"}, {"title": "looping binded input ngfor iterator problem", "body": "submitting check one x plnkr appts load big array notice array ends x z elements array input array selection range also input moved navigator dragging navigator makes move array box red section drag left side navigator towards right sometimes elements displayed correct position check x z end box check console see iterator messed sometimes angular version browser chrome language typescript", "num": "10495", "d": "8/2016"}, {"title": "componentless parent resolve properly loaded", "body": "angular router config mentioned implement get parent state params data child trying get parent resolve child component constructor parent resolve injected time onlybut network call fire get parent resolve data wont child component wait parent resolve angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10494", "d": "8/2016"}, {"title": "menu breadcrumbs", "body": "think new router must also allow creating menu breadcrumbs plans", "num": "10491", "d": "8/2016"}, {"title": "question singlepage applications", "body": "hello official website seems used singlepage applications want know whether suitable multipage applications recommended multipage applications", "num": "10490", "d": "8/2016"}, {"title": "ngfortrackby function wrong context", "body": "submitting check one x current behavior access internal context class defined via expecteddesired behavior able access internal context class defined reproduction problem motivation use case changing behavior trying create dynamic listgrid component wo nt know tracking id configuration set dynamically need able track something within context component please tell us environment angular version browser language typescript", "num": "10485", "d": "8/2016"}, {"title": "ngc metadata opaquetoken located nt part program", "body": "resulted problem debugged chuckjaz", "num": "10482", "d": "8/2016"}, {"title": "focusevent relatedtarget null sometimes", "body": "submitting check one x current behavior lose focus certain dom find target dom sometimes ca nt figure situation happens frequently explain log event see relatedtarget null expecteddesired behavior relatedtarget works inputs like could nt make work anywhere else motivation use case changing behavior want know lost focus another dom inside form collapse form inputs wrong open solutions since nt enough wiki web please tell us environment webstorm angular version browser latest chrome language", "num": "10481", "d": "8/2016"}, {"title": "multiple level children routes", "body": "way multiple level children routes one router outlet abc abcd ab routeroutlet thanks submitting check one x bug report x feature request support request gt please submit support request instead see current behavior seems like every route one routeroutlet expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "10480", "d": "8/2016"}, {"title": "ngoninit issue", "body": "problem ca nt consistently reproduce app loads ngoninit function nt always run right away rest page functions correctly ngoninit function run seconds sometimes minute later nt know could causing might zonesjs application lifecycle think something preventing ngoninit function running rightaway even page visually reloads nt know check hanging", "num": "10478", "d": "8/2016"}, {"title": "read property pathswithparams undefined", "body": "submitting check one x current behavior console error least using two routes path one optional parameter also using path parameter looking params object eg object empty error using webpack entirely sure stacktrace nt pretty could nt get info however little debugging compiled js files afraid found source know code changed looking master branch seems come point assume nt empty error shows expecteddesired behavior nt console error message route chosen based parameter provided missing parameter filled params object assuming parameter reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point sure create plnkr either way simply using two routes path query parameter difference result expected behavior written motivation use case changing behavior allow one use optional query parameter rout way tried way found one angular please tell us environment windows node angular version browser chrome official build language typescript", "num": "10477", "d": "8/2016"}, {"title": "using latest builds angular gives following error provider ngcontrol ngmodule dynamicmodule", "body": "submitting current behavior get following error message upon application startup since switching using latest dependencies master github dependencies section expecteddesired behavior application used load properly switched latest versions angular master github reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point please tell us environment angular version latest github master august browser chrome language typescript xx opened question", "num": "10476", "d": "8/2016"}, {"title": "bootstrap modal window causes change detections angular", "body": "x bug report current behavior change detection performed regardless bindings template expecteddesired behavior change detection reproduction problem make dummy project simple bootstrap modal window expected behavior change detection motivation use case changing behavior performance strange bugs property changed change detection please tell us environment angular version browser language typescript import component elementref viewchild angularcore component moduleid moduleid selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app works viewchild modal modal elementref ngafterviewinit void jquery thismodalnativeelement modal ngdocheck void consolelog check", "num": "10475", "d": "8/2016"}, {"title": "error new router", "body": "current behavior nested parentchild routes route redirects buggy following route configuration works perfectly ts approutests const routes routerconfig path component launchcomponent freelancerdashboardroutes parentchild route definition listed first path freelancerdashboard redirect route definition redirectto freelancerdashboardprojects pathmatch full freelancerdashboardroutests export const freelancerdashboardroutes routerconfig path freelancerdashboard component freelancerdashboardcomponent children path projects component freelancerprojectscomponent path account component freelanceraccountcomponent path freelancers component freelancerteamcomponent however slightly different route definition work changing order parent child redirect routes defined makes impossible access child routes ts approutests const routes routerconfig path component launchcomponent path freelancerdashboard redirectto freelancerdashboardprojects redirect route definition pathmatch full freelancerdashboardroutes parentchild route definition freelancerdashboardroutests export const freelancerdashboardroutes routerconfig path freelancerdashboard component freelancerdashboardcomponent children path projects component freelancerprojectscomponent path account component freelanceraccountcomponent path freelancers component freelancerteamcomponent short parent redirect route defined children routes trying navigate child route results redirect occur reach child route expecteddesired behavior nested parent route redirects work regardless order defined reproduction problem create new project angular cli setup routing shown expected behavior nested parent route redirects work regardless order defined motivation use case changing behavior normal use developers encounter bug may think simply switching order goal navigating parent route redirect child default child view visible without user navigate manually please tell us environment angular version browser language typescript", "num": "10474", "d": "8/2016"}, {"title": "feature request make propertyevent binding syntax optional web components implemented using", "body": "submitting check one x current behavior component selector somecomponent export class somecomponent input someinputproperty output someoutputproperty new eventemitter expecteddesired behavior component selector somecomponent export class somecomponent input someinputproperty output someoutputproperty new eventemitter expected behavior able consume web components implemented using plain old html attribute syntax without pollute markup propertyevent binding syntax data binding syntax inputs outputs unnecessary noise use component metadata figure attributes markup correspond bindable properties markup web components implemented using remains plain old vanilla thereby making much maintainable portable adaptable future versions angular motivation use case changing behavior team begun process evaluating large investment would like move investment part architecture large suite reusable web components implemented using directives apps use web components exclusively build views words none views apps syntax inside instead markup views consists exclusively plain old html web components implemented using directives example apps binding input happens like none apps ever bind input like number reasons architecture one facilitate future upgrades client side web components framework stage right trying find new framework implementing web components naturally would like move since currently use couple sprints evaluating run couple problems one problems subject request nt believe propertyevent binding syntax architecturally good idea adds noise markup makes less portablemaintainable besides everything needs make things work already component metadata least web components implemented using reason behind binding markup syntax support arbitrary web components implemented using something besides well first think general much less common use case happen case one could use propertyevent binding syntax force everyone use necessary least time like lot see seems like key architecturally solid ideasprinciples abandoned one plain old vanilla web component syntax went hand hand able use plain old objects sources data binding also disagree handling data binding context aka scope subject another request thank listening please keep excellent work grateful", "num": "10473", "d": "8/2016"}, {"title": "feat ngmodule consider removing need list every routingcomponent declarations", "body": "submitting check one x current behavior import routes routes config ts import dashboardcomponent dashboarddashboardcomponent import settingscomponent settingssettingscomponent import aboutcomponent aboutaboutcomponent import logincomponent loginguard userresolver loginindex import notfoundcomponent notfoundnotfoundcomponent import taskscomponent taskstaskscomponent export const approutes routes path component dashboardcomponent path settings component settingscomponent path component aboutcomponent upgrading ngmodule need import whole list bootstrapfile mainmodule ts import dashboardcomponent dashboarddashboardcomponent import settingscomponent settingssettingscomponent import aboutcomponent aboutaboutcomponent import logincomponent loginguard userresolver loginindex import notfoundcomponent notfoundnotfoundcomponent import taskscomponent taskstaskscomponent ngmodule imports browsermodule formsmodule routermoduleforroot approutes entrycomponents appcomponent declarations dashboardcomponent settingscomponent aboutcomponent logincomponent notfoundcomponent taskscomponent bootstrap appcomponent class mainmodule quite lot copy paste expecteddesired behavior would assume pass routingconfig routermodule possible angular add routingcomponents like automatically module whereas directives ngmoduleapproach means less work routingcomponents currently means work would cool reduce need copypasting please tell us environment angular version browser language", "num": "10472", "d": "8/2016"}, {"title": "put request makes post request", "body": "submitting check one x current behavior submitting http put request without subscribing observable sends post request instead expecteddesired behavior suitable error else make put request reproduction problem called line code thissocialmediaaccountserviceupdate thissocialmediaaccountid thissocialmediaaccount socialmediaaccountservicets update id socialmediaaccount observable let url thissocialmediaaccounturl socialmediaaccounts id let body jsonstringify socialmediaaccount let headers new headers contenttype applicationjson let options new requestoptions headers headers update method makes post request please tell us environment angular version language typescript", "num": "10470", "d": "8/2016"}, {"title": "privefr", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10469", "d": "8/2016"}, {"title": "angular forms include control property detect current control value one received component init", "body": "submitting check one x current behavior new forms module property pristine control turns false value control changes however changing value user returns original one pristine property remains false example user clicks edit email form input email starts value current email already inserted user deletes one letter save button changes disabled enabled user puts back letter ideally save button become disabled since changes made reasons pristine go back however another property checks current value different original one expecteddesired behavior way detect current value input control different one received ngmodel binding component initialized even value changed changed back original one motivation use case changing behavior adjusting form css classes form according current input values vs ones filled component initialized ie independently form control touched value change original angular version angularforms language typescript", "num": "10468", "d": "8/2016"}, {"title": "index uncaught syntaxerror unexpected token", "body": "submitting check one x current behavior hi code trying get google trends keywords via url converts last bit check network tab see response returns unexpected token error console expecteddesired behavior looking way fetch google trends use app tried http jsonp even pure xmlhttprequest methods google server trends provide cors know according whois info appspotcom belongs google http xmlhttprequest working jsonp approach returns error mentioned honest sure call bug jsonp works fine urls ie wikipedia since appspotcom owned google wonder could give insight reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10467", "d": "8/2016"}, {"title": "issues page missing refresh current page", "body": "submitting check one x current behavior get page missing refresh current page eg first link page exception expecteddesired behavior think bug ca nt confirm belongs expected correct show page reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior expected correct show page motivation use case changing behavior please tell us environment angular version browser chrome version language typescript thanks advance", "num": "10466", "d": "8/2016"}, {"title": "controlvalueaccessor add dynamically formgroup", "body": "submitting check one x current behavior develop new controlvalueaccessor really easy add form template way add dynamically using method formgroup every time call method exception method found could use controllvalueaccessor template calling formgroup directly interface respected programmatically work abstractcontrol expecteddesired behavior way behavior controlvalueaccessor template code reproduction problem see console error setparent method please tell us environment angular version browser language typescript", "num": "10465", "d": "8/2016"}, {"title": "router children work", "body": "refer official doc guiderouterhtml childroutingcomponent code approutests adminroutests runing error removed children adminroutests admin work fine", "num": "10463", "d": "8/2016"}, {"title": "custom formcontrols added parent", "body": "submitting check one x current behavior using custom formcontrol inside template driven form form valid without formcontrol valid debugging bit found addcontrol called ngform input form unless custom formcontrol guessing problem lies tried find manual way add control defining whole form model ca nt find way expecteddesired behavior input field form custom control added parent case ngform default parent invalidated control presumably overwritten however providing custom validation parent reproduction problem reproduced plunker create motivation use case changing behavior custom form validation without defining entire form model please tell us environment angular version browser chrome language typescript", "num": "10462", "d": "8/2016"}, {"title": "viewchild subclass kills viewchild abstract superclass", "body": "submitting check one x current behavior subclass component field marked field abstract superclass evaluate expecteddesired behavior superclass subclass populated reproduction problem superclass populate subclass template subclass commented uncommented subclass populated superclass one expected behavior superclass subclass populated motivation use case changing behavior multiple components inherit common code supply template linked plunkr demonstrates use case abstract class encapsulates code logic common feature performing search child component provides specific template element found whatever divergent behavior please tell us environment angular version browser chrome language typescript", "num": "10461", "d": "8/2016"}, {"title": "issue passing data parent component child", "body": "submitting check one x current behavior dealing parent child component list parent action triggered item child component reusable one think picker kind scenario load data list based selected parent achieving calling method inside child component parent component accept selected item id parent update property child component update actually updating child component property could able proceed loading child data parent rendering client calling way thisgrouppickeropen selid client control goes load event selid undefined reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expecteddesired behavior updated component value available across component life cycle please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10456", "d": "8/2016"}, {"title": "unclear error message incorrectly using click template", "body": "submitting check one x current behavior using click incorrectly template ie one receives unclear error message hard diagnose error message expecteddesired behavior better error message sake newcomers angular reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment windows angular version browser chrome language typescript", "num": "10455", "d": "8/2016"}, {"title": "inmemorybackendservice error collectionreduce function", "body": "submitting check one x current behavior getting error using inmemorybackendservice mock login post request expecteddesired behavior error receive data data seed file response reproduction problem plunk look auth hero button next add hero button enter hero name text box left click button watch console error logged error collectionreduce function expected behavior error get auth data seed file back response motivation use case changing behavior need able mock http service calls return single object post please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx typescript latest", "num": "10454", "d": "8/2016"}, {"title": "staticreflector sometimes find metadata symbol", "body": "submitting check one x current behavior staticreflector able find metadata symbol symbol part compilation program used happen symbol reexported another module module reexporting symbol included program used value position type position file file referenced symbol metadata occur referencing reexported class metadata annotation expecteddesired behavior static reflector able find metadata class required referenced typescript compile", "num": "10451", "d": "8/2016"}, {"title": "feature request ability access parent component generically", "body": "need ability obtain reference parent component generically without child know type parent component basically need something like pseudocode component template directives child class parentcomponent component selector child class childcomponent constructor parent parent basically need parent field childcomponent reference parentcomponent notice type parent childcomponent generic component used type component know solutions problem entail child knowing type parent think number reasons would useful particular case problem need solve able dynamically generate templates know bindings templates go parent component child component hence need parent reference understand inputoutput bindings work understand components communicate communication work static need dynamic communication components use case large investment many large apps part architecture extensive library web components use throughout views apps want upgrade web components apps use would like reimplement web components using keep views without changes example directive use many views may look something like runtime directive ends producing something like works fantastic many directives like eg checkbox radiobutton datagrid etc use throughout would like reimplement web components using nt want make changes countless number views consume web components proof concept created component replace textbox first attempt component ended template like problem course order work change view follows basically use property binding syntax basically means change views big problem us problem changing implementation web components problem change views many changed implementation textbox component instead produces something like basically component dynamically generates template adds using problem however binding context incorrect textbox component name property instead parent component using textbox component template let call app component name property world problem due way scope worked big problem since binding context component somehow able obtain reference parent app component inside child textbox component could make things work follows asked question like times appears know gain access parent component inside child component least generically without requiring parent child know others types safely matter dig private api example think know obtain parent component instance digging private fields injected viewreferencecontainer safe think requesting feature created plnkr sort demonstrate large investment want move problem reimplementing components using contrary want move also entails changing thousands views quickly costs outweigh benefits doubt would get ok people control money make move move entails changing views nt think precisely one reasons architecture suite web components idea provide layer abstraction web components eventual move modern framework supports web components data binding would relatively easy think close need parent reference somehow hence reason request thank", "num": "10448", "d": "8/2016"}, {"title": "default route working cordova iosandroid applications", "body": "creating angular cordova project support ios android devices functionalities working fine expected browser port code cordova project default url working default url path component landingcomponent getting error android adt bundle like ichromium info console exception error uncaught promise error match routes androidassetwww source file androidassetwwwnodemodules angularplatformbrowserbundlesplatformbrowserumdjs ichromium info console stacktrace source file androidassetwwwnodemodules angularplatformbrowserbundlesplatformbrowserumdjs ichromium info console error uncaught promise error match routes androidassetwww ichromium resolvepromise file ichromium file ichromium zonedelegateinvoke file ichromium objectngzoneimplinnerinnerforkoninvoke file androidassetwwwnodemodules ichromium zonedelegateinvoke file ichromium zonerun file ichromium file ichromium zonedelegateinvoketask file ichromium objectngzoneimplinnerinnerforkoninvoketask file androidassetwwwnodemodules ichromium zonedelegateinvoketask file source file androidassetwwwnodemodules angularplatformbrowserbundlesplatformbrowserumdjs ichromium info console unhandled promise rejection source file androidassetwwwnodemoduleszonejsdistzonejs ichromium info console error uncaught promise error match routes androidassetwww source file androidassetwwwnodemoduleszonejsdistzonejs added base href file androidassetwww android working fine issue still exist ios device also tried path redirectto landing path redirectto landing locationgo landing thisrouternavigate landing thisrouternavigate landing thisrouternavigatebyurl landing thisrouternavigatebyurl landing current behavior navigated default url expecteddesired behavior navigated default url reproduction problem issue reproducible cordova appliction environment tested devices os ios device iphone version os android device samsung version angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade bootstrap corejs reflectmetadata rxjs systemjs zonejs language typescript", "num": "10446", "d": "8/2016"}, {"title": "host content css sass ampersand produces wrong output", "body": "submitting check one x current behavior css generated wrong space breaks everything expecteddesired behavior correct css reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point inside component put sass expected behavior generated css instead please tell us environment angular version browser language sass", "num": "10445", "d": "8/2016"}, {"title": "errors using navigation routing plain javascript", "body": "submitting check one x current behavior nt provide routing navigation using plain javascript errors zonejs platformbrowserumdjs expecteddesired behavior navigate new location clicking anchor tag button display new view app component reproduction problem see live code motivation use case changing behavior deprecated routerjs new routerumdjs nt work please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10443", "d": "8/2016"}, {"title": "use injectable service async validator", "body": "submitting bug report want use slug validator form html create fom builder like slug validator injectable service use request server store current company use initialize form builder javascript import injectable inject angularcore import observable rxjsobservable import companyservice companycompanyservice injectable export class companyvalidator constructor private companyservice companyservice slugvalidator control const currentcompany thiscompanyservicegetcompany consolelog currentcompanyurl controlvalue nt use undefined error get console initialize url static string toto nt use async validator nt error thanks help angular version browser language typescript", "num": "10442", "d": "8/2016"}, {"title": "error instantiation state ngupgrade", "body": "submitting current behavior currently upgrading application service uses module downgraded service use components run app browser get following think kind circular dependency using service inside service injecting app expecteddesired behavior following ngupgrade tutorial expect successfully inject diferent providers app reproduction problem involved files currentuserservicets import istateservice angularuirouter currentuserservice injectable export class currentuserservice constructor inject state private state istateservice appts please tell us environment angular version browser language typescript", "num": "10441", "d": "8/2016"}, {"title": "improve errors exported factories modules", "body": "submitting feature request given following configuration see following error error due fact function exported identify mistake provide useful error message actionable module developer cc vsavkin", "num": "10436", "d": "8/2016"}, {"title": "class inheritance decorator behaves differently bootstrapcomponent providers", "body": "submitting check one x current behavior create decorator used service class dependencies injected dependencies accounted using decorator works fine add service provider app component provider bootstrap bootstrap providers component providers expecteddesired behavior nt know specific reason work would great motivation use case changing behavior working package contain services use custom decorators would ideal implement bootstrap please tell us environment angular version browser chrome language typescript", "num": "10435", "d": "8/2016"}, {"title": "compilercli creating duplicate imports", "body": "submitting check one x current behavior ngc creating following code appcomponentngfactoryts notice refer file creates naming conflict turn breaks dependency injection provider found componentfactoryresolver used rollupjs even nt case would unnecessarily increase project code size original appcomponentts file looks like typescript import component angularcore import routeroutlet angularrouter import selectorpagecomponent pagesselectorcomponent import navigationservice modelnavigationservice component selector myapp directives routeroutlet providers navigationservice template precompile selectorpagecomponent export class appcomponent navigationservice imports angularrouter appcomponent given order imports ngfactory file seems source issue may related somehow although ngc succeeds without warnings different issue expecteddesired behavior regardless cause ngc never import exact thing twice reproduction problem yet figured reproduce exact problem smaller project anybody insight might cause happen using angularcompilercli ngc angular fairly standard tsconfigjson file one odd thing nt seem anything hoped would shed insight imported files coming please tell us environment angular version browser language typescript", "num": "10434", "d": "8/2016"}, {"title": "custom input nt sent param using ngnoform", "body": "hi situation custom field nt shown param list http request inspect confirm values null reach server however conventional html input sent correctly intend like bug best", "num": "10433", "d": "8/2016"}, {"title": "forms error checking prevents formgroupname used formarrayname", "body": "submitting check one x current behavior array could child groups array like html current builds error checks added line prevents expecteddesired behavior consider allowing conditional right line include arrays perhaps add formarrayindex directive angular version angularbuilds", "num": "10432", "d": "8/2016"}, {"title": "unable prevent routerlink navigating", "body": "submitting check one x current behavior attempting prevent navigation routerlink calling preventdefault event effect expecteddesired behavior navigation canceled reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point see expected behavior clicking link one want go two navigate component one specified routerlink navigate component two instead since click bound function calls eventpreventdefault navigates two motivation use case changing behavior want able dynamic default routes ie hard coded router config real use case want dynamically route last child component used parent using routerlink instead code since also want user able right click choose open new window please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome language typescript xx using typescript", "num": "10431", "d": "8/2016"}, {"title": "hashlocationstrategy fires locationchange twice using browser buttons", "body": "submitting check one x current behavior subscribe location service running application haslocationstrategy subscription fire twice using browser navigation buttons causes issues like calling guards twice router expecteddesired behavior subscirption fire like running pathlocationstrategy mode reproduction problem use navigation sample angular documentation change location strategy subscribe location experience bug expected behavior motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10430", "d": "8/2016"}, {"title": "add useful stuff ngc angularcompileroptionstrace", "body": "print phases compilation files program paths calculate configuration etc cc igorminar", "num": "10429", "d": "8/2016"}, {"title": "remove animations still broken ngfor", "body": "remove animations still pushed end dom container moves inserts present operation", "num": "10427", "d": "8/2016"}, {"title": "new form api validation lead responding mode", "body": "hi using angularforms added email validation form set max length type characters leads application hang mode check issue plunkr feel due validation user keypress event please check issue angular version", "num": "10426", "d": "8/2016"}, {"title": "requestupload progress handling via angularhttp", "body": "current behavior want attach events using need put hands default backendconnection provided override provider http injecting modified backendconnection expecteddesired behavior invoke get post put http want able optional listen upload progress underlying connection want least intrusive way glance source see possibility implement optional property requestoptions andor request object could type subject abstract connection could additional optional property time connectionimplementation supports progress could next subject passing specified requestprogressevent interface given option undefined connectionimplementation support could either ignore emit events mock state sending start end events sure yet way would best requestprogressevent could abstract concrete events used example xhr common interface connection supports could adapt internal impl interface usage could look like sure instantiation subject omitted passing shorthand nexterrorcomplete progressoption something iv overlooked makes good approach updated escaped lessthangreaterthan characters generic type visible", "num": "10424", "d": "8/2016"}, {"title": "biding array elements using ngmodel inside ngfor", "body": "submitting using bind values array number inputs time making changes inputs bindings stop working properly updating wrong inputs issue seems happen inputs generated inside ngfor keep one eye input top right reproduction problem open demo stress first row inputs firing changes random weird things happen notice making changes second row inputs reproduce issue please tell us environment angular version browser chrome beta language typescript targeting", "num": "10423", "d": "8/2016"}, {"title": "http client request", "body": "submitting check one x x bug report current behavior response locally use get request expecteddesired behavior show response currently acting server unreachable repeat locally external host connects show results works fine let url return res gt resjson server reproduction problem let reiterate use ip application works fine use mobilelaptop devices connect lan server server see results tests application also problem nt network since get request functioning right test browserpostman app using ip address expected behavior show server results showing clients server acts client motivation use case changing behavior happens server testing phase maybe client also experience error please tell us environment windows professional angular version wamp server apache version angularcli node os browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx angularcli typescript", "num": "10422", "d": "8/2016"}, {"title": "support transition animation safari firefox", "body": "current behavior indexcomponenthtml html state transition animations nt work safari firefox directly switch one state without transition codes run right chrome opera expecteddesired behavior expected work chrome motivation use case changing behavior angular version browser firefox safari language typescript", "num": "10420", "d": "8/2016"}, {"title": "custom end condition ngfor", "body": "hi angular awesome however think something important missing ngfor builtin directive taking example something actually working picture gallery pic whichindex id pic currentindex id pic currentindex id pic whichindex id pic currentindex id pic whichindex id easy case end condition lt picslength need end condition lt currentindex able customize end condition important feature opinion anything planed thank much work", "num": "10419", "d": "8/2016"}, {"title": "router error extraoptions parm call", "body": "submitting check one x current behavior application fails second parameter call reason unable set parameter default value function crashes trying execute null true despite signature expecteddesired behavior default second parameter reproduction problem try routed application calls workaround please tell us environment angular version candidate july", "num": "10418", "d": "8/2016"}, {"body": "creating issue please fill templates provide plunker many incoming issue afford spending time", "d": "8/2016"}, {"body": "could please provide examples advanced form usage documentation", "d": "8/2016"}, {"body": "provide plunker figure run code even better pr failing integration test thanks", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "thanks pkozlowskiopensource hard time finding documentation", "d": "8/2016"}, {"body": "ericjim could open issue doc repo thanks", "d": "8/2016"}, {"body": "vicb", "d": "8/2016"}, {"body": "need doable event manager plugin low priority side", "d": "8/2016"}, {"body": "redirecting leading slash path considered absolute handled use relative redirect work correctly gets child routes", "d": "8/2016"}, {"body": "internal api supposed use apps", "d": "8/2016"}, {"body": "yes valid imports generally everything else private api part repackaging enforce", "d": "8/2016"}, {"body": "anyone bumping similar issue need troubleshoot hints private import break syntax errors offending import private internals come code thridparty code might using using webpack see files resolved included adding flags dump info gets included help locate broken imports", "d": "8/2016"}, {"body": "ok obtain global variable", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "closing dup", "d": "8/2016"}, {"body": "nt instead please provide plunker requested issue template", "d": "8/2016"}, {"body": "write whole line work create plunker", "d": "8/2016"}, {"body": "create plunker please", "d": "8/2016"}, {"body": "dont know syntax providers specified correctly could find docs found tried ways work creating plunker takes bit time try correct way provide correct example syntax work create plunker", "d": "8/2016"}, {"body": "ps tried three different ways know please tell platformbrowserdynamic bootstrapmodule testmodule providers provide testapi usevalue thistestapi", "d": "8/2016"}, {"body": "valid syntax provide plunker otherwise ca nt move forward one", "d": "8/2016"}, {"body": "ok", "d": "8/2016"}, {"body": "created plunker hope missed anything idea clear updated plunker got error", "d": "8/2016"}, {"body": "providers used bootstrap compiler compiles components part application injector need specify app module", "d": "8/2016"}, {"body": "way add providers module dynamically hacking metadata btw setting providers bootstrapping application way trying everything worked fine", "d": "8/2016"}, {"body": "vytautaspranskunas able provide providers dynamically would break offline compilation supported set providers needs know statically dynamically one bind provider factory one freedom create value provider sufficient ability dynamically add provider present static analysis strange provider needs configuration site injected user adding one without useful closing working intended", "d": "8/2016"}, {"body": "mhevery think vytautaspranskunas asking slightly different question let say data need retrieve rest api beginning application services rely information maybe ng service needs baseurl provided rest service something similar could done way something like nt need provide different providers dynamically lifecycle application services might rely information needs available prior application bootstrapping", "d": "8/2016"}, {"body": "christiantoms mhevery answered question read carefully done bootstrap keeps angular happy aot compiler knows config provided call factory function bootstrapping get value bootstrap time value already set ready read", "d": "8/2016"}, {"body": "expressions like classhidden b impossible used saying supported today please provide plunker reproduce scenario otherwise actionable", "d": "8/2016"}, {"body": "bug another test works looks like variable method object changes reflecting view", "d": "8/2016"}, {"body": "bug non working plunker use object use expression well etc closing nt think bug solved side", "d": "8/2016"}, {"body": "created plunker ca nt see described problem maybe sth specific env case issue nt belong please open still believe pb end", "d": "8/2016"}, {"body": "add errors looks like using umd bundles one request per bundle", "d": "8/2016"}, {"body": "looking templateparser createdirectiveasts line stopping seems empty using syntax populated directive using syntax understand reading code syntax directives require parsing first pass element treated raw element raw property name also directive yet parser detects needs desugar full template syntax transform template send step problem step validity check references see lines check runs step step still nt directive reference means directive exports reference test run completedesugared templates sugared templates", "d": "8/2016"}, {"body": "tbosch look valid issue", "d": "8/2016"}, {"body": "since current browser nt build module loader", "d": "8/2016"}, {"body": "myguddy base href probably incorrect reproduce plunker otherwise", "d": "8/2016"}, {"body": "need plunker investigating without plunker time intensive look otherwise closing please open new issue plunker", "d": "8/2016"}, {"body": "aot mode one using umd bundles instead one using module code npm module nt think valid take jit example convert aot want use aot use angulacli", "d": "8/2016"}, {"body": "packumd function quickstart example var setpackageconfig systempackagewithindex packindex packumd good know aot use umd bundles use angularcli hope info would later make documents aot find good simple quickstart aot example take jit example convert aot release blog run app aot mode required changing maints work met issue thought guys someone else trying thing may want know", "d": "8/2016"}, {"body": "reproduce issue downloading application would nt expect anyone download execute random code internet bug report report plunker minimal amount code allows reproduce issue required github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "zoechi right sounds like support request think real bug please reopen minimal plunker thanks", "d": "8/2016"}, {"body": "chuckjaz error message seems bit contradictory initially says field missing define says duplicate might missing something though", "d": "8/2016"}, {"body": "would marking help option wo modifying source code use factory", "d": "8/2016"}, {"body": "nt codegen problem per se typescript thing exposed codegen aot nt typechecking see mechanics way reason surfaces xhrbackend places httpbackend type interface default setup http probably create abstract httpbackend type use constructor param http module", "d": "8/2016"}, {"body": "robwormald response confuses one interface would nt work jit either second class interface master entire class injectable export class xhrbackend implements connectionbackend constructor private browserxhr browserxhr private baseresponseoptions responseoptions private xsrfstrategy xsrfstrategy createconnection request request xhrconnection thisxsrfstrategyconfigurerequest request return new xhrconnection request thisbrowserxhr thisbaseresponseoptions type private property browserxhr constructor also class vicb ctor signature would adding decorator help", "d": "8/2016"}, {"body": "nt say xhrbackend interface said connectionbackend interface base type actually abstract interface di depending however use factory provide http consumers forced override xhrbackend incorrect thus generated code calls factory run issue ts linked way implement something like httpmodule want override backend tldr xhrbackend implementation connectionbackend consumers http module override xhrbackend override connectionbackend currently possible wired interim get around problem", "d": "8/2016"}, {"body": "robwormald oh see something mean yes class implements rather extends private members like still nt get makes difference still class transpiles function function clearly generated javascript works lookup symbol di purposes anyway mean ca nt use aot solution fix get fix queued angular project fwiw", "d": "8/2016"}, {"body": "runtime problem typechecking problem basic issue typescript comparing wrong fails xhrbackend unoverridable implementation per ts issue comparing zero implementation detail thus implemented properly", "d": "8/2016"}, {"body": "struggling suggested workaround afaik requires provide replacement nt replacement would nt want use would mean prevented application developer substituting hisher implementation missing something crucial di experience never mattered provider lookup symbol relation whatsoever provided thing obligation compared anything else matters something asks di give instance apparently aot changes rules nt understand seems hosed aot foresee whole bunch failures kind simply someone told di something asks give b nt see lay doorstep typescript", "d": "8/2016"}, {"body": "tried workaround nt quite get work custom factory export function mycustomhttpfactory options return fakebackend inmemorybackendservice http gt return new http fakebackend options ngmodule export class inmemorywebapimodule static forroot dbcreator type options modulewithproviders return ngmodule inmemorywebapimodule providers provide http usefactory mycustomhttpfactory options deps inmemorybackendservice provide seeddata useclass dbcreator provide inmemorybackendconfig usevalue options think issue factories allowed aot compiler least fails error similar errors seen try clever add logic building object", "d": "8/2016"}, {"body": "spoke wardbell alternative factory syntax tried instead export function mycustomhttpfactory inmem inmemorybackendservice return http gt return new http inmem null ngmodule export class inmemorywebapimodule static forroot dbcreator type options modulewithproviders return ngmodule inmemorywebapimodule providers provide http usefactory mycustomhttpfactory deps inmemorybackendservice provide seeddata useclass dbcreator provide inmemorybackendconfig usevalue options compile guess try workaround", "d": "8/2016"}, {"body": "simple workaround ts export const temphttpfactory backend requestoptions return new http backend requestoptions provide http usefactory temphttpfactory deps inmemorywebapi requestoptions current implementation except signature real looking xhrbackend code generated looks something like fails typecheck described ts issue inmemorywebapi incorrectly implements xhrbackend ts team stated wontfix reasoning sound afaict thus correct solution internally angular people want override way everybody today overriding xhrbackend incorrect way actually fix easy need figure way without breaking world", "d": "8/2016"}, {"body": "thanks robwormald helping explain least contemplating fix final hint hint squeak hope one really wants combine inmem backend provider", "d": "8/2016"}, {"body": "guard redirect children", "d": "8/2016"}, {"body": "brandonroberts children attached submodules routing via otherwise entire modules concept failure respect router ca nt global guard app level routes", "d": "8/2016"}, {"body": "also removing redirect app level component configured make difference guard navigation", "d": "8/2016"}, {"body": "crtag create child routes see context modules create hierarchy imported share injector routes app module hero module flattened together hero routes nt children top level configuration", "d": "8/2016"}, {"body": "docs live angulario still flux", "d": "8/2016"}, {"body": "yeah looked information really basic stuff would like see realworld examples crossfield validation conditionalvalidation childcollection validation etc", "d": "8/2016"}, {"body": "tahseen looks like things going sample nt need add module definition included import importing symbols old api lives compatible new api change import form component file point new api form loads expected see sample plunker", "d": "8/2016"}, {"body": "thanks awesome", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "closing duplicate thnx much ericmartinezr", "d": "8/2016"}, {"body": "vicb approved like take already code project decide naming use needed add unit tests pr simple task btw think", "d": "8/2016"}, {"body": "yes good proposal included core everybody write course general repetitive thing standardized also many newcomers appreciate way", "d": "8/2016"}, {"body": "shlomiassaf please nt use process removing create work us later think reasonable feature request please feel free create pr", "d": "8/2016"}, {"body": "mhevery nt know getting removed wanted stick standard project facade replacement", "d": "8/2016"}, {"body": "thanks", "d": "8/2016"}, {"body": "sounds like support request better job error messages cc juliemr", "d": "8/2016"}, {"body": "error related mocha testing using code wrong way", "d": "8/2016"}, {"body": "project include mocha problem confirmed bug", "d": "8/2016"}, {"body": "agreed better error message stefh calling pretty sure getting error", "d": "8/2016"}, {"body": "juliemr including call still facing problem", "d": "8/2016"}, {"body": "indeed without reset call gives problem", "d": "8/2016"}, {"body": "solved issue least time simply needed init testbed like nt forget include import", "d": "8/2016"}, {"body": "fixed commit days ago", "d": "8/2016"}, {"body": "thanks skreborn delivered days", "d": "8/2016"}, {"body": "resolved changes approutests import modulewithproviders angularcore import routes routermodule angularrouter code const approutes routes code export const routing modulewithproviders routermoduleforroot approutes", "d": "8/2016"}, {"body": "nt support forum github issues bug reports feature requests please consider moving discussion appropriate channel", "d": "8/2016"}, {"body": "thx transfered", "d": "8/2016"}, {"body": "fixed via", "d": "8/2016"}, {"body": "thanks ericmartinezr", "d": "8/2016"}, {"body": "someone say add extra using regex constructor function strange works", "d": "8/2016"}, {"body": "tried pretty sure provide sanitizer way recently renamed afair", "d": "8/2016"}, {"body": "definitely way go easy shot foot initial request left issue open multiple url support added cc mprobst", "d": "8/2016"}, {"body": "think makes sense contribute one shared api everybody gets better dom sanitizer eg supports multiple custom regular expressions surprisingly easy get wrong example forgetting anchor could also implement dom sanitizer really custom specific use case issue mention really fixed angular", "d": "8/2016"}, {"body": "mprobst vicb see point pretty understandable said would create vulnerability unexperienced distracted developers also nt think would happen default dom sanitizer runs check set new one nasty bugprone like provider solution zoechi quick custom sanitizers think enough resolve use case presented create new issue improving style domsanitizer regexp reuse one", "d": "8/2016"}, {"body": "create new issue improving style domsanitizer regexp yes please bonus points attach plunker thanks", "d": "8/2016"}, {"body": "interesting mhevery vigorous opponent component inheritance imagine weigh components suggestion generalization plugin router loader recall ability specify loader functionclass mechanisms intersect routes proposal", "d": "8/2016"}, {"body": "subtype imply subclass might better use term assignment compatible slightly correct avoids confusion subtype subclass", "d": "8/2016"}, {"body": "chuckjaz done wardbell sure follow proposing change routes proposes users intercept arbitrary load call right thing api already supports", "d": "8/2016"}, {"body": "mprobst routes gotcha nt sure proposing something new chuckjaz use keyword threw", "d": "8/2016"}, {"body": "clear use required", "d": "8/2016"}, {"body": "chuckjaz updated text use extends explicitly say assignment compatible", "d": "8/2016"}, {"body": "mprobst say componentvariant must content view projection originalcomponent mean must matching template meta api etc", "d": "8/2016"}, {"body": "hey jzissu issue reported angulario repo websitetutorial", "d": "8/2016"}, {"body": "thnx ericmartinezr", "d": "8/2016"}, {"body": "okay thanks subscribe issue make comments", "d": "8/2016"}, {"body": "hey would mind reopening issue angularcli repo", "d": "8/2016"}, {"body": "thnx ericmartinezr", "d": "8/2016"}, {"body": "may also necessitate ability mark template similar feature able prevent class inheritable declaring ctor", "d": "8/2016"}, {"body": "vicb nt think request testing intended label", "d": "8/2016"}, {"body": "juliemr mistake read fast", "d": "8/2016"}, {"body": "toying idea past lot implications feature complex probably revisit past final", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "deprecated version worked happy response use routerdeprecated bug fixed", "d": "8/2016"}, {"body": "want perform action see whether route loaded use guard", "d": "8/2016"}, {"body": "might reason ngif ngfor ca nt element time templates try wrapping routeroutlet div using want stay current way better yet using guards ultimately best solution brandon suggested", "d": "8/2016"}, {"body": "still creating component rendered still security service needs loaded actually anything based security user going redirected different page brandonroberts use guard tried data loaded async canactivate always false also define routes instead using boolean", "d": "8/2016"}, {"body": "guards handle async requests return observable resolves boolean promise resolves boolean return boolean within guard inject router navigate somewhere else effectively cancel previous navigation covered router guide", "d": "8/2016"}, {"body": "needs repro case", "d": "8/2016"}, {"body": "plunker", "d": "8/2016"}, {"body": "steps reproduce", "d": "8/2016"}, {"body": "click one column header table contents nt change sort printed console expected result table contents sorted according corresponding column value reverse order already sort paginate printed console adjust spinner value one table contents change paginate printed console contents sorted stated starting order set spinner value back table contents change sorted per step pipes arguments least according understanding step", "d": "8/2016"}, {"body": "pure click header output change still reference array even though array sorted still input ref array parameters output considered change detection run verify changing code creates new array trigger change detection everything works expected solutions return new array mark pipes non pures trigger change detection hand sort paginate", "d": "8/2016"}, {"body": "deprecated mistaken use", "d": "8/2016"}, {"body": "jpleclerc said", "d": "8/2016"}, {"body": "workarounds sure original code nt work", "d": "8/2016"}, {"body": "working intended callbacks nt automatically run angular zone promises code changes internal variables component run inside zone angular run changedetection", "d": "8/2016"}, {"body": "repro skreborn comment closing", "d": "8/2016"}, {"body": "planned final", "d": "8/2016"}, {"body": "drpain happens mess routes correcting resolves issue provide plunker repro", "d": "8/2016"}, {"body": "hi sirajc tried create plunker ca nt seem get run try tonight work meanwhile perhaps know tutorials create navbar angularjs angularjs way quite jump angularjs nt able find good documentation subject cheers rudi", "d": "8/2016"}, {"body": "sirajc cool got plunker running using tutorial found angulario started modify", "d": "8/2016"}, {"body": "drpain component actually contains element along title modifying solves problem indeed issue code angular framework working plunker", "d": "8/2016"}, {"body": "drpain created navbar implementation refer also check creating issue", "d": "8/2016"}, {"body": "skreborn thanks looking confirming documentation nt give clear indication angular know else print confused hell routeroutlet always appcomponent would correct approach", "d": "8/2016"}, {"body": "sirajc awesome thanks check reference", "d": "8/2016"}, {"body": "hey vaughanjackson would mind reopening websitetutorial lives note also seems fix issue still tell going p", "d": "8/2016"}, {"body": "closing misplaced issue thank ericmartinezr opened angulario issue replace one", "d": "8/2016"}, {"body": "issue lazy loaded modules recreated navigated fixed master already", "d": "8/2016"}, {"body": "false alarm nt pay attention condtion", "d": "8/2016"}, {"body": "vicb maybe intended milestone instead", "d": "8/2016"}, {"body": "easily achieve want using share operator much flexible solution", "d": "8/2016"}, {"body": "fyi even using share still sends two http requests instead one subscribe returned observable going investigate issue wrapping whole thing asyncsubject works exceptionally well appears even performant whatever reason", "d": "8/2016"}, {"body": "ettoredn assume subscription made response first one arrives see also", "d": "8/2016"}, {"body": "yes second stackoverflow solution could improved instantiating asyncsubject class instance created returning asyncsubject every call made service asyncsubject next ed complete ed http observable completed approach ended using", "d": "8/2016"}, {"body": "ettoredn could add answer nt really know observables never saw asyncsubject use dart streams ts answers created answer curiosity angular ts rx works", "d": "8/2016"}, {"body": "thing using use new router route guards accomplish behaviour need extend routeroutlet anymore", "d": "8/2016"}, {"body": "thanks davidbanksnz happen example anywhere man router deal spinning every time turn around refactoring ha ha", "d": "8/2016"}, {"body": "big chapter official docs section guards shows use deny access users nt authenticated", "d": "8/2016"}, {"body": "yeah found thx bud closing", "d": "8/2016"}, {"body": "nt need", "d": "8/2016"}, {"body": "mlaval julie going look first thing monday unless get first", "d": "8/2016"}, {"body": "seems related ex stack", "d": "8/2016"}, {"body": "pr mostly works strictnullchecks", "d": "8/2016"}, {"body": "design rendering process router synchronous present time component rendered router state source truth current url rendered screen", "d": "8/2016"}, {"body": "thanks brandonroberts ok manage something like thanks", "d": "8/2016"}, {"body": "brandonroberts maybe misunderstood original plnkr subsequent update router found correct outlet parent route changing value still allows router find routeroutlet however child route causes router error synchronous reasoning expect neither routeroutlets found original plnkr", "d": "8/2016"}, {"body": "add cents think scenario placing router outlets inside conditionals common place number us seem falling pit failure possible place router outlets inside conditionals guidance workarounds", "d": "8/2016"}, {"body": "jculverwell agree common thing need handle something async involves router outlet handle component without restricting display routeroutlet option use resolver complete async operations route activated", "d": "8/2016"}, {"body": "brandonroberts yes common task delay router component initialization event like user login also functionality routeroutlet ngif perfectly worked", "d": "8/2016"}, {"body": "firov yes guards accomplish instead hiding routeroutlet", "d": "8/2016"}, {"body": "brandonroberts thanks missed forces use separate urls login logout", "d": "8/2016"}, {"body": "may add restricting display routeroutlet sometime mandatory cases ie like placing dynamically routeroutlet list dynamic elements placing routeroutlet ngif may ngfor basically async directives", "d": "8/2016"}, {"body": "integrating existing php project many restriction like needs html route needs defined defined one page still ca nt find one answer telling dynamically load component based per url started using route put route pages get read whole thread past thread", "d": "8/2016"}, {"body": "ibasit going provide context need help reproduction issue plunker would good start", "d": "8/2016"}, {"body": "design rendering process router synchronous routeroutlet present time component rendered router state source truth current url rendered screen brandonroberts thanks clarification feel free close issue using guards ensure asynchronous content loaded displayed asynchronous data ready loading component displayed better design anyways loading component simply removed directive asynchronous data ready", "d": "8/2016"}, {"body": "frederikaalund great ca nt close one team members close", "d": "8/2016"}, {"body": "thnx brandonroberts", "d": "8/2016"}, {"body": "probably missed something rxjs concept works simple pattern flow data producer observed observable subscriber one direction stream course use many operators join streams reduce transform subscriber process incoming data produce another observable others subscribers", "d": "8/2016"}, {"body": "components located one module create project structure one component one module another component another module module module could issue", "d": "8/2016"}, {"body": "think problem somewhere else fully undestand cmps hierarchy previous short description hard guess oh plunk beginning try look", "d": "8/2016"}, {"body": "create plunk hierarchy diagram cmps related observables subscribers", "d": "8/2016"}, {"body": "linked plunker appears work fine probably specific code repro would helpful diagnosing think actual bug otherwise please take question gitter", "d": "8/2016"}, {"body": "ok spend days investigate problem come info later", "d": "8/2016"}, {"body": "find problem probably clearing browser cache code working correct befor need delete old js jsmap files working visual studio server liteserver restart server vs new files generated problem solved", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "definitely need related", "d": "8/2016"}, {"body": "commit master two days ago made optional", "d": "8/2016"}, {"body": "sod oops rebase opening issues grimacing thanks", "d": "8/2016"}, {"body": "reproduce plunker", "d": "8/2016"}, {"body": "probablly pleased say woke morning one eureka moments forgotten id property using guid wrapped guid class guid class single property called str means behaviour although little odd least understandable ca nt get code moment suspect change lik use idtostring would work still believe minor issue framework attempting use complex value simple value makes sense producing strange result understandably result way deal better would toi throw error current behaviour prone confusing way show stopping issue previously thought", "d": "8/2016"}, {"body": "thought probably difficult anything confusing behaviour since correct way provide query string parameters supplying complex value behaviour inevitable coded idabcd clear happening passing value issue ca nt see difference detected run time framework knows complex value work parsing way value coded routerlink practical providing javascript would nt want framework second guess intentions short change way supply query string parameters routerlink guess live seen doubt would phased bet others caught", "d": "8/2016"}, {"body": "search github similar issue pr submitting thanks", "d": "8/2016"}, {"body": "met case looks like missed error adding component route resolve issue", "d": "8/2016"}, {"body": "session route componentless route routes could expressed like fixing problem leads lot duplication particularly using properties componentless routes supposed solve", "d": "8/2016"}, {"body": "currently optimizing space hence minimized output finding reading files often things prettyprinted metadata would make easier", "d": "8/2016"}, {"body": "reading explain angular works", "d": "8/2016"}, {"body": "clear nt think action item angular project moment status quo probably best hope far understand web components structured security story safe values contextaware auto escaping users careful", "d": "8/2016"}, {"body": "cc rjamet koto molnarg", "d": "8/2016"}, {"body": "agree current behavior best", "d": "8/2016"}, {"body": "use pseudo element selector scope styles host element instead content future please fill inn issue template importantly provide minimal plunker ask support forum sure facing bug see", "d": "8/2016"}, {"body": "anybody interested class defined twice used template", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "zoechi work vs", "d": "8/2016"}, {"body": "please provide plunker demonstrates actual behavior explain behavior expect", "d": "8/2016"}, {"body": "could please try see minimal application code causes think simply matter packaging tool finding imports confirm could consolelog whatever importing see defined stacktrace think offensive import comes back undefined root cause needs fixed side folder structure tooling setup etc agree improve error message look following case ca nt guarantee fix problem check confirm hypothesis correct", "d": "8/2016"}, {"body": "hmm actually seems like correctly handle situation already", "d": "8/2016"}, {"body": "thanks pkozlowskiopensource suggestion implemented would explain typeerror instead referenceerror example however ngmodule looks still get exact error type message tried following scenarios eliminate many suspects possible empty object empty imports array basic angular module import javascript import reactiveformsmodule angularforms ngmodule imports reactiveformsmodule exports reactiveformsmodule export class btsangularmodule three cases get null typeerror three cases removing linked module makes error go away app works fine typescript complains referenced installed guessing webpack packaging anyway part main app external module run fine ngmodule browser", "d": "8/2016"}, {"body": "problem cortopy linking another module different angularcore", "d": "8/2016"}, {"body": "done test think problem symbolic links ngmodule", "d": "8/2016"}, {"body": "caballerog would match issues using add module project though linked code available dev server angularcli webpack ngmodule ca nt seem find get typeerror remove import application loads without issue", "d": "8/2016"}, {"body": "copy modules without use work copy nodemodules problems use nix think bug", "d": "8/2016"}, {"body": "confirm happens modules developing locally via running", "d": "8/2016"}, {"body": "got error obviously incorrectly adding nonmodule service imports module better error message incorrect module declaration module would saved lot time", "d": "8/2016"}, {"body": "issue may related webpack resolving symbolic links problem triggered using systemjs installing without using resolves issue message uncaught typeerror read property type null bit cryptic think already addressed another issue", "d": "8/2016"}, {"body": "playing well basically seems control create value accessor receive update control reset touch", "d": "8/2016"}, {"body": "playing get work put change detection onpush inputs keep try manually trigger change detection reset called still update properly still definitely considered bug reset trigger controls update view", "d": "8/2016"}, {"body": "rakibler reset functionality hinges able write custom component looks like custom form control method actually hooked anything called sets value nt set internal input element implement write input reset function clears field expected edited write input example going simple example implement", "d": "8/2016"}, {"body": "thanks much help however line gives property nativeelement exist type htmlelement plunkr using different version angular", "d": "8/2016"}, {"body": "never mind dzmitryshylovich pointed gitter elementref htmlelement working", "d": "8/2016"}, {"body": "rakibler yes type definitely sorry confusion", "d": "8/2016"}, {"body": "mlaval closed given", "d": "8/2016"}, {"body": "sure fixed", "d": "8/2016"}, {"body": "using way appmodulets ts export const upgradeadapter new upgradeadapter forwardref gt appmodule export const type ngmodule imports declarations providers class appmodule appts ts import import upgradeadapter appmodule angularmodule app factory import upgradeconfig angularelement document ready function upgradeadapterbootstrap documentbody upgradeconfigts ts import upgradeadapter appmodule filter works jit aot ngc", "d": "8/2016"}, {"body": "related issue", "d": "8/2016"}, {"body": "marcalj using one appmodule case possible avoid cyclical dependency original issue using several ngmodules", "d": "8/2016"}, {"body": "really using two modules third party modules using main one try put appmodule", "d": "8/2016"}, {"body": "marcalj wo nt work need declare upgraded component exactly nested feature module component module uses", "d": "8/2016"}, {"body": "problem mainly upgrading angular directive work angular component import upgradeadapter appmodule const foodirective foodirective component directives foodirective pipes translatepipe selector myselector way make work get handle upgradeadapter instance root module since root module needs able also reference component used app get circular reference tried removing barrels solve since still get require every import still working concerned upgrade process tested real app apps built like examples one two files", "d": "8/2016"}, {"body": "hi notice second ngfor passing array one cube cube make change cube name mycubecomponent template works", "d": "8/2016"}, {"body": "try notice array cubematrice new cube hi new cube hello new cube bonjour new cube holla", "d": "8/2016"}, {"body": "sounds like support question got answered thnx termanty helping issues", "d": "8/2016"}, {"body": "pkozlowskiopensource original post contained typo example still issue although original post stated took time today figure updated version last plnkr notice passing value instead nested ngfor nt pass actual object", "d": "8/2016"}, {"body": "activee nt know trying array got ngfor suspect got many brackets instead trying hard say nt see bug still believe one please reduce example bare minimum clearly state actual vs expected behavior", "d": "8/2016"}, {"body": "nexted arrays need ngfor", "d": "8/2016"}, {"body": "plunker", "d": "8/2016"}, {"body": "pkozlowskiopensource termanty familiar plnkr yet think sent wrong code last reply unfreeze refreeze case still messing things code components notice level deep also notice works basic angular square brackets pass input works export class appcomponent cubematrice new cube hi new cube hi new cube hello new cube bonjour new cube holla constructor component selector mycube template export class mycubecomponent input cube constructor export class cube name constructor name thisname name", "d": "8/2016"}, {"body": "means convert string use want pass objects around anyway really support question please move appropriate channel need assistance bug", "d": "8/2016"}, {"body": "unless missing something typescript correct since type error allowing value supported consider constructing interface describes subset service uses assignment compatible using parameter type correctly describes intent also typecheck", "d": "8/2016"}, {"body": "thing dependency injection nt work change constructors use interface set provider proposed alternative regularly use abstract class train gone also creating di token lot boileplate something works runtime could solved", "d": "8/2016"}, {"body": "according dom look like expanding ngif mycontainer assigned yet switch thecondition see container content see container reference header look srcappts problem reference template reference variable element sibling element child elements find please correct wrong still really noob angular", "d": "8/2016"}, {"body": "true guess may solved wrapping ngif works new plnkr even though pure interpretation documentation compatible happens still feels like bug directive able solve problem instead forcing developer write wrapper element also missed mention also shows error message", "d": "8/2016"}, {"body": "check ngonchange works mentions hook fires ngoninit databound input property value changes made highlight ngonchange reacts input property changes", "d": "8/2016"}, {"body": "ever used java different language besides js", "d": "8/2016"}, {"body": "istiti issues posted repo bug reports feature request support questions people happy answer questions gitter chat stackoverflow", "d": "8/2016"}, {"body": "workaround redeclaring inputs outputs component metadata", "d": "8/2016"}, {"body": "aot nt support lifecycle base class well hook called component adding nt work open separate issue", "d": "8/2016"}, {"body": "using inheritance component discouraged pattern supported aot therefore intended behavior significantly complicated issues arise combine annotations inheritance scope resolve consider resubmitting recasting feature request", "d": "8/2016"}, {"body": "chuckjaz treating item bug report bug jit compiler allow discouraged thing", "d": "8/2016"}, {"body": "would prefer another issue one edited confusing text bug say one thing using track another thing", "d": "8/2016"}, {"body": "moved next line obvious meta question given issues ran supported coding patterns aot compiler inclusive list exclusive one given javascript runtime likely tons stuff expected semantics browser fail compile aot", "d": "8/2016"}, {"body": "working document intended describe supported inclusive list things work jit aot hope first version available review next week", "d": "8/2016"}, {"body": "checked pending issues prs", "d": "8/2016"}, {"body": "checked pending issues found nothing looking prs may related one merged problem right something wrong gt lt", "d": "8/2016"}, {"body": "digging deeper seems like value posted ok appears string server side replaced empty space even simply get post php", "d": "8/2016"}, {"body": "code example actually show issue could create better example reproducing problem", "d": "8/2016"}, {"body": "sure javascript let body new urlsearchparams bodyset label label let options requestoptions optionsheadersappend contenttype applicationxwwwformurlencoded return body options displays check browser dev tools see value sent sure angular bug way php handles fixed using custom queryencoder encodekey encodevalue javascript encodekey k string string return thisencode k encodevalue v string string return thisencode v", "d": "8/2016"}, {"body": "generic service provides user settings within one application read bootstrap user settings exactly one type one application next type different generic class components declare constructor argument since generated returns seems like could sufficient replace generic type becomes also works generic constraints decide strict types generated code like routing calls interfaces return might become difficult however able specify service generic type parameter level", "d": "8/2016"}, {"body": "second use case bit tricky mostly deducing type parameter type real challange combination component directive make dropdown control one root element holds current value instantiated choice reduced looks like ts class dropdownselectoptiondirective input public value class dropdownselectcomponent input public value output public valuechange new eventemitter contentchildren dropdownselectoptiondirective public options querylist gt setup nicely declares intent componentdirective meant work together runtime compilation generic types would gone compiler would easily generate correct code aot compiler currently nt emit generic type parameters produces code nt compile could wish something would like declare members types define instance generated code would check component matches quick error make example would suddenly type options compatible deduced", "d": "8/2016"}, {"body": "error reproduction issue problem similaridentical", "d": "8/2016"}, {"body": "error console output empty errors warnings problem similaridentical json simple string template use testhtml dom work correctly test use testhtml dom one dynamiccomponent directive work", "d": "8/2016"}, {"body": "escape ie", "d": "8/2016"}, {"body": "thank", "d": "8/2016"}, {"body": "need add hack bootstrap application navigation works expected except first one ts angularelement document ready function bootstrap application upgradeadapterbootstrap documentbody dashboardmainname hack ngupgrade function fixbootstrapping href length gt amp amp main ngview length windowhistorypushstate hack documentlocationhref windowhistorypushstate hack documentlocationhref windowhistoryback", "d": "8/2016"}, {"body": "caused intldatetimeformat ie see past second without hourminute options parameter rejected ie nt throw error instead returns full date format directly think need big change better assigned original author", "d": "8/2016"}, {"body": "robwormald chuckjaz think supported scenario normally would structure project like structure angulario project causing challenges creating code samples aot compilation switching non symlinked nodemodules would require infrastructure changes necessary nt supported", "d": "8/2016"}, {"body": "typescript resolves symlinks module resolution sensitive symlinks organized would recommend using symlink nodemodules confuses typescript module resolution", "d": "8/2016"}, {"body": "part confused code symlinked nodemodules compile fine use directly something different referencing files", "d": "8/2016"}, {"body": "chuckjaz using symlink nodemodules almost year across many versions ts easy us stop nt think blame ts", "d": "8/2016"}, {"body": "try adding turn symlink resolution inside might fix issue", "d": "8/2016"}, {"body": "thanks alexeagle looks like trick added line suggested mainjs started working", "d": "8/2016"}, {"body": "alexeagle fix pred repo experimental fix", "d": "8/2016"}, {"body": "wardbell nt mean imply ts wrong causing us problems alex change prevents ts calling realpath works better scenario careful wording", "d": "8/2016"}, {"body": "thanks verifying send pr", "d": "8/2016"}, {"body": "security context supposed check bindings introducing something dangerous dom nonbindable context bindings create template something dangerous js code well user provided input want protect", "d": "8/2016"}, {"body": "security issue could fixed", "d": "8/2016"}, {"body": "igorminar nt see security issue inject malicious template also inject malicious code", "d": "8/2016"}, {"body": "ok plug schema check later point required fro updated labels accordingly", "d": "8/2016"}, {"body": "whatever user wrote put generated code ie user used use user used use", "d": "8/2016"}, {"body": "update metadata collector preserve quotes tbosch thought places expression parser would need change match semantics instead stop quoting properties codegen map literals", "d": "8/2016"}, {"body": "provider plunker repo", "d": "8/2016"}, {"body": "confirm setup worked", "d": "8/2016"}, {"body": "timely manner migration path far complicated getting see find old artifact extract see worked work fail would say regression router would nt provide guidance solution", "d": "8/2016"}, {"body": "able share relevant code couple hours working era router setup", "d": "8/2016"}, {"body": "thanks watch", "d": "8/2016"}, {"body": "please let know helps migrate app url redirection include virtual directory alias else would redirecting website root path also included condition skip redirection uri already ok also providing appbaseref bootstrap", "d": "8/2016"}, {"body": "thanks fix rewrite subpath fantastic", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "immediately apparent whether fixes issue issue refers downgrading components interested going way upgrading components", "d": "8/2016"}, {"body": "clarify happens running without locale without files leaves attributes html tags", "d": "8/2016"}, {"body": "appears like able reproduce edge well fwiw atleast easier test locally", "d": "8/2016"}, {"body": "sure understand could expand mean", "d": "8/2016"}, {"body": "would pseudotranslation cover", "d": "8/2016"}, {"body": "vicb yes apologies typo pseudotranslation would work assuming translation easily identifiable reason suggesting use keys pattern saw back used spring also parameters supported keys inject values middle translated term would allow us welcome firstname application instead split phrase two strings", "d": "8/2016"}, {"body": "translation easily identifiable assume disguised version original string would make sense replacing something different length probably also makes sense make sure different strategies could easily swapped anyway pseudotranslation probably happen post final also parameters supported keys asking string could contain interpolation tags yes replaced placeholders change position ph content src msg translated dst", "d": "8/2016"}, {"body": "sounds great", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "michaelchiche interface export interface viewchildrenmetadatafactory selector typefunctionstring read read new selector typefunctionstring read read viewchildrenmetadata", "d": "8/2016"}, {"body": "sorry got confused contentchildren well instead doig since viewchild ren set viewchild viewchild access viewchild throught", "d": "8/2016"}, {"body": "michaelchiche reason support maybe would open pull request", "d": "8/2016"}, {"body": "export class viewchildrenmetadata extends viewquerymetadata constructor selector typestring read null read super selector descendants true read read tostring string return see passes super descendants true read read work nt maybe descendants parameter something else", "d": "8/2016"}, {"body": "probably related note probably", "d": "8/2016"}, {"body": "issue although think mechanism query components specific type", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "open issue project downloaded modal widgets asis issue sounds like support question nothing indicating bug missing feature angular", "d": "8/2016"}, {"body": "issue related cuz change angular version configjs error nt happen sounds lib nt updated compatible latest rc opened lib repo also look error message thia repo lot issues", "d": "8/2016"}, {"body": "ericmartinezr mentioned thirdparty library issues opened repos rather closing feel free open issue reproduce angular bug without", "d": "8/2016"}, {"body": "plan improve error messages specific issue mind please create new ticket", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "update angular gt use angular provide arrow function drop exported boilerplate factory function example old angular lt token available compile time provide exported factory typescript import io socketioclient export function socketiofactory return io ngmodule providers provide socketio usefactory socketiofactory export class appmodule", "d": "8/2016"}, {"body": "cool seems work workaround nevertheless implementation least provide another error message works dynamicplatform way know crashes compiler case aot", "d": "8/2016"}, {"body": "maybe already addresses nt tested yet", "d": "8/2016"}, {"body": "please update latest rc create plunker show issue", "d": "8/2016"}, {"body": "hi vicb plnkr please note using nativescript updated angular app wont work getting tons errors routers modules inside nativscript http trying use", "d": "8/2016"}, {"body": "deprecated gone master going close obsolete need remove old declaration see comments", "d": "8/2016"}, {"body": "updated plunkr tweaked description use still able recreate issue please reopen advise expected behaviour", "d": "8/2016"}, {"body": "alantreadway migrate code use directives code overrides things component level even master anymore", "d": "8/2016"}, {"body": "pkozlowskiopensource thanks pointing updated example remove use specific error reported longer present however highlights granularity scope overriding moved scope scope understanding correct x b module ca nt independently override interdependencies", "d": "8/2016"}, {"body": "understanding correct maincomponentx childcomponentaa childcomponentbb module ca nt independently override interdependencies would answer yes question phrased like", "d": "8/2016"}, {"body": "remove host decorators works", "d": "8/2016"}, {"body": "well thanks deprecated something changed case know find info team could find reference doc still far remember way access outer container btw please feel free answer stackoverflow get right credits", "d": "8/2016"}, {"body": "got working compiler way aot future right", "d": "8/2016"}, {"body": "count compiler browser side compile cmp reason entrycomponents exists aot uses find compile include module module loaded directly lazy loaded compiled cmps loaded also manipulate dynamically case need compiler browser compile cmps demand compiler biggest part nearly code", "d": "8/2016"}, {"body": "yes meanwhile kind realized aot motivation behind current changes aot compilation unfortunately seems app good way use aot considering dynamic creation components currently one coremain features app maybe one way would split app modules declare module entrycomponents components loaded dynamically nt use router nt want compile modules dynamically compiler would mean loading modules bootstrap", "d": "8/2016"}, {"body": "described situation exactly main idea modularize app modules choose want lazy load one bundle", "d": "8/2016"}, {"body": "thank clear guess feature request make much sense close", "d": "8/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "setting configuration files running npm install yields typings err message unable connect typings err caused connect enetunreach see google part error message bug", "d": "8/2016"}, {"body": "nt seem like angularangular bug closing quickstart docs seems wrong file issue angularangulario repo", "d": "8/2016"}, {"body": "talking components inside confirmationcomponent template", "d": "8/2016"}, {"body": "hi brandonroberts exactly appcomponenthtml following structure headercomponent would like know parameters hashid sent confirmationcomponent way found read reading locationpath", "d": "8/2016"}, {"body": "ok use shared service stores set hashid within confirmationcomponent share service headerfooterwhatever access hashid", "d": "8/2016"}, {"body": "brandonroberts bug", "d": "8/2016"}, {"body": "vicb nt think app discover route accessing app instantiates component route send params component brandonroberts said good strategy access parameters share via shared service", "d": "8/2016"}, {"body": "might related", "d": "8/2016"}, {"body": "might main difference everyone seems going service dynamically loads actual component opening calling whatever discarding use inputs outputs hand perfectly fine component sitting dom want sit root instead component actually put using sort structural directive", "d": "8/2016"}, {"body": "real issue please fill template thanks question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "vicb definitely support request template bloated feature requests anyway ok go submitting check one x current behavior component rendered inside component put expecteddesired behavior would like able somehow tell component render appended prepended instead example root component reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point check imagine root component child component css another nested chidld component want component gon na work structural directive something put decorator would tell fixed component render inside instead fine got multiple uses fixed elements components like modal windows etc wanted create component put anywhere inside nested component screwed ing parent component expected behavior motivation use case changing behavior simply css html layers rendering works wanted modalcmp absolutely position parent components would position set relative would screwed parent components transform wanted modal fixed would screwed see first comment please tell us environment angular version browser language", "d": "8/2016"}, {"body": "seems related angularcli project please file angularangularcli repo", "d": "8/2016"}, {"body": "problem see provide specific xhr providers module declaration get error like correct implementation xhr loading dynamic component based templateurl help", "d": "8/2016"}, {"body": "new update found maybe use configuration get error return case reproduction problem see behaviour plunkr", "d": "8/2016"}, {"body": "plunkr seeing", "d": "8/2016"}, {"body": "error image", "d": "8/2016"}, {"body": "solution replace template build process think problem relies join ts files one bundle use angular umd packages system nt components difference find example found", "d": "8/2016"}, {"body": "jorgeunimicro solution replace process load external template inline template ok find fix approach help angular team example tbosch think expert dynamic loaded component compiler staff thanks", "d": "8/2016"}, {"body": "hi news really need find fix soon possible", "d": "8/2016"}, {"body": "meriturva seen works think assign property decorator systemjs use instead hope works", "d": "8/2016"}, {"body": "thanks jorgeunimicro actually found different approach based instead project main question witch approach best one think dynamiccompiler staff need official samples docs know really new complex architecture web app every day complex", "d": "8/2016"}, {"body": "also tested load dynamically ngmodule modified version important use otherwise get xhr error", "d": "8/2016"}, {"body": "hi problem xhr error implementation want compile runtime component", "d": "8/2016"}, {"body": "hi cyberbobjr using", "d": "8/2016"}, {"body": "hi merituva thanks help nt use componentfactoryresolver loaded component config file need system want use widget store widgets every user choose widgets inside store configuration saved inside json file loaded auth process inside well use code snippet creating component comp runtime component loaded systemjs systemimport path use compilecomponentasync function templateurl breaken xhr error like post best regards", "d": "8/2016"}, {"body": "cyberbobjr also library widgets sure using new call approach see works correctly plus components loaded one import whole module would like say important documentation official approach without nt see angular team response really think approach crucial many web apps", "d": "8/2016"}, {"body": "meriturva already tested solution use templateurl create another empty module use module compilecomponentasync like case templateurl correct component loaded dynamically works container complete code configjson config file name path components import component componentfactoryresolver viewcontainerref viewchild oninit compiler angularcore import runtimecompiler angularcompiler import emptymodule emptymodule export class mycomponentloader loadcomponentconfig url return fetch url res gt resjson componentlist gt promiseall componentlistmap config gt thisloadcomponent config loadcomponent configobject return systemimport configobjectpath componentmodule gt componentmodule configobjectcomponent component moduleid moduleid selector ngsmartdesk templateurl smartdeskcomponenthtml providers mycomponentloader export class smartdeskcomponent implements oninit viewchild widgets read viewcontainerref container viewcontainerref constructor private loader mycomponentloader protected compiler runtimecompiler ngoninit thisloaderloadcomponentconfig appconfigjson components gt components promiseall componentsmap test gt thisloadcomp test null error gt consolelog error private loadcomp comp component index number thiscompiler compilecomponentasync comp emptymodule factory gt thiscontainercreatecomponent factory index thiscontainerinjector", "d": "8/2016"}, {"body": "think fixed", "d": "8/2016"}, {"body": "rather complex setup largeish app would take setup plunker try requested minimal plunker mandatory yes", "d": "8/2016"}, {"body": "sounds like", "d": "8/2016"}, {"body": "ca nt reproduce plunker works expected sounds likely issue application", "d": "8/2016"}, {"body": "angular nt yet email validator directive feature plan adding eventually see", "d": "8/2016"}, {"body": "ok kara way validate email templatedriven using pattern nt", "d": "8/2016"}, {"body": "use pattern write custom validator hopefully get data type validators builtin soon", "d": "8/2016"}, {"body": "using property correctly full essentially uses exact comparison path case exact match never reach child routes", "d": "8/2016"}, {"body": "brandonroberts goddammit bad kinda ashamed reported bug nt found", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "activatedroute inject provides property exposes information", "d": "8/2016"}, {"body": "brandonroberts improvement using property", "d": "8/2016"}, {"body": "yes aug pm felipedrumond notifications githubcom wrote brandonroberts improvement using property receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "brandonroberts work params path mean path like users id thank reply", "d": "8/2016"}, {"body": "rodchenkov yes give config used route configuration", "d": "8/2016"}, {"body": "closing issue", "d": "8/2016"}, {"body": "duplicate shim available", "d": "8/2016"}, {"body": "reproduce plunker", "d": "8/2016"}, {"body": "problem minimal project ts plunker template reproduce", "d": "8/2016"}, {"body": "sure", "d": "8/2016"}, {"body": "looks like problem call navigate ngoninit appcomponent move code nginit inside home component works", "d": "8/2016"}, {"body": "seems like race condition plunker navigation happens initial navigation another navigation comes inflight navigation completed cancelled designed navigation happen first try navigate within appcomponent inside ngoninit navigation scheduled router initial navigation current url cc vsavkin", "d": "8/2016"}, {"body": "default router sets location listener performs initial navigation happens component instantiated initial navigation overrides navigation fix bootstrap router", "d": "8/2016"}, {"body": "ok thanks btw parameter present dts gives compilation error", "d": "8/2016"}, {"body": "crosslink", "d": "8/2016"}, {"body": "ngondestroy called underlying element longer part document scroll position reset browser higher level event would better capture scroll position using router listen via candeactivate capture position", "d": "8/2016"}, {"body": "impossible help information please add code specific error message", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "think loading component barells causing bug", "d": "8/2016"}, {"body": "plunker reproduce please fill entire issue template", "d": "8/2016"}, {"body": "zoechi big project application whole app working kind plunker part provide plunkerand problem iphone ipad browser dont console error show youbut access direct folder instead barrel workingbut without barrel code become lengthy", "d": "8/2016"}, {"body": "ashokacharya using barrels lead creating circular dependencies unexpected behavior currently think would better maximize use modules many agreed suggestion use barrels removed style guide fix problem though could hunt circular dependencies issues barrels creating advise avoid using", "d": "8/2016"}, {"body": "thanks qdouble zoechi", "d": "8/2016"}, {"body": "reset form reset form imperatively notify use reset button also emits event please elaborate bit use case would useful ideally plunker demonstrates event disadvantage", "d": "8/2016"}, {"body": "specific use case directive displays error controls configurable conditions ie control focus control touched form touched form submitted etc form reset would like directives act accordingly example display certain errors could certainly notify feels like useful addition makes sense framework way ngsubmit onsubmit would ngreset onreset", "d": "8/2016"}, {"body": "weird get type error missing", "d": "8/2016"}, {"body": "override service way trying override configuration way nt seems work btw using", "d": "8/2016"}, {"body": "load feature modules without router use directly router makes use compiler load modules see source", "d": "8/2016"}, {"body": "brandonroberts thanks pointing right direction expect see plunker review advise design flaw implementation going use approach app multiple separate components individual folders wrapped different modules", "d": "8/2016"}, {"body": "mystery solved injecting services run method initial configuration though injector ready time injector solution move code later execution time updated plnkr offending code", "d": "8/2016"}, {"body": "getting issue move code previously block order make work", "d": "8/2016"}, {"body": "kept run block manually injecting timeout since services created first time requested injector delays creation idea put code resolve root abstract route may need inject manually", "d": "8/2016"}, {"body": "seems like reasonable workaround would nt consider fix issue opinion issue reopened fixed within angular framework nt think every consumer framework forced workaround issue", "d": "8/2016"}, {"body": "thanks reopening", "d": "8/2016"}, {"body": "understanding returning false host listener decorated method stop default page action occurring wo nt stop propagation event listeners believe intended example could one host listener click event watches form submission events prevents page default handler returning false declared top level would allow need put within components request feature preventing default page actions still want listeners receive event", "d": "8/2016"}, {"body": "sorry misreading read preventdefault documentation stoppropagation", "d": "8/2016"}, {"body": "wrong fixed via", "d": "8/2016"}, {"body": "ericmartinezr thanks reference probably missed search issue closed even though problem persists current version angular speaking way tell look pr version library applied", "d": "8/2016"}, {"body": "compare date merged merged last release check", "d": "8/2016"}, {"body": "yep corrected master next release router", "d": "8/2016"}, {"body": "vikerman discussed ideas", "d": "8/2016"}, {"body": "could declare directive seperate module import module modules need ngmodule declarations mydirective export default class mymodule", "d": "8/2016"}, {"body": "yeah nt bug supposed declare one module share module", "d": "8/2016"}, {"body": "would mind reopening issue websitetutorial repo", "d": "8/2016"}, {"body": "sure nt realize repo docs closing issue", "d": "8/2016"}, {"body": "missing need means directive pipe available directives module means directive pipe available modules importing given module", "d": "8/2016"}, {"body": "course apologies superfluous bug report", "d": "8/2016"}, {"body": "nt seem issue check", "d": "8/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem see also", "d": "8/2016"}, {"body": "issue", "d": "8/2016"}, {"body": "looks like issue polyfill sample repo direct intlapi calls opened corresponding issue andyearnshawintljs", "d": "8/2016"}, {"body": "issue would fixed tuesday", "d": "8/2016"}, {"body": "thanks laskoviymishka", "d": "8/2016"}, {"body": "issue sometimes would nt want certain services might want new instance component one provided would differentiate probably current paradigm", "d": "8/2016"}, {"body": "simply heard providers components deprecated nt know create new instance realized possible move component children ngmodule include line import example move two lines heroescomponentts ngmodule import herodetailcomponent herodetailcomponent component directives herodetailcomponent service need keep import service component heroescomponentts import heroservice heroservice want instance global ngmodule move import subcomponent service maybe wrong concepts", "d": "8/2016"}, {"body": "ah important distinction providing instance service component via importing service use component former nt deprecated afaik provide newconfigureddifferently instance service component children simply importing eg use class letting angular know service want regardless anything angular di need import get type informationintellisense class methods etc think declare componentdirective module would likely still import use etc make sense speak issuefeature request directly providing service module without issue would simply getting instance created componentlevel services nt require appglobal scope would fine ones though way compiler know intentions especially ahead time wrote phone hope formats ok", "d": "8/2016"}, {"body": "thanks format ok understood", "d": "8/2016"}, {"body": "thnx jmcgoldrick helping support questions", "d": "8/2016"}, {"body": "first look thought service working mockbackend constructor words thinking service trying hit production rest performed simply thing added line constructor output", "d": "8/2016"}, {"body": "could add plunker previously copied plunker wardbell demonstrated issue testing mine helps", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "think recommended approach initialize something implement oninit instead making method calls inside constructor forked plunker amended use oninit service looks like typescript class someservice implements oninit constructor private http ngoninit hit mocked backend url subscribe v gt consolelog constructor subscribe hit somemethod hit mocked backend gt consolelog method called subscribe hit test typescript describe somecomponent gt hit mockbackend fakeasync inject someservice mockbackend service someservice mockbackend mockbackend gt let backendhits number mockbackendconnectionssubscribe conn gt backendhits", "d": "8/2016"}, {"body": "sure implementing oninit service recommended approach docummentation see directives components ngoninit initialize directivecomponent angular initializes databound input properties right workaround ok instead oninit nt implement anything move code constructor another method call test gt gt gt gt confirms issue unable subscribe mockbackend service initialized moment service nt make call initialization would need manually test also place call constructor makes application behave differently test production mode words service fireing ngoninit method would need something like definitely smells problem test sobuscribing mockbackend initialization service hits mockbackend goes nowhere subscription response", "d": "8/2016"}, {"body": "example little contrived get code working inclined implement oninit component use service rather adding service use case requires call method service gets instantiated say services something call methods avoiding need method calls taking place constructor make life much easier smile", "d": "8/2016"}, {"body": "markpritchett every case particular situation service need retrieve first data via rest beginning keep array subscribe socket listen pushes new data additioneditiondeletion data want make call constructor method", "d": "8/2016"}, {"body": "understand still think making method calls inside constructor bad idea found blog post might help created plunker demonstrate point key bits appdataservicets typescript private subscription null constructor private http getstarwarscharacter observable thissubscription consolelog make http request data appappcomponentts typescript export class appcomponent implements oninit constructor private dataservice dataservice ngoninit thisdataservice getstarwarscharacter subscribe starwarscharacter gt thisstarwarscharacter starwarscharacter", "d": "8/2016"}, {"body": "similar issue attach observable class testing fakeasync observable hoisted constructor work markpritchett agree return function service fixes tests however much nicer lines especially multiple rxjs observable feels like valid code testing work browser feel like maciejsobala reasonable use cases situation ts ts export class discoveryservice ts looks like compiled apis hoisted constructor test setup ts beforeeach gt testbedconfiguretestingmodule providers mockbackend config baserequestoptions provide http usefactory backend connectionbackend defaultoptions baserequestoptions gt return new http backend defaultoptions deps mockbackend baserequestoptions provide apiurl usevalue apiurlcomflex discoveryservice", "d": "8/2016"}, {"body": "posted question already need post well looks like support question anyway github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "hey cyberwombat would mind opening issue websitetutorial repo", "d": "8/2016"}, {"body": "su", "d": "8/2016"}, {"body": "note worked around shortterm commenting declaration tbosch back find better fix", "d": "8/2016"}, {"body": "official plunkerversion problem occur seems see", "d": "8/2016"}, {"body": "sry right configuration error closing", "d": "8/2016"}, {"body": "moxxnull nothing sorry get help much easier faster gitter etc nt get wrong simply repo support questions nt forget include config files people see wrong ask lot people hungry answering everything xp", "d": "8/2016"}, {"body": "even though reproduce given plunker version problems caused fontawesome script without line everything works given strange behaviour maybe save someone time", "d": "8/2016"}, {"body": "moxxnull nt know lib causing issues change detection may patching promises overriding angular patching try changing order libs put fontawesome lib zonejs polyfills play order see one works", "d": "8/2016"}, {"body": "cdn icon library nt matter load everything else scripts always messes data binding", "d": "8/2016"}, {"body": "yboujallab plz fix issue formating provide plunkr existing repo", "d": "8/2016"}, {"body": "thanks reply plunkr", "d": "8/2016"}, {"body": "yboujallab plunker correct attach files simplify plnkr systemconfigjs", "d": "8/2016"}, {"body": "yboujallab plunker reproduce problem run prints console issue create new issue template contains link plunker template nt fill issue template think bug please create proper bug report support request please use instead one channels mentioned", "d": "8/2016"}, {"body": "closing linked plunker dump application code rather true reproduce scenario happy reopen see reproduced bug", "d": "8/2016"}, {"body": "found issue", "d": "8/2016"}, {"body": "solve", "d": "8/2016"}, {"body": "looks like viewcontainerref fully initialized constructor example reason common pipes work constructor mb bug moved call inside example", "d": "8/2016"}, {"body": "see thanks follow ca nt used surprise well", "d": "8/2016"}, {"body": "would nice see docs viewcontainerref embededviewref viewref templateref etc stuff", "d": "8/2016"}, {"body": "could please try reproduce plunker latest router without party libraries experience far rather well great workarounds one projects exact scenario rising case please provide minimal reproduce scenario sure dealing angular issue", "d": "8/2016"}, {"body": "pkozlowskiopensource create plnkr click heroes details nt work click back button details works windowhistoryback", "d": "8/2016"}, {"body": "thanks michalstepien looks like bug angular pkozlowskiopensource happy fact seem get lot support seems party tool use ga", "d": "8/2016"}, {"body": "perhaps related", "d": "8/2016"}, {"body": "label please updated repro", "d": "8/2016"}, {"body": "please find smaller repro based routerdeprecated issue listed could please update labels", "d": "8/2016"}, {"body": "think working intended order us compute run change detection change detection could unroll may change content", "d": "8/2016"}, {"body": "also impression works designed least living assumptions pointed mhevery makes since querying view children means view constructed already implies change detection run person assume data model touched indeed assuming lifecycle hooks lastminute dom adjustments ex set focus sth definitively manipulate model well least thinking lifecycle part today", "d": "8/2016"}, {"body": "agree mostly documentation problem sense concept component observing view similar two way binding since change model drives change view could theoretically change model", "d": "8/2016"}, {"body": "wardbell could figure good place cover docs", "d": "8/2016"}, {"body": "mhevery pkozlowskiopensource till possible use hook create dynamic content depending elements causes changeafterchecked error intended yes alternative", "d": "8/2016"}, {"body": "thoughts", "d": "8/2016"}, {"body": "seklyza current function mimics regular form reset clears existing inputs nt remove inputs added programmatically later want remove added controls rebinding might cleaner make possible", "d": "8/2016"}, {"body": "closing gives way", "d": "8/2016"}, {"body": "docs work progress", "d": "8/2016"}, {"body": "guess sort supported pending via", "d": "8/2016"}, {"body": "lazily load labsformsmodule routes imports flatten making modules child appmodule instead labsformsmodule problem want solve", "d": "8/2016"}, {"body": "sirajc patrick saying use loadchildren synchronously load module lands instead importing modules forms module would path route entry example setup formsroutests ts import routermodule route angularrouter import formscomponent formscomponent import templatemodule template const routes route path component formscomponent children path template loadchildren gt templatemodule export const moduleroutes routermoduleforchild routes templateroutests ts import route routermodule angularrouter import templatecomponent templatecomponent const routes route path component templatecomponent export const moduleroutes routermoduleforchild routes", "d": "8/2016"}, {"body": "trying say fake lazy load synchronously returning ngmodule rather anything async use split context way update lol brandonroberts beat", "d": "8/2016"}, {"body": "thanks looks interesting solves problem statement angularbuilds test update", "d": "8/2016"}, {"body": "solution worked well think understand works way intuitively still want define like eg valid routes assessment assessmentlabs assessmentresults assessmentmodule ngmodule imports routermoduleforchild path assessment component assessmentcomponent labsmodule ngmodule imports routermoduleforchild path labs component labscomponent resultsmodule ngmodule imports routermoduleforchild path results component resultscomponent feels portable import module elsewhere well child routes automagically appear valid child routes current module sure route collisions possible testing potentially forchild defineroutes similar feels like working context current module defining routes current modulecontext rather child context", "d": "8/2016"}, {"body": "saltydh disagree comment flattening routes done currently import module correct need another api point modulesimport load child current module", "d": "8/2016"}, {"body": "brandonroberts thanks approach mentioned works loads templatemodule synchronously routing composed needed formsroutests templateroutests const routes route path component templatecomponent export const moduleroutes routermoduleforchild routes support already available feature need sugar instead need api intends actions want something like", "d": "8/2016"}, {"body": "cc vsavkin", "d": "8/2016"}, {"body": "discussed idea morning agree current mechanism somewhat counterintuitive though use cases current behavior implement something along lines like defineroutes idea sure vsavkin something say logical correctness note could probably also use componentless route pattern depends want parent route defined module contains routes want module importing define entry route", "d": "8/2016"}, {"body": "think introduce new syntax sugar final since passing function solves issue leave", "d": "8/2016"}, {"body": "vsavkin sugar really help strengthen api paths mapped module component much emphasis ngmodules adoption create ngmodule per feature etc story say clear path us moving away componenets modules designing application architechture used map path component similarly map path module sounds simple straightforward saying ngmodule supports lazy loading trick lazy loading function returning module inside function loadchildren please reconsider sugar", "d": "8/2016"}, {"body": "obvious merit vsavkin others said changing api final disagree api churn counter argument think project like generally open development cycling around team releases new version new features therefore api changes maybe fixes api changes community feedback features api repeat long run think best possible point cycle stabilize lock api cycle community feedback minor tweaks seems like worst possible moment thinking abstract necessarily features discussion lock api right core team ships changes community feedback incorporated", "d": "8/2016"}, {"body": "moved directives pipes providers everything ngmodules limit routers components let ngmodules well keeping lazy loading aside", "d": "8/2016"}, {"body": "use nightly builds huge problem synchronous routes module components use navigate functionality eg link via link via module loaded via route currently working routes navigate targets look like inside module use absoulte target prefixed therefore route broken use relative target first result works next click route work module must know loading route angular compiler must prefix every navigate target related loading route", "d": "8/2016"}, {"body": "martinwegner bug order use navigate relatively must provide section land docs soon ts import activatedroute angularrouter component class routecomponent constructor private router router private route activatedroute go thisrouternavigate somewhere relativeto thisroute", "d": "8/2016"}, {"body": "oh know missed trick use ca nt use", "d": "8/2016"}, {"body": "ah also works", "d": "8/2016"}, {"body": "martinwegner nt need implicit", "d": "8/2016"}, {"body": "might late change indeed first nt see default flattening action importing modules routing ie inspecting activated route clearly indicates parentchild hierarchy place flattening needs default strategy modules routing advantage default ca nt really nt want lazy load every single bit routing indicate application routing hierarchy feels like weird trick loaded synchronously yet another shape trick still would make parent module explicitly aware routing inside imported modules ie nt want change application module know routes loaded via modules imports must added existing routing scheme using strategy want either flattening hierarchical manner", "d": "8/2016"}, {"body": "example happens material", "d": "8/2016"}, {"body": "cc jelbourn", "d": "8/2016"}, {"body": "class closing favor", "d": "8/2016"}, {"body": "looks like angularjs issue repo angular", "d": "8/2016"}, {"body": "looks like angularjs issue nope sounds like cors issue browser specific nothing js frameworks", "d": "8/2016"}, {"body": "seems call nextpage second implementation recreating subscribe instead redirecting user instead navigating next url implementation use ngoninit thisroutelistener thisactivatedrouteparamssubscribe params gt thisroutelisteneraction params lt create route params listener everytime activatedroute change params function routelisteneraction called sending current params", "d": "8/2016"}, {"body": "davideviolante create new subscription every time call result called multiple times every want instead following", "d": "8/2016"}, {"body": "thank works closing", "d": "8/2016"}, {"body": "please provide details plunker allows reproduce usually mandatory bug reports", "d": "8/2016"}, {"body": "noted issue supply plunker reproduces issue since issue reproduced using ngc cli tool run cli tool plunker however steps reproduce bug report reproduced easily", "d": "8/2016"}, {"body": "plunker wo nt typical next step upward provide minimal reproduction example program public github repo", "d": "8/2016"}, {"body": "npm install npm run ngc fails remove references urlresolver run npm run ngc run successfully", "d": "8/2016"}, {"body": "error fixed able install snapshot wait want aheadoftime compiler use different urlresolver wo nt work see basically anything configure angular dependency injection happens application runs based static analysis nt run part program present customizing behavior requires writing program call api example needed load templates different location changed accept custom xhr since renamed resourceloader", "d": "8/2016"}, {"body": "thanks information alexeagle", "d": "8/2016"}, {"body": "workaround though moving compilation beforeach works think versions work beforeeach async gt testbedcompilecomponents create component async inject userservice service gt var fixture testbedcreatecomponent testcomponent fixturedetectchanges var compiled fixturedebugelementnativeelement consolelog service", "d": "8/2016"}, {"body": "also reason call manually ca nt make call internally defined", "d": "8/2016"}, {"body": "sure related seen error minutes ago anyway unable inject service test either error comes tests passes false green passes test obviously", "d": "8/2016"}, {"body": "plunker repo", "d": "8/2016"}, {"body": "andreykotofotoff want guard lazy loading module use canload interface instead", "d": "8/2016"}, {"body": "brandonroberts thanks", "d": "8/2016"}, {"body": "level ask support questions using appropriate channel", "d": "8/2016"}, {"body": "oops got next time thanks lot", "d": "8/2016"}, {"body": "struggle one alphannn tsmodulelevel relationships suitable purpose thus generic typescriptlevel tooling helpful understand angular programs tools conveniently already exists using every day year vscode webstorm possibly others starting tooling fulfill purpose possible create sufficiently advanced ide yet exist considerably complex angularspecific rather useful across typescript software ouch", "d": "8/2016"}, {"body": "since directives easily larger uncontrolled scope another question could answer changed attribute selector introduce inadvertent instantiations directive new attribute name also used purposes", "d": "8/2016"}, {"body": "ca nt stick like still need escape html use entities closing nothing angular", "d": "8/2016"}, {"body": "returns instance sneak like better approach would either set template typescript use renderer angularcore keep code compatible running webworker prerendering via see", "d": "8/2016"}, {"body": "thanks lot sod nt know propertybinding", "d": "8/2016"}, {"body": "promotes bad coding think case sensitive", "d": "8/2016"}, {"body": "bad coding ensure users going write correctly applications urls nt code related every day users write urls ca nt ensure write correctly users write urls many people", "d": "8/2016"}, {"body": "well users problem uris case sensitive least route matters reality users really typing uris instead using links main website storing bookmarks", "d": "8/2016"}, {"body": "want tell definitions users care uri definitions yes write urls remember feature strange almost routers case insensitive give possibility define case insensitive routes", "d": "8/2016"}, {"body": "tolemac web works case sensitive urls never heard anyone complaining regards check vs example guess define wildcard pattern handle manually really want really nt want urls caseinsensitive example would screw logging amp statistics", "d": "8/2016"}, {"body": "easily solved using lowercase uris normalizing uris lowercase imagine would trivial part router", "d": "8/2016"}, {"body": "provide case insensitive easiest way wrap defaulturlserializer lowercase input output default serializer case sensitive closing issue", "d": "8/2016"}, {"body": "vsavkin case insensitivity helpful feature available optionally angular router sake making things bit easier people migrate please consider offering option also people want insensitivity find switch away rather reimplementing", "d": "8/2016"}, {"body": "fixed lands", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "paste error testing write entire route module", "d": "8/2016"}, {"body": "case using bundle instead single file think problem angular find module inside bundle write route bundle also module loadchildren moduleabundlejs moduleamodule get error find moduleamodule moduleabundlejs case use bundle loadchildren moduleabundlejs get error find default moduleabundlejs", "d": "8/2016"}, {"body": "ok related router load script find module class inside use systemjs bundles write module name bundle example systemjs loads requested router obtains module correct exports bundle", "d": "8/2016"}, {"body": "tried first think different using bundle suggest get get found says name bundle used either missing something knowl", "d": "8/2016"}, {"body": "david review bundle configuration use systemjs something like systejs config file makes request loader loads bundle extract module exports router get correctly hand could run application without bundles therefore nt write path bundle write path module moduleamodule defined think bundle issue router ihmo", "d": "8/2016"}, {"body": "extract systemjsconfig file works fine without bundles also works fine bundles lazy load difference case bundle lazy loaded imported indexhtml application therefore already loaded get routing matter choosing right module case bundle loaded yet understand need tell angular fetch bundle module get guess either syntax issue done way moment", "d": "8/2016"}, {"body": "definitely think bundle issue nt know build bundle use systemjs builder build bundle builder create bundle file foreach module bundle makes module bundle registered request one modules systemjs give requested module without request server search bundle module registered something like put route definition name use adding case think nt work problem", "d": "8/2016"}, {"body": "get mean since load bundle anywhere application would systemjs look module tried said get get found seems logic module found imported files application think bundle fine built systemjs said work use something like tell angular look files module default class said use error get missing default bundle guess refering bundle correct way many thanks help really appreciate input", "d": "8/2016"}, {"body": "forget tell angular use bundles reference modules bundles david angular must agnostic bundles angular nt know use bundles nt reference bundle application see last post bundle correctly builded moduleamodule included ensure load bundle adding tag indexhtml load systemjs system config file import main file put route nt configured default extension app package systemjs config file work fine works configure systemjs lazy loading bundle systemjs config file like think near make works", "d": "8/2016"}, {"body": "ok import bundle script tag indexhtml use works check network console loading application moduleabundlejs downloaded configured systemjsconfig like registered inside bundle effect load application moduleabundlejs downloaded matter want maybe confused downloaded try navigate modulea right", "d": "8/2016"}, {"body": "two scenarios working bundles want work bundles reduce server requests want work bundles reduce initial application loading time expand want work bundles reduce server requests case build bundles using builder load bundles html using script tags application make requests server beginning app way systemjs know nothing bundles registers module systemjs application needs someone bundle systemjs gives memory due module loaded register bundle want work bundles reduce initial application loading time case build bundles nt load beginning import systemjs load module imports like tries load server bundles want use need configure systemjs use bundles systemjs needs load module check already loaded module nt loaded searchs bundles example systemjs finds bunble downloads server register modules bundle next time needs module bundle systemjs already registered therefore wanto load modulea navigate configure bundles systemjs config file nt use script tags html liado un poco con el ingl\u00e9s espero que se entienda", "d": "8/2016"}, {"body": "ok works piece missing telling angular look module bundle using like saying want modulea go fetch modulea yeah finally worked include js name bundle module works perfectly thank much help patiente gracias", "d": "8/2016"}, {"body": "happy could solve currenly deciding bundle module architecture strategy applications tried webpack like problems debug typescript chrome finally decided use systemjs systemjs builder would like test jspm package manager due integration systemjs bundle generation jspm makes needed changes systemjs config file use donwloaded packages allow manage bundles would like write post blog find time want read follow tolemacjros best regards", "d": "8/2016"}, {"body": "davidanaya share indepth solved struggling issue ca nt seem figure solve currently using create selfexecuting bundle although sure correct though first issue experienced unhandled promise rejection fglobalsystemimport function zone angular task promisethen solved adding bundle although feels little strange self executing bundle independent systemjs loader angular requires work seems reasonable issue described davidanaya navigating route lazy loaded module receive error could find add end value manages find file results find default nameofthebundle define name module like error becomes unhandled promise rejection ngmodule metadata found crisiscentermodule zone angular task promisethen thing using nt seem use property nt ship code systemjs config object guys point right direction creating production ready bundles really struggling entire afternoon luck", "d": "8/2016"}, {"body": "adding file seems finds module put file exact location though use property although able locate file app nothing nt navigate new lazy loaded route", "d": "8/2016"}, {"body": "hi samverschueren think right need use buildbundle instead buildbuildstatic need systemjsconfig file able find de modules file executing application case systemjsconfigjs file application knows particular module bundle trick make work indexhtml nothing imports bundles also mainjs load modulea main routing loads moduleabundlejs jumps routing modulea", "d": "8/2016"}, {"body": "fwiw", "d": "8/2016"}, {"body": "thanks see subtle still gets null reference error runtime shortcircuits evaluation", "d": "8/2016"}, {"body": "turns works fine", "d": "8/2016"}, {"body": "related", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "vsavkin would like work get assigned", "d": "8/2016"}, {"body": "trying solve problem code detects current route url previousroutesurl list yes know user navigating back wo nt call windowscrollto know page must scrolled top problem call windowscrollto browser able anymore manage scroll position let take care export class app implements oninit comment windowscrollto code browser least tries recover scroll position", "d": "8/2016"}, {"body": "vsavkin alamgird would like work get assigned", "d": "8/2016"}, {"body": "curious question advice went days ago elsewhere suggesting fine use reactive template forms together program even component long form issue reported suggests may necessary rather different modules use two different styles form", "d": "8/2016"}, {"body": "hard speak specific problem without source code look nt see issue running reactive template forms together app put together plunker demoing two form variations together application", "d": "8/2016"}, {"body": "issue code one custom web components included directives coredirectives formdirectives reactiveformdirectives part directive section custom web component remove directives upgrading missed one custom components took long time solve issue created plunker", "d": "8/2016"}, {"body": "also verified experimentally today conflict using template reactive forms component course module", "d": "8/2016"}, {"body": "also facing similar kind issue able use reactiveformsmodule formsmodule together feature module one components implemented formsmodule second one validations used formgroup validations reactiveformsmodule instead formsmodule upgrade throwing error formcontroldirective part declarations modules reactiveformsmodule formsmodule", "d": "8/2016"}, {"body": "calling updatevalue method formcontrol ill probalbly lead recursion comment validatorupdatevalue inside setter method updatevalue called internally framework called need update form value manually setter right place would guess", "d": "8/2016"}, {"body": "correct thank", "d": "8/2016"}, {"body": "plunkr", "d": "8/2016"}, {"body": "solution fixed avoid approach", "d": "8/2016"}, {"body": "one different might look like trying follow issue template still omitting essential part reproduce scenario plunker please add minimal runnable reproduce scenario", "d": "8/2016"}, {"body": "think bug please fill issue template github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "u provide plunkr reproduction", "d": "8/2016"}, {"body": "well emits right code", "d": "8/2016"}, {"body": "still listen instead get original event see", "d": "8/2016"}, {"body": "actually exported need file pass circular dependency check", "d": "8/2016"}, {"body": "something wrong dependencies apparantly sorry inconvenience", "d": "8/2016"}, {"body": "believe issue described yes specific property module routes probably feasible couples angular router expense others agree behavior bit weird implement something similar described tragetaschen would close please root issue", "d": "8/2016"}, {"body": "think fix issue little trouble distilling actual proposed discussed solution likely low level blood misunderstood following rambling ignored renaming got comment still remaining still weird get happens implementationwise type routes put dependency injector picked router feels like kludge naming something makes stuff available module time actually exports something outer application anticipated comment coupling perfectly valid putting asis imports without route definitions components within module get access necessary directives components result call would put property instead", "d": "8/2016"}, {"body": "agree putting stuff augmentmodify external things seems semantically weird case putting would make sense nt think typed property solution though something flexible enough library authors hook maybe something implies happening could still import relevant module ifas required maybe something like", "d": "8/2016"}, {"body": "robwormald think tragetaschen agree would nice clearer distinction module alters outside world able easily convey intent probably bit close though", "d": "8/2016"}, {"body": "actually meant reuse existing property invent something new", "d": "8/2016"}, {"body": "seeing problem subscribing observable returned ngoninit component template fields bound object returned refreshed form interacted manually happens using async pipe subscribing observable", "d": "8/2016"}, {"body": "run similar problem though http response updates go attribute directives problem started occurring upgrading project change detection appears fire load ignores changes specifically example component see number updates properties bound chart directive data property see done timer loop another done using csv data loading directive fires event event fired loads csv property component set verified however data property setter never updated initial load undefined interestingly kind force work triggering change detection cycles like putting superfluous text input binding typing starts get change unreliably branch upgraded", "d": "8/2016"}, {"body": "able fix issue cause us loading shimjs zonejs indexhtml swapping order zone name went change detection works http calls", "d": "8/2016"}, {"body": "yes thank though wonder precipitated change recently also still really necessary", "d": "8/2016"}, {"body": "already posted therefore need post also lot similar questions already answered github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "zoechi mentioned issues repo bugs feature requests looking simple example access component methods validator take look similar plunker", "d": "8/2016"}, {"body": "error pasted coming angularcommon old forms api lives likely importing something mistake reproduce plunker", "d": "8/2016"}, {"body": "using components apparently include commonmodule reason warning", "d": "8/2016"}, {"body": "import nt use deprecated form directives contains including cause error long onward post plunker reproducing issue", "d": "8/2016"}, {"body": "oh using nt updated angular yet looks like prime suspect", "d": "8/2016"}, {"body": "warning ever appear even importing deprecatedformsmodule anywhere removed old forms migrating sudden warning pops back confused thought deprecated forms would optin save using anyway long import deprecatedformsmodule", "d": "8/2016"}, {"body": "import forms related stuff", "d": "8/2016"}, {"body": "could solve removing formdirectives components see sopost", "d": "8/2016"}, {"body": "converted lots code last week found helpful presence deprecated formdirectives form stuff common etc caused lot trouble saved oddly think planned delete stuff make easier upgrade projects rather harder", "d": "8/2016"}, {"body": "ca nt solved support question nt belong github please reopen support requests", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "appears caused using instead former already removed material angular respective masters still present last release everything gold w angular material mistake thinking removal commit already latest material release", "d": "8/2016"}, {"body": "tragetaschen still providers directly component nt deprecated", "d": "8/2016"}, {"body": "ok relief app namespacing issue otherwise unrelated modules conceptual difference lazyloaded nonlazyloaded modules remains addition needing different class names throughout application possible working application starts breaking one place seemingly unrelated module converted lazy loading provided services module become available module", "d": "8/2016"}, {"body": "app documentation especially migration guide consistent comment qdouble end clearly mentions cleanup leave components directives pipes directives pipes properties component metadata fact automatically hoist add ngmodule belong option temporary backward compatibility removed final release angular get ahead game start moving component directives pipes module declarations soon possible intend delete deprecated class methods properties next rc pipes directives references component hoisted backward compatibility removed future version implies tragetaschen observation still holds good angular removing component level provider", "d": "8/2016"}, {"body": "chandermani components pipes hoisted however still component scoped providers confusing pipedirective deprecation related providers nt ngmodule providers put top application component level providers", "d": "8/2016"}, {"body": "danieleds create custom value accessor declare module declarations wo nt found also looks like using symbols deprecated forms api fix two things form works expected", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "thanks michalstepien sorry lazy search similar issues", "d": "8/2016"}, {"body": "hey colinmorris would mind suggesting thr websitetutorial repo", "d": "8/2016"}, {"body": "whoops done", "d": "8/2016"}, {"body": "need install typings project folder", "d": "8/2016"}, {"body": "thnx brandonroberts", "d": "8/2016"}, {"body": "brandonroberts sorry typings already installed packagejson see post install mentioned install typings typings folder getting created level typingsjson", "d": "8/2016"}, {"body": "pkozlowskiopensource could please reopen issue sad see issue closed without verification", "d": "8/2016"}, {"body": "jaliyaudagedara need assistance come support channel", "d": "8/2016"}, {"body": "brandonroberts thanks joining", "d": "8/2016"}, {"body": "getting similar issue running gulp task compiling ts solution akash worked", "d": "8/2016"}, {"body": "agree say input field gets focus lose focus without enter anything valuechangesstatuschanges wo nt fire event therefore validationrequire warning got way capture", "d": "8/2016"}, {"body": "best option use ngnonbindable although sounds like pita put everywhere", "d": "8/2016"}, {"body": "ericmartinezr already tried ngnonbindable nt ignore template parsing still throws error", "d": "8/2016"}, {"body": "ran issue providing code examples ngnonbindable using longer works gt ended escaping described would nice simpler solution", "d": "8/2016"}, {"body": "plunker reproduce", "d": "8/2016"}, {"body": "zoechi plunker url", "d": "8/2016"}, {"body": "already fixed master part", "d": "8/2016"}, {"body": "pkozlowskiopensource thanks quick response could point fix curious resolved", "d": "8/2016"}, {"body": "lmfinney see", "d": "8/2016"}, {"body": "thats issue fixed library heshe seems register events left right like google maps likely register events also event trigger change detection executed outside angulars zone instead tell via change detect way around detect changes", "d": "8/2016"}, {"body": "sod great answer thank tested also leafletjs typescript const map thiszonerunoutsideangular gt lmap el zoomcontrol false setview latlng zoom mapaddlayer streetlayer outside mapon dragend gt thisonmapdragendemit run cd mapon click gt thiszonerun gt thisonmapclickemit", "d": "8/2016"}, {"body": "excessive change detection calls fixed thirdparty library repo", "d": "8/2016"}, {"body": "kara think might something even though agree example perhaps best nt excessive event emitting much run problem updating change detection firing load ignoring changes specifically example component see number updates properties bound chart directive data property see done timer loop another done using csv data loading directive fires event event fired loads csv property component set verified however data property setter never updated initial load undefined interestingly kind force work triggering change detection cycles like putting superfluous text input binding typing starts get change unreliably definitely working work happy help figure happening branch updated push link shortly", "d": "8/2016"}, {"body": "upgraded branch ideas would greatly appreciated", "d": "8/2016"}, {"body": "kara completely misread issue assumed original problem change detection firing turns firing often open new issue problem feel merit done something stupid let know", "d": "8/2016"}, {"body": "chrisnicola experienced behavior found issue", "d": "8/2016"}, {"body": "thanks copy comments", "d": "8/2016"}, {"body": "still typescript import reflectiveinjector angularcore const childproviders const childinjector reflectiveinjectorresolveandcreate childproviders injector second argument parent new injector", "d": "8/2016"}, {"body": "thanks lot help sod works perfectly", "d": "8/2016"}, {"body": "multi line comments traceur related errors upgrading apparently angular bugs parsing comments removed traceur errors went away", "d": "8/2016"}, {"body": "pietie totally goes list top retarded bugs thanks bunch", "d": "8/2016"}, {"body": "offtopic confirm frustrated day", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "guys solution npm remove angularrouter save remove rc router npm install angularrouter save install latest router", "d": "8/2016"}, {"body": "fwiw latest router alpha", "d": "8/2016"}, {"body": "already used nothing", "d": "8/2016"}, {"body": "issue looking see need pass module new upgradeadapter module created new module passed still getting error update work", "d": "8/2016"}, {"body": "looks like issue", "d": "8/2016"}, {"body": "kricetk able find solution error boat problem", "d": "8/2016"}, {"body": "sgrinich yet went path trying make modules angular code could nt find bootstrap correctly looks like issue comes bootstrap ngupgraded application decided lock resolved documentation move forward", "d": "8/2016"}, {"body": "solved issue least time simply needed init testbed like nt forget include import", "d": "8/2016"}, {"body": "already opened question point opening", "d": "8/2016"}, {"body": "also reproduced master", "d": "8/2016"}, {"body": "u use canload instead canactivate u want prevent lazy route loading", "d": "8/2016"}, {"body": "dzmitryshylovich updated plunker make clear might still role play module loaded need document created issue new problem returning false raises routing exception yet know handle", "d": "8/2016"}, {"body": "filed issue one event emitted fails could handle ideally would navigate somewhere else returning false guard", "d": "8/2016"}, {"body": "clear bug ideal navigate somewhere else staying put without effort correct behavior behave way throw promise error", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "dude seriously upgrade everything including router remove deprecated router also nuke node modules folder issue template must follow opening issue", "d": "8/2016"}, {"body": "mentioned right forum ask support questions please nt open duplicate issues like", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "mistake u see docs method returns subscription subscriber extends subscription use instead", "d": "8/2016"}, {"body": "chage seems resolve ca nt success event though returned object router fails", "d": "8/2016"}, {"body": "try", "d": "8/2016"}, {"body": "dzmitryshylovich thx worksbut", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "sounds like support question got answered thnx dzmitryshylovich sod helping", "d": "8/2016"}, {"body": "sounds like opinion rather bug report feature request nt belong", "d": "8/2016"}, {"body": "hear thing happening today error nt clear start commenting stuff realized importing components router", "d": "8/2016"}, {"body": "still puzzled must declared never referenced component template might something fear component kidnapping use case wonder timing thing import calling", "d": "8/2016"}, {"body": "compiles component soon inject app part module module came export providers like recommended ngmodule documentation shared modules method create child injector like wrote instead thus returned undefined plunkr", "d": "8/2016"}, {"body": "thank much", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "coming api still planned thomasburleson post updates info", "d": "8/2016"}, {"body": "helps already via", "d": "8/2016"}, {"body": "agree sod advantage gives full control css class name nt require changes framework close", "d": "8/2016"}, {"body": "typescript something completely different tells compiler ignore variable might null typescript complains warning foo might null silence warning writing crash anyway executing nullundefined disappears transpiling generate additional code", "d": "8/2016"}, {"body": "thanks sod clarifying nt think difference behavior put completely different cases postfix used assert something underlying value true functions compile time angular functions run time used shortcircuit case value whose property accessed may accessible still strong potential confusion two especially developers nt enormous amount experience typesafe programming languages nt necessarily accustomed thinking differences behavior run time compile time someone might instance write component like typescript component template hello fullname export class greetingcomponent input user user fullname string return thisuser firstname thisuser lastname expecting function analogously component like", "d": "8/2016"}, {"body": "see also", "d": "8/2016"}, {"body": "nonnull assertion operator opposite safe navigation operator angular expression language tells ts compiler lefthandside expression ca nt null undefined cases compiler ca nt infer tells parserinterpreter lefthandside expression might null undefined two different would confusing everyone try align", "d": "8/2016"}, {"body": "indeed two different operators different semantics reason supporting attempting align confusing template language strict superset typescript language nt support wrong mnemonic ts html people assume purely syntactic issue", "d": "8/2016"}, {"body": "similar issue trying test one components whose template includes another component inside want override inner component template something simple trying use overridecomponent method get error ie using causes error", "d": "8/2016"}, {"body": "yep definitely bug fixed master land use master builds angular npm install angularcorebuilds etc interim", "d": "8/2016"}, {"body": "u provide plunker min reproduction nt think related css selectors", "d": "8/2016"}, {"body": "updated plunker", "d": "8/2016"}, {"body": "afaik selectors like never supposed work selector target single element depend element child descendant sibling another element must contain space", "d": "8/2016"}, {"body": "zoechi totally right throwing nonsimple selectors", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "hi resolve issue problem", "d": "8/2016"}, {"body": "issues opened", "d": "8/2016"}, {"body": "another issue report issues link tutorial thanks tip brandon move issue angulario", "d": "8/2016"}, {"body": "found issues already reported resolved yet today", "d": "8/2016"}, {"body": "u provide minimal reproduction", "d": "8/2016"}, {"body": "yeh going need minimal plunker move forward one", "d": "8/2016"}, {"body": "hate creating plunker slow unhelpful editor bad overall experience tried best however nt get farther", "d": "8/2016"}, {"body": "tragetaschen plunker uses old bootstrap code requires modules", "d": "8/2016"}, {"body": "sigh nt require modules nonmodule infrastructure supposed still work break existing applications according blog deprecated though knew prevented comment initial post", "d": "8/2016"}, {"body": "would nt expect fixes deprecated apis", "d": "8/2016"}, {"body": "nt know problem assume fix necessary within deprecated apis maybe already time close seems like waste time fyi really shitty day due angular failing multiple levels due internal changes first release candidate promised api stability broke promise badly holistically please bear nt feel particularly compelled weigh words carefully posting", "d": "8/2016"}, {"body": "updated plunker use module maints unrelated error message remains though time edge", "d": "8/2016"}, {"body": "ok something weird plunker nt see copied code fresh one issue reproduces infrastructure rename class something else error goes away expected one appears regarding router able match url", "d": "8/2016"}, {"body": "also commenting line approutests route spectrum makes error go away without renaming class seems router definitely something", "d": "8/2016"}, {"body": "ok problem rather simple internally uses string representation kinds stuff components stringname although come two entirely different modules since decided throw away kind scoping merge anything automatically top two things named choose global scope naturally nt error apparently blog entry meant nt break could possibly go wrong take properly modularized application merge everything one giant namespace good work angular team", "d": "8/2016"}, {"body": "nt know problem assume fix necessary within deprecated apis maybe already time close seems like waste time think think bug demonstrate newest version otherise clear still anything", "d": "8/2016"}, {"body": "btw", "d": "8/2016"}, {"body": "pkozlowskiopensource zoechi problem comes fact yes components name spectrumcomponent case one used template somehow calling component reason quite bizarre looks happening routes declared somehow declaration routes overriding injector perhaps template calls spectrumcomponent even though importing different location getting one routes import spectrumcomponent spectrumcomponentts lt one overriding import usingspectrumcomponent usingspectrumcomponentts export var approutes routes path component usingspectrumcomponent path spectrum component spectrumcomponent lt commented works fine tragetaschen also sure insulting open source community developers going help way", "d": "8/2016"}, {"body": "liteserver customized wrapper around browsersync u need disable crossdevice action mirroring functionality", "d": "8/2016"}, {"body": "dzmitryshylovich thank response fixed problem really appreciate efforts", "d": "8/2016"}, {"body": "already fixed master", "d": "8/2016"}, {"body": "thanks closing duplicate", "d": "8/2016"}, {"body": "upgrade latest version", "d": "8/2016"}, {"body": "thnx dzmitryshylovich", "d": "8/2016"}, {"body": "likely happen direct feature animating something specific routing instead plans expand triggering api include support multiple elements time since routing involves two elements one element page removed another added makes sense make work element querying idea work routing imagine directional void animation would instead something like ts going back homepage outerpage trigger homepage lt outerpage global going forward direction trigger gt global going backward direction trigger lt api needs work definitely feature mind angular animations next two big animation features csslevel integration element querying please patient features developed coming weeks", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "please take look guidance questions wish file bug", "d": "8/2016"}, {"body": "router using longer available need migrate router version", "d": "8/2016"}, {"body": "helo brandonroberts using router version also tried version updated router version working please tell fix issue thanks", "d": "8/2016"}, {"body": "stop trying use deprecated router new rc router read documentation already updated afaik", "d": "8/2016"}, {"body": "brandonroberts packagejson file name version scripts start tsc amp amp concurrently npm run tsc w npm run lite lite liteserver postinstall typings install tsc tsc tsc w tsc w typings typings license isc dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade bootstrap corejs reflectmetadata rxjs systemjs zonejs devdependencies concurrently liteserver typescript typings", "d": "8/2016"}, {"body": "ericmartinezr new angular using deprecated version router", "d": "8/2016"}, {"body": "brandonroberts removed routerdepcrated packagejson still issue see error", "d": "8/2016"}, {"body": "deleted nodemodules folder tried npm install see errors", "d": "8/2016"}, {"body": "npm install typings g errors", "d": "8/2016"}, {"body": "sajiddesigner new must start officiak docs quickstart updated router dev guide updated router", "d": "8/2016"}, {"body": "following quickstart docs found error working quickstart project ericmartinezr", "d": "8/2016"}, {"body": "hello brandonroberts per instructions updated npm run commans npm install npm start following results", "d": "8/2016"}, {"body": "see first comment initial post markpritchett", "d": "8/2016"}, {"body": "closing sounds like support question see", "d": "8/2016"}, {"body": "vsavkin done", "d": "8/2016"}, {"body": "unclear whether submitting question bug feature request please take look guidance depending needs", "d": "8/2016"}, {"body": "markpritchett sorry unfamiliar pattern updated query thanks", "d": "8/2016"}, {"body": "create plunker example use case", "d": "8/2016"}, {"body": "create async validators formgroups well formcontrols closing trouble replicating problem without plunker see docs", "d": "8/2016"}, {"body": "already fixed master", "d": "8/2016"}, {"body": "yep fixed master closing", "d": "8/2016"}, {"body": "appears somewhat vexing challenge new module system least source code point view determining componentsdirectives actually referenced requires parsing template similar would required angularjs however relatively easy workaround think could used fix first run ngc template precompiler look output typescript source code references componentsdirectives used template idea core team mind providing dependency tool short term perhaps effective encourage author use tip make work new ngmodule system", "d": "8/2016"}, {"body": "make complaint heard issue lot people feel dependency tracking still needed component level wanting remove work alongside ngmodules", "d": "8/2016"}, {"body": "kylecordes damiandennis thanks help", "d": "8/2016"}, {"body": "course write much better imo", "d": "8/2016"}, {"body": "uhh like months old version issue reporting fixed maser via fix available onward closing already fixed master", "d": "8/2016"}, {"body": "ca nt much cyclic dependencies could definitively improve error message", "d": "8/2016"}, {"body": "pretty environment dependent things like basehref etc impact load paths config works environment go", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "bug using snapshot params updated component reused since detail child list route reused change heroes order get parameter updates components reused need subscribe params working example", "d": "8/2016"}, {"body": "brandonroberts looks like example made nt bug getting private app sorry link real error", "d": "8/2016"}, {"body": "nt bug persay much misconfiguration ca nt componentless empty path route terminating route component rendered working example empty component", "d": "8/2016"}, {"body": "thanks help worked feel like nt even need empty route render sure reason nt understand thanks", "d": "8/2016"}, {"body": "guess ballbark", "d": "8/2016"}, {"body": "sod yes partly yes exception completely yes", "d": "8/2016"}, {"body": "u provide minimal reproduction otherwise actionable", "d": "8/2016"}, {"body": "dzmitryshylovich wish could project working big private project nt part potentially cause bug ca nt make boilerplate reproduce bug", "d": "8/2016"}, {"body": "problem error put modules instead", "d": "8/2016"}, {"body": "project working big private project nt part potentially cause bug ca nt make boilerplate reproduce bug juleskremer afraid spend time trying narrow issue otherwise one really actionable", "d": "8/2016"}, {"body": "error well might something initializing router check updated example", "d": "8/2016"}, {"body": "sure part cause error adding ngmodule reorganize project error gone", "d": "8/2016"}, {"body": "please narrow provide reproduce scenario otherwise actionable one thing might check assignment binding property search stab dark without reproduce scenario", "d": "8/2016"}, {"body": "added link test server problem starts hitting orange button saying start nu de check", "d": "8/2016"}, {"body": "skunheal link whole live app meant narrow provide reproduce scenario", "d": "8/2016"}, {"body": "already fixed master", "d": "8/2016"}, {"body": "thank info", "d": "8/2016"}, {"body": "sorry u provide minimal reproduction actionable least provide snippet component module", "d": "8/2016"}, {"body": "got error upgrading seems thing upsets binding ngmodel changed following format fixed problem nt know makes difference component dynamically loaded componentfactoryresolver", "d": "8/2016"}, {"body": "seems using hack posted nt yet supported directly use like see also", "d": "8/2016"}, {"body": "yeah got post way back thanks actually try ngmodel binding yesterday still working expected look plnkr problem group initially check option expected works fine group uses checked syntax group also update click buttons bottom", "d": "8/2016"}, {"body": "make default values string working fine", "d": "8/2016"}, {"body": "ah thanks input typetext works fine initial number binding though bit confusing reason string radios would nice framework could throw", "d": "8/2016"}, {"body": "thanks pietie zoechi solve problem using suggestion", "d": "8/2016"}, {"body": "template precompiler described amenable shrinking overall size minifiedtreeshaken program achieves mention typesfilesfunction nt actually use avoids need include compiler deployed program however appears example code compiler output considerably larger input template wonder might imply projects certain size overall minifiedproductiontreeshaken results might larger precompiler maybetodo make generate complex templates could used test hypotheses easily", "d": "8/2016"}, {"body": "yes larger minify mangle jit angularcompile mb minify mangle aot without angularcompile mb treeshaken via rollup angular esmsrc files", "d": "8/2016"}, {"body": "generated template files certain point almost always end larger compiler stays consistent performance cases startup times sampling weekend part reason like lazy loading router nt load megalithic bundles get performance boost precompiled templates", "d": "8/2016"}, {"body": "rob feasible mix match would mean precompiled templates initial bundle smallestpossible app startup jit templates slower start smaller laterloaded additional code", "d": "8/2016"}, {"body": "thinking compiled template size thing wonder ultimately possible terms keeping performance generated code reducing size sense underlying javascript engine jits quite aggressive effective probably opportunity make generated code tighter extracting duplication rely helper classes need appear etc losing little performance hunch hopefully product complete shipped correctness key features wellestablished debugged seems quite good actually although great number open issues tracker attention might shift back making precompiler output correct fast also small", "d": "8/2016"}, {"body": "one great things html terse yet still readable representation thing rendered vs programming languages even ugly syntax angular adds top template string always going way smaller javascript representation even small number components easily generating code represent templates would taken include runtime compiler generated template files certain point almost always end larger compiler using webpack visualizer showed represented app bundle templates always likely quickly dwarfed code compiler spitting real non helloworld app ever going save compiling distinctly remember promise would make bundles smaller faster definitely smaller conversation huge bundles happened promises offline compiler bundle size splitting things nt reduce size yes allows lazy loading parts app code still needs loaded parsed eventually nt eaten less pie cut pieces first", "d": "8/2016"}, {"body": "mention thanks string fragmentation gzipping allow great string compression", "d": "8/2016"}, {"body": "interesting point captaincodeman html terse always thought tediously verbose various big angular projects mostly used jade alternate syntax tame painful duplication verbosity excessive syntax noise html jsx concise html tsx nearly also typed please template think prominent issue template compiler intentionally optimized speed size discussed prominently podium ngconf one core team sorry forget showed compiler emits code optimized performance much human manually handunrolled bit create shortest possible execution path kind change suggests path improvement way ask pre compiler generate slightly less fast concise code compilers languages like c approximately entire lifetime compiler htmllike language could get also", "d": "8/2016"}, {"body": "kylecordes aot compiler quite young plan improve code size speed future stay tuned", "d": "8/2016"}, {"body": "probably best update nonetheless difficult answer question example seems incomplete something likely code show actually calling inject block explicitly implicitly message says ca nt change providers something calls think otherwise please provide repro plunker reason error triggered dummy testrunner nt bother execute describe calls", "d": "8/2016"}, {"body": "thanks reply code import declaration variables anyways import provide angularcore import inject testcomponentbuilder addproviders beforeeach expect describe angularcoretesting import authenticationservice sharedloginservice import router angularrouter import http httpproviders xhrbackend angular import mockbackend angular import authconfig authhttp import toasterservice toasterconfig import logger sharedloggerservice import mainconfig mainconfig import savereportcomponent savereportcomponent import savereportservice savereportservice import httpinterceptor shared class mainconfigmock usemocks boolean true let builder testcomponentbuilder let savereportservice savereportservice let authhttp authhttp describe component save report gt beforeeach gt addproviders provide mainconfig useclass mainconfigmock", "d": "8/2016"}, {"body": "also ca nt update since restricted ionic releases way overcome thanks", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "ah yes sorry duplicate", "d": "8/2016"}, {"body": "suggestions related prominently located angulario clear statement intended browserversion compatibility support make first party published ie angulario quickstartsexamplesetc include necessary polyfills accommodations work across list supported browsers make officialendorsed cli create projects default work across list supported browsers gently urge community increase chances people pick initial examples places angulario also default include necessary accommodations work across list supported browsers", "d": "8/2016"}, {"body": "fwiw warning docs added see pr check website docs pipes date currency pipes need ecmascript internationalization api safari older browsers nt support add support polyfill", "d": "8/2016"}, {"body": "laskoviymishka thanks initiating issue back work today take look", "d": "8/2016"}, {"body": "lifecycle hook nt work like expecting something like none work ngmodule though looking problem since nt take injector providers anymore better outside ngmodule create ngmodule app use di ngdobootstrap grab service way created bootstrap rather later", "d": "8/2016"}, {"body": "think issue trying inject singleton instance service class module bootstrapped like import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule import globals globals export function main params var globals new globals globalsappversion paramsappversion globalsisauthenticated paramsisauthenticated globalsuserdisplayname paramsuserdisplayname method bootts gets called javascript aspnet cshtml page pass values client app starts without explicitly declared globals appmodule providers get error op ie provider globals declare providers globals explicitly module error goes away instance dispensed within module clearly singleton initialized provided call looking bootstrapmodule method one would expect optional providers collection meant override matching provider declarations found module specified nt seem work nt even know whether anything method called op use within ngdobootstrap might unrelated issue environment windows angular version browser chrome language typescript tsc version", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "thnx dzmitryshylovich", "d": "8/2016"}, {"body": "ok already fixed closed", "d": "8/2016"}, {"body": "closed got power", "d": "8/2016"}, {"body": "thanks fix", "d": "8/2016"}, {"body": "modules aware made available another exports module module knowledge component add declarations wanted share component two modules need create shared add component array add shared module module array", "d": "8/2016"}, {"body": "work appmodule import customherodetailcomponent heroesmodule amp crisiscentermodulemodule import customherodetailcomponent", "d": "8/2016"}, {"body": "example plunker works trying key files custom hero detail component file declares exports component imports adds access component imports adds access component import wanted use component would add", "d": "8/2016"}, {"body": "worked well pretty key point import module", "d": "8/2016"}, {"body": "yep sharing componentspipesdirectives across multiple modules done module declarations", "d": "8/2016"}, {"body": "realized may problem site asking user location never get response code closing ticket verifying reopen cause", "d": "8/2016"}, {"body": "also mean modules must conflict even use selector working without problems failed get working plnkr rc plnkr rc challenge get rc version working without changing anything third party folder", "d": "8/2016"}, {"body": "yup exactly meant", "d": "8/2016"}, {"body": "seems working intended nt really want two components fighting selected element either party party go element solution create feature modules discussed angular modules chapter ootwch updated version plunker show mean", "d": "8/2016"}, {"body": "sorry sure understand two third party libraries use selector components need use weird true case control selectors would good able give namespace use side side sure examples covers use case providing", "d": "8/2016"}, {"body": "thanks wardbell plunker cleared things mainly add commonmodule everywhere watch exports damiandennis comment reedit plunker quite cover use case mind greenlistmodule redlistmodule wrappers around third party component provide modules yet alternatively part third party component circumstances order import bit different still works damiandennis plunker two thirdparty components use selector seems work expected would agree", "d": "8/2016"}, {"body": "ah get quite verbose see works", "d": "8/2016"}, {"body": "reading article vsavkin realised wrong routerlink value something like lack documentation made guess things closing", "d": "8/2016"}, {"body": "works fine firefoxchrome", "d": "8/2016"}, {"body": "docs repo", "d": "8/2016"}, {"body": "closed opened new issue", "d": "8/2016"}, {"body": "repo looking one anyway repo kind issues ask stackoverflow", "d": "8/2016"}, {"body": "thanks", "d": "8/2016"}, {"body": "design u think first param element instead index", "d": "8/2016"}, {"body": "jesus functions assuming first parameter item array nt fail returns undefined instead error thanks", "d": "8/2016"}, {"body": "implement interfaces class like", "d": "8/2016"}, {"body": "true pain much smaller close one", "d": "8/2016"}, {"body": "nvm fixed", "d": "8/2016"}, {"body": "problem", "d": "8/2016"}, {"body": "likewise", "d": "8/2016"}, {"body": "problem least stop pulling hair possibly related", "d": "8/2016"}, {"body": "confirmed also require typescript version greater officially supported typescript version", "d": "8/2016"}, {"body": "workaround windows users use node inside lxss commonly bash ubuntu windows codegen seems work correctly", "d": "8/2016"}, {"body": "generating ngfactoryts files", "d": "8/2016"}, {"body": "resolved", "d": "8/2016"}, {"body": "fix issue merged master branch think gon na fixed", "d": "8/2016"}, {"body": "error ngupgrade app sure causing error since stack trace pointing code", "d": "8/2016"}, {"body": "hi guys sure related get error message complains authconfig factory appmodule import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent appcomponent import approutes approutes import loggedinguard securityloggedinguard import authproviders authhttp authconfig jwthelper import httpmodule angular import formsmodule angularforms import ngbmodule ngbootstrapngbootstrap import dashboardmodule dashboarddashboardmodule import landingpagecomponent landingpagelandingpagecomponent import routes routermodule angularrouter import authservice securityauthservice import ngfor ngif angularcommon export const routes routes path component landingpagecomponent ngmodule declarations appcomponent imports browsermodule httpmodule ngbmodule formsmodule dashboardmodule routermoduleforroot routes bootstrap appcomponent providers loggedinguard authproviders jwthelper provide authconfig usefactory gt return new authconfig tokenname authtoken headername authorization headerprefix bearer globalheaders contenttype applicationjson nojwterror true notokenscheme true authhttp authservice directives ngfor ngif export class appmodule running", "d": "8/2016"}, {"body": "issue function calls supported consider replacing function lambda reference exported function makes impossible configure custom provider following snippet typescript ngmodule declarations appcomponent delaisschedule imports browsermodule routing formsmodule reactiveformsmodule httpmodule buttonmodule calendarmodule datatablemodule dialogmodule growlmodule inputtextmodule tabviewmodule menumodule providers new provider authenticatedhttp usefactory backend xhrbackend defaultoptions requestoptions gt new authenticatedhttp backend defaultoptions deps xhrbackend requestoptions approuterproviders delaislimitesservice droitsaccesservice syncservice bootstrap appcomponent please indicate workaround", "d": "8/2016"}, {"body": "calling functions calling supported metadata using aot includes things like examples workaround introduce exported function call changing first example typescript export function loadcrisiscenter return require crisiscentercrisiscentermodule crisiscentermodule export const crisiscenterroutes routes path redirectto heroes pathmatch full path crisiscenter loadchildren loadcrisiscenter example transformed typescript export function jwthelperfactory return new authconfig tokenname authtoken headername authorization headerprefix bearer globalheaders contenttype applicationjson nojwterror true notokenscheme true ngmodule declarations appcomponent imports browsermodule httpmodule ngbmodule formsmodule dashboardmodule routermoduleforroot routes bootstrap appcomponent providers loggedinguard authproviders jwthelper provide authconfig usefactory jwthelperfactory authhttp authservice export class appmodule lpenet example transformed typescript export function authenticationfactory backend xhrbackend defaultoptions requestoptions return new authenticatedhttp backend defaultoptions ngmodule declarations appcomponent delaisschedule imports browsermodule routing formsmodule reactiveformsmodule httpmodule buttonmodule calendarmodule datatablemodule dialogmodule growlmodule inputtextmodule tabviewmodule menumodule providers provider authenticatedhttp usefactory authenticationfactor deps xhrbackend requestoptions approuterproviders delaislimitesservice droitsaccesservice syncservice bootstrap appcomponent reason limitation aot compiler needs generate code calls factory way import lambda module import exported symbol", "d": "8/2016"}, {"body": "great looking forward try tested solves problem next", "d": "8/2016"}, {"body": "chuckjaz using ts export const upgradeadapter new upgradeadapter forwardref gt appmodule ngmodule class appmodule error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol appmodule thanks edited problems putting inside decorator", "d": "8/2016"}, {"body": "ok use ngc suggestions thanks", "d": "8/2016"}, {"body": "since depends used send complete example", "d": "8/2016"}, {"body": "aot compilation fails using function loadchildren typescript import routes angularrouter import homeroutes homehomeroutes declare const system export const lazyload type function gt export const routes routes homeroutes path loadchildren lazyload gt systemimport aboutaboutmodule r gt raboutmodule bash ngc p tsconfigaotjson error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file resolving symbol routes resolving symbol mainmodule resolving symbol mainmodule simplifyincontext staticreflectorsimplify staticreflectorannotations", "d": "8/2016"}, {"body": "tsconfigjson main file loaded systemjs appts ts import dashboardmain modulesdashboardmain app modules angular import upgradeadapter corewebsaysdashboardmodule main app module import conversation servicesconversation import services components angularmodule dashboardapp factory conversation conversation directive dashboardsectionclippings dashboardsectionclippingscomponent import coreupgradeconfig upgrade services angularelement document ready function upgradeadapterbootstrap documentbody dashboardmainname upgradeconfigts ts import upgradeadapter websaysdashboardmodule filter websaysdashboardmodulets main app module ts import ngmodule forwardref type angularcore import commonmodule angularcommon import upgradeadapter angularupgrade import httpmodule angular import browsermodule angularplatformbrowser import formsmodule reactiveformsmodule angularforms import tooltipdirectives dropdowndirectives import conversation servicesconversation import contextualhelpkeydirective contextualhelpkeydirective import import infinitescroll import chartfacetauthorcomponent chartfacetauthorcomponent export const upgradeadapter new upgradeadapter forwardref gt websaysdashboardmodule ngmodule imports commonmodule mdtooltipmodule declarations tooltipdirectives dropdowndirectives exports tooltipdirectives dropdowndirectives export class websaysdashboarduithirdpartymodule note aot nt like functions executed inside decorators ok nt like way neither export const dashboardclippingdateeditable type dashboardclippingdateeditable ngmodule imports commonmodule httpmodule browsermodule formsmodule reactiveformsmodule websaysdashboarduithirdpartymodule declarations contextualhelpkeydirective infinitescroll chartfacetauthorcomponent export class websaysdashboardmodule", "d": "8/2016"}, {"body": "information recorded annotations translated code aot compiler references made annotations must simple exported symbols inline lambda call supported way extract code way generate correctly another context error received trying communicate ran one unsupported scenario key part error consider changing code something like typescript export function loadaboutmodule return systemimport aboutaboutmodule r gt raboutmodule export const routes routes homeroutes path loadchildren loadaboutmodule", "d": "8/2016"}, {"body": "chuckjaz using router using old router executing function annotation far know see code example", "d": "8/2016"}, {"body": "confirm plunker issue cloning locally replacing plunker one able reproduce well", "d": "8/2016"}, {"body": "believe encountered behavior using inject mock object came following workaround seems work let myservice beforeeach gt testbedconfiguretestingmodule declarations mycomponent providers myservice beforeeach async gt testbedcompilecomponents beforeeach inject injector injector gt myservice injectorget myservice trigger open gt spyon myservice open var fixture testbedcreatecomponent mycomponent fixturecomponentinstanceopen calls myserviceopen expect myserviceopen tohavebeencalled notice pulling instance myservice along way instead using di framework provide mock directly component", "d": "8/2016"}, {"body": "please provide plnkr ask gitter", "d": "8/2016"}, {"body": "application structure huge could nt figure exact code raised need idea could cause error", "d": "8/2016"}, {"body": "sounds like support request want ask gitter stackoverflow closing nt bug feature request", "d": "8/2016"}, {"body": "solved add import reactiveformsmodule angularforms ngmodule imports reactiveformsmodule appmodule remove reactiveformdirectives directives components", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "dzmitryshylovich thanks made change using import services nt made discernible difference see", "d": "8/2016"}, {"body": "bit info bug affects lazyloaded modules content loaded app launch problem template component component loaded via selector templates work template component used within eagerly loaded module include component template lazyloaded ca nt see icon set loaded launch built much narrower plunkr demonstrating problem notice eagerly loaded components able display icon however plunker", "d": "8/2016"}, {"body": "roxkilly dzmitryshylovich experiencing exact problem question possible app root providers percolate lazy loaded modules seen discussed documented anywhere except issue", "d": "8/2016"}, {"body": "thegreenpizza yes possible even documented service array bootstrapped service imported result another module singleton available lazyloaded modules long nt redeclare modules already several services behave way seems service nt injected properly angular nt exposed properly ngmaterial", "d": "8/2016"}, {"body": "thegreenpizza think limitation bug see", "d": "8/2016"}, {"body": "need intl polyfill", "d": "8/2016"}, {"body": "thank", "d": "8/2016"}, {"body": "part give year two", "d": "8/2016"}, {"body": "yeh something tackled widget libs first enough common points could pull core future", "d": "8/2016"}, {"body": "dup fixed", "d": "8/2016"}, {"body": "brandonroberts thanks putting together pretty much accepted deal haha suppose good pose question team see think", "d": "8/2016"}, {"body": "ngoninit effect", "d": "8/2016"}, {"body": "alternatively perform router injection directly", "d": "8/2016"}, {"body": "check existing issue need include intl polyfill", "d": "8/2016"}, {"body": "aware polyfill angular already ships small bucket polyfills irritating safari ship probably unreasonable expect angular instantly crash box ios devices also apparent include intl polyfill current angularcli webpack without using cdn moment method using angular tools make angular work ios safari nt specifically ask issue regarding", "d": "8/2016"}, {"body": "sorry really confused closure breaks angular safari ios using builtin formatting pipes mean closure saying angular shipped officially support safari ios get including polyfills every ancient browser talking august version safari latest os x el capitan ios angular happy open another issue including polyfill default required make angular work mobile browsers certainly best practice belongs nowhere else seems silly fix problem affects hopefully target browsers", "d": "8/2016"}, {"body": "plunker repro added", "d": "8/2016"}, {"body": "able solve", "d": "8/2016"}, {"body": "thecritic thing seen try manually call changedetectorrefdetectchanges manually matter error persists", "d": "8/2016"}, {"body": "problem dynamically create modal window attach app component dynamically create component modal window crashes loading content modal", "d": "8/2016"}, {"body": "anyone looking dirty hack wrap code settimeout", "d": "8/2016"}, {"body": "jpleclerc work around work dynamic form requires control present rendering remove change detection error though", "d": "8/2016"}, {"body": "use aftercontentinit lifecyclehook initupdate nested dynamiccomponent updated plunker", "d": "8/2016"}, {"body": "gluix awesome think life cycle hook nt try", "d": "8/2016"}, {"body": "tests rely componentfactoryresolver filled correctly need declare entrycomponents via configuretestmodule import module way test module correct test users would use module internal map test module never go componentfactoryresolver makes components entrycomponents case actual apps sat aug jeremy elbourn notifications githubcom wrote componentfactoryresolver internal map containing factories components compiled however testbed compiles components declared dynamictestmodule factories stored testbed internal modulewithcomponentfactories factories never made known componentfactoryresolver tests use resolver create component declared test module fail error component factory found yourtestcomponent workaround simply create real ngmodule declare test components import test module cc tbosch igorminar receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "ie configuretestingmodule declarations entrycomponents thu aug tobias bosch tbosch googlecom wrote tests rely componentfactoryresolver filled correctly need declare entrycomponents via configuretestmodule import module way test module correct test users would use module internal map test module never go componentfactoryresolver makes components entrycomponents case actual apps sat aug jeremy elbourn notifications githubcom wrote componentfactoryresolver internal map containing factories components compiled however testbed compiles components declared dynamictestmodule factories stored testbed internal modulewithcomponentfactories factories never made known componentfactoryresolver tests use resolver create component declared test module fail error component factory found yourtestcomponent workaround simply create real ngmodule declare test components import test module cc tbosch igorminar receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "tbosch nt property automatically treated", "d": "8/2016"}, {"body": "treated entrycomponents otherwise componentfactoryresolver would know componentfactoryresolver using entrycomponents testbedcreatecomponent method using componentfactoryresolver entrycomponents module probably add entrycomponents configuretestingmodule workaround mentioned creating temporary ngmodule would needed thu aug pm jeremy elbourn notifications githubcom wrote tbosch configuretesitngmodule nt entrycomponents declarations automatically treated entrycomponents receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "meant say test module meant treated fact causes bug igorminar intention testing module", "d": "8/2016"}, {"body": "declare components want dynamically create ngmodule entrycomponents section huge regression point view used dynamiccomponentloader componentresolver worked like charm new way really dynamic anymore kind beats purpose hardcode list components want dynamically create really broke app big way", "d": "8/2016"}, {"body": "following case feel confused want create component define", "d": "8/2016"}, {"body": "allenhwkim dynamically creating component componentfactoryresolver need component declared entrycomponents section least understanding tests confirmed", "d": "8/2016"}, {"body": "nt scriptstesttestmodule import routermodule angularrouter export const routing routermoduleforroot path loadchildren scriptstesttestmodule pathmatch full path admin loadchildren scriptsadminadminmodule usehash true ps also getting issues webpack loadchildren property reason stops detecting saved changes", "d": "8/2016"}, {"body": "importable files located inside scripts folder eg", "d": "8/2016"}, {"body": "without info nothing", "d": "8/2016"}, {"body": "thought create working non working example share soon possible", "d": "8/2016"}, {"body": "going close nt heard back happy reopen got minimal reproduce scenario plunker similar", "d": "8/2016"}, {"body": "diagnosed offline determined error encountered unrelated metadata", "d": "8/2016"}, {"body": "please consider least warn console element module element component directive pipe spent hours dumb error hardtorecognise error also coding late night nt help p", "d": "8/2016"}, {"body": "way item brings annoying limitationirritation typescript type system quite good express many kinds types reasonably well unfortunately yet express types related presence certain decorators many commonly used pseudotypes angular example notion component directive pipe module typed typescript therefore nt get help typescript problem feature request brings get runtime eventually template precompiler time error tried pass wrong kind thing long asking ponies almost certainly get angular team expressed desire make breaking api changes pony want would like somehow essential commonly used pseudotypes angular somehow become real types instead get comprehensive ide compiler assistance topics like imports versus declarations versus providers feature request", "d": "8/2016"}, {"body": "would also like add two components main app component two components sharing single service two communicate feel would good could mention appmodulets reference link sample service sharing child components link code child components sharing service would look code way could place appmodulets file would great", "d": "8/2016"}, {"body": "kylecordes bring real problem bunch issues open enhance type inference based presence decorators sorts contexts beneficial tooling static error detection however related issues aspects worth considering pattern angular exposes consumes fundamental problems opaque true typescript language yet capture type class modified applied decorator fidelity type information available via providers far lower even example someone inserts pipe provider array even see name type compile time tuple types used instead array types requires simple specialized generic identity function could least see statically kind things registering typescript export function tupled lt extends new args gt extends new args gt b export function tupled lt extends new args gt extends new args gt extends new args gt b c export function tupled lt extends new args gt extends new args gt extends new args gt extends new args gt b c export function tupled lt extends new args gt extends new args gt extends new args gt extends new args gt extends new args gt b c e export function tupled lt extends new args gt extends new args gt extends new args gt extends new args gt extends new args gt extends new args gt b c e f export function tupled lt extends new args gt extends new args gt extends new args gt extends new args gt extends new args gt extends new args gt b c e f switch argumentslength case return b case return b c case return b c case return b c e case return b c e f see provided use replace obviously sufficient tackle problem point using illustrate angular take sufficient advantage typescript already offers support improved tooling broadly whole provider pattern clumsy encourages conflation compile time types runtime values promotes nonidiomatic use language seen developers adopting pattern app layers awful notice type fundamentally may confuse new typescript programmers", "d": "8/2016"}, {"body": "one important note would immediately require breaking current api since properties different imports could deprecated maintaining backwards compatibility move childservice providers attribute appmodule remove providers attribute way able share instance across different components submodules app see hand case looks like using components instead shared service", "d": "8/2016"}, {"body": "rogerpadilla yeah beginning tied using input output using routercomponents display child components also wanted use values updated child components parent component thought using shared service good design", "d": "8/2016"}, {"body": "rogerpadilla place service providers attribute components able access right want components access", "d": "8/2016"}, {"body": "ok got answer applicationscoped providers contactservice provider applicationscoped angular registers module providers application root injector architecturally contactservice belongs contact business domain classes domains nt need contactservice nt inject might expect angular offer modulescoping mechanism enforce design nt angular module instances unlike components injectors ca nt provider scopes omission intentional angular modules designed primarily extend application enrich entire app module capabilities service scoping rarely problem practice noncontact components ca nt inject contactservice accident inject contactservice must first import type contact components import contactservice type", "d": "8/2016"}, {"body": "might expect angular offer modulescoping mechanism enforce design nt angular module instances unlike components injectors ca nt provider scopes ngmodule define injectors modules thus providers limited domain e create additional module contact package declare contact service provider please let discuss separate thread", "d": "8/2016"}, {"body": "rogerpadilla think proposal putting flawed least talk contactmodule example angulario docs example contactmodule module declares things want import module nt import things declares module perspective nt make much sense", "d": "8/2016"}, {"body": "counter proposal withdrawn see edit note agree rogerpadilla sometimes seems quite bit boilerplate ngmodules example modules whose overlap signifantly example order contactmodule consume directives pipes must put deviation angulario example want importers module able consume must put exports well expected api proposal declarations think module exports something also considered one declares things exports semantically declarations could defined union configuration could reduced semantics even backwardcompatible would nt hurt arrays edit faq angulario ngmodule docs lists reexports use case premise module exports declares longer holds true must withdraw proposal", "d": "8/2016"}, {"body": "agree making whole new component feel kind verbose want think api carefully risk keep adding options becomes complex initial got two duplicate syntaxes first inclination nt support inputoutput template", "d": "8/2016"}, {"body": "would actually argue really needs support inputs agree outputs may bit much rarely components nt inputs supporting api nt add much incremental value testbedcreatecomponent mycomponent", "d": "8/2016"}, {"body": "supporting inputs well makes lot easier see test input within test", "d": "8/2016"}, {"body": "example implementing directly client code typescript beforeeach async gt testbedconfiguretestingmodule declarations mycomponent testwrappercomponent component selector testwrapper template class testwrappercomponent function buildcomponent template string bindings binding string promise gt testbedoverridecomponent testcomponent set template inputs objectkeys bindings return testbedcompilecomponents gt note also use testwrappercomponentprototype binding instead objectassign however using objectassign closely matches angular wherein inputs available construction const fixture testbedcreatecomponent testwrappercomponent object assign fixturecomponentinstance bindings return fixture", "d": "8/2016"}, {"body": "let say tests builds wrapper components mycomponent templateurl gives error seems like compilecomponents require components tempateurl compiled tests however test override template component therefore requires component compiled best way approach thanks", "d": "8/2016"}, {"body": "overriding need calling need call inside block individual test overriding", "d": "8/2016"}, {"body": "overriding need calling testbedcompilecomponents check place", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "component put inside block error message shows therefore requires put block executes", "d": "8/2016"}, {"body": "remember asynchronous future work like creating components promise resolved", "d": "8/2016"}, {"body": "fix already merged published next release", "d": "8/2016"}, {"body": "eta next release upgrading app working client ran bug", "d": "8/2016"}, {"body": "work around setting content type headers get requests aug pm bruce wade notifications githubcom wrote eta next release upgrading app im working client ran bug receiving authored thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "thanks issue also happens delete requests suggest removing content type work around", "d": "8/2016"}, {"body": "matsko comment problem deeper supposed", "d": "8/2016"}, {"body": "yes working tomorrow", "d": "8/2016"}, {"body": "something new", "d": "8/2016"}, {"body": "figured need day talk tbosch see final issues", "d": "8/2016"}, {"body": "thanks great news looking", "d": "8/2016"}, {"body": "needs need navigating navigating within component see", "d": "8/2016"}, {"body": "whatever component trying use componentfactoryresolver declare components trying dynamically render entrycomponents component syntax component directives providers entrycomponents mydynamiccomponent edit case component selector factorycomponent template entrycomponents export class factorycomponent", "d": "8/2016"}, {"body": "minimal plunker updated level deprecated api going removed nt use closing support question see", "d": "8/2016"}, {"body": "pkozlowskiopensource thank much exactly answer needed", "d": "8/2016"}, {"body": "pkozlowskiopensource please expand config assume pulls different reference element default looking docs mentions nothing option", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "thanks suppose go source code first next time", "d": "8/2016"}, {"body": "ivanstrelcov point issue improve error message fix example", "d": "8/2016"}, {"body": "already error message test relation requester got lost", "d": "8/2016"}, {"body": "sod think equal exception version one one really confusing circulary dependencies really bad", "d": "8/2016"}, {"body": "removal old forms api merged hours ago wrong", "d": "8/2016"}, {"body": "looking plunker actually nt see deprecation message may want refresh attached directive nt appear regardless ericmartinezr mentioned directive deprecated form apis removed master message longer concern", "d": "8/2016"}, {"body": "could provide minimal reproduction scenario plunker share info build well exported see", "d": "8/2016"}, {"body": "closing nt heard back opener", "d": "8/2016"}, {"body": "worked jit aot typescript export const generateroute function route string params object string return decodeuricomponent routinggenerate route params substr export const emptyroutesarray export const routesentryactions myfirstaction mysecondaction export function routes return path generateroute firstaction component myfirstaction path generateroute secondaction arg arg component mysecondaction ngmodule imports routermoduleforroot emptyroutesarray providers provide routes multi true usefactory routes entrycomponents routesentryactions bootstrap mysinglepageapp export class mysinglepagemodule sadly token exported instead could make public instead make also accept factories", "d": "8/2016"}, {"body": "closing might well create pull request later", "d": "8/2016"}, {"body": "got number unfortunate words manager package controller component module etc words mean anything depending context similar words easily create confusion imo container one confusing words wo nt address problem raising merely swap one set confusions another one given nt think breaking change justified point going close one thnx suggestion though naming things hard feel free continue discussion generate ideas", "d": "8/2016"}, {"body": "already fixed master check workarrounds", "d": "8/2016"}, {"body": "thanks", "d": "8/2016"}, {"body": "issue still uses companiesservice", "d": "8/2016"}, {"body": "ihachani mdymel tried regarding docs also providers property", "d": "8/2016"}, {"body": "trouble like isnt instantiating mock service provide try configurecompiler thing", "d": "8/2016"}, {"body": "nah issue infact using configurecompiler changed value undefined instead null", "d": "8/2016"}, {"body": "classes tried everything working great", "d": "8/2016"}, {"body": "confirm able mock service well code snippet javascript describe component search gt let mocksearchservice mocksearchservice let mockactivatedroute mockactivatedroute let mockrouter mockrouter beforeeach gt mocksearchservice new mocksearchservice mockactivatedroute new mockactivatedroute term peyton mockrouter new mockrouter also used success javascript beforeeach gt testbedconfiguretestingmodule providers provide http usefactory backend connectionbackend defaultoptions baserequestoptions gt return new http backend defaultoptions deps mockbackend baserequestoptions provide searchservice useclass searchservice provide mockbackend useclass mockbackend provide baserequestoptions useclass baserequestoptions wrote tutorial using new testing infrastructure since nt seem much documentation available", "d": "8/2016"}, {"body": "using typescript observing following error trying run unit tests typeerror read property configuretestingmodule undefined test services injectable export class demorootservice constructor private dependency demodependencyservice search id number string return thisdependencytest injectable export class demodependencyservice constructor test return dep unit test code import testbed angularcoretesting import http angular import inject angularcoretesting import demorootservice demodependencyservice demoservice describe demorootservice gt beforeeach gt try testbedconfiguretestingmodule providers provide demorootservice useclass demorootservice provide demodependencyservice useclass demodependencyservice catch e alert e lt typeerror read property configuretestingmodule undefined", "d": "8/2016"}, {"body": "issue well however noticed component metadata still providers array defined moving providers array applications ngmodule solved issue seen far way override mock provider specified component metadata", "d": "8/2016"}, {"body": "timshelley hit exact issue moved injectable service component providers array ngmodule providers array component declared test immediately passed interestingly effected call testbedcreatecomponent calls testbedget service still correctly resolved substituted service", "d": "8/2016"}, {"body": "vsavkin plans fix think current behaviour makes impossible use auxroutes combination lazyloading featuremodule scenarios", "d": "8/2016"}, {"body": "tell bit use case generally supported bind property directly using writes value internally conflict want initialize value write component class plunker use case would helpful", "d": "8/2016"}, {"body": "supposed create radio buttons ngfor", "d": "8/2016"}, {"body": "ack totally misread admittedly welllabeled issue talking text inputs radio buttons able bind exactly happening click radio button multiple times created plunker seems work intended differently example plunker would expedite", "d": "8/2016"}, {"body": "hmm running example plunkr works fine copy exact code project breaks wonder package interfering code potential issues", "d": "8/2016"}, {"body": "potential issues impossible say looking list projects try take one one till works anyway nt think anything fix angular side closing one", "d": "8/2016"}, {"body": "ts import ngmodule forwardref angularcore import commonmodule angularcommon import upgradeadapter angularupgrade import httpmodule angular import browsermodule angularplatformbrowser import formsmodule angularforms import mdtooltipmodule import tooltipdirectives dropdowndirectives import tooltipdirective tooltipcontainercomponent import timepickercomponent import datepickerdirectives import fooservice fooservice import foodirective foodirective import foopipe foopipe export const upgradeadapter new upgradeadapter forwardref gt websaysdashboardmodule ngmodule imports commonmodule httpmodule browsermodule formsmodule mdtooltipmodule declarations tooltipdirectives dropdowndirectives foopipe foodirective providers fooservice export class websaysdashboardmodule", "d": "8/2016"}, {"body": "actually likely everyone want styles going children best use styleurls go deep default something like stylenotdeepurls component styles", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "actually feature request new functionality make working styles children better", "d": "8/2016"}, {"body": "merged next release", "d": "8/2016"}, {"body": "would suggest either making slash separated parts part path make url parameter allowing slashes urls part actual url confusing", "d": "8/2016"}, {"body": "remember merged fix reopen issue template fully completed repro", "d": "8/2016"}, {"body": "see needs review merge", "d": "8/2016"}, {"body": "please reopen complete issue template still pb", "d": "8/2016"}, {"body": "two forms modules looking includes reactiveformdirectives reactiveformsproviders getting duplicate errors including reactiveformsdirectives component longer necessary w ngmodules", "d": "8/2016"}, {"body": "nt know forms modules docs saw talked formsmodule thanks", "d": "8/2016"}, {"body": "fortunately app small started top eventually came see error less useless text parse faster fix issues sorry rant", "d": "8/2016"}, {"body": "falling internal instance method since instances concept submission makes sense top level property could reset introduces method top level form directives reset form model reset state false native reset buttons also reset state", "d": "8/2016"}, {"body": "confused link highlighted repro", "d": "8/2016"}, {"body": "sure navigate home person one yes page one highlighted navigated person one person two page one highlighted person two", "d": "8/2016"}, {"body": "navigating page one results url navigating page two results url url link trying highlight navigating page link trying highlight longer active completely different url make sense", "d": "8/2016"}, {"body": "thanks seeing seeing navigating page one results url navigating page two results url confused", "d": "8/2016"}, {"body": "updated plunker show works put tag think proves issue directive", "d": "8/2016"}, {"body": "vsavkin another chance look would really appreciate thanks", "d": "8/2016"}, {"body": "brandonroberts know dealt directive issues chance take look repro ca nt worries know busy thanks advance", "d": "8/2016"}, {"body": "sharpmachine bug updated element anchor tag may root cause adding classes correctly tag", "d": "8/2016"}, {"body": "brandonroberts thanks getting back good know def bug wait fix released", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "could provide plunker repro", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "think use st st input attribute tag transfer value id child cmp abilityto use thisrouteparamssubscribe related route cmp separately", "d": "8/2016"}, {"body": "mlcmlapis structure like hero separate heroheader cause heroheader common many components depended route change route params empty also appcomponent", "d": "8/2016"}, {"body": "ok still think choose channel transfer id places like central comm hub service singelton observablesubscribes many combinations routes could defined like three ids exist", "d": "8/2016"}, {"body": "mlcmlapis make service heroheader subscribe every component root need fire observer every component ex id idxx idxxyy idxxyyzz could catch params heroheader less boilerplate flexible", "d": "8/2016"}, {"body": "thought concept like singelton hub service available constructor di cmp service method cmp send id cmp subscribe hub observable ids distributed syntax structure messages", "d": "8/2016"}, {"body": "singelton hub service available constructor di cmp one big problem imho another things ok header common every component u twenty thirty components write thing every component les abstracted", "d": "8/2016"}, {"body": "route params scoped route defined design however navigate router state tree get routes params want share params across different routes use queryparams another option would provide custom url serializer push set params every activated route closing issue", "d": "8/2016"}, {"body": "maybe use componentless route root route tree others children one guard processed also child route guard ability analyze actual activated route push info hub service eliminates necessity repeatedly create code call method hub service component", "d": "8/2016"}, {"body": "httpproviders deprecated would nt bet use app injector create child injector get app injector ngmodule create set constructor module class", "d": "8/2016"}, {"body": "chance plunkr toda", "d": "8/2016"}, {"body": "live code something late plunkers basically module constructors run root component gets instantiated set new injector property module instance use get hold nt know use case going towards less natural best approach set providers metadata property custommodule depends want achieve want new injectors every action take factories suited", "d": "8/2016"}, {"body": "toda raba think code still wo nt completely replace thr http providers still missing classes requestoptions etc ones part barrel layla tov", "d": "8/2016"}, {"body": "think part", "d": "8/2016"}, {"body": "shlomiassaf fix issue closing tx", "d": "8/2016"}, {"body": "sounds like typescript related support issue nt belong see still believe problem angular please provide minimal reproduce scenario plunker requested issue template", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "nt need since export returns", "d": "8/2016"}, {"body": "would module know routes sample app shows implement routing live example import ngmodule angularcore import browsermodule angularplatformbrowser app root import appcomponent appcomponent feature modules import contactmodule contactcontactmodule import sharedmodule sharedsharedmodule import routing approuting ngmodule imports browsermodule contactmodule routing sharedmoduleforroot declarations appcomponent bootstrap appcomponent export class appmodule removed routermodule appmodule effect removed routing well neither made difference", "d": "8/2016"}, {"body": "buddyackerman ok share details build bundling help chatroom", "d": "8/2016"}, {"body": "development environment bundling app yes loading files", "d": "8/2016"}, {"body": "buddyackerman ok getting anything console start app share indexhtml systemjs config", "d": "8/2016"}, {"body": "alex rickabaugh gitter add catch err gt consolelog err bootstrap call got error messages found third party control updated time update changed name property sort routing issue app loads loading login page appcomponent check see user saved auth token navigates login route component never loads put breakpoint login component constructor hit appcomponent calls constructor checklogin method checks existing auth token calls debugging hitting lines never hits breakpoint login constructor", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "buddyackerman exactly add catch err gt consolelog err start seeing errors added catch maints platformbrowserdynamic bootstrapmodule appmodule catch err gt consolelog err still nt see anything console", "d": "8/2016"}, {"body": "alexeiych added also however sometimes nt work either turning router tracing expose errors catch nt enable router tracing like", "d": "8/2016"}, {"body": "buddyackerman enabled tracing routing help fact stripped app bare minimum get started routing neither still nt load code indexhtml systemimport app catch function err consoleerror err loading use strict systemjs configuration file see links information user configuration map relative paths urls const map moment user packages configuration const packages main defaultextension js main defaultextension js moment main momentjs defaultextension js everything underneath line managed cli const barrels string angular specific barrels angularcore angularcommon angularcompiler angularforms angular angularrouter angularplatformbrowser angularplatformbrowserdynamic thirdparty barrels rxjs app specific barrels app appshared clibarrel const clisystemconfigpackages barrelsforeach barrelname string gt clisystemconfigpackages barrelname main index type declaration ambient system declare var system apply cli systemjs configuration systemconfig map angular vendor angular rxjs vendorrxjs main mainjs packages clisystemconfigpackages apply user configuration systemconfig map packages maints browser platform compiler import platformbrowserdynamic angularplatformbrowserdynamic import enableprodmode angularcore import environment app import appmodule appappmodule environmentproduction enableprodmode compile launch module platformbrowserdynamic bootstrapmodule appmodule catch err gt consolelog err appmodulets import ngmodule angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import httpmodule angular import appcomponent appcomponent import routing approuting import accountscomponent accountaccountscomponent import accountdetailcomponent accountaccountdetailcomponent import accountservice accountaccountservice import nedaccountservice nednedaccountservice ngmodule imports browsermodule formsmodule routing httpmodule declarations appcomponent accountscomponent accountdetailcomponent providers accountservice nedaccountservice bootstrap appcomponent export class appmodule appcomponentts import component angularcore import accountscomponent accountaccountscomponent component selector otisapp templateurl appappcomponenthtml template first angular app directives accountscomponent export class appcomponent title otis", "d": "8/2016"}, {"body": "nt really see anything obvious unless appcomponenthtml accountscomponent tried putting plnkr find try show someone problem wind finding problem nt find others non working example think plnkr broken since minification mangles javascript breaks maybe jsfiddle works", "d": "8/2016"}, {"body": "exact issue turned mangling issue sure swallowing errors blank screen console errors maybe check js nt mangled safe", "d": "8/2016"}, {"body": "minificationmangling problem would definitely see error console yes also turn mangling", "d": "8/2016"}, {"body": "alexeiych plnkr working error load example plnkr see works", "d": "8/2016"}, {"body": "said updated see packagejson angularrouter still thing code github npm update ca nt find anything newer tried manually changing walking case routerelated classes appears incompatible docs angular site also think said new angular getting things figured maybe gotten code confused trying update versions", "d": "8/2016"}, {"body": "angular core forms router", "d": "8/2016"}, {"body": "use anglularcli build js code produces looks perfectly clean signs mangling minification let try load plunkr", "d": "8/2016"}, {"body": "found issue indexhtml code following line bootstrapping app systemimport app catch function err consoleerror err new angularcli based app requires change systemimport main catch function err consoleerror err probably anything rather default systemconfigts file generated angularcli thanks lot help guys", "d": "8/2016"}, {"body": "buddyackerman find related versions documented eg right router version overview somewhere documented thanks", "d": "8/2016"}, {"body": "jpkey docs sure date router though else fails always look source code", "d": "8/2016"}, {"body": "buddyackerman thanks reply also thought looking code directly must best way", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "think support coming looking source master looks like syntax looks like brandonroberts work might able confirm correct", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "testbedconfiguretestingmodule imports mylibmodule declarations mockd testbedoverridemodule mylibmodule declarations remove add mockd also see", "d": "8/2016"}, {"body": "would nt", "d": "8/2016"}, {"body": "want avoid dealing whole list fragile use addremove", "d": "8/2016"}, {"body": "nt think works subobjects wrong try minute", "d": "8/2016"}, {"body": "ok right slightly different syntax complete working example using module removing one declarationexports ts import async inject testbed componentfixture angularcoretesting import component ngmodule angularcore component selector acmp template class acomp component selector acmp template adiff class adiffcomp component selector bcmp template b class bcomp component selector bcmp template bdiff class bdiffcomp component selector omegacmp template class omegacomp ngmodule declarations acomp bcomp exports acomp bcomp class mymodule fdescribe overriding stuff gt maybe lets override sub things gt testbedconfiguretestingmodule imports mymodule declarations omegacomp adiffcomp think good enough continue think whether add better ergonomics post", "d": "8/2016"}, {"body": "intended behavior define level child routing considered parent needs template first example considered top level routes", "d": "8/2016"}, {"body": "closing issue behavior intentional", "d": "8/2016"}, {"body": "functionality already exists see first test super simple example typescript import componentfixture fakeasync inject testcomponentbuilder testbed tick angularcoretesting import component oninit angularcore import angularplatformbrowser component selector somecomponent template hello class somecomponent describe somecomponent gt allow override template fakeasync inject testcomponentbuilder tcb testcomponentbuilder gt const plunker smile", "d": "8/2016"}, {"body": "markpritchett thanks sample talking new test api old one already use hundred tests ebook various projects", "d": "8/2016"}, {"body": "oh see mean cexbrayat looks like would fairly simple put pull request looking source maybe would something like", "d": "8/2016"}, {"body": "root route empty path considered active routes want active root route add element", "d": "8/2016"}, {"body": "closing issue use get desired behavior", "d": "8/2016"}, {"body": "great nt find documentation first time around time found thanks", "d": "8/2016"}, {"body": "could provide plunker repro", "d": "8/2016"}, {"body": "made example plunker nt know rely plunker try since nt know url plunker preview behaves behavior expect click users link refresh page would still see users component work try chromes said sure rely plunker check", "d": "8/2016"}, {"body": "redbaronnc plunker works users component remains refresh open plunker see tiny blue button arrow pointing directions top right corner click plunker open example new window examine url navigate users component click refresh please let know results", "d": "8/2016"}, {"body": "right works plunker thank help", "d": "8/2016"}, {"body": "think problem see discussion simple example reproduces problem", "d": "8/2016"}, {"body": "oh searched webpack posting bug looked minified similar thanks check discussion quick review appear similar issue", "d": "8/2016"}, {"body": "closing duplicate thnx kylecordes", "d": "8/2016"}, {"body": "updated plnkr candeactivate example well try navigating page found view disallow navigation checking events emitted router", "d": "8/2016"}, {"body": "pr fixes", "d": "8/2016"}, {"body": "fixed master", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "find solution componentresolver needs putstuffhere tag must added template doest work added fly suggestions", "d": "8/2016"}, {"body": "find solution componentresolver needs viewchild putstuffhere read viewcontainerref putstuffhere putstuffhere tag must added template doest work added fly suggestions", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "first take look discussion find everything good bad modules second quoting ngmodule properties components directives pipes must belong exactly one module means component used different modules packed module", "d": "8/2016"}, {"body": "funny thing actually reading discussion saw reply thanks try sharedmodule approach get work hope becomes easy", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "duplicate pull request pending", "d": "8/2016"}, {"body": "remove deprecatedformsmodule bootstrap selection preserved use either formsmodule depricatedformsmodule time migration documentation changelog bit misleading examples", "d": "8/2016"}, {"body": "bannana box refers banana box", "d": "8/2016"}, {"body": "sorry pkozlowskiopensource copy paste error know whats bananna also box feature request still valid nt", "d": "8/2016"}, {"body": "event named order make work", "d": "8/2016"}, {"body": "yes works thank non angular guys like thats something evident even readed nt remember thanks lot", "d": "8/2016"}, {"body": "anyone help really nt figure reason almost spend noon solve", "d": "8/2016"}, {"body": "hello plnkr something update break routing far know", "d": "8/2016"}, {"body": "sorry dont plnkr breaked routing changed code including ngmodule pretty sure problem code paste dont know fix", "d": "8/2016"}, {"body": "routes replace edit try tell us", "d": "8/2016"}, {"body": "error", "d": "8/2016"}, {"body": "maints ca nt see bootstrap", "d": "8/2016"}, {"body": "maints import enableprodmode angularcore import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule enableprodmode platformbrowserdynamic bootstrapmodule appmodule", "d": "8/2016"}, {"body": "sure wechatmodule set properly maybe someone else could help", "d": "8/2016"}, {"body": "huyaxiong errors posted warnings problem import routes childmodule need import delete wechatroutes main routing config see concept action check imported sure redirect still works afterwards", "d": "8/2016"}, {"body": "warnings route components need module also", "d": "8/2016"}, {"body": "huyaxiong worked maybe helps appmodulets import ngmodule angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import appcomponent appcomponent import approutes approutes import mainmodule mainmodule import gallerymodule gallerymodule ngmodule imports browsermodule formsmodule mainmodule gallerymodule approutes declarations appcomponent bootstrap appcomponent export class appmodule approutests note loadchildren mainmodule mainmodule import routes routermodule angularrouter const routes routes path loadchildren mainmodule mainmodule path gallery loadchildren gallerymodule gallerymodule export const approutes routermoduleforroot routes mainmodulets import ngmodule angularcore import mainroutes routes import homecomponent componentshomecomponent import contentcomponent componentscontentcomponent import contactcomponent componentscontactcomponent ngmodule imports mainroutes declarations homecomponent contentcomponent contactcomponent export class mainmodule mainroutests import routes routermodule angularrouter import homecomponent componentshomecomponent import contentcomponent componentscontentcomponent import contactcomponent componentscontactcomponent export const routes routes path component homecomponent path contact component contactcomponent path content component contentcomponent export const mainroutes routermoduleforchild routes", "d": "8/2016"}, {"body": "choeller thank man u solved problem also thanks others", "d": "8/2016"}, {"body": "duplicate pull request pending", "d": "8/2016"}, {"body": "thanks ruffiem happy close duplicate", "d": "8/2016"}, {"body": "please provide minimal reproduce plunker otherwise actionable really", "d": "8/2016"}, {"body": "inska manage fix problem described", "d": "8/2016"}, {"body": "paistipokka yes fixed problem guess appmodulests related problem package dependency", "d": "8/2016"}, {"body": "issue project complicated easily distill plunkr gist issue component declared appmodulets imported feature module moved component shared module exports instead imported shared module feature module fixed issue", "d": "8/2016"}, {"body": "seems problem different yet similar error inska right problem appmodulests tried import angular importing angular wasted almost half day oh well good lesson learned", "d": "8/2016"}, {"body": "explicit error message regardless one extremely difficult debug", "d": "8/2016"}, {"body": "see similar issue", "d": "8/2016"}, {"body": "thank paistipokka trying import ngstyle ngclass turned suggestion need import commonmodule solved error", "d": "8/2016"}, {"body": "getting issue ca nt figure still error nt show detailed message information missing module component", "d": "8/2016"}, {"body": "problem case listed services wrong instead module declaration wrong ngmodule imports commonmodule sharedmodule myfirstservice mysecondservice declarations mycomponent exports mycomponent correct ngmodule imports commonmodule sharedmodule providers myfirstservice mysecondservice declarations mycomponent exports mycomponent", "d": "8/2016"}, {"body": "problem cryptic error message provides zero clues went built hello world application added simple http rxjs reference service error comes going back problem addressed either documentation meaningful way guide developer working around flaw design", "d": "8/2016"}, {"body": "figured removing dependencies imports services providers worked added one one found one shared module created issue looks like problem imported service sections providers imports created error", "d": "8/2016"}, {"body": "pitfall helps anyone pipes declarations imports", "d": "8/2016"}, {"body": "happens http request custom requestoptions set contenttype applicationjson header remove contettype angular already set works", "d": "8/2016"}, {"body": "put body also works rise problems", "d": "8/2016"}, {"body": "error back local npm package error certainly abstruse difficult debug create symlink random place within app angular nt complain use exactly package per error back inska could please reopen", "d": "8/2016"}, {"body": "cortopy much point commenting closed issues see usecase error message clear please open new issue precise reproduce scenario ideally plunker push many changes improve error messages time adding test likely error back probably hitting another code path need reproduce scenario", "d": "8/2016"}, {"body": "thanks pkozlowskiopensource advice error meant error message case filed detailed report", "d": "8/2016"}, {"body": "happens http request custom requestoptions set contenttype applicationjson header soon remove works", "d": "8/2016"}, {"body": "pls provide plunker reproduction", "d": "8/2016"}, {"body": "full code much segment", "d": "8/2016"}, {"body": "full code much segment nt need full code minimal reproduce scenario plunker without one help suspecting including component module stab dark impossible confirm without reproduce scenario", "d": "8/2016"}, {"body": "directive selector imagemessage export class imagemessagedirective implements oninit ondestroy input touser touser string private el htmlelement private reader new filereader private image constructor el elementref thisel elnativeelement ngoninit ngondestroy hostlistener change onchange component selector chat template export class chatcomponent", "d": "8/2016"}, {"body": "use imagemessagedirective listen file changes chatcomponentand upgraded reminds error like ca nt bind touser since nt known property input want ask directive usage changed", "d": "8/2016"}, {"body": "huyaxiong get error prod environment dev", "d": "8/2016"}, {"body": "yeah maybe related", "d": "8/2016"}, {"body": "cristimusat dont understand matter local computer whether added enableprodmode error appeared", "d": "8/2016"}, {"body": "huyaxiong problem using problem appeared fixed adding moduleid moduleid components directives declared declarations array appmodule", "d": "8/2016"}, {"body": "cristimusat didnt use angularcli use systemjs combined gulp thanks help", "d": "8/2016"}, {"body": "huyaxiong minify code yes check may error", "d": "8/2016"}, {"body": "gabejohnson didnt minify code wrote also use systemjs use umdminjs files think problem thanks anyway", "d": "8/2016"}, {"body": "problem seams bundling mangle activated minification", "d": "8/2016"}, {"body": "thank everyone routes ngmodule config issue cause", "d": "8/2016"}, {"body": "sounds like including see migration guide still think bug please reopen plunker demonstrating issue", "d": "8/2016"}, {"body": "hi kara also error ca nt bind ngmodel since nt known property input resolve read ngmodule import formsmodule nothing happens really need help pls thanks", "d": "8/2016"}, {"body": "hard help without example plunker provide one", "d": "8/2016"}, {"body": "tested mini app work alright seems problem move angular dir distlibs folder nt know", "d": "8/2016"}, {"body": "hi kara tiny question dir structure like think problems import modules nt get get error despite files load fine im using systemjs nt think replicate plunker ideas thankful", "d": "8/2016"}, {"body": "pablocarreraest doublecheck template", "d": "8/2016"}, {"body": "thanks htmlminifier making god bless u", "d": "8/2016"}, {"body": "formsmodule provided formprovidersts formsts reexport everything", "d": "8/2016"}, {"body": "upgrade include packages contains typescript definitions directly example", "d": "8/2016"}, {"body": "advice marcalj seems unusual simply installing angular npm makes proper type things available typescript set highly numerous angular projects never needed separately ask typings command make typings available angular", "d": "8/2016"}, {"body": "unfortunately typings installs fixing issue", "d": "8/2016"}, {"body": "vapits please attach installed npms via command npm list", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "kylecordes typescript version using maybe requirement old typescript version use typescript use thanks", "d": "8/2016"}, {"body": "marcalj angular currently declares dependency typescript cli creates projects depend couple months ago could stick typescript angular work nt know whether still possible today see little realistic reason found effective simply follow along cli sets used typescript current angular rcn projects however pointing back toward goal issue tracker issues angular would prefer page angulario site official statement dependencies required versions various tools spent minutes searching find anything though noticed quickstart still uses typescript currently even page typescript set mention version requirements", "d": "8/2016"}, {"body": "also polyfills nt know ones use specific browser version specially ie thanks", "d": "8/2016"}, {"body": "kylecordes removed typings npm packages working perfectly thanks advice", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "even use polymer components use polymer cssmixins projection ts import polymerelement component selector nsapp directives polymerelement appdrawer polymerelement appheader polymerelement apptoolbar polymerelement papericonbutton template side menu home apptoolbar projecting styles apptoolbarfontsize export class nsapp", "d": "8/2016"}, {"body": "sounds like", "d": "8/2016"}, {"body": "took look code things going want use reactive forms directive need want include addition since also using reactive form directives like code snippet appears mixing old new forms api template new api angularforms instantiating instance old one angularcommon deprecated api meant used new one choose want stick old one use instead recommend fully upgrading example new api example deprecated api", "d": "8/2016"}, {"body": "thanks kara taking time answer bit confused though plunker remove get error says remove everything works would seem reactive form directive missing something", "d": "8/2016"}, {"body": "sharpmachine sorry answer bit confusing get answering late night mentioned templatedriven directive reactive comes use element actually activated used wo nt actually need always using element hand using without reactive form directive need modules code snippet okay without add second input tag would break", "d": "8/2016"}, {"body": "nt worry easily confused okay get fog lifted thanks explanation", "d": "8/2016"}, {"body": "discussed router slack channel", "d": "8/2016"}, {"body": "running issues getting lazy loading work webpack think fundamental problem issue essentially trying write class bootstrap means lazyload modules looks like hardcoded router deep source code override bootstrap fails build global object perhaps going wrong way think possible provide module loader override using systemjs", "d": "8/2016"}, {"body": "benelliott add custom provider main module", "d": "8/2016"}, {"body": "brandonroberts try thanks", "d": "8/2016"}, {"body": "invoked runtime webpack wont able create separate chunk build time api like would fine provide instance", "d": "8/2016"}, {"body": "ended getting working following one examples upgradeadapterjs javascript var adapter new upgradeadapter forwardref gt var module angularmodule myexample moduledirective greet function return scope salutation name template salutation name moduledirective component selector template template text class ngmodule declarations greet imports browsermodule class documentbodyinnerhtml adapterbootstrap documentbody myexample ready function expect documentbodytextcontent toequal template hello world text", "d": "8/2016"}, {"body": "upgrading angular providers add following ngmodule metadata providers token suggestions", "d": "8/2016"}, {"body": "ptomaszi got past many many errors related upgradeadapter getting provider angular services course working ca nt use returns void", "d": "8/2016"}, {"body": "dparish see know use reference", "d": "8/2016"}, {"body": "marcalj try see using const give access upgradeadapter rest code base referencing upgradeadapter rest app creating new instance upgradeadapter portions app", "d": "8/2016"}, {"body": "dparish referencing example ts import upgradeadapter appmodule filter", "d": "8/2016"}, {"body": "angular http replaces header negotiate trims token set sent angular http change payload header means present angular longer authorize using openid connect", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "also using token authorization problems code", "d": "8/2016"}, {"body": "removed child routing child module app works idea http request sends bearer token", "d": "8/2016"}, {"body": "buddyackerman hidden flags would turn error reporting way move forward try isolate problem report actually add meaningful error message many times made changes app longer loads could please isolate cases open separate issue one remember include plunk reproduce scenario see clear case things failing nonobvious way try sth going close issue nothing actionable stands today please report concrete use cases failed mysterious way thnx", "d": "8/2016"}, {"body": "point error error typed something wrong setup something correctly error reporting trying load app angular swallowing errors makes difficult troubleshoot broke", "d": "8/2016"}, {"body": "point error error typed something wrong setup something correctly error reporting understand want help reporting meaningful error message cases angular swallowing errors nt least intentionally makes difficult troubleshoot broke totally understand pain precisely asked open separate issue clear description wrote terms code expectation failed silently want good thing ca nt fix things nt know", "d": "8/2016"}, {"body": "way post problem making changes use new module architecture nt load idea problem code something post public ca nt spend time sanitizing order post still would like understand wo nt load yet reports errors", "d": "8/2016"}, {"body": "went back state going update methodical way first step installing packages resulted following errors happened first time assumed errors nt relevant since assumed trying delete files nt nt seem throw errors related missing functionality later see problem might caused missing errors failure could find file c angularcommonsrcfacadepromisedts failure could find file c angularcoresrcapplicationcommonprovidersdts failure could find file c angularcoresrcplatformcommonprovidersdts failure could find file c angularcoresrcanimationanimationdriverdts failure could find file c angularcoresrcfacadepromisedts failure could find file c angularcoresrcanimationactiveanimationplayersmapdts failure could find file c angularformssrcdirectivesreactivedirectivesformarraynamedts failure could find file c angularformssrcfacadepromisedts", "d": "8/2016"}, {"body": "add service array since declaration", "d": "8/2016"}, {"body": "closing support question see", "d": "8/2016"}, {"body": "router nt accept promises guards accepts promise observable", "d": "8/2016"}, {"body": "brandonroberts check guard works resolve working", "d": "8/2016"}, {"body": "provide plunker reproducing issue", "d": "8/2016"}, {"body": "closing issue please reopen plunker reproducing problem", "d": "8/2016"}, {"body": "take look router developer guide looking root module two submodules routes submodules imported root module routes merged together tl dr main module uses sub modules use", "d": "8/2016"}, {"body": "brandonroberts thanks exactly done outcome stated route adminusersnewuser invalid route usersnewuser works fine could set route users routing prefixed admin nt resolve issue getting correct router outlet const approutes routes path component homecomponent export const approuting routermoduleforroot approutes const adminroutes routes path admin component admincomponent export const adminrouting routermoduleforchild adminroutes const userroutes routes path users component usercomponent children path newuser component newusercomponent export const userrouting routermoduleforchild userroutes one level nesting children root works fine need nest additional children first level nt seem supported right", "d": "8/2016"}, {"body": "see importing submodules routes main module flattens configurations together routes nt child unless specify way route configuration", "d": "8/2016"}, {"body": "changing route start admin fix path issue outlet issue could flatten admin module removing child modules putting components admin module nt feel quite right lot modules reused parallel applications prior module change worked well like concept modules part worked work around figured try get official answer support child child routing", "d": "8/2016"}, {"body": "issue everything gets loaded router outlet component bootstraped root module", "d": "8/2016"}, {"body": "found way work around basically defining routes way used time top child level example admin route const adminroutes routes path admin component admincomponent children setuproutes export const adminrouting routermoduleforchild adminroutes setup routes file imported sub area defines routes including children catch file exports routes object routermoduleforchild result setup removed child subchild routes submodule definitions export components used routes submodules routes started working like wanted big fan workaround least take advantage rest features preferably module definitions imported parents would enough layer route definitions guess decision angular team make hopefully helps others", "d": "8/2016"}, {"body": "router configuration feature module transported via module import wait look source code method actual routes put become part dependency injection every nonlazyloaded module providers hoisted root lose hierarchical information root module routes injected router flattening essentially reason subrouteroutlet ignored two working options workaround basically circumvents entire advantages feature modules supposed bring use lazy loaded module works new injector provide routes router see existing component tree routeroutlet lazy loading nt requirement possible solution could change accept actual module class instead string router behave lazy loaded modules instead load eagerly great blog article lately resisted mark questionable parts analysis pepper", "d": "8/2016"}, {"body": "take look conversation use synchronously", "d": "8/2016"}, {"body": "yeah going open something like nice see analysis correct though", "d": "8/2016"}, {"body": "want use component across multiple modules need create shared module add component shared module add shared module modules", "d": "8/2016"}, {"body": "yeah works problem inconvenient multiple directivescomponents used times components", "d": "8/2016"}, {"body": "shared module setup easier add components multiple modules long run helps organize code modules standard convention aug pm umed khudoiberdiev notifications githubcom wrote yeah works problem inconvenient multiple directivescomponents used times components receiving commented reply email directly view github mute thread", "d": "8/2016"}, {"body": "really harms organization long run lets bring example two modules need handle situation create add looks like gon na put components lets say components modules also uses different components questionmodule uses usermodule components loads lot stuff nt really need loads components needs one seems bad option create shares one component load one file worry loads components wait annoying simply stupid create one another separate file component want share definitely bad option good options", "d": "8/2016"}, {"body": "indeed confusing moved functionality module getting error ngselectoption part declarations modules internalformssharedmodule spformsmodule spformsmodule module importing internalformssharedmodule anywhere idea would two modules clash", "d": "8/2016"}, {"body": "jusefb usually means added instead importing appropriate forms module rule created directive need declare nt create comes module nt go instead add module previous comment concerned modules sharing components modules nt need organize used term shared module loosely nt one create set small modules import modules share components", "d": "8/2016"}, {"body": "thanks go code thoroughly try get work", "d": "8/2016"}, {"body": "want use component maybe try cheat angular using extends try something like typescript component selector selector templateurl componenthtml class basecomponent export class acomponent extends basecomponent export class bcomponent extends basecomponent two components basically avoid conflicts might add different selectors components", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "see question speachless", "d": "8/2016"}, {"body": "vicb think need read carefully close issue", "d": "8/2016"}, {"body": "issue type ngselectoption part declarations modules fulltext search code found occurence ngselectoption pretty sure caused third party module library one gt please add better error message feature request think might make migration post ngmodules lot less painful note solutions presented help either", "d": "8/2016"}, {"body": "agreed legitimate feature request question requesting support reopened discussion", "d": "8/2016"}, {"body": "punksage ootwch snarechops someone reproduce plunker would help getting issue reopened third party module causing guess two modules instead importing appropriate module could also happen nt removed components still lingering directive component used multiple modules", "d": "8/2016"}, {"body": "brandonroberts others think error occurs component either userwritten builtin accidentally implicitly transitively included one module easily happen even without nowdeprecated directives list maybe tip make easier make repro plunker still suspect turn feature bug", "d": "8/2016"}, {"body": "kylecordes right upgraded nt removed components one components still including one old formdirectives arrays could see would happen", "d": "8/2016"}, {"body": "brandonroberts thanks bee helpful guess could also new fulltext search found imported components included removing components used seems make error message disappear note mentioning error message seems one case gave name offending module another case mentioned less helpful however offers modulebased version update conclusion update requires update third party libraries use least ones designed seems whole thing less backward compatible hoping documentation also seems solvable would helpful provide error warning might feature request future migration", "d": "8/2016"}, {"body": "ootwch new module system typical thirdparty angular based libraries present application module yes need updated embrace however meantime fairly easy workaround simply add single file application defines module includes contents older less angular based library using depend module modules get past trouble libraries updated", "d": "8/2016"}, {"body": "etiennechabert hear saying issue get error variety reasons missing directive described case simple typo directive input simple typo native property name trying bind attribute instead property unfortunately got way knowing pb comes missing directive simple typo kind hard suggest perfect solution moreover moving away listing directives components shifting towards listing modules reasons simply ca nt change error message suggesting said think improve error message since know directives active properties etc also know properties dom elements technically could even detect typos keep one open toy different ideas let know ca nt go ahead proposal things though", "d": "8/2016"}, {"body": "thanks detailed answer pkozlowskiopensource created ticket believe forgotten directives one basic errors new least generic error message list possible cases including typo directives could least put developer one good ways instead wrong one actual error message checked input declaration component multiple time finally founding real reason error anyway good hear able specific future kind mistake", "d": "8/2016"}, {"body": "since placed click handler tag must return prevent default link behavior like another option would place click handler button dom element closing issue", "d": "8/2016"}, {"body": "suspect design notion modules would modest moderate size would need one component selector single module yet large application sprawling across many modules accidental reuse selector modules far afield wo nt cause trouble", "d": "8/2016"}, {"body": "completely true help maintainability application cant share single html multiple components need slightly different logic html code reach result", "d": "8/2016"}, {"body": "think proxy component may helpful assigning select proxy choose subcomponents inside proxy still needed inside proxy component", "d": "8/2016"}, {"body": "got problem used selectors multiple components main appcomponent reason like global template html done easily appcomponenthtml many tags selectors central design template showstopper nt know maintain global html template repeat design things component", "d": "8/2016"}, {"body": "used html file include header componet files", "d": "8/2016"}, {"body": "using component display different datasets single page", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "yeh discussion let centralize", "d": "8/2016"}, {"body": "plunkr error", "d": "8/2016"}, {"body": "chuckjaz could please take look", "d": "8/2016"}, {"body": "seems problem beginning async pipe emits null see example", "d": "8/2016"}, {"body": "caselit exactly uses operator", "d": "8/2016"}, {"body": "issue assumption generating expression twice generate expression producing value generated code looks like observes two values coming pipe instead first one checks first assumes second nonnull solution introduce temporary storing result first invocation would result code like work introducing temporary variable", "d": "8/2016"}, {"body": "issues filed repository angular functionality usage please move question appropriate channel receive proper support", "d": "8/2016"}, {"body": "nt support forum issues filed repository functionality angular usage please check appropriate channels need assistance", "d": "8/2016"}, {"body": "jnord please close issue related angular also please see github issue etiquette making posts", "d": "8/2016"}, {"body": "thank workaround", "d": "8/2016"}, {"body": "confirm issue particular cause code find basic routing setup angular router using workaround fixed issue thanks bunch", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "ambient default need explicitly include forms module check details", "d": "8/2016"}, {"body": "pkozlowskiopensource every step nothing happen ideas guide thanks", "d": "8/2016"}, {"body": "please provide plunker demonstrates problem would fix pass values validator creating stateful validators", "d": "8/2016"}, {"body": "ok problem describe bit mean stateful validator know term stateful pipe validator main problem generic validation function recognize control actually running create tons wrapped validators purpose transfer value formcontrolname already exists form definition duplications name values hundreds controls many depends others values really lot work", "d": "8/2016"}, {"body": "support questions discussed one channels mentioned contributing got question problem", "d": "8/2016"}, {"body": "course know still main problem remains solutions except many many lines code feature request created evident validator know control running", "d": "8/2016"}, {"body": "update run", "d": "8/2016"}, {"body": "sounds like old lt npm version npm peerdependencies installed automatically would specify correct version would nt run pb update newer npm believe packages good", "d": "8/2016"}, {"body": "sure would prevent us able bootstrap components declared nonroot modules following would longer possible mistaken think everyone feels pain repeating class names various properties time different usecases", "d": "8/2016"}, {"body": "pkozlowskiopensource hmm ok see somehow feels like usecase makes applications wordy angular already tells warning using component declarations list would nt possible say component using bootstrapcomponent declarationslist add something like", "d": "8/2016"}, {"body": "since plunkr might get lost post demo code completeness typescript root app component import component changedetectionstrategy input ngzone docheck onchanges changedetectorref angularcore import observable subject rxjsrx component selector onpushupdate changedetection changedetectionstrategyonpush template speed speed number calls value change detections ngonchanges ngdocheck value changedetectiondcount onchangescount docheckcount export class onpushupdater implements docheck onchanges input value value number input speed speed string changedetectioncount number get changedetectiondcount number return thischangedetectioncount onchangescount number ngonchanges changes void thisonchangescount get onchangescount number return thisonchangescount ngdocheck thisdocheckcount docheckcount number get docheckcount number return thisdocheckcount component selector hasdecoupledchangedetection use changedetection changedetectionstrategyonpush play well changedetectorrefdetach template export class hasdecoupledchangedetection implements docheck onchanges input value value number input speed speed string constructor private changedetectorref changedetectorref changedetectorrefdetach call initial draw first draw happens later thischangedetectorrefdetectchanges setinterval gt consolelog gt triggering detectchanges new date thischangedetectorrefdetectchanges changedetectioncount number get changedetectiondcount number return thischangedetectioncount onchangescount number ngonchanges changes void thisonchangescount get onchangescount number return thisonchangescount ngdocheck thisdocheckcount docheckcount number get docheckcount number return thisdocheckcount component selector myapp providers template using regular update mechanisms detached change detector fires every seconds directives onpushupdater hasdecoupledchangedetection export class app data subject new subject highspeed subject new subject lowspeed subject new subject constructor thisdatasubscribe v gt v thishighspeednext v v thislowspeednext v let number setinterval gt thisdatanext", "d": "8/2016"}, {"body": "seems gets called window active visible change detection occurs always easily extracted docs", "d": "8/2016"}, {"body": "guess duplicate", "d": "8/2016"}, {"body": "indeed thnx choeller", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "btw another question somehow related one component create button call code thisrouternavigate table nt navigate could help resolve issues app routingts looks like import routes routermodule angularrouter import pagelobby pageplayers pagerankings pagetournaments pagegame componentsindex const approutes routes path lobby component pagelobby path table id component pagegame path players component pageplayers path rankings component pagerankings path tournaments component pagetournaments path redirectto lobby pathmatch full path redirectto lobby export const approutingproviders export const routing routermoduleforroot approutes", "d": "8/2016"}, {"body": "gitter good place questions case trivial answered lot server configured serve spa routes must fallback indexhtml getting lobbyhtml app please read contribution docs", "d": "8/2016"}, {"body": "thanks try btw sure right place ask kind questions glad helped", "d": "8/2016"}, {"body": "btw sure right place ask kind questions course", "d": "8/2016"}, {"body": "issue found converting moduleid string passing function seemed work ok well sure solution though nt make much sense searching url number maybe moduleid new meaning passes id error thrown", "d": "8/2016"}, {"body": "experienced problem poked around found adjustment needed remove module id lines added month ago evening also ouch particularly picky whether module line present needs removed presence cause trouble would extraordinarily kind team make angular emit sort helpful warning instead particular crash", "d": "8/2016"}, {"body": "appears pull request fix issue", "d": "8/2016"}, {"body": "mean moduleid setting redundant using webpack builder", "d": "8/2016"}, {"body": "javascriptmick using moduleid nt necessary using webpack however bug popped commit compiler removed regexpwrapper changed", "d": "8/2016"}, {"body": "current behaviors believed including module component metadata redundant actively incorrect sounds like pr would make module metadata tolerated barely trace code running webpack module id number actual path module one might expect", "d": "8/2016"}, {"body": "think common third party libs nt removed module ids yet case new ngmodule version pr mute error something like would best add webpackconfig well make sure moduleids stripped", "d": "8/2016"}, {"body": "would resolution pushed hotfix would reserved current environment rebuilds nodemodules folder regularly editing angular files manually option new release brings lot desired functionality table want keep project date happen know something added webpack config temporarily patch issue", "d": "8/2016"}, {"body": "planning move local version angularcli expect likely make way official version soon", "d": "8/2016"}, {"body": "hope fixed patch", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "face issue system js webpack mentioned webpack introduction page using moduleid except cheatsheet documentation mention moduleid remove module id app using system js unable locate html components seems like required", "d": "8/2016"}, {"body": "solution could make api much user friendly least throwing meaningful error automagically wraps anything metadata assert one thing", "d": "8/2016"}, {"body": "please isolate bug provide repro today question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "solved problem order components field weird happening bundledcode need early feedback development", "d": "8/2016"}, {"body": "experienced problem got running solution moment particularly fan new behavior heartily encourage team document change log breaking changes", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "antonybudianto order change", "d": "8/2016"}, {"body": "robertoforlani hopefully someone time write comprehensive explanation soon meantime couple minutes order obtain warning free errorfree working production build need edit ngmodule app module definition program specifically declarations array array contain list components directives application harder part must perform topological sort list nt study computer science formally recently need rearrange order list components reverse order use components used deeply component hierarchy listed first example consider five components program b c e example component used component b template component b used component c template dependencies components b b c c e e f case correct order list declarations would fortunately applications deep dependency graph among components many cases make error go away editing declarations list list components list directives finegrained small components beginning heuristic", "d": "8/2016"}, {"body": "experienced almost problem directives b component c order declarations b c get error input directive b order declarations b c get error input directive b nt share dependencies c using b happens bundled build using cli version", "d": "8/2016"}, {"body": "thanks seems like bug igorminar investigating", "d": "8/2016"}, {"body": "hard time reproducing problem someone provide repro tried antonybudianto repo fails http test comment test gulp task app builds runs without problems clarify order declarations matter changing order changes behavior bug fix", "d": "8/2016"}, {"body": "created cli even repo repro issue could someone clone modify repro issue thanks", "d": "8/2016"}, {"body": "got repro kylecordes see comments file declarations order", "d": "8/2016"}, {"body": "managed fix application problem components nt using moduleid moduleid component declaration added moduleid moduleid prod build ok", "d": "8/2016"}, {"body": "igorminar sorry yesterday pushed commits branch work expected turned appcomponent navbarcomponent declared module appmodule apphtml use navbar component bundled breaks tried make navbar module appmodule imports solved", "d": "8/2016"}, {"body": "anyone wants generate arbitrarily large application help prove tools reveal issues like one updated ngmodule", "d": "8/2016"}, {"body": "faced similar issue bundled release add navbarcomponent bootstrap array deploying whereas locally dev encountered issue days ago working master branch thought intended behavior", "d": "8/2016"}, {"body": "also problem changing declarations order fix", "d": "8/2016"}, {"body": "oocx try putting moduleid moduleid component", "d": "8/2016"}, {"body": "fixed error unit tests fix declarations testbedconfiguretestingmodule call instead app module", "d": "8/2016"}, {"body": "problem solved mangle option set false", "d": "8/2016"}, {"body": "problem fix gnujeremie solved", "d": "8/2016"}, {"body": "problem also happening using angular javascript even normal version bundled", "d": "8/2016"}, {"body": "updates repro repo latest cli verify problem still occurs clear whether really core problem somehow problem added webpack cli yes problem still occurs", "d": "8/2016"}, {"body": "exactly problem since updating working well uglified bundle works well also uglified bundle without mangle works well weights slightly would mangle two workarounds also mentioned reorder things declarations really always works components might use one another ways case approach would help however helps cases would suspect uglified package puts definitions according order declarations uglify without mangle producees minified package slightly bigger would mangle observed hope gets solved working fine case components version uglifyjs angular browsersall typescript uglifyjs", "d": "8/2016"}, {"body": "experience issue temporary solution disable minifying waiting", "d": "8/2016"}, {"body": "note added made things worse minified javascript nt loading anything except useless error uncaught typeerror ematch function going try add moduleid back use ngmodule try playing order declarations actual fix keep trying works update solution solution remove rearrange order components declarations ngmodule figure working update ii yah time day webpack p really liking moduleid moreover looks like never bleh", "d": "8/2016"}, {"body": "got reproducable punkr code typescript import ngmodule component input angularcore import browsermodule angularplatformbrowser var componenta function component selector componenta template class foo lt class named foo return foo var componentb function component selector componentb template componentb property property class foo lt class named foo rename works input property string return foo ngmodule imports browsermodule declarations componenta componentb bootstrap componenta export class testmodule error renaming one something else solves error guess something along pipeline caches class names collide mangled", "d": "8/2016"}, {"body": "using webpack solutions proposed seem overkill first glance matter order declarations end getting error also would nt call proposals hacky seem far usable businesscritical application regardless due respect team beyond could made also rolling ngmodules stage imho seems like controversial move", "d": "8/2016"}, {"body": "thecritic using rcx businesscritical application borderline none business", "d": "8/2016"}, {"body": "ediri thecritic agree ediri kind changes supposed appear rc", "d": "8/2016"}, {"body": "using systemjs systemjsbuilder temporary solution used gulpuglify bundle files end build process removed pipe works using systemjs without systemjsbuilder dev directly mapped nodemodules folder problem looks bundlingminifiyinguglifying problem implicit ordering see", "d": "8/2016"}, {"body": "lot saying ordering declarations correct order solves problem modules look ts import browsermodule angularplatformbrowser import ngmodule component angularcore foo module component selector foo template foo export class foocomponent ngmodule declarations foocomponent exports foocomponent export class foomodule bar module component selector bar template bar export class barcomponent ngmodule declarations barcomponent exports barcomponent export class barmodule root module component selector approot template export class appcomponent ngmodule imports browsermodule foomodule lt switching barmodule lt switching declarations appcomponent bootstrap appcomponent export class appmodule given example printed change shows order print sob btw using", "d": "8/2016"}, {"body": "solution proposed worked", "d": "8/2016"}, {"body": "ediri using rc production bad question btw point trying make people actually nt expect significant changes stage migrating new modules obviously inevitable basically threw everything apart us app quite large point refactoring takes time sometimes like case refactoring almost seems impossible", "d": "8/2016"}, {"body": "imagine adding middle p like rocknroll", "d": "8/2016"}, {"body": "temporary fix hansl works btw delighted edit actually quite sure works", "d": "8/2016"}, {"body": "complete success sirajc approach including declarations bootstrap section well long component actually want bootstrap first array success playing order components declarations section getting parent component rendering case two peer child components parent component reordering got one child component rendering note issue minifying andor manglinguglifying", "d": "8/2016"}, {"body": "thanks hansl got bottom last night code generation uses function name several places problem ahead time aot compilation jit mode input minified code name collisions occur declarations reordering might make problem go away still might hidden surprises approach since really solving problem safe fix right configure uglify use aot template compilation looking actual fix jit", "d": "8/2016"}, {"body": "tying relevant angularcli workaround tracking", "d": "8/2016"}, {"body": "update jit fix required bigger changes core since really issue core codedesign classes transpiled functions various tools consider implementing workaround core pressing issue resolved meantime please use option uglify use angular aot compilation ngc", "d": "8/2016"}, {"body": "igorminar wo nt currently issue relying aot compilation using ngupgrade ngupgrade nt utilize aot code even exists", "d": "8/2016"}, {"body": "aside issue ngupgrade suspect mostly nt matter near future soon cli uses ngc raise bar random person internet launch new project couple minutes cli template precompilation running one seriously using angular point care production mode able justify using ngc tooling catch quickly abandoned", "d": "8/2016"}, {"body": "please forgive ngupgrade users angular team promote ngupgrade way officially jump angular boat without complete rewrite understand used production enough feature complete ui projects material design uibootstrap completely use angular right last requirement fully move towards angular meantime deal ngupgrade would fantastic use ngc ngupgrade instance decide use ngupgrade step help migration using production please tell us taking account thanks lot", "d": "8/2016"}, {"body": "facing problem directed issue beta issue still applicable beta", "d": "8/2016"}, {"body": "ibrahimislam one betas affected minification issue lasted like betas nothing issue though", "d": "8/2016"}, {"body": "using webpack build cli igorminar suggested building without minifying works like beta releases several months ago glad didnt upgrade app work last friday", "d": "8/2016"}, {"body": "put trouble figuring reconfigure uglify using angularcli", "d": "8/2016"}, {"body": "already merged change master cli", "d": "8/2016"}, {"body": "thelarkinn think ofuangka asking put today work rather unknown future date new cli release ships best answer probably nowhere instead use npm link run current master cli instead released version", "d": "8/2016"}, {"body": "kylecordes thanks impression solution could applied project configuration using npm link worked", "d": "8/2016"}, {"body": "whatchu mean ngc kylecordes", "d": "8/2016"}, {"body": "ngc command line angular template precompiler package npm angularcompilercli", "d": "8/2016"}, {"body": "kylecordes thank", "d": "8/2016"}, {"body": "ofuangka set mangle false ok", "d": "8/2016"}, {"body": "fwiw works perfectly mangle options set described thread", "d": "8/2016"}, {"body": "suggested solution problem set manglefalse follows seeing make change anyone advise", "d": "8/2016"}, {"body": "nukuuk sample systemjs builder confirmed fixes try", "d": "8/2016"}, {"body": "works set properties false tried", "d": "8/2016"}, {"body": "thelgevold see referring using systemjs builder gulp bundleminify etc yes using recently started using angularcli set manglefalse make builds work point angularcli fall back gulpsystemjs builder bundle", "d": "8/2016"}, {"body": "nukuuk describe exactly exactly used using angular cli", "d": "8/2016"}, {"body": "cdarken currently using angularcli following may case angularcli nt know thread reports run ng build prod break app presumably cli mangles javascript bundle angular webpack nt like andor b problem ordering components main module declaration bug fix hopefully happen soon mean time workaround involves running ng build bundle app minifymangle javascript bundles using gulpuglify mangle false concatenate minify final production bundle works would much prefer angular cli finished job", "d": "8/2016"}, {"body": "hmm tried reorder smaller components etc first elements declarations cigar starts complaining angularmaterial components separate module disabled uglify plugin using build based angularclass webpack starter anyone cares", "d": "8/2016"}, {"body": "msegers angularclasswebpackstarter enable uglifyjsplugin options set ofuangka code setting uglifyjsplugin production webpackconfigjs file placed inside plugins array", "d": "8/2016"}, {"body": "mikeeus solution worked fine needed move using first version thanks", "d": "8/2016"}, {"body": "mikeeus confusion nukuuk put mangle setting webpackconfigjs file fresh ng new angularcli create webpackconfigjs file need modify angularclijson use attached screenshot files default angularclijson settings", "d": "8/2016"}, {"body": "guys correct wrong think use mangle option uglifying project ricklove think nt use mangle project nt minifed uglified", "d": "8/2016"}, {"body": "solution fix ng serve prod angularcli ok finally figured way directly changing file nodemodules folder imagine better place within project thanks mikeeus setting works fine normal build trying prod build problem", "d": "8/2016"}, {"body": "rickove right using angularcli build production ie using ng build prod discussed breaks app ca nt find anyplace set minifying options ie manglefalse time using angularcli development mode problems webpack nt seem producing good source maps causing havoc setting breakpoints event need production build development build ng build minifying concatenating results gulpuglify mangle option set false looking forward next build fixed update nt see ricklove solution editing webpack config posting workaround works ignore", "d": "8/2016"}, {"body": "nukuuk see last post seems working prod build least reduce file size large degree", "d": "8/2016"}, {"body": "fix keep keepfnames disabled increased build file almost", "d": "8/2016"}, {"body": "worked ng team fix workaround builds still work", "d": "8/2016"}, {"body": "likely primarily temporary workaround got impression early thread deeper solution possible make necessary anymore also apparently already necessary use template precompiler rather tricky moment little yet terms working examples support cli way etc moment obvious thing wave hands pretend extra temporary", "d": "8/2016"}, {"body": "ricklove genius works production builds slim trim many thanks", "d": "8/2016"}, {"body": "thanks explanation thelarkinn kylecordes smile", "d": "8/2016"}, {"body": "nukuuk counts slim trim fair gzip takes mine actually bad spa sure beats sure live results", "d": "8/2016"}, {"body": "guys problem gzip bit afraid use gzip clients use browser nt accept rick love notifications githubcom nukuuk counts slim trim fair gzip takes mine actually bad spa sure beats sure live results receiving mentioned reply email directly view github mute thread att herlon aguiar", "d": "8/2016"}, {"body": "hey guys anyone thats using gulp minify using system js builder try gulp config file worked", "d": "8/2016"}, {"body": "seeing well using webpack new webpackoptimizeuglifyjsplugin plugin antonybudianto suggested ordering module declarations topologically valid workaround excited see one fixed", "d": "8/2016"}, {"body": "tried rearranging declarations nt work adding moduleid moduleid components however work like magic kudos sir looking forward fix", "d": "8/2016"}, {"body": "something like get broken still released bundling minification new things essential fundamental part javascript ecosystem bundling minification within angular plenty issues excusable alpha beta maybe first couple times happened surely testing release system include tests include bundling minification", "d": "8/2016"}, {"body": "captaincodeman point concerning bug made far course understand regressions inevitable especially working massive scale projects expected work number unknown plugins addons open source world kudos angular team around said officially supported compilers bundlers minifiers etc like systemjs webpack large suite tests dev effort focused would anyone angular team able add list strongly supported compatible tooling documentation idea tool listed docs expected work otherwise use risk open source thanks adam", "d": "8/2016"}, {"body": "hi guys add small note disabled mangle option whole uglifyjsplugin still breaks routers example want navigate default redirect like works try navigate directly url see complete blank page route loaded child routes company works routes level give try aot solution post comment later", "d": "8/2016"}, {"body": "shankarsumanth think may need hashlocationstrategy module provider", "d": "8/2016"}, {"body": "tried suggestions thread still getting ca nt bind icon since nt known property button ver hovered uistatefocus focused uistatedisabled disabled icon icon pbutton ngif showicon click onbuttonclick event ngclass calendar zone task promisethen value baseexception message template parse errors nt bind icon since ngclass calendar stack error template parse errors nt bind error template parse errors ca nt bind icon since nt known property button ver hovered uistatefocus focused uistatedisabled disabled icon icon pbutton ngif showicon click onbuttonclick event ngclass calendar new baseexception templateparserparse runtimecompilercompiletemplate eval setforeach native compile zonedelegateinvoke zonerun zonedelegateinvoketask zonejs zonejs zonejs zonejs", "d": "8/2016"}, {"body": "ahuvafischer issue solution worked list components appmodule whenever add another modules b c import b c appmodule breaks", "d": "8/2016"}, {"body": "bahodirk third party modules", "d": "8/2016"}, {"body": "ahuvafischer still coping dist deployment folder indexhtml", "d": "8/2016"}, {"body": "declarations wrong order components simply displayed without errors plunk fixed would better say angular support period", "d": "8/2016"}, {"body": "nt think minifying bundle upgraded small project getting errors updated like fixes immediate error error one point nt string added code fixed far", "d": "8/2016"}, {"body": "ok using uglify set sure need patch anymore update nope still need passed moduleid still integer string", "d": "8/2016"}, {"body": "function name minification issue resolved longer necessary tell uglify mangle function names", "d": "8/2016"}, {"body": "services go modules go directives components pipes go", "d": "8/2016"}, {"body": "brandonroberts ah thanks lot rookie mistakes mine", "d": "8/2016"}, {"body": "brandonroberts export interfaces modules", "d": "8/2016"}, {"body": "murhafsousli modules exported array nt understand question interfaces nt pertain angular modules", "d": "8/2016"}, {"body": "bradlygreen never mind thought classes interface exported", "d": "8/2016"}, {"body": "hello tried import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent appcomponent import approuterproviders approutes ngmodule imports browsermodule approuterproviders declarations appcomponent bootstrap appcomponent export class appmodule maints import bootstrap angularplatformbrowserdynamic import disabledeprecatedforms provideforms angularforms import appcomponent appcomponent import approuterproviders approutes import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule bootstrap appmodule disabledeprecatedforms provideforms approuterproviders", "d": "8/2016"}, {"body": "got module imports modules please import router module instead nt comment closed issues ask support questions using one support channels", "d": "8/2016"}, {"body": "symbols longer exported", "d": "8/2016"}, {"body": "ran tests boilerplate projects different versions seems worked pre webpack see", "d": "8/2016"}, {"body": "said issue may belong leaving open someone informed says otherwise", "d": "8/2016"}, {"body": "possible workaround would use template", "d": "8/2016"}, {"body": "thanks opsxcq tried work around another bug preventing us making publishable reusable components components static assets get served root relative package bundler pick maybe missing something appears pretty big issue terms reusability", "d": "8/2016"}, {"body": "get error also http requests typeerror read property tostring null requestbodytext requestgetbody observableeval subscribe observablesubscribe objectsubscribetoresult switchmapsubscriberinnersub switchmapsubscribernext switchmapsubscribersubscribernext firstsubscriberemitfinal firstsubscriberemit browserdomadapterlogerror exceptionhandlercall next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectfinalnext subjectnext subjectnext eventemitteremit onerror onhandleerror zonedelegatehandleerror zoneruntask zonetaskinvoke", "d": "8/2016"}, {"body": "doublechecked response fact body text", "d": "8/2016"}, {"body": "ah request nt get", "d": "8/2016"}, {"body": "turned use directly constructed tried explicitly setting empty body everything works", "d": "8/2016"}, {"body": "goldibex could please help share sample code understand better appreciate help thanks", "d": "8/2016"}, {"body": "basically using request options make get request ca nt leave body empty", "d": "8/2016"}, {"body": "qdouble goldibex changed explicitly set body thanks", "d": "8/2016"}, {"body": "would easy pr anybody wants fix", "d": "8/2016"}, {"body": "robinkedia documented must one recent commits see rob labeled bug", "d": "8/2016"}, {"body": "goldibex qdouble thanks temporarily fixed using body", "d": "8/2016"}, {"body": "somebody show use requestoptions get request body working upgraded let headers new headers headersappend contenttype applicationjson headersappend authorization bearer thisglobaleventsmanagerauthenticationtoken let get headers headers map response gt something etc", "d": "8/2016"}, {"body": "call options object second argument currently headers headers add another property body wed aug pm brendan alexander notifications githubcom wrote somebody show use requestoptions get request body working upgraded let headers new headers headersappend contenttype applicationjson headersappend authorization bearer thisglobaleventsmanagerauthenticationtoken let get observable headers headers map response gt something etc receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "goldibex aaah ok many thanks worked like charm", "d": "8/2016"}, {"body": "bug seems occur contenttype header set minimal reproduction problem", "d": "8/2016"}, {"body": "seems remove works", "d": "8/2016"}, {"body": "running issue upgrading code fails supplying headers read observable let headers new headers headersappend contenttype applicationjson let options new requestoptions headers headers code works fails backend expects contenttype header", "d": "8/2016"}, {"body": "following workaround seems resolve issue", "d": "8/2016"}, {"body": "already fixed master", "d": "8/2016"}, {"body": "tldr set requests http verbs ie note automatically adding headers like auth token http verbs putting value parameter override value parameter example js class extends http public get url string options requestoptionsargs observable must set optionsbody work around bug return thisintercept superget url thisgetrequestoptionsargs options public post url string body string options requestoptionsargs observable setting optionsbody override body parameter superpost return thisintercept superpost url body thisgetrequestoptionsargs options", "d": "8/2016"}, {"body": "case header get request makes sense nt allowedrequired default headers found hint stackoverflow unable make http request angular", "d": "8/2016"}, {"body": "yvess right specify complain fixing adding empty body removing header better", "d": "8/2016"}, {"body": "fix working post", "d": "8/2016"}, {"body": "nt problem post make sure set override whatever body set", "d": "8/2016"}, {"body": "problem pretty stupid bad code delete upload uplordupload let headers new headers headersappend contenttype applicationjson actually send data since copypasted post method left header part nt pass headers case like dumb maybe invalid header error would cool", "d": "8/2016"}, {"body": "also issue caused contenttype applicationjson headers removed everything seems ok", "d": "8/2016"}, {"body": "syntax simple tools support", "d": "8/2016"}, {"body": "robinkedia yes forms version thanks reporting closing docs issue angulario repo make sure right people know thanks", "d": "8/2016"}, {"body": "thanks", "d": "8/2016"}, {"body": "fix published please close", "d": "8/2016"}, {"body": "xealot thanks reporting issue fixed weeks ago resolved forms see updated plunker", "d": "8/2016"}, {"body": "even updated plunker fantastic", "d": "8/2016"}, {"body": "tried one support channels first contributing got question problem", "d": "8/2016"}, {"body": "behaves intended please read post learn router matching", "d": "8/2016"}, {"body": "read blog post times still struggling understand plunk nt work playing never able get work plunk nt c button match route say nothing button happy create new issue really loving angular far", "d": "8/2016"}, {"body": "please provide plunker reproduce please edit post add triple backticks code make readable", "d": "8/2016"}, {"body": "experience switch event handling observables like ts import subject observable rxjsrx export interface isomeservice sfupdate observable emitupdate profilechanged boolean void export class someservice implements isomeservice observable string streams sfupdate observable observable string sources private sfupdatesource new subject ts import subscription rxjssubscription import isomeservice someservice export class private sfupdatesubscription subscription hope helps", "d": "8/2016"}, {"body": "vsavkin fix ongoing zonejs nothing change except updating dependencies fix part zonejs release", "d": "8/2016"}, {"body": "fixed zonejs updated", "d": "8/2016"}, {"body": "unless using router test use mock provide", "d": "8/2016"}, {"body": "use routingtestingmodule eg", "d": "8/2016"}, {"body": "exactly nt behave differently respect stay put unless function renavigates", "d": "8/2016"}, {"body": "certainly feels like bug clear anyway behave differently know author would able write user stayed current page obvious way know current page seeking clarity front hope report back soon", "d": "8/2016"}, {"body": "curious use canload interested lands", "d": "8/2016"}, {"body": "behave inability match url treated differently almost always due bug mind would react error reevaluate assumption", "d": "8/2016"}, {"body": "agree assumption errors tracked router events user could handle match found initial load example", "d": "8/2016"}, {"body": "fixed via", "d": "8/2016"}, {"body": "ward reading description also reading migration instructions following strikes pipes directives usage metadata moved individual component module level message suggests intention providers remain specific component level sure minutes thought could come good reason different types formerlycomponentlevel settings get different treatment new ngmodule regime perhaps someone right middle things could add explanation documentation somewhere", "d": "8/2016"}, {"body": "confirm see misbehavior", "d": "8/2016"}, {"body": "error getting correct property attribute check fix ref", "d": "8/2016"}, {"body": "thanks totally forgot binding", "d": "8/2016"}, {"body": "issue fixed router", "d": "8/2016"}, {"body": "closing issue template filled issue title", "d": "8/2016"}, {"body": "look spec example use router tests", "d": "8/2016"}, {"body": "plunker", "d": "8/2016"}, {"body": "canactivate property array tokens router use tokens fetch right guards via di tokens implement interface error detected statically closing issue", "d": "8/2016"}, {"body": "ok thanks explaining wed aug victor savkin notifications githubcom wrote canactivate property array tokens router use tokens fetch right guards via di tokens implement interface error detected statically closing issue receiving authored thread reply email directly view github mute thread minden j\u00f3t sevcsik andr\u00e1s", "d": "8/2016"}, {"body": "already fixed master go next release", "d": "8/2016"}, {"body": "thnx brandonroberts", "d": "8/2016"}, {"body": "apparently ie mobile bug nt properly handle pushstate calls hash changes reason hashlocationstrategy uses history api needs change locationhash check alternative implementation using locationhash locationreplace fares", "d": "8/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "thnx zoechi", "d": "8/2016"}, {"body": "pushing back final note behavior changed instead throwing error router generates url", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "thnx ericmartinezr", "d": "8/2016"}, {"body": "actually bashing head wall last two days exact thing idea observable complete order navigation complete retrospectively understand came promise based approach without live observables proving difficult merge angular router john lindquist course building reduxstyle applications angular rxjs ngrxstore also pretty unexpected example guide rxjs says c ompletion taken event end program something event may happen workaround something like dataresolver return cold observable return hot observable", "d": "8/2016"}, {"body": "johnchristopherjones yes although nt thinking defectinducing issue moved past know mean initially experience confusion well several times team hit multihour snag trying track issue first next two team member hitting twice refactor embarrassingly still stared second time usual locating defect visible error timeconsuming workaround looking yes observabletake aka observablefirst initially hacked issue unless misunderstand question hot vs cold directly related however observablefirst throw away following data problem care following data probably since otherwise observable would probably completed", "d": "8/2016"}, {"body": "johnchristopherjones side note nt see question earlier added edit may want post separately next time", "d": "8/2016"}, {"body": "expected behavior option tag looking presence selected attribute nt looking value pass add attribute select remove completely evaluating null reference also see", "d": "8/2016"}, {"body": "thank ericmartinezr change expression works", "d": "8/2016"}, {"body": "probably need use fat arrow function", "d": "8/2016"}, {"body": "wring repo please reopen", "d": "8/2016"}, {"body": "nt appear ngmodules prohibits setup going played yet several different modules lazy loading etc something similar appear trying keep eye transition", "d": "8/2016"}, {"body": "hi qdouble thank quick reply looking saying order achieve functionality need declare ngmodule component added end file right also nt cover maintenance issue mentioned initial statement dependencies componentdirective declared decorator great advantage would like keep", "d": "8/2016"}, {"body": "jpsfs want create individual scope every component suppose create different ngmodules may create code case suppose create less code vast majority people scoping module instead per component far second issue could declare ngmodule component right next add extra lines code files nt think creates huge issue say vast majority use cases nt require scoped directives per component case ngmodules still supports lines code", "d": "8/2016"}, {"body": "qdouble thanks sure oror situation see scenarios working together need remove functionality already someone wants use modules see great addition meanwhile framework could work without modules working today believe even offline compilation issue sorted things currently letting open see someone something add matter", "d": "8/2016"}, {"body": "jpsfs understood situation definitely prefer left options open write reason deprecating component directives doc posted far creating two scopes thinking ngmodule scope small enough line model team member also mentioned generally problematic two different ways things long term could see issue projects people using ngmodules projects nt creates maintenance training compatibility issues never know direction project go final see take saying consideration", "d": "8/2016"}, {"body": "even currently working designing architecture huge enterprise app unlike situation jpsfs excited ngmodules pretty much based app architecture around ngmodule module set routes component dependencies never create piece functionality one component needs routes least one smart component dumb components services go plug module good go coming lazy loading instead loading code component looks good ngmodule code loaded functionality fully usable downloaded creating hierarchy modules much simpler well provides great plug play feature free", "d": "8/2016"}, {"body": "ware also currently working application quite lot components hundreds dozens architectural need us split application several lazyloaded modules importing components bootstrapfile passing somehow feels wrong breaks encapsulation component jpsfs said clear components directives used another component would also appreciate choice pretty commonly used directive declare module something like import maybe coremember tell decision deprecating second approach worked several month feels pretty good", "d": "8/2016"}, {"body": "echo choeller point feel strange moving away ability provide component encapsulation specific concern component namesselectors leak across whole app whereas could reuse selectors different components including specific directives appropriate selectors would need unique per component right misunderstanding works felt original functionality matched similar benefits provided css shadowdom emulation could worry less selector collisions etc across large apps great advantage imo", "d": "8/2016"}, {"body": "first thought ngmodule oh like angular great angular already angular much better many points best point components create kind dependency tree main component router defines several entrypoints component every component know needs reason main component know components end tree needs back good old times angular giant module definition remeber times app entrypoint looked like thought belongs past started work ngmetadata improve old angular projects prepare migration really love fact dependency tree global might appear app list", "d": "8/2016"}, {"body": "makes reusable components difficult nt get makes things better everything globalmodule scope think team caved users nt want change", "d": "8/2016"}, {"body": "daschtour damiandennis understand criticism architecture however referring sort global scope inaccurate methodology suggesting take feature modules", "d": "8/2016"}, {"body": "qdouble well end changing components modules although announced change reduce boilerplate code introduces loot need boilerplating till component vor every page view application enough know create module component routing every view get intention somehow impression designed make things easier concerning many points even feature module pattern cut small avoid dependency hell adding everything might needed ca nt see part application needs components end modules small similar repetitive dependency lists like current components end nt solve designed adds lot work feeling mismatch design reality", "d": "8/2016"}, {"body": "developers lazyshort time take shortcuts encourages developers take quick route including everything bootstrap least components requirement include dependencies yes may also lazy create single component whole application would easier fix dependencies component mixed bootstrap file component file within application", "d": "8/2016"}, {"body": "daschtour every single component needs scope yes create boilerplate taking ng team opinion people creating new module every feature section enough components would able live feature space obviously one fits solution component level directives may simpler people however appears lot comments implying want create application one huge ngmodule tree think productive criticism based around actual design suggestions rather straw man design pattern nt suggesting ie creating enterprise app one huge ngmodule", "d": "8/2016"}, {"body": "qdouble design pattern simple use dependency tree instead moving dependencies global module scope guess main point reusable components modules even small little functionality angular good example button module including one component maybe general misconception many developers module something contains button let think step following ideas article find self point lot modules import list angular modules modules consisting single component fakt exactly angular nobody really get point wrap components modules maybe see split declaration component dependencies module component definition guess point ngmodules nice addition make things easier forced change everything maybe somebody make clear explanation coexist", "d": "8/2016"}, {"body": "daschtour well yes agree every single component create needs module using ngmodules creates boilerplate simply take team nt think people need level separation every component find self point lot modules import list angular modules modules consisting single component use shared modules really sure either think necessary totally remove ability component scope criticism making using ngmodules difficult actually making design seem sloppy actually think criticism removing component scoped directivespipes perfectly valid however nt think necessary make seem like nt good design patterns ngmodules", "d": "8/2016"}, {"body": "qdouble think nobody doubts good design patterns ngmodules understand modules wrapper around set components directives services expose unit application valid great idea define dependencies may exist inside module module component taking example choeller module taskdashboard following things tasklist component taskitem component taskfilter component task service taskitem component needed inside tasklist tasklist depends taskitem component taskfilter nt need taskitem component nt taskitem dependency tasklist next step create tasksearch module add following things tasklist component tasksearch component task service well missed taskitem component broken tasklist always depends taskitem dependency hidden module reusing components made difficult creates additional source errors okay reading modules guide found line components directives pipes must belong exactly one module example exactly shows concern raised ca nt shared component example would split everything modules working strange elusive errors come using ngmodule also found extending components nt work nice set components needed dependencies could simply extend take care importing dependencies module include extended component", "d": "8/2016"}, {"body": "daschtour example taskitem part tasklist module would two components one module logically one sirajc pointed typical design pattern would one top smart component followed additional dumb components typical real world app modules would consist components whether smartdumb component pattern related feature pattern one component per module unless building party components something", "d": "8/2016"}, {"body": "qdouble daschtour true new architecture neccessarily meaning list components one file looking app building would currently pretty much go statement daschtour feeling mismatch design reality quite bunch components representing small units page like bound special view creating modules pages would total overkill case reasons splitting multiple modules way reasons encapsulating components tl dr cool able define dependencies module level really sad able define dependencies component level longer", "d": "8/2016"}, {"body": "daschtour button component tied module make standalone needs use button import also see module code contains two compoents wrapping makes things easier use", "d": "8/2016"}, {"body": "wondering possible create hybrid componentmodule object merges two concepts one prevent duplication files essentially able declare component module import module needed would honor current approach minimize boilerplate", "d": "8/2016"}, {"body": "choeller agree modules good addition removing dependencies component level however seems wrong", "d": "8/2016"}, {"body": "piling others wrote think core idea experience misery huge project huge module hundreds components rather build application reasonable number mediumsized ngmodules big enough trivial small enough nt huge number divided along fault lines would tend facilitate reuse modularity oldfashioned computer science sense high cohesion low coupling modules turn quite useful concept play large projects", "d": "8/2016"}, {"body": "thats well summarized kylecordes ngmodules helps nice composition application small reusable modules makes whole application benfit includes ambient availability directives earlier used add routerdirectives whole application us browsermodule commonmodule formsmodule makes sense including directives component materialmodule provides everything need finer control buttonsmodule etc help us beauty composition embrace create symphony", "d": "8/2016"}, {"body": "top lazyloading ngmodules one define components services needs go together create one routable unit cant download loose files lead huge network requests else need create bundler list dependent files ro create one bundle ngmodule intuitive syntax", "d": "8/2016"}, {"body": "kylecordes piling others wrote think core idea experience misery huge project huge module hundreds components rather build application reasonable number mediumsized ngmodules big enough trivial small enough nt huge number divided along fault lines would tend facilitate reuse modularity oldfashioned computer science sense high cohesion low coupling would nt fault lines different application developers vs library developers library developers minority seems main complaint building reusable framework goal wanting minimize module size leads lot extra noise", "d": "8/2016"}, {"body": "sirajc top lazyloading ngmodules one define components services needs go together create one routable unit cant download loose files lead huge network requests else need create bundler list dependent files ro create one bundle ngmodule intuitive syntax able easily old router simply using component functioned container section application module brought direct components needed would bring dependencies decent module loader would able load dependency chain via imports component without including every subdependency toplevel component goes bundlers use sort module resolution logic short reason lazyloading perspective developer need declare contained dependencies toplevel component", "d": "8/2016"}, {"body": "really feels like ngmodule solution search problem something said able open given component glance directives array know exactly componentsdirectives depends upon verbose import button component throughout numerous components use yes rather extra boilerplate things explicit immediately scannable searching componentmodule tree see heck component using component x template without ever importing argument made someone desire keep components isolated could arguably create module component point writing even boilerplate original component ever obviously benefits ngmodule nt covered benefits able bundle sections application feature modules really feels like step backwards comes clarity components encapsulated pieces code nt leak scoping place part hard sell team make community yeah going import declare directives component trust us appreciate explicit application grows big believer suffering bit repetition sake readability scannability largescale team environment team member may working small subset components given time least nt see reason ngmodule directivespipes property ca nt coexist alternative every single component every single application written using deprecated code needs nontrivially refactored really nt kind changes expect late development pretty disconcerting honestly", "d": "8/2016"}, {"body": "ngmodules essentially require rewrite applications structured properly biggest misconception forcing particular scope level reality modules big small want absolutely need create new module every single component results boilerplate valid application require create module every single component invalid especially using smartdumb component patterns feature patterns", "d": "8/2016"}, {"body": "first time today felt client side javascript fatigue number colleagues conveyed lost countless hours last days trying refactor application use new modules definitely agree number sentiments thread particularly giving developers choice terms way wish structure component dependencies dislike larger ngmodule dilutes clear dependency graph components smaller ngmodules add additional boilerplate code component analysing module know least one referenced components needs stuff module imports sibling declarations break module apart multiple modules basically left trial error determining dependencies new modules require careful inspection component template helps somewhat finally forget export components component simply nt render errors given easy find flat module graph near impossible number levels stage dejected disappointed disheartened gotten team developers business stakeholders board technology nt know take forward really hope better balance found", "d": "8/2016"}, {"body": "stage dejected disappointed disheartened gotten team developers business stakeholders board technology nt know take forward really hope better balance found guess point giant number developers waiting technology ready production although called release candidate every new candidate brings breaking changes feels like alpha sure lot teams spend hours architecture new apps nuts next breaking change ca nt even imagine fear somebody find way introduce next breaking change", "d": "8/2016"}, {"body": "blog post written angular code though probably asked list things especially noticed certain directives pipes angular special available entire application without anything ngfor ngif ngswitch example personally nt seen question asked anyone quite time angular team online learning resources books etc made pretty clear declarations needed seems like everyone accepted embraced fact long time ago questions special nt need declared nt think anyone would argue list critical lowlevel directives ubiquitous warrant blessed globallyavailable platform holder angular team code already present handle hoisting directives single ngmodule code works invisible enduser harm allowing approaches genuine question may aware intricacies around might happen developer mixandmatches approach plenty split choices angular model vs templatedriven forms different language choices inputoutputhost decorators vs property approach harm another point could go point trying make angular team community invested quite bit time hammer home message explicit good thing swoop release candidate times present us solution nt problem quite time anyone team feel like chiming nt want become echo chamber love hear side argument seems like something large came blue without consideration things like tooling training close final release seemingly", "d": "8/2016"}, {"body": "discussion raised big problem many developers wanted start developing early highly expected angular breaking changes bunch proof concept based angular since beta made important companies organization adopt nt regret sure well either recent project poc battle vuejs angular clearly fight hands today code rewriting breaking changes notreallyrc release people starts chasing gets pretty serious would nt case offered vue react development frustrating discredit angular put people seems nt share definition release candidate angular team topic ngmodule totally cosign jpsfs list components microcomponents within module declaration better function somewhere king modelization powerful may sensitive large scale projects", "d": "8/2016"}, {"body": "think additional higher level modularity nearly inevitable various competing frameworks eventually end something analogous wonder though really necessary make new coarsegrained module system completely orthogonal underlying module system whether may possible make top level directory modules contained within implicitly comprise coarsegrained ngmodule perhaps convention driven mechanism could added top current mechanism therefore remove ngmodule boilerplate projects willing follow convention course also share frustration others significant changes rc stage sure core team though also would attacked high level modularity forces drive lazy loading precompilation much closer beginning project instead release candidate stage life though always easy look backward think well known know", "d": "8/2016"}, {"body": "compilation support primary reason behind appearance ngmodule definitely replace existing component based scope directives pipes hand basing route configuration dependencies angular compiler could theoretically split application code appropriate compilation units modules", "d": "8/2016"}, {"body": "personally feel change bringing low boilerplate without much advantage could argue instead using modules could used components units application probably people anyway modules needed internal purposes framework like lazy loading related things hidden developer somehow nt pollute code make worse coding experience even talking maintainability first time saw thought hey going right direction seems like learned something angular ditched internal modules angular instead used es modules changes also welcomed components typescript wait get stable makes cringe breaking changes lack documentation poor error messages come ngmodules basically undo least one great thing changes since angular even worse app started theoretically almost stable lot work create good app need somehow explain customer developers even god knows change next work might vane know angular early stage people pretty solid projects using angular still changes breaking api point view breaking way thinking angular good ngfor imports change injecting components dynamically changes times releases accept understand bringing changes break apps way developers think framework late developing cycle accept unfortunately anyway see lot people agree say even angrier huge framework people trust google mostly ca nt bet everything might surprise since everyone choices talking js lot", "d": "8/2016"}, {"body": "new module would template could component think next step would move variables functions components module class seriously huge central library possible actions within shiny module would awesome nt know stopped centralization declarations dependencies many decentralized structured code lines", "d": "8/2016"}, {"body": "anyone core team say notes last weekly meeting team going ahead removal deprecated apis mhevery", "d": "8/2016"}, {"body": "whole hoisting thing broke application really subtly upgraded today change component selector class element entirely unrelated component class used styling suddenly started instantiate component pretty sure exists two components called one entire page navigate without selector one shared component used multiple components visualization selector hoisting likely gets confused declarations nt svg components becomes larger issue use custom element nt yet know scope make sure class selectors nt trigger component instantiation anywhere else application seems en vogue days ignore meaning beta release candidate aspnet core another highprofile example large projects faced breaking changes potential silently break application literally anywhere frustrating really hope promises coming changes bear fruit soon", "d": "8/2016"}, {"body": "ngmodules makes sense removing ability declareprovide component level nt small example application contains number different dialogs simple ones let call one complex one contains components let call complex moment simple folder structure obviously app sits perfect feature set put isolated feature module add add declarations dialogsmodule perfect works well makes complete sense internal components two options add external complex components services dialogsmodule poor decision breaks encapsulation everything dialogs module knows internals make module right fixes scoping issue believe export modules another module client needs import wrapper module leaves mix components modules similar groups dialogs neither really makes sense application scales conflict two increase sensibleobviousmaintainable solution would use module export top level components let component define internal components", "d": "8/2016"}, {"body": "cc robwormald", "d": "8/2016"}, {"body": "thinking kylecordes said earlier using existing typescript module system define courser grain collections code rather adding new ngmodules thing would like submit example consideration uses typescript modules define ngmodules fashion comments thoughts welcome", "d": "8/2016"}, {"body": "might missed something way dependency injection works nonlazyloaded modules might become large issue large projects mine nt already suffering", "d": "8/2016"}, {"body": "interesting already enterprise application using requirejs define package various modules module contains directivesservicesfilters bundle packages single file production except main directives directives lazy loaded application used core directive lazy loads required directives application routing page templates housed cms application cms users dragdrop main directive based ui widgets different page templates needed lazy load support directive reduce main script file size browser load application based directive based widgets allows lazy load directives module getting reference register providers type lazy loading components module compile dom possible", "d": "8/2016"}, {"body": "agree others suggested ngmodules solution looking problem potential benefit lazyloading mind justify forced deprecation component directivespipes dependencies maybe wrong feel like majority applications wo nt really see realized benefit lazy loading true benefit provided ngmodules maybe ngmodules attempting hey maybe succeed make development structurepatterns nicer based little looked discussed api thus far moving direction complicated follow maintain also really need another module system", "d": "8/2016"}, {"body": "one could dispute ngmodule adds new kind thing nt deal much anyone much appreciate simplicity especially small programs lost also dearly miss able tell people angular module system angular use module system underlying language oops however actually quite lot people including many technical leads decisionmakers large companies trying build large things extremely interested lazy loading template precompilation substantially enabled ngmodule one thing though part like least new angular modules name word module overloaded talking developers yesterday sort like word package instead sort captures similar idea well bunch competing things name least javascript ecosystem", "d": "8/2016"}, {"body": "kylecordes issue name", "d": "8/2016"}, {"body": "would nt logic presented also disqualify using word module well since conflicts many concepts", "d": "8/2016"}, {"body": "barryrowe could nt said better really seems like majority apps wo nt benefit end added complexity hope", "d": "8/2016"}, {"body": "wonder though really necessary make new coarsegrained module system completely orthogonal underlying module system whether may possible make top level directory modules contained within implicitly comprise coarsegrained ngmodule perhaps convention driven mechanism could added top current mechanism therefore remove ngmodule boilerplate projects willing follow convention key point esmodules work well structuring application structure application correctly example easily make deeply nested export easily available top level api simply reexporting higher level also favor adding optional conventions framework general first time saw thought hey going right direction seems like learned something angular ditched internal modules angular instead used es modules changes also welcomed components typescript wait get stable makes cringe breaking changes lack documentation poor error messages come ngmodules basically undo least one great thing changes since angular indeed angular supposed leverage rich emerging web technology stack available angularjs developed yet justification many design decisions made angular web components must supported ironically framework diverging standards ever increasing ways good reasons diverge standard standards bad feel like framework using core tools full effect example typescript declarations exactly idiomatic littered also ignore powerful language features improve usability toolability apis also contain abhorrent things like interestingly seems fair number decisions turned dart related dart something angular users care different notion types used compared typescript dart lt javascript interop often nonstarter", "d": "8/2016"}, {"body": "aluanhaddad dart implementation forked separate project recently hopefully concerns remedied soon", "d": "8/2016"}, {"body": "change added significant degree complexity terms overall loc mental modeling component dependencies component files slightly cleaner expense explicit inplace dependency definition comes addition redundant feeling module files reducing boilerplate sounds like good thing would argue overdone seems particular boilerplate reduction effort better described movement boilerplate opposed outright reduction think angular trending towards difficult complex quickstarts already quite bit deal terms toolchain setup list files things must understood one adhere best practices even barebone application growing", "d": "8/2016"}, {"body": "jbalbes thank good hear radusuciu absolutely correct reduction boilerplate transference boilerplate another area application already said others one conflict component level scoping ngmodule level scoping need granular scoping choose components directives pipes services available lower tears application based applicationspecific usage semantics", "d": "8/2016"}, {"body": "small wonder modules add yet complexity dubious real value app author part original design seem like late addition added things hit wall could nt made work lazy loading compilation etc without another major change made nt think implications app development vs make promised features work high agenda added larger apps converted starting become clearer nt even started trying convert app modules probably die know many parts need completely reworked get effort closer next breaking change rc even bigger runtime bundles minification surely something pretty basic fundamental broken rcs supposed get stable feel finished progress nt", "d": "8/2016"}, {"body": "gang ngmodule irritation many eloquently explained practically big thing oasis digital angular boot camp already updated numerous small things notsosmall done short long study understanding", "d": "8/2016"}, {"body": "everyone app going impacted differently plus think attitude churn change angular possibly going different focused delivering app vs also selling training support angular work upgrade would completely dead wasted effort would actually deliver negative benefits larger bundles hard justify", "d": "8/2016"}, {"body": "thought give thoughts coming flipside five day push platform get nightlies nt technically dropped yet time writing feel original comments still valid sense relief reached milestone biggest struggles continue using new routing syntax way many empty rules digress something probably abstract away ngmodules nightlies say error messages getting better making whole process little easier work components directives typically called nt configured correctly enough information walking massive ngmodule dependency tree find problem main issue hit functionality missing pages obvious error messages typically component nt declared importedexported correctly little tricky education easy enough deal testing next push completely dead water like functionality push get end took deep breath something else days smashed holding tight next ride whatever good luck everyone affected small large way would nice sort dialog angular team one hardest problem faced lack communication still nt know cards ngmodules last week meeting notes offered insights lets see happens week", "d": "8/2016"}, {"body": "saltydh think valuable feedback think complaints communication really appropriate implementation people build new release docs people update docs docs usually somewhat behind obvious reasons document already coded writing docs also hard timeconsuming work switch next release day released even using nightlies bit unfair complain everything communicated yet angular team also ca nt know advance might cause difficulties user cases always members angular team providing support gitter issues also aware communication burden quite asymmetric angular team members thousands developers", "d": "8/2016"}, {"body": "agree completely easier master build last year deprecations finally going away", "d": "8/2016"}, {"body": "kylecordes way get easier work master", "d": "8/2016"}, {"body": "design document ngmodules earlier known appmodules design doc written released month ago released kind prepared come moreover since ngmodule newer concept hard grab completely migrate medium large app instead first completely understand nuances ngmodules think ngmodules design angular application created self learning app application ngmodules second step think current app broken modules migrate top creating one module time starting appmodule really helped final app looks organized yes gitter really helpful providing help ngmodule even released post docs blogs available us learn much better", "d": "8/2016"}, {"body": "zoechi without derailing discussion much feel must clarify comments nt referring documentation understandings come reviewing commits issues github fine frustrations come lack representation issue comments counting simple aware everyone concerns issue truly believe best approach angular recognise difficulties cause better future product gitter great individual messages often get lost sea people trying understand different aspects angular reach medium due timezone differences priorities nt able get authoritative feedback could use make informed decision help adventures angular podcast gave confidence go forward ngmodule upgrades best", "d": "8/2016"}, {"body": "thanks feedback everyone apologies taken long get reply busy last week migrating internal google apps ngmodules feel refactoring pain let see clear questions misconceptions first thing understand ngmodule component angukar decorator purely compile time construct exist allow angular compiler discover dependency graph application simplified version decorators looks like nt change modify behavior decorated class way simply attach metadata angular uses metadata construct application compile templates jit mode happens time calling bootstrapmodule first component rendering angular compiler retrieves metadata attached classes using reflect api aot mode however works bit differently build time statically without executing code extract metadata source code scanning decorators works okay bootstrapping single component heard lot feedback developers complex things bootstrapping multiple root components bootstrapping different components based auth status etc component decorators gave us ability statically analyze component ability reliably statically analyze application things fall umbrella application platformdirectivespipesproviders things previously added bootstrap compiler level settings multiple root components server side usage ngmodules introduce idea statically analyzable set features interesting aot compile mode analyze root module generate modulefactory module application precompiled version module contains factories statically reference templates mark entrycomponents already extracted information necessary compilation aheadoftime actually treeshake decorators ngc handle automatically final rather bundling application starting root module start generated root modulefactory contains code actually used application nt pay penalty modularity tools like rollup work efficiently follow next reply", "d": "8/2016"}, {"body": "robwormald put emoji amount appreciation kind background information thank", "d": "8/2016"}, {"body": "another issue ran ngmodules solve consider case want build dialogservice similar historically would something like ts injectable export class mydialogservice inject dynamic compiler constructor private componentresolver componentresolver accept component viewcontainerref showdialog component type target viewcontainerref compile component factory async return thiscomponentresolverresolvecomponent component componentfactory gt dynamically insert compiled componentfactory view return targetcreatecomponent componentfactory use like things notice component compilation jit mode must asynchronous external templateurls styleurls viewcontainer accepts componentfactory code problem either rewrite code switch modes jit aot always assume component insertion api asynchronous might okay case dialog constructing complex uis dynamically think dashboard grid view whatever incur huge amount unnecessary promise scheduling party shared servicescomponents like shareddialogservice issue accept either components componentfactories problem crops application dynamic component insertion necessarily mean lazy loading dialogs routers etc expect interact componenttypes classes instead selectors foobar add component entrycomponents array ngmodule decorator tells compiler generate mapping myrandomdialogcomponent compiled myrandomdialogcomponentngfactory store ngmodulefactory declared thus ngmodule driven version dialogservice looks like ts injectable export class mydialogservice inject component factory resolver constructor private componentfactoryresolver componentfactoryresolver accept component viewcontainerref showdialog component type target viewcontainerref retrieve componentfactory component sync let componentfactory thiscomponentfactoryresolverresolvecomponentfactory component add componentfactory view sync return targetcreatecomponent componentfactory component added entrymodules synchronously retrieved dynamically inserted view code change depending mode partyshared libraries worry compilation logic", "d": "8/2016"}, {"body": "thank explanation robwormald one question necessitate removal directivepipe declarations reason ca nt coexist ngmodule feel like folks including frustrated new kid block ngmodule misunderstanding old way things seems working well many folks forcibly removed especially late rc stage think important distinction resistance ngmodule seen much directly addressed yet also see pull request removing directivepipe declarations hoping get response point anything set stone thanks advance angular undoubtedly joy work appreciate much team hard work past year", "d": "8/2016"}, {"body": "comments regarding global scope misunderstands mechanics compiler modules entirely understandable complex stuff dumping entire application single ngmodule fine way dumping entire application state onto rootscope fine read works poor application design angular bringing module application less polluted entire application everything dumped single injector bag ngmodues powerful scoping mechanisms allow composition without pollution goes back compiler angular traversing compiling application component encounters compiled context declared example imagine sharedmodule functionality want share across application shared component one export class sharedcomponentone component selector sharedcomponenttwo template export class sharedcomponenttwo ngmodule declarations sharedcomponentone sharedcomponenttwo exports sharedcomponentone export class sharedmodule sharedcomponentone sharedcomponenttwo declared sharedmodule declarations imply ownership components owned sharedmodule however sharedcomponentone exported module sharedcomponenttwo remains private sharedmodule bring use another module like ts component selector somecomponent template export class somecomponent ngmodule imports sharedmodule declarations somecomponent export class somemodule compiler begins compile discovers selector exports imported knows sharedcomponentone sharedcomponentone interestingly compiler actually compiles sharedcomponentone inside sharedmodule allows use things within sharedmodule exposed outside world similar used work componentdirectives case equal consider though something like tabs feature ts component selector mytabs template export class tabscomponent component selector mytab template export class tabcomponent components toplevel hierarchical relationship rely led explosion sortofconvention people complicated tabs feature might service managed multiple instances tabs got also handle case using becomes exercise remember things export import providing things right location everywhere want use also easy point forget import things need feature end weird silent failures components compiled without required context ngmodule simply package single unit pass around application import relevant libraries like material design might number features spread across multiple modules leverage importexport semantics make even portable pulling single module allows application use components aot time use imported generated code removed componentdirectives pipes heard plenty feedback directions feel like two ways accomplish thing generally bad pattern made choice enable people generally write less code want explicit scoping previously offered componentdirectives accomplish functionality scoping module level sortof automagic hoisting componentdirectives global scope attempt smooth transition worked people mixed oldandnew behavior caused weird errors behavior frustrating temporary goes away error messages improved changed late game apologize nt like making last minute changes end day quite literally building framework way never done front end land thus run unanticipated issues design problems one cases strongly debated investigated among core team made decision sorry trouble confident net result much nicer way building applications thanks everyone patience leave open questions nt covered rob", "d": "8/2016"}, {"body": "nice work robwormald like add observations providers rob focused declarations imports exports module providers different lives going away use different purposes extends application adding providers main injector app root injector eagerly loaded modules adds routing service app without provide b encapsulates service provision within scope component instance component subtree approaches meet different needs general advice provider today leave feature modules powerful way organize app angular module chapter short section refactoring monolithic angular module feature module pretty easy least several times done look natural seams app nt go nuts nt modularize every component reason material design appears trying make easier us use want fine grained way kitchensink module simply reexports everything could import done tuning app create similar reexporting module exports md parts want pattern library vendor could follow might make sense enterprise put together companyapproved kits approved gadgetry discovering declaration dependencies compiler much better job telling something missing follow recommended practice always always always hyphenate component selector names compiler tell got undeclared component also picks undeclaredunrecognized data bindings directives migrating promote sense loss tedious work discovering dependencies previous lists dedupe essential unpleasantness living edge rc nt change much yup wo nt get argument team nt intentional known needed beta imo better ship right product slavishly follow notion rc deliver wrong product also much comfort say watching major software companies recently may noticed equivalently flexible notion release candidate way industry goes reason converted number apps helped others past moved cheese phase pretty mechanical migration everyone seems think better place maybe nice otoh nt hang people nice", "d": "8/2016"}, {"body": "also name bikeshedded names death initially called appmodules since describe something higher level component app nt broad enough term packages bundles barrels globs etc keep mind replacement es modules augmentation let tree shaking es modules work better angular developers semantically similar es modules work imports exports declarations naming hard ngmodule api complete watch next months release see patterns develop sugar make better inferences", "d": "8/2016"}, {"body": "thank sincerely robwormald wardbell insightful comments think greatest relief api complete watch next months release see patterns develop sugar make better inferences something already heard weeks ago specifically context ngmodules along feedback confidence needed go board say done time finish building application also want extend congratulations entire team community reaching milestone exciting times ahead", "d": "8/2016"}, {"body": "honestly believe say saltydh angular churn nt mean angular done evolving future releases churn leading", "d": "8/2016"}, {"body": "thanks lot honesty explicit usecases guys really helps quick thought naming duplication api ngmodule feel little cumbersome imo could clearer concise wrt naming public private vs declarations exports essentially robwormald sure many others explaining ignoring naming would need repeated surely could say export must declaration could desugared way two cents something highly subjective thanks detailed explanations", "d": "8/2016"}, {"body": "robwormald wardbell thanks detailed explanations said earlier thread help us organize better recent example creating validator directives template driven forms pre import directive component creating form package import module wherever required validator add later automagically available modules imported need update template without worrying dependencies jameshenry used keep ngmodules line modules like stuff modules agree sugaring things exported desugared declarations auto magically", "d": "8/2016"}, {"body": "jameshenry stuck importsexports mental model closer es modules work least terms scoping declare things module import things modules export things make available others works use ngmodule reexport materialmodule example plenty cases may use ngmodule reexport something declared another module inferences sort fall apart", "d": "8/2016"}, {"body": "robwormald great comments definitely deserve blog post dialog library uses say see users struggling trying add custom components forget register clear enough apparently understandable advanced feature sure sink time", "d": "8/2016"}, {"body": "shlomiassaf thanks mention well cases like notice use angular router add components declarations route config entrycomponents despite fact router definition entrycomponents remember entrycomponent thing want refer class rather selector cool trick library take advantage magical token called see router uses libs deal dynamically inserted components could something like ts ngmodule providers dialogservice export class dialogmodule static withcomponents componentlist ngmodulewithproviders return ngmodule dialogmodule providers provide analyzeforentrycomponents usevalue componentlist multi true used like ts ngmodule declarations myconfirmdialog myquestiondialog imports dialogmodulewithcomponents myconfirmdialog myquestiondialog export class myappmodule might work use case might", "d": "8/2016"}, {"body": "jameshenry important confused saying module declares component making statement public private making claim ownership really like happens modules anything define inside file belongs module defined file whether public depends upon use keyword modules reexport stuff imported like think trick keeps physically place components directives pipes physical file would modules intended classes belong module substitute pasting files one awful big file mental model anyway", "d": "8/2016"}, {"body": "one thing note logical difference providers components context module providers components declared place developer might intuitively feel providers behave like components thinking provider module result instance module since providers managed di course true actually application level components module private exported might lead confusion love concept modules imo issue api providers components declared place within module new comers hard thing grasp", "d": "8/2016"}, {"body": "wardbell thanks ward really really great clarify came discussions say angular api complete namespaces talking angular", "d": "8/2016"}, {"body": "robwormald thanks great tip sugar flavoured one implement", "d": "8/2016"}, {"body": "google employee maybe google employee could nt say report seeing two eyes serious api freeze across set libraries good ideas sitting shelf nt good enough deep enough justify holding release good ideas never cease time come say angular promised removal deprecated api coming final tweaks anyone see looking master feel like done", "d": "8/2016"}, {"body": "wardbell echo say exports indexts filled reduced rest stuff clean sits ngmodule exports", "d": "8/2016"}, {"body": "wardbell think feel clearly describes context providers", "d": "8/2016"}, {"body": "shlomiassaf would misleading effect different eager lazy modules lazy loaded modules get child injector means providers added child injector root injector goes lazy loaded lazy loaded lazy maybe could different name know goes would nt improvement reasons gave", "d": "8/2016"}, {"body": "wardbell agreed nt think scenario", "d": "8/2016"}, {"body": "wanted add sentiment thorough replies communication much appreciated indeed last rctofinal growing pains races thanks", "d": "8/2016"}, {"body": "others remarked feedback team appreciated however kind change phase development suggestive fundamental design errors let honest made kinds mistakes value judgmental make mistake humbles hopefully makes subsequently prudent get impression effect anagular team like think declarations trick keeps physically place components directives pipes physical file would modules intended classes belong module declarations substitute pasting files one awful big file mental model anyway wardbell maybe missing something fundamental see using fundamentally different importing reexporting esmodules ironically primary limitation esmodules provide concept physical modules logical ones see improves different aggregation syntax raise level abstraction meaningful degree also ngmodules completely fail address major problem whole pattern opaque wrong ways drops discoverability zero one read source determine array providers true", "d": "8/2016"}, {"body": "imo better ship right product slavishly follow notion rc deliver wrong product also much comfort say watching major software companies recently may noticed equivalently flexible notion release candidate way industry goes reason wardbell biggest frustration rc impression beta got pushed rc ngconf google io make progress reason put clearly marketing technologists fight trend flexible notions maturity might know popular car manufacturer valley discussion wether right sell beta product may took life nt want exaggerate technologists must speak way industry going going wrong direction", "d": "8/2016"}, {"body": "like ngmodule approach question robwormald shared service components directives pipes services contains business model classes imports therefore services available whole application feature modules uses services business model classes import shared module technically necessary errors semantic view would makes sense also errors kind modules import personally like second possibility says hey feature module need services need business model classes thanks answer", "d": "8/2016"}, {"body": "feel pain librariesmodular application libraries ngmodule said many times nt mix two possible ways confusing correct approach would declare ngmodule component makes lot boiler coder every component way nt work either large scale way add new decorator called componentmodule less sugar avoid declaring component module like material way way see component know must part ngmodule case many comonents bundle together use ngmodule want standalone component like old components use componentmodule know dependencies module dependency modules part", "d": "8/2016"}, {"body": "nathraq correct approach use ngmodule every component may well ngmodule introduced component enhanced regarding boilerplate angular heavy hardly matters point many frameworks nt module system successfully used conventions establish standard patterns layout visibility constructs wise man said ca nt define conventions fact need start skeptical claim debacle proves right", "d": "8/2016"}, {"body": "aluanhaddad sorry disagree use cases one module angular custom dependency management like starter thread also use cases modules bundle set controllers directives services useful figure integrate understandable everyone", "d": "8/2016"}, {"body": "wow long read smile see pros cons new change make think one scenario trouble angular wardbell robwormald use sharedmodule pattern import two party libraries uibootsrap vs angularstrap anyone use selector component let say get error try import right one solution read reexport one libraries custom module means need keep updating wrapper module every time library upgrades also happen component selector name big projects might happen recommended solution problem wrapper module hope wo nt come back using prefix selectors fun thanks advance", "d": "8/2016"}, {"body": "namespacing prefixing call generally good idea matter large project yes may trivial smaller projects soon thridparty modules involved would say almost minimum provides peace mind knowing collisions wo nt happen even modules get updated also developers easily identify belongs module without necessarily follow dependency tree", "d": "8/2016"}, {"body": "nathraq patterns achieved ecmascript modules introduction gets us nowhere fact libraries like angularmaterial turning components ngmodules preserve previously provided encapsulation proves point", "d": "8/2016"}, {"body": "aluanhaddad ngmodules trying something different es modules replacing component encapsulation either ie es modules components changed core responsibilities ngmodules medium describe architecture throughout application helps angular better understand intent optimize accordingly allowing things like compiling certain portions application beforehand serving dynamically resolved modules server achieved es modules reasons one ngmodule per component nt rule thumb follow true simpler applications may benefit much benefits cases ngmodules less annoyance anyway", "d": "8/2016"}, {"body": "emiliomartinez aluanhaddad wrote old angular way gave us namespacing needed worked large projects angular selector named collide quickly others large project even team developers trying solve namespacing end makes templates look dirty happy see solved metadata could npm install package like import need per component ngmodules benefits sure helps loading chunks async also help us write less imports improves productivity using pattern introduces global namespace much like least providers namespaced token file location components selectors scream two components selector wish easy way configure special namespace use cases collisions party local shared components something like selector override asking", "d": "8/2016"}, {"body": "thanks robwormald detailed insight one thing newbies like mostly backend developer learning angular typescript module concept kind blurry complex application structure analytics app component count almost think well strucutred apart login didnt use kind routing routernrecreates whole component planning tab based apptwo main tab analytics tab multiple tabs single analysis dashboard also multiple tabs tab consists multiple analysis save analytics section going back forth multiple tabs dashboard analysis also switching dashboard tab analytics tab feel routing wont serve purpose correct saying something dumb ngmodule kind breaking application really dont know redesign application really use aot compilation application nt whole aot thing based routing", "d": "8/2016"}, {"body": "shairez ngmodules provide exactly kind namespacing let try clarify bit key thing realize component compiled less inside module declared see example notice two conflicting selectors feature modules imports one able use internal module without polluting global namespaces used like expands without conflicts compiler compiles featureone featuretwo context module belong avoids polluting global scope", "d": "8/2016"}, {"body": "robwormald sure awesome better angular sense use case wrote referring pattern using global sharedmodule suggested docs try declare insided get error right whole bunch useful common components want import every feature module feature module colliding selector party colliding selector one existing libraries exported issue error right", "d": "8/2016"}, {"body": "shairez think applications end number sharedmodules likelihood collisions low modules cheap nt big cost lots ideas improve docs pr would gladly welcomed", "d": "8/2016"}, {"body": "thanks answer looking test nt yet better ideas solve new way writing modules asked test multiple shared modules solution material discuss wardbell submit pr thanks help robwormald", "d": "8/2016"}, {"body": "latest docs available many warnings antipatterns bugs easily emerge composed incorrectly example specify appwide singleton providers shared module lazy loaded module imports shared module make copy service rather troubling follow tried true approach first make work make fast likely need adjust modules eagerly lazily loaded based empirical metrics emergent structure modules application library expands basically module care loaded lazily eagerly another seemingly serious issue arises juxtaposing following sections docs suppose module requires customized httpbackend adds special header http requests another module elsewhere application also customizes httpbackend merely imports httpmodule could override module httpbackend provider losing special header server reject http requests module avoid problem importing httpmodule appmodule application root module reexport classes modules absolutely modules great way selectively aggregate classes modules reexport consolidated convenience module module reexport entire modules effectively reexports exported classes angular browsermodule exports couple modules like exports commonmodule applicationmodule module export combination declarations selected imported classes imported modules one hand docs discourage users reexporting certain modules time stating provides great convenience notion reexports analogous es module reexports except less control javascript statically scoped yes know one greatest strengths allowing extremely flexible composition information hiding javascript also supports shadowing always way override scope biggest problem though examples guidelines revolve around import angular framework modules naturally dividable ways allow conflicts intuitively prevented exist provide infrastructure level services generally overlap user defined modules cut across many layers may want enhance change variety behavior example logging module might want access router http services time providing several components displaying info administrative users use one forms modules define", "d": "8/2016"}, {"body": "docs saying nothing reexports transitive module reexports commonmodule module b reexportsmodule module c imports module b mean module c use directives commonmodule", "d": "8/2016"}, {"body": "martinwegner transitive described", "d": "8/2016"}, {"body": "aluanhaddad ca nt find word transitive reexports one hop", "d": "8/2016"}, {"body": "reading aluanhaddad grabbed docs angular feel like reconsider everything learned angular maybe even nt framework handles dependencies better way understand app module importing httpmodule feature module service uses http service nt import httpmodule feature module level app module level create feature module shared among many app modules really httpmodule beeing imported app module ca nt tell feature module depends httpmodule really ugly means ngmodule definition lacks lot features like example peerdependecies oh boy feels like angular breaking apart fear time start abandon angular start angular", "d": "8/2016"}, {"body": "actually much sense said started journey since last year nt reason feel beating despite breaking changes seen far alpha beta rc understandable phases since religiously stuck philosophy used converting minimalist backbonejs whole idea ngmodules proved somewhat counter productive sad watch whole time put evangelising rich goodness minimalist bloatfree components go absolutely waste aug daniel schuba notifications githubcom wrote reading aluanhaddad grabbed docs angular feel like reconsider everything ive learned angular maybe even nt framework handles dependencies better way understand app module importing httpmodule feature module service uses http service shouldnt import httpmodule feature module level app module level create feature module shared among many app modules really httpmodule beeing imported app module ca nt tell feature module depends httpmodule really ugly means ngmodule definition lacks lot features like example peerdependecies oh boy feels like angular breaking apart fear time start abandon angular start angular receiving subscribed thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "could somebody correct wrong thinking organizing app follows app law manycomponents lawngmodule user manycomponents userngmodule appngmodule somefirstlevecomponents let say want work angular material kinda hated much boiler plate importing element every component would add ng module since decided use one ng module per feature imports ng module consider root one right maybe case create module x reexport material another module import modules need", "d": "8/2016"}, {"body": "renevallecillo right import feature module add together modules shared module hiding dependency reexports use shared module reexport another module might even duplicate imports without knowing seeing immediately", "d": "8/2016"}, {"body": "see", "d": "8/2016"}, {"body": "thnx ericmartinezr", "d": "8/2016"}, {"body": "please us import http via new httpmodule", "d": "8/2016"}, {"body": "try solution previously suggested exactly issue opened", "d": "8/2016"}, {"body": "yes tried result nt worked expected without angular working smooth", "d": "8/2016"}, {"body": "could nt reproduce black page case information provided tests template something like way behaves static examples tested chrome", "d": "8/2016"}, {"body": "clear apps written js using dsl ts right", "d": "8/2016"}, {"body": "wardbell correct", "d": "8/2016"}, {"body": "temporary workaround give constructor function name example changing workaround issue name nt match name component generated code easier grok", "d": "8/2016"}, {"body": "sounds like community task", "d": "8/2016"}, {"body": "c also made sure would need someone step sounds like community project", "d": "8/2016"}, {"body": "add di provider instance whatever config like question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "fix issue us sure closing immediately best solution every app uses hammer binds hammer event scroll default config thanks dan", "d": "8/2016"}, {"body": "could please check doc angulario nothing mentioned create ticket thanks help", "d": "8/2016"}, {"body": "instinct need feature arises pursuing monolithic router configuration pattern longer necessary actively discouraged", "d": "8/2016"}, {"body": "closing migrating developer use ngmodule rather get app working one ngmodule within bootstrap", "d": "8/2016"}, {"body": "similar problem described except minifying anything name collision instead caused systemjs transpiling imports specifically transpiling imports symbol renaming", "d": "8/2016"}, {"body": "igorminar tried code quickstart transpiles via instead systemjs results also tried uses transpilation systemjs also got results", "d": "8/2016"}, {"body": "could provide plunker reproducing issue", "d": "8/2016"}, {"body": "looks like actually match route populate query params debugging closing opened new ticket", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "thnx zoechi", "d": "8/2016"}, {"body": "agree dup issue closed", "d": "8/2016"}, {"body": "distinguish group errors control errors example controls valid produce invalid combination may want distinguish errors control level errors", "d": "8/2016"}, {"body": "sure comes seems angular", "d": "8/2016"}, {"body": "thank found dependent plugin submitted", "d": "8/2016"}, {"body": "nothing without reproduction issue", "d": "8/2016"}, {"body": "updated description issue added plunker example point view behavior unexpected ps would great starting point plunker would include router package", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "support request di fails use constant inside array componentauthorities object otherwise works", "d": "8/2016"}, {"body": "also little bit explanation discussion", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "sure understand think support request nt believe component created correctly dom clearly contain template dyncomponent certainly could using wrong understand expected behavior expected behavior please explain", "d": "8/2016"}, {"body": "dynamic component creation used internally ex router doubt work", "d": "8/2016"}, {"body": "closed issue expected current behavior short synthetical seems like expected behavior actually steps reproduce briefly reading issue guess would spend time trying figure expect resolving genuine issue sorry agressive closing issues issues pending afford loose time going trough hope understand", "d": "8/2016"}, {"body": "indeed stepped code saw work successfully multiple component creations via router viewcomponentrefcreatecomponent call case saw work correctly rootselectorornode argument null calling create passing id arbitrary div element perhaps parameter think supported api documentation place restrictions parameter certain thanks replying", "d": "8/2016"}, {"body": "note expected behavior fields submission template first expecteddesired behavior short sweet explanation expect expect component created created second expected behavior field reproduction problem heading therefore took expected behavior explanation reproduction issue plunker quite possibly misunderstood submission template two expected behavior fields first place seems redundant", "d": "8/2016"}, {"body": "completely document thread copy email sent victor prompted two responses replies victor trying understand closed issue api componentfactorycreate simply says create injector injector projectablenodes rootselectorornode stringany componentref creates new component however create component least correctly pass node third parameter seems find node appropriately inserts part component please explain expected certainly accept may missing something sure missing thanks steve mutmansky", "d": "8/2016"}, {"body": "mutmansky support channels mentioned vics first comment consulted confident nt miss anything bug", "d": "8/2016"}, {"body": "zoechi please see previous comment referenced post commented note bug way asks support provided plunker component loaded nt correctly loaded also edited post plunker link asking missing email simply trying polite leave open possibility nt bug simply using componentfactory incorrectly perhaps stop trying polite plunker simple based quickstart twoway data binding developer guide someone explain bug maintain bug", "d": "8/2016"}, {"body": "plunker reproduce think", "d": "8/2016"}, {"body": "meaning st else original thisrouternavigate versionoverview modelid modelname would result versionoverviewxxxyyy nt", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "mlcmlapis tried", "d": "8/2016"}, {"body": "precise two different kind things case first one called path segments second route parameters path segments defined route parameters defined path segments addressable resulted url route parameters addressable could part path segment resulted url versionguides langen possible combine together course like resulted url langen resulted url langenf mention query parameters segments yet global things urls tested examples router beta", "d": "8/2016"}, {"body": "provide optional query parameters object like optional query parameters represented query parameters root component matrix parameters child components afaik think bug please provide plunker reproduce", "d": "8/2016"}, {"body": "terminology inconsistency docs bit think st like foo foo called optional query parameters", "d": "8/2016"}, {"body": "think representation matrix parameter form depending added", "d": "8/2016"}, {"body": "ok problem nt matter understand real differerence reality query params segments global uniq url others specific path segment", "d": "8/2016"}, {"body": "thanks answers know multiple path segments given array separate method params statement zoechi helped vicb thought bug sorry wrong", "d": "8/2016"}, {"body": "looked", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "expected behavior output emits array several times first time recognized changed subsequently array emitted change detection nt dedect change update happening therefore call setter please check question ins support channels posting bug reports contributing got question problem", "d": "8/2016"}, {"body": "nt know behavior change wrap bootstrap fetch selector component via like typescript import componentmetadata angularcore import bootstrap angularplatformbrowserdynamic import app app const findannotation function classtype annotationtype const annotations reflectgetmetadata annotations classtype annotations amp amp annotationsfind return annotationsfind annotation gt annotation instanceof annotationtype const bootstrapifexists appcomponenttype type providers void gt const component componentmetadata findannotation appcomponenttype componentmetadata const elements arrayfrom documentgetelementsbytagname componentselector elementslength return bootstrap appcomponenttype providers else return promisereject bootstrapifexists app catch err gt consoleerror err", "d": "8/2016"}, {"body": "agree checked ultimately nt know prudent app exit exceptions failing silently anyway thought put example", "d": "8/2016"}, {"body": "reopening sod would nt quite work ngmodules unless entry component available bootstrap", "d": "8/2016"}, {"body": "wardbell know plan update cs", "d": "8/2016"}, {"body": "appears ngfor items form name editing plunker one way bind input name item unique property fixes issue intended behavior", "d": "8/2016"}, {"body": "yes every form control name level must unique nt want share control using name always use index closing works intended", "d": "8/2016"}, {"body": "anything without repro sorry", "d": "8/2016"}, {"body": "wrong repo please reopen", "d": "8/2016"}, {"body": "nt think feature use incremental builds wait", "d": "8/2016"}, {"body": "would make sense closed", "d": "8/2016"}, {"body": "joeeames yes close works expected", "d": "8/2016"}, {"body": "closing issue feature", "d": "8/2016"}, {"body": "could try instead", "d": "8/2016"}, {"body": "seems like known issue make work plain html wo using angular work angular p lease open issue provide plunker thanks", "d": "8/2016"}, {"body": "working ie using angular functionality interpolation tried working good", "d": "8/2016"}, {"body": "btw seen issues people tell ca nt find issue directly think nt duplicate issue", "d": "8/2016"}, {"body": "dup", "d": "8/2016"}, {"body": "zoechi maxlength tricky solution using attrmaxlength binding think issue concrete correct addition tells problem minlength pattern ihmo", "d": "8/2016"}, {"body": "think validator attributes combination binding", "d": "8/2016"}, {"body": "created pull request solve", "d": "8/2016"}, {"body": "used syntax bellow allroute works correctly allroute gt thisrouternavigatebyurl", "d": "8/2016"}, {"body": "thanks works", "d": "8/2016"}, {"body": "root problem also cause issues race conditions tests even used used test block tasks spawned component tied first test block means later test block wo nt know actions could exit early example ts beforeeach async gt testbedconfiguretestingmodule declarations asyncinittestapp full example", "d": "8/2016"}, {"body": "see explains two different calls jeremy example share one zone workaround works currently something like explains problem", "d": "8/2016"}, {"body": "cc vikerman well", "d": "8/2016"}, {"body": "juliemr yes tobias came across issue spawning brand new test zones beforeeaches fixed fakeasync would time send pr solution similar far fixing original issue reported jelbourn discuss mhevery several options none ones currently know pretty", "d": "8/2016"}, {"body": "ca nt think anything pretty either fix async unless larger solution still failures try something like mix async fakeasync", "d": "8/2016"}, {"body": "rough proposal create special zone spec knows proxy delegate specs angularcoretesting let testproxyzonespec null lots handwaving actual implementation likely different function async fn testproxyzonespecsetdelegate new asynctestspec fn wait fn async stuff done testproxyzonespecsetdelegate null lots handwaving actual implementation likely different function fakeasync fn testproxyzonespecsetdelegate new fakeasynctestspec fn testproxyzonespecsetdelegate null beforeeach gt zonecurrent root ngzone null testproxyzonespec new testproxyzonespec zonecurrentfork testproxyzonespec zonecurrent root gt testzone spec redirecting null ngzone null application spec beforeeach inject tcb testcomponentbuilder gt zonecurrent root gt testzone spec redirecting null ngzone root gt testzone gt ngzone async gt zonecurrent root gt testzone spec redirecting async ngzone root gt testzone gt ngzone doasyncwork fakeasync gt zonecurrent root gt testzone spec redirecting fakeasync ngzone root gt testzone gt ngzone doasyncwork flushmicrotasks", "d": "8/2016"}, {"body": "think looks like best option", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "tbosch pinpointed raised see problematic line trouble variable null causes application bootstrap raised following message error message explicit way bug", "d": "8/2016"}, {"body": "confirm also affect", "d": "8/2016"}, {"body": "updated class instead import component oninit applicationref ngmodule angularcore import formsmodule angularforms import title browsermodule angularplatformbrowser import routerdirectives activatedroute routermodule angularrouter import translateservice translateloader translatestaticloader import navbarcomponent sharedcomponentsnavbarcomponent import footercomponent sharedcomponentsfootercomponent import signincomponent sessionsessionsignincomponent import homecomponent homecomponentshomecomponent import sessionservice sessionsessionservice import useraccountservice useraccountuseraccountservice import locationstrategy hashlocationstrategy angularcommon import stylingservice sharedservicesstylingservice import passwordvalidationservice sharedservicespasswordvalidationservice import approutes routesapproutes import authenticatedhttpclient sharedservicesauthenticated import http angular import momentlocalefr import moment moment import privatenavbarcomponent sharedcomponentsprivatenavbarcomponent import publicnavbarcomponent sharedcomponentspublicnavbarcomponent import signupcomponent signupsignupcomponent import sendpasswordresetinformationcomponent useraccountpasswordsendpasswordresetinformationcomponent import passwordresetcomponent useraccountpasswordpasswordresetcomponent import dashboardcomponent dashboarddashboardcomponent import dashboardsummarycomponent dashboarddashboardsummarycomponent import messagesummarycomponent messagesummarymessagesummarycomponent import messageconversationcomponent messageconversationmessageconversationcomponent import useraccountcomponent useraccountuseraccountcomponent import useraccountsummarycomponent useraccountsummaryuseraccountsummarycomponent import useraccountaddresscomponent useraccountaddressuseraccountaddresscomponent import useraccountemailcomponent useraccountemailuseraccountemailcomponent import useraccountemailnotificationcomponent useraccountemailnotificationuseraccountemailnotificationcomponent import useraccountfirstnamecomponent useraccountfirstnameuseraccountfirstnamecomponent import useraccountpasswordcomponent useraccountpassworduseraccountpasswordcomponent component selector app template directives navbarcomponent footercomponent signincomponent homecomponent routerdirectives export class appcomponent implements oninit constructor private translate translateservice private sessionservice sessionservice private titleservice title private activatedroute activatedroute let userlang fr translateuse userlang momentlocale userlang ngoninit thissessionservicereloadpersonalinfo settitle event fixme remove consolelog later consolelog event ngmodule declarations appcomponent homecomponent signupcomponent signincomponent sendpasswordresetinformationcomponent passwordresetcomponent dashboardcomponent dashboardsummarycomponent messagesummarycomponent messageconversationcomponent useraccountcomponent useraccountsummarycomponent useraccountaddresscomponent useraccountemailcomponent useraccountemailnotificationcomponent useraccountfirstnamecomponent useraccountpasswordcomponent footercomponent navbarcomponent privatenavbarcomponent publicnavbarcomponent imports browsermodule routermoduleforroot approutes formsmodule homecomponent signupcomponent signincomponent sendpasswordresetinformationcomponent passwordresetcomponent dashboardcomponent dashboardsummarycomponent messagesummarycomponent messageconversationcomponent useraccountcomponent useraccountsummarycomponent useraccountaddresscomponent useraccountemailcomponent useraccountemailnotificationcomponent useraccountfirstnamecomponent useraccountpasswordcomponent footercomponent navbarcomponent privatenavbarcomponent publicnavbarcomponent providers sessionservice useraccountservice authenticatedhttpclient stylingservice translateservice passwordvalidationservice provide locationstrategy useclass hashlocationstrategy provide translateloader usefactory gt new translatestaticloader json deps http bootstrap appcomponent export class appmodule ngdobootstrap appref applicationref apprefbootstrap appcomponent careful list components imports still get error", "d": "8/2016"}, {"body": "balteo please provide minimal reproduce scenario using plunker impossible see going otherwise actionable without reproduce scenario closed", "d": "8/2016"}, {"body": "using angularcli", "d": "8/2016"}, {"body": "pkozlowskiopensource updating issue relevant information got wrong still error message could improved yes indeed", "d": "8/2016"}, {"body": "using following configuration sorted issue ngmodule declarations appcomponent homecomponent signupcomponent signincomponent sendpasswordresetinformationcomponent passwordresetcomponent dashboardcomponent dashboardsummarycomponent messagesummarycomponent messageconversationcomponent useraccountcomponent useraccountsummarycomponent useraccountaddresscomponent useraccountemailcomponent useraccountemailnotificationcomponent useraccountfirstnamecomponent useraccountpasswordcomponent textcountercomponent footercomponent navbarcomponent privatenavbarcomponent publicnavbarcomponent imports browsermodule routermoduleforroot approutes usehash true formsmodule providers httpproviders formbuilder title sessionservice useraccountservice authenticatedhttpclient stylingservice translateservice passwordvalidationservice provide translateloader usefactory http gt new translatestaticloader json deps http bootstrap appcomponent export class appmodule ngdobootstrap appref applicationref apprefbootstrap appcomponent following guide ngmodule helped however error message case misconfiguration explicit", "d": "8/2016"}, {"body": "seems identical experiencing also reading documentation ngmodule thanks posting resolution perhaps issue least linemodule fails included error", "d": "8/2016"}, {"body": "use primitive values need use github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "zoechi said thanks", "d": "8/2016"}, {"body": "thanks comments updated project showts trackby index using reference object values still updated ok plnkrco", "d": "8/2016"}, {"body": "still support question asked listed channels", "d": "8/2016"}, {"body": "please provide plunker allows reproduce", "d": "8/2016"}, {"body": "closing nt reproduce scenario", "d": "8/2016"}, {"body": "export const organizationsroutes routerconfig path editorganization organization component editorganizationcomponent resolve organization organizationresolve children path overview component overviewcomponent get parent resolve data organization overviewcomponent", "d": "8/2016"}, {"body": "child component get parent resolved data activatedroutesnapshotdata parentresolve", "d": "8/2016"}, {"body": "thanks problem prepare simple plunker scenario resolve data parent router childs ca nt take resolved data parent path user id resolve user userresolve children path overview component useroverviewcomponent like useroverviewcomponent take resolved data user parent router tested take data resolved parent router child router plunker take resolved data parent router", "d": "8/2016"}, {"body": "yes thanks lot adding plunker pkozlowskiopensource please check plunker link reopen issue", "d": "8/2016"}, {"body": "spending time problem notice problem resolve observable object resolve promise static data resolved data ok yesterday upgraded project angular router angularrouter incredibly problem solved without modification code problem solved upgrading angular last version venkateswaris please check code lastest version tell us problem persists", "d": "8/2016"}, {"body": "hi tried router still problem exists forked plunker changed router load data parent route pkozlowskiopensource please check plunker link reopen issue", "d": "8/2016"}, {"body": "hi venkateswaris checking plunker think incorrect declare parameter child parent change code path user resolve user userresolve children path id component usercomponent path user id resolve user userresolve children path component usercomponent problem resolve parent data still persist improved plunker explain problem details problem happened childs router parent changed children routes changes data parent lose idea solve problem going check code hope find exact problem let know idea solve problem note prepared plunker explain problem", "d": "8/2016"}, {"body": "part core would great idea party component widget though", "d": "8/2016"}, {"body": "nt multipage applications multi singlepage applications github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "ca nt use enhance templates build template engine backend like used templates must part components point everything written might well singlepageapp backend remain api", "d": "8/2016"}, {"body": "github appropriate place type general discussion please use forums pointed zoechi", "d": "8/2016"}, {"body": "prints", "d": "8/2016"}, {"body": "js work supported see amp discussing implementing bind op still discussion es next prefer wait things settled implementing", "d": "8/2016"}, {"body": "problem demonstrated absence", "d": "8/2016"}, {"body": "please provide plunker reproduce work plain js", "d": "8/2016"}, {"body": "angular forward events reason works plain js within angular create plunkr showing real bug please reopen issue thanks", "d": "8/2016"}, {"body": "router outlets intended serve one level groupingrouting time", "d": "8/2016"}, {"body": "joesaad believe works hoping already example works", "d": "8/2016"}, {"body": "verify run reason ask noticed thing consolelog statements showing right away yet ngoninit clearly run case used initialized data template template rendered seconds console log appear assume something possibly zone buffering output console executing", "d": "8/2016"}, {"body": "sure placed break point also noticed runs click button event attached example change", "d": "8/2016"}, {"body": "ok seen issue described", "d": "8/2016"}, {"body": "sounds like support question see also missing inportant part reproduction suggested could ask support forums", "d": "8/2016"}, {"body": "case need set pathmatch full first route defaults prefix never hit second route", "d": "8/2016"}, {"body": "actually bad route paths angular must start typo nt exists code edited post actual problem came using attribute routerlink placeholder query parameter part system using result html something like shows error obviouslly correct feel free close issue one might want throw better message though case fixed problem everything working including routing route without query parameter currently user route user id route working also none pathmatch attribute use default prefix", "d": "8/2016"}, {"body": "closing issue fixed problem everything working including routing route without query parameter currently user route user id route working also none pathmatch attribute use default prefix pathmatch attribute useful mostly redirects read briefly router backtracking finds path configuration matches url navigating try first route first wo nt succeed cause unconsumed try second one next", "d": "8/2016"}, {"body": "bootstrapping ngmodules currently declare directives ngmodules using latest builds may want use angularbuilds sha ngmodules merged unless using", "d": "8/2016"}, {"body": "qdouble bootstrap application import bootstrap angularplatformbrowserdynamic import enableprodmode angularcore import title angularplatformbrowser import providerouter angularrouter import locationstrategy hashlocationstrategy angularcommon import httpproviders http requestoptions angular import translateproviders translateservice translateloader translatestaticloader import appcomponent appappcomponent import sessionservice appsessionsessionservice import useraccountservice appuseraccountuseraccountservice import applicationrequestoptions appsessionsessionutils import stylingservice appsharedservicesstylingservice import approutes approutesapproutes import environment appenvironment import formbuilder reactiveformdirectives provideforms disabledeprecatedforms angularforms import passwordvalidationservice appsharedservicespasswordvalidationservice import validatepassword appsharedvalidatorspasswordvalidator import rxjsaddoperatordo import authenticatedhttpclient appsharedservicesauthenticated environmentproduction enableprodmode bootstrap appcomponent providerouter approutes httpproviders translateproviders title formbuilder reactiveformdirectives sessionservice useraccountservice authenticatedhttpclient stylingservice translateservice passwordvalidationservice provide requestoptions useclass applicationrequestoptions provide locationstrategy useclass hashlocationstrategy provide translateloader usefactory gt new translatestaticloader json deps http mean ngmodules", "d": "8/2016"}, {"body": "balteo example bootstrapping ngmodules although yesterday commits also use ngdobootstrap example another example modifying app use ngmodules lazy loading bit confusing may want wait release docs go back build ngmodules introduced yes appmodules renamed ngmodules", "d": "8/2016"}, {"body": "might want switch use github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "definitively support request go appropriate support channel pointed zoechi moreover clear kind modal impl using handrolled one existing library using party library please ask support using support channel", "d": "8/2016"}, {"body": "something cleared docs intended behavior order route configuration matters url matching process would prone error different weight give different types routes static wildcard parameter", "d": "8/2016"}, {"body": "provide example get work without documentation behavior appear consistent", "d": "8/2016"}, {"body": "trying parent automatically load child route", "d": "8/2016"}, {"body": "expansion shown sort redirect defined child route redirect intended method accomplishing efficient performant recommend ts approutests const routes routerconfig path component launchcomponent freelancerdashboardroutes parentchild route definition listed first path freelancerdashboard redirect route definition redirectto freelancerdashboardprojects pathmatch full employerdashboardroutes path employerdashboard redirectto employerdashboardprojects pathmatch full freelancerdashboardroutests export const freelancerdashboardroutes routerconfig path freelancerdashboard component freelancerdashboardcomponent children path projects component freelancerprojectscomponent path account component freelanceraccountcomponent path freelancers component freelancerteamcomponent redirect ts approutests const routes routerconfig path component launchcomponent freelancerdashboardroutes parentchild route definition listed first path freelancerdashboard redirect route definition redirectto freelancerdashboardprojects pathmatch full employerdashboardroutes path employerdashboard redirectto employerdashboardprojects pathmatch full child route ts freelancerdashboardroutests export const freelancerdashboardroutes routerconfig path freelancerdashboard component freelancerdashboardcomponent children path component freelancerprojectscomponent child route like path component freelancerprojectscomponent path projects component freelancerprojectscomponent path account component freelanceraccountcomponent path freelancers component freelancerteamcomponent", "d": "8/2016"}, {"body": "opposed cononical form syntax", "d": "8/2016"}, {"body": "thanks robertmirro yes opposed requires adding stuff order drive framework behavior particular syntax nt find better worse cononical form however generally idea pollute markup hints whatever form may web components implemented using metadata framework needs order drive already provided component class understand perhaps may needed order use ng app web component implemented using something ng less common use case even case better solutions nt involve adding noise markup thanks feedback", "d": "8/2016"}, {"body": "valid syntax initialize property string initialize expression required disambiguate bindings allow tooling support able find long discussions issue tracker interested details", "d": "8/2016"}, {"body": "thanks vicb understand valid syntax figured already extensive evaluation explained behaviorsyntax problematic many levels first component telling metadata property bindable need information zero ambiguity second far tooling concerned tooling almost always driven available type information presence going make developing tools easier harder point already gone many online discussions topic spent last couple sprints exclusively researching spent thousands dollars developer time trying figure use end remain unconvinced sorry say somewhat disappointed feature request closed prematurely think understand guys brilliant developers developing magnificent framework applaud grateful hard work effort free framework time kindly respectfully ask guys understand point view consumers hard work also work hard learn implement solutions framework please consider reopening request others team weigh thank", "d": "8/2016"}, {"body": "however generally idea pollute markup hints using hints change behavior vicb explained either without normal plain html attribute definition binding adds attribute value yyy element binds value component property yyy elements property", "d": "8/2016"}, {"body": "zoechi thank feedback agree understand already presence absence drives behavior framework however whether call hint besides point point syntax absolutely unnecessary add noise markup needed good reason one time beginning please take close look one time example provided component telling metadata bindable input property called someinputproperty plain old attribute definition name someinputproperty absolutely without shadow doubt treated angular binding make sense common use case ask put hand heart honestly tell many times created component input property markup used plain old attribute pass string component guess done zero close zero times guess always almost always use property binding makes total sense declared component property input property never almost never makes sense pass plain old string knowing earth need propertyevent binding syntax markup answer nt need understand need exists perhaps pass plain old string component get nt argue common use case case component really expecting plain old string one properties simply declare property without input decorator really one sees propertyevent binding syntax completely unnecessary thanks feedback zoechi wish angular team would consider", "d": "8/2016"}, {"body": "look form directives pretty common distinction oneway twoway binding ngmodel prop vs ngmodel prop vs ngmodel eventhandler x want changed sure wo nt happen need provide solid analysis instead guesses wishes topic discussed death beating death horse", "d": "8/2016"}, {"body": "zoechi thanks due respect nt guesses wishes instead spent lot money good developers evaluating wish could done earlier process discussing topic unfortunately resources limited systems build maintain examples enforce conclusion bad design metadata thanks", "d": "8/2016"}, {"body": "added export routes array components saves importing bootstrap however still pain maintain", "d": "8/2016"}, {"body": "already wondered components need added module since every component dependencies nt quite get need redeclaring everything module definition", "d": "8/2016"}, {"body": "daschtour since every component dependencies biggest breaking change new ngmodule architecture starting components dependencies dependencies managed modulelevel already works like supports using array component allow easier transition hood already dependencies shift module", "d": "8/2016"}, {"body": "need redeclaring everything module definition lazy loading", "d": "8/2016"}, {"body": "choeller hope case huge change tons refactoring thought rc meant fairly stable", "d": "8/2016"}, {"body": "added thoughts looks like going back angular totally breaks dry hides dependencies lead better add everything module might know need guess every project add everywhere really fear might lead ugly solutions", "d": "8/2016"}, {"body": "damiandennis well currently case controversy going around fact want express concerns", "d": "8/2016"}, {"body": "hot module reloading requirement", "d": "8/2016"}, {"body": "please add plunker", "d": "8/2016"}, {"body": "appears work correctly working plunker look appdataservicets file see following method typescript makeputrequest observable using developer tools browser choice look network requests see making put request", "d": "8/2016"}, {"body": "nt nothing unless subscribed", "d": "8/2016"}, {"body": "appears work correctly working plunker thanks markpritchett", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "would least require minimal plunker reproduce even ca nt reproduced directly plunker shows code use get behavior guess github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "meet problem reloading page resolve issue steps means page found use way listening url hash changes different version angular hash change listening directive different solutions boot file import bootstrap angularplatformbrowserdynamic import provide angularcore import platformlocation location locationstrategy hashlocationstrategy pathlocationstrategy appbasehref angularcommon import maincomponent mainappcomponent import approuterproviders routers bootstrap maincomponent approuterproviders provide locationstrategy useclass hashlocationstrategy router import platformlocation location locationstrategy hashlocationstrategy pathlocationstrategy appbasehref angularcommon const routes routerconfig export const approuterproviders providerouter routes html hope helpful", "d": "8/2016"}, {"body": "dashng thanks much \u7801\u96f7\u950b already try modify boot file like still work html router file nt known import platformlocation location common use", "d": "8/2016"}, {"body": "zoechi thanks help firstly search stackoverflow also find offer link tried many method work think angular problem want show geek soon possible thought github", "d": "8/2016"}, {"body": "wfsovereign works well actually need modify boot ts file please ignore router", "d": "8/2016"}, {"body": "dashng tried weep failed shed tear often encounter weird problem brief add code boot file still joke", "d": "8/2016"}, {"body": "sounds like support question got resolved", "d": "8/2016"}, {"body": "found create empty formcontrol linked controllvalueaccessor modified sample", "d": "8/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "jondejong directive meant registering individual form controls design standalone want register form control larger group want directive directive also worth noting nt need templatedriven directives looks like trying instantiate controls adheres reactive forms paradigm example plunker", "d": "8/2016"}, {"body": "thanks response kara appreciate taking time respond appears possibly nt understand api especially generating plunker thank unfortunately understanding trying incorrect probably oversimplified sake generating plunker essentially large form fields need custom validators trying find way add custom validators without needing redefine entire form model translate typescript object hand service appears however current api way add custom validator via model driven forms thanks", "d": "8/2016"}, {"body": "problem actually add custom validators templatedriven forms well need switch modeldriven nt want another step something looking improve good example works check required validator directive works want create directive validator ensure provides custom validator created ngvalidator way ngmodel able pick", "d": "8/2016"}, {"body": "makes sense thanks help", "d": "8/2016"}, {"body": "think related workaround write custom decorator like function inheritpropmetadata return target function gt const targetprops reflectgetmetadata propmetadata target const parenttarget objectgetprototypeof targetprototype constructor const parentprops reflectgetmetadata propmetadata parenttarget see plunkr", "d": "8/2016"}, {"body": "exactly looking thank smile guess part source surprise decorator base class get inherited subclass decorator inheritance nt happening would nt expected work decorator base class andthus template anything fact base even works get populated element reference super template counterintuitive make sense gets superseded subclass read discussion though also got caught guard first implementer component wrote nt second implementer component nt implementer breaking abstract already working first implementer component took moment even realize implementer breaking discussion mostly inheriting decorator classlevel decorators would nt push could see big headache also ambivalent decorators would say decorators use cases inheritance possibly least strategy perspective relatively straightforward merge smush together anything name lowest subclass wins sure even considering whole bunch complicated edge cases though least glad thread around people google simplebehaviorforsimplecases alexzuza provided need sure close ticket definitely change feature request least", "d": "8/2016"}, {"body": "sounds like support question trying accomplish absolutely possible would nt vote bug need reproduce plnkr otherwise ask gitter chatroom", "d": "8/2016"}, {"body": "created plnkr simple scenario passing data two components working already tried detect changes zone", "d": "8/2016"}, {"body": "guess using productpicker well injected service well directive productpicker injecting instance productpicker component template therefore see alerts nt see list could example pass app component via input get reference productpicker instance contentchild probably solutions problem well definitely bug", "d": "8/2016"}, {"body": "dup fixed", "d": "8/2016"}, {"body": "yep fixed day ago via thnx ericmartinezr", "d": "8/2016"}, {"body": "tinkering seems though inmemorybackendservice works collections post something get back data posted response case need post user credentials mocked endpoint get back json object resembles servers response auth token property along values", "d": "8/2016"}, {"body": "pass variables components accept via typescript component selector parent template directives child class parentcomponent public instance parentcomponent public anyvalue hello world", "d": "8/2016"}, {"body": "thank sod solution requires changing view work use property binding syntax silly may sound problem us dozens dozens apps thousands views need make work need parent component injected child automagically need something like thanks though suggestion appreciate", "d": "8/2016"}, {"body": "di try inject parent component directly child component like see stack overflow answer plnkr", "d": "8/2016"}, {"body": "thanks clementvidal problem solution requires child know type parent work please see second paragraph request basically child parent component nt know types thank though suggestion appreciate feedback", "d": "8/2016"}, {"body": "nt know type parent component use nt parent components implement generic interface use type", "d": "8/2016"}, {"body": "thanks case least mentioned post need reference parent use source data binding child component dynamically generates template presumably parent would reference parent component said although applicable yet totally see scenarios whereby runtime generic child component needs invoke members parent yet child generic component used many different types components member nt known child ahead time instead parent uses child component may use differently example template template way child invoke either function reference parent know thinking right thinking problem easily solved output binding right thinking template template say opinionated related feature request thread problem though event binding syntax personal opinion propertyevent binding syntax simply unnecessary completely unneeded noise introduced web component markup good reason think one area completely superior opinion least least require polluting web component markup specific propertyevent binding syntax simply get information needs component metadata need hints mark tell whether attribute maps bindable property example parent template need use property binding syntax child web component markup necessary child web component class already telling somebindableprop bindable input property call crazy", "d": "8/2016"}, {"body": "resolve issue please modify base href tag indexhtml base href", "d": "8/2016"}, {"body": "additional note outputs works", "d": "8/2016"}, {"body": "support new router fixed master go next release working plunker", "d": "8/2016"}, {"body": "please provide plunker reproduce think bug expect github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "thank answer work", "d": "8/2016"}, {"body": "finally always error think know come initialize form company entity initialize form fields required one field empty string like error disappear variable defined populated try reproduce problem plunker edit plunker ca nt reproduce problem also noticed removed input url longer error", "d": "8/2016"}, {"body": "resolve problem fact divided form components gave form builder created parent component going everything parent component works possible use parent form builder child", "d": "8/2016"}, {"body": "uirouter project hybrid uirouter apps uirouter hosts application uirouter services exposed providers", "d": "8/2016"}, {"body": "ericabc yikes good catch able fix check less restrictive include arrays", "d": "8/2016"}, {"body": "slubowsky cancel navigation use candeactivate preventdefault correct approach case want build dynamic routes create routes dynamically component use navigate also supports variable binding ie use", "d": "8/2016"}, {"body": "sirajc candeactivate cancel navigation current component attempting want dynamically control navigation next component using canactivate guard might work redirect inside pretty sure would mess history also think many developers might expect preventdefault work suggestion supported perhaps feature request bug report using routernavigate component also works fine code approach working well user specifically asking default browser behavior allows users right click link choose open new window need routerlink good make case parent component default child open new window case within instance want better go subcomponent choose default final suggestion routerlink supporting variable binding sounds interesting reason thought routerlinks evaluated take look see work link examples", "d": "8/2016"}, {"body": "changing variable bound router link works well using approach sure assumed router link would nt update binding changed leaving issue open anyway since still think calling eventpreventdefault prevent navigation edit assumption due numerous router bugs caused wrong values bound since fixed", "d": "8/2016"}, {"body": "router link directive click handler add click handler two click handlers play since impose order event handlers possible use preventdefault cancel navigation handler could provide separate property eg shouldnavigate router link would use purpose sure common use case nt know worth instead handle navigation imperatively without router link directive also implement directive similar routerlink lines code support use case closing issue", "d": "8/2016"}, {"body": "exactly case", "d": "8/2016"}, {"body": "actually wanted postpone redirection wait animation finish", "d": "8/2016"}, {"body": "slubowsky sure correct like", "d": "8/2016"}, {"body": "fixes latest router url likely correct alleviating problem cases binding value routerlink resulted wrong value led path first place interestingly updating latest problem anchors routerlinks actually tabs first navigation occurs app reloads issue course hopefully easily solved wonder changed rc", "d": "8/2016"}, {"body": "amariniello plunker minimal reproduction help investigating", "d": "8/2016"}, {"body": "remember use browser navigation reproduce bug see alert called twice location change", "d": "8/2016"}, {"body": "already fixed master go next release", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "would welcome addition nt see point field interface fault conditions reported error notifications", "d": "8/2016"}, {"body": "tsvetomir field meant cover event types related progress", "d": "8/2016"}, {"body": "fixed using custom see example github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "8/2016"}, {"body": "zoechi ca nt see issue relates", "d": "8/2016"}, {"body": "issue facing able use ngmodel inside ngfor", "d": "8/2016"}, {"body": "snolflake iterating items editing primitive values ca nt keep track identity value changes editing becomes different identity either use custom tracks index use objects instead primitive values", "d": "8/2016"}, {"body": "thanks clarification zoechi reading documentation seems something made improve change detection performance record one make trackby index import component oninit angularcore component selector myapp template export class app implements oninit values number constructor indextracker index number value return index", "d": "8/2016"}, {"body": "problem could related cors angular http fact postman works api strip cors security check configure server handle cors good go", "d": "8/2016"}, {"body": "install add require webanimationsjs polyfillsjs transition works right safari firefox chrome opera update quickstart animation chapter hint use webanimationsjs polyfills", "d": "8/2016"}, {"body": "animation dev guide already mentions browsers polyfill required grab webanimationsminjs add page want suggest add quickstart file issue", "d": "8/2016"}, {"body": "instead using pics make iterable applicable pics please note question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2016"}, {"body": "hi vicb thank much reply nt answer question wanted know anything planed feature like tag way think participating development clearly need seems important able create loops possible condition different lt arraylength restrictive", "d": "8/2016"}, {"body": "instead using pics make iterable applicable pics answer expect yn answer easy enough return appropriate stuff component", "d": "8/2016"}, {"body": "issue fixed master", "d": "8/2016"}, {"body": "yeah using", "d": "8/2016"}, {"body": "bundling sample code reproduction would help", "d": "8/2016"}, {"body": "please provide repro", "d": "8/2016"}, {"body": "closing issue issue still present please reopen repro", "d": "8/2016"}, {"body": "yes starter plunkr fork", "d": "8/2016"}, {"body": "use one", "d": "8/2016"}, {"body": "version using plunkr", "d": "8/2016"}, {"body": "head", "d": "8/2016"}, {"body": "hmm try trigger error maybe version", "d": "8/2016"}, {"body": "likely", "d": "8/2016"}, {"body": "sure animations ease function defined ts import component input trigger state style transition animate angularcore export var animheight trigger animheight state true style height opacity state false style height opacity overflow hidden display none transition gt animate linear", "d": "8/2016"}, {"body": "funny thing works one page nt let check better nest animations", "d": "8/2016"}, {"body": "ok found something seems work one named animheight using error pops however nt see would break", "d": "8/2016"}, {"body": "nailed background one idk put breaks horrendous way try make happen plunkr", "d": "8/2016"}, {"body": "tough nt defined background false state default one error happened click however defining animation false state breaks moment open page", "d": "8/2016"}, {"body": "go working example however nt use style property may different issue", "d": "8/2016"}, {"body": "derp nt even css allows shorthand defines everything else initial nt mean animation would changing fixed issue however chrome version work means polyfill fails deal case right", "d": "8/2016"}, {"body": "case needed link issue repo", "d": "8/2016"}, {"body": "brandonroberts thanks dude", "d": "8/2016"}, {"body": "vicb thanks much victor guessed something namespaces tried nt work seems namespace nt used creating dom host element investigate bit problem see plunkr", "d": "8/2016"}, {"body": "think problem located", "d": "8/2016"}, {"body": "templth resolve", "d": "8/2016"}, {"body": "makes wish could use entry route configuration module since use load module asynchronously", "d": "8/2016"}, {"body": "probably configured components submodule well add", "d": "8/2016"}, {"body": "add context issue let use current router dev guide example want break app modules app heroes crisis center one modules associated components routes currently router add components configuration module routes defined would include routes use components heroes crisis center modules modules need explicitly declare export components prevent main app module taking ownership components since automatically added main app module ideally would allow us define routes submodules would add route configuration component respective module could clear separation routes components exclusive app heroes crisis center modules case could main app module import crisis center heroes modules gather routes use components without collisions", "d": "8/2016"}, {"body": "hooray btw rather work appending accomplished existing even better", "d": "8/2016"}, {"body": "tried new version fragments query params longer persist across navigation navigate route fragments myfragment web navigator nt go fragment", "d": "8/2016"}, {"body": "issue", "d": "8/2016"}, {"body": "separate issue needs filed", "d": "8/2016"}, {"body": "doh bad", "d": "8/2016"}, {"body": "anyone interested experienced similar problems cordova plugins found issue callbacks would nt run angular zones default somehow nt know full details would case change detection run solvable making callback arrow function uses ngzone like", "d": "8/2016"}, {"body": "found using added following file thought supposed even though clue imported bootstrap ended removing file longer manually import routes bootstrap using exact method show webpack starter backclicks work fine", "d": "8/2016"}, {"body": "realize webpack starter forcing hash location strategy mess huge waste time", "d": "8/2016"}, {"body": "cc vsavkin", "d": "8/2016"}, {"body": "repro issue using latest master could repro problem using nightly build", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "hi sorry delay holiday create one soon return thanks patience", "d": "8/2016"}, {"body": "pb please create new issue plunkr", "d": "8/2016"}, {"body": "tobiloeb could provide minimal plnkr", "d": "8/2016"}, {"body": "low priority pushing final", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "exact issue release also see problem edge console errors data nt update", "d": "8/2016"}, {"body": "ie problem", "d": "8/2016"}, {"body": "work around check see browser ie put results private variable outside websocket functions set setinterval watches non null variable calls next data resets null", "d": "8/2016"}, {"body": "another work around sure ideal manual update ngzone every time get message", "d": "8/2016"}, {"body": "errors console represent check verify changes happened would nt updated view single pass model angular usually represents programming mistake nt think case two ways avoid one calling disable verification step prefer using changedetectionstrategyonpush component strategy brings restrictions say take look", "d": "8/2016"}, {"body": "would great think new css typed object model spec thanks pkozlowskiopensource", "d": "8/2016"}, {"body": "confirm using changes url well browser buttons modal user selects stay page go back component stays active url changes subsequent presses return button change url back also happens one uses", "d": "8/2016"}, {"body": "closing issue please reopen plunker", "d": "8/2016"}, {"body": "hello feature going ready practically need trigger event end end animation work moment thanks", "d": "8/2016"}, {"body": "soon bizarre ie test disconnection fixed hopefully monday time", "d": "8/2016"}, {"body": "yaaay finally", "d": "8/2016"}, {"body": "include feature", "d": "8/2016"}, {"body": "closing issue please reopen plunker reproducing problem", "d": "8/2016"}, {"body": "definitely second consider quite high priority send arbitrary string routerlink arrive parameter route component without caveats otherwise impossible reliably use route parameters kind usersupplied data severely cripples potential use cases router", "d": "8/2016"}, {"body": "still works want go route using pipes translations best suggestion comes fknop case stateful pipe use service load translations inject pipe service getobservable gives observable translation", "d": "8/2016"}, {"body": "true valid event wager amount overall frustration caused failing silently much much higher amount frustration caused ca nt used bind event angular come far debuggability much fantastic work gone making sure errors issues clear helpful would great see continued", "d": "8/2016"}, {"body": "sounds like invitation discussion opinion request nt belong see going close feel free continue discussion", "d": "8/2016"}, {"body": "samwheat next impossible diagnose going based information provided please try isolate issue reproduce plunker similar afraid ca nt debug entire projects", "d": "8/2016"}, {"body": "even look project provided run two commands required install one mouse click one keystroke time consuming debugging process packages installed way nonstandard something typical developer would use installdebugging processes unusual complex ambiguous instructions reproduce problem way unclear please show courtesy attempting resolve issue information provided available see", "d": "8/2016"}, {"body": "actually think checking github repo locally time consuming would anyone load bunch files foreigner onto local disk anyway usually several people involved one would verify triage reproduce quite community try figure actually bug missing knowledge properly allow core angular developers keep developing cool stuff instead answering support requests one would check repo order able run able debug investigate aware size community many bug reports actually support requests lot work get good reports separated bad free product want customized better fit requirements bug report makes easy possible angular team work feasible plunker contains code necessary reproduce issue great indicator report serious bug report instead support request usually gets attention often leads faster fixes decide besides bug reports highly welcome whole community benefits fixed bugs improved quality project angular team member", "d": "8/2016"}, {"body": "well point downloading files github seems way exchange files put far time consuming drama talking wrong person day long truthfully nt mean rude calling points drama exactly lets call customizations think may replied wrong issue post specific questions poised pkozlowski wish go time consuming request please also provide answers questions even look project provided run two commands required install one mouse click one keystroke time consuming debugging process packages installed way nonstandard something typical developer would use installdebugging processes unusual complex ambiguous instructions reproduce problem way unclear record one reasons posted project wanted provide development environment may required reproduce issue nt know may support request end case sorry stated question hopefully provide value next guy makes mistake note referenced similar questions posted stackoverflow time unanswered", "d": "8/2016"}, {"body": "provide factual info followed instructions started process observed reported behavior almost time spent waiting painfully slow wireless building record time actually spent typing suspect area three four minutes", "d": "8/2016"}, {"body": "note referenced similar questions posted stackoverflow time unanswered right best place asking support", "d": "8/2016"}, {"body": "page refresh works many others issue instant sounds like support query reproduce plunker happy help also takes mins type nt u type plunker help us look issue bit seriously", "d": "8/2016"}, {"body": "thank sirajc point going let go finish current project angular move attention react least wont bugging support requests anymore thanks", "d": "8/2016"}, {"body": "ran today seems like ridiculous limitation valid reason low limit", "d": "8/2016"}, {"body": "discussion brandonroberts nuances matrix queryparams fact seem bug work user route like works route", "d": "8/2016"}, {"body": "another solution form partial component forward dependency providing child directives eg typescript const controlcontainerprovider new provider controlcontainer usefactory container gt container deps formgroupdirective component viewproviders controlcontainerprovider", "d": "8/2016"}, {"body": "onlyann looks like dupe short answer child component needs implement controlvalueaccessor see comment detailed explanation", "d": "8/2016"}, {"body": "kara convinced implementing solution example gave want reusable address component would nt single value perspective another comprised several inputs input distinct validation rules would achieve", "d": "8/2016"}, {"body": "certainly possible use formgroup instead formcontrol quick example", "d": "8/2016"}, {"body": "thanks plunker kara read address transparent form validation error flow parent using app corresponds discrete control fine datepicker toggle subform nt work quite well case extending scope would simply allow address component add dynamically injected root", "d": "8/2016"}, {"body": "adding validation similar process value accessors implement validator interface validate function provide ngvalidator custom form control example regarding extending controlcontainer scope many internal conversations end day nt want make boundaries quite lenient explicitly passing controlcontainer implementing controlvalueaccessor optin otherwise might get components registering random unrelated parent forms think maybe thirdparty component internal checkbox something want add syntactic sugar make process easier stay tuned", "d": "8/2016"}, {"body": "right thanks help", "d": "8/2016"}, {"body": "kara address inside formarray nt formcontrolname shipping billing etc component endless supply addresses ca nt name one array objects use instead formcontrolname template connect address parent form specifically line wondering", "d": "8/2016"}, {"body": "want set formcontrolname current index see", "d": "8/2016"}, {"body": "great examples kara helpful scenario requires validation one case another flexibility defining entire structure parent level shines suppose could write address validator validates address internally composes individual field validators like", "d": "8/2016"}, {"body": "sounds like support request closing nt belong see hopefully cvwilliams hint get going", "d": "8/2016"}, {"body": "fixed merged pr", "d": "8/2016"}, {"body": "experiencing safari browser use solution manually trigger change detection", "d": "8/2016"}, {"body": "sunshineo using earlier issue fixed", "d": "8/2016"}, {"body": "qdouble using fixed safari", "d": "8/2016"}, {"body": "different ticket opened still looked maybe missed ca nt find way force route reload parameters changing seems related ticket", "d": "8/2016"}, {"body": "created new issue opinion closely related fix bad workaround opinion appears design flaw new router decided updating since blocking issue us", "d": "8/2016"}, {"body": "poke comment victor component reuse status", "d": "8/2016"}, {"body": "ospaarmann want use method access controls rather trying use array directly", "d": "8/2016"}, {"body": "thanks issue something planning add closed", "d": "8/2016"}, {"body": "normal use regex html attribute pattern works use alway invalid", "d": "8/2016"}, {"body": "istiti already answered", "d": "8/2016"}, {"body": "docs added via", "d": "8/2016"}, {"body": "per juliemr still needed ensure async operations triggered missing docs", "d": "8/2016"}, {"body": "uh reduce noise change basically huh edit robertmesserlerobertmesserle unassigned heck nt impression privilege nt know apologize please help undo", "d": "8/2016"}, {"body": "ran issue gather precompiled pages end appcomponent instance componentfactoryresolver makes sense since precompile attribute lives unfortunately router provided bootstrap function uses global componentfactoryresolver instead application one therefore reference precompiled pages found workaround yet although assume sort injector hack make work solution recommend moving responsibility precompiling page components appcomponent routerconfig honestly sure automatic seems like component passed directly route get precompiled extra config necessary", "d": "8/2016"}, {"body": "message clear enough reports toplevel component reports value ie name today spent hours trying find changing property way could reproduce local machine inconsistent behavior build different pc chrome caused ngclassvalid internal component rendered select options ngfor users listener initialization way avoid denial solution bet everyone end using way makes every performance argument invalid tragetaschen explained well also mention amount breaking changes already outside acceptable range", "d": "8/2016"}, {"body": "juliemr prevents still queue error nevertheless observable executed nt seem work observabledelay ts able work observabledelay fakeasync gt let actuallydonefalse let source observableof true delay sourcesubscribe val gt actuallydone true err gt fail err tick expect actuallydone tobetruthy expected false truthy currently running situation asynchroneous tests nt complete even adding multiple", "d": "8/2016"}, {"body": "plans far understand currently way test components use setinterval somewhere hood seems like really serious limitation getting something", "d": "8/2016"}, {"body": "funny thing start karma debug window put breakpoint tickcall test works flushed seem weird things going using zone angular commit", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "agalazis probably nt directly address use case since still statically setting styles via decorator best workaround found dynamic css variables use ngstyle directive bound component property", "d": "8/2016"}, {"body": "thought elegant go path could write inline css variables set style properties dom elements js anw hopefully get css variable shims soon would also solve main part usecase xd", "d": "8/2016"}, {"body": "hi please see code receive error httpdelete method work without headers thank", "d": "8/2016"}, {"body": "create new issue", "d": "8/2016"}, {"body": "create new issue need issue duplicate", "d": "8/2016"}, {"body": "ok thank", "d": "8/2016"}, {"body": "dig edge handles bidi control characters intl locale apis imo fits spirit api said crossenvironment consistency angular probably stripped results cook pr tackle cc bterlson take", "d": "8/2016"}, {"body": "nt seem bug based documentation states mostly correctly javascript components specified respected ordering punctuations details formatting dependent locale pedantically even components specify must supported internationalization apis eg imagine constrained hardware device maybe date formats available regardless never good idea sensitive exact byteforbyte contents strings returned intl apis guarantee across runtimes platforms even daytoday underlying locale data gets updated chakra bug like give feedback", "d": "8/2016"}, {"body": "works using get latest changes", "d": "8/2016"}, {"body": "sure anyone reads closed issue let try seems stops working app structure similar html wrappercomponent like html wrappercomponent field correctly set framework field formfieldcomponent never set sample plunker", "d": "8/2016"}, {"body": "raise bug", "d": "8/2016"}, {"body": "causing big problems way get around bug edit managed find workaround", "d": "8/2016"}, {"body": "bug serious effects well let say form two controlform groups contain radio group markup might something like using deprecated forms syntax issue new syntax html js like javascript let theform new controlgroup let foodgroup new controlgroup foodgroupaddcontrol tomato new control foodgroupaddcontrol bacon new control let drinkgroup new controlgroup drinkgroupaddcontrol vodka new control drinkgroup addcontrol beer new control theformaddcontrol drinkgroup theformaddcontrol foodgroup let say click first vodka bacon line cited vagarenko function radiocontrolregistryissamegroup function returning true every radio button form root value form control group radio button control group thought maybe second part conditional amp amp might determining radio group every time stepped code controlpair name accessorname always undefined even name key either controlpair accessor case seem always radio button controls control groups even values defined nt think would obviate bug report fact think might create opposite problem radio buttons ever determined group except button actually clicked also incorrect ultimate effects least radiocontrolvalueaccessorfireuncheck fired every radio button form except one clicked corrupts data within form controlgroup structure setting checked values false also marks every radio control group every radio button control pristine false also incorrect problematic specific example click vodka bacon form value reports bacon checked vodka agree op condition seems like brief testing fix work case described nt know would break something else intention line really honestly even sure using formbuilder correctly fortunately case observing op observed behavior bogus unchecking checking reflected dom well workaround rely dom comes forms multiple radio groups obviously nt ideal", "d": "8/2016"}, {"body": "thanks bringing definitely common use case like support let clarify thought thinking best practice retrieving object server always transform match structure form anticorruption layer keeps safe changes object receive words write function would take objecta suited server objectb suited client pass object correct structure updatevalue updatevalue accepts collection control names keys sets value form require control names valid possible provide checks case pass object incorrect nesting try update value control registered form especially concern templatedriven forms hand choose ignore unrecognized inputs types checks nt possible form fail silently something actually goes wrong said understandable developer ergonomics might want skip extra step pass response object directly form developer whether heshe wants optimize convenience safety mind splitting updatevalue two functions pr coming soon setvalue works much like updatevalue value passed must exactly match structure form throw error receives superset subset form recommend using cases since fail silently patchvalue forgiving function best match controls based list passed throw unrecognized control names supersets subsets work use want include extra properties like createdby updatevalue deprecated note happening updatevalue existed formgroupformarray updatevalue never released", "d": "8/2016"}, {"body": "issue current fix woud add empty option first options list select tag", "d": "8/2016"}, {"body": "gnujeremie unfortunately option always viable case nt want permit user selection empty value actually chosen one first place", "d": "8/2016"}, {"body": "patrickracicot let hope fixed", "d": "8/2016"}, {"body": "got resolved", "d": "8/2016"}, {"body": "resolved", "d": "8/2016"}, {"body": "fixed pr", "d": "8/2016"}, {"body": "services application bootstraped cant use services", "d": "8/2016"}, {"body": "closing issue please reopen repro", "d": "8/2016"}, {"body": "closing nt reproduce scenario", "d": "8/2016"}, {"body": "hi brandonroberts example working plnkr github repo compatible router", "d": "8/2016"}, {"body": "example gist using custom loader", "d": "8/2016"}, {"body": "hi want call onsubmit function user press enter form field without tag", "d": "8/2016"}, {"body": "hi sinedsem think open question stack overflow posting code", "d": "8/2016"}, {"body": "sorry unable produce plunker demonstrate problem work would help project working large include example would post minimal plunker people could modify demonstrate usage otherwise producing prose arguing bug reality nt know till got reproduce scenario also part complexity reproducing small example plunker use spinner page occurs data fetched whole reason spinner first place try mock small working meaningful example sure many ways simulate data fetching ex using settimout case actionable till got minimal reproduce scenario plunker", "d": "8/2016"}, {"body": "closing nt live reproduce scenario", "d": "8/2016"}, {"body": "thought would practical let ngmodule define two sets styles one set used internally set used externally maybe contain styles identical made api question importing module see styles automatically explicitly declare wants import maybe could conflict styles would able declare", "d": "8/2016"}, {"body": "noticed trying deploy aws", "d": "8/2016"}, {"body": "issue systemjs config bundles action item end fix quick start instructions removing leading slash value property suggested ward please take look thanks", "d": "8/2016"}, {"body": "issue still present updated plunker", "d": "8/2016"}, {"body": "matsko could please look issue recently fixed issue ngfor prematurely killing dom elements regarding animations hopefully something might come mind know someone ping assistance thanks great work", "d": "8/2016"}, {"body": "found workaround touchevents actually continue fire dom removal targeted nodeelement original occurred nt bubble unlike mouseevents confusing cant perform simple expect work dom removal event listener attached outer component element dynamically add event listeners target element touchstart event occur perform cleanup solution typescript hostlistener touchstart event hostlistener mousedown event onstart event eventtouches touch thisremoveprevioustouchlisteners avoid mem leaks thistouchmovelistenfunc thisrendererlisten eventtarget touchmove e gt thisonmove e thistouchendlistenfunc thisrendererlisten eventtarget touchend e gt thisremoveprevioustouchlisteners thisonend e thistouchcancellistenfunc thisrendererlisten eventtarget touchcancel e gt thisremoveprevioustouchlisteners thisonend e removeprevioustouchlisteners thistouchmovelistenfunc null thistouchmovelistenfunc remove previous listener thistouchendlistenfunc null thistouchendlistenfunc remove previous listener thistouchcancellistenfunc null thistouchcancellistenfunc remove previous listener hostlistener mousemove event hostlistener touchmove event nt declare added dynamically onmove event stuff event hostlistener mouseup event hostlistener touchend event nt use added dynamically hostlistener touchcancel event nt use added dynamically onend event stuff ngondestroy thisremoveprevioustouchlisteners nt forget inject constructor import source", "d": "8/2016"}, {"body": "workaroundhack available issue could potentially also viewed feature request instead bug leave angular team decide please see", "d": "8/2016"}, {"body": "hi matsko bug approach using nested router animation father page router child router change state animation declared child pages get animation running father page", "d": "8/2016"}, {"body": "hey maduser chance put together demo investigate starter plnkr get started", "d": "8/2016"}, {"body": "created example based andrui plunker issue learned two new things animation demo nt work animation glitch talking happens first time guess happens inner router set first update learned another valuable thing child routes setting default child route look much better thanks", "d": "8/2016"}, {"body": "hi matsko playing around works great trying animate page transitions initial load maybe solution place already", "d": "8/2016"}, {"body": "flauc think think starting animation happens way transitions declared states first created destroyed animation js trigger routeanimation transition gt void animate define animation leaving destroying initial load page transitions perform operation creating replacing page component animation happen always really need avoid animation first load think wait query supported router stated comment thread", "d": "8/2016"}, {"body": "flauc yes thought misko idea mind api needs little bit work trying something place next release", "d": "8/2016"}, {"body": "great hear thank", "d": "8/2016"}, {"body": "bennadel nt see using routerlinkactive plunker could provide plunker using latest nightly build angular router", "d": "8/2016"}, {"body": "vsavkin sorry nt know happened deleted comments reason must posted wrong plunker", "d": "8/2016"}, {"body": "closing issue issue still present router please reopen plunker reproducing", "d": "8/2016"}, {"body": "oh sorry saw busy next week", "d": "8/2016"}, {"body": "make guessing wanted check", "d": "8/2016"}, {"body": "fixed days ago last release month ago", "d": "8/2016"}, {"body": "make configurable component reinitialized parameterized routes well better pattern employed avoid situation", "d": "8/2016"}, {"body": "done via", "d": "8/2016"}, {"body": "using appinitializer along provide function call service services loaded app however nt understand use appinitializer token call new object provide docs available", "d": "8/2016"}, {"body": "found solution", "d": "8/2016"}, {"body": "new router supports query params assume could used type remember reset parameter fetching worked new router came made workaround admin perspective list users change view display details selected user since every list element contains userid login perspective profile component request authid use fetches userdetails db displays details downside workaround cant navigate details url would always enter employees component", "d": "8/2016"}, {"body": "also data property route set want completelly hidden user url", "d": "8/2016"}, {"body": "based chromium issue chrome garbage collects worker certain cases workaround add worker object property", "d": "8/2016"}, {"body": "bug basically typo long take typo fixed hand prefer take time write proper tests bugs get introduced easily", "d": "8/2016"}, {"body": "sunshineo made pull request july agree starting little long merge", "d": "8/2016"}, {"body": "fixed master remove code example sure", "d": "8/2016"}, {"body": "looking", "d": "8/2016"}, {"body": "name misleading especially countless developers introduced typescript process building first angular application using typescript almost years mislead disappointed least gives intuition still inaccurate getting rid good move renaming step wrong direction many better names recommend alternatives include sure think others using abhorrent", "d": "8/2016"}, {"body": "tbosch would possible forward paremeters constructor know elements want initialize component runtime html fetched via ajax probably call something like html dom use selector parameter constructor described see right boostrapmodule allow forward parameters module constructor correct would know way work around api", "d": "8/2016"}, {"body": "always store data top level variable module tue aug tom mayer notifications githubcom wrote tbosch would possible forward paremeters constructor know elements want initialize component runtime html fetched via ajax probably call something like platformbrowserdynamic bootstrapmodule mainmodule selector someselector html dom use selector parameter constructor described see right boostrapmodule allow forward parameters module constructor correct would know way work around api receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "tbosch thanks pointers digesting answer noticed nt even need custom selector using approach described context tried instantiate multiple instances root component", "d": "8/2016"}, {"body": "kara question regarding reactive directives infer information correctly use reactive option two way binding set intial value control using controlupdatevalue receive subscribe value changes control update model nt want use formvalue okay use ngmodel input controls including formdirectives along reactformdirectives", "d": "8/2016"}, {"body": "easiest way asking ngmodel oneway binding nt need update model form need binding", "d": "8/2016"}, {"body": "probably clear understand one way binding using reactive directives want update model input changes want accomplish two way binding use ngmodel way", "d": "8/2016"}, {"body": "iirc need inputs named similar templatedriven work lot extra work imo could possibly impact performance since tracks formgroup model suggest reactive route thisformvaluechangessubscribe values gt thisyourmodel values accomplish thing", "d": "8/2016"}, {"body": "thanks update", "d": "8/2016"}, {"body": "would like way disable completely situations finding impossible inspect dom component tree whose bindings changing often", "d": "8/2016"}, {"body": "migrated", "d": "8/2016"}, {"body": "chalin fyi closing dart specific bugs weeks dart label added", "d": "8/2016"}, {"body": "noticed fyi finished migrating issues opened", "d": "8/2016"}, {"body": "getting error", "d": "8/2016"}, {"body": "sorry nt using latest getting errors using ngmodules", "d": "8/2016"}, {"body": "vicb issue related try fix", "d": "8/2016"}, {"body": "think issue important", "d": "8/2016"}, {"body": "sorry ca nt run ci scripts dev env trigger remote ci valid commits", "d": "8/2016"}, {"body": "issue longer occurring compiler still nt work windows see resolution", "d": "8/2016"}, {"body": "page reloaded navigationend triggered page reloaded", "d": "8/2016"}, {"body": "yes three navigationstart routesrecognized navigationend triggered page loads", "d": "8/2016"}, {"body": "still reload page information missing investigate though let know guess routes navigated age", "d": "8/2016"}, {"body": "side note two approaches suggested earlier nt work multiple active router outlets found cases get data primary outlet navigation event triggered ended code gives array data objects injected constructor thissub routerevents filter event gt event instanceof navigationend subscribe gt let data data let activeroutes activatedroute activatedchildren", "d": "8/2016"}, {"body": "dealing bug well using default exports causes build fail especially bad case whole lot files use default exports rewrite app able compile milestones addressing issue", "d": "8/2016"}, {"body": "need information issue want build little widget need fix tell css code written html head could try fix create pull request think somewhere within shadowcss class shimcsstext hav nt debugged yet btw one attr value missing within unit tests", "d": "8/2016"}, {"body": "please provide complete example hard time getting implemented old router making path async extremely simple also mean new class every route make async sounds crazy", "d": "8/2016"}, {"body": "never mind got working using systemjscomponentresolver like import bootstrap angularplatformbrowserdynamic import enableprodmode systemjscomponentresolver componentresolver angularcore import runtimecompiler angularcompiler import providerouter angularrouter import appcomponent appcomponent bootstrap appcomponent providerouter path component appbarcomponent barcomponent path foo component appfoocomponent foocomponent provide componentresolver usefactory r gt new systemjscomponentresolver r deps runtimecompiler", "d": "8/2016"}, {"body": "shouldnt ticket reopened experimented issue also chrome version solved inlining template super hard diagnostic error console whatsoever", "d": "8/2016"}, {"body": "experienced problem actual chrome version angular version recursive tree view working yesterday since today hanging without error message changed anything working firefox amp ie issue must related new chrome version switching templareurl inline template fixed issue strange thing", "d": "8/2016"}, {"body": "vicb think reopened since chrome updated team issue still use routerdeprecated btw switching inline works", "d": "8/2016"}, {"body": "surely issue reopened upgrade chrome latest version issue tested older versions another browsers like edge firefox works using deprecated version router switching templateurl inline works", "d": "8/2016"}, {"body": "issue last version angular getting value accessor form control unspecified name tried different options luck please take look", "d": "8/2016"}, {"body": "issue", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "nice new github feature add reaction instead posts please use instead", "d": "8/2016"}, {"body": "looks like dupe short answer need implement controlvalueaccessor see detailed explanation validation validators need toplevel form child component want part parent form validation eg", "d": "8/2016"}, {"body": "child component contains many formcontrols instance address street number zipcode city country inside contact", "d": "8/2016"}, {"body": "might want take look comment links plunker address", "d": "8/2016"}, {"body": "templatedriven example possible controlvalueaccessor", "d": "8/2016"}, {"body": "facing issue updating version zonejs version follow zonejs project zonejs", "d": "8/2016"}, {"body": "amp really version rxjs well aliasjad also type settimeout wrapped around something zones would charge xhr call etc", "d": "8/2016"}, {"body": "hey markpieszakl thanks replay using rxjs zonejs mean saying type wrapped using timers around xhr calls nt override settimeout setinterval", "d": "8/2016"}, {"body": "done via", "d": "8/2016"}, {"body": "vsavkin believe suggestion navigating guard actually misses purpose guards least one users use eg also official documentation application eg never see link leads unauthorized page never directly call routernavigate page fail authguard returns false however user enter url needs authentication browser bar want redirect login authorized paged case nt know solve without actually navigating inside guard take", "d": "8/2016"}, {"body": "upgrated still getting error angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade error uncaught promise typeerror thislocationiscurrentpathequalto function please let know solution", "d": "8/2016"}, {"body": "hello guys found something worked first solution using settimeout trick import component oninit angularcore import routerdirectives angularrouter component directives routerdirectives template export class appcomponent implements oninit activechildroute boolean constructor ngoninit consolelog appcomponent running let self thisactivechildroute true lt creates dom routeroutlet found settimeout function lt sets timeout execute function view loaded code selfactivechildroute false lt remove dom contains routeroutlet lt miliseconds timeout second solution using ngafterviewinit import component oninit angularcore import routerdirectives angularrouter component directives routerdirectives template export class appcomponent implements oninit activechildroute boolean constructor ngoninit consolelog appcomponent running thisactivechildroute true lt creates dom routeroutlet found ngafterviewinit lt runs initializing component views child views code thisactivechildroute false lt remove dom contains routeroutlet hope helps someone", "d": "8/2016"}, {"body": "creating expandable grid every expansion tabs using routes banging head hours understand get error message least know", "d": "8/2016"}, {"body": "vsavkin still issue see plunk simply wrapped example documentation falsy router fails", "d": "8/2016"}, {"body": "tried using ngrx router works would expect ah world makes sense would love see work router eventually", "d": "8/2016"}, {"body": "bennadel ngrx router find", "d": "8/2016"}, {"body": "sorry found official angular router bug still frederikaalund said", "d": "8/2016"}, {"body": "none worked switch new router still got isssue unfixed quite major issue anyone workaround please let know way exact error ngfor", "d": "8/2016"}, {"body": "case use resolve preload needed data activating route could remove sure always possible appropriate", "d": "8/2016"}, {"body": "fixed found strange bug important order ngif first frederikaalund plunker add new work needs yes yes render routeroutlet enter plunker see work get new error like complex inside get error put first work really strange", "d": "8/2016"}, {"body": "somebody uses bootstrap workaround use responsiveutility always hidden see bind css class based condition like", "d": "8/2016"}, {"body": "issue", "d": "8/2016"}, {"body": "issue closed someone reopen create new one created", "d": "8/2016"}, {"body": "issue tag working inside version updates issue", "d": "8/2016"}, {"body": "use tiboprea notifications githubcom issue tag working inside version updates issue syntax receiving subscribed thread reply email directly view github mute thread gerardo andres gutierrez rodrigueztecn\u00f3logo en sistematizaci\u00f3n de datos udfjc ingeniero en telem\u00e1tica udfjc", "d": "8/2016"}, {"body": "tag releases", "d": "8/2016"}, {"body": "awesome big thanks", "d": "8/2016"}, {"body": "hmm angularrouter still getting issue using button elements following raise error seems expecting routerlinkwithhref second arg getting routerlink something wrong thanks", "d": "8/2016"}, {"body": "mattvague problem comes reported fixed", "d": "8/2016"}, {"body": "property added activatedroute making much easier closing issue since simplified thanks", "d": "8/2016"}, {"body": "ocombe really exciting see landed", "d": "8/2016"}, {"body": "suffering issue well docs simple template test verify via protractors element explorer never gets appear cc wardbell foxandxss chalin", "d": "8/2016"}, {"body": "nt apply hybrid apps getting pure app working modified version getting error running protractor circle ci tests pass using", "d": "8/2016"}, {"body": "kara thanks reply seems fixed error need figure http provider part appservice using mock class give error try find way fix mocking angular complex something like new forcomponent new mockservice etc", "d": "8/2016"}, {"body": "hi kara facing similar issue get error console new angular updated angular please let know going wrong directive exportas set ngform oldpassword ngform ngcontrol oldpassword ngmodel passwordmodeloldpassword changepasswordcomponent directive exportas set ngform newpassword ngform ngcontrol newpassword ngmodel passwordmodelnewpassword changepasswordcomponent directive exportas set ngform html code ts file import component input angularcore import userservice userservice import passwordmodel userpasswordmodel import formdirectives formbuilder validators angularforms import router routerdirectives activatedroute angularrouter import component templateurl appusersuserchangepassworduserchangepasswordhtml providers export class changepasswordcomponent isnotmatch boolean issame boolean help would much appreciated thanks advance", "d": "8/2016"}, {"body": "asrapromact fix code following component insert formbuilder constructor set public variable class call oninit build form done component template form tag needs referencing variable form onsubmit handler component class inputs need whatever named inputs formbuilder setup step strip ngform items want reference input use without setting anything nt need reference controls github happens poor venue type material nt bug angular library better asked stackoverflow gitter", "d": "8/2016"}, {"body": "illustrated plunkr console error message directive exportas set ngmodel error lname ngmodel", "d": "8/2016"}, {"body": "pstephenwille need provide new forms api plunker using old one see maints", "d": "8/2016"}, {"body": "going lock thread become semigiant nt bug find something think might real bug please open new issue support questions go gitter stackoverflow etc", "d": "8/2016"}, {"body": "workaround issue fixed tried loading script delete rxjs entries systemjs file still systemjs tries download individual rxjs operator files impacting initial load performance", "d": "8/2016"}, {"body": "use individual operators import deep import reduce requests depending upon heavily use rxjs bundle like import", "d": "8/2016"}, {"body": "hi expect fix", "d": "8/2016"}, {"body": "robinkedia milestone related upcoming release", "d": "8/2016"}, {"body": "nt think worth use umd bundle anyway seems rxjs folks broken components smaller pieces need explicitly reference want use reduced amount files downloaded lot previous versions company switched different approach copy js files npm folder vendor folder using gulp task moduleexportsdep function gulp plugins return function return pluginsdel dest map using systemjsconfig first nt like solution later proved acceptable", "d": "8/2016"}, {"body": "nt think worth use umd bundle anyway seems rxjs folks broken components smaller pieces need explicitly reference want use reduced amount files downloaded lot previous versions agreed loading individual files problem development mode systemjs loader production bundle single file fast loading even get work rx umd still yet hundreds files deal onthefly typescript believe definitive answer migration webpack angularcli hope tldr rxjs umd helpful", "d": "8/2016"}, {"body": "please help provide interim solution milestone changed appreciate support thanks", "d": "8/2016"}, {"body": "workaround use rxjs systemjs bundle script tag seems work individual rxjs files loaded disadvantages approach workaround umd used", "d": "8/2016"}, {"body": "yes looks good tried rxminjs bundles directory problems", "d": "8/2016"}, {"body": "including via script tag works importing rxjs", "d": "8/2016"}, {"body": "seems problem new router rxjs used path used work", "d": "8/2016"}, {"body": "related somehow arrayobservable sure", "d": "8/2016"}, {"body": "kind problem mean removed rxjs systemjs config completely loading script tag use router problems appeared", "d": "8/2016"}, {"body": "hmm arrayobservable thanks look", "d": "8/2016"}, {"body": "bundling rxjs using systemjsbuilder mostly fixed issue still get request though really sure bundled using gulp systemjsbuilder javascript gulptask ngbundlerxjs function done systemjsconfigjs", "d": "8/2016"}, {"body": "damiandennis took approach works well temporary solution think replace utils util", "d": "8/2016"}, {"body": "karlhaas thanks reduced another requests", "d": "8/2016"}, {"body": "damiandennis thank proposed solution able bundling rxjs however could nt configure systemjs properly mean despite using bundle rxjs angular modules router etc still trying load individual rxjs libs maybe something forgetting thank", "d": "8/2016"}, {"body": "damiandennis confirm new router breaks path solution get", "d": "8/2016"}, {"body": "mlcmlapis loading via script tag get typings right use rxjs types subject lt gt observable lt gt code", "d": "8/2016"}, {"body": "web browser play role typing factor ts editor compiler suppose use static compilation dynamic right browser", "d": "8/2016"}, {"body": "matsko nt animation actually apply element let say list items scenario list individual items animations state every time add remove item would like specific item animated well good would also like able dispose whole list later time would like container animate nt want see list items animating state parent items longer act individuals animate container sorry misunderstood andor comment absolutely irrelevant", "d": "8/2016"}, {"body": "someone interested modified plunker initial post routing animation", "d": "8/2016"}, {"body": "thanks nice feature router nested router gets animations father undesirable", "d": "8/2016"}, {"body": "using version router view initializing times got issue navigating view different state params data one help", "d": "8/2016"}, {"body": "inherent issue commonjs modules one really much unfortunately yeh robwormald totally right agree improve error messages though nt give clue went wrong good news got clear error messages undefined providers provider gets undefined circular dependency case error since imports directives component level gone nt need worry case sum ca nt much circular deps error messages clarified", "d": "8/2016"}, {"body": "chance could add feature earlier version seems like would simple copy angular date filter", "d": "8/2016"}, {"body": "natcohen implementation one rather simple require design decision core team right date pipe every formatting pipes jumping around intlapi piece covered intlapi probably requiring design decision find covered intl separate implementation question asked several times right approach core team use intlapi feature covered intl skip later releases absolutely reasonable decision since need time stabilize changes designing approach may lead unexpected side effects", "d": "8/2016"}, {"body": "maybe good starting point start kind momentjs pipes project", "d": "8/2016"}, {"body": "momentjs huge library enlarge even angular package pretty high coupled extract useful part possible", "d": "8/2016"}, {"body": "true moment small thing also true high percentage enterprise flavored angular applications many nonenterprise applications end including moment anyway think moment date pipe would popular addon", "d": "8/2016"}, {"body": "implement wrapper around moment js pipe big deal imho including thing common package framework best idea", "d": "8/2016"}, {"body": "nobody said anything including common package angular btw already somebody working kylecordes mention gain traction angular released commonly used", "d": "8/2016"}, {"body": "daschtour every pipe part common package right add dependency momentjs datepipe mean add dependency common package difficult part requirement imho adjust date timezone fairly simple difficult displaying locale specific entries like display adjusted timezone name names stored currently data handled intlapi packages locale contains entries nt anything like right intlapi also allow extract information implementing easy without storing every locale specific strings common package", "d": "8/2016"}, {"body": "agree laskoviymishka reinventing wheel adding timezone date pipe nothing already exists angular people migrating app angular angular want without implementing new solutions upgrade process already painful enough", "d": "8/2016"}, {"body": "natcohen problem point api jumping around intlapi one extremely bad specific change require design decision core team stay intlapi mimic implementation imho aproach least would control api smilingimp options stay intlapi become almost impossible implement least full scope may limitiation possible like forbid show timezone name timezone override move even would really version require significant amount work every pipe component critical still significant", "d": "8/2016"}, {"body": "done", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "sqwk mean fixed issue master", "d": "8/2016"}, {"body": "yes got two confused make", "d": "8/2016"}, {"body": "yessir thursday august sqwk notifications githubcom wrote yes ngclass got two confused make receiving assigned reply email directly view github mute thread", "d": "8/2016"}, {"body": "cool case probably close", "d": "8/2016"}, {"body": "still broken", "d": "8/2016"}, {"body": "works maybe initialization step missing something post example", "d": "8/2016"}, {"body": "sure code missing something import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule import httpproviders http angular import reflectiveinjector angularcore var injector reflectiveinjectorresolveandcreate httpproviders var http injectorget http gt resjson subscribe data gt platformbrowserdynamic bootstrapmodule appmodule", "d": "8/2016"}, {"body": "js xsrfstrategy angular var xrsfmock provide xsrfstrategy usevalue configurerequest function var injector reflectiveinjectorresolveandcreate httpproviders xrsfmock sth like", "d": "8/2016"}, {"body": "still using hack though fixed nt work without needing provide mock xsrf", "d": "8/2016"}, {"body": "systemjs loading systemimport systemjsconfigjs function return promiseall systemimport angularcoretesting systemimport angularplatformbrowserdynamictesting think call inittestenvironment needed resource injection work", "d": "8/2016"}, {"body": "thanks jsight get clarification done sure test bed comes play incorporate trying bootstrap mainjs code located program", "d": "8/2016"}, {"body": "using systemjs loading unittestshtml file systemimport calls load spec files rest code", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "hmm plunker errors rightfully using directive without parent instance directive switch one way control seems print cases closing ca nt reproduce", "d": "8/2016"}, {"body": "form table tr row formgroup tr row separate child component tr componentname selector means template child component parent tag put formgroup form information child component template contains outer template tag handling ngif statements td tags within td tag formcontrolname name parent table looks kinda like childobjects formarray containing formgroups width height child component template look kinda like get work new angularforms", "d": "8/2016"}, {"body": "create custom form control work ferry formgroup instance opinion easier implement controlvalueaccessor interface way nt actually pass anything child component custom form control treated like form control form controlvalueaccessor interface actually use build value accessors radio buttons selects etc core requires three methods takes value writes form control element model view takes function called value value changes form control element view model takes function called form control touched one leave empty nt care touched property key besides implementing interface provide ngvalueaccessors ngmodel formcontrolname inject registered part parent form see example example templatedriven parent form also worth noting individual form controls deprecated soon comes want instead closing way already", "d": "8/2016"}, {"body": "kara thanks user plunker example one question memory leaks nt unsubscribe subscription put", "d": "8/2016"}, {"body": "really important safari second popular browser include device categories would also great show test results repo front page things operational", "d": "8/2016"}, {"body": "removing api instead", "d": "8/2016"}, {"body": "changes forms api good except one ugly change still nt understand option standalone ca nt set default input element nt name adding restrictions api make userfriendly easy use", "d": "8/2016"}, {"body": "eoz kara idea could get applicationmodulewide boolean setting injected di toggle default way perhaps might possible satisfy new experienced users mean beat point everyone would switch way new users would still start complaining understanding inputs nt included form submission data yeah might make sense", "d": "8/2016"}, {"body": "better idea use string value attribute name taking code kara example would dot allowed reasons", "d": "8/2016"}, {"body": "hm kinda fence implementation considerations aside said technically ideas nt mutually exclusive suppose alternative settings could another option nt need change default able add options", "d": "8/2016"}, {"body": "intention implement custom instead extending existing one plunk demonstrating usecase", "d": "8/2016"}, {"body": "solved problem source routermodule implementing forroot static method returning module providers", "d": "8/2016"}, {"body": "hi delagen sounds tricky plunker thanks", "d": "8/2016"}, {"body": "yjaaidi wrote internal project import ngmodule needed providers tree need single instance project global used ownngmoduleforroot root ngmodule others simply import simple ownngmodule tree component wish create provider import ownngmoduleforroot something else override yes propagate tree example module ngmodule without providers providers without singleton export class ownngmodule static forroot modulewithproviders return ngmodule ownngmodule providers providers needed singleton root ngmodule use child modules use simple", "d": "8/2016"}, {"body": "one bit information ca nt find anywhere confirm able sleep night official implementation support gettextpo files right common guessing available wo nt stuck jsons xtb right mean gettext common nt even need mentioning always box implementation thinking", "d": "8/2016"}, {"body": "plan support po able convert fromto xliff sorry nights", "d": "8/2016"}, {"body": "thought behind storing strings xml format never ran issues extracting pot compiling po json angulargettext served us extremely well random question thoughts translated urls router", "d": "8/2016"}, {"body": "random question thoughts translated urls router vsavkin plans", "d": "8/2016"}, {"body": "planning provide support translated urls final ideas ways nt made decisions", "d": "8/2016"}, {"body": "gave headache looking directive exports end looking test specs code lightning struck template compiler transform localize template right basic workflow like mark elements enclose html parts comments run somehow extractor ng cli produce xliff pass translation receive back translated binary configure angular bootstrap somehow use wanted language binary file template compiler transform localize template time use custom directive mimic veryvery basics translation hits intended workflow future", "d": "8/2016"}, {"body": "concepthf right see doc linker earlier discussion run create xliff couple directives filter icu messages", "d": "8/2016"}, {"body": "vicb available upcoming", "d": "8/2016"}, {"body": "depends otherwise", "d": "8/2016"}, {"body": "version xliff supported", "d": "8/2016"}, {"body": "text message extraction html templates like angulargettext features supported angular core", "d": "8/2016"}, {"body": "xliff", "d": "8/2016"}, {"body": "messages part mean become unnecessary angular provide tools need using translation strings", "d": "8/2016"}, {"body": "need could use import", "d": "8/2016"}, {"body": "vicb good news thanks hard work guys love angular", "d": "8/2016"}, {"body": "plans support json nonexml message format", "d": "8/2016"}, {"body": "messages part mean become unnecessary angular provide tools need using translation strings goal builtin sure features covered though need translationid translate syntax see doc linked one first comment thread love angular plans support json nonexml message format create feature request evaluate according interest issue gets", "d": "8/2016"}, {"body": "large application single file xliff per language could affect load times way break language file smaller files yes manged using ngmodules xliff per ngmodule", "d": "8/2016"}, {"body": "single file xliff per language could affect load times aot compiled mode translation file loaded template compiled target lang would true jit runtime compilation please also create feature request need feature thanks", "d": "8/2016"}, {"body": "merged", "d": "8/2016"}, {"body": "nt know still case closing", "d": "8/2016"}, {"body": "error used marpstar workaround", "d": "8/2016"}, {"body": "vladimirivanoviliev note typo first class reported probably", "d": "8/2016"}, {"body": "try", "d": "8/2016"}, {"body": "already figured current behavior expected days reporting issue apologize getting back earlier refactoring code came version works similar following code notice panelgroup component entirely removed export class panelbarcomponent implements afterviewchecked onchanges contentchildren panelbaritemcomponent descendants true private contentitems querylist component selector panelbaritem template export class panelbaritemcomponent implements aftercontentchecked afterviewchecked contentchildren panelbaritemcomponent private contentitems querylist reason previous code working component actually unnecessary initialized inside component template child items initialized", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "migrated", "d": "8/2016"}, {"body": "fxck looks like passing method object instances values actually expects initial values arrays containing value validators instantiating instance see example new form api", "d": "8/2016"}, {"body": "migrated", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "hi wan na write validator know nt know help explain please", "d": "8/2016"}, {"body": "anybody tell configure nginx order able use path location strategy thank", "d": "8/2016"}, {"body": "configure nginx return indexhtml page resource requests exist server valid project root directory subdirectories", "d": "8/2016"}, {"body": "mlcmlapis thank good answer understanding actually found looking quite special maybe someone wants know use staticfilebuildpack cloud foundry maybe heroku option pushstate enabled work able use path location strategy angular", "d": "8/2016"}, {"body": "zsfarkas ah yes relation docs component router uses browser historypushstate navigation thanks pushstate make inapp url paths look way want look eg inapp urls indistinguishable server urls modern html browsers first support pushstate many people refer urls html style urls", "d": "8/2016"}, {"body": "wanted check currently blocking prototyping migration anxious see progress", "d": "8/2016"}, {"body": "need offline compilation webpack bundle getting large almost polyfills stuff compiler stuff actually app code offline compilation would dramatically shrink bundle size make app load way faster", "d": "8/2016"}, {"body": "important note possible webpack ing result aot compiler goal issue provide direct webpack experience without extra files source etc right webpack experience", "d": "8/2016"}, {"body": "actually discussion elsewhere affect precompilation overall deployed code size summary small application much smaller precompilation faster start medium application size precompilation faster start large application much larger precompilation compiler output larger template source enough templates swamps size jit compiler download precompilation still yield faster startup though use lazy loading avoiding loading code", "d": "8/2016"}, {"body": "could link comment kylecordes reference also implying webpack direct integration help mitigate", "d": "8/2016"}, {"body": "thelarkinn discussed", "d": "8/2016"}, {"body": "ca nt get work notes defects sounds like fixes working anyone know magic combination protractor config settings get hybrid app work", "d": "8/2016"}, {"body": "obsolete routemetadata part newnew router", "d": "8/2016"}, {"body": "word tried strictnullchecks typescript get error error default c testnodemodules property extends type type undefined assignable string index type function type", "d": "8/2016"}, {"body": "adding unit test checking whether whole project builds typescript strictnullchecks enabled would helpful", "d": "8/2016"}, {"body": "problem", "d": "8/2016"}, {"body": "hit using go back two routes", "d": "8/2016"}, {"body": "issue resolved press back goes previous state press back twice goes circle two pages", "d": "8/2016"}, {"body": "facing problem find solution", "d": "8/2016"}, {"body": "hey problem cross check files named correctly including extension", "d": "8/2016"}, {"body": "named correctly proper extensions file locations also correct", "d": "8/2016"}, {"body": "hi manvendrask figured problem least case problem tsconfigjson different location compared typings folder amp typingsjson thanks getting back", "d": "8/2016"}, {"body": "hi solve problem whit urlsearchparams let headers new headers contenttype applicationxwwwformurlencoded accept let options new requestoptions headers headers let body new urlsearchparams bodyset message jsonstringify mdatarequest bodyset webservice authservice return thishttp post thisurl bodytostring options topromise thisextractdata catch thishandleerror work", "d": "8/2016"}, {"body": "thank helped", "d": "8/2016"}, {"body": "think caught pr queue issues challenging community help appreciated", "d": "8/2016"}, {"body": "mlaval marc think already fixed could closed right", "d": "8/2016"}, {"body": "seems quite stable browserstack preview version edge default given nt able run consistant campaigns sl bs stable version think current setup good", "d": "8/2016"}, {"body": "issue longer occurring compiler still nt work windows see resolution", "d": "8/2016"}, {"body": "tbosch prefix supposed land currently implementing componentlibrary could really benefit adding dozens dumb directives make selector queryable also destroys tslint statistics wrong selectors directives would cool know planned land near future thanks advance", "d": "8/2016"}, {"body": "unsure read issue correctly currently way insert component another component ie nested programmatically viewcontainerrefcreatecomponent adds new component instance sibling strange behavior sure intended", "d": "8/2016"}, {"body": "patrickmichalina done bunch reading issue believe behavior viewcontainerrefcreatecomponent expected furthermore thought found way create component child using componentresolver getting componentfactory calling create factory however seem work expected see issue", "d": "8/2016"}, {"body": "wanted provide update example repo beta lucidchart editor working advanced optimizations ran short test using version simple optimizations version using advanced optimizations going today tomorrow version angular used example repo upgraded head tuesday aug example repo accompanying docker container updated case anyone wants try link example repo bundle sizes final bundle size example project using advanced compilation listed note example repo includes code going js ts using clutz ts js using tsickle bit bigger simple hello world app notes getting work notes took get advanced optimizations workingin case forgot something going provide links forks commits example repo externs files zone reflect jasmine included build process function calls renamed work around closure compiler bug static methods get lost really hacky sed command run built angular js files replacing lines include static keyword line preceded nocollapse link closure bug angular biggest change made angular making use tsickle annotated output compilation thought last time bug annotated output thrown away places angular refers functions strings functions referred places using dot notation accordingly references renamed others change angular use dot notation everywhere functions always renamed also updated angulartsickle annotate dts files made angular play nicely works uncompiled mode change places apply used constructor use new keyword tsickle fixed bug tsickle cli always include source files annotation list filenames typescript program used instead using different list filenames links forks projects make work angular tsickle rxjs symbolobservable clutz", "d": "8/2016"}, {"body": "nareshbhatia keep mind embedded component use host style rule style container used use trickery style thing component getting rendered figured one", "d": "8/2016"}, {"body": "problem", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "zhysh see", "d": "8/2016"}, {"body": "solved problem", "d": "8/2016"}, {"body": "migrated", "d": "8/2016"}, {"body": "hirtiemaxim stumbled across issue looking way dynamically pass data one component another via routing look could figure may help especially unclear pass data without showing url possible adding data routing configuration seems static solve issue overlook something resolves", "d": "8/2016"}, {"body": "sventorben want pass data routes without showing url use service instead route data route data static exception resolves get merged route data completion", "d": "8/2016"}, {"body": "brandonroberts thanks clarification though hoping different answer parahrize analogy feels someone took http protocol stripped post put delete left get wondering thing default resolve implicitly available every route would allow pass data triggering navigation data could get automatically merged route data completion", "d": "8/2016"}, {"body": "wrapping jasmine using barebones one thus able use capabilities jasmine", "d": "8/2016"}, {"body": "sce worst feature angular nothing since everyone passing shit", "d": "8/2016"}, {"body": "dborisenkowork sorry hear trouble something specific trying nt work could maybe file issue", "d": "8/2016"}, {"body": "mprobst well sorry rude said every developer know passing values think sce another boilerplate know values safe imo sce disabled default still available since pretty strong sometimes useful tool", "d": "8/2016"}, {"body": "dborisenkowork experience assumption know values safe simply true typical projects might case really small projects one two developers lot code project shortlived projects complex tends become difficult reason whether value arrives somewhere else program really safe given context especially code base grows longer periods time xss vulnerabilities pretty much guaranteed bydefaultsafe templating security type contracts tools allow structure software reason absence xss vulnerabilities reasonable degree confidence references linked really nt want use sce implement install nothing sce", "d": "8/2016"}, {"body": "dborisenkowork propose instead", "d": "8/2016"}, {"body": "record passing values ie binding value sanitizer sanitize expected cases work eg binding innerhtml", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "typo angularcomplier instead angularcompiler angularplatformbrowserdynamics instead angularplatformbrowserdynamic", "d": "8/2016"}, {"body": "field already fixed see readme tracked", "d": "8/2016"}, {"body": "longer works router", "d": "8/2016"}, {"body": "rootrouter miss importing use rootrouter import rootrouter angularrouterdeprecated", "d": "8/2016"}, {"body": "longer occurring nt checked", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "still nt work", "d": "8/2016"}, {"body": "andresespinosapc issue", "d": "8/2016"}, {"body": "understood well issue seen solved router versi\u00f3n click routerlink different link keeps active", "d": "8/2016"}, {"body": "andresespinosapc need add additional option routerlink home route active exact route home route empty path partial match routes", "d": "8/2016"}, {"body": "thanks worked perfectly", "d": "8/2016"}, {"body": "brandonroberts nested routes illustrated code dropdown menu items generated reports adhoc reports reports tab user clicks reports tabs bootstrap dropdown show click adhoc generated reports make reports tab active mean hightlight even though actually clicking adhoc reports submenu dont want highlight adhoc report dropdown menu item wanted hightlight tab reports code cashier risk profile exception dashboard reports generated reports adhoc reports", "d": "8/2016"}, {"body": "descendant element element need custom approach router method inject component use html html cashier risk profile exception dashboard reports generated reports adhoc reports", "d": "8/2016"}, {"body": "brandonroberts thank getting error", "d": "8/2016"}, {"body": "need inject component ts import router angularrouter constructor private router router", "d": "8/2016"}, {"body": "sharpiro could please streamline plunker please trim essential bits current one way big see going update thnx", "d": "8/2016"}, {"body": "closing nt reproduce scenario", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "dug code short answer currently possible looks like upgradeadapter compiles childnodes component looks bindings wires input amp output means attribute directives root node ignored including ngmodel upgradeadapter nice limitation huge pitfall give grade incomplete workaround recommend create wrapper component implements ngmodel use regular binding ngmodel variable workaround would fugly recommend", "d": "8/2016"}, {"body": "generated looks correct see closing feel free open new issue still things fully correct", "d": "8/2016"}, {"body": "fixed current packages", "d": "8/2016"}, {"body": "seems still happen ca nt test yet", "d": "8/2016"}, {"body": "centaure hacked way serve files using karma karmaconfjs put start tests get request files want cached save start tests loading file called would define top populate template cache load test files function get html css templates cache function return promiseall objectkeys windowkarmafiles start karma function see make get request contents files want save object loaded later cachedxhr", "d": "8/2016"}, {"body": "bitsmag old api call reserialize values made changes control list eg add removed control curious see plunker case method happened called part another process later worked wait next tick call happens automatically change control list calling sufficient closing resolved", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "try flag issue triaging", "d": "8/2016"}, {"body": "update", "d": "8/2016"}, {"body": "guess answer", "d": "8/2016"}, {"body": "would like see native support typedatetimelocal mapping js date object", "d": "8/2016"}, {"body": "want easy solution use use pipe works kitkat tested", "d": "8/2016"}, {"body": "root cause issue fact zonejs", "d": "8/2016"}, {"body": "thanks add link issue", "d": "8/2016"}, {"body": "issue using webpack ideas could happening", "d": "8/2016"}, {"body": "removing systempolyfillsjs driving crazy anyone experience sideeffects removing systempolyfillsjs though", "d": "8/2016"}, {"body": "problem tried production mode tried corejs still unacceptable performance", "d": "8/2016"}, {"body": "even using corejs instead still experiencing performance issues ie edge browsers", "d": "8/2016"}, {"body": "need reopen templatedriven forms examples usage radiocontrols modeldriven forms", "d": "8/2016"}, {"body": "actually switch using instead current example need help switching gitter stackoverflow great options", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "issue still present moved issue closing one", "d": "8/2016"}, {"body": "found workaround touchevents actually continue fire dom removal targeted nodeelement original occurred nt bubble unlike mouseevents confusing cant perform simple expect work dom removal event listener attached outer component element dynamically add event listeners target element touchstart event occur perform cleanup soln typescript hostlistener touchstart event hostlistener mousedown event dragstart event eventtouches avoid touch event loss issue thisremoveprevioustouchlisteners avoid mem leaks thistouchmovelistenfunc thisrendererlisten eventtarget touchmove e gt thisondragmove e thistouchendlistenfunc thisrendererlisten eventtarget touchend e gt thisremoveprevioustouchlisteners thisondragend e thistouchcancellistenfunc thisrendererlisten eventtarget touchcancel e gt thisremoveprevioustouchlisteners thisondragend e removeprevioustouchlisteners thistouchmovelistenfunc null thistouchmovelistenfunc remove previous listener thistouchendlistenfunc null thistouchendlistenfunc remove previous listener thistouchcancellistenfunc null thistouchcancellistenfunc remove previous listener hostlistener mousemove event hostlistener touchmove event nt declare added dynamically ondragmove event stuff event hostlistener mouseup event hostlistener touchend event nt use added dynamically hostlistener touchcancel event nt use added dynamically ondragend event stuff ngondestroy thisremoveprevioustouchlisteners nt forget inject constructor import source", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "decorator taking object parameter right wrong storing variable using extend panel padding base class component basecomponentoptions export class basepanelcomponent input content string color string red onclick event consolelog click color thiscolor subclass overrides selector constructor const mypanelcomponentoptions objectassign basecomponentoptions selector mypanel component mypanelcomponentoptions export class mypanelcomponent extends basepanelcomponent constructor thiscolor blue elegant mything extends basething good enough", "d": "8/2016"}, {"body": "looking internal details focusing code aesthetics times repeat injecting directives parametrize component importing code imported everywhere sometimes child component different styles andor html tags suggestion following object orientation principles make component tag like used router specify child template rendered let communication two components flow using super constructor super even supervariable illustration solution code typescript import alotofthings alotofdirectives angularcore import somecomponent component template title directives alotofdirectives moredirectives evenmoredirectives moredirectivesthaticanhandle abstract class parent constructor private title string abstract click child component typescript import parent parent component template im child component directives onlywhatchildneeds nojunkdirectives cleancodeforeveryone class child extends parent constructor super title child click consolelog click parent component get implementation good use strong type checking require child component implement abstract parent abstract flexible way position child content inside parent component", "d": "8/2016"}, {"body": "opsxcq could understand approach would help resolve annotations inheritance problem problem reported issue tried create plunker follow solution proposes could understand relationship problem issue create plunker demonstrating use solution problem question", "d": "8/2016"}, {"body": "fernandocode hypothetical code wo nt work actual suggestion code would example construction open source project share ideas code facing problem construction would bring clarity flexibility code take problem generic level components act like objects typescript keeping annotation new coders understand going keyword make hardlink two implementations using object orientation protocol like parent calling abstract method implemented child component child component calling parent object would work similar way router get flexibility children component rendered inside parent focusing implementation think wo nt impossible considering tag information object hierarchy focusing problem complete component inheritance solution think construction solve would ever need inheritance", "d": "8/2016"}, {"body": "opsxcq yes understand publication think much fluidity english understood words wrong context realizing suggestion possible solution thought something launch angular thanks clarification suggestion", "d": "8/2016"}, {"body": "finally published first part article composition feel free make comments", "d": "8/2016"}, {"body": "good article templth nt think solve inheritance problem discussing technique interesting give try today", "d": "8/2016"}, {"body": "issue thoughts", "d": "8/2016"}, {"body": "minor update goodfield solution", "d": "8/2016"}, {"body": "three callbacks come calls complete one never called yet work surely called meant final callback invoke", "d": "8/2016"}, {"body": "promise rxjs callback different functionality explained mbrookson robwormald maybe would good consider reopening issue till find missing callback intended implementation angular http observables missing ibrahimyu", "d": "8/2016"}, {"body": "agree interested know intentional seems like callbacks imply thing called", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "belongs", "d": "8/2016"}, {"body": "case trick would nt work actually need scroll top overflowing routeroutlet similar issue workaround", "d": "8/2016"}, {"body": "solution none proposed solutions work seems working mefor long sure ngafterviewchecked windowscrollto", "d": "8/2016"}, {"body": "ariix would nt scroll every time change detection runs", "d": "8/2016"}, {"body": "cortopy yes yes still looking", "d": "8/2016"}, {"body": "exactly html behaves nt think want custom angular rules would one thing code test explain etc said particular case would nt really use unless course usecase complex going close one got details concerning usecase would happy reopen", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "thinking issue current state performing navigation router following signature createrouterstate currently createrouterstate customizable result reuse activated routes reuse planning implement support custom reuse strategies purpose different make components even shortlived right currently reuse component instance params change reuse strategy would allow get new component instance params change possible solutions final planning make createrouterstate step customizable final possible solutions final final following make createrouterstate step customizable make instantiation components customizable instead newing directly routeroutlet router go service able implement caching strategy want", "d": "8/2016"}, {"body": "thanks insights vsavkin looks like feature solve vladimiramiorkov case caching problem guess wait way implement custom createcache strategy nativescript page navigation", "d": "8/2016"}, {"body": "would really appreciate routeroutlet component instantiation hook whole thing sounding lot like lifecycle hooks routes currently using hack componentoutlet handle mapping state components mapping dataresolvers inputmetadata cases autowiring formcontrols parent groupsarrays others nt know dynamic route state mapped separating concerns state mapping components seems like would another side effect", "d": "8/2016"}, {"body": "personally prefer page stack pushpopreplace page cache", "d": "8/2016"}, {"body": "also find reflectioncapabilities issue think class compatibility would much relief development stage daily bases maybe consider using reflectconstruct instead", "d": "8/2016"}, {"body": "closing nt seem bug", "d": "8/2016"}, {"body": "using npm running npm install save results added packagejson dependecies block longer case check", "d": "8/2016"}, {"body": "micronyks try something like worked lately", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "fixed master via", "d": "8/2016"}, {"body": "ngtemplateoutlet solve problem", "d": "8/2016"}, {"body": "thanks read post revised dynamic component creation apis post use instead plunker", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "done already", "d": "8/2016"}, {"body": "issue looks stale lots changes new forms api plunker repro case closing still experience issue new api please feel free open another issue plunker", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "please excuse chiming already closed issue happened well indexts barrel reexports classes b c files ats bts cts order file bts line results error makes perfectly sense c yet imported indexts fix fine", "d": "8/2016"}, {"body": "hansl tested case latest master seems work closing", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "sounds like support request without enough context info", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "yes really think main cause", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "hey talked internally decided keep validators maxlength minlength match native property names", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "marcodelgatto works due native implementation maxlength htmlinputelement work validators see minlength binding example plunkr write something inputs first input minlength setted produces minlength error second one minlength binding usin attrminlenth minlen nt produce minlength error", "d": "8/2016"}, {"body": "created pull request solve", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "also want access formcontrol inside controlvalueaccessor component reason want display validation errors inside component basically validation errors validator registered formcontrol wherever created make happen passin formcontrol custom component inplementing controlvalueaccess", "d": "8/2016"}, {"body": "jamesthurley ran issue babel figured beast finally explain happening able hack together correct issue want start saying pieces using windows build aspnet core final nodejs npm packagejson babelrc webpackconfig var path require path var webpack require webpack moduleexports resolve extensions js ts module loaders test ts include clientapp loader babelloader tsloader ts compiler typescript entry main clientappbootclientts output path pathjoin dirname wwwroot dist filename name js publicpath dist plugins new webpackdllreferenceplugin context dirname manifest require wwwrootdistvendormanifestjson tsconfigjson wwwrootindexcshtml loading section scripts clientappbootclientts cut unrelated parts file understanding zonesjs monkey patches various asynchronous calls order angular get notified perform change detection turns importrequire zonesjs inside bootclientts file compiling asyncawait using babel async plugin case wrap async call promise problem babel injects code patch native promise api zonejs chance workaround patch promise using zonejs babel runtime chance create global variable patched zoneaware promise api inside webpack bootstrap file case bootclientts patch babel runtime use zoneaware promise provide example patch solve issue allowing babel use zoneaware promise example copy zonejs outside npm package wwwrootdist folder unfortunately longer update zonejs using npm ideally would like keep zonejs inside webpack outside babel really sure achieve workaournd indexcshtml loading section scripts zonepromise promise clientappbootclientts hope hack helps anyone trying use targeting wanting asyncawait babel webpack", "d": "8/2016"}, {"body": "jpsfs know good way patch correct order without moving zonejs outside webpack problem nt angular zone babel babel zone try patch promise object wrong order imagine issue happening babel happen typescript async support coming months unless typescript nonruntime version patch promise order work correctly better project level support libraries needed", "d": "8/2016"}, {"body": "wizarrc amazing work problem reappeared updated angular beta even fixed babel version since babel angular fixed old versions plan wait typescript bumped attempting update everything sans babel sounds like would probably disappointed result try give fix try near future really appreciate digging surprised nt effected people", "d": "8/2016"}, {"body": "jamesthurley nice workaround update found way keep zonejs inside npmwebpack package management add separate loader webpackconfigjs file raw load javascript workaround webpackconfigjs clientappfixeszonebabelasyncjs require zonejs define require exports function require exports use strict require babelruntimecorejspromise default promise exportszonepromise promise clientappbootclientts require fixeszonebabelasync import reflectmetadata import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule", "d": "8/2016"}, {"body": "jamesthurley updated previous post forgot paste entry update webpackconfigjs", "d": "8/2016"}, {"body": "jamesthurley working configuration provided came across another issue seems hit miss babelloader ca nt quite narrow babel generates bad code seems happen refactor code lot generates import object defineproperty babelruntimecorejsobjectdefineproperty still guessing still quite stable looking around saw others hit issue workaround provided isolate plugins changed babelrc configure incorporate workaround let know hit error babelrc", "d": "8/2016"}, {"body": "hi wizarrc tried fix today got work huge help thanks sharing solution tweak solution slightly trying second version fix allowed keeping npm nt effect verify things stuck determined nt executed however understanding would make sense would simply return contents js file string right working might wrong instead using added another entry point webpack config set use babel files anyway allowed fix run without going babel first everything running great nt hit error mentioned yet", "d": "8/2016"}, {"body": "jamesthurley absolutely correct see forgot update portion config till minutes posted next time try hitting refresh difference grouped mine array instead tagging one separately glad see working", "d": "8/2016"}, {"body": "ha right used pages updating days forgot refresh page manually", "d": "8/2016"}, {"body": "jamesthurley output include separate output files wwwrootdist folder instead case appjs vendorjs fixesjs solution merges appjs lets webpack bring require way works well depends prefer separate output", "d": "8/2016"}, {"body": "wizarrc yep right ended three separate files merged back two suggested", "d": "8/2016"}, {"body": "reason closing", "d": "8/2016"}, {"body": "guess official example work works type uses approach", "d": "8/2016"}, {"body": "getting think consistent get polyfills reflect system", "d": "8/2016"}, {"body": "going close let reopen still causing confusion", "d": "8/2016"}, {"body": "would issue track minification issues mangled options used jspm single file build nomangle works fine mangle used getting silent failures", "d": "8/2016"}, {"body": "bump", "d": "8/2016"}, {"body": "tldr parentchild selectors would provide scope custom selectors selecting native elements another reason parentchild selectors would allow scoping selectors especially ngmodules applies every declaration every component within instance could override table tags custom components adding table directives component using custom table without bleeding components anywhere table tag used module custom table directives applied causing unexpected behavior could scope selectors ie could apply one custom attribute table assured tr tags reside would selected normally would add attribute child tags plugin perspective would rather users add one attribute table tag preferred rather using becomes burdensome use especially already multiple input output directives necessary plugins basic function since table elements specific display properties set browser also nt make sense use custom tag selectors like", "d": "8/2016"}, {"body": "design component attribute mytable selector use viewchild get thead viewchildren get tr td carry changes elements using apis provided", "d": "8/2016"}, {"body": "need add column checkboxes every row nt component best way create directive add elements renderer inside table component wo nt still directive applied tr elements creating unnecessary bindings", "d": "8/2016"}, {"body": "looks like happening somewhere else looks like still issue", "d": "8/2016"}, {"body": "wanted add still issue still import plotlyjs polyfills otherwise fails even root component", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "getting issue ie unhandled promise rejection zone task promisethen value error digging find originalerr description object nt support property method keys chrome never happens included corejs packagesjson ran npm install joy ideas", "d": "8/2016"}, {"body": "getting error object nt support property method apply looking stack trace see works chrome ie edge lower using", "d": "8/2016"}, {"body": "slashbrackets need reference codejs shims script file html page look example indexhtml", "d": "8/2016"}, {"body": "slashbrackets mentioned add shims also went overkill added case", "d": "8/2016"}, {"body": "facing issue temporary workaround come double cast type response type error eg mockerror myresponse error", "d": "8/2016"}, {"body": "interested well", "d": "8/2016"}, {"body": "honestly message means nothing getting nothing help know source problem fix say two components selector", "d": "8/2016"}, {"body": "jkyoutsey says guess components use would obvious error need help please use support channels gitter edit given last line comment probably figured think happen component would use selectors would issue selectors", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "achieve date time format date pipe sep pm tried x date mmm j mm get sep angular", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "navigating back ca nt scroll top must recover previous scroll deal imagine scenario home long list products scroll end click product navigate back long products list populated yet async request browser ca nt recover scroll position", "d": "8/2016"}, {"body": "ran issue route content inserted element rather inside first thought something wrong spending time looking examples searching find bugs reported see behavior design nt make sense like directive put contents inside also comment taken directly angularroutersrcdirectivesrouteroutletdts router outlet placeholder angular dynamically fills based application route", "d": "8/2016"}, {"body": "seem like strange decision place content outside separate element following example nt defined selector component intuitively docs made seem like following would occurred would enable require element components without selector like obviously reasons want still potentially include element seems reasonable following well get sort clarification regarding design decision sibling makes docs", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "indeed fixed thnx zoechi", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "issue moved", "d": "8/2016"}, {"body": "fixed via", "d": "8/2016"}, {"body": "since well documented exemple use case possible itemname moment way get error look wrong sure verify work", "d": "8/2016"}, {"body": "someone idea custom implementation fails code would like different behavior whether production dev environment somehow calling method super class fails import injectable exceptionhandler export class customexceptionhandler extends exceptionhandler call error stacktrace null reason null", "d": "8/2016"}, {"body": "ndamnjanovic construtor empty since empty loggroup property defined check samples", "d": "8/2016"}, {"body": "tbragaf thanks reply saw examples thought omit constructor derived class default constructor super call created wrong cause looks like happening", "d": "8/2016"}, {"body": "ndamnjanovic nt know works typescript since nt use construtor needs logger passed dependency di instanciate rather instanciated manually know seems unusual copy logger source code call inside super call", "d": "8/2016"}, {"body": "mbrookson way problem probably different working ng happened case unsubscribe called function called tryorunsub triggered unsunscribe broke behaviour thank", "d": "8/2016"}, {"body": "going happen got intention supporting bower npm recommended package manager", "d": "8/2016"}, {"body": "obsolete dartspecific", "d": "8/2016"}, {"body": "try angularmodule directive somedir function return scope bindtocontroller true template controller function somecontroller scope thismyproduct name somename controlleras cont", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "ran problem really expect copy constructor even since get choose first one cause completely different effect latter even mentioned documentation", "d": "8/2016"}, {"body": "vicb think closed", "d": "8/2016"}, {"body": "captaincodeman superhard say anything without minimal reproduce scenario plunker nt even know version using going close one actionable asis happy reopen got minimal plunker", "d": "8/2016"}, {"body": "pkozlowskiopensource also super hard reproduce something shows part larger app component included rendered view even though nt list directives bug whatever beta version late jan fixed later release think discussed chat time", "d": "8/2016"}, {"body": "obsolete dynamiccomponentloader deprecated gone", "d": "8/2016"}, {"body": "alvipeo could please write solution help us link ericcarraway working", "d": "8/2016"}, {"body": "guys sure relevant long time ago angular changed lot personally waiting refresh project", "d": "8/2016"}, {"body": "idea get working", "d": "8/2016"}, {"body": "worked javascript class mockrouter navigate jasminecreatespy navigate testbedconfiguretestingmodule declarations mycomponent providers provide router useclass mockrouter could use instance provider key wanted access jasmine spies tests javascript const mockrouter new mockrouter testbedconfiguretestingmodule declarations mycomponent providers provide router usevalue mockrouter", "d": "8/2016"}, {"body": "give shot thanks", "d": "8/2016"}, {"body": "looks like issue resolved closing see commit", "d": "8/2016"}, {"body": "sounds like support question already answers", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "please reopen controlgroup longer api clear whether byavv example resolves nested form prohibition furthermore nt see guidance help example tutorial implementing custom nonform component implements twoway data binding library used based conventional wisdom goes ngmodel motions reflect model change back parent component problem library seems twoway binding occurs used forms directives supplied angular incorrect love see plunkr example", "d": "8/2016"}, {"body": "try tutorial", "d": "8/2016"}, {"body": "byavv thanks clear complete tutorial well done playing around plunkr conclude following angular twoway ngmodel binding available standard form controls implemented angular twoway ngmodel binding readily available custom controls either within outside element although perhaps custom binding could achieved deep dive angular internals guide example one alternative propagate change custom control via output parent component subscribe output handle change event custom control embedded angular form controlvalueaccessor used conjunction formbuilder formgroup propagate change back model form configured parent component access custom control value via", "d": "8/2016"}, {"body": "two way binding available custom controls like standard use terms implementing controlvalueaccessor provide way angular receive notifications component value change write model value component abstraction custom implementation native elements checkboxcontrolvalueaccessor selectcontrolvalueaccessor others implementing controlvalueaccessor thing listening custom update events call function provided registeronchange occurs simplifying custom component need angular nt care component nt work directly fact allow us build custom form input component angular need construct accessor needed register multiprovider based angular docs class bridge control native element definitely native let bring sample use projects javascript component selector template providers provide ngvalueaccessor useexisting forwardref gt mycustomcomponent multi true export class mycustomcomponent implements controlvalueaccessor private innervalue set innervalue value transform somehow thisinnervalue value get innervalue return thisinnervalue usage within form html regular twoway binding oneway hope helps", "d": "8/2016"}, {"body": "could also handled buildtime", "d": "8/2016"}, {"body": "reason select descendants complex selectors would allow better scoping selecting native html elements tr td elements complex table plugin would greatly benefit parentchild selectors see", "d": "8/2016"}, {"body": "marklanger ever get working stuck place fragment works link browser nt scroll id location", "d": "8/2016"}, {"body": "nope stumbled upon issue stackoverflow nt need fix application nt tried since though tried works", "d": "8/2016"}, {"body": "creating fragment route navigating via angular router currently page refresh works kind defeats point mark langer notifications githubcom replyto angularangular reply replygithubcom date monday august pm angularangular angular noreplygithubcom cc vijay goel vijay goelinsightscom comment comment noreplygithubcom subject angularangular router provide support handling url hash nope stumbled upon issue stackoverflow nt need fix application nt tried since though tried works receiving commented reply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubangularangular title angularangular subtitle github repository mainimageurl github url nope stumbled upon issue stackoverflow nt need fix application nt tried since though tried works action name view issue url", "d": "8/2016"}, {"body": "yes absolutely agreed maybe chuck norris routing brandonroberts help", "d": "8/2016"}, {"body": "marklanger lol yea believe still issue generation works fine click link fragment nt jump anchor point", "d": "8/2016"}, {"body": "need", "d": "8/2016"}, {"body": "vsavkin reopening one jump anchor navigation plunker", "d": "8/2016"}, {"body": "ran limitation brandonroberts thx providing plunkr help illustrate looking fwd fix available", "d": "8/2016"}, {"body": "ok many thanks hint", "d": "8/2016"}, {"body": "guess obsolete dartspecific", "d": "8/2016"}, {"body": "chybie plunker link nt seem working mind reposting", "d": "8/2016"}, {"body": "chybie since repro case nt heard anything going close please feel free open new issue working plunker repo still persists", "d": "8/2016"}, {"body": "seems fine minified bundles case bundles recommended anything plunkers quick experiments", "d": "8/2016"}, {"body": "ca nt seem get date pipe work help would greatly appreciated using getting error referenceerror ca nt find variable intl entire spec file typescript import provide platformpipes angularcore import datepipe angularcommon import addproviders async inject angularcoretesting import post postcomponent posthtmlcomponent import usingcomponentfixture testhelpers describe component post gt beforeeach gt provide platformpipes usevalue datepipe multi true addproviders postcomponent posthtmlcomponent template", "d": "8/2016"}, {"body": "nt think anything pipe sounds like something component aug pm notifications githubcom wrote ca nt seem get date pipe work help would greatly appreciated using getting error referenceerror cant find variable intl entire spec file import provide platformpipes angularcore import datepipe angularcommon import addproviders async inject angularcoretesting import post postcomponent posthtmlcomponent import usingcomponentfixture testhelpers describe component post gt beforeeach gt provide platformpipes usevalue datepipe multi true addproviders postcomponent posthtmlcomponent render tag text matching post title usingcomponentfixture postcomponent fixture gt let component fixturecomponentinstance let element fixturenativeelement receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "nt receive error remove date pipe template", "d": "8/2016"}, {"body": "passing variable named intl pipe aug notifications githubcom wrote nt receive error remove date pipe template receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "using variable named intl anywhere code date pipe provided angularcommon line guessing intl used somewhere within date pipe", "d": "8/2016"}, {"body": "able resolve issue npm install karmaintlshim savedev add intlshim frameworks collection karmaconfjs add following karmatestshimjs referenced files collection karmaconfjs", "d": "8/2016"}, {"body": "already fixed", "d": "8/2016"}, {"body": "seems fixed", "d": "8/2016"}, {"body": "think got better suggestion way documentation updates necessary intuitive work closing duplicate", "d": "8/2016"}, {"body": "dennispark nothing seems run testing locally udpate found nt inject mockbackend inject xhrbackend instead", "d": "8/2016"}, {"body": "edit removed previous post many issues open sorry", "d": "8/2016"}, {"body": "closing issue looks stale new forms api resolve error described op please feel free open new issue anyone still getting controlcontainer issue new api", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "obsolete", "d": "8/2016"}, {"body": "closing since nt seen reproduce scenario", "d": "8/2016"}, {"body": "belongs documentation located", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "sounds like support request redirected appropriate support channel", "d": "8/2016"}, {"body": "issue pointed headed project seems like good place add another amazingly boring browser support comments reasonable obvious browser support policy maybe angular project end something vaguely like figure list browsers support put list obvious findable place make published first party examples anything angulario angulario shipped default correct set polyfills place support list browsers support mean features work features work others need application authors stumble across broken feature find list somewhere add polyfills rediscover needs make cli configure projects default support list browsers include documentation settings cli features optionally strip polyfils reduce size applications nt need support standard supported list browsers", "d": "8/2016"}, {"body": "kylecordes documentation points raising currently work progress cc mlaval wardbell", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "vinnyvicious fixed part check released", "d": "8/2016"}, {"body": "probably want implement controlvalueaccessor nested component apply validators parent level eg see detailed explanation also worth noting best keep support requests stack overflow github issues feature requests", "d": "8/2016"}, {"body": "closing general support request", "d": "8/2016"}, {"body": "rechecked first two issues resolved ie longer cause view encapsulation break final problem remain however attribute selector attribute value contains space stills breaks", "d": "8/2016"}, {"body": "honn could please either update description close issue open new one thanks", "d": "8/2016"}, {"body": "would belong please follow issue template reporting bugs", "d": "8/2016"}, {"body": "doc issue fixed", "d": "8/2016"}, {"body": "trying use jquery angular way supertricky get right really recommended issue jquery competing dom generation get wired results depending timing dom generation", "d": "8/2016"}, {"body": "api changed componentresolver deprecated supposed using componentfactoryresolver basically got working problem ca nt use viewref previously using applicationrefloadcomponent load component specific selector reason using gridstack create dashboard widgets dynamically problem viewref approach end selector dom screws dom gridstack old code notice use appref load component directly specific dom element use blows applicationreftick called recursively missing", "d": "8/2016"}, {"body": "got working template code viewchild widgetplaceholder read viewcontainerref viewcontainerref const factory thiscomponentfactoryresolverresolvecomponentfactory thiswidgettypehelpergettype thiscomponentconfigtype set selector component inserted without default selector etc default selector presence mess dom gridstack let selectorstring string id thiscomponentcontaineridprefix thiswidgetconfigwidgetid factoryselector selectorstring thiscomponentref factorycreate thisinjector null selectorstring thiscomponentrefinstance thiscomponentconfigconfigpropertyname config thiscomponentconfigconfig thisviewcontainerrefinsert thiscomponentrefhostview", "d": "8/2016"}, {"body": "ericmartinezr pascalprecht plunker demonstrating issue look two async validators based upon promises see another based upon observables see uncommenting one commenting one see promise based async validators work expected whereas observable based async validators throw following typeerror", "d": "8/2016"}, {"body": "confirm plandesign never work work variable within appcomponent x refers seems sad set hidden property remove component ngif", "d": "8/2016"}, {"body": "lindsaymarkward example work see plunkr work component declares reference within eg html", "d": "8/2016"}, {"body": "thanks meant actually got wrong typed code example intended like div surrounding component pattern conditionally showingincluding component element surrounds based data component", "d": "8/2016"}, {"body": "sounds like support request redirected appropriate support channel", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "resolved vicb wonder reason closing", "d": "8/2016"}, {"body": "course resolved issue however tracked repo instead", "d": "8/2016"}, {"body": "episodeyang clear error could please simplify plunker bare minimum current one kind massive", "d": "8/2016"}, {"body": "title misleading said classes removed root element replaced", "d": "8/2016"}, {"body": "closing nt hear back opener", "d": "8/2016"}, {"body": "hi nt seem still see http error status codes set using angular apparently earlier fixed original issue even using rc nt seem set browser shows request right post net errnamenotresolved http observable error object look like error handling code developer guide get hand exact http error code anybody got working thanks advance regards", "d": "8/2016"}, {"body": "navmishra browser events result status code", "d": "8/2016"}, {"body": "thanks distinguish betweenidentify http error conditions using especially distinguish offline host name resolved related", "d": "8/2016"}, {"body": "closing based", "d": "8/2016"}, {"body": "thanks well worked linux mint", "d": "8/2016"}, {"body": "thank youuuuuuuu", "d": "8/2016"}, {"body": "duplicate", "d": "8/2016"}, {"body": "longer advocate usage polyffils bundle peer dependeincies still needed", "d": "8/2016"}, {"body": "closing duplicate", "d": "8/2016"}, {"body": "ts ca nt use run tsc got error error find name modulename", "d": "8/2016"}, {"body": "jinwyp nothing typescript moduleloader using using newer version systemjs try also nt forget declare modulevariable typescript typingfile like could also create correct interface makes easier", "d": "8/2016"}, {"body": "hi solved issue imported obervable rxjs rxjs map function used standard templateurl hope works provide tsconfigjson packagejson file need assistance", "d": "8/2016"}, {"body": "understand line related problem relative addressing templateurl property choeller mean newer version systemjs one exactly left syntax", "d": "8/2016"}, {"body": "mlcmlapis think choeller quoting chrisfulstowagl comment april solved chrisfulstowagl way without changing module commonjs", "d": "8/2016"}, {"body": "enricoatzeni ok means nothing changed point view", "d": "8/2016"}, {"body": "hi mlcmlapis file packagejson file apart important tsconfigjson file like", "d": "8/2016"}, {"body": "fine original problem responded actually bit lost discussing thanks", "d": "8/2016"}, {"body": "isnt referecing template url systemjs oh presumed issue", "d": "8/2016"}, {"body": "ok st solved already sometime ago way systemjs use declare const modulename string component selector pageinfo moduleid modulename templateurl panelpageinfotmpl case means template stored directory component template saved subdirectory example template templateurl", "d": "8/2016"}, {"body": "ok need try showed achieved result alternative way", "d": "8/2016"}, {"body": "nt think intention support types selectors rather throw", "d": "8/2016"}, {"body": "fyi got error chrome extension angular extension alternative batarang", "d": "8/2016"}, {"body": "nuts reading whole thread fixed issue development mode disabling nginspector angularjs karlgustavunimicro says said also worked felt really hacky", "d": "8/2016"}, {"body": "still issue us confusing first instinct probably something wrong lead lots developers peppering code settimeout case turn makes angular look complicated needs looks like merged yet", "d": "8/2016"}, {"body": "master exists abstractcontrol thus every subclass like formgroup formcontrol wo nt need cast anymore following work closing resolved", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "discussion kind temporary concensus", "d": "8/2016"}, {"body": "solution issue tried angularcli also also working", "d": "8/2016"}, {"body": "make work pending question stackoverflow", "d": "8/2016"}, {"body": "need use offline compiler ngc tue aug pm nicolas henneaux notifications githubcom wrote make work pending question stackoverflow receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "anyone manage get angular app work chrome packaged app", "d": "8/2016"}, {"body": "presence attribute html markup may interpreted angular browser resulting unpredictable behavior case directive capture given property binding note trying open discussion best solution may simply kangaxhtmlminifier would say nt think html minifiers strip attributes like many legitimate cases want boolean attributes warning would confusing angular users", "d": "8/2016"}, {"body": "bundles get proper license", "d": "8/2016"}, {"body": "one sounds like stale closing", "d": "8/2016"}, {"body": "obsolete longer bundle rxjs", "d": "8/2016"}, {"body": "believe one fixed obsolete introduction", "d": "8/2016"}, {"body": "sure original requesters meant would working plunk real usecase currently ie table component want single config object consumer component table component update changes config object properties consumer component provide templates rendering cells consumer needs update afterviewinit hook goal let consumer think component internal stuff possible change config property time table component rest stripped example works long ngafterviewinit replaces whole config object want handle consumer component nt know good way change angular complains changed expression hope matches original issue could nt find good way handle without hacks", "d": "8/2016"}, {"body": "spali nt sound like original issue moreover clear saying consumer component provide templates rendering cells consumer needs update afterviewinit hook need use get available importantly design looks really wired would expect people provide templates children table element jimitndiaye sure understand comment please open new issue clear reproduction scenario plunker going close one issue turning metaissue everything nothing still believe something needs fixing please open new issue concrete reallife use case minimal plunker illustrating issue", "d": "8/2016"}, {"body": "pkozlowskiopensource thanks check aftercontentinit assumed used viewchild available afterviewinit started templates children table element nt find way probably nt know mark template column name identify inside component got querylist templateref found possibility identify specific columns columns names also dynamically ca nt use static name contentchild component would propagate template table component would work inspecting object debugger nt let find anything identify template column", "d": "8/2016"}, {"body": "understanding correctly could", "d": "8/2016"}, {"body": "dart gone think one obsolete", "d": "8/2016"}, {"body": "believe fixed master", "d": "8/2016"}, {"body": "actually angular testcomponentbuilder issue able get work configuring proxies karma path dist directory karma able find template ie karmaconfjs proxies assets basedistdevassets", "d": "8/2016"}, {"body": "avalinasab please clarify proxies everything run app folder contains components folder componentspects files reside alongside actual components ie appcomponentscomponenta compacomponentats compacomponentaspects also places contain unit testing components folder templateurl", "d": "8/2016"}, {"body": "joesaad bundle files assume move everything dist folder example distapp configuration karmaconfjs file work proxies app distapp take look see examples", "d": "8/2016"}, {"body": "think basic requirement di services injected another services without providing providers component level basically break decoupling totally agree yfain pascalprecht explaining angular di works di works", "d": "8/2016"}, {"body": "fortunately came back guise barrelrolls case closed yfain", "d": "8/2016"}, {"body": "btw today chromeoperasafarifirefox autocorrect nt tested ie yet", "d": "8/2016"}, {"body": "probably related class applied initially using see", "d": "8/2016"}, {"body": "fixed", "d": "8/2016"}, {"body": "trippytango looks like dupe short answer secondary component needs implement controlvalueaccessor see comment detailed explanation", "d": "8/2016"}, {"body": "doc said access newhero variable sibling child element would documentation bug could please open still fixed thnx", "d": "8/2016"}, {"body": "think introduction obsolete", "d": "8/2016"}, {"body": "sounds like support docs request resolved already closing", "d": "8/2016"}, {"body": "obsolete longer issue new scripts info pr merged integrated latest release", "d": "8/2016"}, {"body": "ben nadel bennadel published article topic might interesting", "d": "8/2016"}, {"body": "internal api inch towards final release apis frozen wo nt made public unless good reasons going close issue happy reopen got killer usecase would make us reconsider", "d": "8/2016"}, {"body": "stephanjust thing useful creating reusable ui components needs inherit common properties", "d": "8/2016"}, {"body": "kemsky functionality would help whole lot oostyle view components powerful easy maintain properties carry across inheritance makes much difficult necessary", "d": "8/2016"}, {"body": "seems problem abstract class decorators hostbinding confirmed", "d": "8/2016"}, {"body": "like said essential need", "d": "8/2016"}, {"body": "stable browserstack", "d": "8/2016"}, {"body": "would great supported selectors could properly shimmed actually becomes significant issue style bleed using conjunction slotted components nested components example following example created parent component content slot contains another component styles applied parent apply included within slot would great nested items also receive scopename attribute unless used would give option style ways provide flexibility", "d": "8/2016"}, {"body": "looking api docs first time confused similar properties relationships properties class clear looking property descriptions dug types implementation became apparent improving property descriptions would easier developers dig every property type current property descriptions componentref component instance root component class elementref element root component native element root component debugelement associated root element component already understand types may clear someone learns interfaces unclear property use ways adding easier bc interfaces developers already know also left wondering properties changing descriptions something like instance root component class also available componentref would help explain relationship properties disclaimer first impression writing tests", "d": "8/2016"}, {"body": "obsoltete", "d": "8/2016"}, {"body": "pkozlowskiopensource docs label mean works expected imo also makes sense normal providers", "d": "8/2016"}, {"body": "solution uses new router see", "d": "8/2016"}, {"body": "facing problem right feature would really good", "d": "8/2016"}, {"body": "nt think behaviour asked achieved candeactivate give example plnkr link verify", "d": "8/2016"}, {"body": "already solution reusing component routing back another component need changes combo boxes grid settings gest lost navigate another view back thanks", "d": "8/2016"}, {"body": "think discussion fundamentally store state reuse components found storing state components useful narrow cases rather wish fundamental design angular made stateless components default state something could opted special cases progression real applications work something like following rat nest mutability everywhere various hacky ways pushing copies state need obviously situation noticed fixed plan end start learning basic angular capabilities applying centralize state services let change detection cause data flow works realize need better control states change invent little thing manages state using observables intentional changes works also realize reinventing things people already invented swap much better thought implemented version idea ngrxstore think also work well nt firsthand experience one alternatively find state management mechanism like firebase provides many advantages possibly advantages also like automatically persisting state keep one eyes open future expect things like relay falcor etc end dominant way manage state might think description talking huge complex enterprise apps true even fairly small applications end surprising difficulty state management piece training curriculum attempts manage state responsibly tiny application whose code fully reviewed minutes ends third bullet point list might also think talking application state talking whether checkbox checked form sort thing initially seems like omitted broad notion application state true want implement certain features true anymore", "d": "8/2016"}, {"body": "find solution", "d": "8/2016"}, {"body": "problem ca nt seem view setcookie header read header content type", "d": "8/2016"}, {"body": "time believe worked around issue obtaining required token using separate rest call returning token json response body cache token set outgoing call application level sure type workaround still needed would surprised take look withcredentials setting outlined", "d": "8/2016"}, {"body": "yeah added withcredentialstrue work", "d": "8/2016"}, {"body": "maybe help solution add backend accesscontrolexposeheaders made trick front end worked fine", "d": "8/2016"}, {"body": "looks like stale version closing duplicate thanks reporting", "d": "8/2016"}, {"body": "supporting elvis operator ngmodel maybe renamed", "d": "8/2016"}, {"body": "fixed repo", "d": "8/2016"}, {"body": "coming react looking must say jsx able use native js loops etc killer feature also getting compile error critical reason running tutorial making typo template nt throw exception runtime compile time left html rendering code sitting template language writing ngfor let hero heroes heroesmap hero gt intuitive jsts disposal superior template better sense actually writing html really like learn classname vs class template shines robwormald updates fancy editor support using vscode tried atom none seems good template experience rich html ts auto completion atom make nice highlighting html tamplate string also work separate html files", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "updates workaround issue guys", "d": "8/2016"}, {"body": "davidgang situation basically hearing use angular angular material design thing really upgrade using upgrad adapter services pretty much useless", "d": "8/2016"}, {"body": "think better solution problem", "d": "8/2016"}, {"body": "feature planned stable release new router", "d": "8/2016"}, {"body": "still valid", "d": "8/2016"}, {"body": "issue almost solved unit tests still commented according preview already available wo nt problem next version browser", "d": "8/2016"}, {"body": "mlaval know new stable version edge released testing previews", "d": "8/2016"}, {"body": "fully solved preview almost solved stable using vm modernie run tests nt know release", "d": "8/2016"}, {"body": "seems like fixed yet", "d": "8/2016"}, {"body": "ca nt reproduce nt use routing ngif instead create destroy input validators equivalent routing situation forforeach one thing noticed providers marked would potential source problems going go ahead close one reproduce latest code level please reopen thnx", "d": "8/2016"}, {"body": "latest master error", "d": "8/2016"}, {"body": "cases still insufficient consider directive typescript component selector textarea autosize template class textareaautosize hostlistener input eventtarget oninput textarea htmltextareaelement void thisadjust constructor public element elementref ngoninit void thisadjust adjust void thiselementnativeelementstyleoverflow hidden thiselementnativeelementstyleheight auto thiselementnativeelementstyleheight thiselementnativeelementscrollheight px template resize element directive initialized event fired value changed element value updated afaict way short coincidentally happen value updated", "d": "8/2016"}, {"body": "yes use polyfill cdn momentjs best alternative imho", "d": "8/2016"}, {"body": "completely breaks applications ios devices replaced number pipes resolved", "d": "8/2016"}, {"body": "experienced safari chrome iphone using date pipe referenceerror ca nt find variable intl", "d": "8/2016"}, {"body": "experienced iphone safari referenceerror ca nt find variable intl suspect catch lot people", "d": "8/2016"}, {"body": "let give love mlaval laskoviymishka anyone interested could please create issue shared doc lists issue intl api api specific implementation check existing bug report case please api crappy facts thanks wardbell something ie cookbook intl polyfill may something add upcoming btw want catch gone one week tonight", "d": "8/2016"}, {"body": "thank vicb reopening completely agree kylecordes ok guys product works great chrome philosophy messed real world applications lead dev tell po app breaking ipad sorry dude angular team nt think important works ipad least devs warned using kind needpolyfill components nt feel like complete idiots app breaks demo day nt know would tested safari plan keeping philosophy prepare might right however might core job maybe external stuff webpack compiler polyfill feature throw warning devs real world need feel safe using feature wo nt break whole application browsers answer test fix definitely viable much painful developerfriendly scary ps sorry rude message love amp quotes would weapons proreact community nt want hear", "d": "8/2016"}, {"body": "wembernard agree several points imho already couple signs implement layer like since right active development could extend get rid intlapi open discussion future intlapi overall internationalization issues really need see every point view problem cat", "d": "8/2016"}, {"body": "polyfill intl angular already depends lot add intl polyfill next year ios macos get rid major browsers support intl temporary issue", "d": "8/2016"}, {"body": "daschtour actually depends intlapi much also need keep mind api allow us implement features see discussion pointing absolute zero control", "d": "8/2016"}, {"body": "laskoviymishka angular relies intl formatting pipes crash try use percent formatting pipe release flavor safari crash use decimal formatting pipe pretty much pipe angular ships wo nt crash app async pipe maybe formatting pipes nt need intl nt try load intl hides problem serious dependency nt show start taking rough edges prototype", "d": "8/2016"}, {"body": "laskoviymishka point zero control best use something follows standard user decide os settings numbers dates formatted need implement hunderts different date number formats already implemented hunderts times remember point another discussion involving momentjs implementing something already features nt hard create different pipes intlapi custom features live together", "d": "8/2016"}, {"body": "daschtour use someone else repo lead problem lack control point view internationalization great use approach johnchristopherjones whole angular dependency intlapi concentrated single place actual format pipes datepipe numberpipes decimal percent currency related intlapi directly use internal wrappers dateformatter numberformatter numberformatter pretty naive delegate options intlapi method dateformatter naive like way handle formatting except transformer functions", "d": "8/2016"}, {"body": "hello safari still throws error using angular nt think matters use following polyfills ecmascript internationalization api thanks", "d": "8/2016"}, {"body": "incorrect according correct parses safari notice timezone offset reference", "d": "8/2016"}, {"body": "new forms well", "d": "8/2016"}, {"body": "yes", "d": "8/2016"}, {"body": "hi guys nt know correct place ask anyone knows intercept redirect app uses cas authentication need navigate browser location redirected current behaviour http goes redirect tries retrieve response problem cas server nt allows cors request rejected", "d": "8/2016"}, {"body": "hi updating valueaccessors working anymore changed references angularcommon angularforms controlvalueaccessor ngvalueaccessor component still nt work ngmodel idea need change documentation seemingly obscure feature", "d": "8/2016"}, {"body": "feature still exist tried component building get substituted", "d": "8/2016"}, {"body": "alxhub", "d": "8/2016"}, {"body": "mhevery worth opposed order properties object order elements map strictly defined first version ecmascript introduced standard uses list type describe adding new element appends end list keyvalue pairs changing value element leaves order intact see mapprototypeset function operations use list representation reasons perceived inconsistent ordering considering iterating maps would convenient maybe another look could justified", "d": "8/2016"}, {"body": "", "d": "8/2016"}, {"body": "seeing issue using webpack implementation url documentation note component defined follows import component angularcore component moduleid moduleid selector template require export class public message string hello component inside appshell angular app houses component able import component add list directives use selector html fine however trying also share component another angular app second app try use component first app reference compiled js files follows var test require note line test reference component correctly see message property correctly console window chrome dev tools see thismessage hello component inside appshell however try add list directives use selector html second app see following error console window uncaught directive annotation found note exact setup fine without using webpack following systemjs approach able share first component first angular app second angular app using identical approach mentioned however tried leverage webpack bundle code ran issue fyi working portal like app user look feel like one application however needs split smaller applications team release areaapp without deploy entire portal app however certain components may shared across apps hopefully makes sense thanks advance input", "d": "8/2016"}, {"body": "mchamo identical situation app sample component sent using component within using webpack instead raw via results working component webpack compiles second application consuming throws consuming application using identical webpack config local app difference processing initial typescript files failing scenario trying narrow problem thought would issue typescript compiler settings output working nonworking build nearly identical", "d": "8/2016"}, {"body": "skycoding please refer thread started angularjs google group describe issue second post issue think identified cause core issue seems way webpack assigns unique ids dependencies generating bundle chunk thinking sure solveable via webpack first app second app instance nodemodules folder hence webpack bundles generated app app instances angularcore node dependencies assigned different unique id described manually changed unique id second app appjs bundle worked fine obviously change manually nt viable solution worked around issue generating bundle via systemjs builder instead webpack used approach modifications specific project get work curious anyone suggestions get work webpack instead systemjs builder", "d": "8/2016"}, {"body": "mchamo thanks looking tested experienced error using single file trying import webpack believe consuming application webpack resolve issue pretty crisp example problem trying sorts things come ideas please reach", "d": "8/2016"}, {"body": "wanted update everyone released first iteration form renderer angular brings datadriven json powered forms angular please check working get components place feature parity angular renderer hoping get point sept meantime please try contribute thanks", "d": "8/2016"}, {"body": "travist interesting contribution examples documentation look like uses json format rather jsonschema support jsonschema", "d": "8/2016"}, {"body": "still possible try solution vsavkin got following error ca nt bind newcontrolgroup since nt known property div", "d": "8/2016"}, {"body": "still nt work", "d": "8/2016"}, {"body": "alxandr andrashatvani figured workaround way get asyncawait working using typescript webpack babel thinking loud one could try thing loading zonejs traceur top traceur used traceur anything like babel method replace override promise used async generator", "d": "8/2016"}]