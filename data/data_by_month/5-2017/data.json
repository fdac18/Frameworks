[{"title": "children foreach filters functions", "body": "react unexpected behaviour silently filters functions current behavior expected behavior childrenforeach throw invariant error function type child met childrenforeach nt filter function type children", "num": "9821", "d": "5/2017"}, {"title": "componentdidmount triggered initial render", "body": "code facing issue life cycle method using electrode js framework make render server side facing random behaviour life cycle methods time triggered time class bannerslist extends reactcomponent constructor props super props thiscreatetable thiscreatetablebind thisonchangepage thisonchangepagebind thisstate skip limit componentdidmount thisonchangepage onchangepage page let skip page thisstatelimit thispropssetbanner endpointsadminbanner skip thisstatelimit thissetstate currentpage page skip skip createtable row index return rowtitle rowtitle na rowdisplaysection rowdisplaysection na moment rowcreatedat x format ddmmyyyy render let data thispropsgetbanners amp amp thispropsgetbannersdata amp amp thispropsgetbannersdataitems amp amp thispropsgetbannersdataitemslength gt amp amp thispropsgetbannersdataitemsmap thiscreatetable", "num": "9820", "d": "5/2017"}, {"title": "optimize defaultprops proptypes", "body": "want request feature report bug feature proptypesstring default string current behavior two statics representing thing kind trivial sometimes people write useless code design ca nt tell author wanted expected behavior make defaultprops work proptypes one static two statics much easier hoc developers customize modify remove", "num": "9818", "d": "5/2017"}, {"title": "fix function arity issues", "body": "flow supports verifying number arguments passed function enabling feature updating flow master results arity errors x pr reduces errors fix remaining errors", "num": "9817", "d": "5/2017"}, {"title": "returns undefined question thispropsformgetfieldsvalue", "body": "antd chrome window use thispropsformgetfieldsvalue take value form code follows result expect use thispropsformgetfieldsvalue take value form actual result versions react browser os affected issue work previous versions react", "num": "9810", "d": "5/2017"}, {"title": "touchstart preventdefault prevent click event", "body": "want request feature report bug bug current behavior calling synthetic event fails prevent click event also tried nt make difference current behavior bug please provide steps reproduce possible minimal demo problem via similar template div supposed handle hover case process click first time tapped via touch click desktop fine however tapping touch mobile device using dev tools touch emulation trigger immediately jsfiddle touchstartpreventdefault allowed mobile touchaction none class somebutton extends reactcomponent constructor props super props render return however move listener use normal dom api everything works jsfiddle javascript class somebutton extends reactcomponent constructor props componentdidmount thiselemaddeventlistener touchstart e gt thisstatehover epreventdefault works thissetstate hover true render return gt expected behavior first time processed treat hover wait process event next pointer mouse events processed versions react browser os affected issue work previous versions react react sure previous react versions chrome android chrome mac emulating touch firefox mac emulating touch", "num": "9809", "d": "5/2017"}, {"title": "problem unstablerendersubtreeintocontainer refs", "body": "want request feature report bug report bug current behavior use usual technique portals unstablerendersubtreeintocontainer also need control portal children using legacy syntax know problem async called refs used undefined due async nature current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open browser console press add button got error causes according logs called callback expected behavior needed defined general case completely completed render know pattern using callback preferred solution quite complex combination two libraries nt access callback someone interested libs reactautocomplete reacttether may way avoiding rerender saving refs first render versions react browser os affected issue work previous versions react using", "num": "9808", "d": "5/2017"}, {"title": "fiber ref instance cause error", "body": "want request feature report bug sure maybe bug current behavior debugger find versions react browser os affected issue work previous versions react use", "num": "9807", "d": "5/2017"}, {"title": "react ignores css grid properties style attribute", "body": "want request feature report bug bug current behavior using css grid properties element style attribute work react ignores current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react include css grid properties css properties rendered dom react intends support subset css made clear documentation supported properties enumerated nothing suggest certain properties work others wo nt without error message warning indicating ignored versions react browser os affected issue work previous versions react react", "num": "9805", "d": "5/2017"}, {"title": "react wo nt work behind proxy basic authentication", "body": "hello react application running local intranet apps run behind web proxy basic authentication userpassword checked ad server accessing react app directly via unauthenticated proxy everything works fine access app proxy authentication enabled manage fetch first page every request performed using fetch fails unauthorized basically authorization header hashed credentials passed fetch request works seamlessly", "num": "9804", "d": "5/2017"}, {"title": "reactchildrenmap children child index gt got childtypename undefined ie browser", "body": "title want get child element tag name success chrome browser failed ie browser", "num": "9803", "d": "5/2017"}, {"title": "arraymap render", "body": "code screen console show problem please thanks", "num": "9802", "d": "5/2017"}, {"title": "nonsensical code official react blog post submit pr official react blog", "body": "hey guys back came across post official react blog contained code example made sense implement intent expressed blog post cancel promise componentwillmount setstate invoked component mounted ignored back remembered saw tweet today topic gaearon blog post question nonsensicalnonworking code js use promises may need wrap promise order make cancelable const cancelablepromise makecancelable new promise r gt componentsetstate cancelablepromise promise gt consolelog resolved catch reason gt consolelog iscanceled reasoniscanceled cancelablepromisecancel cancel promise makecancelable defined istarkov const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val promisecatch error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true try blog post even referenced stackoverflow answer given points pretty ridiculous nonworking nonsensical example code afaik using schemes rely promiserace limitationsissues see way cancel promises afaik cancellable promise es proposal withdrawn right way promise cancellation userland promise implementations recommend bluebird promise library details see", "num": "9801", "d": "5/2017"}, {"title": "componentwillreceiveprops bug", "body": "subj jsbin example jsx class child extends component componentwillreceiveprops props consolelog thispropsdatalength consolelog propsdatalength render return null class parent extends component constructor props super props thisspeed componentdidmount render return", "num": "9800", "d": "5/2017"}, {"title": "different behaviour different devices", "body": "first react app must admit however app works perfectly fine chrome access safari safari mobile bit lazy function link returns array content rendered component based props father state get called every time user changes filters yet safari rendering happens less regularly function returns right object safari render method lazy safari check adding removing coding filter produce changes safari code repo", "num": "9799", "d": "5/2017"}, {"title": "conditional rendering working react native", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9794", "d": "5/2017"}, {"title": "reactchildrenisvalidchildren similar reactisvalidelement", "body": "want request feature report bug feature current behavior method available expected behavior returns true passed opaque children object", "num": "9791", "d": "5/2017"}, {"title": "chrome scroll position preserved", "body": "want request feature report bug bug possibly react google chrome current behavior scroll position preserved children element list change order bug seems apply react keys child elements unchanged current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo available broken case resize demo window scrollable already scroll bottom window click refresh button left window scroll automatically expected behavior window keep scroll position working case resize demo window scrollable already scroll bottom window click refresh button right window scroll expected behavior versions react browser os affected issue work previous versions react tested react version older versions tested affected browsers osx google chrome official build osx beta google chrome official build beta affected osx beta firefox osx beta safari version", "num": "9789", "d": "5/2017"}, {"title": "two things nt like react", "body": "want request feature report bug feature css love react ca nt help notice vue components one thing better writing css way css looks syntax importantly access css properties looks elegant simple create module css ca nt react feature every solution knows invented syntax walkaround recently learned nt obvious bind event handler argument performant time seems natural way pass arguments event handler way create new function every time component renders possibly damage performance alternative know seems less apparent supposed bind way try pass arguments ways good way solve", "num": "9787", "d": "5/2017"}, {"title": "synthetic eventphase nt reflect synthetic phase", "body": "want request feature report bug bug current behavior called bubbling phase current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo shows event phase react incorrect bubbling must capturing moreover also shows bubbling phase probably reason syntethic event expected behavior calls capturing phase calls bubbling phase versions react browser os affected issue work previous versions react react version os work", "num": "9783", "d": "5/2017"}, {"title": "orphaned doc page", "body": "found page linked anywhere else online docs far tell old page needs removed new page somehow nt added properly", "num": "9782", "d": "5/2017"}, {"title": "question make table date scheduler previous next button react", "body": "", "num": "9774", "d": "5/2017"}, {"title": "make date scheduler week previous next button html table", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9773", "d": "5/2017"}, {"title": "paste event handler invoked focus applied element programmatically", "body": "want request feature report bug bug current behavior clicking element set focus allows onpaste handler invoked expected apply focus element using htmlelementfocus method onpaste handler invoked current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle open console jsfiddle click yellow div focus use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console expected click input element focus press arrow key set focus yellow div programmatically use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console double check paste event firing using dev tools expected behavior expect event handler invoked regardless focus applied element versions react browser os affected issue work previous versions react react react tested macos w chrome v", "num": "9769", "d": "5/2017"}, {"title": "example documentation working", "body": "want request feature report bug bug current behavior example documentation working macos chrome current behavior bug please provide steps reproduce possible minimal demo problem go try filter things entering data input textbox expected behavior filter content versions react browser os affected issue work previous versions react nt know", "num": "9767", "d": "5/2017"}, {"title": "set react dependency amd builds addons", "body": "right react undefined addons may depend createclass documented createfragment reactlinkedinput problem running amd environment without react defined globally lead dependency found probably solved follows manually edit unminified version making work like test modify requirejs systemjs fixtures oneoffs test specifically nt need committed submit pr react core maintainer rebuild minified version process intended repeat automated easy way reproduce tag flarnie andor gaearon ideally making changes code worth someone wants work happy review prs otherwise pick next couple days", "num": "9765", "d": "5/2017"}, {"title": "improve react reactnative sync scripts", "body": "followup work pr sync react www changes current process syncing react facebook www involves running script within www repo would nice relocate script react repo since coupled react build process shims anyway point could better share code eg autogenerated change log react native sync script react sync script updateadd documentation new sync process sync reactnative fbsource changes possible sync react reactnative simultaneously update reactnative sync script autogenerate change log based commits master since last sync something react sync script currently script moved react github share code remove script fbsource react reactnative synced fbsource way react synced www using new central sync scripts updateadd documentation new sync process secondary goals syncing www fbsource similar possible avoid confusion would nice easy noncoreteam members run sync scripts also", "num": "9763", "d": "5/2017"}, {"title": "facing issue load local images react js", "body": "posted issue please check", "num": "9762", "d": "5/2017"}, {"title": "seems legal stuff making things difficult", "body": "hi please make legal language easier understand user friendly anyone use without worry", "num": "9760", "d": "5/2017"}, {"title": "reactlink still using reactproptypes", "body": "want request feature report bug bug current behavior react using reactproptypes even though states going deprecated current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior use proptypes package versions react browser os affected issue work previous versions react", "num": "9755", "d": "5/2017"}, {"title": "createreactclass compiled latest google closure compiler", "body": "trying compile createreactclass latest closure compiler compiler complains related createreactclass npm package needs republished react code ticket spun", "num": "9750", "d": "5/2017"}, {"title": "bug createreactclass work amd environment", "body": "want request feature report bug report bug current behavior unable require module bug seems similar uses without proper calls javascript copied var factory require factory hack grab noopupdatequeue isomorphic react var reactnoopupdatequeue new reactcomponent updater current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle errors jsfiddle expected behavior able load createreactclass without problem versions react browser os affected issue work previous versions react react createreactclass", "num": "9749", "d": "5/2017"}, {"title": "convert elements test objects tomatchobject jest", "body": "want request feature report bug request guidance add feature testing especially jest enzyme current behavior get benefit descriptive jsx must pay cost irrelevant details snapshot tests cause unnecessary updates risk incorrect decisions proposed behavior goal balance effort write tests initially update tests correctly components change replace elements relevant subset props therefore issue convert expected react elements directly test objects especially shallow rendering new deepeventshallowtest pattern see tablec example information see overview status proposed able import string sentinel value ignore children absence children received object given react element return unrendered element test object enumerable see omitted properties including omitted think clearer names willing contribute guidance draft code expects object expect array elements components render react think test cases examples tests enzyme although pending via reacttestrenderer reacttestrenderershallow", "num": "9747", "d": "5/2017"}, {"title": "question listen user events syntheticevents", "body": "hello smile question react synthetic events listen events parent component want track user activity want handle mouse events wheel events etc possible listen event yes yes listen window document events ca nt localize component make event maybe possible localize component using eventtarget thanks", "num": "9746", "d": "5/2017"}, {"title": "reactdomserverrendertostaticmarkup trigger componentwillmount serverside bug avoid", "body": "react reactdom reactrouter calling reactdomserverrendertostaticmarkup serverside trigger componentwillmount one component strange behavior happen components server rendering using recommended way reactrouter routes defining fetchdata attribute call static function component component define static function use react life cycle hooks render client reproduce behavior clone repo visit see server side rendering logs see reducer run means ssr job initialstate build everything fine visit see fetcharticlesrequest fetcharticlerequest note plural see blogarticle component retrigger second time meaning global state affected see object article loading true state initialstate time client receive get error client behavious quite strange componentwillmount call nested route blogarticle blog wondering bug react", "num": "9745", "d": "5/2017"}, {"title": "reactproxy served restrictive csp policy server without throwing error firefox", "body": "want request feature report bug feature current behavior firefox throws error running react application using csp header scriptsrc set self case error looks like content security policy page settings blocked loading resource self scriptsrc set self keyword scriptsrc error message translated error message ff links following row react bundle file reactproxymodulescreateclassproxyjs get rid error ff allowing unsafeeval csp policy dont want current behavior bug please provide steps reproduce possible minimal demo problem via similar template run react application ff browser csp policy scriptsrc set self check console errors expected behavior error handling source code event execution environment allow dynamic evaluation still shows error ff versions react browser os affected issue work previous versions react name reactproxy version firefox version ubuntu", "num": "9744", "d": "5/2017"}, {"title": "android app hangs production mode", "body": "hi currently android app production hangs specific screen touch button even hardware back button works correctly debug mode anyone spot possible problems source quite large nt post code tried show alert hangs enter error screen hangs timeout show alert still able press alert close button alert close app still hangs react version react reactnative", "num": "9743", "d": "5/2017"}, {"title": "question question regarding best practice", "body": "apologies nonestandard git issue nt quite sure else ask working another developer react project using wondering anything wrong bad practice using fat arrow functions hoisted parameters hoisted component class nt set within constructor example class mycomponent extends reactcomponent constructor props super props state name setname e gt thissetstate name etargetvalue colleagues approach class mycomponent extends reactcomponent constructor props super props thisstate name setname e thissetstate name etargetvalue reason use approach automatically scopes within function nt need write additional line bind method within constructor figured ultimately preference worth identically told way first example bad practice thanks advance", "num": "9739", "d": "5/2017"}, {"title": "docs visual realign", "body": "hi folks shot visual realign react docs goals create conservative realign nt controversial still opens opportunity future expansion features heading towards design system avoid major architectural changes best handled separate pr future inspiration graphqlorg gridded sites process mockups minute receive go ahead would work rest elements amp viewport sizes write css scratch thoughts notes moved sidebar right hand side improve readability collapsed noncurrent docs nav categories add intro paragraph first para docs page baseline grid column grid proxima nova current site footer layout would tightened screenshot current one atm fire away comments cc gaearon", "num": "9728", "d": "5/2017"}, {"title": "warning missing key prop array arrays", "body": "believe following bug array div elements without key props correctly result warning array length arrays containing div elements result warning example believe correct behavior array arrays div elements also result warning react firefox", "num": "9727", "d": "5/2017"}, {"title": "react without virtually impossible", "body": "thing like react still use micro apps small portions website need user interaction declarative uis still simplify development lot without setup whole build environment use cases looks definitely overkill know may sound like grumpy grandpa worried true anymore react deprecation need external modules sure need bundle modules browser expose globals ca nt load react cdn write code anymore also using warnings still issued like getdefaultprops used classic reactcreateclass definitions use static property named instead maybe fact bug possibly issues wrong stick react maybe start making react builds specifically environments bundling needed external modules etc", "num": "9721", "d": "5/2017"}, {"title": "passing children propschildren works documented", "body": "either raw react jsx seems children passed property props object instead documented methods separate parameter reactcreateelement enclosed component tags jsx encountered syntax book rather confused book provided explanation syntax find mentioned anywhere react documentation intuitively expected work documented children available propery props object documented reverse possible well passing children propschildren actually supported perhaps explicitly mentioned docs deprecated feature something also asked stack overflow", "num": "9718", "d": "5/2017"}, {"title": "licensing faq suggestion adding links remove ambigity", "body": "referring specifically termination additional patent grant facebook bsdpatents license cause copyright license also terminate unclear copyright license referred quote would directly linking words additional patent grant words copyright license appropriate document possiblepermissible facebook legal team editing note link would facebook oss wide versions react specific licenses", "num": "9716", "d": "5/2017"}, {"title": "add license faq handling patent grant redistribution", "body": "could please add clarification license faq describes rights obligations concerning patent grant redistributing reactjs eg something like redistribute reactjs third party form eg fork modify incorporate product allowed choose bsd license license drop additional patent grant guess yes redistribute reactjs third party form eg fork modify incorporate product possible also transfer additional patent grant receivers derived work guess patent grant license facebook direct receivers formally delete patent grant third party receive license react upstream project facebook license compatible guess yes since patents grant addition", "num": "9715", "d": "5/2017"}, {"title": "bug input type number", "body": "example original value need format take javascript class test extends reactcomponent state value changevalue gt alert thissetstate value render return reactdomrender mountnode", "num": "9712", "d": "5/2017"}, {"title": "rendertostring different result normal render", "body": "used react render entire page server side got errors like one trying render component document using server rendering checksum invalid usually means rendered different component type props client one server render methods impure react handle case due crossbrowser quirks rendering document root look environment dependent code components ensure props client server side client datareactid server datareactid problem ending tags elements rendered using react server rendertostring client render using app component server client", "num": "9708", "d": "5/2017"}, {"title": "object shorthand props", "body": "hi find wanting feature lot name const find pass like would love able use shorthand notation object creation assumes passed component would work like anyone else find worthwhile change", "num": "9707", "d": "5/2017"}, {"title": "bug reactdom still contains reference reactproptypes", "body": "react sends deprecation warning using reactproptypes stack trace points reactdom webpack config im sure surrounding lines code see onchange key", "num": "9704", "d": "5/2017"}, {"title": "functional setstate default docs tutorials first steps guides", "body": "", "num": "9703", "d": "5/2017"}, {"title": "debugid may empty", "body": "want request feature report bug bug current behavior tests sporadically logging warning fail tests log warnings causing flakiness current behavior bug please provide steps reproduce unable consistently reproduce seeing roughly failure rate test suite nt seem patterns around tests fail error expected behavior expect tests either log warning consistently something wrong log warning versions react browser os affected issue work previous versions react appearance warning correlates pretty closely migration node node", "num": "9698", "d": "5/2017"}, {"title": "foo foo shorthand jsx", "body": "want request feature report bug want request feature current behavior currently shorthand jsx props boolean default attributes spread however writing jsx many cases could better shorthand syntax example", "num": "9696", "d": "5/2017"}, {"title": "warn dispatching redux actions componentwillupdate runtime docs", "body": "want request feature report bug feature current behavior component dispatching redux action causing things blow confusing ways instance causing different component get called second time got called led various npes reconciliation process expected behavior would nice anything would trigger update call component would immediately error dev mode even causing different component update case triggering ancestor container update would possible versions react browser os affected issue work previous versions react seeing react chrome macos ca nt say sure code caused bugs previous versions react blame rests code anyway", "num": "9693", "d": "5/2017"}, {"title": "needed simplified chinese documentation", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9692", "d": "5/2017"}, {"title": "better approach", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9690", "d": "5/2017"}, {"title": "createreactclass umd module work amd environment", "body": "undefined", "num": "9689", "d": "5/2017"}, {"title": "postpatch", "body": "basic post changed patch test", "num": "9688", "d": "5/2017"}, {"title": "new test post", "body": "basic post test post", "num": "9687", "d": "5/2017"}, {"title": "new test post", "body": "basic post test going fail", "num": "9686", "d": "5/2017"}, {"title": "document pass args event handlers", "body": "inside loop common want pass param event handler would good thing add doc page also pass args without triggering rerender child component ie creating new function every time", "num": "9685", "d": "5/2017"}, {"title": "reactcomponent undocumented templated class", "body": "see used three template parameters documented nowhere simply could nt find docs able deduce second third types respectively however coud nt figure first template parameter documented anywhere please", "num": "9684", "d": "5/2017"}, {"title": "error document optimizing performance", "body": "reconciliation algorithm react uses diff one tree another determine parts need changed found define reconciliationin opinion reconciliation contains two part diff element tree update actual dom node think picture need reconciliation color red", "num": "9682", "d": "5/2017"}, {"title": "difference clientserver side react rendering latter even", "body": "good day honest fellows fairly new react single page apps really ca nt wrap head around something server routing section stated send indexhtml despite accessing different routes guess ok send file since almost empty usually div tag os something way react injecting html sent server already client side right building different html file sorts clientside routing handled caveats either questions sorry lot difference clientserver side react rendering server side react rendering even would one want clientside routing major one client accesses data via api different route instance redux reducers would kind work right help understand please", "num": "9681", "d": "5/2017"}, {"title": "scrolling gets jammed specific condittions", "body": "see fiddle using chrome bug small problem occurs specific conditions fiddle shows scrollable box halfway color box changed solid color semitransparent color scrolling see seems get little stuck way becomes much apparent using page key scroll colorchange point even repeated pushes page page going semitransparent color solid color works fine expected behavior scrolling nt hitch colorchanging point pushing page supposed scroll box way recreating bug container must positioned absolute relative must zindex set problem occurs going solid color rgba color alpha nt enviorment tested fedoralinux windows behavior seems occur chrome firefox works fine react version", "num": "9680", "d": "5/2017"}, {"title": "onclick unexpected behaviour text selections", "body": "bug current behavior text selection component handler react fires onclick steps reproduce expected behavior onclick fires text selection double click events versions react browser os react latest os macos latest browser chrome latest", "num": "9678", "d": "5/2017"}, {"title": "tutorial", "body": "hi couple questionsrequests regarding tutorial board render function snippets question show later removed winner status make use thisstate value instead thisprop value understand removed later trying follow along understand code seemed inconsistent jumpto function game class discussion reads set xisnext true index move number even number code given reads line read set xisnext true index move number odd number thank", "num": "9677", "d": "5/2017"}, {"title": "error boundaries rendertostring typeerror read property listeners null rendertostring", "body": "want request feature report bug report bug current behavior seeing errors kibana across userbase rendering nodejs current behavior bug please provide steps reproduce possible minimal demo problem via similar template happens react internals nt able reproduce issue struggling create minimal repro searched issue able find gaearonreacthotloader nt exactly helpful nt use react hot loader someone maybe explain type behavior would cause based dig bit expected behavior error versions react browser os affected issue work previous versions react packages react reactdom update could coincided upgrade server node", "num": "9674", "d": "5/2017"}, {"title": "cantt mount text node components", "body": "cantt mount text node components child window edge jsx const somecomponent gt displayed displayed text node break mounting displayed mounting stopped class popoutwindow extends reactcomponent constructor props super props thisstate openedwindow null componentdidmount var win container openedwindow componentdidupdate thisstateopenedwindowupdate thispropschildren render return reactdomrender container throws following error debugging stack trace noticed fragment creation line resulting malformed fragment later trying append malformed fragment dom line fails throws error tried replace fragment span element specific case child window worked could solution", "num": "9667", "d": "5/2017"}, {"title": "react github wiki security issue", "body": "browsing react github wiki noticed following get anyone edit wiki without reviewed edit linked main wiki page", "num": "9666", "d": "5/2017"}, {"title": "dynamically loading scripts components", "body": "access object dynamically loading scripts components class appcomponent extends reactcomponent componentwillmount newprops consolelog new script loadscript consolelog windowgoogle render export default appcomponent dynamic loading google maps script export default class loadscript constructor loadscript gt", "num": "9664", "d": "5/2017"}, {"title": "concern rendering nested array", "body": "find warning given render array nested another case debugging react find used validate children keys function used check child node checked checking nesting array eg objects property named function never called warning message never thrown bug react acquiesce case giving warning message better maybe", "num": "9662", "d": "5/2017"}, {"title": "libjscso segment error android application running low probability", "body": "idebug idebug idebug sl fp idebug ip sp lr pc fffffffe cpsr idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug scr idebug pc fffffffe idebug pc idebug pc idebug idebug fffffffb idebug idebug fffffffb idebug fffffffc idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug idebug fffffffb idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug fffffffa idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug fffffffb idebug fffffffb idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug idebug ffffffff idebug idebug idebug fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffdc ffffffff ffffffff ffffffff ffffffff idebug ffffffec ffffffff ffffffff ffffffff ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug rx vectors idebug map address idebug map", "num": "9660", "d": "5/2017"}, {"title": "rfc onchange oninput nt polyfill oninput uncontrolled components", "body": "nicer name fact propagated highlevel components default name much nicer high level event name generally helpful many newcomers react nt know dom well lot inverse however nt change fact confusing people familiar unfortunately changing would cause confusion everyone already knows react reason like change like get away polyfilling uncontrolled components use case filled kinds imperative code leads edge cases eg readingsetting readingsetting use controlled components nt need touch imperatively therefore wo nt hit edge cases ideally get away reading instead pass directly event handler proposal controlled components polyfilled works like today allowed overfire many events even nothing changed may special fiber rules regarding synchronous flushing optional pass second arg works like one version warns deprecated suggests switching next version works like browser still warns tells use forever optional add gettersetter dom development mode warn used directly uncontrolled components polyfilled works however browser works warns browser differences nt also specify andor warnings suggests implementing listeners cover edge cases switch controlled component polyfilled works however browser works", "num": "9657", "d": "5/2017"}, {"title": "onresize event missing", "body": "get unknown prop warning warning unknown prop tag best tell actually something expected work since browsers support also found post someone discussing behavior looked spec cursory glance apparently tells might actually supported many elements also tells event bit complicated work work looking workaround indeed bug expect would rather fix work around", "num": "9655", "d": "5/2017"}, {"title": "typeerror read property updater undefined", "body": "want request feature report bug bug report current behavior typeerror read property updater undefined reproduce js import react component react import logo logosvg import appcss import axios axios class app extends component constructor super thisstate colors thisonfilechange thisonfilechangebind onfilechange e const setstate render return welcome react thisstatecolorsmap function c const styles height width backgroundcolor chex return export default app cant provide url post guess doesnt matter versions react browser os affected issue work previous versions react chrome version react reactdom", "num": "9654", "d": "5/2017"}, {"title": "reactnative snapshot tests failing locally master branch", "body": "want request feature report bug probably kind bug tests current behavior run two failing snapshot tests failures escape characters seem missing generated snapshot see screenshot current behavior bug please provide steps reproduce possible minimal demo problem via similar template machine latest master branch expected behavior snapshot tests pass passing circleci", "num": "9653", "d": "5/2017"}, {"title": "class comparison works nodeenv production", "body": "would like report bug react typeclass comparison seems work nodeenv set production created repo illustrate bug expect typeclass comparison work regardless nodeenv set", "num": "9652", "d": "5/2017"}, {"title": "testutils documentation missing", "body": "hey ca nt find link testutils documentation anywhere react website going updates omer", "num": "9651", "d": "5/2017"}, {"title": "fiber custom reactfiberreconciler renderer receives old props commitupdate setstate parent component", "body": "hi sure bug probably something wrong want make sure trying create paperjs bridge react based reactartfiber running ubuntu chrome version using hacked version react export know import mean time anyway code app app component method triggers rerender function receives old value btw questions would best place ask learn fiber apart source code import react component react import proptypes proptypes import invariant fbjslibinvariant import emptyobject fbjslibemptyobject import reactfiberreconciler reactdom import paper paper const colors red black green orange brown violet const types layer layer path path circle circle group group tool tool const segments const const layer typeslayer const path typespath const circle typescircle const group typesgroup const tool typestool function getrandomint min max return mathfloor mathrandom max min min class app extends component constructor props super props thisstate strokecolor colors activetool move width height zoom circles id center radius strokecolor black strokescaling false id center radius strokecolor red strokescaling false id center radius strokecolor green strokescaling false addcircle gt const circles height width thisstate const newcircles circles id circleslength center getrandomint width getrandomint height radius getrandomint strokecolor colors getrandomint strokescaling false thissetstate circles newcircles changepathcolor gt const strokecolor thisstate const index colorsindexof strokecolor const nextcolor colors colors thissetstate strokecolor nextcolor gt lt lt lt lt lt lt lt lt lt change strokecolor consolelog strokecolor nextcolor onwheel e gt const activetool zoom thisstate activetool move const delta ewheeldelta edeltay const newzoom delta gt zoom zoom thissetstate zoom newzoom onmovemousedown e scope gt thispoint epoint onmovemousedrag e gt todo thissetstate center etoolviewscrollby thispointsubtract epoint onmovemouseup e gt thispoint null onpenmousedown e gt thispath thispathselected false thispath new paperpath segments epoint strokecolor black fullyselected true onpenmousedrag e gt thispathadd epoint onpenmouseup e gt thispathsimplify thispathfullyselected true render const activetool circles strokecolor height width zoom thisstate const paperprops activetool strokecolor height width zoom onwheel thisonwheel return app tools active tool activetool color circlesmap circle gt class paper extends component componentdidmount const activetool children height width zoom thisprops componentdidupdate prevprops prevstate const activetool children height width zoom thisprops componentwillunmount paperrendererupdatecontainer null thismountnode render consolelog thispropsstrokecolor const height onwheel width thisprops const canvasprops ref ref gt thiscanvas ref height onwheel width return function applylayerprops instance props prevprops todo function applytoolprops tool props prevprops todo function applygroupprops tool props prevprops todo function applycircleprops instance props prevprops propscenter prevpropscenter instancecenter new paperpoint propscenter propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth propsfillcolor prevpropsfillcolor instancefillcolor propsfillcolor function applypathprops instance props prevprops consolelog applypathprops propsstrokecolor lt lt lt lt lt lt lt lt strokecolor change propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth const paperrenderer reactfiberreconciler appendchild parentinstance child childparentnode parentinstance childremove appendinitialchild parentinstance child typeof child string noop string children text eg foo bar invariant false text children already flattened return committextupdate textinstance oldtext newtext noop commitmount instance type newprops noop commitupdate instance type oldprops newprops consolelog commitupdate instance type newprops instanceapplyprops instance newprops oldprops createinstance type props internalinstancehandle consolelog createinstance type props const children paperprops props let instance createtextinstance text rootcontainerinstance internalinstancehandle return text finalizeinitialchildren domelement type props return false insertbefore parentinstance child beforechild invariant child beforechild paperreact insert node prepareforcommit noop prepareupdate domelement type oldprops newprops return true removechild parentinstance child destroyeventlisteners child resetaftercommit noop resettextcontent domelement noop getroothostcontext return emptyobject getchildhostcontext return emptyobject scheduleanimationcallback windowrequestanimationframe scheduledeferredcallback windowrequestidlecallback shouldsettextcontent props return typeof propschildren string typeof propschildren number usesyncscheduling true export default app", "num": "9648", "d": "5/2017"}, {"title": "use localstorage componentwillmount", "body": "learning react js want check authentication token set localstorage component renders currently trying inside componentwillmount method gives warning localstorage defined access localstorage", "num": "9647", "d": "5/2017"}, {"title": "page state changed case nt use setstate", "body": "create class message messagejsx file component testinput behind export default class message extends reactcomponent constructor props super props thisstate text thisshowtext thisshowtextbind showtext consolelog thisstatetext render return class testinput extends reactcomponent constructor props super props thisstate text componentwillmount thissetstate text thispropstext componentwillreceiveprops nextprops thissetstate text nextpropstext testinputproptypes text proptypesarray click click button testinput component push click string state click show click result button message page console state click use setstate method message use react version ps maybe issue like could someone close mine", "num": "9646", "d": "5/2017"}, {"title": "need know react get released", "body": "bug feature search lot internet find release date react please mention tried check raise question forum questions raising thanks kalpana", "num": "9645", "d": "5/2017"}, {"title": "external packages transforming", "body": "want request feature report bug bug current behavior checks shipped browser expected behavior react browserify transform converts actual environment variable react packages x proptypes x createreactclass x reactaddonscreatefragment x reacttransitiongroup", "num": "9641", "d": "5/2017"}, {"title": "rename reacteventlistener reactdomeventlistener", "body": "currently reacteventlistener domspecific module generic sounding name confusing contributors ie confusing let rename reactdomeventlistener pretty easy rename file update resort imports philippspiess working task", "num": "9639", "d": "5/2017"}, {"title": "error element ref created another elements constructor dev environment", "body": "creating element ref inside constructor error thrown production mode dev mode minimal sample error reactowner refs happen dev production modes happening react", "num": "9635", "d": "5/2017"}, {"title": "warning message zindex", "body": "want request feature report bug report bug current behavior warning message current behavior bug please provide steps reproduce possible minimal demo problem via similar template setting css style property zindex numerical value warning displayed warning tag owner passed numeric string value css property value treated unitless number future version react expected behavior warning zindex according css mdn versions react browser os affected issue work previous versions react", "num": "9633", "d": "5/2017"}, {"title": "featurerequest make writing css easy", "body": "react need external apis write css quite difficult like event handling react component support css pseudo selectors missing like static block style styles classname pseudo style pathtofilecss component class component", "num": "9632", "d": "5/2017"}, {"title": "react djnogo", "body": "hello use reactdjnogo develop web system meet upload picture use form tag input tag put tags react render function know problem need help thanks much", "num": "9631", "d": "5/2017"}, {"title": "persistant event", "body": "want request feature report bug bug current behavior persistent event broken console prints different values async operation current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior console print value async operation versions react browser os affected issue work previous versions react using react chrome os mac", "num": "9630", "d": "5/2017"}, {"title": "reactinputselection typeerror", "body": "got automated error report sentry relating reactinputselection thought would notify case interest unfortunately know user happened windows nt reactdom", "num": "9628", "d": "5/2017"}, {"title": "ismounted behavior different", "body": "want request feature report bug bug current behavior calling prior versions would return returns believe untested behavior new tests added may check wrong value changing line test exhibit behavior fix would defer setting flag mixins method called component versions react browser os affected issue work previous versions react anything using broken working correctly", "num": "9627", "d": "5/2017"}, {"title": "reactpatents suck", "body": "wrong people puts sort indirect limitation open source project started use react love earth nt right words facebook breaks rules break projects lowest thing ever done facebook maybe code related developer potential abuse", "num": "9623", "d": "5/2017"}, {"title": "proper explanation ref vs controlled input use case state variable react", "body": "went docs react controlled uncontrolled components created simple use case want enforce user enter uppercase values input field first case used ref onchange achieve global object property capture dom node code second case used value property state onchange code docs says controlled component every state mutation associated handler function makes straightforward modify validate user input example wanted enforce names written uppercase letters could write handlechange well validate user input even using state syncing value prop state done first example definitely validating user input done without using state explain one approach better exactly single source truth means important cases using global variable component object accessed throughout component also unnecessarily use value thisstateinput example would call render every keystroke whereas case render called nt performance case better also docs write uncontrolled component instead writing event handler every state update use ref get form values dom well need write event handler like onchange even using ref validate user input run time done case using event handler ref normal use case state variable understanding case option use state variable need update view dynamically thissetstate calls render every time run code grateful someone could clarify three examples enhance understanding concepts", "num": "9621", "d": "5/2017"}, {"title": "warn class function", "body": "want request feature report bug bug current behavior class testwrongproptypes extends component static proptypes return children proptypesstring missing proptypesstringisrequired example react silently skip checking default props setting component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior know order work proptypes definition like warning like proptypesdefaultprops function either property getter prevent errors versions react browser os affected issue work previous versions react discovered react probably behavior also earlier versions", "num": "9620", "d": "5/2017"}, {"title": "reactdomcomponent get compiled reactdomserverdevelopment reactdomdevelopment", "body": "wrong place ask please let know put line like run search build directory appears", "num": "9618", "d": "5/2017"}, {"title": "react webpack socketio", "body": "hi working personal project want use webpackdevserver hot loader dev ssr production reactrouter finding way make things work together anyone already problem try build something like", "num": "9617", "d": "5/2017"}, {"title": "get proptype info component even built", "body": "want request feature report bug feature current behavior unknown current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior would nice something like proptypesgetproptypes component would accept component return proptype definitions work anything including default html element types something like even better would worked elements well seems like could hit element prototype currently ca nt find good way extension retain prop types default component andor way get prop types html elements versions react browser os affected issue work previous versions react reactdom", "num": "9614", "d": "5/2017"}, {"title": "possibility catch startstop pulltorefresh gesture event refreshcontrol component", "body": "want request feature report bug feature current behavior possibility catch startstop pulltorefresh gesture event refreshcontrol component expected behavior would great something like onpullstart onpullend event know moment startstop pulltorefresh gesture related question stackoverflow", "num": "9612", "d": "5/2017"}, {"title": "remove warnings unminified file", "body": "warning accessing proptypes via main react package deprecated use proptypes package npm instead warning lazyrenderbox reactcreateclass deprecated removed version use plain javascript classes instead yet ready migrate createreactclass available npm dropin replacement", "num": "9611", "d": "5/2017"}, {"title": "suggestion return promise", "body": "would nice could return promise resolves component render function return value stateless functional component might complex components need rerender promises get cached resolve", "num": "9610", "d": "5/2017"}, {"title": "onload working tags", "body": "seems attribute nt work tags tags could add support", "num": "9607", "d": "5/2017"}, {"title": "need better warning message proptypes deprication", "body": "problem removal proptypes main react package import lot packages warning message could help track culprit right helpful warning accessing proptypes via main react package deprecated use proptypes package npm instead", "num": "9605", "d": "5/2017"}, {"title": "docs update profiling components chrome timeline", "body": "google chrome dropped shiny new performance tab instead old timeline tab devtools read really much read except timeline panel renamed performance panel better reflect purpose result docs needs updated reflect new changes tested profiling component react app work seems work really matter updating docs submit pr update", "num": "9601", "d": "5/2017"}, {"title": "justificationexplanation immutable props docs", "body": "would nice react docs good concise explanation decided make props immutable developer friends using angular regularly make use technique child mutates data structure owned parent think great docs great job explaining ca nt react way dealing passing callbacks would nice see tangible specific examples exactly problem solved making props immutable", "num": "9599", "d": "5/2017"}, {"title": "setselectionrange function", "body": "want request feature report bug report bug current behavior trying move cursor contenteditable div calling setselectionrange div throws typeerror example code expected behavior caret moved setselectionrange function environments tested react chrome safari macos sierra", "num": "9596", "d": "5/2017"}, {"title": "add support controllist api controllist attribute", "body": "version chrome shipped support htmlmediaelement controllist api extension controllist attribute elements like attribute looks practice react lt support attribute strips warning console could add support new attribute nt pressing issue possible set attribute via javascript ie setting component lifecycle event would nice recognized valid attribute", "num": "9594", "d": "5/2017"}, {"title": "possible component listen events nondescendent elements", "body": "want request feature report bug feature current behavior components attach event listeners eg onclick descendent dom elements way component listen events originating elements descedents use case mind bunch components marked pink borders screenshot control state want state change click happens anywhere purple region could solve moving state parent component renders purple div seems consequence fact eventlistening tree tied render tree components state actually interact", "num": "9593", "d": "5/2017"}, {"title": "really strage error pressing", "body": "work company converting previous server side website react rest services started making components press get following error console exception thrown hook handling onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren also browser jumps completly different url use container components solutions", "num": "9591", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "error uncaught typeerror super expression must either null function undefined really want know thanks much", "num": "9590", "d": "5/2017"}, {"title": "ensure flat bundles nt duplicate code weak minifiers", "body": "minifier nt eliminate constant expressions like uglify way flat bundles currently work would ship two bundles warn prominently case would effectively ship double bundle production", "num": "9589", "d": "5/2017"}, {"title": "ui tracking react", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9588", "d": "5/2017"}, {"title": "input type number decimal number support", "body": "need suggestions probably bug tried using tried step step work tried react posted first bug suggestion", "num": "9585", "d": "5/2017"}, {"title": "examples articles wiki outdatedunmaintained", "body": "referring example came page link example broken look first point react starter kit includes several examples view online github repository", "num": "9583", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "use project show error chrome console thanks everyone", "num": "9581", "d": "5/2017"}, {"title": "fiber returning functions render throw", "body": "jsx class foo extends reactcomponent render return foo class app extends reactcomponent render return foo returns instead accidentally fiber catch", "num": "9577", "d": "5/2017"}, {"title": "bug ref function gets called twice update first mount first call null value", "body": "gaearon arguing functions need called twice due internal implementation details insignificant respect end users use react end user nt care ref functions called work honestly called twice strange perspective enduser knows nothing react internal implementation nt stated end users actually need guard values duplicate calls ref functions complicates enduser code would urge internal implementation modified stop calling ref functions twice", "num": "9574", "d": "5/2017"}, {"title": "error boundary text clear", "body": "error text enhancement request current behavior exception thrown something like printed react caught error thrown fix error code consider adding error boundary tree customize error handling behavior typeerror undefined object evaluating flags error located editor created connect editor connect editor created routercontext div created app app created connect app connect app created routercontext routercontext created router router provider error thrown clear error boundary would great link docs page describes googled react error boundary ended clear answers top hits", "num": "9571", "d": "5/2017"}, {"title": "add dev flag", "body": "want check whether react dev mode would work previous versions react", "num": "9569", "d": "5/2017"}, {"title": "react changed behaviour onchange behave exactly like oninput already oninput available", "body": "official docs say onchange onchange event behaves would expect whenever form field changed event fired intentionally use existing browser behaviour onchange misnomer behaviour react relies event handle user input real time already event fires every keystroke ie oninput nt understand react changed behaviour onchange behave oninput also docs everywhere onchange used specific reason two completely interchangeable react event behaviour actual onchange react intend correct future code", "num": "9567", "d": "5/2017"}, {"title": "getting warning strokelinecap value", "body": "want request feature report bug bug current behavior shows warning strokelinecap value butt nt part spec link current behavior bug please provide steps reproduce possible minimal demo problem via similar template create path strokelinecap pass butt value show warning expected behavior nt show warning versions react browser os affected issue work previous versions react react", "num": "9566", "d": "5/2017"}, {"body": "case application coz home page nt promise calls could catching errors somewhere else many reports issue always caused accidentally caught errors please provide reproducing project think bug react thanks", "d": "5/2017"}, {"body": "using redux provider component containing intlprovider reactintl contains muithemeprovider followed reactrouter start app debug code home page render call works fine till return statement home page contains single render method empty div return fails error navigating page using react router even page navigating nt contain promise calls aware react router call might failing internally could using promise dispatching action push reduxrouter pathname configured path second page since ie specific settings babel include polyfills scenario current babelrc presets react plugins reacthotloaderbabel transformobjectassign input used assist towards finding area issue could would great help meanwhile would work creating subset project minimum reproducible scenario", "d": "5/2017"}, {"body": "neytema able reproduce browser using", "d": "5/2017"}, {"body": "hey neytema experimenting appears reactchilrden utilities filter component children totally clear reactchildren docs intended behavior think might react expert sure looks like could use children prop array normally like iterate functions though", "d": "5/2017"}, {"body": "nodejs frankalbenesius concerned inconsistency pass object type child throw objects valid react child error functions valid react child also far know object example ca nt simply use children array always array flat one", "d": "5/2017"}, {"body": "format code bit better comprehensible use mark like", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "proptypes moved separate package react perhaps file issue", "d": "5/2017"}, {"body": "goto proptypes repo", "d": "5/2017"}, {"body": "want rebase later", "d": "5/2017"}, {"body": "oh hey nt see pr yet pr resolves issues happy help track others", "d": "5/2017"}, {"body": "assume copy pasted incorrectly moreover guess issue related", "d": "5/2017"}, {"body": "directly related react try asking corresponding repo", "d": "5/2017"}, {"body": "ummahusla also think reactform question better shut question also helpless", "d": "5/2017"}, {"body": "coluccini thank take closer look", "d": "5/2017"}, {"body": "likeyakult try", "d": "5/2017"}, {"body": "hey likeyakult try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow mentioned", "d": "5/2017"}, {"body": "ummahusla thank", "d": "5/2017"}, {"body": "aweary ok thank", "d": "5/2017"}, {"body": "completeness works expected firefox android chromium based browsers still get issue", "d": "5/2017"}, {"body": "enoahnetzach became curious comment tested finding peculiar chrome mac emulating touch second example solves issue firefox mac emulating touch neither example works desired record touch events spec clear happen", "d": "5/2017"}, {"body": "adding list safari ios simulated works expected", "d": "5/2017"}, {"body": "hmm bummer thanks everyone digging following produce test case use react produce test case dom fixture manual test suite additionally pr attaches touch listeners local element curious might unexpected sideeffect fixing issue assuming react issue", "d": "5/2017"}, {"body": "nhunzaker thanks based findings far suspect pr might solve issue except firefox mac mobile appears persist regardless would easy way test code", "d": "5/2017"}, {"body": "custom build branch could pull react reactdom react reactdom forked updated gist scripts though wo nt able dig testing later today tomorrow", "d": "5/2017"}, {"body": "nhunzaker thank tested using chrome android chrome emulated touch mac unfortunately behavior seems", "d": "5/2017"}, {"body": "nesmalltown please provide example reproducing issue difficult debug without knowing source code use jsfiddle running latest alpha release", "d": "5/2017"}, {"body": "try little tough give times thanks", "d": "5/2017"}, {"body": "seen happen duplicate package example symlink react build folder pull stable unstable version mistake delete local try assuming building master also run check duplicates", "d": "5/2017"}, {"body": "gaearon thanks example symlink react build folder use windows think nt little confusedyou say delete local react nodemodules try delete think project wo nt workif wrong please let know result unmet peer dependency reactdom npm err peer dep missing react required chaienzyme npm err peer dep missing react required enzyme npm err peer dep missing react required reactcssthemr npm err peer dep missing react required reactrouter npm err peer dep missing react required reactrte npm err peer dep missing react required reactscroll npm err peer dep missing react required reactsparkscroll npm err peer dep missing react required reactsparkscrollrekapi npm err peer dep missing react required redboxreact npm err peer dep missing reactdom required chaienzyme npm err peer dep missing reactdom required reactaddonstestutils npm err peer dep missing reactdom required reactrte npm err peer dep missing reactdom required reactscroll npm err peer dep missing reactdom required redboxreact npm err code", "d": "5/2017"}, {"body": "install back npm ls react say", "d": "5/2017"}, {"body": "gaearon delete react reactdom says unmet dependency reactdom npm err missing react required myprojectname npm err missing reactdom required myprojectname npm err code reinstall unmet peer dependency reactdom npm err peer dep missing react required chaienzyme npm err peer dep missing react required enzyme npm err peer dep missing react required reactcssthemr npm err peer dep missing react required reactrouter npm err peer dep missing react required reactrte npm err peer dep missing react required reactscroll npm err peer dep missing react required reactsparkscroll npm err peer dep missing react required reactsparkscrollrekapi npm err peer dep missing react required redboxreact npm err peer dep missing reactdom required chaienzyme npm err peer dep missing reactdom required reactaddonstestutils npm err peer dep missing reactdom required reactrte npm err peer dep missing reactdom required reactscroll npm err peer dep missing reactdom required redboxreact npm err code", "d": "5/2017"}, {"body": "eh annoying npm nt print ls unsatisfied peer dependencies basically saying two reacts somewhere pretty sure suggest check sources pane browser console looking see two different directories delete extra one good sure react bug please provide project reopen", "d": "5/2017"}, {"body": "fixed part", "d": "5/2017"}, {"body": "nt sound like react issue react nt concerned network requests like question single page apps encourage ask stackoverflow since use issue tracker bugs features react try keep focused", "d": "5/2017"}, {"body": "success chrome browser", "d": "5/2017"}, {"body": "failed ie browser", "d": "5/2017"}, {"body": "hey possible failing references constructor function component nt supported ie edge taking example reference component constructor references name property constructor supported ie", "d": "5/2017"}, {"body": "sounds like problem control components rendered children get around using static property like instead relying environment provide name check instead since aspect environment react ca nt really control going close hopefully workaround helps", "d": "5/2017"}, {"body": "place return inside function", "d": "5/2017"}, {"body": "thanks ematipico", "d": "5/2017"}, {"body": "warning console says wink recommend reading warnings often point mistakes", "d": "5/2017"}, {"body": "posts docs folder send prs would help clarified part code nt make sense", "d": "5/2017"}, {"body": "clarify problems think idibidiart pointing uses hoisted throws error since used top file example uses promise nt resolve never called use resolve get cancellation behavior chained wrapped promise nt called canceled may point confusion code within original promise execute matter cancellation nt prevent wrapped promise resolving manages whether called resolve", "d": "5/2017"}, {"body": "happy take pr changing working approach think copy pasted comments nt know person merged tested", "d": "5/2017"}, {"body": "worth noting even bluebird cancellation mean original promise callback execute code produces sideeffects cancellation prevent control whether called could continue using example moved callback instead promise", "d": "5/2017"}, {"body": "aweary gaearon hoisting aside copiedpasted code blog post plane yesterday without paying attention point aweary stated obvious things make sense relative promise spec premise cancel promise invalid relative promise spec possible without buildtime ast manipulation callback function conditionally nullify based cancellation state outer scope consider intent may preempt straight forward bluebird userland implementations support kind cancellation misnomer imo called cancellation promise cancellation could continue using example moved setstate callback instead promise need add promise resolution cancel called would actually reached like js const makecancelable originalpromise gt let hascanceled false const wrappedpromise new promise resolve reject gt return promise wrappedpromise cancel hascanceled true const cancelablepromise makecancelable new promise resolve reject gt settimeout gt alert original promise eg fetch promisified async call executed successfully resolve call unsuccessful reject cancelablepromise promise gt consolelog resolved would use setstate catch reason gt consolelog iscanceled reasoniscanceled cancelablepromisecancel cancel", "d": "5/2017"}, {"body": "fixed comment say cancel", "d": "5/2017"}, {"body": "gaearon please make sure take pr language informative misleading nothing like cancel promise exist es land", "d": "5/2017"}, {"body": "also purpose blog post believe setstate cancellable originalpromise assume xhr call async call returns promise way blog post would actually make sense would demonstrate avoid setting state promisified xhr promisified async call bound succeed component unmounted updated example code comments makes sense", "d": "5/2017"}, {"body": "idibidiart thanks explaining well aware promises really cancelable language somewhat misleading need repeat every comment agree point feel strongly welcome submit pr better job explaining snippet even replace snippet another snippet would make sense happy review merge high priority issue us pretty old blogpost ton work bring react closer sorry spending time time soon happy take contributions", "d": "5/2017"}, {"body": "huge pain point es spec discussions still arrived consensus cancellable promise huge issue promise spec scream roof top painful cancellable promise would simplify much concurrent code make things fun anyway reason came besides tweet reminding encountered latest version react native exnavigation apps built without using setstate anywhere get warning saying call setstate unmounting component etc trace goes back exnavigation replaceimmediately forgot exact method name frustrating problem react general think need surfaced taken care moving react navigation going invest time fixing warning getting exnavigation feel common problem react common enough cry loud feel free set context maybe misimagining consequence lack cancellability promise spec hmm close happy make pr aweary nt get first edit look closely fiber try understand whether concurrency model provides changes picture managing concurrency react maybe part fiber get new better concurrency primitives look thanks", "d": "5/2017"}, {"body": "hmm close happy make pr aweary nt get first feel free submit pr close change landed", "d": "5/2017"}, {"body": "great done aweary please feel free review", "d": "5/2017"}, {"body": "mutates array react nt automatically clone props refer array inside method make work like expect make sure create new array", "d": "5/2017"}, {"body": "oh thank try", "d": "5/2017"}, {"body": "help noob thank match", "d": "5/2017"}, {"body": "include content relevant problem please include code sample description expect actually happens", "d": "5/2017"}, {"body": "types invalid children looking test tried using", "d": "5/2017"}, {"body": "aweary think wants validate whether value child thing anything valid childchildren certain values rendered eg reactdom dounan want", "d": "5/2017"}, {"body": "think wants validate whether value child yep sorry clear initial issue anything valid childchildren agreed issue specifically react blackbox data structure react doc reactchildren provides utilities dealing thispropschildren opaque data structure want writing library provides validation logic props state would like skip validation given opaque children data structure currently checking key prop children possible developer reassigns value children prop different prop key key state instead would nice able simply check value react opaque children data structure think might possible use use existing children helper functions via sort trycatch seems brittle hacky", "d": "5/2017"}, {"body": "agreed issue specifically react children blackbox data structure react doc reactchildren provides utilities dealing thispropschildren opaque data structure actually opaque structure today treated nt try parse asis instead use helpers speculating opaque children structure may introduced future however assume even may opaque structure values still valid children opaque children structure simply valid value may performancesemantic differences probably primarily used jsx entirely sure trying build tl dr thing invalid children value valid child probably always", "d": "5/2017"}, {"body": "tl dr thing invalid children value valid child probably always true think objects invalid children react children actually opaque structure today treated nt try parse asis instead use reactchildren helpers right currently children could arbitrary data structure primitive however devs supposed care need treat black box value think suggested name might slightly throwing thread offtopic let give black box value type really looking function given arbitrary value returns true iff value type current world function really possible implement value could anything string number react element etc thinking specific use case sure function would cover cases think might need think bit however function would cover majority cases need cover still think would nice type utility function example throw exception", "d": "5/2017"}, {"body": "true think objects invalid children react yeah partly used treated bad idea deprecated unthinkable objects tostringed future something similar also important note objects still valid children used components handle children manually depending target children value valid child like native elements support string values children determined generic fashion value valid always", "d": "5/2017"}, {"body": "question nt really verify valid children validate value returned reactdom example pass function child component uses render callback ca nt return function think reasonable defer validation react since provide much better error messages cases especially inclusion render stack feel providing api testing would encourage library authors implement error messaging sure good thing general case mentioned add invariant isvalidelement condition could used validate child rendered need could use handle really need", "d": "5/2017"}, {"body": "depending target children value valid child makes sense need could use reactisvalidelement typeof handle really need probably approach take thanks aweary syranide info advice", "d": "5/2017"}, {"body": "isolate bug react manipulations dom methods issue", "d": "5/2017"}, {"body": "ca nt reproduce windows", "d": "5/2017"}, {"body": "unable reproduce osx running chrome", "d": "5/2017"}, {"body": "sorry seems issue chrome able reproduce bug using dom manipulations manually interested", "d": "5/2017"}, {"body": "writing css way css looks syntax importantly access css properties sure mean react works fine regular css write css file work component issues", "d": "5/2017"}, {"body": "yes facebook sells hard modular css concept somewhat least think best practice writing css one file many solutions css js point none looks natural vue", "d": "5/2017"}, {"body": "modular css concept referring facebook makes references css react docs particular mean sells hard mean create react app allow importing css files js css js solution way split single css files many files associated components however files pure css special modular extensions used sure differs regular way write css", "d": "5/2017"}, {"body": "recommended correct wrong write css component seem thanks explanation guess puzzled different css solutions question asked", "d": "5/2017"}, {"body": "cssmodules option import regular css styledjsx like write css markup inline styles used way always dynamic styling", "d": "5/2017"}, {"body": "fateriddle recommended never recommended way add dynamic styles calculated javascript eg style depends prop know sure people use places even instead class names entirely subjective react users write style css correct wrong write css component seem nothing react either describing nonstandard extension css called css modules neither endorsed facebook even currently supported create react app probably saw third party project required react even recommended officially", "d": "5/2017"}, {"body": "bind way try pass arguments ways good way solve", "d": "5/2017"}, {"body": "hope discussion helps general recommend sticking examples official documentation using create react app curate people use react different ways really say react pretty flexible indeed use normal css recommend css modules inline styles even vuelike solutions like styledjsx method binding hope link bjrmatos provided helps would add nt worry unless actually causing performance issues app lot misinformation performance suggest spend time microoptimizing things unless dealing specific problem cheers", "d": "5/2017"}, {"body": "intentionally hid addon wo nt make react might wise later maybe", "d": "5/2017"}, {"body": "nt know clear precedent put docs deprecated moved features warnings feature current version react add note docs leave accessible main navigation fully movedremoved current released version react orphan doc pages eventually moving gists setting redirects think may orphaned doc pages features still fully removed react", "d": "5/2017"}, {"body": "yea point sure worth bringing back guess still searchable google", "d": "5/2017"}, {"body": "think need momentjs", "d": "5/2017"}, {"body": "thank eightfeet try", "d": "5/2017"}, {"body": "hey fgseneres try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "5/2017"}, {"body": "hey bkilrain thanks report appears chrome behaves though sure chrome bug jsfiddle reproducing issue without react shows issue react able reproduce behavior chrome safari works fine without react firefox", "d": "5/2017"}, {"body": "since clear whether expected based spec behavior inconsistent major browsers nt think something addressed react recommend maybe referring chrome bug tracker may already issue could nt find one though file new one hope helps", "d": "5/2017"}, {"body": "tutorial step static version scroll step see actual working example", "d": "5/2017"}, {"body": "yep seems expected ideas changing wording clearer please send pull request take look", "d": "5/2017"}, {"body": "cc gaearon thoughts approach regarding www cc yungsters thoughts regarding fbsource", "d": "5/2017"}, {"body": "sounds like great idea feel free replace command", "d": "5/2017"}, {"body": "replied please read user guide", "d": "5/2017"}, {"body": "issues repository read developers like lawyers use feature requests bug reports please feel free contact lacker questions license much clarification could provide", "d": "5/2017"}, {"body": "thanks dan apologize pollution lacker please readjust legal language used react make easier users use react without worrying legal trouble thanks", "d": "5/2017"}, {"body": "thanks reporting might want release addon via npm look", "d": "5/2017"}, {"body": "although solution tried exactly environment jsfiddle posted leave reference fix error adding following diff diff nodemodulescreatereactclasscreatereactclassjs createreactclassjs use strict var factory require factory var react require react hack grab noopupdatequeue isomorphic react var reactnoopupdatequeue new reactcomponent updater", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "ahhh continue close jochenberger notifications receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "thanks proposal pedrottimark test renderer recently got new api provides easily traversable tree structure describing rendered elements see could implemented userland using api looking draft seems like might pretty straightforward", "d": "5/2017"}, {"body": "aweary thank link pr method follow effort proposed use expected value test objects converted unrendered elements think call method say stay userland depends react element reason support recommend minimize devdependencies similar type testing answers concerns github twitter snapshot testing solution seems like diplomacy technology problem appears jest ava remaining work packages hurt feelings team needs close issue focus finishing fiber", "d": "5/2017"}, {"body": "lfirek looking excellent resource source understanding implement synthetic events potential resources perhaps archaic trivial example handling touch events using would follows", "d": "5/2017"}, {"body": "solution problem want handle events childschilds", "d": "5/2017"}, {"body": "thank clarifying question lfirek hear saying would like child component bubble events parent component would use correct", "d": "5/2017"}, {"body": "found mistake blog function call server rendering blogarticle function called change hook function willmount didmount cheers", "d": "5/2017"}, {"body": "part react please file instead probably using indirectly react hot loader", "d": "5/2017"}, {"body": "thanx gaearon indeed hot loader issue thus perspective non issue since keep server config restrictive without unsafeeval production settings", "d": "5/2017"}, {"body": "possibility use property initializer syntax mentioned official documentation guess bad practice otherwise would pointed warning fact experimental syntax end decide use dedicated babel plugin enable feature notre", "d": "5/2017"}, {"body": "ewanvalentine side note nt need pass constructor calling base class unless nt need props inside constructor fine well", "d": "5/2017"}, {"body": "thanks folks really helpful", "d": "5/2017"}, {"body": "screenshots look little fuzzy reason mockups pdfs docshomepdf docspdf", "d": "5/2017"}, {"body": "cc lacker would interested", "d": "5/2017"}, {"body": "long right sidebar follow page scrolling smile technique useful sidebar taller viewport like one currently online", "d": "5/2017"}, {"body": "need bundle modules browser expose globals ca nt load react cdn write code anymore already bundled versions need include tags maybe fact bug maybe file", "d": "5/2017"}, {"body": "maybe file tried reproduce failed turned intentionally using development version react minified version therefore set react issued warning manfacepalming closing thank", "d": "5/2017"}, {"body": "interesting thanks explaining", "d": "5/2017"}, {"body": "sure passing children documented totally equivalent", "d": "5/2017"}, {"body": "gaearon aweary think added alternative passing yes would happy work pr", "d": "5/2017"}, {"body": "laumair hope nt mind opinion matter one answered question definitely think worth documenting believe important clarify whether people encouraged use approach yes circumstances example personally see logical reason one would ever use beauty jsx similarities syntax xmlhtml even worse used appropriate love make first pr repo nt mind course", "d": "5/2017"}, {"body": "anderssonchristian please feel free submit pull request believe important clarify whether people encouraged use approach yes circumstances example personally see logical reason one would ever use take drops matter personal preference time prefer using times pass string child end using version", "d": "5/2017"}, {"body": "lacker saw mentioned relation patentlegal shenanigans pinging", "d": "5/2017"}, {"body": "appreciate questions would prefer use react issue tracker use bug reports feature requests best venue legal matters suggest reach lacker private planned collect feedback thanks", "d": "5/2017"}, {"body": "please email legal fbcom get touch worked faq best people respond also talk lacker concerns", "d": "5/2017"}, {"body": "gaearon thanks", "d": "5/2017"}, {"body": "gaearon got auto reply unsupported email alias team unable receive reports channel maybe internal alias", "d": "5/2017"}, {"body": "general suggest asking lawyer concerned specific issues like nt know faq exhaustive would nt want tell hey hang wait clarification bring questions others like internal legal team see straightforward would build faq detail", "d": "5/2017"}, {"body": "lacker thanks engagement yes already making decision official statement facebook redistribution would good anyways", "d": "5/2017"}, {"body": "tags rendered server side", "d": "5/2017"}, {"body": "believe also issue order attributes html element using rendertostring get different order attributes using client side rendering also gives error", "d": "5/2017"}, {"body": "got fixed problem date object server used timezone", "d": "5/2017"}, {"body": "yes want something like future please see", "d": "5/2017"}, {"body": "think line current code changed use instead april commit perhaps version reactdom working date maybe change nt released yet", "d": "5/2017"}, {"body": "oh bvaughn think turned manual proptype definition instead referencing proptypes", "d": "5/2017"}, {"body": "right alil using updating likely close moment everything works", "d": "5/2017"}, {"body": "react reactdom error still exists flushed nodemodules yarn restarted server npm list reactdom everything looks date still got errors", "d": "5/2017"}, {"body": "acdlite bvaughn react europe need volunteer look", "d": "5/2017"}, {"body": "funkjunky feel taking", "d": "5/2017"}, {"body": "sure need bit patient sure read bit needs done contribute never really contributed open source project outside work", "d": "5/2017"}, {"body": "sorta excited participate alil mentioned patched grepped reactproptypes appears cleaned everywhere close wait next release thanks help everyone", "d": "5/2017"}, {"body": "worries run something else want tackle feel free reach happy run getting things setup way finding code best", "d": "5/2017"}, {"body": "thanks nhunzaker may well mention grep found tests errors still mentioning reactproptypes", "d": "5/2017"}, {"body": "update tutorials x tutorialmd pr first step guidesexamples x todojs pr x markdownjs pr docs x state lifecylces pr x conditional rendering pr x forms pr x pr x lifting state pr x thinkinginreact pr x compositionvsinheritance pr x optimizingperformance pr x context pr x higherordercomponent pr x integratingwithotherlibraries pr x reference events pr", "d": "5/2017"}, {"body": "searching finding putting prs find getting tedious last per cover rest docs", "d": "5/2017"}, {"body": "think got", "d": "5/2017"}, {"body": "thanks jordanpapaleo might better git history done single pr think gaearon", "d": "5/2017"}, {"body": "hi ca nt imagine precisely outcome goal reveal intent communicate method async lead subtle bugs devs read carefully docs meanwhile screams method async functional programming spread many javascripter heart fp description could say succintly emulating fluxredux namings rule thumb update docs would say need read previous state update use lambda update state regardless existing one object version could stay", "d": "5/2017"}, {"body": "idea would many started know would get done last night least small easy approve prs gearon please let know acceptable merge thanks", "d": "5/2017"}, {"body": "fiber presentation heard non functional approach may going away examples function format would good case defer gearon", "d": "5/2017"}, {"body": "seen come using enzyme investigating briefly see proxying think enzyme ruled cause", "d": "5/2017"}, {"body": "seeing another issue react logging warning messages tests", "d": "5/2017"}, {"body": "issue test log full warnings ideas fix", "d": "5/2017"}, {"body": "hard fix without reproducing project", "d": "5/2017"}, {"body": "sure airbnb seeing happen test runs test files apparent pattern try recreate best sure able come consistent failure", "d": "5/2017"}, {"body": "create reproducing project tomorrow case giving error every test project", "d": "5/2017"}, {"body": "nt look good two reacts causes sorts issues please ensure one copy try", "d": "5/2017"}, {"body": "thanks dedupe properly see helps", "d": "5/2017"}, {"body": "sorry nt realize standalone jsx repo jsx milestone close", "d": "5/2017"}, {"body": "understand headache run well lifecycle well documented since redux operates state well guess sure needs done", "d": "5/2017"}, {"body": "lifecycle well documented perspective one component happens lifecycle method triggers ancestor update big question mind seen work cases blow situations nt really know", "d": "5/2017"}, {"body": "really sure agree issue would argue state changes lifecycle methods always bad would also think state changes would run redux store change already happened lifecycle methods invoked caused invoke ultimately seems granted little information additional reducer listening action dispatched triggered lifecycle methods first place rather rely react tell made error redux least seems like asking suggesting original issue", "d": "5/2017"}, {"body": "take look react docs chinese working progress", "d": "5/2017"}, {"body": "chinese translation react updated docs outdated longer maintained related discussion people need badly", "d": "5/2017"}, {"body": "need chinese document", "d": "5/2017"}, {"body": "would right fix modules really meant oneoffs sure plan support amd unless easy fix", "d": "5/2017"}, {"body": "umd module generated", "d": "5/2017"}, {"body": "gaearon nt really understand code coming bundled looks like works react globally defined must bug surely", "d": "5/2017"}, {"body": "unfortunately really intend post new versions manual fiddling browserifyed bundles tack onto global fix would manual looks like works react globally defined must bug surely looking umd bundle yes looks like bug disputing works browser main reason made bundles high priority issue love see fix", "d": "5/2017"}, {"body": "see", "d": "5/2017"}, {"body": "think nt tested edit wups changed react react", "d": "5/2017"}, {"body": "lgtm", "d": "5/2017"}, {"body": "try preparing change based versions checked know sound like much fun", "d": "5/2017"}, {"body": "gaearon branch", "d": "5/2017"}, {"body": "yep", "d": "5/2017"}, {"body": "may know files generated even edited get one running etc get minified file source file edited instead", "d": "5/2017"}, {"body": "generated hand oneoff think make changes silly send pr nonminified version minify hand", "d": "5/2017"}, {"body": "pull request sent tried one requirejs amd environment nt found problems please check dan abramov notifications generated hand oneoff think make changes silly send pr nonminified version minify hand receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "problem every addon", "d": "5/2017"}, {"body": "progress upgrading problematic module encountered dan abramov notifications problem createreactclass every addon receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "amd broken reactdomminjs reactdom makes impossible use requirejs rise replace cause normally components reactdomminjs name guess", "d": "5/2017"}, {"body": "sound like related issue file new issue project reproducing", "d": "5/2017"}, {"body": "gaearon sounds like issue resolved released", "d": "5/2017"}, {"body": "yes plan fix", "d": "5/2017"}, {"body": "oh know even plans perfect create new issue case", "d": "5/2017"}, {"body": "referring issue thread nt sound related described please file new issue problem experienced minimal reproducing example", "d": "5/2017"}, {"body": "excuse please could avoid creating issues repositories unless real issue", "d": "5/2017"}, {"body": "problem problem syntax different callback created time renders cases fine however callback passed prop lower components components might extra rerendering generally recommend binding constructor using property initializer syntax avoid sort performance problem cases fine generally recommend another way causing performance problem related problem comes passing param event handlers loop know trick extract another component js class itemlist extends reactcomponent constructor props super props render return thispropsitemsmap item gt onclick itemid consolelog clicked item itemid class button extends reactcomponent constructor props super props render return onclick thispropsonclick thispropsitemid ok got state could well make function component instead right nope back square one new function constructed every render mean recommended switch function components class components soon take functions props use function components would decrease lot really smarter move never use function components avoid convert classes uncommon function components start totally noninteractive get event listeners personally think gon na go whatever makes readable code worry performance notice performance problems would really nice clear confusion would make sense recommend using add work section able compare functions whole point right", "d": "5/2017"}, {"body": "kinda first parameter type note currently ca nt use intersection types like", "d": "5/2017"}, {"body": "could please point internal source file defines could nt find", "d": "5/2017"}, {"body": "flow codebase weirdly guess react codebase yet partially typed", "d": "5/2017"}, {"body": "strange thing thank much try work pr update documentation pretty confusing try get deeper react", "d": "5/2017"}, {"body": "react documentation nt section flow fully sure would like document however section react flow website help", "d": "5/2017"}, {"body": "gaearon section react flow website guide present entire api reference yes think react section flow currently react docs section typechecking proptypes explains reactproptypes deprecated react opinion comes way encourage usage typescript flow static typechecking hence part reason flow section react documentation think", "d": "5/2017"}, {"body": "wording react doc really unfortunate nt say deprecated say moved deprecating moving separate package although agree general think flowts better way open new guide called static type checking shows use react flow typescript describes main api definitions would like work", "d": "5/2017"}, {"body": "gaearon yes would like help much", "d": "5/2017"}, {"body": "understanding diff algorithm reconciliation two different things diff algorithm figures nodes tree changed reconciliation occurs parts tree know changed diff process react uses update real dom elements component fewest amount mutations", "d": "5/2017"}, {"body": "react rendering html server side client side isomorphic application server side rendering html created server sent client eg nunjucksexpress client side rendering html created browser js ex angularjs react traditionally client side rendering see reactdom render target app first render app inside target app client sends api requests server receives data needed component rerendered screen serverside rendering server handles initial render user first request app server receives request renders required component html string sends response client client render server also send state yout app along response client use initial state important preload data generating html want client also access data otherwise markup generated client wo nt match server markup client would load data", "d": "5/2017"}, {"body": "thanks answer difference client server side rendering gets rendered would want serverside transfer building operations client server free client load correct routing logic clientserver sides differs guess really nt use serverside routing always giving back blank file huh data comes api routes rerenders data spa ways things nt understanding precise routing logic using different browser api overriding one request page per route server please correct wrong", "d": "5/2017"}, {"body": "yes idea right server side rendering html document prepared server delivered browser client load less use server side routing using reactrouter set reactrouter inside server url request comes match url routes match make component string return response client using router client side guess concern rendering different components based url changes data fetched like way said json react rerender dom new data react longer navigating different html pages remote server instead change components single page", "d": "5/2017"}, {"body": "ok thanks got answers needed kind overall picture anyone wondering useful materials topic medium article github project", "d": "5/2017"}, {"body": "ca nt reproduce chrome works expected even sure could possibly cause seeing effectively working outside react except scrollevent sure nt caused chrome plugin problem occurs going solid color rgba color alpha nt sounds like chrome bug opacity causes element become stacking context possibly bug edit testing chrome", "d": "5/2017"}, {"body": "tested chrome lag noticeable basically ignores scroll input completely however syranide pointed seems chrome issue bug react also feels like scrolling rgba color kind jaggy compared solid color used", "d": "5/2017"}, {"body": "ps unless transient bug chrome may helpful beware overuse", "d": "5/2017"}, {"body": "sorry tried times take react code whenever bug disappeared jsfiddle still well thanks anyways keep good work", "d": "5/2017"}, {"body": "thescottyjam problem would mind reposting issue chrome tracker think happy seem like expected behavior especially trivial example", "d": "5/2017"}, {"body": "reported thanks", "d": "5/2017"}, {"body": "thescottyjam excellent disable smooth scrolling flag chrome work expected probably nt see disabled windows", "d": "5/2017"}, {"body": "workaround react router onclick workaround example export const onclick gt let clicktime let pos x return onclick gt onmousedown nativeevent e gt clicktime datenow posx ex posy ey onmouseup nativeevent e gt datenow clicktime lt amp amp posx ex amp amp posy ey amp amp onclick link", "d": "5/2017"}, {"body": "hey ax looks like expected behavior reference highlight text trigger event clarify expect different behavior", "d": "5/2017"}, {"body": "hm right confused", "d": "5/2017"}, {"body": "board render function snippets question show later removed winner status make use thisstate value instead thisprop value yea guess bit confusing right going removed showing intermediate stage still exists could remove code snippet show alone people ca nt quickly check made first bunch changes correctly could omit contents methods nt changed say something like less distracting could maybe add comments like think jumpto function game class discussion reads set xisnext true index move number even number code given reads xisnext step false true line read set xisnext true index move number odd number guess bit confusing number even causing condition ternary evaluate think code right would explicit would like help issues editing tutorial", "d": "5/2017"}, {"body": "hi gaearon thanks quick response think original solution second question regarding xisnext perfectly fine think needed wrap head around however still unsure first question explanation states change board takes squares via props proceeds use board render guess unsure fine use replaced function referring two sets squares one particular array element handed game vs entire array passed game thank", "d": "5/2017"}, {"body": "explanation states change board takes squares via props line referring line specifically replace thisstatesquares thispropssquares board rendersquare rest transformation done yet covered right code snippet regarding unsure thisstatesquares fine use calculatewinner nt touched method yet removing part code right ahead delete code calculating status board render function nt make sense change code right deleting maybe better way rephrase clarify one time snippet looking meant final version code one three changes applied delete constructor board replace thisstatesquares thispropssquares board rendersquare replace thishandleclick thispropsonclick board rendersquare next steps fix issue", "d": "5/2017"}, {"body": "happens use component implements one subcomponents throws error update description expected real error message also non truncated stacktrace", "d": "5/2017"}, {"body": "page deleted unfortunately wikis work could conceivably delete completely common issue", "d": "5/2017"}, {"body": "gaearon thx quick response wikis still possible permissions checking github project management found small checkbox saying restrict editing users teams push access public wikis still readable everyone possible quite strict way anyhow thx", "d": "5/2017"}, {"body": "see case think would work us mostly edit wiki contains community resources official docs strict write access", "d": "5/2017"}, {"body": "perfectly valid pass nonreactelements component children example sourced handy way defer rendering child component instead needing example fetch user parent see usecases means since children anything checking make sure nt arrays would nt make much sense would limit ways children could used likely break backwards compatibility existing apps", "d": "5/2017"}, {"body": "totally understand point thanks much reply case scenario common usage write code like still little confused array variablelength structure different function clearly declared key provided help optimisation rerendering otherwise warning given case better follow convention warn developers clear avoid confusion like rerender performance affected indeed hand case even developers provide unique key item nt think improvement performance possible react optimisation handle thanks reply", "d": "5/2017"}, {"body": "yeah definitely agree particular usecase could confusing really common error seen various forms library perspective developer really want pass data shaped nested arrays sort checking coercion children would prevent likely result confusion way get exactly put case would suggest making parent component want pass nested arrays flattening way users component nt account", "d": "5/2017"}, {"body": "yeah totally agreed giving warning suggest add unique key nested arrays without optimisation help make sense seems said making parent component flattening best choice moment thx", "d": "5/2017"}, {"body": "gt fact propagated highlevel components oninput bubbles like get away polyfilling uncontrolled components could link src code polyfilling instead pass value directly event handler think great change change api controlled components onchange works like oninput one version one version mean maybe typo next version works like browser still warns tells use oninput forever please dev mode uncontrolled components add oninput maybe add something doc ref prop set oninput necessity use ref cases", "d": "5/2017"}, {"body": "oninput bubbles believe means propagated lot people use higher level components one version next version react work currently deprecation warning would imagine warnings devonly", "d": "5/2017"}, {"body": "deecewan thanks share believe means propagated lot people use higher level components thanks misunderstand next version react work currently deprecation warning would imagine warnings devonly next sentence uses word next version sentence uses one version confuse", "d": "5/2017"}, {"body": "sebmarkbage previously brought separating uncontrolled controlled inputs entirely guys seemed generally agree might good time longer relevant ie uncontrolled reactenhanced implementation controlled behavior could possibly even package imho going removing attribute whitelists specialcasing native inputs seems like step direction regarding vs unless imeissues hiding seems fine seems like generally good react naming convention components change also checkboxesradios etc would still report value change via right", "d": "5/2017"}, {"body": "syranide think vs also interesting avenue explore overloaded means eg could actually name lazily load impl details example make configurable scope bunch things user space could therefore kind wanted talk events isolation decouple concerns", "d": "5/2017"}, {"body": "sebmarkbage entirely sure mean sounds like thought topic perhaps would idea settle unique event name say etc way weird ifthisthenthat behavior events behave differently depending mode input free implement behavior exactly best suits us worry quirks may problem original events asis untouched add another one sure needs align perhaps big deal access polyfilled event uncontrolled inputs probably come handy sometimes", "d": "5/2017"}, {"body": "trueadm proposed thing new name bit confusing changing nice would nice able fire event even nothing changed something might changed leaves deduping user code already state available rather forcing implementation keep state accessible dedupe every time also simplifies implementation burden thinking bit right complex polyfills events really things polyfill override eg implementation listens events fill gap browsers fixing adding support presumably huge implementation burden seems likely eventually use alone world would seem like completely unnecessary overhead custom event", "d": "5/2017"}, {"body": "sebmarkbage browser vendors going make behave like current let change name like said proposal idea going case makes complete sense align awesome behaviour future day remove additional polyfills altogether lot people using react world instead actually one people back wrote first react app warn going change also warn change semantics", "d": "5/2017"}, {"body": "really general concept change allows simplifying really complicated polyfill also actively encouraging folks use better controlled input pattern really encourage ya please give full major version warn add entire form library ecosystem react built top behavior onchange custom inputs copy onchangevalue pattern", "d": "5/2017"}, {"body": "looking post linked post seems actually use onresize ie browsers still sure wording spec initiated report issue talk window also iframes maybe excluded close issue since use polluting list issues someone comments certainly interested", "d": "5/2017"}, {"body": "bug need bind use arrow function callback", "d": "5/2017"}, {"body": "may related version installed ran got following message outdated snapshot snapshot header found jest introduced versioned snapshots ensure developers project using version jest please update snapshots upgrade jest going try see helps", "d": "5/2017"}, {"body": "pretty sure figured jest installed globally reason think used run tests react even though packagejson uninstalled global version jest ran tests master pass", "d": "5/2017"}, {"body": "issue caused react hot loader unfortunately currently good workaround", "d": "5/2017"}, {"body": "interesting everything works set production including react hot loader", "d": "5/2017"}, {"body": "rhl disables production", "d": "5/2017"}, {"body": "guess nt understand determines running production rhl still works start app like", "d": "5/2017"}, {"body": "relies envification provide instructions bundling production note suitable production server", "d": "5/2017"}, {"body": "nt think intentional probably accidentally removed website index updated", "d": "5/2017"}, {"body": "flarnie tagging since probably bring back part", "d": "5/2017"}, {"body": "find", "d": "5/2017"}, {"body": "gaearon thanks lot", "d": "5/2017"}, {"body": "sure related also noticed react docs deindexed google search facebookgithubio higherorder components nothing", "d": "5/2017"}, {"body": "weird problems reported google search seems like separate issue", "d": "5/2017"}, {"body": "thanks omerts gaearon flagging put back main navigation also noticed shallow renderer section seems outdated sure missed update nt cherrypicked something fixing separate diff", "d": "5/2017"}, {"body": "know import reactfiberreconciler mean time supported way moment using fork seems reasonable meantime btw questions would best place ask learn fiber apart source code fine nt looked specific question yet", "d": "5/2017"}, {"body": "ahh found bug commitupdate api changed working working code thanks quick reply gaearon add questions soon", "d": "5/2017"}, {"body": "problem specific paperjs works jsx structure paperjs instances created even though child instance created problem create new yet paperjs automatically creates new empty adds path end instead would like create parent instance children might stupid question way reverse process calling createinstance next problem change example entire paper tree rerendered executing unnecessary calls need set optimize rightbest way basically could completely skip piece code also trying figure write tests paperjs supports nodecanvas offers importexport svg json advice", "d": "5/2017"}, {"body": "bhumisukhadiya view helpful", "d": "5/2017"}, {"body": "bhumisukhadiya accessing windowlocalstorage", "d": "5/2017"}, {"body": "alexintosh bhumisukhadiya right must use", "d": "5/2017"}, {"body": "hey bhumisukhadiya try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow serverside rendering accessing might throw error server usually safest dom", "d": "5/2017"}, {"body": "sure trying think might bit confused state works need synchronize two different component states instead let parent component state pass props child stay sync suggest revisiting lifting state similar section react tutorial since look like bug close issue hope links help", "d": "5/2017"}, {"body": "particular example see parent component mutated array passed parent component part recommend mutation much suggest go tutorial fully explains exact issues", "d": "5/2017"}, {"body": "think reason happened changed state object matter sub parent component thank advice go reading tutorial", "d": "5/2017"}, {"body": "yes correct", "d": "5/2017"}, {"body": "record forum", "d": "5/2017"}, {"body": "specific date mind hoping get summer", "d": "5/2017"}, {"body": "acdlite pr ca nt find code", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "mean also need addons already", "d": "5/2017"}, {"body": "look addons see addons use need think already proxying", "d": "5/2017"}, {"body": "think already proxying require reactfoo point release decouple almost addons keep existing react removes lib", "d": "5/2017"}, {"body": "added list description shows packages use nt include either add ones use", "d": "5/2017"}, {"body": "let add necessary", "d": "5/2017"}, {"body": "fixes please let us know worked", "d": "5/2017"}, {"body": "looks good thanks quick turnaround", "d": "5/2017"}, {"body": "tackle", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "code using tried replicate ca nt get warning given warning said assume passing string first tag link get error pass number", "d": "5/2017"}, {"body": "using gsap style value set let say value number fixed changing zindex auto warning nt show see string try get back project put code", "d": "5/2017"}, {"body": "hey ashokkumarsand thanks taking time write suggestions introducing new api handling css may provide value could also introduce significant overhead affect performance bundle size currently bunch community driven projects implement api similar requesting glamor aphrodite styledcomponents fela since problem difficult solve within react many highlyperformant stable solutions exist community going say something wo nt included recommend checking reactiflux discussreactjsorg discussion topic hope helps", "d": "5/2017"}, {"body": "use way", "d": "5/2017"}, {"body": "could describe details issue error logs share jsfiddle", "d": "5/2017"}, {"body": "use issue tracker bug reports feature requests need help getting something working please use suggested resources cheers", "d": "5/2017"}, {"body": "hey trejgun thanks taking time write issue problem seeing due event persistence never actually updating passed input inside component enter number like event target new number since new value nt tracked nt changed react reverts back original value keeping input controlled would expect fork example track state appropriately updates change event handler see get expected behavior case hope helps", "d": "5/2017"}, {"body": "aweary thanks answer basically saying change order helpers thanks helps", "d": "5/2017"}, {"body": "fixed locally splitting ismountedmixin two js var ismountedpremixin componentdidmount function thisismounted true var ismountedpostmixin componentwillunmount function thisismounted false installing post spec mixed life ca nt find right repo pr though", "d": "5/2017"}, {"body": "use react unfortunately would recommend anyone else till issue patent rubbish would decent read google microsoft apple ok well good billions dollars fight needed companies nt ridicules unacceptable book", "d": "5/2017"}, {"body": "thanks feedback case might wrong idea patent grant means published faq hope helps", "d": "5/2017"}, {"body": "let say text field typed something text field later want get value something like html field stores value get element value called uncontrolled input done react well using react render input field tell initial value let say prefill input still need leave editable something like put cursor input try type nothing happen every time type react component rerender react see value supposed type first char like value becomes react overwrite controlled input specify value order update value must also specify onchange callback input event callback new suggested value input something like class mycomponent extends component constructor props super props makes controlled component hope explanation helps bit understand update state every time change input", "d": "5/2017"}, {"body": "used old engine stack switched use new engine fiber master uses instead however still uses stack moment", "d": "5/2017"}, {"body": "hi soutomario check", "d": "5/2017"}, {"body": "read need note production point function replaced empty shims save code size work dom components accept props current release pass unknown props plan future releases rely whitelists currently ca nt find good way extension retain prop types default component andor way get prop types html elements explicitly use props component declare pass though benefit writing explicitly outer component since react check inner component anyway", "d": "5/2017"}, {"body": "well trying get around warning thrown unknown property types sounds like future releases ok guess ignore thanks", "d": "5/2017"}, {"body": "future releases end dom see something like dom would recommend fixing components cause rather figure trying get around warning contains link explaining fix", "d": "5/2017"}, {"body": "yeah looking way get prop types span whatever building property provider course populating proptypes nt exist becomes difficult thing could come proptypes defined send everything let react sort type proptypesgetproptypenames proptypesgetproptypes method would make things like ideseditors easier implement", "d": "5/2017"}, {"body": "thing could come proptypes defined send everything let react sort pretty much intend dom integration work", "d": "5/2017"}, {"body": "valeriik possible meant open issue reactnative repo instead", "d": "5/2017"}, {"body": "sure sorry fault", "d": "5/2017"}, {"body": "worries", "d": "5/2017"}, {"body": "please read blog post add link warnings next version", "d": "5/2017"}, {"body": "application nt use reactproptypes reactcreateclass still gives warnings", "d": "5/2017"}, {"body": "means one dependencies use try update", "d": "5/2017"}, {"body": "observation using react typescript typical wildcard import react gets translated interoprequirewildcard enumerates react type causing warning displayed even nt actually use proptypes", "d": "5/2017"}, {"body": "oh interesting thanks sharing", "d": "5/2017"}, {"body": "gaearon general recommendation pattern pattern common among typescript developers lot get warning", "d": "5/2017"}, {"body": "sounds reasonable proptypes thing sure way prevent", "d": "5/2017"}, {"body": "see way specifying imports explicitly like wish mentioned somewhere migration guide recommended way import module way js babel shows warning", "d": "5/2017"}, {"body": "return promise sounds similar let keep discussion prototype slightly different approach might revisit future", "d": "5/2017"}, {"body": "cool true nt using componentwillmount mean stateful", "d": "5/2017"}, {"body": "issue bit general discussion", "d": "5/2017"}, {"body": "zabojad calling onload try class app extends component render return get svg loaded img loaded console", "d": "5/2017"}, {"body": "flaque nt passing function though passing result expression case one immediately calls evaluates see says nothing whether original issue reproducible confused counterexample", "d": "5/2017"}, {"body": "davezuko good point wrong class app extends component sayhello consolelog hello render return definitely print hello good catch davezuko", "d": "5/2017"}, {"body": "think might duplicate btw", "d": "5/2017"}, {"body": "hi confirm passing function attr indeed looks like duplicate thank looked", "d": "5/2017"}, {"body": "plan improve wording possible us give details warning message ca nt know code importing however easy click message chrome see expanded stack trace stack trace show library warning coming actionable item add gif showing blog post link blog post warning cc flarnie", "d": "5/2017"}, {"body": "gaearon wow fast thanks reply running electron node chromium redux react extensions enabled seeing anything stack trace since warning stop show call stack past", "d": "5/2017"}, {"body": "see perhaps electron nt retain full stacks warnings", "d": "5/2017"}, {"body": "gaearon sorry found need check pause caught exceptions directly watch call stacks left put others issue", "d": "5/2017"}, {"body": "aah explains thanks", "d": "5/2017"}, {"body": "node nt retain full stacks warnings use react ssr", "d": "5/2017"}, {"body": "might practical look stacks client side alternative could override throw error immediately catch print stack dirty works", "d": "5/2017"}, {"body": "quick question sure right place ask though see printwasted reactaddonsperf chrome timeline", "d": "5/2017"}, {"body": "help", "d": "5/2017"}, {"body": "sort first bullet point undoredo time travel makes perfect sense bit confused second third bullet points tracking changes determining rerender seem like thing nt reason tracking changes determine rerender also angular buddy swears angular supports mutating props able correctly track changes rerendering necessary apps created react far needed undo shouldcomponentupdate beyond two things seems reasons immutable props correct wrong unlike frameworks react requires explicit function call tell rerender setstate forceupdate would way child component since mutated props question possible mutate props would effect components higher tree nt immutable props thing gives us oneway data flow nt benefits terms predictability passing mutable pointer mutated parent child alike common pattern frameworks think worth lines docs detailing allowed trade offs involved something semiequivalent react talking feel could write submit pull request want make sure facts straight", "d": "5/2017"}, {"body": "welp setselectionrange nt extend contenteditable things bad closing sorry", "d": "5/2017"}, {"body": "ran today well inside statelesspure component reflifecycle events really wont work", "d": "5/2017"}, {"body": "ran issue today support andor standardized way specify unknown props html attributes described etc would awesome", "d": "5/2017"}, {"body": "arsduo reference issue description pr sure circle back issue merges", "d": "5/2017"}, {"body": "thank much may nathan hunzaker notifications githubcom wrote arsduo reference issue description pr sure circle back issue merges receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "ran issue aswell would amazing", "d": "5/2017"}, {"body": "forgive nt understand question nt expected mentality react pass data props purple parent would onclick event would change state children elements would state associated props example class purple extends reactcomponent constructor props super props thisstate purpleclick false handleclick thissetstate prevstate gt purpleclick prevstatepurpleclick render return would allow time click outer purple container effect state children", "d": "5/2017"}, {"body": "please provide project reproducing problem", "d": "5/2017"}, {"body": "guess need details probably jsfiddle minimal code required see error would help may want use template", "d": "5/2017"}, {"body": "website designed different people currently going code noticed different programming styles look code right componenta defined function componentb defined extending reactcomponent class componentb extends reactcomponent render const propa thisprops componentc function componentd class okay mix function class options must component extend reactcomponent", "d": "5/2017"}, {"body": "totally fine use functions classes code looks wrong js class componentb extends reactcomponent render const propa thisprops missing statement js class componentb extends reactcomponent render const propa thisprops return lt nt forget return fix issue regardless strange get proper error one posted byproduct earlier mistake diagnosis correct three questions fix help sure see one error console see one error check pause caught exceptions chrome sources pane try find original error think code might swallowing original error eg block", "d": "5/2017"}, {"body": "explen language arrival home see message greek thenk stay withe k help please afraid sent mymail android \u03c4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7 \u03bc\u03b1\u0390\u03bf\u03c5 dan abramov notifications githubcom totally fine use functions classes code looks wrong class componentb extends reactcomponent render const propa thisprops missing return statement class componentb extends reactcomponent render const propa thisprops return lt nt forget return fix issue regardless strange get proper error one posted byproduct earlier mistake diagnosis correct three questions fix help sure see one error console see one error check pause caught exceptions chrome sources pane think code might swallowing original error eg try catch block receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "gaearon using chrome apparently much better logging firefox chrome see console warning exception thrown hook handling onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren invariant objectonsetchildren callhook emitevent objectonsetchildren reactdomcomponentsetchildrenforinstrumentation reactdomcomponentupdatechildren reactdomcomponentupdatechildren reactdomcomponentupdatedomchildren reactdomcomponentupdatecomponent uncaught typeerror read property componentwillenter undefined constructorperformenter arrayforeach native constructorcomponentdidupdate measurelifecycleperf callbackqueuenotifyall reactreconciletransactionclose reactreconciletransactioncloseall reactreconciletransactionperform reactupdatesflushtransactionperform uncaught promise typeerror read property componentwillleave undefined constructorperformleave arrayforeach native constructorcomponentdidupdate measurelifecycleperf callbackqueuenotifyall reactreconciletransactionclose reactreconciletransactioncloseall reactreconciletransactionperform reactupdatesflushtransactionperform", "d": "5/2017"}, {"body": "updated packages npm made uncaught typeerror read property componentwillenter undefined go away main error occures line happens non production mode notice nextchildismounted imply executed child component mounted happen", "d": "5/2017"}, {"body": "need example could run debug", "d": "5/2017"}, {"body": "ca nt help nt provide code reproducing issue delete issue template", "d": "5/2017"}, {"body": "please provide information looking report bug make feature request", "d": "5/2017"}, {"body": "cc aweary nhunzaker", "d": "5/2017"}, {"body": "seems work fine", "d": "5/2017"}, {"body": "thanks report clarify mean said nt work hard debug sure behavior expecting behavior seeing peteotaqui showed appears work fine decimal values controlled components", "d": "5/2017"}, {"body": "aweary meant type decimal field goes blank", "d": "5/2017"}, {"body": "share jsfiddle reproducing behavior use template also verify version react using sounds like bug existed older release", "d": "5/2017"}, {"body": "thanks flagging nobody really maintaining wiki pages lot stuff outdated plain recommended try find good examples put instead", "d": "5/2017"}, {"body": "deleted broken link bigger issue pages looking official completely abandoned wonder someone community would taking care cc mrscobbler markerikson tylermcginnis would interested helping think prune examples articles wiki pages outdated overly complicated repos add good beginner midlevel content long free add separate section paid content high quality", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "course", "d": "5/2017"}, {"body": "sorry issue tracker react issue please file appropriate repository thanks", "d": "5/2017"}, {"body": "looks like bug happen", "d": "5/2017"}, {"body": "looks like minimal validation behind flag latest alpha release paths nt hit since nt even check function though edit check actually fine still forget invariant works sometimes also check undefined actually crash try return seems like another issue try changing example crash tab", "d": "5/2017"}, {"body": "warning link cause infinite loop might crash tabbrowser gaearon example showing returning cause infinite loop screenshot showing endless barrage errors open separate issue like", "d": "5/2017"}, {"body": "infinite loop probably", "d": "5/2017"}, {"body": "got thanks function issue think would fixed invariant checks moved block added correct code path warning done elsewhere", "d": "5/2017"}, {"body": "right treat unknown types empty special case since almost always bug early return nt think decided unsupported values either warn treat empty throw", "d": "5/2017"}, {"body": "one disadvantage throwing versus warning requires extra check production null edit guess already null check", "d": "5/2017"}, {"body": "think using warning would make easy components silently fail existing behavior throw well validation logic already bundle dead code right safely move outside check", "d": "5/2017"}, {"body": "actually ask could make type render work various components foo goo hoo etc need conditionally render right use class foo extends reactcomponent render return foo class goo extends reactcomponent render return goo class hoo extends reactcomponent render return hoo class app extends reactcomponent render consolelog foo switch thispropswhattorender case foo return case hoo return default return match reactdomrender documentgetelementbyid container would work instead could use map method components array", "d": "5/2017"}, {"body": "happy continue discussion however unless something old issue cover encourage create duplicate issues way demand attention", "d": "5/2017"}, {"body": "seems related discussion able extract anything actionable", "d": "5/2017"}, {"body": "get message meant stable release using alpha releases please prepared pieces place yet including docs new features", "d": "5/2017"}, {"body": "gaearon used create react native app structure merged back web project seems latest version react native depends beta version react tried downgrade reactnative version xcode project stopped working", "d": "5/2017"}, {"body": "oh see realize particular error message displayed old reconciler rn still uses get fixed please ignore part error boundaries feature available rn yet", "d": "5/2017"}, {"body": "gaearon mentioned versions bad config run", "d": "5/2017"}, {"body": "fine alpha version package really relevant contains little code nt worry still confused message gets printed though provide exact sequence steps reproduce", "d": "5/2017"}, {"body": "particular confused saying use rn", "d": "5/2017"}, {"body": "gaearon trying universal codebase main code powers ios app different entry points log bug app", "d": "5/2017"}, {"body": "see check version using sure using rn apps fine using supported right", "d": "5/2017"}, {"body": "gaearon ok interested downgrading supported version version must used well since could advise working tuple compatible versions tried downgrading warning output tried specifying wanted react ended installing anyway yarnlock something messed workflow", "d": "5/2017"}, {"body": "sounds expected caret means install latest version major want lock project need put without caret", "d": "5/2017"}, {"body": "would work previous versions react think nongoal something implement devtools side duck type checks etc providing boolean argument inject call enough", "d": "5/2017"}, {"body": "one thing need ensure highlights dev mode even react thinks prod mode example set nt uglify thus get deoptimizations caused code dev blocks", "d": "5/2017"}, {"body": "also opposite show dev uglify nt set tricky", "d": "5/2017"}, {"body": "think fixed bringing", "d": "5/2017"}, {"body": "maybe tomocchino provide historical context think time decision made years ago work consistently browsers confusing people coming web platforms would expect change event fire every change case react bigger issue fail handle change soon enough controlled inputs never update leading people think react broken team went calling retrospect might better idea polyfill keep name rather change behavior another event ship sailed long time ago might revisit decision future would encourage treat quirk react dom get used pretty quickly hope helps event behaviour actual onchange useful apps anyway quoting mdn different browsers always agree whether change event fired certain types interaction would want app rely far alternatives go react gives pretty much kind behavior use instead browser", "d": "5/2017"}, {"body": "warning getting proptype warning indicates likely using third party component proptype definition restricts round square see react nt warn using svg react library provides component", "d": "5/2017"}, {"body": "seems like issue issue react", "d": "5/2017"}, {"body": "hey using specific library provides component doable using context common choice theming small example showing accomplish asking specific ui library better asking issue tracker support forums", "d": "5/2017"}, {"body": "using reactcloneelement", "d": "5/2017"}, {"body": "hello sure understanding correctly could buttongroup component rendering children child props nt color props pass color props buttongroup button component", "d": "5/2017"}, {"body": "yeah use provide default props children demonstrated context frequently used theming popular ui libraries technically unstable api consider using provide good abstraction use case issue tracker meant bug reports feature requests additional support usage questions recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow feel free continue current discussion though clarifying questions", "d": "5/2017"}, {"body": "nhunzaker reason using loose equality checks text inputs", "d": "5/2017"}, {"body": "believe relic dealing edge cases number inputs short touch value property number inputs whatsoever chromesafari unexpected things like drop trailing decimal places clear invalid input etc needs go added condition specifically check type nt remove check wrapping text fixtures something review later today", "d": "5/2017"}, {"body": "sent pr sorry trouble", "d": "5/2017"}, {"body": "react mark component pure setting ispurereactcomponent property true even extend purecomponent base class nt ever define internal flag defining components extend may lead unexpected behavior future releases", "d": "5/2017"}, {"body": "currently method hint component pure impure seems weird decide include party component extends nt know whether impure whether use parent component", "d": "5/2017"}, {"body": "currently method purcecomponent hint component pure impure alternatively write implementation even share across codebase", "d": "5/2017"}, {"body": "probably talking different stories imagine need component find npm registry include root component however nt know whether component implements render method like case component impure change render result even though stays problem without reading source code unable tell impure impossible make decision whether let extends react share mechanism explicitly detect component purity result almost components inherit implement based props state finally impacts performance", "d": "5/2017"}, {"body": "gray zhang notifications githubcom probably talking different stories imagine need component find npm registry include root component however nt know whether component implements render method like case component impure change render result even though stays problem without reading source code unable tell impure impossible make decision whether let extends react share mechanism explicitly detect components purity result almost components inherit implement based props state finally impacts performance receiving subscribed thread reply email directly view github", "d": "5/2017"}, {"body": "gaearon heard screen reader users jsfiddle keyboardscreen reader accessible also remember l\u00e9onie watson talking chris codepen open issue also demos running githubpages react projects already also help plus allow developers inspect output browser npminstalling localserverrunning decide want tinker esp case often reason phone wo nt run stuff local network laptops house fine external githubpages example server help devs phones like mine view stuff browsers idea issue phone something noticed working stuff work", "d": "5/2017"}, {"body": "gaearon yes github would probably best moment asking around different blind programmer lists far found online js environment accessible code editor frankly use site see app look like finished tutorial code finished form somewhere code editor really least issues though lack button link names much important ca nt even see working example tutorial looks like see long line button could label buttons like blank square square x square put buttons table rather using css would whole lot accessible tictactoe needs square layout table element way get screen readers thanks", "d": "5/2017"}, {"body": "sorry previous comment said js fiddle jsbin excepting edit box", "d": "5/2017"}, {"body": "jsbin better ux easier use nt really matter live examples pretty easy see", "d": "5/2017"}, {"body": "gaearon hi dan progress", "d": "5/2017"}, {"body": "using windows would like get community help", "d": "5/2017"}, {"body": "get ask help place close find solution share reopen", "d": "5/2017"}, {"body": "like keep open keep track broken", "d": "5/2017"}, {"body": "getting error nesmalltown tried fixing made progress nt fix fully obviously workarounds rather real fixes anyway error solution replace files pattern regex error solution replace files pattern string error solution make change lets build process get farther c rootapps v modulesreactmain npm run build reactbuild build c rootapps v modulesreactmain npm run versioncheck amp amp node scriptsrollupbuildjs reactbuild versioncheck c rootapps v modulesreactmain node scriptstasksversioncheckjs starting reactdevelopmentjs umddev name provided external module proptypescheckproptypes optionsglobals guessing checkproptypes name provided external module proptypes optionsglobals guessing proptypes name provided external module createreactclassfactory optionsglobals guessing factory complete reactdevelopmentjs umddev starting reactproductionminjs umdprod name provided external module proptypes optionsglobals guessing proptypes name provided external module proptypescheckproptypes optionsglobals guessing checkproptypes name provided external module createreactclassfactory optionsglobals guessing factory complete reactproductionminjs umdprod starting reactdevelopmentjs nodedev complete reactdevelopmentjs nodedev starting reactproductionminjs nodeprod complete reactproductionminjs nodeprod starting reactdevjs fbdev complete reactdevjs fbdev starting reactprodjs fbprod complete reactprodjs fbprod starting reactdomstackdevjs fbdev reactbaseclasses imported srcisomorphicreactjs could resolved treating external dependency npm err windowsnt npm err argv c c run build npm err node npm err npm npm err code elifecycle npm err reactbuild build npm err exit status npm err npm err failed reactbuild build script npm run versioncheck amp amp node scriptsrollupbuildjs npm err make sure latest version nodejs npm installed npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err npm run versioncheck amp amp node scriptsrollupbuildjs npm err get information open issue project npm err npm bugs reactbuild npm err nt available get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err c rootapps v modulesreactmainnpmdebuglog however seen getting error nt know fix rather sense replacement make many files giving workaroundbased approach anyway maybe someone else figure next step us poor windows people deserted linux mac devs", "d": "5/2017"}, {"body": "venryx thanks attempt say pattern regex nt find typo", "d": "5/2017"}, {"body": "build windows issue two parts first part rolluppluginalias related issue take look rolluprolluppluginalias pr solve part fixed rolluppluginalias repository could use temporary solution create paste scriptsrollupbuildjs replace second part windows path replaced require string replace modules replacemodules rolluppluginreplace breaks windows path used could normalize replacemodules paths replace use rolluppluginreplace js use rollup repalce plugin windows paths breaks string dos nt replace function normalizereplacemodules maptoreplace const newmap objectkeys maptoreplace foreach key gt newmap key maptoreplace key replace g return newmap getplugins const replacemodules modulesgetdefaultreplacemodules bundletype objectkeys replacemodules length gt normalizereplacemodules make effect windows paths replace pluginsunshift replace normalizereplacemodules replacemodules lt venryx nesmalltown teemosauce ccsang please confirm solve issue", "d": "5/2017"}, {"body": "mhhegazy greate work thanks lot really much appreciated", "d": "5/2017"}, {"body": "mhhegazy btw execute commands follow fiberdebugger doc get error error srcindexjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcindexjs module found reactdom webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcappjs error srcappjs module found reactnooprenderer webstormworkspacereactfixturesfiberdebuggersrc srcappjs error reactdraggabledistreactdraggablejs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactdraggabledist reactdraggabledistreactdraggablejs error reactdraggabledistreactdraggablejs module found reactdom webstormworkspacereactfixturesfiberdebuggernodemodulesreactdraggabledist reactdraggabledistreactdraggablejs error srceditorjs module found react webstormworkspacereactfixturesfiberdebuggersrc srceditorjs error srcfibersjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcfibersjs error reactmotionlibtransitionmotionjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactmotionlib reactmotionlibtransitionmotionjs error reactmotionlibstaggeredmotionjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactmotionlib reactmotionlibstaggeredmotionjs failed compile error srcindexjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcappjs error srceditorjs module found react webstormworkspacereactfixturesfiberdebuggersrc srceditorjs error srcfibersjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcfibersjs error srcindexjs module found reactdom webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found reactnooprenderer webstormworkspacereactfixturesfiberdebuggersrc srcappjs error createreactclassindexjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulescreatereactclass createreactclassindexjs think loader ca nt find corresponding modules press click linked module name ide find dist directory little confused know solve", "d": "5/2017"}, {"body": "nesmalltown work desired environment looks like env file nt make effect environment take spin get back related issue build end diffs table build succeed", "d": "5/2017"}, {"body": "nesmalltown run commands cmd powershell bash webstorm run run cmd try run webstorm take look", "d": "5/2017"}, {"body": "mhhegazy works methanks lot smiley", "d": "5/2017"}, {"body": "success using", "d": "5/2017"}, {"body": "zodiac thanks also trick", "d": "5/2017"}, {"body": "jsfiddle showing fixed latest react alpha release", "d": "5/2017"}, {"body": "closing since realize reported react team aware would appreciated link spare rabbit hole case others stumble upon", "d": "5/2017"}, {"body": "updated issue", "d": "5/2017"}, {"body": "gaearon something need get approved internally create labels close", "d": "5/2017"}, {"body": "really please feel free make experience system use works well", "d": "5/2017"}, {"body": "babel system works us make sure stylistically similar existing names update links need updating", "d": "5/2017"}, {"body": "debated internally really reached consensus going close sorry addressing sooner instead inconsistent would prefer address issues warning system separately future", "d": "5/2017"}, {"body": "okay adjust warning get clarification hypnosphi questions", "d": "5/2017"}, {"body": "changelog git tags updated please reopen comment missed anything", "d": "5/2017"}, {"body": "thanks website still said latest probably want update site rebuild", "d": "5/2017"}, {"body": "bumped website version", "d": "5/2017"}, {"body": "added link class mdn page happy take prs adding links think reasonable solution", "d": "5/2017"}, {"body": "issue react injects properties dynamically actually road probably using stale externs commit fixed seeing", "d": "5/2017"}, {"body": "anmonteiro compiling directly npm externs guess would help thanks", "d": "5/2017"}, {"body": "able find work around running problem using webpackclosurecompiler", "d": "5/2017"}, {"body": "regarding downgrading deprecation warnings addon packages proptypes package warning syntax throw prefer downgrade reacttransitiongroup nt deprecation warnings none addons deprecated standalone builds nt see deprecation warnings think could consider update deprecation proptypes library check addons deprecation warnings release new versions done wondering think gaearon", "d": "5/2017"}, {"body": "transitiongroup deprecation warning let add forgot make sure wording says moved since moving happened looks like never added moved warnings utilities since either moved deprecated adding messages release hopefully meant gaearon", "d": "5/2017"}, {"body": "proptypes package warning syntax throw prefer downgrade removed apis would throw think makes different additionally occurrences warning false positives caused mismatching version react think ever seen code relying pattern practice prefer make quieter looks like never added moved warnings reactaddons utilities since either moved deprecated adding messages release hmm sorry unclear meant talking deprecating meant two entry points specifically two entry points specifically npm ones print deprecation message break unlike packages importing gone example keep working separate discussion think would make sense deprecate addons require changes code example would still work umd build made specifically probably postpone deprecating getters sure approach well reacttransitiongroup nt deprecation warnings replacement promoting two packages instead reach react internals people use", "d": "5/2017"}, {"body": "also ideally get version stands completely botched amd environments", "d": "5/2017"}, {"body": "removed apis would throw think makes different true thought reason would throw nt make sense downgrade warning proptypes add deprecation warnings probably postpone deprecating reactaddons getters sure approach well sounds good revisit later", "d": "5/2017"}, {"body": "safe cherrypick flarnie would like", "d": "5/2017"}, {"body": "yesterday saw comment nhunzaker thanks", "d": "5/2017"}, {"body": "great discussion definitely hear need better api around warnings come great examples feedback documented think open adding complete way configure warnings future versions well require attention starting figure fit roadmap happens open separate issue continuing discussion tagging spicyj tomocchino visibility since recently talking improving react warnings", "d": "5/2017"}, {"body": "gaearon made new issue closed one hides issue", "d": "5/2017"}, {"body": "saw closed sorry open source projects github generally work happy continue discussion allocate time answering comments please consider issue direct competition open issues generally try answer find time ping thread feel like communication enough", "d": "5/2017"}, {"body": "believe saying passing null likely set enduser component thisel property null forcing old value collected assumption always correct showed last example yes least possible clean works simple cases like mentioned possible complex cases split answer two three explanations call unmounting call update function changes call update arrow function call unmounting consider alwaysmounted grandparent component passes ref callback several levels deep list item mount unmount never notify ref node unmounting grandparent way cleaning ref would hold onto dom node forever since grandparent never unmounts creating memory leak grandparent component fault notify unmounting give tools stop holding onto node time since refs firstclass values composable functions expect refs coming components direct parents fact one motivations making functions similar issue pops comes something clones ref along way example cases like might want run side effect set field add none things reversible unless also notified ref detached since ref correspond component dom node arbitrarily deep tree component lifecycle helpful protect leaks even simple case conditionally render something relying cleanup helps free dom reference soon subtree unmounts eg state change rather component unmounts important resourceconstrained environments react native calling one possible disposable mechanism could come convoluted way signal ref empty eg practice though using single value attribute simpler also makes easier spot places side effect subscription gets added removed code would colocated one function verbose common case setting field nice bonus happens nicely detach field reference use simple way assignment matter deeply ref owner child separated component hierarchy ergonomics good defaults important call update function changes say replaced two different functions reasons explained important least notify node detached hope ref could something like coming different owner components accept cleaned makes sense call calling instance dom node like would detach attach detaches attaches already talked detaching refs important brings us call update arrow function arrow functions different referential identity inside call know sure different one since harm detaching old one update attaching new one since vitally important corner cases okay calling arrow functions way described annoying work around declaring bound method class case would referentially identical every call react would tiny bit extra work detaching attaching would know ref changed would still call node unmounting hope helps", "d": "5/2017"}, {"body": "regarding question also outer component using component nt necessarily know component use function outer component author nt worry passed function possibly awkwardly called twice null expected values render consider part ref callback contract many different function contracts function returns promise nodestyle errback function reducer etc react ref callback also contract use signal disposal make sense expose contract outer component always wrap function provided user way around modify contract seam happening could also make clear exposing contract naming prop suffix fact linked earlier intentionally exposing ref callbacks props fairly popular guarantees contract people find useful", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "problem workaround currently", "d": "5/2017"}, {"body": "gaearon looks like last release making sync react packages intentional", "d": "5/2017"}, {"body": "addons sync one released times independently fixes coincidence lined plan keep releasing yes latest versions likely going stay latest", "d": "5/2017"}, {"body": "since almost two months since last update issue gon na give go", "d": "5/2017"}, {"body": "going merge rogeliog pr nt gotten pretty busy sorry going close issue favor", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "thanks lot dan try later week almost finished udemy introduction hopefully smoother time around tue may dan abramov notifications githubcom wrote closed receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "sounds great please let us know whether helps", "d": "5/2017"}, {"body": "progress issue well desired feature one way another", "d": "5/2017"}, {"body": "progress would issue ideas make work want give try please feel free", "d": "5/2017"}, {"body": "reasonable build renderers using reactfiberreconciler fine unstable wondering final decision whether reconciler supported public api point", "d": "5/2017"}, {"body": "supported public api nt decided expose okay use old exposed version meantime", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "gaearon suggest something one recently experiment writing virtual dom without libraries lines starting already done implementation lite version used attached nodes wherever turned able override parent component found pretty useful easy js const shouldcommentslistupdate props nextprops gt return propscomments nextpropscomments const list items gt itemsmap item gt item const comments comments gt gives us ability overwrite inner implementation based parent rules well apply function nodes components let know think solution", "d": "5/2017"}, {"body": "repository umd module work react undefined line like report issue sure supposed", "d": "5/2017"}, {"body": "please file issue repo module branch since nt plan development", "d": "5/2017"}, {"body": "im trying get hands dirty ca nt find information fiber default renderer flag something fiber renderer actually exported", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "please stop comments notify people participating discussion project maintainers", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "think safe assume markup accessible malicious attackers everything else avoiding case inputs sounds beneficial surface added complexity would nt worth minimal security benefits going go ahead close since nt anything actionable react team feel free ask clarifying questions", "d": "5/2017"}, {"body": "hey devdoomari thanks request sorry took long respond nt think something want extracting internal module external one makes difficult iterate new features address bug fixes since requires orchestration package release cycles feel free use files inspiration utilities though lot stuff would nt entirely relevant outside context react internals anyways may better defining tailored utility based functionality provides", "d": "5/2017"}, {"body": "since example longer repo", "d": "5/2017"}, {"body": "getting error ie build application works fine mozilla chrome moreover standalone express server app runs fine ie built js file using webpack babel fails navigate used inside jsp file", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "brigand advice good since update assume figured future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "5/2017"}, {"body": "gaearon petarslavnic may little topic nt want start new thread view wasted time chrome performance tools", "d": "5/2017"}, {"body": "andrewdavidcostello thanks saving day", "d": "5/2017"}, {"body": "sorry delay intentional moved disabled click event behavior time wrapper around buttons simpleeventplugin tradeoff would allow trigger click event disabled buttons please correct wrong bypasses event plugin system", "d": "5/2017"}, {"body": "hi gaearon anything remaining pick", "d": "5/2017"}, {"body": "bump word issue hitting problem selenium", "d": "5/2017"}, {"body": "fixing issue", "d": "5/2017"}, {"body": "fixed issue way correct parent tag form fieldset disabled button fire case clicking children span div even parent div disabled children button fire click span onclick fire alert hello gt click case click span onclick fire alert hello gt click click span onclick fire click alert hello gt issue didnt occuered firefoxbut chrome safari issue issue leave specification browser question test test give reactcomponent object traversetwophase method browser traversetwophase method receive simple object tag type receive reactcomponent object write test case", "d": "5/2017"}, {"body": "must one people view use constructors instead componentwillmount mistake might holdover normal class idioms regarding keeping constructor thin never ever performing operation inside nt needed initialize object things used arguments would use constructor constructor seems like private react implementation detail signature constructor need change sure blindly super args also see developers omit second parameter constructor time seems like bad practice componentwillmount solves makes subclassing components difficult fan inheritance general although found usages appropriate already product constructor used may constructor much parent component erased subclasses componentwillmount also solves choose execute super classes version might best programming practice though argued essentially makes unit testing components difficult longer stub componentwillmount event nt want called proved fairly invaluable testing certain mounting operations using enzyme without worry actually making call since typically done using redux provide props usually done without problems anything think usage constructors avoided componentwillmount", "d": "5/2017"}, {"body": "jamespedid saying sometimes want create instance component without mounting unit tests call methods test work", "d": "5/2017"}, {"body": "would ideal although sure works react world used enzyme seems kind silly use shallow wrapper grab instance able call methods able new general nt investigated though mostly use enzyme although would nt hard test", "d": "5/2017"}, {"body": "jamespedid nt understand mean complaint imagining probably way restructure code makes easy unit test without needing monkeypatch noop trying test certain mounting operations perhaps could component call standalone function props mounts unit test standalone function would try avoid monkeypatching component want test test totality behavior mounts", "d": "5/2017"}, {"body": "experiencing bug hopes help reproduce steps take open firefox using upload file refresh page upon refresh see links", "d": "5/2017"}, {"body": "would add zdila fix using definitely fixed issue although might still consider bug", "d": "5/2017"}, {"body": "finally getting back around distractions noticed new version createreactclass published npm looks like still based code simple creating pr dependencies createreactclass packagejson updated take crack branch made", "d": "5/2017"}, {"body": "yeah chrome bug way fix set attribute", "d": "5/2017"}, {"body": "idea overcome bug third party components like uses could use jest snapshots", "d": "5/2017"}, {"body": "fix backported", "d": "5/2017"}, {"body": "mean", "d": "5/2017"}, {"body": "yes aristona typo edited comment thanks", "d": "5/2017"}, {"body": "using cloudflare please disable autominification html", "d": "5/2017"}, {"body": "issue raises wanted embed facebook video site localhost know right way react header component put code html video one routes video renders making mouseover video get error invariant violation unable find element id someone may idea never done iife react thank", "d": "5/2017"}, {"body": "error code want render new component already imported render component trying use", "d": "5/2017"}, {"body": "anyone gotten autoplay video work android react seems work ios playsinline autoplay get work consistently android limited android version", "d": "5/2017"}, {"body": "combination running webpack p using uglify plugin causes issue regarding p flag think reading react docs optimizing performance wbepack section webpack docs building production clarify people get errors warnings combining two things p flag build script webpacks docs state running webpack p equivalently webpack optimizeminimize define processenvnodeenv production performs following steps minification using uglifyjsplugin runs loaderoptionsplugin see documentation sets nodejs environment variable triggering certain packages compile differently nt deep background webpack seems code p flag webpack accomplish thing confirm small project testing purpose running build script webpack p flag without code webpackconfigjs results code running opposite build script without p flag adding code webpackconfigjs either way minification errors warnings using minified copies development versions warnings like react redux removed note windows nt seem work packagejson build set nodeenvproduction yarn run clean amp amp webpack webpackconfigjs new webpackdefineplugin processenv nodeenv jsonstringify processenvnodeenv getting warning first place seems like nodeenv never set production fixed using crossenv", "d": "5/2017"}, {"body": "running via nodenpm via umd bundle tooling run client server via node sorry completely forgot respond scenario runs ci local dev machines bundle bundling recently switched using webpack webtamp instead gulp creating bundle specific unorthodox js perspective unit testing requirements works well resolved issue still great work seems solution found", "d": "5/2017"}, {"body": "hi got kind error img element uncaught typeerror read property reactinternalinstance null import react react import logoimage logopng const logo gt return using urlloader even hardcoding value src attribute get error edit replace image div use image background issue weird stuff impression something done passed years without issue", "d": "5/2017"}, {"body": "hade exact issue problem included javascript files multiple times johndugan pointed would possible react throw warning senses included multiple times", "d": "5/2017"}, {"body": "js import react component react import assetscssglobalcss import album class app extends component render return export default app get error try render electron webpack image rendered properly following error message", "d": "5/2017"}, {"body": "isaachinman nt tried personally", "d": "5/2017"}, {"body": "react likely include streaming renderer tomocchino working nt plan add one react", "d": "5/2017"}, {"body": "spicyj neat nt know tomocchino hacking", "d": "5/2017"}, {"body": "edit removed avoid confusion", "d": "5/2017"}, {"body": "edit removed avoid confusion", "d": "5/2017"}, {"body": "confused trying want exclude build library depends standalone version need put externals enough issues standalone please file issues get answers posting thread makes confusing thread completely different internal structure information thread relevant putting together comments like confuse future readers relation two except one fork", "d": "5/2017"}, {"body": "gaearon happening firefox strange bug resize events fire whenever happen scheduled via event loop happening instantly mean concurrency problems ofc functions run time single javascript context behaviour checked u meet resize window observe consolelogs resize listener flooding console original issue happens concurrent running probably problem use internal state thing happens chrome event however idea yet happens input even controlled react focus", "d": "5/2017"}, {"body": "providing workaround seems prevent issue couldnt reproduce manually resizing probably due less frequent calls causing resizes programatically really quickly issue surfaced quite frequently fix disappeared completely introducing workaround used snippet", "d": "5/2017"}, {"body": "thought server side rendering side effects free apparently use inject content leaflet popovers happens cycle parentsetstate parent rerenders triggers componentdidmount child component map wrapper map wrapper create clusters create associated popovers calling reactdomserverrendertostaticmarkup bunch stuff trigger following stack trace could understand little even though called rendertostaticmarkup care seems shared state already browser side transaction probably able make small repro project theses steps edit chrome though", "d": "5/2017"}, {"body": "seeing error chrome beta browsers fine", "d": "5/2017"}, {"body": "getting error chrome well nt made updates changes actually think react devtools got updated yesterday checked disabling devtools makes error go away enabling devtools bring back first reload second reload opening react panel devtools", "d": "5/2017"}, {"body": "disabling react devtools fixed issue also", "d": "5/2017"}, {"body": "disabling react devtools worked well", "d": "5/2017"}, {"body": "react devtools issue fixed react devtools appear chrome addon store within hour check updated yet big thanks pioul filed bug report devtools", "d": "5/2017"}, {"body": "hey running problem come workaround use contenteditable", "d": "5/2017"}, {"body": "think able close release", "d": "5/2017"}, {"body": "see merged issue closed", "d": "5/2017"}, {"body": "thank", "d": "5/2017"}, {"body": "experiencing issue react using reactmodal", "d": "5/2017"}, {"body": "experiencing issue please create example reproducing diagnose thanks", "d": "5/2017"}, {"body": "sorry forgot attach example link forget bug caused incorrect error handling putting react erroneous state", "d": "5/2017"}, {"body": "gaearon gon na try", "d": "5/2017"}, {"body": "commited pr adds onload onerror events svg still missing others like onunload onresize onscroll onzoom etc thank gaearon mentioning correct file name", "d": "5/2017"}, {"body": "key definitely bad idea", "d": "5/2017"}, {"body": "haha yes long sense moved away solution", "d": "5/2017"}, {"body": "ismounted function removed", "d": "5/2017"}, {"body": "add true end window listener enable capture mode working thanks probablyup", "d": "5/2017"}, {"body": "rickhanlonii sure care though performance implications passing props like pure children always force render removing benefits pure components use pure components heavily starting become big problem far conclude two options create new object eg get rid warning leave unnecessary rerenderings affected components create style object outside component get rid unnecessary rerenderings leave mutation warning anything", "d": "5/2017"}, {"body": "officially added html spec chance yall might consider reopening", "d": "5/2017"}, {"body": "created input wrapper solve race condition anyone suggestions fix known issues please open ticketpr", "d": "5/2017"}, {"body": "problem wrapping returns nt help distinguish", "d": "5/2017"}, {"body": "needed spicyj", "d": "5/2017"}, {"body": "think original post explains issue detail problematic reason please open new issue", "d": "5/2017"}, {"body": "use case replacestate company app creating custom forms component takes order definition json request creates various forms different types create value state store keys changes far good problem using reactrouter customorder ordernumber component tied customorder moving one order number next different page state remains previous custom order workaround thinking creating function const initialstate intitial state thisreset gt thisstate initialstate thisforceupdate p", "d": "5/2017"}, {"body": "brianboyko sounds like store form state object state instead ie moving one order number next different page state remains previous custom order nt seem like preferable behavior probably use ordernumber key element", "d": "5/2017"}, {"body": "according changelog since suppose possible", "d": "5/2017"}, {"body": "glad saw thread app react encountering windows phone useragent", "d": "5/2017"}, {"body": "seems clear bug react passing valid attribute form element right behavior especially since react supports server side rendering chance behavior change soon", "d": "5/2017"}, {"body": "hi first aware gaearon seems nt work production build trying solve live retranslation page including reexecuting router branch worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting bug tricky production best resolved updated meantime may something wrong", "d": "5/2017"}, {"body": "pavel use reactdeepforceupdate production nt often switching languages use give child reference forceupdate tree retaining state much better forcererendering whole tree magical exactly changing attribute context object default react wed may pavel lang notifications githubcom wrote hi first aware gaearon reactdeepforceupdate seems nt work production build trying solve live retranslation page including reexecuting router featurereactintl branch reactstarterkit worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting tricky production best resolved reactintl updated meantime may something wrong receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "adding name list developers wasted hour debugging problem", "d": "5/2017"}, {"body": "use jsonml lot flow anybody know good reacttojsonml custom renderier", "d": "5/2017"}, {"body": "drom", "d": "5/2017"}, {"body": "paranoidjk need exactly opposite tool would take react virtualdom structure render jsonml like object object proxy custom implementation reactdomrender", "d": "5/2017"}, {"body": "seems able get around ismountedsetstate inconsistencies declaring separate private variable mounted instance setting componentwillmount componentwillunmount ie seems work intended anyone knows might ideal ears also would nice react could handle implicitly seems ridiculous nt obviously nt want set component state component longer mounted nt let us fail silently sheesh", "d": "5/2017"}, {"body": "discussion little old think reasonable conclusion recommend use apis provide cancellation example axios lets create canceltoken requests cancel component unmounts js componentdidmount thiscancelsource axioscanceltokensource axiosget canceltoken thiscancelsourcetoken componentwillunmount thiscancelsourcecancel agree cancellation necessarily suggest using different library asking library use add cancellation api right way solve problem also eliminates whole class bugs example fetch data based props also cancel requests previous props risk getting new response earlier older response potentially displaying wrong ui cancellation already solves race conditions one reason embrace choose implement cancellation reason setting field way go yes clunky clunkiness reminds application using network less efficiently application might memory leaks application might race conditions case react throw errors happens anymore intentionally keep suboptimal case clunky developers incentives implement right solution cancellation edge cases related libraries like redux would recommend perform side effects might affect tree unmounted sounds like potential performance issue anyway enqueue side effects flush next tick like sum warning error available classes anyway right fix implement cancellation libraries like make easy always either ignore warning use field cases like redux better dispatch next tick let tree unmount first think covers everything issue closing thanks everyone discussion", "d": "5/2017"}, {"body": "regarding case seems like reordering call would solve issue", "d": "5/2017"}, {"body": "gaearon contextualize part comment please application using network less efficiently cancelling promisified http request ultimately calls xhrabort simply unregisters callback client side close socket browser since many requests tabs could using afaik sockets expensive likely shared cancellation client side automatically interrupt db query server moreover happens mutative operation wo nt roll back automatically cases browser closing socket user closes browser server end sending request client anyway thus using network bandwidth like corrected wrong subtleness comment would good greater context around discussion includes server network thanks", "d": "5/2017"}, {"body": "fair nt know nt close socket thanks correcting", "d": "5/2017"}, {"body": "reduxlogic nice cancellation mechanism", "d": "5/2017"}, {"body": "fastclick get along event switch", "d": "5/2017"}, {"body": "observed triggering rerender react sorts things blow correction ing action redux store react causing things blow", "d": "5/2017"}, {"body": "want join chorus agree least returning promise would nice times nt want use could make component render recursively forever", "d": "5/2017"}, {"body": "gaearon think react team missing issue popular put shoes js developer learning new libraries express gulp etc started understand beauty futures streams asyncawait take pride knowing avoid callback hell many peers decry downfall js start using react heavily find core async part api uses callbacks done learning bad one small issue going keep major pain point new react developers either promises longer used ubiquitously b setstate longer used asynchronously c react returns promise setstate", "d": "5/2017"}, {"body": "working examples libraries enhanced support promises retaining backwards compatibility callbacks case callback param provided would call usual however callback passed would return promise change straightforward similar ctrlaltdylan snippet added check callback param", "d": "5/2017"}, {"body": "chrisblossom really except hotfixing line", "d": "5/2017"}, {"body": "created input wrapper solve race condition anyone suggestions fix known issues please open ticketpr", "d": "5/2017"}, {"body": "sorry late reply hope accepted augriedinger agree behavior using shape proptype assume deep merge prop expected also imagine cases deep merge explicitly wanted example two props depending already came across case maybe solution would additional argument like say better way", "d": "5/2017"}, {"body": "danielsundberg implementation one get work component classes", "d": "5/2017"}, {"body": "voted would nt use since changes method derived classes need override render specialcase knowledge error handling base class works propagates affect react components current workaround using wrap render method base class constructor calling hacky requires changes derived classes need written least constrains impact hack much looking forward proper error boundaries", "d": "5/2017"}, {"body": "merge declared styles well specific inline style like background boxstyle overwritten order assignment", "d": "5/2017"}, {"body": "completely unnecessary already iterate range place values array use array simple solution considered programming basics javascript var weightrange var lt weightrangepush reactproptypesoneof weightrange isrequired want get fancy use custom prop solution javascript productproptypes weight function props propname componentname let weight props propname", "d": "5/2017"}, {"body": "genericlady works way build array first separately built allows encode gt gt lt lt semantics directly validator without needing create large array inmemory", "d": "5/2017"}, {"body": "ljharb line shortened", "d": "5/2017"}, {"body": "genericlady took positional arguments clean way encapsulate intentionally chose object better solution please file issue airbnbproptypes repo discuss", "d": "5/2017"}, {"body": "anyone else like ends looking ticket think need roll contenteditable fancier text input make sure check facebook draftjs draftjs plugins project might save lot time", "d": "5/2017"}, {"body": "clear problem solved still nt see bundle different packages serverclient render something different without checksum warning warning btw actually mean react could find real solution hopefully wrong would mean impossible use react isomorphic apps many scenarios well least scenarios involving canvas svg video animations lot code related modules nt needed server cases break code window defined tried something like course nt work idea use react precisely define different bundlesmarkups isomorphic way without incurring warning", "d": "5/2017"}, {"body": "tried something like course nt work idea use react precisely define different bundlesmarkups isomorphic way without incurring warning browser version usually bundled separately normally outside react use technique like used isbrowser package basically module returns always returns server tell packager browserifywebpacketc replace module one returns always returns bundled shipped browser", "d": "5/2017"}, {"body": "thanks dantman still could nt understand deal webpackreact get server client bundles way say keep trying also found simplest way avoid requiring libraries could break server leave outside bundle normal tag sometimes actually want use public cdn still ideal many scenarios neither server react complain someone example used webpackreact would great", "d": "5/2017"}, {"body": "add writing party widget injected using react use css library cleanslate gives dom completely reset css also means use important styles necessary anyone making widget ca nt trust styles rest page despite good practice necessary", "d": "5/2017"}, {"body": "react css support seems little behind times css support actually properly support features css standard also css modules key issues css easily addressed means modules namely global namespaces code isolation see tool used reactonrails projects rebass css module example seems limited support works decent modal popup though", "d": "5/2017"}, {"body": "tectract css modules far outside scope react core also inline styles isolated css modules", "d": "5/2017"}, {"body": "usecase using reactnative reactnativevectoricons want prop component determined data received promise", "d": "5/2017"}, {"body": "supported think would make lots complex code easier understand possibly open new async patterns", "d": "5/2017"}, {"body": "issue want ssr search predict props also content fetched action componentwillmount wait props prepared render props string", "d": "5/2017"}, {"body": "stumbled accross aswell really annoying spicyj news", "d": "5/2017"}, {"body": "nt tested might work higher order component component base class really fan deep inheritence hierarchies demonstrates fairly easily get around feature yet existing react could easily wrap delegate although would bit verbose less performant react changing pass function consistent functional components nt look like would break backwards compatibility happy create pr get time", "d": "5/2017"}, {"body": "stevetaylor", "d": "5/2017"}, {"body": "syranide nt side effects long nt break rules safe terms event handler callbacks recreated render cycle reference always current inline handler something like web service call inline callback executed subsequent ticks potentially subsequent renders something wrong least stop inlining handlers besides handlers something subsequent tick abort various lifecycle handlers case something bit stupid like calling unmounted component let stale web service callbacks pile", "d": "5/2017"}, {"body": "reproducing issue encountered irisschaffer isomorphic application render static page react express client export props use page component even handling password input value react client react component deletes saved password input even chrome shows briefly disable javascript browser saved password stays place issue visible chrome using last version related react saved password accessible elementvalue event fired dom like focus key event etc tried simulate event fire javascript luck fill value property", "d": "5/2017"}, {"body": "also raise warning checkboxes input really control checkedvalue attribute might arbitrary element controls see valuable newbies edge cases add noise logs cases said would neigh impossible come proptype accurate useful time also fwiw checked warning checkboxes shows value checked element checked nt raise warning probably separate issue", "d": "5/2017"}, {"body": "tswaters case checkbox disabled readonly", "d": "5/2017"}, {"body": "sumbad children contain array requires separate check reactdomserverrendertostaticmarkup render arrays", "d": "5/2017"}, {"body": "reordering accessibility", "d": "5/2017"}, {"body": "happening jsdom well case team project standards nt going accommodate leaving errors console tests run suppress stub obnoxious preventing getting work merged project", "d": "5/2017"}, {"body": "encountered issue today windows phone call method specified onchange fix going applied", "d": "5/2017"}, {"body": "good way animate removal delaying instance call delete function updates state saying element x removed sets timeout make ajax request meanwhile component recive signal animate another way never remove element always visible state changed materialui uses instance", "d": "5/2017"}, {"title": "small code fix forms documentation example angulario", "body": "submitting check one x current behavior final example code given end page forms documentation guide file constructor empty makes code initialise empty hero objects expected per example expected behavior proper code file keyword based invocation work fine example line code file minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17149", "d": "5/2017"}, {"title": "returning rejected promise router resolver throws error", "body": "rejecting resolve cause error effectively stops navigation unintended error problem error creating instance private api therefore userland nt seem way reject resolve", "num": "17148", "d": "5/2017"}, {"title": "urlmatcher service", "body": "submitting check one x current behavior function set route expected behavior diresolved service function set allowing injection expect work identical way resolver properties either services implement interface inline function const routes urlmatcher myurlmatcherservice component interruptcomponent path id component listcomponent contains routing children children children subpaths deep linking injectable export class myurlmatcherservice constructor mystateservice mystateservice minimal reproduction problem instructions na motivation use case changing behavior use case resolve system state managed service currently true want skip route let routes attempt matching case want greedily consume entire subpath display specific component certain circumstances please tell us environment na angular version browser na language typescript node aot issues na", "num": "17145", "d": "5/2017"}, {"title": "allow assignment local variable created ngfor", "body": "submitting feature request current behavior common pattern throughout application binding within ngfor notice nt even use proposed behavior allow assignment local variable created ngfor keeping syntax would confusing feature implies local variable side effects upon updated variable would side effect assigning original source like alias variable implemented variable would likely require know index assign new values minimal reproduction problem instructions simple example plunker desired behavior commented note included get example work nt expect go away new proposed behavior motivation use case changing behavior able bind array element ngfor variable case seems like work like also looks like possible angularjs adding feature would make angularjs angular migration much easier please tell us environment angular version browser language typescript node aot issues", "num": "17144", "d": "5/2017"}, {"title": "ngclass working using css class multiple conditions", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior passing object multiple properties ngclass css class present one key wo nt work expected behavior apply classes combinations object key corresponding expression returns true minimal reproduction problem instructions plnkr example angular version browser chrome mac", "num": "17140", "d": "5/2017"}, {"title": "angular directive overwrites input attribute", "body": "submitting check one x current behavior create img element src evaluated add directive img element input src rewrite ngreflectsrc img element longer src attribute therefore picture shown src attribute fixed would nt happen expected behavior ngreflectsrc src present element minimal reproduction problem instructions plnkr motivation use case changing behavior described one use case directive utilize elements src attribute concrete use case image onclick opening popup large image please tell us environment osx sierra webstorm npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome version language typescript xx node aot issues", "num": "17138", "d": "5/2017"}, {"title": "dynamically disableenable formbuilder control", "body": "submitting check one x current behavior added disabled attribute bound boolean property reactive form toggling property effect warning using disabled attribute provided example added construct form using formbuilder thing work either workaround call enabled disabled form control programatically downside mix simple disabled attributes bound variable oneoffs reactive forms work disabled attribute normally prescribed expected behavior either binding disabled attribute template formbuilder template formcontrol instance works motivation use case changing behavior please tell us environment osx angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17137", "d": "5/2017"}, {"title": "remove make configurable http jsonstringify formatting", "body": "submitting check one x current behavior currently http post function jsonstringify input two space indentation format found body expected behavior requesting allow formatting applied reduce size request keep consistent angularjs behaviour motivation use case changing behavior storing certain requests coming angularjs application database analysis within angularjs application send nonformatted json string like send exact format within angular application however nt possible unless fiddle around contenttype header invoking function angular version", "num": "17135", "d": "5/2017"}, {"title": "docs aio tutorial part routing missing code box", "body": "submitting check one x end section artefact build process probably missing code box code box showed changes described section", "num": "17134", "d": "5/2017"}, {"title": "router additional navigation opening link new tab async calls guardsresolvers", "body": "submitting check one x current behavior open link application including route hashlocationstrategy new browser tab address bar browser first shows right route using resolver behavior guards fetches data server execution async call route changes execution routes changes back original route causes additional entry browser history open new tab first copy href browser address bar route change additional history entry empty history expected behavior behavior open new tab copy href browser address bar empty history route change address bar angular version browser chrome firefox language typescript node aot issues", "num": "17132", "d": "5/2017"}, {"title": "unused event parameters aot generated code", "body": "submitting current behavior running ngc generates functions takes event argument component template use event nounusedparameters set true causes error expected behavior error minimal reproduction problem instructions use aot nounusedparameters template listening event using event variable example motivation use case changing behavior using nounusedparameters aot since supposed fixed angular version browser language typescript node aot issues", "num": "17131", "d": "5/2017"}, {"title": "default value selected error", "body": "", "num": "17130", "d": "5/2017"}, {"title": "nt trigger mac", "body": "submitting check one x current behavior add open browser focus field press mac chrome safari nothing appears console underlying problem appears browserdomadapter geteventkey returns mac expected behavior triggered pressed logged console minimal reproduction problem instructions plunker motivation use case changing behavior want able use alt key crossplatform keyboard shortcuts without map mac vs windows shortcuts please tell us environment mac os chrome safari angular version running locally also repros plunker browser chrome safari nt test ff language typescript", "num": "17128", "d": "5/2017"}, {"title": "fr ability configure routes based something order", "body": "submitting check one x current behavior currently angular router checks routes routes array depthfirst order find matching route follows first matching route means example first route array every url match path without first checking whether fully matches another route works ok routes defined place make sure put routes order want things matched gets bit sketchy routes added routes array different places different files expected behavior expect way prioritize routes look fullest match choosing route least would really helpful way specify otherwise route different wildcard route would match nothing else minimal reproduction problem instructions two examples wildcard must come last order work otherwise route paths route parameters must carefully ordered example order url heroadd would always match hero id path first motivation use case changing behavior use case add routes routes array several different files make sure wildcard route end array use add routes beginning array rather adds elements end array relying exact order routes seems errorprone angular version browser thanks", "num": "17127", "d": "5/2017"}, {"title": "docs testing clarify mocking dependent service depends http", "body": "submitting check one x current behavior reporting bug documentation angular app based angular docs docs explains unit test servicecomponent depend another servers turn depends http docs says inject real service providers get actually injected component service setup spy run unit tests got error error confusing least guy enough experience angular since wrote units service depends http assumed need import httpmodule sure docs say wrote post stackoverflowcom test servicecomponent depends another service turn depends http service jnizet thank much clarified think bug docs clarified enough beginners obviously understand error expected behavior would awesome docs clarify minimal reproduction problem instructions open read topic try implement docs says get error spend time asking slackgitteretc motivation use case changing behavior docs enough clarified case please tell us environment matter website angular version matter website browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview matter language typescript xx angular typescript docs node aot issues matter", "num": "17126", "d": "5/2017"}, {"title": "bug ngif nt handle code within containing div expected", "body": "dev environement angular angularcli node os darwin macbook air ui angular app designed allow certain users case admins able select thus assign roles user current user admin want hide ui altogether right ui disabled would expect still see popup nt show values nonadmin user ca nt assign role good ideally nt want mdcheckbox popup happening even blank popup component view values iterated look like component isadmin function simple boolean check looks like mentioned set hasadminaccess true component see role options popup mdcheckbox expected set hasadminaccess false however values hidden ca nt selected still see small popup nothing expectation based use ngif containing div nothing would appear upon return falsey value", "num": "17122", "d": "5/2017"}, {"title": "freezes browser", "body": "submitting check one x current behavior whenever call screen freeze response comes back expected behavior would expect call made wait response able continue work please tell us environment windows webpack angular version browser chrome language typescript", "num": "17121", "d": "5/2017"}, {"title": "routerlink strip undefined queryparams unlike routernavigate", "body": "submitting check one x current behavior using routerlink queryparams undefined values propagates values url eg foocombar bazundefined expected behavior queryparams undefined values stripped eg instead navigating foocombar bazundefined navigate foocombar behaviour routernavigate minimal reproduction problem instructions minimal demo demo shows navigating path undefined queryparams value using routerlink routernavigate routerlink sets value undefined motivation use case changing behavior switching case using routernavigate using routerlink mismatching behaviour unexpected also think continuation please tell us environment plunkr example encapsulates issue angular version browser chrome language typescript", "num": "17120", "d": "5/2017"}, {"title": "routerurl gives page refresh", "body": "bug report current behavior starting app url base url say localhosttest routerurl equal expected behavior expected behavior would routerurl url user access user access routerurl test minimal reproduction problem instructions ng new testroute amp amp ng g test amp amp ng g c test appcompts appcomphtml testservice module access console display current url motivation use case changing behavior annoying following scenario app needs initialization user access mysitecomsomeurl app save state routerurl redirect user mysitecomloading upon app initialization redirects user mysitecomsomeurl current behavior redirect user mysitecom please tell us environment angular version browser chrome firefox others tested", "num": "17119", "d": "5/2017"}, {"title": "getting di error using custom provider lazy loaded module", "body": "submitting current behavior getting error trying use lazy loaded module custom provider something like expected behavior work like following works minimal reproduction problem instructions created sample application angular cli show problem motivation use case changing behavior able use lazy loaded module custom providers please tell us environment generic env angular version browser language typescript specific using nt problem node aot issues node edit tried angular updated repo error still exists different form something like following", "num": "17117", "d": "5/2017"}, {"title": "link ngmodules guide gives", "body": "submitting check one x current behavior multiple components section tutorial link ngmodules guide says read angular modules ngmodules guide clicking throws error link found page expected behavior link point valid page minimal reproduction problem instructions click ngmodules link multiple components section tutorial motivation use case changing behavior link point valid page confusing user please tell us environment windows using chrome angular version na browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview encountered chrome language typescript xx na node aot issues na", "num": "17116", "d": "5/2017"}, {"title": "http headers sending", "body": "submitting check one x current behavior advanced rest client works verify token example see server headers angular http receive header server verify use request typescript const tokenname xcorifeustoken let headers new headers typeof sharedatatoken string amp amp sharedatatokenlength gt headersset tokenname sharedatatoken text accept applicationjson textplain acceptencoding gzip deflate sdch br acceptlanguage enus en connection keepalive host origin referer useragent linux khtml like gecko text host connection keepalive contentlength accept applicationjson textplain origin useragent linux khtml like gecko contenttype applicationjson dnt referer acceptencoding gzip deflate br acceptlanguage enus en expected behavior send headers server minimal reproduction problem instructions described motivation use case changing behavior add custom headers want cors enabled custom headers please tell us environment mint windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx ts node aot issues nope", "num": "17115", "d": "5/2017"}, {"title": "reexport constructdependencies function coreindex", "body": "submitting check one x current behavior function marked exported reexported angularcore expected behavior able export function angularcore minimal reproduction problem instructions motivation use case changing behavior unit testing class creating di container mocked dependencies order create mocks need know dependencies tested class function reflects class returns dependencies typescript export function createinjector constructor function injector use strict please tell us environment windows macos webstorm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17114", "d": "5/2017"}, {"title": "information missing", "body": "lt link working", "num": "17113", "d": "5/2017"}, {"title": "nt work ngif else syntax", "body": "submitting check one x current behavior nt work properly else branch showed expected behavior work cases minimal reproduction problem instructions try click first toggle button angular version", "num": "17111", "d": "5/2017"}, {"title": "docs bootstrapping hybrid phonecat duplicate call", "body": "submitting check one x current behavior upgrade angularjs angular totrial bootstrapping hybrid phonecat new aio docs duplicate call current docs bootstrap inside", "num": "17109", "d": "5/2017"}, {"title": "fuzzy scss import", "body": "submitting check one x current behavior project includes following statement although actual file found running yields following expected behavior syntax scss allows supported angular alternatively documentation point make angular happy finding fuzzy imports upfront tried sasslint stylelint neither seem give option flag imports early package consume able break translation process minimal reproduction problem instructions see motivation use case changing behavior see please tell us environment uname v darwin kernel version fri mar pst root node version cat packagejson grep angularcompilercli angularcompilercli", "num": "17108", "d": "5/2017"}, {"title": "new event listener listens multiple hammerjs touch events", "body": "hi need help implementing new touch event hammerjs tried see information regarding nowhere explained ease follow created hammerjsts file overrides custom events content looks like import hammergestureconfig angularplatformbrowser import hammer hammerjs import hammerinstance angularplatformbrowsersrcdomeventshammergestures create class overrides hammer default config export class myhammerconfig extends hammergestureconfig events string pinchpan buildhammer element htmlelement hammerinstance let mc new hammer element domevents true mcget pinch set enable true mcget pinch recognizewith mcget pan return mc added appmodulets providers array use component event named pinchpan far tried ts page html file stuck someone please guide right direction use custom hammerjs events thank", "num": "17107", "d": "5/2017"}, {"title": "ngmodelchange triggered checkbox input clicked unit test", "body": "submitting check one x current behavior using component checkbox input element export class testcomponent public ischecked false public oncheckboxchange ischecked boolean consolelog ischecked ischecked thisischecked ischecked unit test calling input triggered running app clicking checkbox event triggered event also triggered input inside form expected behavior triggered test runtime minimal reproduction problem instructions motivation use case changing behavior behavior test runtime identical please tell us environment os osx angular version browser tested chrome safari language typescript node aot issues", "num": "17104", "d": "5/2017"}, {"title": "aio fix progress bar placement", "body": "progress bar top offset account previously static toolbar top toolbar longer static progress bar appears misplaced page scrolled top", "num": "17103", "d": "5/2017"}, {"title": "need help router redirect", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions need help thisrouternavigate home click link redirect homecomponent itt know possible solution could help developer motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues hi guys need help thisrouternavigate home click link redirect homecomponent itt know possible solution could help developer", "num": "17101", "d": "5/2017"}, {"title": "toc sticking header header scrolls away resulting space", "body": "", "num": "17099", "d": "5/2017"}, {"title": "toc missing horizontal line", "body": "used line last redesign", "num": "17098", "d": "5/2017"}, {"title": "sidenav menu items aligned", "body": "container noncontainer items different offsets see animations architecture", "num": "17097", "d": "5/2017"}, {"title": "sidenav contains lots whitespace top bottom", "body": "especially visible one scrolls site expanding various menu options scrolling within document viewer well sidenav", "num": "17096", "d": "5/2017"}, {"title": "hamburger menu ugly shadow focused", "body": "intentional nt remember redesign", "num": "17095", "d": "5/2017"}, {"title": "scroll results pane short mobile", "body": "results view would much useful increased width right wasting screen space portion previously displayed document", "num": "17094", "d": "5/2017"}, {"title": "tutorial upgrade angularjs angular typescript npm script missing", "body": "submitting check one x current behavior upgrade tutorial switching typescript step code changing include script missing looks like browser expected behavior guess example json look something like scripts tsc tsc tsc w tsc w npm run tsc w please tell us environment windows", "num": "17093", "d": "5/2017"}, {"title": "ngclass giving removal precedence", "body": "submitting check one x current behavior say ngclass fa fathumbsup true fa fathumbsdown false specified looking code apply classes value true remove classes value false means fa never appears class think leads surprising behavior classes traveling pairs like really common expected behavior think makes sense first remove classes associated false readd associated true rather way around logic giving removal precedence even though see classes false applied mean perhaps people use directive way around putting default classes class attribute removing using directive would guess rare group makes way sense add classes via ngclass remove minimal reproduction problem instructions check ngclass example motivation use case changing behavior nt expected behavior types class pairs common please tell us environment windows webpack angular version ran browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "17092", "d": "5/2017"}, {"title": "feature add methods better handle errors abstractcontrol", "body": "submitting check one x bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior let suppose following control error something like safe way actually error get errors add new using overwrite whole errors something like const errors fielderrors const newerrors email true errors newerrors objectassign errors newerrors fieldseterrors newerrors expected behavior adding methods abstractcontrol could really better way manipulate cleaner syntax minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17090", "d": "5/2017"}, {"title": "change detection triggered http call", "body": "submitting check one x current behavior change detection triggered http calls view updated several views nt refresh changedetection manually triggered keypress mouseclick components unable reproduce plunkr included link github repo reproduction new value logged console view updated even mouse click keystrokes first thought related migration able obtain similar behaviour vanilla angularcli project issue describes similar problem closed expected behavior change detection triggered view updated minimal reproduction problem instructions unable reproduce using plunkr please tell us environment angularcli windows running server ng serve angular version browser chrome firefox ie language typescript", "num": "17089", "d": "5/2017"}, {"title": "docs missing api documentation forms members", "body": "submitting check one x x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior almost methods nt shown full list setvalidators newvalidator validatorfnvalidatorfn void setasyncvalidators newvalidator asyncvalidatorfnasyncvalidatorfn void clearvalidators void clearasyncvalidators void markastouched onlyself onlyself boolean void markasuntouched onlyself onlyself boolean void markasdirty onlyself onlyself boolean void markaspristine onlyself onlyself boolean void markaspending onlyself onlyself boolean void disable onlyself emitevent onlyself boolean emitevent boolean void enable onlyself emitevent onlyself boolean emitevent boolean void setparent parent formgroupformarray void updatevalueandvalidity onlyself emitevent onlyself boolean emitevent boolean void seterrors errors validationerrorsnull emitevent emitevent boolean void get path arraystring abstractcontrol geterror errorcode string path string null haserror errorcode string path string null boolean get root abstractcontrol expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17088", "d": "5/2017"}, {"title": "lifecycle hooks called routerloaded child components parent change detector detached", "body": "submitting check one x current behavior angular lifecycle hooks ngoninit ngafterviewinit called components loaded router change detector parent component detached expected behavior lifecycle hooks called minimal reproduction problem instructions works nt work nt work sounds like related issue reported version case works please tell us environment angular version", "num": "17087", "d": "5/2017"}, {"title": "bug animations ngfor updating correctly animation", "body": "submitting check one x current behavior using ngfor directive element animated resulting iteration elements updated correctly items change starting animation fact new items placed existing items instead replacing code item produces list updated correctly animation done expected behavior ngfor statement would replace previous elements new elements list elements changed animation starts working angular minimal reproduction problem instructions see motivation use case changing behavior bug please tell us environment angular version browser language typescript", "num": "17086", "d": "5/2017"}, {"title": "query params disappear refresh page route added via routerconfigpush", "body": "submitting check one x current behavior appcomponent added route via every path need query params like refresh page via query params disappear default routes defined appmodule problem refreshing via inside query params still remain expected behavior also routes added via thisrouterconfigpush press query params must remain minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version present also version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "17084", "d": "5/2017"}, {"title": "aio add mapt resources page online training", "body": "submitting check one x motivation use case changing behavior would like feature packt online training platform mapt online training section resources page mapt angular dive master angular extensive library resources angular version angular", "num": "17083", "d": "5/2017"}, {"title": "right time use angular", "body": "submitting check one x right time use angular enterprise sap stick wait final release seen rapid releases please suggest", "num": "17082", "d": "5/2017"}, {"title": "ngmodel min validator seems ignored", "body": "submitting check one x current behavior input element min value seems validator ignored focus tab without setting minimum value still valid expected behavior validator true minimum value reached minimal reproduction problem instructions plunk demonstrates behaviour motivation use case changing behavior validations enforced angular version", "num": "17080", "d": "5/2017"}, {"title": "trying resolve module object literal", "body": "submitting current behavior build failing trying resolve property object literal building app using angular cli object property assigned value empty string please find code getting following error expected behavior property common object literal component behave normally minimal reproduction problem instructions add object literal property templateurl build angular cli environment os windows ide visual studio v package manager npm v angular cli v angular version browser na language typescript", "num": "17078", "d": "5/2017"}, {"title": "docs typo setup anatomy documentation page", "body": "submitting check one x current behavior setup anatomy documentation page additional documentation advanced setup anatomy typo work appliation systemjsconfigextrasjs entry table expected behavior word appliation corrected application minimal reproduction problem instructions relevant motivation use case changing behavior improve documentation please tell us environment relevant angular version relevant browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx relevant node aot issues relevant", "num": "17076", "d": "5/2017"}, {"title": "angular universal ngexpressengine goes infinite loop resrender throws error", "body": "copy suggested post issue submitting x bug report feature request support request gt please submit support request see note top template modules related issue aspnetcoreengine x expressengine hapiengine rendermodule angularpackagesplatformserver current behavior using ngexpressengine encounters error goes infinite loop current behavior bug please provide steps reproduce possible minimal demo problem creating github repo steps reproduce try opening browser repo fork added one line expected behavior way catch error thrown send back response browser instead going infinite loop motivation use case changing behavior something goes wrong infinite loop eat cpu app longer functional please tell us environment angular version browser language os mac osx sierra platform nodejs information eg detailed explanation stacktraces related issues suggestions fix links us context eg stackoverflow gitter etc stack trace", "num": "17073", "d": "5/2017"}, {"title": "ngcli appears install run windows", "body": "submitting check one x current behavior trying run command ng new myapp get error message ng recognized internal external command operable program batch file also reported lots others apparently issue expected behavior command ng new myapp execute without errors minimal reproduction problem instructions windows machine follow cliquickstart motivation use case changing behavior trying get started latest angular version please tell us environment cmd windows angular version latest angular browser relevant language relevant node aot issues", "num": "17071", "d": "5/2017"}, {"title": "expressionchangedafterithasbeencheckederror ngfor collections reactiveformsmodule", "body": "submitting check one x current behavior exception thrown using ngfor iterate keys map original error expressionchangedafterithasbeencheckederror expected behavior ngfor able iterate array mapentries mapkeys imo map minimal reproduction problem instructions use ngfor map entries keys collection crashes expressionchangedafterithasbeencheckederror exception motivation use case changing behavior would expect ngfor work entries keys collection map instance rationale error clearly documented please tell us environment running application generated angularcli osx angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "17070", "d": "5/2017"}, {"title": "routerlink prevents middle button click event bubbling", "body": "submitting check one x current behavior added element directive prevents middle mouse button click event catching handler expected behavior event bubble usual minimal reproduction problem instructions run open console regular click link see console middle button click see nothing console motivation use case changing behavior currently hard handle link middle mouse click toasts closed click event currently cant properly handle case angular version browser chromium version built ubuntu running ubuntu", "num": "17067", "d": "5/2017"}, {"title": "unable load transpiler transpile mainjs", "body": "submitting check one x current behavior transpiler nt work correctly multiline comments bootstrapper file expected behavior comments bootstrapper file skipped nt break compile process minimal reproduction problem instructions download quickstart seed open maints file ide try put next code bottom file run app catch next exception like change multiline comments single line comments work fine please tell us environment reproduced different environments angular version browser language typescript xx node aot issues", "num": "17066", "d": "5/2017"}, {"title": "ngc includes commentedout imports", "body": "submitting check one x current behavior either line comments block comments includes commented files expected behavior nt imports commented minimal reproduction problem instructions write commentedout eg ngclicreated pointing something exist run something like ignore commentedout lines follow imports err motivation use case changing behavior behave like sass build tools ignore commentedout lines please tell us environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularcli angularcompilercli", "num": "17061", "d": "5/2017"}, {"title": "make animation queries run instead", "body": "ref", "num": "17059", "d": "5/2017"}, {"title": "fromgroupvalues formcontrolname returns undefined form control disabled formgroupcontrols formcontrolname value", "body": "submitting check one x current behavior thismyformaddcontrol quantity new formcontrol value disabled true thismyformcontrols quantity value returns expected thismyformvalues quantity returns undefined expected behavior thismyformvalues quantity return value control even control disabled minimal reproduction problem instructions motivation use case changing behavior behavior identical regardless whether form control disabled please tell us environment windows npm apache angular angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview windows chrome version language typescript xx typescript", "num": "17058", "d": "5/2017"}, {"title": "pipe digits could found", "body": "packagejson name webapplicationbasic version dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter covalentcore typesnode angularflexlayout aspnetprerendering aspnetwebpack awesometypescriptloader css cssloader eventsourcepolyfill exposeloader extracttextwebpackplugin fileloader htmlloader isomorphicfetch jquery jsonloader preboot reflectmetadata rxjs styleloader tostringloader typescript urlloader webpack webpackhotmiddleware webpackmerge zonejs rawloader sassloader devdependencies typeschai typesjasmine chai jasminecore karma karmachai karmachromelauncher karmacli karmajasmine karmawebpack nodesass loaded module import commonmodule angularcommon ngmodule imports commonmodule export class appmodule error unhandled promise rejection template parse errors pipe digits could found see official angular documentation digit pipe come commonmodule help find solution thank", "num": "17057", "d": "5/2017"}, {"title": "aio fix alignment version picker dropdown list", "body": "see", "num": "17055", "d": "5/2017"}, {"title": "aio fix unwanted search box size change window resize", "body": "see", "num": "17054", "d": "5/2017"}, {"title": "aio consolidate location images used content", "body": "move images appropriate update references", "num": "17053", "d": "5/2017"}, {"title": "setting name property element causes exception server side rendering", "body": "submitting check one x current behavior setting name property input element template cause server side renderer throw exception expected behavior throw exception minimal reproduction problem instructions template throw exception server side need handle name specially separate property bag node instead directly setting properties clobbering properties", "num": "17050", "d": "5/2017"}, {"title": "plunkers api docs", "body": "task past let create issue nt forget implementing future related issuesprs", "num": "17049", "d": "5/2017"}, {"title": "aio fix indexing guides tags", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17048", "d": "5/2017"}, {"title": "dynamic component loader working properly index", "body": "submitting check one x current behavior expected behavior new component inserted index specified minimal reproduction problem instructions list components data fed asynchronous calls dynamically adding components anchor point based row location nt specify row number components added view soon gets databut need follow based row location happening switch case grid thisfactory thiscomponentfactoryresolverresolvecomponentfactory thisref thiscoloneanchorcreatecomponent component rowlocation thisrefinstancegriddata thisfavfilterdata thisrefinstancegridtitle gadgetname thisrefchangedetectorrefdetectchanges case donut thisfactory thiscomponentfactoryresolverresolvecomponentfactory donut thisref thiscoloneanchorcreatecomponent component rowlocation thisrefinstancegriddata thisfavfilterdata thisrefinstancegridtitle gadgetname thisrefchangedetectorrefdetectchanges motivation use case changing behavior please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx node aot issues", "num": "17047", "d": "5/2017"}, {"title": "docs dependencyinjection aot rejects lambda factory", "body": "submitting check one x current behavior factory provider docs page documenting use lambda function implement heroservicefactory end dump error static analysis code like motivation use case changing behavior improve documentation please tell us environment linux shell angular version angularcli node os linux angularanimations angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli language typescript xx typescript node aot issues node", "num": "17042", "d": "5/2017"}, {"title": "aio correctly show overloaded methods api docs", "body": "overloaded methods api page shows one twice eg injector methods turned", "num": "17041", "d": "5/2017"}, {"title": "click method called chrome android", "body": "submitting check one x current behavior click triggered chrome android expected behavior click function called minimal reproduction problem instructions could nt create minimal reproduction plunker following site click chart icon right bottom corner pc presents chart debugging web ide chrome click triggered errors console sure chrome android bug angular bug used work angularjs please tell us environment win visual studio angularcli angular version browser mobile chrome latest language node aot issues", "num": "17039", "d": "5/2017"}, {"title": "routernavigate stale data", "body": "submitting check one x current behavior adding object form routernavigate changes view list objects occasionally recently added object appear list however clicking around going back list happen every time saveobject method savelocation thislocationid thislocationservicecreate thislocation subscribe data gt error gt list objects component import component oninit angularcore import locationservice serviceslocationservice import router angularrouter import location location component selector applocations templateurl locationcomponenthtml styleurls locationcomponentscss providers locationservice export class locationcomponent implements oninit locations location expected behavior routernavigate data stale minimal reproduction problem instructions motivation use case changing behavior ubuntu please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx node aot issues", "num": "17037", "d": "5/2017"}, {"title": "need native form validation alert without validation attribute html template", "body": "submitting check one x current behavior show native form validation alert write form validator file nevertheless write validation attribute etc change form validation change ts html uncomfortable expected behavior write form validator write wish show native form validation alert sorry short english", "num": "17036", "d": "5/2017"}, {"title": "calling detectchanges parent child ngonchanges leads hooks called", "body": "submitting check one x current behavior called parent component hook child component child hook called expected behavior hooks called minimal reproduction problem instructions see console plunker commented motivation use case changing behavior bug please tell us environment angular version browser chrome language typescript debug info may help tracked lines according first check calling called", "num": "17035", "d": "5/2017"}, {"title": "lazy loaded modules auto detectchanges trigger second time load module using firefoxie", "body": "submitting check one x current behavior angular systemjs subscription inside lazy loaded modules get reflected ui immediately angular systemjs subscription inside lazy loaded modules get reflected going module going back use manual detect changes trigger ui update first load lazy loaded module expected behavior work expected first load lazy loaded module subscriptions reflected ui minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows systemjs angular version browser firefox xx ie xx language typescript node aot issues", "num": "17034", "d": "5/2017"}, {"title": "scroll event working inside router outlet angular", "body": "hello developing web app structured router outlets appcomponenthtml router outlet matched specific component pages ca nt use scroll event except use viewencapsulationnative appcomponentts otherwise simple div appcomponenthtml text works fine check example without routeroutlet", "num": "17033", "d": "5/2017"}, {"title": "handson table click sort encountering error", "body": "submitting issue handson kindly look issue suggest ways resolve current behavior sorting happening handson instead throwing error expected behavior sorting happen successfully without error minimal reproduction problem instructions created component handson wrapper ngoninit creating div handson container adding events shown ngoninit click sort icon throwing following error unhandled exception line column javascript runtime error error eventtask undefinedaddeventlistener click transition running expecting state scheduled notscheduled please tell us environment windows visual studio angular version angular version browser chrome xx ie edge browser language typescript xx typescript", "num": "17030", "d": "5/2017"}, {"title": "tutorial gt routing doc broken markup", "body": "submitting check one x current behavior unrendered code looks like maketabs null srcappappmodulets srcappappmodulets marked expected behavior section actually renders tabbed code preview panel minimal reproduction problem instructions go scroll update appmodule select hero heroescomponent motivation use case changing behavior broken docs please tell us environment na angular version na browser language node aot issues", "num": "17027", "d": "5/2017"}, {"title": "aio support injectable jsdoc annotation", "body": "notfoundvaluenotfoundvalue otherwise get token typeinjectiontoken notfoundvalue deprecated use type injectiontoken suppress duplicate get token notfoundvalue stable export const injector new injectiontoken injector withstatics text throwifnotfound throwifnotfound nullinjector null new nullinjector injector mark documentation text something like", "num": "17026", "d": "5/2017"}, {"title": "aio static fields nt show class declarations", "body": "also separate section static members", "num": "17024", "d": "5/2017"}, {"title": "redirect within resolve angular angularjs router breaks cases", "body": "got situation resolver users may want redirect angularjs route url handled angular router works okay first click route falls else clause executeschedulednavigation designed clean currently rendered route run angularjs router ends taking cmdclick deep link route end going route every time assuming angular router set handle route happens default router instantiated angular router know route example reproducing issue click redirected redirected", "num": "17023", "d": "5/2017"}, {"title": "aio first view containing navigation node activated", "body": "current page appears one navigation view one views activated visually make sophisticated activate views", "num": "17022", "d": "5/2017"}, {"title": "files nt load use styleurls", "body": "submitting check one x current behavior css file use images font icons file importing scss file specify scss styleurls expect images load happen paths images specified relative scss file import file images loaded see example expected behavior expect images load use styleurls minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17021", "d": "5/2017"}, {"title": "unhandled promise rejection", "body": "hi could one tell resolve error see attached image trying use directive close sidebar user click outside event added whole directive take part packagejson tsconfigjson kindly provide solution suggest alternative effective way close sidebar use click outside sure error including directive whether happen adding directive environment version problem beginning stage angular help would appreciated helpful others also many thanks help", "num": "17020", "d": "5/2017"}, {"title": "localid use value change locale", "body": "submitting check one x current behavior done import localeid angularcore provide localeid usevalue enca consolelog new date tolocaledatestring yyyymd expected behavior want locale change enca minimal reproduction problem instructions motivation use case changing behavior change locale date please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node", "num": "17018", "d": "5/2017"}, {"title": "di explicit instance scope singleton prototype", "body": "submitting check one x current behavior working half year used several libraries one thing often came accross cumbersome instance scope especially multiple modules currently many libraries provide static forroot methods module rootnonrootmodules singleton created forget either nt get instance end many instances might lead unexpected behavior expected behavior would expect explicit instance scope ie variant typescript providers provide myservice singleton true providers provide myservice scope singleton variant typescript injectable singleton true export class myserviceservice constructor injectable scope singleton export class myserviceservice constructor motivation use case changing behavior easier use explizit instance scope forroot methods required xyzrootmodule xyznonrootmodule less unexpected behavior please tell us environment angular version", "num": "17017", "d": "5/2017"}, {"title": "scroll event ca nt detected version", "body": "submitting check one x current behavior ca nt detect scroll event expected behavior able detect scroll event using window scroll scroll elements hostlistener scroll etc minimal reproduction problem instructions stuff stuff etc increment thiscounter motivation use case changing behavior ca nt infinite scroll use one please tell us environment windows pro webstorm used angular cli create package angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter edit plunker incoming worked around issue pressed time solve issue closed didnt time repro plunker", "num": "17015", "d": "5/2017"}, {"title": "transclude ngrepeat", "body": "nested ngrepeat custom directive element transclude compiled link function want get original dom custom directive current behavior expected behavior minimal reproduction problem instructions angular version language", "num": "17014", "d": "5/2017"}, {"title": "error cleanup component display error", "body": "submitting check one x current behavior testbedresettestingmodule error may occur error logged console component failed destroyed logged expected behavior consoleerror line also log error motivation use case changing behavior currently investigate get error disabled ngondestroy still getting error", "num": "17013", "d": "5/2017"}, {"title": "ngzoneonerror receiving errors", "body": "submitting check one x current behavior emit even though component throws error expected behavior able subscribe receive errors emitted minimal reproduction problem instructions see following plunker click button notice error count value change compare following plunker shows working example difference two examples version angular working broke suspect following commit introduced breakage stop change detection errors motivation use case changing behavior want receive errors respond programmatically want able write code library without forcing hosting app provide custom library please tell us environment windows anniversary angular version also reproducible browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome ie edge firefox language typescript xx typescript node aot issues", "num": "17012", "d": "5/2017"}, {"title": "ca nt use latest stable version", "body": "develop web app using angular latest version installed angularcli ca nt build project part error got install error srcappappmodulets module found error ca nt resolve appappcomponent c usersgeorge tzinosdesktopprojectsdocumentmanagementfrontenddocumentmanagementsrcapp srcappappmodulets srcmaints multi webpackdevserverclient srcmaints packagejson name appit version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter typesfilesaver corejs filesaver fontawesome hammerjs materialdesigniconsiconfont primeng robotofontface rxjs socketioclient typings zonejs devdependencies angularcli angularcompilercli typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter karmacoverageistanbulreporter protractor tsnode tslint typescript", "num": "17011", "d": "5/2017"}, {"title": "blocking issue change detection error creating infinite loop", "body": "submitting check one x current behavior possibly relates since change continue change detection error getting infinite loop errors problem template parsing bound variable nt exist causes browser completely hang browser process must manually killed console shows infinite errors like add breakpoint error method get stack trace may help diagnosis since long attach rather embed angular error loop stacktracetxt issue error handler triggering sort change detection completely remove custom error handler class issue still manifests look stack trace see everything going internal angular systemjs maybe keeps trying make xhr calls load files triggers change detection andor zone sure yet fact happening bootstrap possibly something related zonejs something related systemjs expected behavior browser completely hang due something basic template compilation error binding error minimal reproduction problem instructions trying create plunkr number pieces put place mimic going slow going keep trying please tell us environment windows angular version angular zone system browser language typescript", "num": "17010", "d": "5/2017"}, {"title": "aio side nav scrolling", "body": "submitting check one x current behavior sidenav content scroll first menu item top scrolling page additional spacing originally provide room topnav toolbar expected behavior sidenav menu scroll first menu item appropriately placed prevent scrolling sidenav drawer allowing rest content right side continue scrolling minimal reproduction problem instructions full size view go docs open sidenav drawer scroll", "num": "17009", "d": "5/2017"}, {"title": "aio search bar top sidenav mobile", "body": "submitting check one x current behavior search bar topnav bar visually top sidenav drawer accessible expected behavior search bar visually behind sidenav drawer accessible sidenav closed minimal reproduction problem instructions open sidenav drawer using hamburger menu docs mobile view", "num": "17008", "d": "5/2017"}, {"title": "aio search bar expands contracting clicked outside input", "body": "noticeable larger resolution screens submitting check one x current behavior search input topnav bar expanding beyond already expanded state contract user clicks outside search input expected behavior search input contract original size clicked outside", "num": "17007", "d": "5/2017"}, {"title": "aio topnav jumps features docs home resources events", "body": "submitting check one x current behavior topnav jumps clicking features docs home resources events vice versa expected behavior visual jumps occur clicking menu items topnav sidebar", "num": "17006", "d": "5/2017"}, {"title": "render page canactivate guard without aborting navigation", "body": "submitting check one x background user navigates route requires authentication authenticated way use guard render component still update url user trying access current behavior let say user navigates authenticated currently guard order render component would use however rendering component url address bar previous url navigation since navigation aborted expected behavior guard way render route still updating url address bar minimal reproduction problem instructions ts injectable export class loggedinguard implements canactivate constructor private router router private userservice userservice canactivate thisuserserviceisloggedin return true code render page update url would like render update url address bar user trying access motivation use case changing behavior github example go render page even though repo exists authenticated motivation prevent users able distinguish protected nonexistent page security please tell us environment mac osx sierra node angular version browser language", "num": "17004", "d": "5/2017"}, {"title": "proposal reactiveforms add abstractcontrolgetchild method", "body": "submitting check one x current behavior allows flexible parameter specifying required descendent return expected behavior would allow additional type safety case required direct child instance derived parent refers type data model ie type fact method probably suitable following signature would allow caller indicate expected subtype returned minimal reproduction problem instructions motivation use case changing behavior reduce risk typos string value passed proposed method please tell us environment angular version browser language typescript node aot issues", "num": "17000", "d": "5/2017"}, {"title": "reactiveforms abstractcontrolparent could undefined", "body": "submitting check one x current behavior defined returning however return unless set probably root expected behavior defined returning minimal reproduction problem instructions motivation use case changing behavior accurately define contract please tell us environment angular version browser language typescript node aot issues", "num": "16999", "d": "5/2017"}, {"title": "report errors empty style properties animation code", "body": "throw error animations something like set", "num": "16996", "d": "5/2017"}, {"title": "binding src iframe causes iframe flicker", "body": "binding property iframe causes iframe reload every time change detection run even value changed reproduction enter example videoid type unrelated input happens angular versions lt current version time writing note tbosch problem returns new object every time invoked result cached flickering gone see eventually could change behavior would use internal cache already", "num": "16994", "d": "5/2017"}, {"title": "relax error binding hammerjs gestures hammerjs loaded", "body": "submitting check one x current behavior one binding hammerjs gesture hammerjs loaded platformbrowser throws error ie expected behavior angular displays warning stripped production builds ignore binding gesture hammerjs loaded motivation use case changing behavior supporting mobile libraries would like ability provide built support swipe gestures via hammerjs allow optin user using carousel component example one use without load hammerjs important users want build sites intended mobile nt need dependency", "num": "16992", "d": "5/2017"}, {"title": "context block messagesxlf leaks full path", "body": "submitting check one x current behavior running one nodemodules includes translatable strings full path context written file expected behavior expect something along lines motivation use case changing behavior team committers generate different output conflicting checking nt want leak internal file structure please tell us environment", "num": "16989", "d": "5/2017"}, {"title": "migration find animationsngsummary aot", "body": "x bug report feature request support request current behavior application currently powered angular aware need importing animations module problem upgrading angular application still works unless try make aot build left error atloader find module nodemodules angularplatformbrowseranimationsngsummary indeed file though folder animations exists directory dependencies removed redownloaded problem persists minimal reproduction problem instructions provide hardly minimal example execute npm run build prod wo nt compile please tell us environment os linux package manager yarnnpm tried using webpack build tool language typescript transpiled node aot issues", "num": "16988", "d": "5/2017"}, {"title": "make requestoptions extensible", "body": "submitting check one x current behavior currently way request options merged impossible allow custom options without copypasting entire http class requestoptions class mostly due fact method creates new instance feature request improve code easily extended add custom options expected behavior expect extend http include requestoptionsargs interface options squashed merging functionality motivation use case changing behavior would like custom processing authorization headers response handling would also like disable functionality per request basis please tell us environment macos intellij idea angular version browser language typescript node aot issues", "num": "16987", "d": "5/2017"}, {"title": "usage hostlistener leads excessive change detection", "body": "submitting feature request current behavior hostlistener decorator useful feature use lot often events subscribe come document often hostlistener fires document level events need perform additional checks performing change application times handler invoked nothing happens app since hostlistener marks component tree dirty leads heavy reevaluation many components hurts performance tree push paths long hostlistener near leafs expected behavior would appreciate way use hostlistener without triggering change detection sub tree motivation use case changing behavior example usecase directives checking clicks outside component common implementations using directives leads heavy evaluation many components angular version", "num": "16986", "d": "5/2017"}, {"title": "angularplatformserver need support generate html prerendered version", "body": "submitting check one x current behavior currently method generated html depends client use html prerendered version browser load html angular would rerender dom expected behavior platformserver package provide method generate prerendered html version minimal reproduction problem instructions entry file mainserverts typescript import ngexpressengine nguniversalexpressengine import express express import appservermodule appappservermodule import routes routes appengine html ngexpressengine bootstrap appservermodule appset view engine html appset views distclient routesforeach route gt appget route req res gt consoletime resrender index req req res res preboot true consoletimeend express server start using get generated html prerendered version upload html file cdn network open html url browser angular would rerender dom motivation use case changing behavior use case static web server amp also care seo choose angular universal want use prerendered html boot app please tell us environment angular version browser language typescript node aot issues reference", "num": "16985", "d": "5/2017"}, {"title": "angular compiler generates factories components found template entry components", "body": "submitting check one x current behavior component factory generated component used template added entry components list see screenshot expected behavior docs say need entry components component nt entry component nt found template compiler omits minimal reproduction problem instructions go plunker open dev tools source tab plunkerpreviewtarget ng appmodule acompngfactoryjs angular version", "num": "16984", "d": "5/2017"}, {"title": "css picture packing problem", "body": "submitting check one x current behavior use set div tag indexhtml give class box set box stylescss run ng build find image packed root directory expected behavior hope picture resources unified directory unified directory css much picture well minimal reproduction problem instructions motivation use case changing behavior please tell us environment angularcli node os darwin angularcommon angularcompiler angularcore angularforms angularhttp angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli", "num": "16983", "d": "5/2017"}, {"title": "proposal use initial empty value async pipe undefined rather null", "body": "submitting check one x current behavior currently async pipe returns null observable emits first value expected behavior return undefined minimal reproduction problem instructions motivation use case changing behavior null values unlike undefined values returned server json meaning like data available set thus using null values async pipe request completed leads misunderstanding null data come initial empty value async pipe come server initial empty value async pipe undefined would allow use checks like template loading data data async please tell us environment angular version browser language typescript node aot issues", "num": "16982", "d": "5/2017"}, {"title": "router skiplocationchange routing root", "body": "submitting check one x current behavior skiplocationchange router used change component keep url expected behavior skiplocationchange router would change component without changing route minimal reproduction problem instructions motivation use case changing behavior redirections etc change url please tell us environment angular version working correctly browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "16981", "d": "5/2017"}, {"title": "read property apply undefined", "body": "submitting check one x current behavior ran angular page mean read property apply undefined null problem occur expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment os windows node npm angular version angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli browser ie language typescript xx node aot issues", "num": "16980", "d": "5/2017"}, {"title": "add instructions creating bsconfig json file js quickstart tutorial", "body": "submitting check one x x feature request current behavior working tutorial mentions bsconfigjson file nt show place file contents find contents scroll says files click bsconfigjson working tutorial without using zipped code part clear looked final diagram expected behavior would add section showing path contents bsconfigjson file along instructions place much like files doc make clearer line add could similar package json instructions say add bsconfigjson file project folder copypaste following bsconfig contents minimal reproduction problem instructions na motivation use case changing behavior make easier people use javascript tutorial without download zip file advance please tell us environment windows cygwin angular version browser language", "num": "16978", "d": "5/2017"}, {"title": "incorrect file path js quickstart tutorial docs website", "body": "submitting x bug report current behavior page says add new file mainjs srcapp folder follows add new file mainjs src folder follows correct path shown sentence srcmainjs expected behavior page would display add new file mainjs src folder follows minimal reproduction problem instructions visit motivation use case changing behavior instructions incorrect please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview used google chrome language tried find source page contents could find typescript guide page javascript doc pages somewhere else", "num": "16977", "d": "5/2017"}, {"title": "validatorsemail accepting incorrect emails", "body": "submitting check one x current behavior angular email validator currently accepting incorrect email forms current email regex allows expected behavior angular email validator mark control invalid minimal reproduction problem instructions create reactive form email input field angular email validator wrong email exemple plunker reproducing issue please tell us environment windows intellij webstorm angular version browser language typescript", "num": "16976", "d": "5/2017"}, {"title": "\u0275reflector error encountered resolving symbol values statically", "body": "submitting check one x current behavior throws expected behavior provide without error minimal reproduction problem instructions add add ts import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import compilerproviders angularcompiler import appcomponent appcomponent ngmodule declarations appcomponent imports browsermodule formsmodule httpmodule providers compilerproviders bootstrap appcomponent export class appmodule motivation use case changing behavior inject runtime use please tell us environment windows visual studio code angularcli angular version browser language typescript node aot issues output angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli", "num": "16968", "d": "5/2017"}, {"title": "update aio docs angular instead angular", "body": "submitting check one x current behavior see mentions docs please change say expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16965", "d": "5/2017"}, {"title": "tutorial toh page", "body": "submitting check one x current behavior tabs section created expected behavior page herotutorial section update appmodule tabs created shows code instead maketabs null srcappappmodulets srcappappmodulets marked browser chrome mozilla", "num": "16961", "d": "5/2017"}, {"title": "locale set jit mode", "body": "submitting check one x current behavior setting localeid via providers passed bootstrapmodule nt work locale enus hack aimed fix issue working applicationmodulets provider localeid working factory nt get localeid injected forward problem jit mode aot mode works well expected behavior overriding localeid work jit mode minimal reproduction problem instructions motivation use case changing behavior usage described official guide please tell us environment angular version browser chrome language typescript", "num": "16960", "d": "5/2017"}, {"title": "resolve parameters browserplatformlocation", "body": "x bug report moving angular upgrading webpack development environments works fine try switch production environments got white screen error appmodule import ngmodule applicationref angularcore import browsermodule angularplatformbrowser import formsmodule reactiveformsmodule angularforms import httpmodule angular import routermodule angularrouter import removengstyles createnewhosts createinputtransfer angularclasshmr import browseranimationsmodule angularplatformbrowseranimations import ngxwebstorage import envproviders environment import rootroute approuting import app appcomponent import appstate interalstatetype appservice import globalstate globalstate import pagesmodule xxxxpagesmodulets import authmodule xxxxauth import logloggerproviders import cookieservice import logincomponent xxxxauthloginlogincomponent import formusercomponent xxxxcommoncomponentsformuserformusercomponent import formaccountcomponent xxxxcommoncomponentsformaccountformaccountcomponent import userservice xxxxcommonservicesuserservice import accountservice xxxxcommonservicesaccountservice import dialogmodule primengcomponentsdialogdialog import buttonmodule primengcomponentsbuttonbutton import growlmodule tooltipmodule primengprimeng import formsitecomponent xxxxcommoncomponentsformsiteformsitecomponent import siteservice xxxxcommonservicessiteservice const appproviders appstate globalstate type storetype state interalstatetype restoreinputvalues gt void disposeoldhosts gt void ngmodule bootstrap app declarations app logincomponent imports browsermodule httpmodule routermodule formsmodule reactiveformsmodule authmodule pagesmodule rootroute dialogmodule buttonmodule growlmodule tooltipmodule browseranimationsmodule providers envproviders appproviders logloggerproviders cookieservice userservice accountservice siteservice export class appmodule constructor public appref applicationref public appstate appstate hmroninit store storetype store storestate return consolelog hmr store jsonstringify store null thisappstatestate storestate restoreinputvalues store let restoreinputvalues storerestoreinputvalues settimeout restoreinputvalues thisappreftick delete storestate delete storerestoreinputvalues hmrondestroy store storetype const cmplocation thisapprefcomponentsmap cmp gt cmplocationnativeelement const state thisappstatestate storestate state storedisposeoldhosts createnewhosts cmplocation storerestoreinputvalues createinputtransfer removengstyles hmrafterdestroy store storetype storedisposeoldhosts delete storedisposeoldhosts webpackprod const helpers require helpers const webpackmerge require webpackmerge const commonconfig require webpackcommonjs const provideplugin require webpacklibprovideplugin const defineplugin require webpacklibdefineplugin const normalmodulereplacementplugin require webpacklibnormalmodulereplacementplugin const ignoreplugin require webpacklibignoreplugin const dedupeplugin require webpackliboptimizededupeplugin const uglifyjsplugin require webpackliboptimizeuglifyjsplugin const require const webpack require webpack var path require path const env processenvnodeenv processenvenv production const host processenvhost localhost const port processenvport const metadata webpackmerge commonconfig env env metadata host host port port env env hmr false moduleexports function env return webpackmerge commonconfig env env devtool sourcemap output path helpersroot dist filename name chunkhash bundlejs sourcemapfilename name chunkhash bundlemap chunkfilename id chunkhash chunkjs plugins new webpackloaderoptionsplugin htmlloader minimize true removeattributequotes false casesensitive true customattrsurround customattrassign options tslint emiterrors true failonhint true metadata metadata context pathresolve dirname debug false new new defineplugin env jsonstringify metadataenv hmr metadatahmr processenv env jsonstringify metadataenv nodeenv jsonstringify metadataenv hmr metadatahmr new normalmodulereplacementplugin helpersroot node global true crypto empty process false module false clearimmediate false setimmediate false please tell us environment os ubuntu ide webstorm angular version browser chrome version language typescript node aot issues", "num": "16958", "d": "5/2017"}, {"title": "routing amp navigation example compile", "body": "submitting check one x current behavior download example code routing amp navigation run complete successfully run got following tcs errors npm start angularioexample prestart c usersadocumentslearnangularrouter npm run build angularioexample build c usersadocumentslearnangularrouter tsc p src nodemodules angularplatformbrowseranimationssrcanimationrendererdts error find module angularanimationsbrowser nodemodules angularplatformbrowseranimationssrcprovidersdts error find module angularanimationsbrowser expected behavior example code compile run minimal reproduction problem instructions download example run motivation use case changing behavior please tell us environment using windows intel machine windows version os build angular version angular fpr dependencies browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript version node aot issues using node version npm version", "num": "16954", "d": "5/2017"}, {"title": "improve type checking include checking model binding", "body": "import component angularcore import commonservice servicecommonservice component selector testb template \u8f93\u51fa \u5207\u6362 export class testb class myobjct private n number must use value make type number string", "num": "16952", "d": "5/2017"}, {"title": "custom elements throw error used", "body": "submitting check one x current behavior defining custom element spec spits error custom element unusable app crashes expected behavior custom element would inserted dom related lifecycle callbacks would called minimal reproduction problem instructions instructions needed error throws upon opening motivation use case changing behavior custom elements work fine angular please tell us environment os win ide plunkrvs code ng cli angular version browser chrome likely also opera safari ce supported browsers language typescript possibly node aot issues", "num": "16951", "d": "5/2017"}, {"title": "aot loading error appmodulengfactory found", "body": "trying use aot angular project followed angulario aot folder files generated successfully errors run following command run application browser getting following error console sure appmodulengfactory aot folder packagejson file tsconfigaotjosn compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany false suppressimplicitanyindexerrors true files wwwroottypescriptmodulessharedmodulets wwwroottypescriptmodulestestmodulets wwwroottypescriptmodulesappmodulets wwwroottypescriptmaints angularcompileroptions gendir wwwrootaot skipmetadataemit true", "num": "16950", "d": "5/2017"}, {"title": "browseranimationsmodule must import browsermodule", "body": "submitting check one x current behavior since browseranimationsmodule imports browsermodule impossible use browseranimationsmodule lazy loading reusable libraries take dependency commonmodule browsermodule expected behavior able use reusable libraries browseranimationsmodule anywhere currently minimal reproduction problem instructions create npm package takes dependency browseranimationsmodule use package another project project already imports browsermodule see reimport browsermodule expected however prevents us using browseranimationsmodule either lazy loading npm packages motivation use case changing behavior able use browseranimationsmodule reusable code please tell us environment issue angular environments angular version angular version browser language node aot issues", "num": "16949", "d": "5/2017"}, {"title": "animations end state style regression", "body": "submitting current behavior follow using latest master builds pr merged animation end styles persistent ie stay even setting new state wrong style persisted last working version pr addressed reported issues issue slipped expected behavior expect last style persisted outside parallel also state change occurs inflight another animation expect new state styles animation applied minimal reproduction problem instructions repro uses master builds expect opacity animation finishes ie normal state end styles overriding last plunker ie seems ignoring order also changing state back normal intrans animation complete still expect apply normal styles motivation use case changing behavior fix animation end styling behave set plunker ng version back see desired behaviour nt forget set ngnightly false please tell us environment windows code yarn ngcli angular version latest angularbuilds browser tested chrome desktop ios safari wkwebview language typescript node aot issues cc matsko", "num": "16947", "d": "5/2017"}, {"title": "docs ahead time compilation", "body": "submitting check one x current behavior source rollupconfigjs used following lines dest seems incorrect explanatory text says dest attribute tells rollup create bundle called buildjs dist folder would imply distbuildjs expected behavior rollupconfigjs probably specify minimal reproduction problem instructions visit examine source rollupconfigjs motivation use case changing behavior improving documentation please tell us environment angular version docs monday may browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16946", "d": "5/2017"}, {"title": "datepicker add change event", "body": "submitting check one x current behavior select date change change event emitted expected behavior select date change event emitted minimal reproduction problem instructions motivation use case changing behavior compare date please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node v", "num": "16945", "d": "5/2017"}, {"title": "ngc compilercli work upgrade angular", "body": "submitting check one x current behavior project use ngc p tsconfiglibjson compile module upgrade angular prompt error error find module folderfilename obviously file path parsed incorrectly folderfilename go back old compilercli compile works tsconfig compileroptions target module commonjs declaration true stripinternal true emitdecoratormetadata true experimentaldecorators true allowsyntheticdefaultimports true noimplicitany false removecomments true allowunreachablecode false moduleresolution node outdir dist lib dom skiplibcheck true types angularcompileroptions gendir dist strictmetadataemit true skiptemplatecodegen true annotateforclosurecompiler true flatmoduleoutfile indexjs flatmoduleid modulename debug false files srclibindexts compileonsave false buildonsave false expected behavior ngc compile works minimal reproduction problem instructions reproduce src subfolders motivation use case changing behavior please tell us environment windows server angular version angularcommon angularcore angularcompiler angularcompilercli angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx typescript node aot issues", "num": "16944", "d": "5/2017"}, {"title": "remove move docs sidenav item list mobile view", "body": "docs item already expanded marketing menu items necessary list remove move last list marketing pages add colon something suggest items docs menu subitems", "num": "16940", "d": "5/2017"}, {"title": "api item navbar aligned rest items", "body": "", "num": "16939", "d": "5/2017"}, {"title": "aio accesibility suggestions header", "body": "friend mine uses screen reader following feedback", "num": "16938", "d": "5/2017"}, {"title": "aio fail docs examples missing", "body": "stuff like fail build", "num": "16936", "d": "5/2017"}, {"title": "reactiveforms formarrayat could return undefined", "body": "submitting check one x current behavior method signature declares return value expected behavior method signature declares return value since returns result accessing contained array returned supplied index outofrange respect target note point issue even minimal reproduction problem instructions typescript const formbuilder formbuilder new formbuilder const formarray formarray formbuilderarray undefined result please tell us environment angular version browser chrome language typescript node aot issues", "num": "16933", "d": "5/2017"}, {"title": "aio add staging site google webmaster", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16932", "d": "5/2017"}, {"title": "aio update google analytics code check captured", "body": "", "num": "16931", "d": "5/2017"}, {"title": "story multiple independent apps page cms content extensions", "body": "submitting check one x story current behavior based understand atm production grade angular app create compact js files work together assume angular stuff existing html page prevents using angular lot important cms use cases require adding multiple standalone parts page also causes lot trouble needing inject instancespecific initialization values like instance id needed talk server apis angular possible work around limitation loading partial libraries onebyone cms could ensure certain libraries loaded creating custom bootstrapper would inject initialization values instance app angular seems impossible extremely difficult expected behavior many cmss allow contenteditors add multiple parts page example gallery interactive graphic contact form content many parts js based example touchgallery contact form function properly parts autonomous adding one nt require sideeffect free adding second nt break first addition app could inserted multiple times imagine text gallery text galleries scenarios must work multiple instances app various instances different apps work properly app must fed initialization parameters like instanceid must provided surrounding html around tag andor custom js bootstrapper say bootstrap first appsomething values second would also beneficial certain optimizations could easily prevent loading certain libraries multiple times much lower priority minimal reproduction problem instructions hard provide running example basically try add two different angular apps page met plethora errors example angular parts complain preexisting initialization etc addition tried many ways inject external parameters methods found rely cluttering variable global mechanisms nt work different values instance also found way access initial tag could contain initialization values available moment app built especially appinitializer motivation use case changing behavior important use case many cmscomponent scenarios note explicitly talking components run cms output admin uis adminuis could ways sync development somehow compatible work complex dependencies would nasty whereas outputcomponents impossible coordinate made separate teams please tell us environment case developing cms built dnn angular version browser applicable language using cli normal build prod", "num": "16930", "d": "5/2017"}, {"title": "aio indenting markdown spaces breaks block level formatting", "body": "line line line renders fine line line line", "num": "16929", "d": "5/2017"}, {"title": "docs document new syntax local assignment expressions", "body": "submitting check one x current behavior checked template syntax page nt see docs new assignment syntax html mename metitle would nice included", "num": "16928", "d": "5/2017"}, {"title": "force model value changed via ngkeypress nt reflect ngvalue", "body": "submitting check one x current behavior force model value changed via ngkeypress nt reflect ngvalue expected behavior change value ngvalue must evaluated input value must updated using angular nt occurs minimal reproduction problem instructions motivation use case changing behavior maintain behavior angular please tell us environment windows pro eclipse neon jee spring boot angular version browser chrome language node aot issues applicable", "num": "16925", "d": "5/2017"}, {"title": "possible bug async pipe ngfor ngtemplate hideshow", "body": "submitting check one x current behavior async variable used statement reset used inside hiddenshown expected behavior keep previous state async variable hiddenshown minimal reproduction problem instructions steps following demo change select value drinks select drink remove drink value selected drink foods displaying demo motivation use case changing behavior concrete use case something like demo case angular version browser", "num": "16924", "d": "5/2017"}, {"title": "use arrow function module lazy loading", "body": "submitting check one x current behavior consider following minimal router set jit compiler fails angularcorebundlescoreumdjs line arrow functions prototype property changing lazy loading use function syntax solves problem expected behavior able use arrow function lazy loading module minimal reproduction problem instructions create angular project using version add router config includes loadchildren using arrow function run motivation use case changing behavior since angular supports allowed take advantage arrow function definition lazy loading please tell us environment os windows ide visual stidio code package manager npm http server litesever dev angular version browser chrome latest language typescript node aot issues", "num": "16923", "d": "5/2017"}, {"title": "routeconfig routeconfig bug", "body": "packagejson want user dynamic route following code private updaterouteconfig routes let path loadchildren systemusermanagerbfusermanagermodule bfusermanagermodule let path let loadchildren systemusermanagerbfusermanagermodule bfusermanagermodule let b path path loadchildren loadchildren result", "num": "16922", "d": "5/2017"}, {"title": "asyncpipe breaks change detection emitting ngoninit child component", "body": "submitting check one x current behavior following structure components simple application app container emitter app component shows observable value using async pipe emitter component emits message said observable container component simply shows emitter component rxjs replaysubject message emitted emitter method causes change detection cycle runs expected behavior async pipe able handle messages emitted time without causing minimal reproduction problem instructions see open dev console see error motivation use case changing behavior observable hooked directly modify property parent component error would understandable however think job async pipe handle incoming messages way update view right time otherwise responsibility shifted code emits message code might even know used together angular comments stackoverflow suggest using workaround managed solve wrapping emission little bit nicer encountered problem upgrading angular angular worked without problems problem also nt occur emitter component child right app component removing container component please tell us environment angular version browser tested chrome language typescript", "num": "16921", "d": "5/2017"}, {"title": "set variable key variable ngmodel form input", "body": "submitting check one x updating project angular version normally update works well project met set attribute name variable thanks", "num": "16920", "d": "5/2017"}, {"title": "animations end state style persist animation ends ios safari", "body": "submitting check one x current behavior animation completes state style defined target state style persist animating correctly specified style ios safari expected behavior expect state style persist animation completes minimal reproduction problem instructions note need test ios safari see bug works expected chrome desktop tested ios click top div color stay red bottom div separate animation bug repro motivation use case changing behavior correct animations styling please tell us environment windows code yarn ngcli angular version browser ios safari wkwebview language typescript node aot issues", "num": "16919", "d": "5/2017"}, {"title": "animations end style flashing beginning animation ios safari enter", "body": "submitting check one x current behavior ios safari animation transition briefly showing end style flashes begins animation animates fine desktop chrome though expected behavior animation start current specified style animate end style ie jump end style start style animate end style minimal reproduction problem instructions note need test ios safari see bug works expected chrome desktop tested ios click grey button bottom blue div fade bug fade note top blue div plunker separate bug ios end state style persist sure want separate github issue related motivation use case changing behavior reduce bad animations mobile please tell us environment windows code yarn ngcli angular version browser ios safari wkwebview language typescript node aot issues", "num": "16918", "d": "5/2017"}, {"title": "router animation query empty list error", "body": "submitting check one x current behavior expected behavior animation minimal reproduction problem instructions switch angular version browser chrome least language typescript matter", "num": "16917", "d": "5/2017"}, {"title": "docs aio missing code", "body": "submitting check one x current behavior update appmodule section displays expected behavior display changes made code section minimal reproduction problem instructions point browser motivation use case changing behavior nubes like know code changes look like please tell us environment ubuntu linux angular version dunno browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chromium version built ubuntu running ubuntu language typescript xx dunno node aot issues dunno", "num": "16915", "d": "5/2017"}, {"title": "angular http posting empty form data", "body": "hi tried posting form data http rxjs observable went well till last project working time attached code classification import injectable angularcore import http response headers angular import observable rxjsobservable import rxjsaddoperatorcatch import rxjsaddoperatormap import rxjsaddoperatortopromise import appsettings appsettings const contentheaders new headers contentheadersappend accept applicationxwwwformurlencoded contentheadersappend contenttype applicationxwwwformurlencoded injectable export class userservice", "num": "16914", "d": "5/2017"}, {"title": "docs routing example code showing", "body": "submitting check one x current behavior tutorial routing update appmodule example code show text expected behavior see source code appmodulets change minimal reproduction problem instructions open routing tutorial page search motivation use case changing behavior fix docs please tell us environment chrome browser browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser", "num": "16913", "d": "5/2017"}, {"title": "animations timing order delay match order", "body": "submitting check one x current behavior currently angular animations timing string order order different css animations syntax expected behavior expected order match css syntax consistency", "num": "16912", "d": "5/2017"}, {"title": "current implementation location overwrites states instead maintaining", "body": "current behavior switching one state state currently using back button forward button browser location class currently overwrites existing history using platformlocationreplacestate function sends null instead checking previously state exists expected behavior expect existing state brower history api check calling historystate location service replacestate takes state consideration replacing minimal reproduction problem instructions take current setup routing open page browser add state historyreplacestate null navigate away click back button browser check state using historystate notice state overwritten null value motivation use case changing behavior angular able support native history api ignore previously set states script please tell us environment browser angular version angular latest browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript latest", "num": "16911", "d": "5/2017"}, {"title": "docs date instead", "body": "submitting current behavior docs say angular expected behavior docs angular minimal reproduction problem instructions go", "num": "16909", "d": "5/2017"}, {"title": "aio setup production deployment scripts", "body": "", "num": "16908", "d": "5/2017"}, {"title": "npm start working", "body": "new angular help guide angulario ii finding way npm wouldnot start without node module folder node module folder avaliable quickstart repo please helpppppp submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16907", "d": "5/2017"}, {"title": "aio possible future improvements scrollspy", "body": "following list things could improved whenif time permits animate scrolling toc getting active element view revise requirements element become active eg top page highlight toc elements eg based proximity viewport refactor make observables lazy simplify service see", "num": "16906", "d": "5/2017"}, {"title": "aio replace contents text floating right toc", "body": "separate text rest horizontal rule", "num": "16900", "d": "5/2017"}, {"title": "aio option blow away service worker", "body": "", "num": "16897", "d": "5/2017"}, {"title": "input value depend media query", "body": "submitting check one x current behavior actually media query component must implement system detected change create specific input expected behavior components could add input decorator support media query values motivation use case changing behavior add fast media query support component material components", "num": "16896", "d": "5/2017"}, {"title": "documentation issue prefixing private variables underscore style guide vs intercepting inputs setter", "body": "submitting check one x current behavior style guide says avoid prefixing private properties underscores example component communication intercepting change property via setter exactly expected behavior either change style guide take account exception change component communication example variables underscore minimal reproduction problem instructions contrast motivation use case changing behavior consistent easy understand documentation best practices", "num": "16893", "d": "5/2017"}, {"title": "get componentprovided service injector", "body": "submitting check one x current behavior since upgrading angular unable use get service instance provided component definition possible angular throws exception expected behavior would expect able resolve instance service injected component constructor via component injector instance minimal reproduction problem instructions following component throw exception taken angular quickstart project import component injectable injector angularcore injectable export class myservice say void consolelog saying hi component selector myapp template providers myservice export class appcomponent name angular constructor injector injector let service injectorget myservice servicesay however also inject component exception thrown service retrieved via injector would expect motivation use case changing behavior app many componentlevel service classes implement various behaviors used components however unlike regular services need receive component lifecycle events ngoninit ngondestroy need mixandmatch behaviors want use inheritance component class achieve use reflectiveinjector manually instantiate services stash instances map forward lifecycle events create reflective injector using component injector parent let injector reflectiveinjectorresolveandcreate injector create instance one componentlevel services services injectable may depend services provided component let instance injectorresolveandinstantiate type ngondestroy invoked component ngondestroy instance instancengondestroy worked well prior upgrading angular exception listed thrown try create instance one services depends another service provided component definition please tell us environment running osx sierra webstorm npm webpack angular version browser able reproduce chrome firefox osx language typescript xx using typescript node aot issues node", "num": "16892", "d": "5/2017"}, {"title": "templateurl relative path resolving", "body": "submitting check one x current behavior latest version angular need use relative url templateurl components components used within angular library building library compiles referenced dependency new application old code within navcomponent new proposed code however getting following error failed load resource server responded status found expected behavior path route correctly navcomponenthtml folder navcomponentts file minimal reproduction problem instructions since building library nt quite yet finished quite hard reproduce plunker another another environment however hopefully someone guidancehelp new templateurl work see example standard typescript component referencing html template directory similar app components navcomponentts navcomponenthtml need reference navcomponenthtml templateurl within navcomponentts files folder motivation use case changing behavior upgrading latest version angular ideally need use relative paths url absolute paths moduleid deprecated please tell us environment windows visual studio code angular version browser chrome language typescript", "num": "16891", "d": "5/2017"}, {"title": "could resolve lazy loading modules", "body": "error could resolve admindashboardadmindashboardmodule usersdesktopmyapppublicsrcappsudashboardsudashboardmodulets guys get error run ng build op dist w immediately wen make changes automatically app runs watch mode error gone able figure", "num": "16888", "d": "5/2017"}, {"title": "input attribute named style failing phantomjs", "body": "submitting check one x current behavior make component attribute input named style phantomjs produce typeerror failed attempted assign readonly property works properly navigator expected behavior nt fail phantomjs minimal reproduction problem instructions export class stylecomponent implements oninit input style apphtml detected bug using primeng wich uses style property pass style components found issolated project weird behaviour motivation use case changing behavior bug developers may use attribute named style wich name usual input attribute want test phantomjs code please tell us environment windows ngcli npm node angular version browser phantomjs language node aot issues", "num": "16887", "d": "5/2017"}, {"title": "need expose api hammergestureconfig control stoppropagation preventdefault hammerjs", "body": "submitting check one x current behavior currently use hammerjs control page scrolling element scrolling using hammerjs page element detect swipe action react ca nt find api hammergestureconfig control stoppropagation preventdefault hammerjs expected behavior swiping element page nt want page go scrolling minimal reproduction problem instructions motivation use case changing behavior please tell us environment osx visual studio angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx node aot issues", "num": "16885", "d": "5/2017"}, {"title": "static reflector treat objectfreeze noop", "body": "submitting check one x current behavior error generated use uses metadata expression expected behavior calling treated noop minimal reproduction problem instructions wrap expression motivation use case changing behavior improve economics objects used runtime const values frozen value also referenced metadata", "num": "16882", "d": "5/2017"}, {"title": "ca nt set queryparams multiple times", "body": "submitting check one x current behavior stream emits latest params even execute multiple times previous queryparams emitted even set console output expected behavior emit times console output minimal reproduction problem instructions look execute times set query params current path latest param going set provided rx console logging subscription show works motivation use case changing behavior setting default query parameters page multiple independent places time please tell us environment operating system macos sierra angular version browser chrome language typescript xx typescript node aot issues", "num": "16881", "d": "5/2017"}, {"title": "fakeasync trigger change detection", "body": "submitting check one x current behavior writing tests use users currently need manually trigger change detection ca nt fully simulate task updates ngzone running within fakeasync never emit events thus change detection run currently fix allowing users call users often confused need users tend think change detection detail start writing unit tests creates friction proposed solution angular runs change detection microtasks execution returns browser fakeasync function simulates passage time flush pending microtasks thus reasonable expect change detection run every time called since implicitly flushes microtasks could done either modifying fakeasync make ngzone emit onmicrotaskempty events easier solution might function directly invoke change detection might right behavior app using alternate change detection strategy onpush something custom still allow people call also default change detection pass every call since would less surprising users", "num": "16878", "d": "5/2017"}, {"title": "support interpolation syntax metadata collector", "body": "submitting check one x current behavior metadata collector reports unsupported syntax form interpolation strings expected behavior interpolations strings handled like string concatenation minimal reproduction problem instructions incllude interpolation string exported symbol motivation use case changing behavior better support full syntax supported typescript", "num": "16876", "d": "5/2017"}, {"title": "literal shorthand resolve local references", "body": "reported micheal brand gitter submitting check one x current behavior collecting metadata object literal local references resolved correctly resulting external reference fails compile expected behavior local nonexported values correctly collected minimal reproduction problem instructions run collector following source expected value collected received reference global", "num": "16872", "d": "5/2017"}, {"title": "docs aio one code block tutorial pt shown angulario", "body": "submitting check one x current behavior go section update appmodule instead code see following expected behavior code block everywhere else please tell us environment firefox bit fedora", "num": "16870", "d": "5/2017"}, {"title": "run async validation clickstream etc", "body": "bug investigation question current behavior model driven forms model options validation occurred got workaround sync validation however problem async expected behavior possibility run async validators eventstream example minimal reproduction problem instructions make async validation button try implement async validation click another button motivation use case changing behavior got case launch async validation outside event also control sync validation please tell us environment windows angular browser typescript thank", "num": "16869", "d": "5/2017"}, {"title": "candeactivate called null component lazy loading", "body": "submitting x bug report gt search github similar issue pr submitting current behavior trying use candeactivate guard lazy loaded route component parameter null might regression seen provider problem expected behavior expect able get reference lazy loaded component minimal reproduction problem instructions startcomponent lazy loaded route click link click trigger routing another component also triggers candeactivate guard route however candeactivateguardcandeactivate component get startcomponent parameter get null instead call functions startcomponent see deactivate see problem console angular version browser use chrome problem browsers seem browser specific way", "num": "16868", "d": "5/2017"}, {"title": "import testbed upgrade", "body": "submitting check one x current behavior import async testbed componentfixture angularcoretesting testbed undefined production code works tests expected behavior functionsconst correct import angularcoretesting minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows server npm angular version angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "16867", "d": "5/2017"}, {"title": "upgrade angular type script errors", "body": "submitting check one x current behavior upgrade tsc p src gave lot ts errors like property value exist type observable fix code way ignore errors tsconfig compileroptions target module commonjs moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany false suppressimplicitanyindexerrors true expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16865", "d": "5/2017"}, {"title": "timing parameter ca nt used param", "body": "submitting check one x current behavior matsko presentation animations ngconf merge wanted use snippet like following import animate animation style animationreferencemetadata angularanimations export const fadein animationreferencemetadata animation style opacity animate duration style opacity params duration however angular complains invalid value used expected behavior customize timing parameter input variables new animation system minimal reproduction problem instructions use project referencing angular master builds github adding animation app component nt pushed changes initial repo ngcontribanimations needed nt anything custom though except package versions systemjs config motivation use case changing behavior referred repo implies needed work set animations project wanted make separated open source duration animation probably parameter expected customizable explained conference due incorrectly using api please tell us environment linux vs code npm angular version master builds browser tested chrome since error hapenning angular could say language typescript node aot issues", "num": "16864", "d": "5/2017"}, {"title": "docs angularcompileroptions angulario docs", "body": "place find documents angularcompileroptions link quite insufficient comments code options docs reflect referred", "num": "16861", "d": "5/2017"}, {"title": "angular umd fails runtime loaded webpack via externals config option", "body": "submitting current behavior create application loads umd modules instead compiling create new app angularcli run ng eject tune webpack indexhtml make angular modules externals load umd versions npm run start app stars fails runtime expected behavior app load apps works rendered minimal reproduction problem instructions repo last commit changed angular angular umd modules app runs motivation use case changing behavior want load umd modules external modules runtime main application angular modules must loaded externally please tell us environment windows angularcli e node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli", "num": "16857", "d": "5/2017"}, {"title": "aio core module import shared module", "body": "section ngmodules introducing shared module core module import shared module instead imports commonmodule directly document provides explanation seems kind antipattern reason import shared module core module", "num": "16855", "d": "5/2017"}, {"title": "aio heading anchor accessibility", "body": "anchor tags used deep link headings poorly constructed anchors still hrefs causing call ghost controls accessibility information focused pair hover state child icon element focus state make visible pretty bad accessibilitywise screenshot fix move hover state anchor add focus state time remove work better", "num": "16854", "d": "5/2017"}, {"title": "app wo nt load probably router problem", "body": "submitting check one x current behavior please see upgraded angular started weird problem used work something router initialization maybe something related tried isolate reproducible case exception included github readmemd appmodule uses modules test simple test app renders content core represent core reusable module feaure additional feature module shows actual problem module description app module setups imports access service test app module tries use component fails feature module initialize dependency used get service core module fails service core module trying inject router probably initialized yet expected behavior feature module able get service inside initializer core module minimal reproduction problem instructions motivation use case changing behavior moved angular please tell us environment macos x using latest ng please check github details angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language", "num": "16853", "d": "5/2017"}, {"title": "ng build prod aot file sizes way big", "body": "submitting check one x current behavior building app production using vendor comes way large assume including every file nodemodules expected behavior expected shrink vendor things used around seen similar issues minimal reproduction problem instructions motivation use case changing behavior want build files production please tell us environment mac os jetbrains webstorm golang http server npm package manager angular version language typescript xx typescript node aot issues command output looks like", "num": "16850", "d": "5/2017"}, {"title": "data binding working dynamic component", "body": "submitting check one x current behavior component created inserted using factory shows ui databinding oneway twoway get applied expected behavior component work though created normal way minimal reproduction problem instructions plunkr illustrates issues reported issue closed deemed support request motivation use case changing behavior please tell us environment windows tomcat angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview ie ff esr ff language typescript xx typescript node aot issues", "num": "16849", "d": "5/2017"}, {"title": "hostlistener firing reset event", "body": "submitting check one x current behavior hostlistener reset ngmodel fired reset event occured expected behavior hostlistener reset function must execute reset event fired minimal reproduction problem instructions submit right result reset input element clearing success class working hostlistener reset ngmodel fired hostlistener bsformcontroldirectivets file forminput appts file motivation use case changing behavior please tell us environment windows vscode angularcli angular version browser firefox ie language typescript node aot issues", "num": "16847", "d": "5/2017"}, {"title": "crossplatform utility scripts windows", "body": "submitting check one x current behavior utility scripts including windowsspecific crossplatform shell scripts require nixlike environment possible run scripts bash comes git windows contains strippeddown msys prerequisite scripts run bash git windows rely nixlike environment require full mingw installation nt prerequisite works lucky chance fails due crlf numerous problems windows paths c cygwinbinbashexe buildsh fails error c portablegitbinbashexe buildsh succeeds c buildsh expected behavior utility scripts crossplatform executed windows batcmd files andor gulp tasks minimal reproduction problem instructions motivation use case changing behavior current scripts nt crossplatform nt match requirements building testing windows please tell us environment windows node npm git angular version", "num": "16846", "d": "5/2017"}, {"title": "remembering url state navigating components", "body": "submitting current behavior let say router allowing access several components case inherited single abstract class necessarily relevant one able modify url order preserve state later like bookmark copypaste someone something like play filter url becomes reload page url remains get filtered view click another panel url becomes part works navigate first component click go query panel parameter disappeared url view expected behavior paramaters preserved url would course optional motivation use case changing behavior much easier coherence url app state navigation amp remembering component state please tell us environment app used common oses npm apache angular version browser chrome firefox ie safari language typescript node aot issues tried several things changing implementation routereusestrategy saving url component changing dom directly", "num": "16845", "d": "5/2017"}, {"title": "lazy load external module nodemodules", "body": "submitting check one x lazy load local module like module lazy load module comes external library resides nodemodules", "num": "16843", "d": "5/2017"}, {"title": "", "body": "c", "num": "16842", "d": "5/2017"}, {"title": "unable access child structural directive parent structural directive", "body": "submitting check one x current behavior neither viewchild contentchild set expected behavior either viewchild contentchild set minimal reproduction problem instructions trying access child structural directive parent directive trying access child ts directive selector appchildstruraldirective export class childstruraldirective constructor private templateref templateref private viewcontainer viewcontainerref private renderer renderer thisviewcontainercreateembeddedview thistemplateref ngafterviewinit void directive selector appparentstruraldirective export class parentstruraldirective viewchild childstruraldirective viewchild childstruraldirective contentchild childstruraldirective contentchild childstruraldirective constructor private templateref templateref private viewcontainer viewcontainerref private renderer renderer thisviewcontainercreateembeddedview thistemplateref ngafterviewinit void consolelog ngafterviewinit viewchild thisviewchild consolelog ngafterviewinit contentchild thiscontentchild ngaftercontentchecked void consolelog ngaftercontentchecked viewchild thisviewchild consolelog ngaftercontentchecked contentchild thiscontentchild component selector myapp template export class app constructor plunkr reproduces issue motivation use case changing behavior channel parent child directives talk perform specific set operations child elements please tell us environment ubuntu angular version angular browser language typescript", "num": "16840", "d": "5/2017"}, {"title": "error triggered unexpected situation", "body": "submitting check one x current behavior following code triggers following error error error ngmodel used within form tag either name attribute must set form control must defined standalone ngmodeloptions expected behavior error triggered minimal reproduction problem instructions motivation use case changing behavior abnormal behavior needs patch normal error message unclear would require precise documented please tell us environment os os x sierra package manager npm http server ng serve angular version angularcore browser chrome firefox language typescript xx node aot issues ps idea name bug would happily change name better one", "num": "16839", "d": "5/2017"}, {"title": "datepipe wrong german short date format", "body": "submitting check one x current behavior using locale dede mydate date short returns day month numbers lt without leading example expected behavior format leading day month minimal reproduction problem instructions set locale dede output date short format motivation use case changing behavior correct date formating angular version browser language typescript", "num": "16838", "d": "5/2017"}, {"title": "got uncaught error ca nt resolve parameters appcomponent inject whatever construdtor function", "body": "submitting check one x current behavior got uncaught error ca nt resolve parameters appcomponent inject whatever construdtor function expected behavior wan na inject router use appcomponent import component angularcore import router angularrouter component selector approot templateurl appcomponenthtml export class appcomponent constructor private router router runs well remove causes error whatever put packagejson bootstrapts import platformbrowserdynamic angularplatformbrowserdynamic require zonejs import appmodule appcontainercontainermodule platformbrowserdynamic bootstrapmodule appmodule appmodule import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import routermodule routes router angularrouter import appcomponent containercomponent import logincomponent modulesloginlogincomponent export const approutes routes path component appcomponent children path login component logincomponent path redirectto login ngmodule imports browsermodule formsmodule httpmodule routermoduleforroot approutes usehash true declarations appcomponent logincomponent providers bootstrap appcomponent export class appmodule error everything runs well remove params something di thanks helping", "num": "16837", "d": "5/2017"}, {"title": "angular aot prod build compile error typescript strict mode equal true", "body": "using latest angular angular cli using http requests running equal fine run issue running everything fine ng build prod aot hash time chunk kb rendered error nodemodules angular type requestoptionsargs undefined property method string index signature error nodemodules angular type requestoptionsargs undefined property headers string index signature error nodemodules angular type requestoptionsargs undefined property body string index signature error nodemodules angular type requestoptionsargs undefined property url string index signature error nodemodules angular type requestoptionsargs undefined property search string index signature error nodemodules angular type requestoptionsargs undefined property params string index signature error nodemodules angular type requestoptionsargs undefined property withcredentials string index signature error nodemodules angular type requestoptionsargs undefined property responsetype string index signature someone confirm angularhttp bug library bug", "num": "16835", "d": "5/2017"}, {"title": "aio scrolltotop clear hash", "body": "sits right use nt clear hash", "num": "16833", "d": "5/2017"}, {"title": "gulp validatecommitmessages processes commits master", "body": "submitting check one x current behavior buffer limitation causes fixed becomes evident processes existing commits run locally results error expected behavior newer commits currently checked branch head checked minimal reproduction problem instructions please tell us environment windows node npm git angular version", "num": "16830", "d": "5/2017"}, {"title": "gulp lint silently fails", "body": "submitting check one x x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior silently fails error nt look like error except code using gulpfile lt gt gulpfilejs starting format enforce starting validatecommitmessages finished validatecommitmessages ms starting tools build branch master gt fetchhead closer look finished messages tasks obscure end problem debugged task logs first strings git output instead error actual error fails task primary cause buffer excess expected behavior work expected provide meaningful error output minimal reproduction problem instructions please tell us environment windows node npm git angular version", "num": "16829", "d": "5/2017"}, {"title": "aio anchor tags temporary marketing home page", "body": "sure temporary page annoying igorminar wants gone", "num": "16824", "d": "5/2017"}, {"title": "using function binding ngmodule freezes everything", "body": "submitting check one x current behavior use component method oneway binding ngmodel whole application browser freezes expected behavior either binding work error thrown forbidden bind like minimal reproduction problem instructions html typescript component export class app getcurrentdate return new date angular version browser chrome language typescript", "num": "16822", "d": "5/2017"}, {"title": "error click handler break test", "body": "submitting check one x current behavior debug context printed test success expected behavior error click handler break test minimal reproduction problem instructions execute npm test motivation use case changing behavior test always fail see development mistakes please tell us environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice language chrome language typescript", "num": "16821", "d": "5/2017"}, {"title": "use formarray notation optionally vs formarrayname", "body": "submitting check one x current behavior building dynamic form generating module module create forms valid json structure including infinitely nested objects arrays order accomplish broken display across multiple components selector examples myformcontrol myformgroup myformarray building forms across multiple components requires use formgroup formcontrol syntax vs formgroupname formcontrolname approach breaks formarray class formarray attribute available use read approach using controlcontainer resolve formarrayname issue could find enough documentation understand fully occuring approach seemed brittle certain syntax template causes provider controlcontainer error expected behavior bind formarray element using formarray handletoformarray minimal reproduction problem instructions motivation use case changing behavior make various abstractcontrols behave manner options binding template group control using push vs addcontrol formarray feel inconsistent well inspect classes determine correct method building things dynamically please tell us environment windows visual code nodenpm express angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "16820", "d": "5/2017"}, {"title": "ignores outdir creates intermediate source file beside sources", "body": "submitting check one x current behavior creates json ngfactoryts files source directory expected behavior create files directory specified minimal reproduction problem instructions compiling minimal project ngc setting specified motivation use case changing behavior want clean source directory intermediate files place target directory please tell us environment linux command line latest angular stable experienced issue already times angular version browser browser specific language typescript likely language specific node aot issues latest lts", "num": "16819", "d": "5/2017"}, {"title": "destroying individual angular instances", "body": "current behavior way destroy specific angular instance multiple angular instances running one page expected behavior way multiple angular instances running page destroying individually minimal reproduction problem instructions bootstrap application bootstrap application b destroy application avoid memory leaks gt way destroy motivation use case changing behavior trying refactor angular application towards angular without refactor everything divide different projects different teams possible destroy specific angular applications might get memory leaks subscriptions cleaned etc please tell us environment angular version browser language typescript", "num": "16818", "d": "5/2017"}, {"title": "whenstable resolve within async test using async validator", "body": "current behavior promise resolve time used test reactive form async validators code unit tests within block run however using jasmines callback instead behavior correct expected behavior using jasmines callback minimal reproduction problem", "num": "16817", "d": "5/2017"}, {"title": "dynamic module providers fails creating component factory", "body": "submitting check one x current behavior typebuilder load module using systemjs works fine code looks like let modulename exportname thispathtocomponentimportsplit window system import modulename module gt module exportname type gt thistypebuildercreatecomponentfactoryfromtype type factory componentfactory gt consolelog factory target instantiate inject component keep reference thiscomponentref dynamiccomponenttarget createcomponent factory module loaded extract ngmodule get componentfactorywithtypes insert instance specified component correctly shown page however module contains service providers array lets say someservice dependency inject component get error error uncaught promise error provider someservice however provide service directly component like component selector customeditor template hello providers someservice component correctly inserted use someservice component expected behavior expected behavior provide someservice module import instead providing directly component added github repo reproduce error run npm install npm start app immidietly fail provider service someservice swap extensionsbundleworksjs see work case extensions bundle someservice provided directly component module motivation use case changing behavior providing application developers able dynamically hook extensions default app code changes needed vendor bundle please tell us environment win visual studio code liteserver angular version using latest version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript ts config provided compileroptions target module commonjs moduleresolution node experimentaldecorators true emitdecoratormetadata true suppressimplicitanyindexerrors true types node node aot issues aot involved best regards morten", "num": "16816", "d": "5/2017"}, {"title": "form data model mismatch ngfor", "body": "submitting check one x current behavior input fields created dynamically ngfor mismatch model code html expected behavior elements form remain sync minimal reproduction problem instructions create three elements clicking add button fill fields values first second third remove second element clicking remove button add new row clicking add button model form sync see image motivation use case changing behavior complex structured dynamic form creation manipulation please tell us environment ubuntu intellij idea angular version browser chrome firefox language typescript", "num": "16815", "d": "5/2017"}, {"title": "aio creating correct text", "body": "see link end description href text", "num": "16811", "d": "5/2017"}, {"title": "angulario using repo", "body": "submitting check one x current behavior angulario docs using angularaio content yet angularangulario repo expected behavior angulario show current content minimal reproduction problem instructions visit angulario motivation use case changing behavior found bug documentation maketabs mixin used correctly seems fixed angularaio able find issue", "num": "16802", "d": "5/2017"}, {"title": "router redirects root accessing route error", "body": "submitting current behavior hitting route error router changes url however nt change rendered component root component user still thinking desired route refresh page due error gets completely different route rendered expected behavior router nt change url error produced router component really necessary change url change component well right changing url minimal reproduction problem instructions check accessing preview directly route see changes url component rendered motivation use case changing behavior users lands page error try yo refresh page gets redirected landing page instead actual page requesting angular version browser language", "num": "16798", "d": "5/2017"}, {"title": "hostbinding ca nt bind host input property", "body": "submitting check one x current behavior binding custom input property host component using get error ca nt bind acproperty since nt known property acomp expected behavior expect decorator bind property host component ones minimal reproduction problem instructions plunker angular chrome", "num": "16797", "d": "5/2017"}, {"title": "navigationextras evaluated navigationcancel initial route", "body": "submitting check one x current behavior case route contains navigate guarded url new window app loaded first time url guard deny route activation router navigate back previous route defaulted initialised router parts evaluated new location instead redirected loading page blank components specified nt issue app already loaded tab router already redirected router returns expected behavior step evaulate router parts route minimal reproduction problem instructions routes setup returns navigate browser new tab app loads url rather navigating deny naviation event fire reseturltocurrenturltree rawurltree initialised root path navigate route wo nt check configuration assumes already checked parsed initially navigated though case nt parameter display empty page wo nt redirect motivation use case changing behavior router follow redirects router parts root path instead ignoring work around using navigation cancelled emitted first route queuing naviation router know using following code angular router version language typescript", "num": "16796", "d": "5/2017"}, {"title": "feature request async bootstrap", "body": "submitting check one x current behavior application bootstraping synchronous expected behavior option startup application initialize root component asynchronous based promise observable motivation use case changing behavior need preinitialize another library would like add providers angular app created library", "num": "16795", "d": "5/2017"}, {"title": "issues compilerclearcache clear html template cache", "body": "current behavior official provides method clear html template cache pity template ca nt clear expected behavior page refreshed html loaded cache new data retrieved environment angular version", "num": "16793", "d": "5/2017"}, {"title": "work live example documentation", "body": "go link open example notice work", "num": "16789", "d": "5/2017"}, {"title": "aio autolinking code blocks improvements", "body": "improvements might easy wins ignoring trailing often used functions ignoring leading usually used front decorators associating directive class selector usually used refer directive eg ngifngfor could link ngifngfor etc sure generate false positives", "num": "16787", "d": "5/2017"}, {"title": "aio consider elasticlunr search", "body": "search engine claims smaller index file lunr", "num": "16781", "d": "5/2017"}, {"title": "enable preview server", "body": "currently content preview server served http since prod environment uses enable preview server well since already ssl enabled turning straightforward", "num": "16780", "d": "5/2017"}, {"title": "animation angular", "body": "error domexception failed execute animate element partial keyframes supported help", "num": "16779", "d": "5/2017"}, {"title": "input events update multiple input fields angular withing angular cli", "body": "submitting check one x current behavior imagine array strings component string populates value attribute input input event listener updates value array two inputs value angular updates one typed next one see plnkr illustration makes sense expected behavior expect input modify appropriate value nothing else minimal reproduction problem instructions demo go modify letter first input everything works expected modify letter p second input field name variable gets updated correctly however blur angular seems update next input field containing letter p value motivation use case changing behavior currently attempting build sudoku game using angular cli board bunch input fields user goes puts number cell next cell also gets updated please tell us environment linux angularcli angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version firefox language typescript xx typescript node aot issues node", "num": "16778", "d": "5/2017"}, {"title": "angular onetime binding", "body": "submitting check one x current behavior use set components way set one without changing others expected behavior could add way set one without changing others minimal reproduction problem instructions motivation use case changing behavior angularjs double colon expression equivalent current angular version convenient developer feature angular foo inside dom value becomes defined angularjs render unbind watchers thus reduce volume bindings inside digest loop please tell us environment null angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16777", "d": "5/2017"}, {"title": "angular universal server side renderer work nodemodules angular deps", "body": "submitting check one x current behavior attempting use angular ssr universal including library main project depends angular leads serverside errors thrown thrown client regarding decorators incorrect specifically would like clarify issue regarding library outdated angular dependency messing npm error manifests way two unrelated expected behavior angular server side rendering fail one dependencies also depends angular minimal reproduction problem instructions set github repo bit basically need set ssr project attempt include library code expects angular dependency edit repo promised please tell us environment os x yarn express angular version browser na ssr issue node language node aot issues", "num": "16776", "d": "5/2017"}, {"title": "replace id url name", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16774", "d": "5/2017"}, {"title": "form password field set invalid field browser saved password option", "body": "x bug report current behaviour every browser comes save password option password saved browser reload page contains form password field default set invalid even though browser fills password field clicking anywhere page set valid behaviour input type password expected new behaviour valid password autofilled browser made valid", "num": "16773", "d": "5/2017"}, {"title": "error provider formcontrol", "body": "submitting check one x current behavior directive constructor injects throws expected behavior working using angular directive refer form control listen value changed minimal reproduction problem instructions directive typescript import directive hostlistener input elementref oninit angularcore import ngcontrol angularforms export class validationmessagedirective implements oninit module typescript import ngmodule modulewithproviders angularcore import commonmodule angularcommon import formsmodule reactiveformsmodule formcontroldirective angularforms import validationmessagedirective import validationmessageservice export export ngmodule imports commonmodule formsmodule reactiveformsmodule declarations validationmessagedirective exports validationmessagedirective export class static forroot modulewithproviders return ngmodule providers validationmessageservice motivation use case changing behavior please tell us environment macos angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node", "num": "16772", "d": "5/2017"}, {"title": "next declared never used", "body": "submitting current behavior upgrading happens also app fails compile nt use next parameter guard canactive function following guard code run get following error expected behavior nt break app unused function parameters especially way implement guard canactive interface please tell us environment mac osx webstorm angular version language typescript xx typescript node aot issues", "num": "16771", "d": "5/2017"}, {"title": "pass multiple tables", "body": "hi tables order itemdetails pass multiple tables angular http service saving like passing order need pass itemdetails also save paramproduct order observable api receiving section like receiving jobject json arrays public ihttpactionresult post jobject objdata list lstitemdetails new list dynamic jsondata objdata jobject orderjson jsondataorder jarray itemdetailsjson jsondataitemdetails var order orderjsontoobject foreach var item itemdetailsjson lstitemdetailsadd itemtoobject ctxordersadd order foreach itemdetails itemdetail lstitemdetails ctxitemdetailsadd itemdetail please help", "num": "16770", "d": "5/2017"}, {"title": "feature add generics support abstractcontrolget method", "body": "submitting check one x motivation use case changing behavior get custom controls without typescript assertions implemented follow assuming typescript generic parameter defaults current behavior javascript class customformcontrol extends formcontrol dosomething const formgroup new formgroup foo new customformcontro const foocontrol customformcontrol formgroupget foo customformcontrol foocontroldosomething featured behavior javascript class customformcontrol extends formcontrol dosomething const formgroup new formgroup foo new customformcontro const foocontrol formgroupget foo foocontroldosomething make sense let know submit pr", "num": "16769", "d": "5/2017"}, {"title": "requests whole html template app first loaded", "body": "refresh browser app loads whole html templates chrome console like compressed css javascript files nt want html tempaltes loaded load router changeso way", "num": "16768", "d": "5/2017"}, {"title": "injector null injecting downgraded services run", "body": "submitting check one x current behavior error systemjs read property injector null generated downgraded component inserted di module run method components downgraded fine inject also happens di anywhere service di chain looks opening new ticket though one closed expected behavior downgraded services inject without issue like services minimal reproduction problem instructions appmaints two run methods commented comment back see error console motivation use case changing behavior upgrading app big rewrite parts code start intervals intervals prevent ever stabalizing protractor environment thus need move intervals outside zone want inject ngzone services via chaining injected module run methods possible workarround might inject service constructor later runtime however would pretty ugly please tell us environment cat etcissue ubuntu lts emacs version npm version node version ionic serve version angular version angularjs angualr browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome tested language typescript xx typescript amp tested node aot issues na using platformbrowserdynamic", "num": "16767", "d": "5/2017"}, {"title": "post call nt working", "body": "submitting check one x current behavior learing nodejs angular build sample node api simple getpost request get operation works fine able fetch data angular post operation nt getting called angular use postman able call post successfully data also get inserted database sample code node post works fine postman get angular code wrong attach debugger calls internally inside call requestoption url method becomes null know nt see network tab nt understand happening expected behavior post operation work expected minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows server vs code node http server dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter swimlanengxdatatable bootstrap bootstrapsass corejs ngxbootstrap rxjs zonejs devdependencies angularcli angularcompilercli typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter karmacoverageistanbulreporter protractor tsnode tslint typescript angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16766", "d": "5/2017"}, {"title": "docs aio plunker example throws error", "body": "submitting check one x current behavior navigating dynamiccomponent documentation trying refer live example plunker link execute code throws errors expected behavior example seen minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16765", "d": "5/2017"}, {"title": "license", "body": "example code documentation mit well submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16764", "d": "5/2017"}, {"title": "calling function injectiontoken function calls supported", "body": "submitting check one x current behavior get calling function injectiontoken function calls supported consider replacing function lambda reference exported function resolving symbol userconfigtoken created token trying use export const userconfigtoken new injectiontoken userconfig export class coremodule static forroot config key string modulewithproviders return ngmodule coremodule providers provide userconfigtoken usevalue config expected behavior compile without errors replaced opaquetoken injectiontoken think using exactly one latest angular code eg look using well dont see errors one guess usecase shoudl work motivation use case changing behavior opaquetoken deprecated please tell us environment running latest angular well ng thanks input frank", "num": "16762", "d": "5/2017"}, {"title": "packagesupgradestaticsrc symlink nt work windows", "body": "submitting check one x current behavior symbolic link nt interpreted correctly windows results error compilation expected behavior symbolic link supposed work operation systems minimal reproduction problem instructions cloned repo npm bash scriptswindowscreatesymlinkssh bash testsh node please tell us environment windows node npm git angular version", "num": "16760", "d": "5/2017"}, {"title": "ngzone google map lead heigh cpu memory leak", "body": "app build google map angular opened infowindow settime loop run ca nt stop many zonetask accumulated angular angulargooglemaps demo open console infowindow find without angulargooglemaps component issue exist code like const el thiselementrefnativeelementqueryselector googlemap pure google map without framwork nt settimeout loop found like whole process found", "num": "16757", "d": "5/2017"}, {"title": "feature request reactive forms event control add", "body": "submitting check one x current behavior add control group form event fired one could subscribe expected behavior would like subscribe something like formcontroladded formgroupadded removal validators motivation use case changing behavior parent combonent defines form child component input form property adds controlls parent components form parent form get notified new controlls moment emit custom event child control would great parent components formgroup would notify angular version language typescript node aot issues", "num": "16756", "d": "5/2017"}, {"title": "use one customvalueacessor one input field", "body": "submitting check one x current behavior created directives customvalueacessor use field got following error error uncaught promise error one custom value accessor matches form control unspecified name attribute expected behavior input field accept customvalueacessor minimal reproduction problem instructions please tell us environment dependencies angularanimations angularcli angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16755", "d": "5/2017"}, {"title": "function calls supported consider replacing function lambda reference exported function", "body": "submitting check one x current behavior configured insert code runtime changes applied taken account ie changes language done properly compile code restart get error expected behavior would expect code could launched without problems especially since could compile runtime without kind errors would expect well works workaround matter fact provide functionality pipeoperator eg first case hotcodereplacement pipeoperator works fly second scenario fix generally kind workaround use could compile amp amp datepipe works kind build flags apply works since changes compiled properly minimal reproduction problem instructions motivation use case changing behavior language translation fly well usage pipe please tell us environment angular version language typescript xx node aot issues", "num": "16754", "d": "5/2017"}, {"title": "angular animation fail update add imports", "body": "updated angular angular change appmodulets import browseranimationsmodule angularplatformbrowseranimations import trigger state style transition animate angularanimations import ngmodule angularcore import routermodule angularrouter import universalmodule import appcomponent componentsappappcomponent import navmenucomponent componentsnavmenunavmenucomponent import homecomponent componentshomehomecomponent import fetchdatacomponent componentsfetchdatafetchdatacomponent import countercomponent componentscountercountercomponent ngmodule bootstrap appcomponent declarations appcomponent navmenucomponent countercomponent fetchdatacomponent homecomponent imports universalmodule must first import automatically imports browsermodule httpmodule jsonpmodule routermoduleforroot path redirectto home pathmatch full path home component homecomponent path counter component countercomponent path fetchdata component fetchdatacomponent path redirectto home export class appmodule link run application visual studio error please help fix error node version angular version vs asp net core", "num": "16753", "d": "5/2017"}, {"title": "docs aio clarify angular di outside angular", "body": "earlier asked wonder could used nonangular projects nothing seems angularspecific afaict however sure use classes contains outside angular notably wrt di ngmodule share documentation use within angular intended however ca nt actually seem find particular documentation specifically using outside angular context curious might done hope could make documentation", "num": "16752", "d": "5/2017"}, {"title": "dynamically loaded components insert cached component instance", "body": "submitting check one x current behavior inserting cached instance component viewcontainerref containerrefinsert thiscachedinstancehostview produce material controls angular material interaction thinking creating issue angular material repo turned controls primeng behaved way expected behavior inserting cached component angular material controls like mdselect full interaction minimal reproduction problem instructions steps check controls input select works expected first button load second component caching first one second button load cached first component check angular material controls interaction please tell us environment angular version browser", "num": "16747", "d": "5/2017"}, {"title": "observer pattern", "body": "submitting check one x current behavior want implement observer pattern lazy loaded modules nt know possible expected behavior please help even doc part read good minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "16746", "d": "5/2017"}, {"title": "docs aio nested list displayed correctly", "body": "submitting current behavior see aheadoftime compilation page angulario contents tree shaking subitems displayed incorrectly goes tour heroes subitems expected behavior subitems behave like nested list minimal reproduction problem instructions navigate aheadoftime compilation page see contents section motivation use case changing behavior confusing read behaving like nested list browser tested chrome version firefox safari version", "num": "16744", "d": "5/2017"}, {"title": "error maximum call stack size exceeded feature module circular dependency", "body": "submitting check one x feature modules contains sub feature modules want load sub feature module feature sub feature module feature vice versa sample code actionroutingmodulets actiondetailroutingmodulets topicroutingmodulets decisiontopicdetailroutingmodulets current behavior creates cyclic dependency throws error error maximum call stack size exceeded compile time ng live development server running hash time chunk polyfillsbundlejs polyfillsbundlejsmap polyfills kb initial rendered chunk mainbundlejs mainbundlejsmap main kb initial rendered chunk stylesbundlejs stylesbundlejsmap styles kb initial rendered chunk vendorbundlejs vendorbundlejsmap vendor mb initial rendered chunk inlinebundlejs inlinebundlejsmap inline bytes entry rendered error maximum call stack size exceeded webpack failed compile however changes file save angularcli compiles runs fine expected behavior behaviour shall create cyclic dependency mechanism detect break either shall compile shall throw error first compile minimal reproduction problem instructions steps reproduce see git repo motivation use case changing behaviour feature modules application feature modules contains sub feature modules components specially routes router module consider scenario modules feature feature feature feature feature feature feature feature feature consider flow loading feature feature want load feature directly feature without loading whole feature module also need maintain navigation flow back button need write routes load module loadchildren feature module feature way want load feature directly without loading whole feature module need write routes feature module complex large application might need create flow two modules needs routing please tell us environment ubuntu lts vscode version npm angularcli node os linux angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript version node aot issues node", "num": "16743", "d": "5/2017"}, {"title": "router navigate routerlink", "body": "submitting check one x current behavior loadchildren mode click button use expected behavior plan different plan plan minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16742", "d": "5/2017"}, {"title": "ngc type checking ngfactory files first run", "body": "dan b ionic slack give info needed x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior exists angular type error one templates run detect error generating files run error properly detected example see building demo error template two calls executed oneafteranother dan desktopionicconferenceapp nodemodulesbinngc dan desktopionicconferenceapp nodemodulesbinngc error supplied parameters match signature call target error supplied parameters match signature call target expected behavior typecheck code first time executed recreation steps create sample project introduce typing error template run observe error reported run observe error reported thanks dan", "num": "16741", "d": "5/2017"}, {"title": "aio animations downloadable example missing dependency causing fail", "body": "submitting check one x current behavior downloadable example animations section guide missing dependency angularanimations fails expected behavior successfully run application browser minimal reproduction problem instructions motivation use case changing behavior users want download downloadable example broken build without fix please tell us environment mac os x vs code angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16736", "d": "5/2017"}, {"title": "refactor responsejson handle none json responses without exceptions thrown", "body": "submitting check one x current behavior currently way responsejson works checks see data either string string buffer tries parse ca nt parse loudly passes exception contrast body nt string returns body exception expected behavior would expect either things happen response anything string parsable jsonparse throws exception including blobs returns supported fetch response parseable string jsonparse simply pass back original body instead throwing exception minimal reproduction problem instructions make request returns string parseable jsonparse call responsejson note exception null undefined return exception thrown could also try running ut body returned response parseable json null undefined cases motivation use case changing behavior currently contributing conversation currently complaints issue non parsable json bodies generated swagger clients even though know want use json function send back json server users might current implementation nt really signify user happening well especially take consideration null undefined nt throw exception angular version technically looked code exact code browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "16735", "d": "5/2017"}, {"title": "language service diagnostics reported conditional part ternary operator", "body": "submitting check one x current behavior error conditional part ternary operator error reported expected behavior errors conditional part ternary operator reported minimal reproduction problem instructions component without property add fragment template", "num": "16730", "d": "5/2017"}, {"title": "language service possible null reported", "body": "current behavior language service reports error declared nullable expected behavior error reported minimal reproduction problem instructions include field template", "num": "16729", "d": "5/2017"}, {"title": "possibly broken selectors angular", "body": "submitting check one x current behavior define component selector selector match also binding expressions like pretty sure angular following example also worked slight selector modification validators using selectors broken app expected behavior selectors could also work static bindings minimal reproduction problem instructions change directive selector motivation use case changing behavior plain attributes provide validation bindings checked please tell us environment angular version browser language typescript", "num": "16727", "d": "5/2017"}, {"title": "downgradecomponent emit event angularjs template", "body": "submitting check one x current behavior closurecompiler ctrldosth wo nt get event emitted angular component expected behavior ctrldosth called emitted event object minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16722", "d": "5/2017"}, {"title": "component template concat function", "body": "template component becomes sometimes long standard html elements without bindings hard read creating components separating template cost performance solution could allow array templateurl concat compiling second solution could include directive inside template solution one solution two inside template submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16721", "d": "5/2017"}, {"title": "strictnullchecks still supported", "body": "submitting check one x current behavior running produces errors also produces errors angular code expected behavior compilation without error current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point motivation use case changing behavior please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript tsconfig node aot issues", "num": "16720", "d": "5/2017"}, {"title": "router dont wait resolve everything flaky", "body": "current behavior router nt wait resolve everything seems first one activeroutedatavalue nt correct information expected behavior wait subject finish minimal reproduction problem instructions click alternatively root component resolve see console activatedroute object true instead activatedroute object true true angular version versions", "num": "16719", "d": "5/2017"}, {"title": "googlebot fails render app used work without server rendering", "body": "submitting check one x copy issue angularcli therefor creating new issue app produced angularcli used properly rendered googlebot without server rendering involved snapshots google search console properly rendering landing page month ago fails app fresh starter app angularcli shows loading ie content fails bootstrapping app app works gets properly displayed real website googlebot building app following flags ng build prod aot nosourcemap versions repro steps pull latest angularcli build deploy appengine test page via google speed test mobile friendly tools", "num": "16718", "d": "5/2017"}, {"title": "ios safari errors typeerror null object thisrouterserializeurl function", "body": "submitting check one x current behavior getting three errors ios safari browsers ios versions lt working fine via sentry could nt reproduce appearing users stacktraces minimal reproduction problem instructions nt know reproduce please tell us environment angular version browser ios safari amp amp ios safari language typescript node aot issues", "num": "16717", "d": "5/2017"}, {"title": "expose content projection slot template derived component inserted base component template", "body": "bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior inheriting component way insert derived component template base component template expected behavior expose transclude content projection slot template derived component inserted base component template minimal reproduction problem instructions title component selector modal styles require modalstylescss template require modaltemplatehtml export abstract class modalcomponent input title public title string derive say myspecialmodalcomponent component selector myspecialmodal styles require myspecialmodalstylescss template require myspecialmodaltemplatehtml export class myspecialmodalcomponent extends modalcomponent public dospecialthing alert omg thishide motivation use case changing behavior use somewhere like please tell us environment webpack angular version browser language", "num": "16716", "d": "5/2017"}, {"title": "error function paramparser rawparams", "body": "submitting check one x current behavior cuando en un campo de un formulario escribo el caracter amp la funci\u00f3n paramparser cree que es otro campo lo divide por ejemplo si yo escribo john amp mary paramparser env\u00eda al servidor por la url john por otro lado mary por lo que todo lo que hay por detras de amp se pierde el problema est\u00e1 en la siguiente l\u00ednea de c\u00f3digo que trozea la url por amp sin tener en cuenta si se trata realmente de una separaci\u00f3n entre parametros de la url function paramparser rawparams rawparams void rawparams var type map new map rawparamslength gt var type params rawparamssplit amp lt error paramsforeach function param var type eqidx paramindexof var eqidx param paramslice eqidx paramslice eqidx key val var type list mapget key listpush val mapset key list return map expected behavior lo normal es que cuando encuentre el car\u00e1cter amp lo trate como un car\u00e1cter m\u00e1s lo trozee minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "16715", "d": "5/2017"}, {"title": "add version property ngmodule", "body": "submitting current behavior none common easy way store ngmodule version expected behavior property like ngmodule interface common way versioning ngmodules minimal reproduction problem instructions every one se ngmodule interface motivation use case changing behavior show information versions used modules please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16714", "d": "5/2017"}, {"title": "routereusestrategy components destroyed even shoulddetach true shouldreuseroute false", "body": "submitting current behavior using specific routereusestrategy master page certain masterdetail views reused views reused views indeed reused destroyed happen ngondestoy never called viewscomponents child components need components destroy properly order perform cleanup work expected behavior component children route reused destroyed ngondestroy called minimal reproduction problem instructions could added later motivation use case changing behavior think one expects ngondestroy called one routing away view reused current behaviour unexpected please tell us environment angularcli local development server production server angular version browser language typescript", "num": "16713", "d": "5/2017"}, {"title": "incorrect debugcontext component reference", "body": "submitting current behavior debug mode throwing exception ngoninit component retrieves wrong context object originally threw error expected behavior context object contain proper nodedef raised exception minimal reproduction problem instructions create component throw exception oninit lifecycle place breakpoint errorhandlerts ln inspect errorngdebugcontext verify referring wrong node little debugging found currentnodeindex referencing correct node index getcurrentdebugcontext invoked catch little knowledge code looks like debugcheckdirectivesfn function call debugsetcurrentnode selected motivation use case changing behavior attempting get node reference raised exception apply css styles native element provide visual cue debugging raised exceptions please tell us environment windows angular cli angular version browser chrome language typescript node aot issues na", "num": "16711", "d": "5/2017"}, {"title": "navigation events called twice using hashlocationstrategy", "body": "submitting check one x current behavior using change url manually one protected canactivate guard returns false fire redirect page navigation events called twice expected behavior navigation event called minimal reproduction problem instructions use demo open window mode click link one events logged console manually change url hit enter two pair events logged console motivation use case changing behavior duplication navigation event causes guards logic executed twice may contain api calls performance issue potentially guard resolving depends conditions true first failed attempt second one successful however desired behavior please tell us environment angular version browser chrome language typescript", "num": "16710", "d": "5/2017"}, {"title": "speed preview deployment", "body": "currently deployment preview server happens one last steps ci means want preview change need wait tests finish worse also need tests pass would better deployed preview soon build parallel running tests way get previews faster get even tests fail contrary deployment staging good thing", "num": "16705", "d": "5/2017"}, {"title": "hammergesturests eventnames minified empty map closure compiler", "body": "submitting check one x current behavior run closure compiler angular full minification flags eventnames hammergesturests minified empty map prevents hammer gestures handled compiled expected behavior empty map minimal reproduction problem instructions run closure compiler full minification flags motivation use case changing behavior please tell us environment angular version latest browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16701", "d": "5/2017"}, {"title": "circular reference issue services failing silently two services communicating", "body": "two services b service includes service b constructor service b includes service constructor error thrown expected however userservice calls checkoutservice constructor checkoutservice calls constructor calls userservice constructor causes loop calls sometimes fail silently depending order components loaded browser causing load note fail occur method calls services limit one services using messagesubscription circular reference matter however perhaps safer forbid anyway behaviour avoid confusing bugs perhaps severe warning would suffice submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16700", "d": "5/2017"}, {"title": "preview server nt serve content gziped", "body": "", "num": "16699", "d": "5/2017"}, {"title": "feature request negate guards", "body": "submitting check one x current behavior guard logged users would great able negate thusly expected behavior would negate results boolean observable save making another guard called notloggedinguard motivation use case changing behavior faster negation guards dry etc certainly nice rather need versions", "num": "16698", "d": "5/2017"}, {"title": "reactive form input marked dirty moving cursor arrow keys", "body": "submitting current behavior focusing input element inside reactive form moving cursor arrow key form marked expected behavior form marked dirty actual value changed initial state also typing character immediately removing added character nt reverted state know quite controversial people would agree current behavior others nt imagine form settings page save button relies whether data changed initial value button disabled nt make sense update data changed button enabled data really changed within form angular documentation form states state class true class false control value changed ngdirty ngpristine current workaround would store initial value compare input changed example minimal reproduction problem instructions create simple component reactiveform template render variable check value initially show focus input element move cursor arrow key render motivation use case changing behavior form marked dirty moving cursor please tell us environment macos angular version browser language typescript xx typescript", "num": "16697", "d": "5/2017"}, {"title": "feature request support downgraded components", "body": "wrote simple directive angular downgrade work angular fails nt think supported currect export class mycomponent input mycomponent string constructor hostlistener mouseenter event show event mouseevent void thismycomponent consolelog yes working thismycomponent downgrading directive accepct directive work angular like nt even exists", "num": "16695", "d": "5/2017"}, {"title": "routing fails aot routes added map dynamic providers general fail aot mode", "body": "submitting check one x current behavior jit route login renders logincomponent parent components aot renders parent components expected behavior login render logincomponent aot build minimal reproduction problem instructions working routing config let testchildren routes component logincomponent path map foo gt testchildrenpush foo export const routes routes path login children testchildren working routing config let testchildren routes component logincomponent path export const routes routes path login children testchildren motivation use case changing behavior authentication module several components one representing authentication provider like one fb twitter activedirectory etc providers may define routes added child routes login defined components indexts zipped exported constant authproviderroutes map ed var testchildren please tell us environment angular version angularcli version webpack browser language typescript node aot issues", "num": "16692", "d": "5/2017"}, {"title": "aio impossible viewclick team profile twittergithub links mobile", "body": "currently twittergithub links shown hover upon click card flipped bio displayed mobile hover click acts like hover click possible view click theses links note previous version twittergithub links also shown bio possible viewclick", "num": "16690", "d": "5/2017"}, {"title": "chrome ignores target attribute inside app", "body": "submitting check one x current behavior want post traditional form iframe like work normal javascript behavior working angular context chrome browser expected behavior post form dynamically target set iframe posted form open iframe please check browser working chrome different chrome tabwindow minimal reproduction problem instructions please used reproduce issue motivation use case changing behavior see plnkr code please tell us environment windows chrom angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx default", "num": "16689", "d": "5/2017"}, {"title": "ngif root elements projected content fails render initialisation", "body": "submitting check one x current behavior developing hybrid app ngupgrade angularjs component contains downgraded angular component template one implements content projection wraps element element contains directive root element angularjs content directive attribute rendered retoggle property expression bound attribute expected behavior content correctly projected directives properly evaluated without add extra wrapping elements minimal reproduction problem instructions plunker examples example using angular component contains content projection within angularjs component root elements projected content contain fail render initialisation toggling value render correctly per evaluated value example using angular component contains content projection within angularjs component root elements projected content contain fail render initialisation adding element root projected content without render correctly example using angular component contains content projection within angularjs component root elements projected content contain fail render initialisation removing parent elements angular component make render correctly motivation use case changing behavior angularjs content contain root elements content projected correctly projected angular components contain parents please tell us environment os windows angular version angularjs version browser language typescript", "num": "16685", "d": "5/2017"}, {"title": "aio update material design version mean adjusting animations module", "body": "", "num": "16684", "d": "5/2017"}, {"title": "aio better job keeping events uptodate", "body": "would make sense use component hide old future events way show past old events could list events json autogenerate page", "num": "16683", "d": "5/2017"}, {"title": "aio add loader initial loading angular takes", "body": "", "num": "16682", "d": "5/2017"}, {"title": "aio fix usage clearing guide docs", "body": "last outstanding item", "num": "16681", "d": "5/2017"}, {"title": "aio resize guide images necessary", "body": "lot guide images much larger present user docs resized manual width height removed html", "num": "16678", "d": "5/2017"}, {"title": "component nt inherit service non component superclass", "body": "submitting check one x current behavior expected behavior resolve parameters minimal reproduction problem instructions motivation use case changing behavior remove needed super constructor call chains related please tell us environment angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli language typescript", "num": "16677", "d": "5/2017"}, {"title": "view encapsulation working multiple angular apps built aot", "body": "submitting check one x current behavior boot multiple different angular apps different zones styles app adopt apps css selector app expected behavior every angular app cssselector minimal reproduction problem instructions working example jitcompiled apps apps get different css selectors build apps aot apps get css selector motivation use case changing behavior possible boot multiple angular apps please tell us environment using webpack ngtoolswebpack loader v angular version browser language node aot issues node npm", "num": "16676", "d": "5/2017"}, {"title": "error error find differ supporting object id name superman id name batman type string ngfor supports binding", "body": "import component oninit angularcore import hero classesheroclass import httpservice services component selector myapp template providers httpservice export class appcomponent implements oninit", "num": "16674", "d": "5/2017"}, {"title": "docs aio webpack sample app karma tests nt run", "body": "submitting check one x current behavior downloading webpack sample app installing node modules fixing known issue running karma tests via work instead tests running properly karma outputs warning returned requesting object expected behavior tests run properly without errors minimal reproduction problem instructions download webpack sample app install node modules via fix known issue run tests observe error see last line output npm test angularioexample test webpacktest karma start karmawebpackconfjs webpack compiled successfully webpack compiling atloader using typescript typescript tsconfigjson webpacktestsrctsconfigjson atloader checking started separate process atloader ok sec webpack compiled successfully info karma karma server started info launcher launching browser chrome unlimited concurrency info launcher starting browser chrome info chrome mac os x connected socket id warn webserver object motivation use case changing behavior webpack guide aims provide fully working sample application application work tests nt run properly given relatively little documentation get karma tests working angular webpack sample provide working solution please tell us environment os osx ide intellij ultimate edition angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na though karma setup sample use chrome language typescript xx typescript node aot issues node", "num": "16673", "d": "5/2017"}, {"title": "styles removed router navigation using viewencapsulationnone", "body": "submitting check one x current behavior component uses viewencapsulationnone styles never removed dom user navigates different route example component foo styles tag red background user navigates different route tags next page red background expected behavior styles outlive component defines tag look matter routing history minimal reproduction problem instructions create routes foo bar configure main component foo uses viewencapsulationnone create elements foo bar components component foo create style main application component create routerlinks allow navigation foo bar routes run application click link foo note red background element expected click link bar note element red expected refresh page click link bar note time element red navigate foo go back bar element red expected plnker plnker plunker click foo link first click bar link note red tag expected refresh page click foo link note red tag expected click bar link click foo note red tag expected motivation use case changing behavior every pagecomponent rendered configure uses viewencapsulationnone allows define semiglobal styles individual pages example want tags width page foo set style foocomponent stylesheet nt worry styles page foo bleed page bar worse effect entirely dependent exact order user navigates around application nontrivially sized application represents unreasonable testing burden moment decided best nt use angular router navigating feature pages fallback conventional links please tell us environment windows angular cli notepad npm angular version angular may impact older versions would nt seen today normally nt navigate feature pages application without performing full page load happened forget one time browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox edge nt tested others language typescript xx typescript node aot issues", "num": "16670", "d": "5/2017"}, {"title": "angular breaking changes change detection initiated async context", "body": "submitting check one x current behavior two different scenarios similar execution paths angular stops working silently without console errors angular works fine though setting property parent component context subscribe observable http request bound input child component turn causes event emitter tell parent component work child component finished output child component bound property parent component turn bound input property second component problem property change notification never boils back second child component parent component gets change detection mechanism seems break silently ui stops working well menus never showing click button states never changing toggled instead change initial property causing change events occur outside context subscribe observable http request works fine works fine angular angular adding extra zone change detection handling makes work angular well expected behavior expected behavior bindings event emitter values propagate child component parent child component even property bound input child component changed context subscribe method observable http request minimal reproduction problem instructions see explanation code sample motivation use case changing behavior breaking changes related change detection mentioned release notes angular please tell us environment windows vs code yarn npm angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "16668", "d": "5/2017"}, {"title": "strictnullchecks requestoptions passing", "body": "submitting check one x current behavior strictnullchecks turned get error error method headers body url search params withcredentials responsetype expected behavior build passes without errors minimal reproduction problem instructions motivation use case changing behavior one features passing strictnullchecks please tell us environment typescript tsconfigjson angular version language typescript", "num": "16663", "d": "5/2017"}, {"title": "create fesm files testing entry points", "body": "currently angularcoretesting angularanimationsbrowsertesting etc nt fesm files reason produce fesm files entry points instead distributing individual files", "num": "16662", "d": "5/2017"}, {"title": "angular error uncaught referenceerror module defined systemjsangularloaderjs", "body": "submitting x bug report current behavior trying use angular app angular accomplish using angular upgrademodule install setup typescript angular used following guide tsconfigjson looks like compileroptions target module umd moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom removecomments false noimplicitany false suppressimplicitanyindexerrors true typeroots nodemodules types types corejs compileonsave true exclude nodemodules aotts systemjsconfigjs function global systemconfig paths paths serve alias npm nodemodules map tells system loader look things map app within folder app angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs angularupgradestatic npm angularupgradebundlesupgradestaticumdjs libraries rxjs npm rxjs angularinmemorywebapi npm angularinmemorywebapibundlesinmemorywebapiumdjs packages tells system loader load filename andor extension packages app defaultextension js meta js loader systemjsangularloaderjs rxjs defaultextension js maints component root folder project boostraps angular angular modules import platformbrowserdynamic angularplatformbrowserdynamic import upgrademodule angularupgradestatic import appmodule entry point angularjsangular hybrid application bootstraps angular module appmodule angularjs module mainapp platformbrowserdynamic bootstrapmodule appmodule platformref gt const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentdocumentelement mainapp issue start application visual studio debug get following error developer console browser chrome uncaught referenceerror module defined systemjsangularloaderjs expected behavior application run without errors minimal reproduction problem instructions install npm nodejs create new visual c web application project install typescript project npm typescript savedev install type definitions angularjs jasmine npm install typesjasmine typesangular typesangularanimate typesangularcookies types angularmocks typesangularresource typesangularroute typesangularsanitize savedev donwload quick start files setup guide copy tsconfigjson file quick start files project root folder add content packagejson quick start files local copy file copy configuration files systemjsconfigjs systemjsangularloaderjs quick start files project root folder run npm install packagejson change value attribute start object scripts localhost p add following tag indexhtml base href app install upgrade package npm install angularupgrade save installation several peer depndency missing warnings might dispplayed belive safely ignored systemjsconfigjs add angularupgradestatic npm angularupgradebundlesupgradestaticumdjs last angular binding include mapping angularupgradestatic package add root ngmodule class called appmodule folder app import upgrademodule appmodule override bootstrap method remove ngapp attribute indexhtml copy file maints quick start files project root folder tsconfigjson change value module compileroptions commonjs umd launch typescript compiler npm run tsc w please tell us environment windows visual studio update npm package manager angular version browser chrome language typescript", "num": "16661", "d": "5/2017"}, {"title": "care options parameter url type request string", "body": "submitting bug report calling current behavior parameter seems ignored parameter type request string type request overrides headers set optional options parameter expected behavior parameter override request options headers set options merged headers set request minimal reproduction problem instructions const optionsargs requestoptionsargs method requestmethodget url apitest const options new requestoptions optionsargs const request new request options const optionswithheaders requestoptionsargs headers new headers contenttype applicationjson optionswithheaders subscribe response response gt const body responsejson consolelog body headers updated angular version angular version browser chrome version", "num": "16659", "d": "5/2017"}, {"title": "feat aio add search page", "body": "angularjs docs take path use search query offer possible alternative pages user typed url incorrectly example", "num": "16656", "d": "5/2017"}, {"title": "context binding error service provided parent child module", "body": "submitting current behavior service method ca nt access service attribute called child component childmodule service declared providers array appmodule childmodule expected behavior error need spawn warning duplicated declaration service without error searched days problem service component trying everything nothing working removed service childmodule working fine minimal reproduction problem instructions tried make plunker ca nt manage setup router representative seems need load submodule router loadchildren method see code issuing problem github protected branch main structure files mean service unable set attributes read ca nt write provide instead problem solved motivation use case changing behavior something like break context need display error explaining please tell us environment ubuntu vscode yarn angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript compiling aot prod node aot issues", "num": "16652", "d": "5/2017"}, {"title": "http headers converted lower case", "body": "current behavior new promise resolve reject gt let search new urlsearchparams searchset granttype password searchset username username searchset password password expected behavior minimal reproduction problem instructions java spring security gt orgspringframeworksecuritywebauthenticationwwwbasicauthenticationfilter gt dofilterinternal method motivation use case changing behavior headers converted authorization authorization ca nt get authorization param please tell us environment webstorm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "16651", "d": "5/2017"}, {"title": "errors observablethrow catch operator subscriptions without onerror handler appear browser console", "body": "submitting check one x current behavior using observablecatch operator returning observablethrow updated error shown browser console subscription onerror handler missing expected behavior observablecatch operator returns observblethrow corresponding error shoud appear browser console service subscription nt specify onerror handler minimal reproduction problem instructions hello observable return gt observablethrow error thishelloservicehello subscribe res gt error shown anywere motivation use case changing behavior please tell us environment mac os x angularcli ng serve rxjs zonejs angular version browser chrome version language typescript node aot issues", "num": "16650", "d": "5/2017"}, {"title": "style bindings gradient functions containing color functions colors get stripped style sanitizer", "body": "submitting check one x current behavior style binding lineargradient colors rgb rgba functions get stripped style sanitizer expected behavior stripped minimal reproduction problem instructions style binding like get stripped plunker get chance submit pr anyone picks issue think changing regex pattern fnargs stylesanitizerts work please tell us environment angular version latest angular browser chrome edge firefox havent tested others language typescript", "num": "16649", "d": "5/2017"}, {"title": "pagenotfound always displayed instead routes requested", "body": "submitting check one x current behavior add pagenotfound route end routes always matches even matching route take pagenotfound route works expected behavior nt match pagenotfound route mainhome declared guard main route mainhome lazy loaded take pagenotfound route works gets mainhome route minimal reproduction problem instructions access get redirected pagenotfoundcomponent instead going mainhome route take pagenotfoundcomponent works code approutingmodule const routes routes path notloggedin component notloggedincomponent path redirectto mainhome pathmatch full path component pagenotfoundcomponent mainroutingmodule const routes routes path main component maincomponent canactivate loggedinuserguard children path home loadchildren apphomehomemodule homemodule path loadchildren appaboutaboutmodule aboutmodule path table loadchildren apptabletablemodule tablemodule path user loadchildren appuserlistuserlistmodule userlistmodule someone could help would great thanks motivation use case changing behavior please tell us environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16648", "d": "5/2017"}, {"title": "async call inside breaks next async calls specs", "body": "submitting open issue seems reveal behavior direct mention made last comment current behavior fresh angularcli install call inside hook makes next calls within funcitons behave incorrectly making asynchronous ad hoc failing pass typescript describe async invocation inside jasmine beforeeach breaks async inside specs gt beforeeach async gt fail doesnt async gt settimeout gt expect false tobe true asyncasyncbeforeeach fails expected expected behavior test fail expected false true message minimal reproduction problem instructions create new angular project angularcli using create asynchronous spec calling hook spec also set repo clone check fast please tell us environment mac os angular version using latest moment far know also shows behavior browser chrome xx firefox xx chrome firefox nt test browsers language typescript possible current fixes stated issue replacing inside calls would trick however limitations ca nt perform xhr requests believe able work properly spec regardless called hook agreed least weird behavior explicitly mentioned api", "num": "16647", "d": "5/2017"}, {"title": "design toc", "body": "need design guidance toc righthand column based developersgooglecom design blue line highlighting currently displayed item support level depth example design take account wide mode right column mobile mode toc rendered inline header fixed height expandable via ellipsis similar", "num": "16646", "d": "5/2017"}, {"title": "unable get access child elements webcomponent", "body": "submitting check one x current behavior angular app using webcomponent based custom elements specification unable get access child elements custom element custompage attachedcallback lifecylce callback webcomponents custom element webcomponent expected behavior angular needs provide way webcomponent access child elements minimal reproduction problem instructions please look console message accessing child nodes first preview might look like node references resolved please stop rerun plunker preview reproduce issue angular version", "num": "16645", "d": "5/2017"}, {"title": "languageservice member function callable ngtemplate", "body": "submitting check one x current behavior seen demo ngxdatatable project usage results error expected behavior error callable function code fact work correctly minimal reproduction problem instructions run demo ngxdatatable languageservice motivation use case changing behavior like error console empty constantly mentally process dismiss error ide unproductive please tell us environment intellij idea build built april jre jvm openjdk server vm jetbrains sro mac os x angular version browser na language typescript node aot issues", "num": "16643", "d": "5/2017"}, {"title": "reactive forms bootstrap radio buttons", "body": "submitting check one x current behavior trying use bootstrap radio button group angular reactive forms seems like working bootstrap radio button group used bootstrap jquery exclude libraries following plunkr works include tried figure could nt find reason help would really appriciated expected behavior following plunkr change selected button expect handle valuechanges formgroup minimal reproduction problem instructions thanks", "num": "16642", "d": "5/2017"}, {"title": "aio decide whether display pure tag pipes", "body": "pipes api docs contain information whether pipe pure need decide displayed doc", "num": "16641", "d": "5/2017"}, {"title": "docs di link invalid", "body": "link document api item exported part public api angular actually current casing valid lower case first letter function part public api shall remove link rewrite doc add function public api", "num": "16640", "d": "5/2017"}, {"title": "relative path would better source elementattribute", "body": "submitting check one x current behavior extract strings adds source element contains source code line strings extracted good however extracted source code file absolute would better relative project root would make easier move project different location might also different developers localization enginerrs different local directory structures expected behavior use relative path addition would better store source attribute instead source element inside string playload minimal reproduction problem instructions extract template motivation use case changing behavior make localization easier please tell us environment windows vs code angular version browser", "num": "16639", "d": "5/2017"}, {"title": "translated resource files source element", "body": "submitting check one x current behavior run creates xbm file source element translate keep source element line compile get compilation error error xtb parse errors unexpected tag error gt remove source element compilation works expected behavior compilation work even source elements minimal reproduction problem instructions create project use extract xmb translate language keep source elements motivation use case changing behavior make localization easier please tell us environment windows vs code angular version browser", "num": "16638", "d": "5/2017"}, {"title": "aot directive inheritance cause error", "body": "submitting check one x current behavior directive aot error already added ngmodule removed inheritance aot compiles without error expected behavior error minimal reproduction problem instructions node aot issues", "num": "16637", "d": "5/2017"}, {"title": "bug aio switch marketingdocs styling doc loaded avoid flicker", "body": "", "num": "16635", "d": "5/2017"}, {"title": "docs core api missing documentation hostbinding", "body": "right page empty really confusing since hostbinding used parts documentation never explained dose exactly find contribution guide documentation make pull request", "num": "16634", "d": "5/2017"}, {"title": "importing angularjs app zonejs makes angularjs found bootstrapping", "body": "submitting check one x current behavior using commonjs modules order imports matters importing angularjs app bootstrap example plunkr demonstrates problem basically angularjs lives like one js import angular angular export default angularmodule app run function consolelog angular running angular lives like one ts import import zonejs import platformbrowserdynamic angularplatformbrowserdynamic import upgrademodule angularupgradestatic import appmodule appmodule import app appapp const platform platformbrowserdynamic platformbootstrapmodule appmodule platformref gt const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentbody appname strictdi true bootstrap fail however moving import bootstrap work expected behavior importing angularjs app work main dependency imports like libraries minimal reproduction problem instructions plunkr code also recreates problem please tell us environment windows vscode webpack bundling systemjs fails well angular version angular angularjs browser language typescript", "num": "16633", "d": "5/2017"}, {"title": "error error uncaught promise error find primary outlet load home", "body": "error occurs run web program firefox works well browser include ieedgechrome angular version old web program angular also works well appmodule import ngmodule angularcore import browsermodule angularplatformbrowser import httpmodule angular import formsmodule reactiveformsmodule angularforms import browseranimationsmodule angularplatformbrowseranimations import approutingmodule approutingmodule import loginmodule loginmoduleloginmodule import appcomponent appcomponent import indexcomponent passwordchangedialog componentindexcomponent import home componentindex home tab import colleague adddialog componentcolleague import projectdialog project projectoverdialog componentproject import taskdialog task acceptdialog overdialog componenttask primeng import datatablemodule sharedmodule primengprimeng material import materialmodule overlaycontainer fullscreenoverlaycontainer mdselectionmodule angularmaterial ngmodule imports browsermodule browseranimationsmodule formsmodule httpmodule reactiveformsmodule materialmodule material mdselectionmodule material approutingmodule route datatablemodule primeng sharedmodule primeng loginmodule declarations appcomponent indexcomponent passwordchangedialog home export class appmodule appcomponent import component angularcore component moduleid thisid selector myapp template export class appcomponent import ngmodule angularcore import routermodule routes angularrouter import indexcomponent componentindexcomponent import indexroutes componentprojectroutingmodule import loginaciveguard guardsloginactive export const approutes routes path redirectto login pathmatch full path index component indexcomponent canactivate loginaciveguard children indexroutes ngmodule imports routermoduleforroot approutes exports routermodule providers loginaciveguard export class approutingmodule class approutingmoduleimpl extends approutingmodule indexcomponents component moduleid thisid selector appapp templateurl apptemplateindexcomponenthtml styleurls appstylesindexcomponentcss encapsulation viewencapsulationnone export class indexcomponent indexcomponenthtml import routes angularrouter import home componentindex import colleague componentcolleague import project componentproject import task componenttask export const indexroutes routes path redirectto index pathmatch full path index component home path colleague component colleague path project component project path task component task know router bug wrong code code wrong works well browser one know reason please help thanks", "num": "16631", "d": "5/2017"}, {"title": "router guards listed routerconfig", "body": "submitting check one x current behavior angulario guide routing suggests logging see configuration router tree example provided see even though guard registered parameter implying service resolved registered callback expected behavior minimal reproduction problem instructions open official example app look console log motivation use case changing behavior incorrect confusing logging complicates development please tell us environment angulario angular version", "num": "16630", "d": "5/2017"}, {"title": "using isdevmode production builded project throws uncaught error enable prod mode platform setup", "body": "submitting versions node os angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularcli repro steps app router module try set import ngmodule isdevmode angularcore log router events dev environment const enableroutertracing true isdevmode const enableroutertracing false seems call somewhere within main app module make build fail workaround determine current environment soon build app containing module error triggered log given failure uncaught error enable prod mode platform setup mention details might useful error occurs build time", "num": "16628", "d": "5/2017"}, {"title": "date pipe messes formatting iso formatted string using custom format internet explorer", "body": "submitting check one x current behavior iso formatted string formatted using custom format nt output given format expected behavior iso formatted string get formatted given format minimal reproduction problem instructions following outputs instead plunker motivation use case changing behavior seems like bug please tell us environment win angularcli yarn angular version browser ie tested ok\u00e9 firefox different issue chrome language typescript", "num": "16625", "d": "5/2017"}, {"title": "date pipe adds hours iso formatted date string chrome safari", "body": "submitting check one x current behavior iso formatted string formatted using date pipe get added hours chrome expected behavior iso formatted string formatted without adding hours chrome minimal reproduction problem instructions following outputs instead plunker motivation use case changing behavior seems like bug please tell us environment win angularcli yarn angular version browsers chrome safari macos safari ios tested ok\u00e9 firefox different issue ie language typescript", "num": "16624", "d": "5/2017"}, {"title": "add option debouncetime async validators", "body": "hi moment async validators firering every keystroke option using debouncetime would realy great regards benny", "num": "16623", "d": "5/2017"}, {"title": "unable get access child elements webcomponent", "body": "submitting check one x current behavior angular app using webcomponents based custom elements specification unable get access child elements custom element cse attachedcallback createdcallback lifecylce callbacks webcomponents custom element webcomponent expected behavior angular needs provide way webcomponent access child elements angular version", "num": "16622", "d": "5/2017"}, {"title": "hashlocationstrategy address bar display", "body": "submitting check one x current behavior viewing following routes displays address bar displays address bar expected behavior display address bar display address bar motivation use case changing behavior old ticket sure still valid based sounds like scenario bug scenario seems subjective asis violate stated rationale changing default behaviour expected nt right solution option make behave expected would really helpful angular version browser chrome", "num": "16621", "d": "5/2017"}, {"title": "angular change detection error formvalidation", "body": "submitting bug current behavior angular change detection form validation occurs routing expected behavior angular routing shall overtake change detection form validations minimal reproduction problem instructions click go login place cursor email address field click anywhere else instead register link bottom keep mind cursor shall still email address field click register per routing module register page shall show click register validation occurs first routing second click register show register page use plunker reproduce issue plunker urlclick motivation use case changing behavior please tell us environment macos web storm npm lite server ng serve angular version browser language", "num": "16620", "d": "5/2017"}, {"title": "use braces running localized application", "body": "submitting check one x current behavior following template special characters string special charactes compile run correctly shows string run creates xmb file contains following special characters strings extracted without escapes localize special characters aotcompiling get error escaped change translation special characters compiles run get runtime error interpolation null nt know wrong either original extracted compiler consumes bug expected behavior nonelocalized application possible localized one minimal reproduction problem instructions create template using extract strings localize motivation use case changing behavior able localized strings contains interpolation placeholders please tell us environment windows visual studio code npm angular version recent browser", "num": "16618", "d": "5/2017"}, {"title": "aio yarn docs incorrectly reports missing presskit images", "body": "submitting check one x current behavior reports images missing presskit possibly related might different looking instead images actually", "num": "16616", "d": "5/2017"}, {"title": "aio incorrectly reporting missing zips plunkers images", "body": "reports missing zip plunker links really locations update duplicates still classify blocker tripping us try correct prerelease content issues submitting check one x", "num": "16615", "d": "5/2017"}, {"title": "viewchild ca nt construct query", "body": "submitting check one x current behavior nt work anymore shown component communication docs expected behavior able select child components minimal reproduction problem instructions three subcomponents select childs anymore template looks like viewchild canvascomponent private canvas canvascomponent viewchild markerscomponent private markers markerscomponent ngafterviewinit even waiting tick select child settimeout gt consolelog thiscanvas error ca nt construct query property canvas buildercomponent since query selector nt defined syntaxerror compilemetadataresolvergetquerymetadata arrayforeach native compilemetadataresolvergetqueriesmetadata compilemetadataresolvergetnonnormalizeddirectivemetadata compilemetadataresolvergetentrycomponentmetadata arrayforeach native compilemetadataresolvergetentrycomponentsfromprovider syntaxerror compilemetadataresolvergetquerymetadata arrayforeach native compilemetadataresolvergetqueriesmetadata compilemetadataresolvergetnonnormalizeddirectivemetadata compilemetadataresolvergetentrycomponentmetadata arrayforeach native compilemetadataresolvergetentrycomponentsfromprovider resolvepromise resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue please tell us environment", "num": "16614", "d": "5/2017"}, {"title": "issues joke", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16613", "d": "5/2017"}, {"title": "downgrade component uses contentchild templateref seems working", "body": "simple component example take innerhtml given use display used work perfect template innerhtml display taking code downgrade component angular angularjs working seems becouse debug undefined downgrade code work around something missed search lot question issue seems defect sure yet downgrading lot components lately first time see kind issue", "num": "16611", "d": "5/2017"}, {"title": "aio inline code looks like link change text color", "body": "link inline code blue light gray background code always visible monitors code looks clickable monitors none blue text items following image clickable gray background evident laptop home samsung tv monitor gray background white look clickable", "num": "16610", "d": "5/2017"}, {"title": "aio clicking links assets fails", "body": "click interceptor needs cleverer realise clicks links pages allow browser handle see bottom page", "num": "16608", "d": "5/2017"}, {"title": "aio move featuretechnique pages header url", "body": "", "num": "16604", "d": "5/2017"}, {"title": "aio make sidenav close mobile mode doc selected", "body": "", "num": "16603", "d": "5/2017"}, {"title": "perf avoid creating unnecessary dom attributes", "body": "default css encapsulation angular needs create attributes dom scope css selectors ex turns sometimes attributes added even needed happens component references empty styles file via normally would nt big deal cli scaffolding generates empty style files triggers unnecessary dom attributes creation compiler understand meaningful css styles referenced skip cssscoping attributes creation trivial fix speed views creation certain scenarios given simple component like typescript import component angularcore const items id name id name id name id name id name component selector approot template show hide styleurls appcomponentcss export class appcomponent items show thisitems items following benchpress test seeing improvement machine guess explained less dom manipulation need create attributes detailed benchpress results empty styles attributes dom encapsulation generated", "num": "16602", "d": "5/2017"}, {"title": "aio sweep fix images displaying correctly", "body": "images automatically assigned attributes causing display problems css styles either inline implicit rules causing images display incorrectly eg styling changing width height image becoming stretched svg getting extra unwanted padding need sweep docs images check rendering correctly", "num": "16600", "d": "5/2017"}, {"title": "aio floating toc flash unwanted contents", "body": "go page toc initial flash word contents right hand panel removed", "num": "16597", "d": "5/2017"}, {"title": "uncaught referenceerror map defined angular nt work android", "body": "submitting check one x current behavior uncaught referenceerror map defined android browser see lt lt lt compatible jelly bean seems like new feature expected behavior work like works pc minimal reproduction problem instructions motivation use case changing behavior please tell us environment android newest chrome angular version browser language typescript xx node aot issues", "num": "16596", "d": "5/2017"}, {"title": "pure pipes detecting argumentchange argument object", "body": "import pipe pipetransform angularcore pipe name pagerpipe export class pagerpipe implements pipetransform transform array pager pager var start pagerpagesize var end pageractivepagepagerpagesize consolelog start end return arrayslice start end export class pager pagesize number activepage number works fine set arguments individual pagesize activepage pass class pagesize pagenumber pipe doesnt detect argument changes", "num": "16595", "d": "5/2017"}, {"title": "error somebody tries bind", "body": "source confusion eliminate good error message see eg", "num": "16593", "d": "5/2017"}, {"title": "currency pipe working compliance localization settings", "body": "submitting bug report current behavior expected behavior configure localeid provider dutch language app module level purpose use currency pipe number text converted mentioned documentation currency pipe expect see currency sign rather currency code minimal reproduction problem instructions configure localization app module level ngmodule imports browsermodule declarations appcomponent providers provide localeid usevalue nl bootstrap appcomponent export class appmodule using currency pipe component component selector myapp template title convertnumber currency export class appcomponent title currency pipe test convertnumber working example please check plnkr link motivation use case changing behavior apparently localization file dutch language wrong ca nt find location localization file would like fix please tell us environment angular version browser language typescript node aot issues", "num": "16591", "d": "5/2017"}, {"title": "reopen error thrown rxjs observer always sent errorhandlerhandleerror", "body": "please reopen per comment tested angular still see exact behaviour originally reported reproduce angular please follow steps outlined comment thanks", "num": "16589", "d": "5/2017"}, {"title": "fr textarea support mdautocomplete", "body": "submitting check one x current behavior gives error ca nt bind mdautocomplete since nt known property textarea expected behavior ability attach autocomplete textarea similar done input element minimal reproduction problem instructions motivation use case changing behavior main usecase probably inputs commaseparated values value autocompleted canonical example drive sharing ui please tell us environment environmentagnostic since reproducible plnkr angular version browser fr compilation time language node aot issues", "num": "16587", "d": "5/2017"}, {"title": "fix common nt capitalize letter quote titlecasepipe", "body": "submitting check one x current behavior titlecasepipe capitalizes letters quote quote seems break example produces output expected behavior letter quotes capitalized using example produces output motivation use case changing behavior intend change title case words properly please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16586", "d": "5/2017"}, {"title": "docs add router import line update heroescomponent class section", "body": "submitting check one x current behavior tutorial page go section called update heroescomponent class get error either ca nt resolve parameters heroescomponent error related missing router module expected behavior page refresh would display successfully top heroes boxes local environment minimal reproduction problem instructions section called update heroescomponent class number box displays nt show entire file content would include near top file motivation use case changing behavior beginner better explicitly show line correct syntax correct position line file avoid console error browser please tell us environment debian npm angular version v browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues v", "num": "16585", "d": "5/2017"}, {"title": "aot issue css js integration angular error setting component style attribute function", "body": "submitting check one x x bug report feature request support request current behavior currently import getstyles util component template styles getstyles foo export class mycomponent run get following error work bring function component module export like export function getstyles return somecss component template styles getstyles export class mycomponent ca nt import function somewhere else use note importing function using attribute work without aot run code development fine problem run code expected behavior able set function returns string array styles attribute component decorator understand aot needs certain constraints function pure nothing return static string aot able evaluate function put resulting static string optimized code comes aot compiler minimal reproduction problem instructions look code put thing missing implementation getstyles motivation use case changing behavior needed css js angular better example would look make clear whyhow would used matias man reasons love yearofmoo styles getstyles color green fontsize subtitle fontsize bigmargin mixin underline mixin export class mycomponent creating library enable autocomplete various mixins idea leverage javascript inheritancecompositionetc legit tree shaking css please tell us environment angularcli node os darwin angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli typescript", "num": "16584", "d": "5/2017"}, {"title": "bundles export strange mangled internal symbols picked ide autocomplete", "body": "submitting check one x current behavior bundles export strange mangled internal symbols vs code picks typings guess get intellisense compiles expected behavior looks like internal symbols either bundle nt expose editor forced use files minimal reproduction problem instructions open vs code please tell us environment windows angular version browser language ts", "num": "16583", "d": "5/2017"}, {"title": "componentfactoryresolver ngstyle", "body": "submitting check one x x bug report gt search github similar issue pr submitting current behavior ngstyle ignored using dynamic component expected behavior ngstyle ignored minimal reproduction problem instructions using quick start relevant changes could nt find ready use plunker duplicate share add dynamic component appcomponentts indexhtml add div remove existing styles get word red red color believe unless something wrong please tell us environment using visual studio nt think matters able reproduce plunker ca nt share reason angular version browser checked chrome probably language typescript", "num": "16582", "d": "5/2017"}, {"title": "router ability listen query param changes resolves", "body": "submitting check one x current behavior resolve get current query params ca nt listen changes like component expected behavior ability listen query param changes resolves motivation use case changing behavior use resolves create app state tree observables resolve return observable based route params parent resolves cases query params use async pipe need actual values call done observables must change ways action done event fired event emitter observables listen event emitter certain event fired could cause data change call done parent resolve changed observables using parent resolve observable flatmap parent changes change query params change data depend like data bound date range example could listen query param changes resolves could put observable chain data update automatically change number nt work moment would like see ability get query param observable inside resolve function used angular version", "num": "16581", "d": "5/2017"}, {"title": "form handling wrong behaviour input fields dynamically type", "body": "submitting check one x current behavior setting input type via property resulting value formcontrolformgroup input change correct eg inputtype number formcontrol new formcontrol updating value input field value formcontrol string number setting via type number value correct number expected behavior get value form control correct type minimal reproduction problem instructions plunker wrong behaviour shown please tell us environment angular version browser language typescript", "num": "16580", "d": "5/2017"}, {"title": "router ability optional children canactivate", "body": "submitting check one x current behavior creating dashboard users multiple roles parts hisher roles access shown resolves routes calls check giving error nt role logical thing using child routes empty paths outlets done setting canactivate check role child ca nt activated shown one guards returns false none shown expected behavior one outletted childs canactivate guards return false must shown nt affect rest childrenroutes motivation use case changing behavior dashboardlike behaviour parts must shown based condition part nt shown resolve run run route activated avoiding errors etc angular version", "num": "16579", "d": "5/2017"}, {"title": "formgroup reset dont work dont work setvalue", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues hello problem reset method create form thisraceentryform thisfbgroup competitor validatorsrequired boat validatorsrequired device form invalid form raceentry formcontrolname boat component return object form invoke method reset reset boat returned empty object form stay valid cant solution create form need correct way", "num": "16578", "d": "5/2017"}, {"title": "think need change angular name something else", "body": "doubt angular best js framework available today like us many people using angularjs main js framework amp continuously trying upgrade angular lot problems facing web searching angular completely different angularjs name similarities creating lot issues result pages personally think would great angular team rename project something else make identical amp clear confusions angularjs think", "num": "16577", "d": "5/2017"}, {"title": "embedded source maps broken", "body": "submitting check one x current behavior sourcemaps accompanied scripts contain wrong embedded sources angular breaks inbrowser debugging expected behavior put breakpoint component able walk call stack see original ts source angular minimal reproduction problem instructions pr adds scripts show embedded sources nt match actual framework source code motivation use case changing behavior critical see correct framework code debugging understand ng better please tell us environment macos angularcli vscode angular version reproduces master browser chrome language typescript xx node aot issues", "num": "16576", "d": "5/2017"}, {"title": "error thrown using input type date", "body": "submitting check one x current behavior using dynamic form part app data retrieved api used show different types fields screen error occurs type field specified date happens supported browsers chrome firefox edge handle type ok edge nt show field nt error error thrown pretty cryptic taken trial error different form data structures work date field causing problem error seen server urls names omitted error invalid argument eprototypesetproperty tt kt wn vn ar anonymous function updaterenderer expected behavior app breaking error returned code like included especially listed one supported browsers minimal reproduction problem instructions compare behaviour browsers behaviour experienced plunkr run motivation use case changing behavior please tell us environment angular version browser ie language typescript node aot issues cheers", "num": "16575", "d": "5/2017"}, {"title": "aio heading anchor styling broken links inside headings", "body": "docs include link inside heading eg liveserver see need include class styling heading anchors ensure nt break links", "num": "16573", "d": "5/2017"}, {"title": "animation problem automatic property calculation", "body": "submitting check one x current behavior using auto style state transition starting expanded state collapsed expanded collapsed animation completed would result collapsed pane expected behavior behavior animation start race condition minimal reproduction problem instructions motivation use case changing behavior automatic property calculation working expected fix proposal call ondonefns overlapping animations either using destroy method calling webanimationsplayerreset method instead please tell us environment windows angular version browser chrome language typescript xx node aot issues", "num": "16570", "d": "5/2017"}, {"title": "http test error response", "body": "submitting check one x current behavior testing service connecting http wanted make sure notok responses non status dealt correctly setup test mockbackend tests setup response respond error response typescript const response new response new responseoptions url url status body error shit hit fan backendconnectionssubscribe connection mockconnection gt connectionmockrespond response unfortunately mockbackend seems behave different actual http implementation actual http implementation throw error receiving response mockbackend simply passes response along demonstrated always logs incorrectly passed response could change configuration backend respond error function expects rather expected behaviour would expect response passed error callback note using angular typescript", "num": "16569", "d": "5/2017"}, {"title": "incorrect order contentchildren query result", "body": "submitting check one x current behavior query return results incorrect order querying directives particular issue reported occurs queried directive instances sit expected behavior query return results expected order regardless directives siting minimal reproduction problem instructions check console prints query result observed log expected log angular version browser", "num": "16568", "d": "5/2017"}, {"title": "feat request allow inheritance abstract class constructor", "body": "current behavior want basic inheritance concept get error uncaught promise error ca nt resolve parameters abccomponent error ca nt resolve parameters abccomponent nt error languageservice webstorm seems correct get response directly launch app browser even ng serve ng build prod works well even decorate abstractclass nt works build angular language service tell error angular component abstractform included module available inside template consider adding ngmodule declaration nt want add abstract class ngmodule abstraction never use inside template dev mod works even angularlanguageservice awar expected behavior juste want avoid set consctructor nt need specify di annoying always add duplicate code component extending abstractform minimal reproduction problem instructions see ca nt reproduce plunkr motivation use case changing behavior avoid annoying duplication code nt want call abstract constructor using super child nt one simply use existant constructor wirted abstract class please tell us environment webstorm angular version browser language ts", "num": "16566", "d": "5/2017"}, {"title": "parent component nt realize child component initial update value", "body": "submitting check one x current behavior parent composent nt realize child component form value update initialize time expected behavior parent child component value minimal reproduction problem instructions update initial value literal number property true demo despite update value value empty string wrap update code work well tricky worry side effect problem motivation use case changing behavior case want use computed value directly passing initial form control value please tell us environment macos spacemacs npm angular version behavior caused also browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers could reproduced language typescript node aot issues", "num": "16565", "d": "5/2017"}, {"title": "allow global configuration queryparamshandling", "body": "submitting check one x current behavior currently using directly specify templatecall control query params propagation behavior unfortunately want propagate certain query params throughout entire site becomes cumbersome error prone requiring adding every single use expected behavior would useful mechanism configure global way either changing default ideally something akin maybe call would allow us configure certain query params handled without repeatedly every usage motivation use case changing behavior tl dr use case configure centralized place entire app allow configuring different strategies different query params please tell us environment angular version browser language node aot issues", "num": "16558", "d": "5/2017"}, {"title": "angularcore module incorrect import aot compiled lazy loaded app", "body": "submitting check one x current behavior navigating lazy loaded route aot compile app causes error occurs line digging tell represents angularcore contains core related classes also see contains \u00e9\u00b5crt \u0275crt may cause discrepancy symbols aot compilation expected behavior navigating route load lazy loaded component minimal reproduction problem instructions motivation use case changing behavior please tell us environment os linux mint rosa angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "16553", "d": "5/2017"}, {"title": "ngcontent gets created declaring component gets created even template created", "body": "submitting check one x current behavior gets created declaring component gets created even template created also get destroyed recreated template declared template destroyed recreated expected behavior created destroyed template declared minimal reproduction problem instructions motivation use case changing behavior things created nt created things get destroyed hidden destroyed please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16550", "d": "5/2017"}, {"title": "aio doc addremove classattr tofrom aioshell", "body": "page styling often differs doc doc styling needs apply html outside docviewer example toolbar appearance may change marketing docs currently limited form docviewer determines doc marketing doc adds marketing class great insufficient styling specific particular doc subset docs need something flexible something doc authors manage nt limited marketing pages design refresh initiative driver initiative stay tuned pr addresses issue", "num": "16549", "d": "5/2017"}, {"title": "implement flush fakeasync", "body": "released zonejs angular testing fakeasync helpers export method context", "num": "16548", "d": "5/2017"}, {"title": "global detected correctly globalwindow exists", "body": "submitting check one x current behavior currently global variables priority given additional checks nonbrowser environment expected behavior considering higher priority may stricter checks minimal reproduction problem instructions nodejs motivation use case changing behavior set server side provide fixes clientside code universal apps result setting wrong value internal export affects decorators instance applies platforms workers please tell us environment windows node npm angular version language node aot issues", "num": "16545", "d": "5/2017"}, {"title": "wrong email validation", "body": "submitting check one x current behavior email validator work properly validates emails without host domain currently host validated expected behavior validate validate minimal reproduction problem instructions issue appears angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "16544", "d": "5/2017"}, {"title": "problem form", "body": "hi found problem nt understand angular problem something else use objectassign function obj copy object nt copy object form changes copied object change original object see problem plunker example try edit someone user see changes made changed original user best regards", "num": "16543", "d": "5/2017"}, {"title": "build aio teach dangling links checker images plunkers zips", "body": "getting dangling link warnings links assets dgeni know", "num": "16541", "d": "5/2017"}, {"title": "age", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16539", "d": "5/2017"}, {"title": "add toggleclass", "body": "submitting check one x current behavior way manually toggle class without writing conditional logic expected behavior motivation use case changing behavior allow toggling class like dom counterpart angular version browser language typescript", "num": "16538", "d": "5/2017"}, {"title": "nt work properly", "body": "submitting check one x current behavior order use statement selectors must used expected behavior work without needing additional selectors minimal reproduction problem instructions broken version without additional selectors working version additional selectors needed see items first example first empty properly projected second example items properly projected angular version browser language typescript", "num": "16537", "d": "5/2017"}, {"title": "browserdefer ends triggering changedetection zonejs settimeout", "body": "submitting check one x current behavior due monkeypatching settimeout action triggers browserdefer even timeout invokeapply false ends triggering change detectiondigest means things happen interval end constantly triggering digests even though invokeapply set false see timeline offending snippet code angularjs function interval fn delay count invokeapply var hasparams argumentslength gt args hasparams sliceargs arguments setinterval windowsetinterval clearinterval windowclearinterval iteration skipapply isdefined invokeapply amp amp invokeapply deferred skipapply q q defer promise deferredpromise expected behavior invokeapply parameter honored browserdefer run outside ngzone minimal reproduction problem instructions motivation use case changing behavior traditionally angularjs allowed use interval timeout invokeapply false avoid running changedetection digest cycle angular version browser language node aot issues na", "num": "16533", "d": "5/2017"}, {"title": "normal routing mddialogref angular", "body": "export class productcomponent constructor public dialog mddialog public dialogref mddialogref opendialog thisdialogref thisdialogopen addproductcomponent component selector addproduct template require addproducthtml export class addproductcomponent constructor public productservice productservice public dialogref mddialogref thisrouternavigate product error error uncaught promise error provider mddialogref go question stackoverflow tells use component need call product component get success loginso normal routing mddialogref angular", "num": "16532", "d": "5/2017"}, {"title": "xliff serializer add source files", "body": "submitting check one x current behavior starting angular new xliff serializer available also new feature writing source reference xlf xmb files xliff reference source written expected behavior add functionality new xliff serializer minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16531", "d": "5/2017"}, {"title": "aio way see previews pr", "body": "currently previews generated prs touch file inside b trusted author often useful able see preview prs nt meet requirements eg touch api docs outside changes verified trusted user", "num": "16526", "d": "5/2017"}, {"title": "language service understand index signature templates", "body": "submitting check one x current behavior template accesses property defined index signature language service reports expected behavior warning raised language service since valid typescript minimal reproduction problem instructions given variable defined valid typescript used template way language service raises warning motivation use case changing behavior specific use case openlayers object exposes return value defined ie geographic object carries arbitrary knownincontext properties possible address properties using notation without provoking language service excessively cluttered general level language service accept simply valid typescript please tell us environment win intellij angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues", "num": "16524", "d": "5/2017"}, {"title": "aio decide upon fix toc styling", "body": "latest pr toc styling optimised sub headings decide keep need improve styling", "num": "16523", "d": "5/2017"}, {"title": "calling overridecomponents compilecomponents noops silently", "body": "throw exception module configuration methods called compilecomponents", "num": "16522", "d": "5/2017"}, {"title": "aio nt send inpage clicks google analytics", "body": "issue harvests remaining open concern submitting check one x current behavior current implementation sends tracking event google analytics user clicks link navigates within page link fragment design see test pr really want expected behavior decide track inpage navigations make change update decided track doc changes nt send inpage clicks", "num": "16521", "d": "5/2017"}, {"title": "docs aio add link dart site", "body": "search dart angulario get results get quasifunny hint mean data instead find least one page links angulardart better yet make findable without search happy return favor let know help", "num": "16520", "d": "5/2017"}, {"title": "aio ie bueno need polyfill strategy", "body": "angular apps including one wo nt run ie without polyfill polyfill everyone slow loading nt want punish everyone make ie happy igorminar solution please btw fact aio code uses features native ie drop bucket", "num": "16519", "d": "5/2017"}, {"title": "reactiveforms", "body": "submitting bug check one x current behavior read doc reactive form demo found bug formarry user way get formcontrol b follow demo doc wrong example browser console read property controls undefined last least component class expected behavior like example one minimal reproduction problem instructions motivation use case changing behavior please tell us environment window vscode npm ng serve angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "16515", "d": "5/2017"}, {"title": "aio fix styleguide layout code inside table cells", "body": "code examples inside table cells styleguide sit small fraction available cell real estate problems see border box go copy button go killing pr space border box cell go shrink code never fills space even remove copy button give much cell possible suitable padding course", "num": "16514", "d": "5/2017"}, {"title": "angular style microsoft edge", "body": "nt work microsoft edge fix", "num": "16509", "d": "5/2017"}, {"title": "aio revert removal toh example files", "body": "removed bunch example files actually referenced docs", "num": "16503", "d": "5/2017"}, {"title": "error please add pipe directive component annotation", "body": "unexpected value postservice declared module appmodule please add pipe directive component annotation calling service module appmodule got issue one please suggest", "num": "16502", "d": "5/2017"}, {"title": "aio fix async docstests remove flaky behaviour", "body": "", "num": "16501", "d": "5/2017"}, {"title": "document question src directory stylescss introduce problem", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues found src catalog stylescss src catalog indexhtml page link tag introduction forced introduce chrome console given think document change thank", "num": "16500", "d": "5/2017"}, {"title": "aio topbar padding", "body": "seems extra padding given selected item topbar causes movement headings bars around short headings", "num": "16499", "d": "5/2017"}, {"title": "dynamicngupgrademodule fails angular", "body": "submitting current behavior trying initialize hybrid app angular angular typescript fails error unexpected value imported module dynamicngupgrademodule please add ngmodule annotation expected behavior fail upgrade module bootstrapping minimal reproduction problem instructions import browsermodule angularplatformbrowser import constraintsresultstablecomponent constraintsresultstablecomponent wrapping ngcorengmodule wrapping let appmodule ngcorengmodule imports browsermodule declarations constraintsresultstablecomponent class constructor function export appmodule throws assets error unexpected value imported module dynamicngupgrademodule please add ngmodule annotation syntaxerror angular eval angular arrayforeach native angular compilemetadataresolvergetngmodulemetadata angular jitcompilerloadmodules angular jitcompilercompilemoduleandcomponents angular jitcompilercompilemoduleasync angular platformrefbootstrapmodulewithzone angular eval angular objectoninvoke angular angular error unexpected value imported module dynamicngupgrademodule please add ngmodule annotation syntaxerror angular eval angular arrayforeach native angular compilemetadataresolvergetngmodulemetadata angular jitcompilerloadmodules angular jitcompilercompilemoduleandcomponents angular jitcompilercompilemoduleasync angular platformrefbootstrapmodulewithzone angular eval angular objectoninvoke angular angular motivation use case changing behavior upgrade rails app angular angular without using typescript please tell us environment angular version browser language node aot issues", "num": "16497", "d": "5/2017"}, {"title": "error find module using template strings loadchildren path router", "body": "submitting check one x current behavior using code block produces listed error already logged cli team asked logged previous issue request gt code example const modname lazy const approutes routes path component secondcomponent path lazymod loadchildren app modnametolowercase modlazymodmodule modname modmodule loadchildren applazymodlazymodmodule lazymodmodule load module expected error output expected behavior loadchildren property take string concatenated string template string minimal reproduction problem instructions link sample repo gt steps reproduce add route using loadchildren string path module use variable either template string concatenated string reproduce error running example const modname lazy const approutes routes path component secondcomponent path lazymod loadchildren app modnametolowercase modlazymodmodule modname modmodule works path lazymod loadchildren applazymodlazymodmodule lazymodmodule path lazymod loadchildren app modnametolowercase modlazymodmodule modname modmodule path lazymod loadchildren path lazymod loadchildren note using back ticks please note load demo app string begin need stop clear cache browser using google chrome official build change template string restart reproduce error motivation use case changing behavior ability add variables path please tell us environment os windows ide visual studio code angular version browser google chrome official build microsoft edge firefox language typescript xx typescript node aot issues node", "num": "16494", "d": "5/2017"}, {"title": "confusing error message using hostbinding input", "body": "submitting check one x current behavior see error message console plunkr ca nt bind foo since nt known property mycomponent mycomponent angular component foo input verify part module however mycomponent angular component foo input actual error according tbosch use hostbinding set inputs hostbinding always directly dom expected behavior error message clear case browser chrome toxicable reported request", "num": "16493", "d": "5/2017"}, {"title": "languageservice templatetemplateurl function result trigger error", "body": "submitting check one x current behavior expected behavior error minimal reproduction problem import component angularcore component templateurl modulefilenamereplace ts html export class testcomponent motivation use case changing behavior please tell us environment angular version typescript version vs code version angular language service version extension uses", "num": "16492", "d": "5/2017"}, {"title": "opt zonejs event patching ngupgrade", "body": "submitting check one x current behavior currently zonejs patches native events like click mousemove keydown etc automatically trigger change detection cycles convenient pure angular applications concerns approach ngupgrade applications patched appears handlers enlisted angular zone even handlers belong angular code side effect digest cycles fired angular application every time one patched event handlers invoked example handler registered angular digest triggered every time move mouse similar using undesirable used angular specifically avoid digest cycles every mouse move expected behavior fix seen run event handler angular event parent zone think would better parent zone default angular events instead available optin makes sense downgraded components run change detection aware zone seem appropriate existing angular handlers least default minimal reproduction problem instructions register native event handler ngupgrade application motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "16491", "d": "5/2017"}, {"title": "aio error gening docs run sample", "body": "submitting check one x current behavior author runs example locally eg files generated files unfortunately confluence trouble doc generation looks generated file nt least one case compiler omits trailing closing region generated file unclosed region docs gen crashes unclosed region original error error new regionparsererror lot stack trace error error processing docs error regionparser tried close region named onselect open line doc examplefile file starting line lots stack trace error command failed exit code expected behavior docs gen nt crash unclosed region would nice ignored generated files minimal reproduction problem instructions cd terminal close bottom bottom generated notice opens close deleting hand allows gen succeed problem likely recur whenever authors develop example code writing docs", "num": "16487", "d": "5/2017"}, {"title": "hybrid app fails bootstrap angularjs loaded import", "body": "submitting check one x current behavior attempting bootstrap hybrid app using upgrademodule angularjs loaded using console reports error angularjs loaded angularjs loaded script tag application boostraps correctly without error expected behavior possible load angularjs using import minimal reproduction problem instructions working working script tag motivation use case changing behavior allow angularjs bundled easily use type definitions please tell us environment chrome windows angular version browser chrome windows language typescript", "num": "16484", "d": "5/2017"}, {"title": "direct way disable animation children", "body": "point big effort refactor animation code make runtime compatible introduce new features query variables router animations however support disabling animations domstructure level mind html", "num": "16483", "d": "5/2017"}, {"title": "aio toc scroll back top tocmoreitems clicked", "body": "submitting check one x current behavior expected behavior would nice user sent back top table contents area click tocmoreitems button close toc back three circles button", "num": "16482", "d": "5/2017"}, {"title": "feat forms block submit invalid controls", "body": "submitting check one x current behavior currently ngsubmit action happens soon submit button clicked form regardless whether form valid expected behavior like functionality angularjs forms submit action actually blocked form valid see codepen dialog pops form actually submitted minimal reproduction problem instructions see plunk required input dialog pops form actually submitted motivation use case changing behavior nt want disable submit button valid cases user may notice field thus never touch wo nt highlighted invalid either touch attempt submit angular version believe case recent version angular browser language", "num": "16481", "d": "5/2017"}, {"title": "instance bound methods work hooks", "body": "submitting check one x instance bound methods work hooks little code sample typescript import component angularcore component selector myapp template hello name export class appcomponent name angular current behavior hook executed hello angular displayed expected behavior hook executed would see hello world instead design message would much appreciated dev mode smth like trying use instance bound method hooks work documentation found note angular instead inspects directive component classes calls hook methods defined angular finds calls methods like ngoninit without interfaces explaining manner intention clear still minimal reproduction problem instructions stackoverflow discussion plunkr motivation use case changing behavior kinda transparent angular behaving like assume design performance reasons would nice mention explicitly provide message dev mode prevent others spending time thing btw react behaving predictable manner js const render reactdom class mycomponent extends reactcomponent state name angular componentwillmount gt thisstatename react render gt return hello thisstatename render documentgetelementbyid app hook called displays hello react would expect jsbin exploration please tell us environment osx el capitan vscode expressbased nodejs server angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node", "num": "16478", "d": "5/2017"}, {"title": "plans", "body": "list features fixes planned want new features added angular nt hesitate ask let know feasible open issue bug open issue need discuss ivy note runtime translations new features available ivy features runtime one bundle locales aot working id migration tool break id generation pr use translation strings outside template working generate id xmbxlf breaking change pr issues ignore phicu expressions generating ids breaking change pr blocked prioritized features allow icu messages attributes blocked requires update parser improve html parser add new interpolationtoken lexer output interpolations opt translation use translate false attribute localize numbers using icu plural format add offset amp blocked requires allow escaping icu messages implement icu ordinal messages auto detect translationsformat providing translations ngmodule level add scientific number pipe opening api pr throw extraction two different contents id issues ignore leading trailing spaces allow numbers selecticu allow escaping icu messages blocked requires update parser template parser error passing object literal pipe parameter", "num": "16477", "d": "5/2017"}, {"title": "routing working", "body": "hi exercise angular routing able create run project run application works fine used layer routing increase routing layer behaves unexpected one app module loading application created separate modules signin signup baselayout others login want use base layout app layout want load everything inside baselayout header footer consistent functionality created separate modules like divisionmodule organizationmodule want load two modules inside baselayout module load component divisionmodule directly loads inside app module inside baselayout git url project access signin signup works try access apporganizationedit apporganizationlist appdivisionedit appdivisionlist loads app module baselayout module help would appreciated thanks sushil", "num": "16476", "d": "5/2017"}, {"title": "update appmodule", "body": "regarding hero tutorial webpage current behavior update appmodule one line showing maketabs null srcappappmodulets srcappappmodulets expected behavior expected behavior case show widget code shows cases mentioned revised version file x", "num": "16475", "d": "5/2017"}, {"title": "nesting url segment elements activatedroutesnapshot url property", "body": "submitting check one x current behavior instance activatedroutesnapshot represents nested route property always array one url segment instance urlsegment expected behavior instance activatedroutesnapshot property array url segments minimal reproduction problem instructions minimal demo open console see activatedroutesnapshot property value output instance class property activatedroute motivation use case changing behavior building navigation paths breadcrumbs please tell us environment xubuntu visual studio code npm angularcli angular version browser chrome language typescript", "num": "16473", "d": "5/2017"}, {"title": "module found", "body": "using self signed certificate node server client side want use npm install sending certificate along post request component whenever try import throws error saying module found way send request like using module const options hostname encryptedgooglecom port path method get key fsreadfilesync cert fsreadfilesync agent false const req res gt", "num": "16472", "d": "5/2017"}, {"title": "docs http client document page miss import throw operator", "body": "submitting check one x current behavior source code srcapptohheroservicets revised string import rxjsaddobservablethrow result bad json coming api got function expected behavior import rxjsaddobservablethrow present motivation use case changing behavior fix documentation angular version browser language", "num": "16471", "d": "5/2017"}, {"title": "hasownproperty angularanimations", "body": "submitting check one x current behavior whean variable changed trigger animation throws error console stops working expected behavior change variable continue intervalloop minimal reproduction problem instructions projects bit complet copy plunker best explaining link animation triggered though variable genstate active inactive variable changed interval run seconds console throws error animation stops running error plunk project code nt working due srcapp folder motivation use case changing behavior fixing code please tell us environment used npm start ng serve linux ubuntu lts npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome chromium language typescript xx typescript node aot issues node", "num": "16470", "d": "5/2017"}, {"title": "internet explorer authoraization error angular", "body": "created pdf viewer component angular getting authorization error opening dochere simple plunker exampe must use cors problem way solve problem also enabled protected mode adobe pdf reader working remaining browsers thanks advance", "num": "16467", "d": "5/2017"}, {"title": "docs router urlmatch link docs", "body": "submitting check one x current behavior link urlmatcher docs link broken links expected behavior link works minimal reproduction problem instructions go click urlmatcher link blue motivation use case changing behavior better docs please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx node aot issues", "num": "16465", "d": "5/2017"}, {"title": "aio search result duplicate autostyle", "body": "search autostyle returns two api entries search results link api page searching api search revealed two entries well core deprecated animations curiously pages present content content one animations info deprecated core appear browser address bar shows two different paths content api filter deprecated clearly intend show deprecated objects api search bug show nondeprecated animations content deprecated core link may symptom deeper problem api pages title unusual perhaps bad impossible two different modules object name happening ok content different think bug causing lastgenerated content assigned links title submitting check one x", "num": "16464", "d": "5/2017"}, {"title": "oninit", "body": "proble call oninit modules import ngmodule oninit component angularcore import commonmodule angularcommon import authcomponent authcomponent import sharedmodule sharedsharedmodule ngmodule imports commonmodule sharedmodule declarations authcomponent export class authmodule implements oninit constructor consolelog forms ngoninit consolelog forms let forms documentqueryselectorall clientheight consolelog forms run app console write form constructor word ngoninit", "num": "16463", "d": "5/2017"}, {"title": "td hidden attribute working assign css class", "body": "submitting check one x current behavior td element hidden attribute working till applied bootstrap class applied bootstrap css class hidden attribute working td element still visible even hidden attribute condition satisfies true remove css class hidden attribute fucntional ngif works even apply css class got change hidden ngif make work expected behavior td hidden even apply css styles minimal reproduction problem instructions create table tr td td apply hidden attribute make hidden attribute driven model variable apply css class td see behavior motivation use case changing behavior td visible certain condition met hidden condition met please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "16461", "d": "5/2017"}, {"title": "bug aio tutorial index page wrong search result group", "body": "searching tutorial gives steps tutorial group index page group", "num": "16457", "d": "5/2017"}, {"title": "observable catch giving json response sent server", "body": "submitting current behavior get converting response observable making http request returns status code expected behavior get response json sent back server way get status code response minimal reproduction problem instructions motivation use case changing behavior want handle status codes things even get status code always since response never received block please tell us environment using web server written go angular version angular version browser chrome browser mac language typescript node aot issues", "num": "16455", "d": "5/2017"}, {"title": "build fails angularforms typescript strict flag", "body": "submitting check one x current behavior compiling angular cli app strict true flag tsconfigjson using ts ng server fails error expected behavior build successful minimal reproduction problem instructions install latest angular cli update latest typescript flag tsconfigjson build using motivation use case changing behavior able enable strict checking latest typescript please tell us environment angular version browser language typescript node aot issues", "num": "16454", "d": "5/2017"}, {"title": "getters nt work creating objects arrays", "body": "defined following class employee created array employee created component uses previous constant calling fullname property gives undefined value push new entry array employees like following calling fullname property works well please tell going", "num": "16453", "d": "5/2017"}, {"title": "language service marking private methods errors template files", "body": "submitting check one x current behavior take look screen shot using private method template show error thought problem vscode angular language extension problem also exists webstorm expected behavior expect private methods used templates error underlined template without basic support would rebuild whole application aot see error minimal reproduction problem instructions repo error showing basic form motivation use case changing behavior nt want build whole application modules takes minutes build see errors present building components please tell us environment operating system windows macos vscode angular extension webstorm angular version language typescript node aot issues", "num": "16451", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "bug way angular works bound property consumed directives passed dom element dev helper angular bind property attribute see updated attribute inspecting page source added production multiple ways solve issue according want inject value attribute directive static string add directive property", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "ericmartinezr right fixed see fix released soon", "d": "5/2017"}, {"body": "could please add small repro thanks", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "see also", "d": "5/2017"}, {"body": "always obvious route come first vs also custom url matcher complicate things lot maybe sorting routes path add one sufficient", "d": "5/2017"}, {"body": "would see add note says real service depend others need import well", "d": "5/2017"}, {"body": "yes would great example since use real service instead mock import real service dependencies well jes\u00fas rodr\u00edguez notifications githubcom would see add note says real service depend others need import well receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "could please attach small repro easiest probably use plunkr described issue template", "d": "5/2017"}, {"body": "probably server configuration error", "d": "5/2017"}, {"body": "vicb sure mean default configuration cli running localhost understand want easier reproduction plnkr impossible make one would lead directly instead", "d": "5/2017"}, {"body": "sanbornsen bug still present branch", "d": "5/2017"}, {"body": "vicb updated description yes exists please check sample", "d": "5/2017"}, {"body": "nt", "d": "5/2017"}, {"body": "tytskyi exactly sorry bad working fine close issue", "d": "5/2017"}, {"body": "working new docs link working fine merge soon angulario", "d": "5/2017"}, {"body": "thanks ericmartinezr good know", "d": "5/2017"}, {"body": "working working new docs edit good eye tytskyi", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "ericmartinezr new home angular domain stop using thank much reply", "d": "5/2017"}, {"body": "viralstegowl really working docs aiostaging finish new docs merge angulario nt worry", "d": "5/2017"}, {"body": "ericmartinezr ohh thank much sir right directly start angular skip angularjs angular", "d": "5/2017"}, {"body": "viralstegowl angular angular stuff different release versions angular see information yes right start latest version", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "mentioned previous comment used declare template want hidedisplay nodes", "d": "5/2017"}, {"body": "right thanks little bit confused lately working aurelia works little bit differently everything works tag btw noticed required use second part little bit confusing since used first part anything else used second would perfect could used", "d": "5/2017"}, {"body": "ok use time way dsl syntax sugar available like", "d": "5/2017"}, {"body": "trotyl thanks nt seen documentation", "d": "5/2017"}, {"body": "klinki explanation desugaring check whole page useful understanding", "d": "5/2017"}, {"body": "tytskyi thanks looking unfortunately example destructured syntax ifelse", "d": "5/2017"}, {"body": "klinki sorry example page syntax simple form html", "d": "5/2017"}, {"body": "tytskyi block looking specifically one since new", "d": "5/2017"}, {"body": "help without knownig setup however works try cli", "d": "5/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2017"}, {"body": "test could look like checked clicked fakeasync gt let fixture testbedcreatecomponent testcomponent let component fixturecomponentinstance fixturedetectchanges initialize controls tick wait registration controls without calling event onchange method registered yet within", "d": "5/2017"}, {"body": "alexzuza thanks", "d": "5/2017"}, {"body": "even read text already present textbox created issue guidelines stuff like nt fill following information might close issue without investigating", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "nikyypatel sorry place support requests also please insult people place", "d": "5/2017"}, {"body": "sidenav issue", "d": "5/2017"}, {"body": "sjtrimble one bug related new page navigating features docs top bar suddenly jumps bit resources works fine tested chrome edge windows", "d": "5/2017"}, {"body": "misiu different issue", "d": "5/2017"}, {"body": "gkalpak nt saw earlier sorry reposting issue", "d": "5/2017"}, {"body": "section slightly reworked nt issue new soontobereleased version", "d": "5/2017"}, {"body": "hi looking new docs still nt see definition also search also point project root instead looks like missing code example", "d": "5/2017"}, {"body": "fair enough smiley", "d": "5/2017"}, {"body": "move fa might ask something like would certainly solve problem people makes sense using condition like example consider use case form want use classes indicate form valid invalid however prior submitting form nt want apply classes would nt want users get blasted validation errors second open page support create two properties use apply classes card either class actually turns text white making impossible see unless one two classes set try code run issue describing html valid added removed text remains black top green background making hard see try move attribute text always white even white background workaround call function something like html typescript private getstatusclasses string null thisisvalid return cardinverse cardsuccess else thisisinvalid return cardinverse carddanger else return null works lot overhead also forcing class names typescript backend rather html prefer live", "d": "5/2017"}, {"body": "nt find already reads hard imo reads obvious think good use case nt know classnames advance want generate runtime", "d": "5/2017"}, {"body": "tytskyi definitely prefer good way keep classes html submitted figured many people using change behavior point figured put others might come across benefit alternative approaches like one posted thanks", "d": "5/2017"}, {"body": "relevant", "d": "5/2017"}, {"body": "also work", "d": "5/2017"}, {"body": "could expand need use rather using validators", "d": "5/2017"}, {"body": "fatsu expected behavior quote provide angular executes template expressions every change detection cycle change detection cycles triggered many asynchronous activities promise resolutions http results timer events keypresses mouse moves correct components default change detection strategy component change detection triggered afaik input changes user event happens click etc children component fires event emitter changing component state inside component trigger change detection supposed use containers components ideal components inputsoutputs internal state", "d": "5/2017"}, {"body": "tytskyi ok thank clearing", "d": "5/2017"}, {"body": "duplicate related although contains information", "d": "5/2017"}, {"body": "matsko could look", "d": "5/2017"}, {"body": "yessir investigate right away", "d": "5/2017"}, {"body": "add plunker demonstrating issue first glance would say maybe possible available anymore maybe nt used try using instead maybe works", "d": "5/2017"}, {"body": "thank sorry delay preparing plunker tried also resetconfig problem persist", "d": "5/2017"}, {"body": "plunker nt know add query param simulate refresh page added manually pcode query param place params pcode", "d": "5/2017"}, {"body": "sorry undertstood right reloading page path lazy module obvious path unreachable routing system", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "four validator directives exist required minlength maxlength pattern validator made custom implementation validator make use library like although marked experimental documentation lacking", "d": "5/2017"}, {"body": "stevevanopstal documentation min validator", "d": "5/2017"}, {"body": "plunker got confused loading angular modified plunker version debugging could something using see", "d": "5/2017"}, {"body": "seems issue converts string number", "d": "5/2017"}, {"body": "stevevanopstal yeah think indeed issue validator right thing looking wrong spot good catch", "d": "5/2017"}, {"body": "working fix create pull request", "d": "5/2017"}, {"body": "stevevanopstal thanks pointing apologize mistake remember seeing making validator since half copy pasted another old pr specifically included part unsure change thought anyway sorry inconvenience caused", "d": "5/2017"}, {"body": "toxicable problem fixed", "d": "5/2017"}, {"body": "reproduce plunker", "d": "5/2017"}, {"body": "believe issue angular cli build plunker unable reproduce using systemjs configuration create new app using angular cli add following code run get error", "d": "5/2017"}, {"body": "believe issue angularcli post issue issues page issues page angular framework", "d": "5/2017"}, {"body": "debasispanda confirm happens within cli workaround use class initial fields values class filejson public templateurl component public test filejson new filejson", "d": "5/2017"}, {"body": "thanks tytskyi also created issue angularcli page thank stevevanopstal suggestion closing issue follow angularcli issues", "d": "5/2017"}, {"body": "look", "d": "5/2017"}, {"body": "issue tracker angularcli consider moving issue right repo", "d": "5/2017"}, {"body": "u installed cli", "d": "5/2017"}, {"body": "installed g option global npm install g angularcli sun may pm jos\u00e9 toledo navarro lt notifications githubcom wrote u installed cli npm install g angularcli npm install angularcli receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "problem install yarn amp npm uninstall reinstall npm case", "d": "5/2017"}, {"body": "hi olivier using npm windows today uninstalled node restarted restarted still get ng recognized internal external command operable program batch file best regards ulrik sorber mon may olivier combe notifications githubcom wrote problem install yarn amp npm uninstall reinstall npm case receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "responded issue angularangularcli following comment windows users install ng command line non administrator account sudo runas runs administrator administrator profile uac kick ask provide admin permissions run installer ng binary located administrator npm folder installing using runas feature take look folder c usersadministratorappdataroamingnpm see spot ng add c usersadministratorappdataroamingnpm path something called sudo windows runs elevated permissions preserving profiling settings nt tried use risk", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "please provide plunker showing reproduction difference create empty array withing", "d": "5/2017"}, {"body": "possible older version ng causing manifest array worked plunkr latest angular however issue immediately apparent using ngfor iterator get mapentries mapkeys", "d": "5/2017"}, {"body": "bug click event wont triggered anymore non primary button clicks info read", "d": "5/2017"}, {"body": "dloukadakis hm current implementation routerlink directive allow regular event bubble reason prevent bubbling middle click looks strange currently cant find way handle middle click event component due preventing also new event behavior may remain blocking event bubbling", "d": "5/2017"}, {"body": "already explained work try replacing routerlink href see still triggered browsers nt trigger event anymore middle click used triggered months ago changed routerlink directive button primary mouse button made year ago click event still triggered non primary button clicks probably kept compatibility also return true click listener means prevent default event simply effect anything events still propagated post gave info handle middle click properly newer browsers keeping compatibility older ones", "d": "5/2017"}, {"body": "dloukadakis new plnkr try handle middle button click link element attached directive dont see way nothing article ignore another listener stops event propagation nomouth also return true click listener means prevent default event simply effect anything events still propagated return true returns false", "d": "5/2017"}, {"body": "hm mistake fire middle click", "d": "5/2017"}, {"body": "bad issue related ng need handle events instead", "d": "5/2017"}, {"body": "returning false stop propagation prevents default action", "d": "5/2017"}, {"body": "dup although would recommend take cli quickstart guide also recommend look property tsconfigjson file could helpful", "d": "5/2017"}, {"body": "ericmartinezr yep big problem use recommendations think big bug fixed", "d": "5/2017"}, {"body": "yes right angular bug systemjs angular transpilation", "d": "5/2017"}, {"body": "ericmartinezr really sorry nt know thanks feedback", "d": "5/2017"}, {"body": "great thank matsko nice day", "d": "5/2017"}, {"body": "could please provide minimal reproduction preferably plunkr template get started", "d": "5/2017"}, {"body": "pipe called number digits check example", "d": "5/2017"}, {"body": "pipe digit angular covalent ask forum thanks", "d": "5/2017"}, {"body": "seeing obvious fix looking css might need backup one", "d": "5/2017"}, {"body": "may element inputs probably nt affect fix", "d": "5/2017"}, {"body": "hi check complex solution dhergesngcontentdrivenangular definitely works solution also works recursion ie embedding child dynamic component parent dynamic components narrative explanation approach also available", "d": "5/2017"}, {"body": "yes even components getting loaded dynamically problem component injected specified index even provide index number thisfactory thiscomponentfactoryresolverresolvecomponentfactory thisref thiscoloneanchorcreatecomponent component rowlocation thisrefchangedetectorrefdetectchanges", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2017"}, {"body": "seems issue following exactly shown angulario doc even components injected index value", "d": "5/2017"}, {"body": "im sorry personally going debug application please provide minimal reproduction repo plunkr far many variables looking specific issue thats whole project able debug effectively however would advise check browser polyfills need", "d": "5/2017"}, {"body": "check create minimal reproduction although initial attempts failed happy try debug nt know start check polyfills although guess show error attaching web ide nt see errors", "d": "5/2017"}, {"body": "please let know simple enough issue seen clicking empty box top tower bottom right screen clicking open popup nt happen mobile chrome polyfills required according toxicable link far understand outcome server sources found nt know debug break point nt hit hit toggle nt mobile chrome please help clue solve issue prevents publishing site constructed code according example provided issue", "d": "5/2017"}, {"body": "seems tht sometimes server api getlist webservice executed addlocation service way ensure routernavigate happen untill response received", "d": "5/2017"}, {"body": "looking another example service addobject return promise seems eliminated possibility getting list early", "d": "5/2017"}, {"body": "probably misunderstanding issue plnkr scrolling div window add function see works plnkr example want scroll div play little bit css plnkr example", "d": "5/2017"}, {"body": "scroll event triggered u register element nt scrollbar nt scrolling even without angular case scrolling document div event listener", "d": "5/2017"}, {"body": "ericmartinezr dloukadakis thank guys works fine", "d": "5/2017"}, {"body": "nt know handson keep referring would mind explaining also would mind producing minimal reproduction preferably plunkr template get started", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "petebacondarwin discussed misko likely need please nt work", "d": "5/2017"}, {"body": "fixed", "d": "5/2017"}, {"body": "turns adding conditions make scenario work happening clicking link redirected resolve router sees new url linked finds nt handle url looks sees previous url handled angular router goes cleanup mode lets url gets handled angularjs router directlink mode angular router sees nt handle link looks previously successfully rendered route nt one defaults root also finds nt handle route redirects therefore adding list urls handled angular router trick angular router going working code path however perfect solution history managed angular router incorrect note browser history correct browser back buttons work intended angular router history ends navigation cases meaning link always land back", "d": "5/2017"}, {"body": "implementation found note new directory branch called empty route configured attempt address problem using sink route per description article seem address problem", "d": "5/2017"}, {"body": "please try use something like styles require srcstylescss tostring works", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "yeah thank", "d": "5/2017"}, {"body": "might duplicate also uses browser locale locale defined angular use angular format date according custom locale id", "d": "5/2017"}, {"body": "believe understanding slightly providers provided non lazy loaded module always singletons module providers provided component new instance per instance component initializing lazy module providers parent copied lazy module providers provided lazy module scoped lazy module still singletons context", "d": "5/2017"}, {"body": "think understood works saying could way easier especially modules use several libraries", "d": "5/2017"}, {"body": "still think misunderstand currently determines kind service particular service service provided explained adding feature fundamentally changing services work injector since provided longer matter", "d": "5/2017"}, {"body": "probably file plunker reproduction experience scroll events angular agree asserted claim work", "d": "5/2017"}, {"body": "ca nt reproduce issue plunker closing issue need investigate", "d": "5/2017"}, {"body": "angular use scroll event inside component wrapped routeroutlet need use viewencapsulationnative parent component order works", "d": "5/2017"}, {"body": "scroll event detected simple plunkr open issue plz", "d": "5/2017"}, {"body": "wrong repo looking", "d": "5/2017"}, {"body": "errors never caught hence would eventually cross zone boundary caught change errors caught bi change detection feed would like intercept errors please override closing since working intended", "d": "5/2017"}, {"body": "shame means library author able programmatically respond error application without forcing app use custom library supplies problem app already overridden purpose", "d": "5/2017"}, {"body": "sounds like may filed wrong repository probably reopen", "d": "5/2017"}, {"body": "sorry open", "d": "5/2017"}, {"body": "please provide plunker reproduction case", "d": "5/2017"}, {"body": "mhevery unfortunately spending hours trying reproduce plunker still able hack place error handler track last error last stack matches current error stack grab applicationref call tick triggers check tick prevent recursive calls breaks infinite error loop least stops browser hanging full cpu use used breakpoints error handler tried go stack trace hard figure going everything trace either internal angular systemjs zone also nt help lot going initial load bootstrapping routes resolved templates loaded compiled etc related issues seemed tied triggering change detection custom error handler still fairly sure subtle bug introduced simply even take custom errorhandler completely issue still occurs somehow error code think needs addressed way understand someone keeps manually triggering change detection error handler much framework beyond nt possible missing template variable throw framework infinite error loop like help narrow try create plunker repro case anyone else think situation could causing would trigger infinite error loop simply referencing invalid property component html template triggering change detection error handler ca nt problem case", "d": "5/2017"}, {"body": "spent another hours tonight trying track updates first definitely caused posterror change detection introduced roll back recursive error nt happen cloned app started commenting stuff able pare scenario recursive loop nt happen still sure actual cause basic trigger finding goes something like app shell component starts created child components route target component starts created various async processesobservables kicked various component ngoninit blocks loading data etc looks like since happening context app shell created template error anywhere chain triggers errorhandler somehow async processes seem cause infinite error loop fairly sure related async processes triggered component hierarchy creation comment children stop async processes firing infinite loop errors get single expected error try spend time weekend see get replicated plunkr try sanitizing app zipping repro case", "d": "5/2017"}, {"body": "mhevery ok lot frustrating trial error think tracked problem repro case plunker uses custom error handler aggregate errors eventually error sequential errors prevent locking browser culprits seem initial error eg property found using add global listener mouse move looks like using avoid problem need test make sure obviously scenario totally lock browser seems like big problem especially given insanely timeconsuming track apparent source problem particular issue may also reveal wider set scenarios nt accounted posterror change detection changes made let know think questions thanks", "d": "5/2017"}, {"body": "wrong infinite loop occurs whether used", "d": "5/2017"}, {"body": "closing subset", "d": "5/2017"}, {"body": "phone top toolbar always sidenav everything looks expected awas screenshot taken", "d": "5/2017"}, {"body": "issue", "d": "5/2017"}, {"body": "gkalpak issue design refresh removes fixed toolbar fluid experience space docs well", "d": "5/2017"}, {"body": "toolbar high zindex making search box lay top sidenav change mobile views search box lays nicely underneath sidenav loose logo sidenav button may need help gkalpak petebacondarwin wardbell move items mdsidenav maybe", "d": "5/2017"}, {"body": "still see issue", "d": "5/2017"}, {"body": "igorminar issue", "d": "5/2017"}, {"body": "clarify specific marketing pages navigation result automatic scroll action document loaded viewer resulting header visually cut navigation", "d": "5/2017"}, {"body": "duplicate", "d": "5/2017"}, {"body": "agree issue similar however could see usage constraint aims detect typo calling code related pull request", "d": "5/2017"}, {"body": "change uses key look mapped types pr formgroup constructor running small issue formarray allowed members different types either way since method talking abstractcontrol formcontrol formarray get method unless misunderstand keyof usage use keyof lookup situations", "d": "5/2017"}, {"body": "toxicable thanks quick reply reflection added see text towards bottom issue fact method probably suitable formgroup imagined inward constraint implementation would look something like usage typescript interface customer firstname string lastname string const customerformgroup new formgroup firstname lastname const firstnameabstractcontrol customerformgroupgetchild firstname works const lastnameabstractcontrol customerformgroupgetchild lastwithtyponame compiletime error lastwithtyponame exist customer outward constraint return type subtype would follow pull request approach", "d": "5/2017"}, {"body": "yes something fix duplicate closing one", "d": "5/2017"}, {"body": "something similar running tests", "d": "5/2017"}, {"body": "another thought simply provide place supply custom data even better would system intercept http requests like angularjs", "d": "5/2017"}, {"body": "usecase please add input closing duplicate", "d": "5/2017"}, {"body": "believe mainly focused aot since ran code aot would get error similar", "d": "5/2017"}, {"body": "chuckjaz identified bug core team willing prepare fix need guidance", "d": "5/2017"}, {"body": "angular jit compiler compiles components mentioned matter used similar aot compiler makes jit compilation slower jit intended production use anyways way simplifies internal code lot", "d": "5/2017"}, {"body": "works expected", "d": "5/2017"}, {"body": "tbosch use also mean phrase docs component nt entry component nt found template compiler omits correct", "d": "5/2017"}, {"body": "please report project", "d": "5/2017"}, {"body": "guess needs plunker reproduce become valid bug report", "d": "5/2017"}, {"body": "problem angular problem trying make plunker issue plunker url change like would running app normally wout plunker example plunker routing amp navigation tutorial", "d": "5/2017"}, {"body": "trying come simple reproduction problem meantime seems happening scenario app launched going url like abc abc route parameter guard route may decide navigate skip location change navigating property however service returns url abc via scenario router thinks current url really say skip location change logic working somehow router seems misguided current url", "d": "5/2017"}, {"body": "issue also guard might guard relatedtrying plunk moment", "d": "5/2017"}, {"body": "actually getting different issue plunker run time work start sunild open separate window time complete plunker", "d": "5/2017"}, {"body": "nt support need include appropriate polyfill please check", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "successfully provide compiler dose suggest angularcli issue angular issue", "d": "5/2017"}, {"body": "found inject importing providing anything module correct way", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "oh right dindt find one searching", "d": "5/2017"}, {"body": "seems localeid defined main module imports browsermodule define bootstrap nt work weird mean time define provider main module work", "d": "5/2017"}, {"body": "ok works change code reason localeid provider nt available injector otherwise keep investigating", "d": "5/2017"}, {"body": "problem solved add webpackprod plugins", "d": "5/2017"}, {"body": "followed suggestion delete reinstall latest library worked probably issues env", "d": "5/2017"}, {"body": "download example code run problem maybe bug", "d": "5/2017"}, {"body": "thx reporting fixed latest yet released version", "d": "5/2017"}, {"body": "syntax syntax sugar property binding event binding generalized problem angular provide type checking event bindings nothing special fill issue template feature request expected design level rather bug may possible current mechanism string comparison event names source event tracked compilation", "d": "5/2017"}, {"body": "think angular set property object check type check", "d": "5/2017"}, {"body": "binding property want bind typed properly always declared theoretically type may determined generic type may still conditions like native dom events events provided generic type used ngmodelts expected declared type determined think request way hard implement still point view", "d": "5/2017"}, {"body": "sorry inconvenience caused transpiling instead", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template aot issues please consider creating repository cloned reproduces problem", "d": "5/2017"}, {"body": "experimenting plunker noticed another difference behavior may may explain bug beta order animationsstyles rc order animationsstyles discovered applying style within outside second last ie works fails build error css property backgroundcolor exists times also animated parallel animation times assume bug mental model animation order might incorrect please confirm matsko since worked previous versions assume previous way correct", "d": "5/2017"}, {"body": "hi ionous change expect", "d": "5/2017"}, {"body": "sorry created issue wrong place", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template would extremely helpful repository reproduces issue cloned", "d": "5/2017"}, {"body": "sorry noise found issue caused installed latest cli directly without clean nodemodules npm uninstall angularcompilercli savedev npm install angularcompilercli latest savedev problems deleted whole nodemodules reinstall packages ngc works exactly know old module make trouble since problem gone close", "d": "5/2017"}, {"body": "ok definitely hard coding rules viewer one option two different topbar navigation views one wide screen one narrow screen moment use view screen widths think worth keeping docs menu item narrow view actually point real page let go moving bottom", "d": "5/2017"}, {"body": "hmm guess one container", "d": "5/2017"}, {"body": "regarding implementation seems typescript design choice array index access however method return declared parameter match mirror", "d": "5/2017"}, {"body": "done", "d": "5/2017"}, {"body": "repo angular looking angularangularjs", "d": "5/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "5/2017"}, {"body": "english really good sorry hoped understand", "d": "5/2017"}, {"body": "problem ca nt tell issue", "d": "5/2017"}, {"body": "route initialized way use string initialized successfully use variable initialized successfully", "d": "5/2017"}, {"body": "able replicate please create plunkr problem use latest stable looks like well", "d": "5/2017"}, {"body": "thanks form time problem solved caused webpack pack", "d": "5/2017"}, {"body": "ran issue well migrating sure defect since instance change triggered within lifecycle method another asynchronous event considered breaking rules far prettier solution forked plunker used operator instead", "d": "5/2017"}, {"body": "piotrszymanski problem implementation children affects parent initializes children affect children initializes otherwise asynchronous task imagine next structure app container emitter whole app rendered stabilize without affecting state state changed subtree starting rerenders got changing state rendering like middle process state yet stabilized angular helps spot problem understand reproduction provided", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "yes se issue thank reporting investigate", "d": "5/2017"}, {"body": "note infact appear desktop safari", "d": "5/2017"}, {"body": "matsko tested latest build found fixed two cases provided thanks quick turnaround however found another case animation end styles persistent ie stay even setting new state repro uses master builds expect opacity animation finishes ie normal state ps open new issue want figured related issue", "d": "5/2017"}, {"body": "actually end styles overriding last plunker ie ignoring order also seem changing state back normal intrans animation complete expect still apply normal styles cc matsko", "d": "5/2017"}, {"body": "set ng version back see desired behaviour nt forget set ngnightly false", "d": "5/2017"}, {"body": "dharders thank reporting new bug please make issue hop onto first thing tomorrow", "d": "5/2017"}, {"body": "new issue created", "d": "5/2017"}, {"body": "append object last parameter function error goes away ie however animation still nt fire route change", "d": "5/2017"}, {"body": "yes captured thank reporting", "d": "5/2017"}, {"body": "dharders thanks translate english english", "d": "5/2017"}, {"body": "turns caused due angular rendering hierarchy quick fix add", "d": "5/2017"}, {"body": "matsko work added error", "d": "5/2017"}, {"body": "fix issue", "d": "5/2017"}, {"body": "awesome many thanks matsko next release due another rc", "d": "5/2017"}, {"body": "thaoula", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "yep dupe doh", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "looks fine", "d": "5/2017"}, {"body": "agree public url routing docs tutorial looks like bellow", "d": "5/2017"}, {"body": "yes link shared working new docs ca nt fixed since already fixed p", "d": "5/2017"}, {"body": "closing since already fixed ericmartinezr mentioned new version released soon famous last words thx reporting anyway idoran", "d": "5/2017"}, {"body": "thank bringing unfortunately ca nt change since around almost year never intended align css style value", "d": "5/2017"}, {"body": "update implemented custom location class provided default one proposed changes simply changed replacestate path string query string void thisplatformstrategyreplacestate null path query code properly pushed maintained history api state location pass also location supposed programmatic representation underlying api would suggest adding ability set history api calls change like replacestate path string query string state void const statetouse state undefined state windowhistorystate thisplatformstrategyreplacestate statetouse path query go path string query string state void thisplatformstrategypushstate state null path query idea would state passed want use whatever anything currently nt passed safely use whatever case go fine overwrite going completely new leaf history note realize may exact way location completely agnostic browser starting idea", "d": "5/2017"}, {"body": "working new docs", "d": "5/2017"}, {"body": "sidebar shows nt latest version", "d": "5/2017"}, {"body": "fix", "d": "5/2017"}, {"body": "encrypt variables check branch", "d": "5/2017"}, {"body": "rely npm disttag tell docs deployment branch deployed igorminar going make sure npm publish scripts working", "d": "5/2017"}, {"body": "error angular quickstart repo node modules folder npm run without codebeast unicodeveloper ngnigeria ninggithub", "d": "5/2017"}, {"body": "might useful reading also links information long short replace server time browser update new file point user navigates site following caching restriction old file cached either length time specified caching headers hours whichever shorter thing need right set caching period length time lt hours deem appropriate suggest mins b create file apply quickly emergency effectively disables service worker", "d": "5/2017"}, {"body": "default cache time firebase files sec already set expire every hour", "d": "5/2017"}, {"body": "related entire issue discusses", "d": "5/2017"}, {"body": "think whole topic personal preferences customs exception necessary settergetter confirms", "d": "5/2017"}, {"body": "additional workaround move injector code constructor example component class instantiated service due order nodes createviewnodes hello name providers myservice export class appcomponent name angular constructor private injector injector ngoninit void let service thisinjectorget myservice servicesay", "d": "5/2017"}, {"body": "technical restriction running jit mode requires component author add property see eg article aot mode works expected", "d": "5/2017"}, {"body": "sorry nt fix according angular changelog latest update longer need write component moduleid moduleid nt seem case still getting found errors edit think fact using library components relative path getting resolved appcomponentsnavnavcomponenthtml really nodemodulescustomlibrarycomponentsnavnavcomponenthtml seems relative path updatefix support modules", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "duplicate", "d": "5/2017"}, {"body": "hello could create reproduction github branch", "d": "5/2017"}, {"body": "hi uploaded simplest example reproduce new open source projects nt know open branch show error sorry", "d": "5/2017"}, {"body": "use test nt declare stylecomponent test appstyle simple html element webkit ca nt rewrite style attribute case problem test bug form angular", "d": "5/2017"}, {"body": "angular limited support hammerjs convenience cases like best way solve create similar see way control everything hammerjs", "d": "5/2017"}, {"body": "fixed latest yet released version", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "hi got error realized error still occurs even either start next module lazy loaded", "d": "5/2017"}, {"body": "got issue angular", "d": "5/2017"}, {"body": "problem scratching head several days", "d": "5/2017"}, {"body": "angular", "d": "5/2017"}, {"body": "add one repository reproduce issue import async testbed componentfixture undefined reproduce npm install npm run test make test work downgrade angular module except router router downgrade specbundlejs change platformbrowserdynamictesting platformbrowserdynamictesting function angular", "d": "5/2017"}, {"body": "tried reinstalling simple seems fix", "d": "5/2017"}, {"body": "gonzofish yes tried error solution fixed testsample machine", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "discarded values try", "d": "5/2017"}, {"body": "know option used angular compiler ngc properties gendir skiptemplatecodegen skipmetadataemit document angular team write document angular cli thanks", "d": "5/2017"}, {"body": "yeah document comments", "d": "5/2017"}, {"body": "compared jit generated code seems pretty similar created angular code works suspect might something related order initialize properties cuz ts appmoduleinjectorprototypecreateinternal function new j applicationinitstatus n \u0275e intitialize application also calls part webpack call initialized yet want double check generated code order could related ng eject aot prod update webpack config uglify shoudl get result", "d": "5/2017"}, {"body": "ok probably found problem older version done initializing property directly inside implemented getter anytime somebody request inject like case getter involved works everytime ts objectdefineproperty appmoduleinjectorprototype new webpackimported make sense webpack problem angular maybe changed private property getter public field something similar suggestion thank frank", "d": "5/2017"}, {"body": "using angularcli build app believe gzip compression turned default need compress app serving server nt think change without exiting angularcli first might wrong though try compress dist folder see size decreases believe hosting services eg heroku iirc compression default try deploying build check using browser developers tool see size decreased sidenote believe since angularcli implemented webpack official bundler documents angulario become somewhat confusing sections clearly relevant systemjs rollup angularcliwebpack section aot example would nice would least kind warningexplanation prefixed sections guide", "d": "5/2017"}, {"body": "issues ca nt get vendor bundle gzip seems pretty big especially compare previous backbone projects vendor bundle size ca nt work normal something nt right using webpack bundle analyzer shows mostly followed added load packages made big", "d": "5/2017"}, {"body": "dottodot adding whole rxjs module components need generally speaking though angular heavy weight compared say vue react course libraries nt provide features angular provide steps take reduce bundle size use lazyloading use cdn styles however solution radically decrease start time use server side rendering initial landing page take look angular universal counterparts universal react vue world would next nuxt case heard though different features based serverside rendering", "d": "5/2017"}, {"body": "yes import components need rxjs also already using lazyloading got round trying universal holding hope might added cli point still lot learn getting basics sorted", "d": "5/2017"}, {"body": "dottodot unfortunately seems ca nt much reduce size much issue seems reducing size improving speed one main goals angular apparently right tree shaking really remove unnecessary parts watch edit solutions withstanding method used compress files seems author updated angularcli latest stable release get bare bundle size lt note note bortli supported older browsers unless concerned users modern browsers slow networks say using cell transmit use carefully", "d": "5/2017"}, {"body": "could post vendor file", "d": "5/2017"}, {"body": "wild guess something like code yes makes tree shaking impossible explicitly tell webpack include everything import demand like webpack throw away everything else", "d": "5/2017"}, {"body": "something along lines", "d": "5/2017"}, {"body": "could try", "d": "5/2017"}, {"body": "use typescript create rxjsts project point tsconfigjson like looks like use custom rxjs build instead full thing shave kb build must something else wrong vendor file mb size", "d": "5/2017"}, {"body": "nt know anything angularcli access webpack config add another plugin add build gives pretty nice overview browser build files contain", "d": "5/2017"}, {"body": "may seem crazily scope could code underneath gets run cli via webpack plugin detect various common antipatterns like emit warning seems could help every user angular whereas documentation issue tracker helps subset recognize getting unnecessarily large bundle make way investigate", "d": "5/2017"}, {"body": "creating component outside change detection tree either use", "d": "5/2017"}, {"body": "simple fix thanks", "d": "5/2017"}, {"body": "expect event control", "d": "5/2017"}, {"body": "description reset function developermozillaorg default action reset value elements parent form source expected reset event fired element parent form occur listen reset event input control", "d": "5/2017"}, {"body": "occur listen reset event input control however mean reset empty", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "would possible see implementation routereusestrategy also query params want preserve matrix params want make sure understand issue", "d": "5/2017"}, {"body": "thanks issue nt understand translation services poor job translating issue still problem please log bug english", "d": "5/2017"}, {"body": "english font code block friendly beginning letter tell case especially letter c understanding naming specification situation much better still want improve next notebook font small zoom screen fonts blurred translate", "d": "5/2017"}, {"body": "yes unfortunately translation got nt help understand issue would need thorough description problem know referred", "d": "5/2017"}, {"body": "tried accessing way around ie child directive able access parent", "d": "5/2017"}, {"body": "ability access parent child via di seems working far could test sure changed", "d": "5/2017"}, {"body": "link angular cli project di child working", "d": "5/2017"}, {"body": "creating directive via inserting via creates template sibling dom child therefore angular injection also respects child place creation see happened work accident design closing favor captures use case", "d": "5/2017"}, {"body": "tbosch creating directive via templateref inserting via viewcontainerref creates template sibling dom child sure observation true dom created example html parent child template responsible template generation html parent child children child directives amp components made accessible communication parent amp children accomplished without external coordination managing mapping parent amp child via external service please look fragile implementation exactly issue mentioned root cause ability get access component created using static variable get access recently created directive clearly something scary", "d": "5/2017"}, {"body": "matonanthony error message says problem use inside form need make one two things add attribute use control could point think unclear would require precise documented", "d": "5/2017"}, {"body": "example put name attribute error still triggered either message incomplete bug somewhere", "d": "5/2017"}, {"body": "please create minimal working example reproduce", "d": "5/2017"}, {"body": "maybe miss another input without attribute", "d": "5/2017"}, {"body": "yes need minimal live reproduce scenario plunker otherwise actionable", "d": "5/2017"}, {"body": "looks like material datepicker uses short date simply pass custom format pipe date picker far docs say need deploy customer demo days way override short date format globally fixed would help much moment", "d": "5/2017"}, {"body": "please provide reproduction assume wrong", "d": "5/2017"}, {"body": "already set nt work project could get help please", "d": "5/2017"}, {"body": "nt see router trying use lazy loading need use special loader working please show us complete minimal example", "d": "5/2017"}, {"body": "sorry seems work well remove run restart project think problem thank much", "d": "5/2017"}, {"body": "dup already fixed master", "d": "5/2017"}, {"body": "closing duplicate", "d": "5/2017"}, {"body": "nt indeed work expected windows work platforms reason windows escape character command equivalent essentially logs commits windows escape eg easiest solution would use git doubledot range notation alias syntax works correctly platforms", "d": "5/2017"}, {"body": "string expected value also returns new instance different time angular keeps detecting changes fixed although efficient", "d": "5/2017"}, {"body": "closing binding value binding changing time checked see dawidgarus fix", "d": "5/2017"}, {"body": "oh ok bad guess hard day nt realize binding changing value sorry", "d": "5/2017"}, {"body": "see think implement throw error export class myerrorhandler handleerror error throw error describe appcomponent gt beforeeach async gt testbedconfiguretestingmodule declarations appcomponent providers provide errorhandler useclass myerrorhandler compilecomponents fail async gt const fixture testbedcreatecomponent appcomponent fixturedebugelementquery bycss button nativeelementclick", "d": "5/2017"}, {"body": "good idea think would good integrated way test failures", "d": "5/2017"}, {"body": "right could integration test framework marking feature request", "d": "5/2017"}, {"body": "provide pr ideas implemented opinion variants sufficient idea improve", "d": "5/2017"}, {"body": "afaik uses option", "d": "5/2017"}, {"body": "alexzuza thank much solution bug ps nt find feature docs", "d": "5/2017"}, {"body": "horvathakospeter agreed place find docs lacking quite bit filed docs added", "d": "5/2017"}, {"body": "document comments", "d": "5/2017"}, {"body": "see", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "probably related", "d": "5/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "5/2017"}, {"body": "suspect create component module injector provided typebuilderts public createcomponentfactoryfromtype type promise lt factory componentfactory injector injector gt let module thiscreatecomponentmodule type return new promise resolve gt thiscompiler compilemoduleandallcomponentsasync module modulewithfactories gt consolelog modulewithfactories const moduleref modulewithfactoriesngmodulefactorycreate thisinj let window dynamiccomponentts thistypebuildercreatecomponentfactoryfromtype type factorywithinjector factory componentfactory injector injector gt consolelog factorywithinjectorfactory target instantiate inject component keep reference thiscomponentref dynamiccomponenttarget createcomponent factorywithinjectorfactory null factorywithinjectorinjector", "d": "5/2017"}, {"body": "hi alexzuza thanks input leads also uncertain thisinj typebuilderts come platformbrowserdynamic injector missing import module either core extensions bundle update sorry clipped wrong part trace gives error", "d": "5/2017"}, {"body": "check updates", "d": "5/2017"}, {"body": "indeed solve problem", "d": "5/2017"}, {"body": "would use option solve ngfor let el elements let idx index trackby trackbyfn trackbyfn return", "d": "5/2017"}, {"body": "correct way fix", "d": "5/2017"}, {"body": "think simple solution convert tags even straight markdown links", "d": "5/2017"}, {"body": "actually particular instances wrong author must provide title links api docs", "d": "5/2017"}, {"body": "intend publish new version angulario ready closing well whole point new angularaio", "d": "5/2017"}, {"body": "tobmaster meanwhile available see current process new site", "d": "5/2017"}, {"body": "yeah might want still take prs old repo currently says post issues prs repo anymore trotyl thank link", "d": "5/2017"}, {"body": "agree imo unexpected behavior dev want refresh erroring route app root users may also confused reloading page seeing expected page", "d": "5/2017"}, {"body": "probably unreadable finally", "d": "5/2017"}, {"body": "mlcmlapis mean", "d": "5/2017"}, {"body": "meant could affect behaviour parent component would implemented readability relations want things inject component di make operations", "d": "5/2017"}, {"body": "mlcmlapis nt really understand point seems bug working fine understand purpose update property host element html element component", "d": "5/2017"}, {"body": "maximusk binding changes update host element directive takes optional parameter specifies property name host element updated nt think documentation saying used bind component property could provide see hostbindingdecorator information", "d": "5/2017"}, {"body": "maximusk think may misunderstanding always binding dom element change code find working fine restricted prefix sense", "d": "5/2017"}, {"body": "nt think documentation saying hostbinding used bind component property could provide nt think documentation seen comments sources nt shed much light matter hand hostbinding always binding dom element makes think understanding way angular designed remove distinction dom elements components example syntax binding besides listen dom element components events yet phrasing description angular invoke decorated method host element emits specified event", "d": "5/2017"}, {"body": "think possible oneway data flow raise feature request nt think would considered", "d": "5/2017"}, {"body": "maximusk known issue problem actually marked bug thought true work described nothing anything guess probably problem high priority actually", "d": "5/2017"}, {"body": "mlcmlapis thanks information seems mark bug enough thumbs nt think fixable like", "d": "5/2017"}, {"body": "mlcmlapis thanks link check think possible oneway data flow view directive child component indeed goes oneway data flow see directive extension component child", "d": "5/2017"}, {"body": "maximusk applies component also noncomponent directive consider adirective property property property setter update property bdirective property property property setter update property", "d": "5/2017"}, {"body": "trotyl thanks example yes true really question similar cases changings done lifecycle hooks lead situation throw changeafterchecked errors dev mode wo nt extra exception still additional place potential problems", "d": "5/2017"}, {"body": "indeed could throw exceptions since adirective amp bdirective sound directives valid oneway data flow combining together even without knowing cause invalid twoway data flow would design failure", "d": "5/2017"}, {"body": "trotyl agree idea supporting would counterproductive step also think angular core team wo nt accept end", "d": "5/2017"}, {"body": "may also related issue hostbinding always directly dom sure discussion context", "d": "5/2017"}, {"body": "yes discussions lead conclusion", "d": "5/2017"}, {"body": "works intended using data binding communicate directives components element slower direct communication making one inject data binding directives easily leads cycles right though work events fired directives well fact confusing closing favor", "d": "5/2017"}, {"body": "tbosch thanks please provide example using data binding communicate directives components element slower direct communication making one inject mean inject using", "d": "5/2017"}, {"body": "maximusk use normal di way constructor service example found", "d": "5/2017"}, {"body": "also opposite may say general using specific typing right solution using defined component abstract class", "d": "5/2017"}, {"body": "trotyl mlcmlapis thank guys suggestions mlcmlapis interesting case please elaborate bit", "d": "5/2017"}, {"body": "maximusk right necessary also fine right sure remember maybe complicated case", "d": "5/2017"}, {"body": "javascript hoisting behavior unlike using class wrote using position value would time would come help would postpone evaluation time angular get initialized value", "d": "5/2017"}, {"body": "trotyl ah thanks notice actually using ts file component definition seems unnecessary cases could really help", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2017"}, {"body": "work means", "d": "5/2017"}, {"body": "possibly related", "d": "5/2017"}, {"body": "see", "d": "5/2017"}, {"body": "sure using latest version lunr improvements index size possibly worth try either way interested knowing results comparison", "d": "5/2017"}, {"body": "indeed looks like still take look", "d": "5/2017"}, {"body": "upgrading guide might help", "d": "5/2017"}, {"body": "enough information reproduce issue please fill full issue template bug report github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "5/2017"}, {"body": "problem array contains strings javascript strings referentially identical value angular change detection gets confused think right bug angular nt anything case", "d": "5/2017"}, {"body": "cnaiko use smaller component single strategy", "d": "5/2017"}, {"body": "tytskyi met issue using material seems like hard put smaller component eg directive", "d": "5/2017"}, {"body": "adding fine grained control makes complex use explain would need strong performance argument using using enough", "d": "5/2017"}, {"body": "specific library experiencing open ticket solution instance hacky bad following javascript import ngmodule pipe angularcore apollomodule decorators type ngmodule apollomodule decorators args declarations decorators type pipe include serverside basically overwrite decorators reason interpreted correctly", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "5/2017"}, {"body": "please create plunker reproduce", "d": "5/2017"}, {"body": "sorry solved problem happens input form control related angular version", "d": "5/2017"}, {"body": "crossrt going problem would solution", "d": "5/2017"}, {"body": "heidermatos make sure form control solve problem missed last time forget use attribute input", "d": "5/2017"}, {"body": "crossrt could share working code thank", "d": "5/2017"}, {"body": "add ngcontrol directive get message console page instantiate cyclic dependency ngcontrol", "d": "5/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker case plunker wo nt cause issue please provide downloadable example repo using template describe difference expected current behavior create new issue", "d": "5/2017"}, {"body": "place technical help request related angular", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "related", "d": "5/2017"}, {"body": "yes right thanks", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "sorry nt understand specifically asking looks related build processes would recommend looking", "d": "5/2017"}, {"body": "ok seem related build processes would checked may bug", "d": "5/2017"}, {"body": "think requestoptionsmethod null never set noticed method becomes null functionality yesterday debugging jwt auth fact requestoption method null nt stop post requests firing guess say cors may dealt problem like days ago lol sounds like post request nt firing preflight request rejected backend maybe work", "d": "5/2017"}, {"body": "yep sounds like cors issue nothing angular", "d": "5/2017"}, {"body": "import injectable angularcore import http response requestoptions request requestmethod headers angular import observable rxjsobservable import rxjsaddoperatormap import rxjsaddoperatorcatch import rxjsaddoperatordo import group group injectable export class groupsservice nt see cors issue nt see error", "d": "5/2017"}, {"body": "demo seems work indeed error console", "d": "5/2017"}, {"body": "gkalpak think problem refering expression changed checked aravindfz says example ca nt seen realized use adblocker extension browser nt play well adbannercomponent see name tragedy example running disabling adblocker seems solve issue maybe aravindfz confirm", "d": "5/2017"}, {"body": "aha makes sense add blocker see expression changed checked error probably change component name smiley", "d": "5/2017"}, {"body": "btw expression problem solved adding sure better way triggering change detection manually last line method fixed plunker", "d": "5/2017"}, {"body": "says bottom page powered google code licensed mitstyle license documentation licensed cc", "d": "5/2017"}, {"body": "tried comment usages tested get errors like create angular version use injectiontoken works fine existing project probably start removing libraries dependencies see somethign related", "d": "5/2017"}, {"body": "found issue angular cli whcih resolved case adding path tsconfig angular nodemodules angular stil sure real root case seems webpack able find map correct paths", "d": "5/2017"}, {"body": "happens scriptswindowscreatesymlinkssh nt fix symlink said even manually fixing symlink nt able run successfully windows yet", "d": "5/2017"}, {"body": "gkalpak investigated yes indeed submitted pr fix problems windows currently able run", "d": "5/2017"}, {"body": "bisubus anything special get successfully run windows version windows", "d": "5/2017"}, {"body": "gkalpak windows administrator accidentally got weird issues npm installation fixing symlink installing bower packages went ok yes kinks used mingw running looks like job least errors git windows got bundled mingwmsys bash rsync required luck cygwin windows paths showstoppers actually sounds bit sophisticated paper suggests say least guess deserves separate issue since nearly simple windows devs expected nt able run command line starters", "d": "5/2017"}, {"body": "angular version", "d": "5/2017"}, {"body": "sounds like issue zones rather angular please file bug", "d": "5/2017"}, {"body": "specific reason feature say using custom event emit parent component reason wanting know happens", "d": "5/2017"}, {"body": "special use case form always initiate disabled state user click button enter kind edit mode add form controls child component ngoninit method would disable form every child component adding controls edit mode toggled parent component well form submit reset parent child component used generate aggregated containing parents controls well custom controls added generic way several child components rendered based ngswitch expression could several different form configurations new child components build time developer child components think enable disable form", "d": "5/2017"}, {"body": "discovered another use case adding form group disabled form new form group enabled", "d": "5/2017"}, {"body": "use least build works gt solved", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "answering", "d": "5/2017"}, {"body": "problem calling actually destroy attached views detach fix change component instead eg", "d": "5/2017"}, {"body": "thanks lot", "d": "5/2017"}, {"body": "see link mentioned support request please open issues general support questions want keep github issues bug reports feature requests got much better chances getting question answered stackoverflow questions tagged tag stackoverflow much better place ask questions since thousands people willing help stackoverflow questions answers stay available public viewing question answer might help someone else stackoverflow voting system assures best answers prominently visible save time systematically closing issues requests general support redirecting people stackoverflow would like chat question realtime reach via gitter channel", "d": "5/2017"}, {"body": "chat nobody answers", "d": "5/2017"}, {"body": "patient ask question stack overflow", "d": "5/2017"}, {"body": "please continue chat stack overflow ca nt provide support github issues thanks", "d": "5/2017"}, {"body": "fixed new yet released version toc autogenerated", "d": "5/2017"}, {"body": "sounds like issue clear assign sounds like might cli bug case filed angular cli repo either case please provide way reproduce locally plunker works use template create gist create public repo exposing problem please add documentation resubmit", "d": "5/2017"}, {"body": "jasonaden consider pr fix issue closed deleted idea", "d": "5/2017"}, {"body": "trotyl jasonaden update issue git repo issue reproduced jasonaden sure shall reopen issue please needful", "d": "5/2017"}, {"body": "please update issue plunker explains issue", "d": "5/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "5/2017"}, {"body": "would submit fix add file since example zip nt sure source code lives", "d": "5/2017"}, {"body": "fixed new yet released version confirm works", "d": "5/2017"}, {"body": "gkalpak downloaded zip version linked ran everything worked like charm believe fixed", "d": "5/2017"}, {"body": "thank bug report however general rule selectors nt take expressions account worked angular unintended side effect closing works intended", "d": "5/2017"}, {"body": "created pull request", "d": "5/2017"}, {"body": "fixed", "d": "5/2017"}, {"body": "far nt see creating components wrap html bottleneck ie would preferred way splitting template new way would require least performance improvement otherwise another feature users wo nt use", "d": "5/2017"}, {"body": "yes problem tried works", "d": "5/2017"}, {"body": "sorry version numbers wrong", "d": "5/2017"}, {"body": "tried locally works could create reproduction github branch", "d": "5/2017"}, {"body": "fixed released somehow forgot release patch branch", "d": "5/2017"}, {"body": "mistaken released", "d": "5/2017"}, {"body": "verified ca nt reproduce issue closing reopen better repro steps", "d": "5/2017"}, {"body": "looks like might issue yet supporting tslint able reproduce using tslint suspect original poster using tslint compilation succeeds switching back tslint nt look like angular using tslint yet would nice codelyzer already dependency tslint relevant environment angular angular cli typescript codelyzer tslint", "d": "5/2017"}, {"body": "loss going longer showing possible yarn left something stale updated thing think deleted repopulated libraries process trying figure going lines triggering error seem valid ts code nt blocking using tslint desired dependencies anymore update run issue", "d": "5/2017"}, {"body": "definitely using tslint check still run problem", "d": "5/2017"}, {"body": "read feels bad add fix problem", "d": "5/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "5/2017"}, {"body": "small aside called content projection transclude transclude angularjs", "d": "5/2017"}, {"body": "simple solution could concat templates via strings actually also work aot would feature add addition string concatenation", "d": "5/2017"}, {"body": "currently inherit component ca nt inherit template know feature like would least mind make component inheritance elegant useful certain string manipulation gets manner need know base template string insert parents template imagine inheritance hierarchy components manipulating string could get complicated due parsing potential name clashesscoping etc mind would seem shame string findreplaces templates slotted content projection feature already could extended support component inheritance way could work think component decorator perhaps something like base template title derived component decoractor perhaps even following would would cover simple use cases think good component wanting project multiple templates base template base template title modal one example really derived component likely want use base class template way base class functionality probably used way template click handler binding etc moment required assign new template inherited component means breaking dry principle eg change template bindings derived components instead base template add feature base template reality implement template derived components ca nt share base template", "d": "5/2017"}, {"body": "already solve use case", "d": "5/2017"}, {"body": "would thanks", "d": "5/2017"}, {"body": "ok closing", "d": "5/2017"}, {"body": "please resubmit english also need see plunker reproducing issue use template", "d": "5/2017"}, {"body": "exactly version talking angular version developers defined version sort versioning", "d": "5/2017"}, {"body": "make template editable waiting kind reply", "d": "5/2017"}, {"body": "toxicable version module defined developer example", "d": "5/2017"}, {"body": "hello far nt need version ngmodules automatically versioned via npm package ship could explain version would enable", "d": "5/2017"}, {"body": "tbosch talking developers able version modules", "d": "5/2017"}, {"body": "yes would developer use version", "d": "5/2017"}, {"body": "tbosch want component display dependencies versions could help example qa report bugs need standardized way versioning ngmodules convinient way get display id name version", "d": "5/2017"}, {"body": "could create make ngmodule component classes implement would need decorator", "d": "5/2017"}, {"body": "tbosch yeah add custom stuff really want standardized approach every developer angular use", "d": "5/2017"}, {"body": "every developer wants use approach though", "d": "5/2017"}, {"body": "proposal could mechanisms want easy common way show ngmodule id version edited ofc optional", "d": "5/2017"}, {"body": "sorry far convinced need core angular optional users set synced easily get date clear relates version component published npm way user defined way libraries could opt wanted", "d": "5/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior", "d": "5/2017"}, {"body": "note private property right contains wrong node reference case seems pointing first text node component", "d": "5/2017"}, {"body": "tbosch thank reviewing quickly understand node index private nt consumed hoping provide context issue aid debugging resolution issue", "d": "5/2017"}, {"body": "reproduction see links comments", "d": "5/2017"}, {"body": "note looks like bug closure compiler code", "d": "5/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior", "d": "5/2017"}, {"body": "problem workaround wo nt plunkr time hopefully get around reproducing sometime version angular version", "d": "5/2017"}, {"body": "samrantmedia use aot compilation think fail silently guess", "d": "5/2017"}, {"body": "gkalpak please ensure use gzip compression level firebase guessing use level need test comparing results", "d": "5/2017"}, {"body": "addition seems one guard call wo nt trigger guards path", "d": "5/2017"}, {"body": "stumbled upon issue playing around reactiveformsmodule plunkr seems angular plunkr using version issue seems fixed later release", "d": "5/2017"}, {"body": "downgrading generally supported whole point ngupgrade difficult tell issue without reproduction", "d": "5/2017"}, {"body": "added code try work", "d": "5/2017"}, {"body": "see currently downgrade attribute directives creates directive factories work elements cases nt matter might cases need selector match attribute node name feature request smiley desperate could probably hack around using angularjs change directive", "d": "5/2017"}, {"body": "dug little deeper old code trying use seems massive changes either angular typescript none previous dynamic providers work anymore import tokenrecord pathtotokenrecord simple immutablejs record import recordtoken providertokens injectiontoken let dynamicproviders tokenrecord map recordclass gt dynamicproviderspush provide recordtoken usevalue recordclass multi true ngmodule providers dynamicproviders injectable export class mymodule constructor inject recordtoken records consolelog records sure ever worked aot mode know works jit mode today ng ngcli tackling problem wrong end really bug aot compilation feel free close issue behaviour seeing intended", "d": "5/2017"}, {"body": "update please help resolve asap", "d": "5/2017"}, {"body": "someone please look behavior ncessary application", "d": "5/2017"}, {"body": "jasonaden please provide update", "d": "5/2017"}, {"body": "issue", "d": "5/2017"}, {"body": "found workaround create iframe javascript chrome honor target attribute", "d": "5/2017"}, {"body": "wardbell created ticket aio project originally still needed", "d": "5/2017"}, {"body": "resize images size put html", "d": "5/2017"}, {"body": "right", "d": "5/2017"}, {"body": "add injectable decorator could solve like example issue angular typescript emit metadata class decorator technically impossible jit angular achieve aot keep behavior jit", "d": "5/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "5/2017"}, {"body": "nt think actual bug feature using component multiple apps want styles browser multiple times downsides bug", "d": "5/2017"}, {"body": "good idea run multiple angular apps simultanously happens dom node gets removed nt see instancespecific destroy function anywhere would nt create memory leaks like", "d": "5/2017"}, {"body": "returns method", "d": "5/2017"}, {"body": "issue memory leaking bootstrap multiple times though see eg using encapsulation selector bug aot different component classes share selector", "d": "5/2017"}, {"body": "css class app adopted apps wrong behavior load second angular app style overwrite style due css class maybe component another component component css classes another reason dynamic loaded second angular app affects first angular app unexpected behaviour ca nt tested correctly", "d": "5/2017"}, {"body": "dbechtel understand correct totally different applications totally different components generate css selectors incremental generation logic root deep etc totally different components css visually affecting", "d": "5/2017"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "5/2017"}, {"body": "confirm behaviour example new website", "d": "5/2017"}, {"body": "checked well run problem reason nt put progress reporter one says tests passes seems like stops warning force test go red see error warning due loading disabled testing ignore want rework webpack guide eventually", "d": "5/2017"}, {"body": "foxandxss add reporter easily", "d": "5/2017"}, {"body": "please make minimal reproduction plunkr hard anything without reproduction issue occurs", "d": "5/2017"}, {"body": "toxicable issue similar got solution issue", "d": "5/2017"}, {"body": "willoowisp thanks details please get put plunker asap appears valid issue without plunker issues usually closed", "d": "5/2017"}, {"body": "okay try reproduce plunker time soon", "d": "5/2017"}, {"body": "think represents problem experiencing angular compared worked angular", "d": "5/2017"}, {"body": "mhevery looks like nt strictnullchecks enabled http", "d": "5/2017"}, {"body": "jasonaden yes seperate place compile whole world strictnullchecks true issue", "d": "5/2017"}, {"body": "nascosto unable reproduce issue provide detailed instructions", "d": "5/2017"}, {"body": "mhevery trick errors", "d": "5/2017"}, {"body": "ericmartinezr timeline fix released blocker use config typescript", "d": "5/2017"}, {"body": "mattma weekly point releases last one day", "d": "5/2017"}, {"body": "mattma luck mhevery still getting errors angular compile aot stict null checks", "d": "5/2017"}, {"body": "tried latest release still error works reading changelog see commit http aot fix release come beta release seems weird", "d": "5/2017"}, {"body": "mattma jit works aot build fails mhevery commit issue closed issue nt fixed yet issue reopened", "d": "5/2017"}, {"body": "alxhub could look", "d": "5/2017"}, {"body": "responseoptionsargs angularcore viewchild decorator", "d": "5/2017"}, {"body": "updated definitions like", "d": "5/2017"}, {"body": "updated still seeing build error", "d": "5/2017"}, {"body": "updated still see build error timeline bug fixed", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "almost error fails trying bundle application using systemjs builder nt mind opening issue quickstart repository sure order able bundle application code single js file current implementation angular systemjs support", "d": "5/2017"}, {"body": "guess design guess maybe better change union type api overloads", "d": "5/2017"}, {"body": "think issue fixed", "d": "5/2017"}, {"body": "please refer docs specify optional first argument url string", "d": "5/2017"}, {"body": "header field consists caseinsensitive field name followed colon http header name caseinsensitive implementation depends specific case header name violating http standard", "d": "5/2017"}, {"body": "see also continued removed http repo continued removed http repo", "d": "5/2017"}, {"body": "thank found cause problem", "d": "5/2017"}, {"body": "sorry issue caused angular please contact author rxjs file issue issue tracker", "d": "5/2017"}, {"body": "already allowed adding regexp wo nt help missing parenthesis sure security concerns ie sanitization trying protect ca nt really suggest soluton", "d": "5/2017"}, {"body": "mprobst think", "d": "5/2017"}, {"body": "hello could provide reproduction example seems invalid miss quotes", "d": "5/2017"}, {"body": "tbosch oh yeah forgot quotes sorry added plunker", "d": "5/2017"}, {"body": "cc rjamet", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "thought bug reading documentation realized thought worth mentioning anywyas case someone falls problem answer importing appmodule mainmodule containing mainroutingmodule like ngmodule imports approutingmodule mainmodule correct way ngmodule imports mainmodule approutingmodule reasons explained cheers", "d": "5/2017"}, {"body": "duplicate", "d": "5/2017"}, {"body": "tbosch please close duplicate", "d": "5/2017"}, {"body": "closing duplicate", "d": "5/2017"}, {"body": "ismcagdas need jquery bootstrapjs would one native angular libraries fit needs wiring original bootstrapjs angular would real adventure", "d": "5/2017"}, {"body": "sorry nt support jquery boostrap please look instead", "d": "5/2017"}, {"body": "thanks lot information try one native libraries", "d": "5/2017"}, {"body": "let display pipe purity implementation detail nt important reader realize somehow information surfaced deal", "d": "5/2017"}, {"body": "error class nt exist please send pr remove link say injector throw error", "d": "5/2017"}, {"body": "relative path usage attribute use file location make output closer files used localization like xliff easier digest users", "d": "5/2017"}, {"body": "hi guys poeditorcom among first implement xmbxtb support think still localization service support deciding structure files please consider backwards compatibility changing format often drives away users trusted used applications ps lack documentation nt help either adrian", "d": "5/2017"}, {"body": "poeditor nt worry source element wo nt move attribute xmbxtb spec clear also sorry ones support textunitedcom support well even better remember correctly handle placeholders better lack documentation got update coming guide next week nt talk specs formats", "d": "5/2017"}, {"body": "thank point us specs xtb xmb formats", "d": "5/2017"}, {"body": "nt think anything public available except already know ask around", "d": "5/2017"}, {"body": "poeditor asked team google official spec except dtd beginning xmbxtb files call spec", "d": "5/2017"}, {"body": "see comment pr allowed per xtb dtd ocombe valid", "d": "5/2017"}, {"body": "closing valid xtb", "d": "5/2017"}, {"body": "reproduce locally clone branch pr", "d": "5/2017"}, {"body": "coincidentally fixed", "d": "5/2017"}, {"body": "aiboy meanwhile check usage binds host element property css class directivecomponent property", "d": "5/2017"}, {"body": "tytskyi tnx point know dose lot newcomers complain documentation uses interface lot places never explains works looking cheatsheet counter intuitive", "d": "5/2017"}, {"body": "works expected angularjs loaded created hence bootstrap code thinks angular loaded potential fix", "d": "5/2017"}, {"body": "duplicate see also info", "d": "5/2017"}, {"body": "mhevery ahh may worthwhile addition guide since mention needing present using workaround importing zonejs still importing angularjs app importing zonejs solves issue checked app production looks like angularjs automatically attaches despite bundled however happens imported nt detect crux issue gkalpak ahh thank", "d": "5/2017"}, {"body": "issue tracking angular project please take support questions one forums", "d": "5/2017"}, {"body": "working intended must constant hence call ca nt return different value", "d": "5/2017"}, {"body": "experiencing similar problem angular datepipe sometimes adds substracts hour tested eastern time zone seems related switch daylight time standard time plunker", "d": "5/2017"}, {"body": "see please close issue", "d": "5/2017"}, {"body": "issue templates mentioned plunker required allows reproduce", "d": "5/2017"}, {"body": "issues must plunker repro case please open new issue", "d": "5/2017"}, {"body": "click link event fired input running validation validation message added dom jumps event nt happen link normal browser behavior prevent behavior trick", "d": "5/2017"}, {"body": "thanks alexzuza works curious know works intended considered bug", "d": "5/2017"}, {"body": "tried escape braces like", "d": "5/2017"}, {"body": "works still bit odd need use interpolation add characters template actually add use html encoding used impossible localize text still think bug aot compiler consumes translationbundle", "d": "5/2017"}, {"body": "sorry working intended", "d": "5/2017"}, {"body": "intended way characters use templates planning localize think characters possible templates must able use resource files let put way writing english japanese application characters available writing multilingual application suddenly characters allowed", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "although reported", "d": "5/2017"}, {"body": "like better since yarn docs deleting everything could nt", "d": "5/2017"}, {"body": "working fine please add reproduction issue", "d": "5/2017"}, {"body": "thanks ericmartinezr indeed something happening upgraded app record printed angular version see plunker", "d": "5/2017"}, {"body": "vicb pkozlowskiopensource please close", "d": "5/2017"}, {"body": "nonrelevant still closed good documented hard go longterm things many discussion reality number high would nice decrease number interesting number april build vsc closed issues time new ones opened result decreased total number issues period actual status issues", "d": "5/2017"}, {"body": "broros joke p kidding keep good work guys make web development happier journey", "d": "5/2017"}, {"body": "new component see matter inside contentchild want work templateref changed new component example", "d": "5/2017"}, {"body": "suggested alternative stylingcolour", "d": "5/2017"}, {"body": "need map polyfill old browsers try", "d": "5/2017"}, {"body": "please create plunker reproduce pass new object reference", "d": "5/2017"}, {"body": "please create plunker reproduce pass new object reference unfortunately im using angularcli via ng build plunker wont let upload vendorbundlejs saying save failed passing new object reference rather object changing properties via ngmodel mypageractivepage list via ngfor let item itemspagerpipe mypager unzip run indexhtml", "d": "5/2017"}, {"body": "passing new object reference rather object changing properties via ngmodel mypageractivepage ca nt use pipe use impure reconsider implementation", "d": "5/2017"}, {"body": "angular change detection nt check object array content therefore behaving designed issue template contains link angular plunker template", "d": "5/2017"}, {"body": "alternativewould considered bad practice call ngfor function returns array ngfor let item getarray", "d": "5/2017"}, {"body": "zyarnold depends implemented return new array instance content nt actually change otherwise get error value changed since last checked", "d": "5/2017"}, {"body": "zyarnold see potential solutions implement pipe works high reusability poor performance break references manually array obvious get http time get new reference need manually using separate instead use reactive form retrieve model observable get new reference every time good performance low reusability bit manual work change signature note still need break reference good performance good reusability possible need lot parameters embed pipe logic component promoted angular docs angular team many experienced angular developers strongly recommend moving filtering sorting logic component component expose property take control often execute supporting logic capabilities would put pipe shared across app written filteringsorting service injected component full control performance unlocks aggressive minification lot manual work poor reusability personal opinion would choose one approaches one correct rather choose one works better particular situation zyarnold could create stackoverflow issue could move answer issue tracker good place usage questions particular issue bug report works designed documented would cool could close issue", "d": "5/2017"}, {"body": "angular change detection looks object reference deep watches object mutation since would expensive works intended", "d": "5/2017"}, {"body": "maybe forgot put output correct import component angularcore component selector myapp template title convertnumber currency eur true export class appcomponent title currency test convertnumber fork plnkr link hope helps", "d": "5/2017"}, {"body": "denfie suggestion want implement several languages addition setup need write separate ifelse statements currency", "d": "5/2017"}, {"body": "hello working full rewrite pipes lot issues due intl api use replace api give us control weyou output", "d": "5/2017"}, {"body": "cool thanks", "d": "5/2017"}, {"body": "guess wanted open", "d": "5/2017"}, {"body": "doh thanks", "d": "5/2017"}, {"body": "whether works depends implementation statement work matter defined ngc inline however eg contains statement fails nt evaluate user code analyze could past implementation", "d": "5/2017"}, {"body": "yo yo word tbosch ok implementation function question somewhat complicated logic scenes calls library function import create freestyle export function generatestyles styles styles string const style create styleregistercss styles const stylesstring stylegetstyles return stylesstring issue probably within library calls understand saying compiler currently analyzing code evaluating today going guess rule place order provide guarantees performance prevention unwanted side effects right true makes sense however powerful feature want throw couple ideas could jive well future option ngc preprocessor function pure function executes quickly could somehow define custom decorator attribute actually evaluates function sets static string output thing option setting json ultimate goal would could give css js first class status allowing anyone set attribute static json object could provide hook js css string conversation provider example work convert string within thin layer top current implementation lines code working version utilizes typestyle type definitions css approach think would best want exist help implement whatever solution think appropriate", "d": "5/2017"}, {"body": "mgechev suggested twitter potentially use prepack webpack plugin evaluate function turn static string great idea try would still interested hearing tbosch thoughts option ideal solution long run ie terms developer ergonomics something like", "d": "5/2017"}, {"body": "needs able read style encapsulation already compilation performance reasons non trivial operation happen need complete stylesheet regarding option ngc preprocessor using custom decorator work ngc execute user code compiling eg malicious user virus decorator could access filesystem would running nodejs regarding option setting styles json would require angular converts json object css stylesheet need eventually browser think best way would option using general purpose preprocessor eg similar sass takes json object eg based file suffix produces file components could refer generated file eg could plug angular webpack plugin well user could actually refer file", "d": "5/2017"}, {"body": "tbosch thanks suggestions understand saying works think general preprocessor hooks webpack also makes sense one last question though feel free close issue assuming create general purpose preprocessor webpack plugin get angular language service complain setting json styles function whatever ide nt found documentation something similar language service", "d": "5/2017"}, {"body": "right sorry may jeff whelpley notifications githubcom wrote tbosch thanks suggestions understand saying ngc works think general preprocessor hooks webpack also makes sense one last question though feel free close issue assuming create general purpose preprocessor webpack plugin get angular language service complain setting json styles function whatever ide nt found documentation something similar tslint disable language service receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "ok work around thanks close", "d": "5/2017"}, {"body": "property component metadata since version even pass typescript checking code see component imformation", "d": "5/2017"}, {"body": "trotyl attempts made order try make work nothing helped case removed post thank info although nt really help", "d": "5/2017"}, {"body": "description nt help well least provide minimal reproduction runnable", "d": "5/2017"}, {"body": "harelm change code solve problem see common error beginners forget attaching view app change detection run dynamic view nothing ngstyle providing runnable example giving misleading description waste lot time others", "d": "5/2017"}, {"body": "trotyl thanks answer truly appreciate things think documentation component resolver fairly easy see beginner hard solve error since single word breaking changes introduced angularjs angular changes made beta exit made internet horrible place look answers since ca nt understand used could nt find proper way send reproducible scenario since plunker found relevant adding relevant plunker opening issue would help lot even sending one response order reduce time takes reproduce would helped side note trotyl answers offending consider toning seeking help seeking blame since documentation well confusion around internet great seasoned developer fact run issues probably indicates like running expressing point could send basic plunker ask change code instead chose send offending message another thing think", "d": "5/2017"}, {"body": "apologize may polite enough points guidance contributing issuetemplate made clear github issue angular support questions seek help gitter stackoverflow concerns implemented feature suggest better ask help gitter first make sure right thing right way report bug plunker provide builtin angular template find button simple case like issue use directly copy code angular template plunker comment nt see needs customized plunker template problem agree current documentation good enough dynamiccomponentloader blame providing use case without viewcontainerref wellknown angular library may useful case like angular material modal", "d": "5/2017"}, {"body": "besides creating dynamic component without viewcontainerref super rare use case application multiple root elements example useful special feature like modal directly node could help explain special case follow way dynamiccomponentloader suggests", "d": "5/2017"}, {"body": "case know common believe rare need use third party framework leaflet case need inject angular component exiting dom elements case wrote extremely simplified version problem facing generalize third party framework dom manipulating code necessary thanks", "d": "5/2017"}, {"body": "leaflet documentation overload using element reference global id lookup lmap el options instantiates map object given instance html element optionally object literal map options guess would better way integrate angular encapsulating angular component rather exposing angular view globally", "d": "5/2017"}, {"body": "must say answer got thinking need read bit view elementref etc feel ca nt give good answer without sounding like total noob let see make sense way assuming would like use solution means child view holds init leaflet element instead id problems approach think sure map object low level component need app need service order init service need elementref means need wait services sure point clear ideal create marker map use needs resolved component understanding still need class want create control buttons right left side map need create component need believe want achieve migration finished currently process migrating angularjs angular migration usages play child view nevertheless see make angularish thanks kind help", "d": "5/2017"}, {"body": "closing initial problem issue resolved ie missing piece attaching view", "d": "5/2017"}, {"body": "seems runguardsandresolvers routes looking runguardsandresolvers defines guards resovlers run default run matrix parameters route change set paramsorqueryparamschange also run query params change set always run every time", "d": "5/2017"}, {"body": "nope case observables nt remade observable resolve keep mind query params active based actually found way queryparams shared routes routerrouterstaterootqueryparams put observable chain", "d": "5/2017"}, {"body": "duplicate full duplications list", "d": "5/2017"}, {"body": "curious fix problem available seems already known rather long time", "d": "5/2017"}, {"body": "also value empty object control valid get null empty string value get empty object", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "closing due existing issue", "d": "5/2017"}, {"body": "revisit tomorrow", "d": "5/2017"}, {"body": "correct incorrect behavior get around incorrect typing closing duplicate", "d": "5/2017"}, {"body": "issue debugged tbosch confirmed bug queries", "d": "5/2017"}, {"body": "templatedriven forms asynchronous function executed call within add form control synchronously microtask wait scheduling another microtask like", "d": "5/2017"}, {"body": "alexzuza thank much close issue", "d": "5/2017"}, {"body": "voithos able set global default override sounds reasonable would solve use case imo global would overkill hard keep sync individual routesparams", "d": "5/2017"}, {"body": "vicb global default would useful think would nt handle case page uses query parameter nonglobal state example every outgoing link said page would need explicitly set different well explicitly filter params propagates course could argue state nt query params seems like something like handling strategy would allow us fine grained less brittle merging works essentially defining method mean hard keep sync individual routesparams", "d": "5/2017"}, {"body": "voithos makes sense add way globally configure queryparamshandling well configure route way override level also add option provide function fully customize strategy something like", "d": "5/2017"}, {"body": "jasonaden yeah seems like work allowing function fully customize strategy pretty much mind whether takes form freeform function kind interface work fine imagine", "d": "5/2017"}, {"body": "closing issue feature added time see details", "d": "5/2017"}, {"body": "looks like missing support eg filesystem could create branch github reproduces problem", "d": "5/2017"}, {"body": "afaik designed even content transcluded still query using", "d": "5/2017"}, {"body": "want content created stamped pass template like use stamp template multiple times", "d": "5/2017"}, {"body": "designed way though need create second template keep component getting created already component found collapsible component looked like html expected content component would created template contained content created nt seem correct components would live memory nt actually live document", "d": "5/2017"}, {"body": "component maker element indicates transcluded whether created displayed created", "d": "5/2017"}, {"body": "people seems affected lack documentation", "d": "5/2017"}, {"body": "zoechi updated components use templates since using ran bug workarounds fairly hacky understanding choices right allow components take memory nt actually use along following conventional lifecycle hooks added removed dom nt actually choice heavy components hidden way depend reliable lifecycle hooks b perform brittle widely scoped hacky workarounds using templates c rework components showing hiding content handled component declares content would involve lot repetitive boilerplate think better way", "d": "5/2017"}, {"body": "nt run issue yet nt know details perhaps someone else", "d": "5/2017"}, {"body": "looks like fixed makes workaround much cleaner b thanks tbosch tada", "d": "5/2017"}, {"body": "davityle also fix landed soon closing issue behavior works expected", "d": "5/2017"}, {"body": "actually valid email address", "d": "5/2017"}, {"body": "maybe reopened useful white space email marked invalid regex comments says valid nt mind maybe various regex could provided option selecting restrictiveness thisany email validating directive", "d": "5/2017"}, {"body": "nt deep clone details", "d": "5/2017"}, {"body": "uses static compile time projection updated runtime", "d": "5/2017"}, {"body": "vicb hmm ok could please explain second example works first one nt", "d": "5/2017"}, {"body": "vicb mhevery tbosch jasonaden could anyone please look plunks probably something wrong behavior seems suspicious think really bug", "d": "5/2017"}, {"body": "klinki binding supported evaluate compilation however give better error message created track", "d": "5/2017"}, {"body": "tbosch encountered problem working related problem evaluating compilation nt work works honest still nt understand much nt option accept", "d": "5/2017"}, {"body": "think main challenge would need access angularjs internals nt", "d": "5/2017"}, {"body": "would possible make angularjs aware ngupgrade ngzone point could check presence angular zone explicitly run callback outside", "d": "5/2017"}, {"body": "possible inside angularjs would mean work angularjs versions include fix previous versions behave differently", "d": "5/2017"}, {"body": "probably ok though might wait ngupgrade odd enough thing probably worth potentially breaking changes make work better sent iphone may george kalpakas notifications githubcom wrote possible inside angularjs would mean work angularjs versions include fix previous versions behave differently receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "work around bit ugly though tried creating monkey patch like following browserdefer let browserdefercancel browserdefercancel let browserdefer browserdefer browserdefer fn function delay number gt ngzoneservicerunoutsideangular gt browserdefer fn delay still seems end triggering change detection reason another way workaround", "d": "5/2017"}, {"body": "ngupgrade angularjs services solve things like sure always run outside ngzone think whenever manually specified", "d": "5/2017"}, {"body": "browserdefer nt actually invokeapply parameter knowledge invokeapply specified timeout interval rootscope apply invokeapply true", "d": "5/2017"}, {"body": "suggesting ngzone optout along etc within calls locations explicitly set might avoid confusion", "d": "5/2017"}, {"body": "ah got thanks", "d": "5/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2017"}, {"body": "hint implemting principle information stored resourcedata part complex difficult use migth easier put source file line information note element something like", "d": "5/2017"}, {"body": "oops want close", "d": "5/2017"}, {"body": "already implemented", "d": "5/2017"}, {"body": "oh see sorry", "d": "5/2017"}, {"body": "progress", "d": "5/2017"}, {"body": "decided support content pages toc filed new issue design updated see", "d": "5/2017"}, {"body": "close track styling", "d": "5/2017"}, {"body": "think approach like want", "d": "5/2017"}, {"body": "maybe test modern browsers may need refining fear may exclude important set devices ones actually need load quickly nt know saying", "d": "5/2017"}, {"body": "obviously write test", "d": "5/2017"}, {"body": "test angularjs uses ie see", "d": "5/2017"}, {"body": "use appears make many changes global objects upsets things like zone aware promises though generate ie polyfill file project use instead works ie still issues getting site work ie", "d": "5/2017"}, {"body": "doc mean one property defined component class access formarray used template html nt find property provided component class code", "d": "5/2017"}, {"body": "createform method see formitems besides found another bug use form json get form value add form group formarry nameed formitems useing addform method form json make changes", "d": "5/2017"}, {"body": "trotyl think kown \u77e5\u4e4e", "d": "5/2017"}, {"body": "another bug initialize page add formgroup formarry see formarry changedbut form json make changes", "d": "5/2017"}, {"body": "code component html herodetail works addform formvalue json thanks", "d": "5/2017"}, {"body": "another question rasie input value added formcontrol fourth form json still changes input value initialize formcontrol form json get value", "d": "5/2017"}, {"body": "buctwbzs set control form template context namely component instance accessing variable directly template nothing form", "d": "5/2017"}, {"body": "trotyl must use formcontrolsformitemscontrols init page use formitemscontrols bug warinng browser controls property found formitems say must use whole reference access formgroup", "d": "5/2017"}, {"body": "say must use whole reference access formgroup true better extract complicated expression component class readability check live example reactive form docs works", "d": "5/2017"}, {"body": "trotyl matsko herodetailcomponentts used formitemscontrols works", "d": "5/2017"}, {"body": "works property explicitly provided component", "d": "5/2017"}, {"body": "think simple example document presents perfect side far example concerned mentioned changing value last added form control change form value change value form control entire form value updated clear changes dynamic form detection asked need seriously look form change detection", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2017"}, {"body": "dup", "d": "5/2017"}, {"body": "nt get solution post still getting issue lunch application using ng serve aot error shown error unexpected value postservice c myangularappsrcappserviceposts componentts declared module appmodule c myangularappsrcappappm odulets please add pipe directive component annotation error srcmaints module found error ca nt resolve gendirappappmodulengfactory c myangularappsrc srcmaints multi webpackdevserverclient srcmaints webpack failed compile", "d": "5/2017"}, {"body": "sorry nt mean say solution issue pointed nt two issues reporting bug issue context could reproducible since code configuration user project nt provide", "d": "5/2017"}, {"body": "agree ericmartinezr point opening new issues error message rather please provide minimal runable reproduce scenario plunker small repository could clone etc post", "d": "5/2017"}, {"body": "fwiw test see failing frequently authorspackage generate api doc filechanged api doc might totally coincidental wonder zones anything", "d": "5/2017"}, {"body": "exactly api tests rely upon typescript compiler booting take appears quite variable", "d": "5/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "5/2017"}, {"body": "seems like low hanging fruit sjtrimble fix", "d": "5/2017"}, {"body": "ignaciodm check still issue create runnable demo eg using plnkr", "d": "5/2017"}, {"body": "gkalpak yes still issue plnkr thanks", "d": "5/2017"}, {"body": "ignaciodm example using modules imported via systemjs regular script tags results different instances imported things guess messing things try using one way also downgrading component expected nt see anything depending usecase requirements access modules way compatible existing angularjs app new angular parts bad poc example puts everything windows plnkr closing since indication something wrong", "d": "5/2017"}, {"body": "first problem angularcompiler expression support function modnametolowercase never called aot second problem angulartscwrapped support function modnametolowercase member function check missing", "d": "5/2017"}, {"body": "awesome", "d": "5/2017"}, {"body": "works intended language service analyses code whether compatible ahead time compilation aot function calls supported case", "d": "5/2017"}, {"body": "currently hybrid angularjsangular app uses ngidle library ngidle hooks handlers dom events like mousemove scroll etc end triggering change detection due zonejs monkey patching events similarly thelgevold working around running event handler hookup outside angular zone additional step need take case given event hookup happening external library manually findremove event listeners readd inside runoutsideangular call would great avoid events hooked angular context run outside zone default", "d": "5/2017"}, {"body": "think said similar another issue wonder ngupgrade try use parent zone things like directive link functions methods would cause much inconsistency nt possible everywhere", "d": "5/2017"}, {"body": "happens needs reference kicks bootstrapping process default looks requires already loaded several ways achieve one using tag first example another one allows importing importing importing file seen example look near bottom alternatively latest versions explicitly set angularjs lib bootstrap seen example ts maints import setangularlib angularupgradestatic import angular angular setangularlib angular platformbrowserdynamic bootstrapmodule demoappmodule closing since everything works expected want already possible", "d": "5/2017"}, {"body": "thank gkalpak setangularlib looking nt spotted changelog", "d": "5/2017"}, {"body": "features section release", "d": "5/2017"}, {"body": "really blocker fact sjtrimble even says would nice bit flag blocking release", "d": "5/2017"}, {"body": "easily adding submit button see", "d": "5/2017"}, {"body": "nt want disable submit button want still clickable actually perform ngsubmit action invalid fields highlighted form actually submitted reason button disabled frustrating user may see wrong form invalid fields highlighted generally nt want highlight fields invalid touched else submit attempt", "d": "5/2017"}, {"body": "still easy implement especially using reactive forms nt think asking default behavior people may want forms work differently", "d": "5/2017"}, {"body": "addition actually submitting form need form display error messages whether form field touched currently simple implement formwide basis worked box angular material", "d": "5/2017"}, {"body": "bourey using templatedriven forms use check see plunker previous comment modeldriven forms bit dirty introduce extra variable component use similar way", "d": "5/2017"}, {"body": "presumably would require us manually check submit status every single error validation message adds work developers also increases risk fields may missing logic provide inconsistent user experience", "d": "5/2017"}, {"body": "yep using templatedriven extra variable reactive forms works however bourey mentioned need make sure every formform element", "d": "5/2017"}, {"body": "talked person came solution people know going angular angularjs event simple passthrough submit event form submitted wo nt fire difference two versions angular adds attribute default using angular forms angularjs leaves developer result using angularjs nt add native form validation turned block submission form invalid thus never fires angular turns native validation nt block submit event options one add attribute form tag turn native validation back make form functionally similar angularjs block submission form valid another use something like angular material automatically hides form submitted avoids write see example latter pattern given options cover use case nt think necessary change behavior framework users definitely want take another look error message handling line see improve experience approach angle", "d": "5/2017"}, {"body": "would like see ability dynamic bindings aot mode two use cases particular back added roadmap first basic use case nt want separate applications every language requires sort redirect logic outside app nt allow dynamic changing language without complete reload site second case embedding app mobile using cordova far know choice jit thus slowing site creating separate app every language including every language app course bloats none good options seems ionic nt use wonder reason", "d": "5/2017"}, {"body": "valid use case subject discussed internally lately advocating easily possible yet given aot work angular might future get new compilation process aot add roadmap onceif something official concrete", "d": "5/2017"}, {"body": "working electron angular app trying add support localization multiple langauge using feature angular actually extraction templatestring converting different language file formats clearly documented though still able much clear looking switch language dynamically need build application separately different language manageconsolidate strings one place form keyvalue pair change string one place effected multiple place access localized file anywhere template get specific language string provided key asked", "d": "5/2017"}, {"body": "points resolved feature use translation strings outside template point see answer gave still build app multiple languages use jit dynamically load translations bootstrap switching runtime still better bundle x times", "d": "5/2017"}, {"body": "ui language used application something require building multiple versions application way compiler issue compiler flawed issues one making application design text loaded data file run time done module library loaded used like make compiler function", "d": "5/2017"}, {"body": "figuerres something changed future promises yet aware issue looking possible solutions using external file one", "d": "5/2017"}, {"body": "hi ocombe looks like probably going use angular application features docs think might become deprecated breaking changes coming months info would greatly appreciated thanks dvd", "d": "5/2017"}, {"body": "thx reporting fixed new version", "d": "5/2017"}, {"body": "nt anything different using https browser handles security side things use http module would normally ie shown tour heroes tutorial misunderstanding anything specific reason would want handle keys certificates directly frontend code", "d": "5/2017"}, {"body": "thank issue fair amount info missing looks module apart angularspecific issue please provide info reopen", "d": "5/2017"}, {"body": "jap seems legit developer console chrome", "d": "5/2017"}, {"body": "hi thatseli stacktrace think experience bug believe fixed merged", "d": "5/2017"}, {"body": "adrienverge nice let hope get travis build finish need work right", "d": "5/2017"}, {"body": "thatseli meantime apply patch wrote repository patch patch fix animations check keyframes adding previousstyleprops adaptation change renemoraales renemoralessanchez gmailcom waiting pull request merged diff naur nodemodules angularanimations nodemodules angularanimations nodemodules angularanimations nodemodules angularanimations return formattedkeyframe var type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength var type keyframes var type previousstylepropsforeach function prop diff naur nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs return formattedkeyframe const type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength let type startingkeyframe keyframes let type missingstyleprops previousstylepropsforeach prop gt diff naur nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs return formattedkeyframe var type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength var type keyframes var type previousstylepropsforeach function prop diff naur nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs found license file var animationenginefunction function animationengine return animationengineprototyperegistertriggerfunction trigger name animationengineprototypeoninsertfunction element domfn animationengineprototypeonremovefunction element domfn animationengineprototypesetpropertyfunction element property value animationengineprototypelistenfunction element eventname eventphase callback animationengineprototypeflushfunction objectdefineproperty animationengineprototype activeplayers get function throw new error enumerable configurable objectdefineproperty animationengineprototype queuedplayers get function throw new error enumerable configurable animationengine anystate animationtimelinecontextfunction function animationtimelinecontext errors timelines initialtimeline thiserrorserrors thistimelinestimelines thispreviousnode thiscurrenttimelineinitialtimelinenew timelinebuilder timelinespush thiscurrenttimeline return animationtimelinecontextprototypecreatesubcontextfunction var contextnew animationtimelinecontext thiserrors thistimelines thiscurrenttimelinefork return contextpreviousnodethispreviousnode contextcurrentanimatetimingsthiscurrentanimatetimings thissubcontextcount context animationtimelinecontextprototypetransformintonewtimelinefunction newtime return void amp amp thiscurrenttimelinethiscurrenttimelinefork newtime thistimelinespush thiscurrenttimeline thiscurrenttimeline animationtimelinecontextprototypeincrementtimefunction time thiscurrenttimelineforwardtime thiscurrenttimelinedurationtime animationtimelinecontext animationtimelinevisitorfunction function animationtimelinevisitor return animationtimelinevisitorprototypebuildkeyframesfunction ast startingstyles finalstyles var contextnew animationtimelinecontext contextcurrenttimelinesetstyles startingstyles visitanimationnode ast context var timelinescontexttimelinesfilter function timeline return timelinehasstyling timelineslength amp amp objectkeys finalstyles length var tltimelines tlallowonlytimelinestyles tlsetstyles finalstyles return timelineslength timelinesmap function timeline return timelinebuildkeyframes createtimelineinstruction animationtimelinevisitorprototypevisitstatefunction ast context animationtimelinevisitorprototypevisittransitionfunction ast context animationtimelinevisitorprototypevisitsequencefunction ast context var thisthis subcontextcountcontextsubcontextcount amp amp contextcurrenttimelineforwardframe contextcurrenttimelinesnapshotcurrentstyles aststepsforeach function return visitanimationnode context contextsubcontextcount subcontextcount amp amp contexttransformintonewtimeline contextpreviousnodeast animationtimelinevisitorprototypevisitgroupfunction ast context var thisthis innertimelines furthesttimecontextcurrenttimelinecurrenttime aststepsforeach function var innercontextcontextcreatesubcontext visitanimationnode innercontext furthesttimemathmax furthesttime innercontextcurrenttimelinecurrenttime innertimelinespush innercontextcurrenttimeline innertimelinesforeach function timeline return contextcurrenttimelinemergetimelinecollectedstyles timeline contexttransformintonewtimeline furthesttime contextpreviousnodeast animationtimelinevisitorprototypevisitanimatefunction ast context var timingsasttimingshasownproperty duration asttimings parsetimeexpression asttimings contexterrors contextcurrentanimatetimingstimings timingsdelay amp amp contextincrementtime timingsdelay contextcurrenttimelinesnapshotcurrentstyles var asttypeaststyles aststylestype thisvisitkeyframesequence aststyles context else var styleastaststyles styleast var newstyledata timingseasing amp amp newstyledataeasingtimingseasing styleastangularanimationsstyle newstyledata styleasttreatasemptystep contextincrementtime timingsduration styleast amp amp thisvisitstyle styleast context contextcurrentanimatetimingsnull contextpreviousnodeast animationtimelinevisitorprototypevisitstylefunction ast context contextpreviousnodetypecontextcurrenttimelineforwardframe var normalizedstylesnormalizestyles aststyles easingcontextcurrentanimatetimings amp amp contextcurrentanimatetimingseasing thisapplystyles normalizedstyles easing asttreatasemptystep context contextpreviousnodeast animationtimelinevisitorprototypeapplystylesfunction styles easing treatasemptystep context styleshasownproperty easing amp amp easingeasingstyleseasing delete styleseasing contextcurrenttimelinesetstyles styles easing treatasemptystep animationtimelinevisitorprototypevisitkeyframesequencefunction ast context var thisthis firstkeyframeaststeps containsoffsetsnull getoffset firstkeyframe containsoffsets offsetgapmaxkeyframeoffsetlimit var starttimecontextcurrenttimelineduration durationcontextcurrentanimatetimingsduration innercontextcontextcreatesubcontext innertimelineinnercontextcurrenttimeline innertimelineeasingcontextcurrentanimatetimingseasing aststepsforeach function step var normalizedstylesnormalizestyles stepstyles offsetcontainsoffsets null stepoffset stepoffset parsefloat normalizedstylesoffset ilimit maxkeyframeoffset ioffsetgap innertimelineforwardtime offsetduration thisapplystyles normalizedstyles null innercontext contextcurrenttimelinemergetimelinecollectedstyles innertimeline contexttransformintonewtimeline starttimeduration contextpreviousnodeast animationtimelinevisitor timelinebuilderfunction function timelinebuilder starttime globaltimelinestyles thisstarttimestarttime thiseasing thispreviouskeyframe thiskeyframesnew map thisstylesummary thisbackfill thiscurrentemptystepkeyframenull thislocaltimelinestylesobjectcreate thisbackfill thisglobaltimelinestylesglobaltimelinestyles globaltimelinestyles thislocaltimelinestyles thisloadkeyframe return timelinebuilderprototypehasstylingfunction return thiskeyframessize objectdefineproperty timelinebuilderprototype currenttime get function return thisstarttimethisduration enumerable configurable timelinebuilderprototypeforkfunction currenttime return void amp amp new timelinebuilder currenttimethiscurrenttime thisglobaltimelinestyles timelinebuilderprototypeloadkeyframefunction thiscurrentkeyframe amp amp thispreviouskeyframethiscurrentkeyframe thiscurrentkeyframethiskeyframesget thisduration thiscurrentkeyframe thiscurrentkeyframeobjectcreate thisbackfill thiskeyframesset thisduration thiscurrentkeyframe timelinebuilderprototypeforwardframefunction thisduration thisloadkeyframe timelinebuilderprototypeforwardtimefunction time thisdurationtime thisloadkeyframe timelinebuilderprototypeupdatestylefunction prop value thislocaltimelinestyles prop value thisglobaltimelinestyles prop value thisstylesummary prop time thiscurrenttime value value timelinebuilderprototypeallowonlytimelinestylesfunction return thiscurrentemptystepkeyframe thiscurrentkeyframe timelinebuilderprototypesetstylesfunction styles easing treatasemptystep var thisthis void amp amp easingnull void amp amp treatasemptystep easing amp amp thispreviouskeyframeeasingeasing treatasemptystep objectkeys thisglobaltimelinestyles foreach function prop thisbackfill prop thisglobaltimelinestyles prop angularanimationsautostyle thiscurrentkeyframe prop angularanimationsautostyle thiscurrentemptystepkeyframethiscurrentkeyframe objectkeys styles foreach function prop offset prop var valstyles prop thiscurrentkeyframe prop val thislocaltimelinestyles prop thisbackfill prop thisglobaltimelinestyles prop angularanimationsautostyle thisupdatestyle prop val objectkeys thislocaltimelinestyles foreach function prop thiscurrentkeyframehasownproperty prop thiscurrentkeyframe prop thislocaltimelinestyles prop timelinebuilderprototypesnapshotcurrentstylesfunction copystyles thislocaltimelinestyles thiscurrentkeyframe timelinebuilderprototypegetfinalkeyframefunction return thiskeyframesget thisduration objectdefineproperty timelinebuilderprototype properties get function var properties var prop thiscurrentkeyframe propertiespush prop return properties enumerable configurable timelinebuilderprototypemergetimelinecollectedstylesfunction timeline var thisthis objectkeys timelinestylesummary foreach function prop var prop prop amp amp thisupdatestyle prop timelinebuilderprototypebuildkeyframesfunction var thisthis finalkeyframes var targetkeyframethisgetfinalkeyframe firstkeyframecopystyles targetkeyframe finalkeyframespush firstkeyframe var lastkeyframecopystyles targetkeyframe finalkeyframespush lastkeyframe else thiskeyframesforeach function keyframe time var finalkeyframecopystyles keyframe finalkeyframeoffsettimethisduration finalkeyframespush finalkeyframe return createtimelineinstruction finalkeyframes thisduration thisstarttime thiseasing timelinebuilder animationtransitionfactoryfunction function animationtransitionfactory triggername ast matchfns statestyles thistriggernametriggername thismatchfnsmatchfns thisstatestylesstatestyles var normalizedastarrayisarray astanimation angularanimationssequence astanimation astanimation thisanimationastnormalizedast return animationtransitionfactoryprototypematchfunction currentstate nextstate oneormoretransitionsmatch thismatchfns currentstate nextstate var backupstatestylesthisstatestyles currentstatestylesthisstatestyles currentstate backupstatestyles nextstatestylesthisstatestyles nextstate backupstatestyles timelinesbuildanimationkeyframes thisanimationast currentstatestyles nextstatestyles return createtransitioninstruction thistriggername currentstate nextstate void nextstate currentstatestyles nextstatestyles timelines animationtransitionfactory animationvalidatorvisitorfunction function animationvalidatorvisitor return animationvalidatorvisitorprototypevalidatefunction ast var contextnew animationvalidatorcontext return visitanimationnode ast context contexterrors animationvalidatorvisitorprototypevisitstatefunction ast context animationvalidatorvisitorprototypevisittransitionfunction ast context animationvalidatorvisitorprototypevisitsequencefunction ast context var thisthis aststepsforeach function step return visitanimationnode step context animationvalidatorvisitorprototypevisitgroupfunction ast context var thisthis currenttimecontextcurrenttime aststepsforeach function step contextcurrenttimecurrenttime visitanimationnode step context furthesttimemathmax furthesttime contextcurrenttime contextcurrenttimefurthesttime animationvalidatorvisitorprototypevisitanimatefunction ast context contextcurrentanimatetimingsasttimingsparsetimeexpression asttimings contexterrors var asttypeaststyles amp amp aststylestype thisvisitkeyframesequence aststyles context amp amp thisvisitstyle aststyles context contextcurrentanimatetimingsnull animationvalidatorvisitorprototypevisitstylefunction ast context var styledatanormalizestyles aststyles timingscontextcurrentanimatetimings endtimecontextcurrenttime starttimecontextcurrenttime timings amp amp starttime amp amp starttimetimingsdurationtimingsdelay objectkeys styledata foreach function prop var collectedentrycontextcollectedstyles prop updatecollectedstyle collectedentry amp amp starttime endtime amp amp starttime collectedentrystarttime amp amp endtime lt collectedentryendtime amp amp contexterrorspush css property prop exists times collectedentrystarttimems collectedentryendtimems also animated parallel animation times starttimems endtimems updatecollectedstyle starttimecollectedentrystarttime updatecollectedstyle amp amp contextcollectedstyles prop starttime starttime endtime endtime animationvalidatorvisitorprototypevisitkeyframesequencefunction ast context var thisthis offsets offsetsoutoforder keyframesoutofrange aststepsforeach function step var styledatanormalizestyles stepstyles styledatahasownproperty offset amp amp totalkeyframeswithoffsets offsetstyledataoffset keyframesoutofrangekeyframesoutofrangeoffset lt amp amp ilimit generatedoffseti offsets durationuptothisframeoffsetanimateduration contextcurrenttimecurrenttimecontextcurrentanimatetimingsdelaydurationuptothisframe contextcurrentanimatetimingsdurationdurationuptothisframe thisvisitstyle step context animationvalidatorvisitor animationvalidatorcontextfunction function animationvalidatorcontext thiserrors thiscollectedstyles return animationvalidatorcontext animationtriggerfunction function animationtrigger name states transitionasts var thisthis thisnamename thistransitionaststransitionasts thistransitionfactories thisstates objectkeys states foreach function statename thisstates statename copystyles states statename var errors transitionastsforeach function ast var exprsparsetransitionexpr astexpr errors sequenceerrorsvalidateanimationsequence ast sequenceerrorslength errorspushapply errors sequenceerrors thistransitionfactoriespush new animationtransitionfactory thisname ast exprs states errorslength var linestart n throw new error animation parsing name trigger failed linestarterrorsjoin linestart return animationtriggerprototypecreatefallbackinstructionfunction currentstate nextstate var backupstatestylesthisstates currentstatestylesthisstates currentstate backupstatestyles nextstatestylesthisstates nextstate backupstatestyles return createtransitioninstruction thisname currentstate nextstate void nextstate currentstatestyles nextstatestyles animationtriggerprototypematchtransitionfunction currentstate nextstate var amp amp elementlistenerssplice thispendinglistenerremovalsclear domanimationengineprototypeonremovaltransitionfunction element var elmselementqueryselectorall markedforanimationselector var elmelms elm activeplayers amp amp activeplayersforeach function player return playerdestroy var elm activetransitions amp amp objectkeys activetransitions foreach function triggername var playeractivetransitions triggername player amp amp playerdestroy iextends webanimationsstylenormalizer super webanimationsstylenormalizerprototypenormalizepropertynamefunction propertyname errors return dashcasetocamelcase propertyname webanimationsstylenormalizerprototypenormalizestylevaluefunction userprovidedproperty normalizedproperty value errors var unit strvalvaluetostring trim dimensionalpropmap normalizedproperty amp amp value amp amp value number typeof value unit px else var valandsuffixmatchvaluematch az valandsuffixmatch amp amp length amp amp errorspush please provide css unit value userprovidedproperty value return strvalunit webanimationsstylenormalizer animationstylenormalizer dimensionalpropmapmakebooleanmap width height minwidth minheight maxwidth maxheight left top bottom right fontsize outlinewidth outlineoffset paddingtop paddingleft paddingbottom paddingright margintop marginleft marginbottom marginright borderradius borderwidth bordertopwidth borderleftwidth borderrightwidth borderbottomwidth textindent split dashcaseregexp g defaultstatevalue void defaultstatestyles noopanimationenginefunction super function noopanimationengine var thissuperapply arguments return thislistenersnew map thischanges thisflaggedremovalsnew set thisondonefns thistriggerstylesobjectcreate null return extends noopanimationengine super noopanimationengineprototyperegistertriggerfunction trigger name namenametriggername thistriggerstyles name var statemap triggerdefinitionsforeach function def var statedefdef statemap statedefname normalizestyles statedefstylesstyles thistriggerstyles name statemap noopanimationengineprototypeoninsertfunction element domfn domfn noopanimationengineprototypeonremovefunction element domfn domfn amp amp thisflaggedremovalsadd element noopanimationengineprototypesetpropertyfunction element property value var storagepropmakestorageprop property oldvalueelement storageprop defaultstatevalue thischangespush element element oldvalue oldvalue newvalue value triggername property var triggerstatestylesthistriggerstyles property fromstatestylestriggerstatestyles oldvalue triggerstatestyles defaultstatestyles fromstatestyles amp amp erasestyles element fromstatestyles element storageprop value thisondonefnspush function var tostatestylestriggerstatestyles value triggerstatestyles defaultstatestyles tostatestyles amp amp setstyles element tostatestyles noopanimationengineprototypelistenfunction element eventname eventphase callback var listenersthislistenersget element listenersthislistenersset element listeners var tuple triggername eventname eventphase eventphase callback callback return listenerspush tuple function return tupledoremove noopanimationengineprototypeflushfunction function handlelistener listener data var phaselistenereventphase eventmakeanimationevent dataelement datatriggername dataoldvalue datanewvalue start phase onstartcallbackspush function return listenercallback event done phase amp amp ondonecallbackspush function return listenercallback event var thisthis onstartcallbacks ondonecallbacks thischangesforeach function change var elementchangeelement listenersthislistenersget element listeners amp amp listenersforeach function listener listenertriggernamechangetriggername amp amp handlelistener listener change thisflaggedremovalsforeach function element var listenersthislistenersget element listeners amp amp listenersforeach function listener var triggernamelistenertriggername storagepropmakestorageprop triggername handlelistener listener element element triggername triggername oldvalue element storageprop defaultstatevalue newvalue defaultstatevalue arrayfrom thislistenerskeys foreach function element var listenerstokeepthislistenersget element filter function l return ldoremove listenerstokeeplength thislistenersset element listenerstokeep thislistenersdelete element onstartcallbacksforeach function fn return fn ondonecallbacksforeach function fn return fn thisflaggedremovalsclear thischanges thisondonefnsforeach function donefn return donefn thisondonefns objectdefineproperty noopanimationengineprototype activeplayers get function return enumerable configurable objectdefineproperty noopanimationengineprototype queuedplayers get function return enumerable configurable noopanimationengine animationengine webanimationsplayerfunction function webanimationsplayer element keyframes options previousplayers void amp amp previousplayers var thisthis thiselementelement thiskeyframeskeyframes thisoptionsoptions thisondonefns thisonstartfns thisondestroyfns thisinitialized thisfinished thisstarted thisdestroyed thisparentplayernull thisdurationoptionsduration thistimethisdurationthisdelay thispreviousstyles previousplayersforeach function player var stylesplayercapturestyles objectkeys styles foreach function prop return thispreviousstyles prop styles prop return webanimationsplayerprototypeonfinishfunction thisfinished thisfinished thisondonefnsforeach function fn return fn thisondonefns webanimationsplayerprototypeinitfunction var thisthis thisinitialized thisinitialized var keyframesthiskeyframesmap function styles var formattedkeyframe return objectkeys styles foreach function prop index var valuestyles prop valueangularanimationsautostyle amp amp valuecomputestyle thiselement prop void value amp amp formattedkeyframe prop value formattedkeyframe previousstylepropsobjectkeys thispreviousstyles previousstylepropslength var previousstylepropsforeach function prop prop prop prop thispreviousstyles prop var var kfkeyframes function prop kf prop computestyle prop ithistime webanimationsplayerprototypegetpositionfunction return thisplayercurrenttimethistime webanimationsplayerprototypecapturestylesfunction var thisthis styles return thishasstarted amp amp objectkeys thisfinalkeyframe foreach function prop offset prop amp amp styles prop thisfinished thisfinalkeyframe prop computestyle thiselement prop styles webanimationsplayer webanimationsdriverfunction function webanimationsdriver return webanimationsdriverprototypeanimatefunction element keyframes duration delay easing previousplayers void amp amp previousplayers var playeroptions duration duration delay delay fill forwards easing amp amp playeroptionseasingeasing var previouswebanimationplayerspreviousplayersfilter function player return player instanceof webanimationsplayer return new webanimationsplayer element keyframes playeroptions previouswebanimationplayers webanimationsdriver exportsanimationdriveranimationdriver exports\u0275animationengineanimationengine exports\u0275animationanimation exports\u0275animationstylenormalizeranimationstylenormalizer exports\u0275noopanimationstylenormalizernoopanimationstylenormalizer exports\u0275webanimationsstylenormalizerwebanimationsstylenormalizer exports\u0275noopanimationdrivernoopanimationdriver exports\u0275domanimationenginedomanimationengine exports\u0275noopanimationenginenoopanimationengine exports\u0275webanimationsdriverwebanimationsdriver exports\u0275supportswebanimationssupportswebanimations exports\u0275webanimationsplayerwebanimationsplayer objectdefineproperty exports esmodule value fromstatestyles amp amp erasestyles element fromstatestyles element storageprop value thisondonefnspush function var tostatestylestriggerstatestyles value triggerstatestyles defaultstatestyles tostatestyles amp amp setstyles element tostatestyles noopanimationengineprototypelistenfunction element eventname eventphase callback var listenersthislistenersget element listenersthislistenersset element listeners var tuple triggername eventname eventphase eventphase callback callback return listenerspush tuple function return tupledoremove noopanimationengineprototypeflushfunction function handlelistener listener data var phaselistenereventphase eventmakeanimationevent dataelement datatriggername dataoldvalue datanewvalue start phase onstartcallbackspush function return listenercallback event done phase amp amp ondonecallbackspush function return listenercallback event var thisthis onstartcallbacks ondonecallbacks thischangesforeach function change var elementchangeelement listenersthislistenersget element listeners amp amp listenersforeach function listener listenertriggernamechangetriggername amp amp handlelistener listener change thisflaggedremovalsforeach function element var listenersthislistenersget element listeners amp amp listenersforeach function listener var triggernamelistenertriggername storagepropmakestorageprop triggername handlelistener listener element element triggername triggername oldvalue element storageprop defaultstatevalue newvalue defaultstatevalue arrayfrom thislistenerskeys foreach function element var listenerstokeepthislistenersget element filter function l return ldoremove listenerstokeeplength thislistenersset element listenerstokeep thislistenersdelete element onstartcallbacksforeach function fn return fn ondonecallbacksforeach function fn return fn thisflaggedremovalsclear thischanges thisondonefnsforeach function donefn return donefn thisondonefns objectdefineproperty noopanimationengineprototype activeplayers get function return enumerable configurable objectdefineproperty noopanimationengineprototype queuedplayers get function return enumerable configurable noopanimationengine animationengine webanimationsplayerfunction function webanimationsplayer element keyframes options previousplayers void amp amp previousplayers var thisthis thiselementelement thiskeyframeskeyframes thisoptionsoptions thisondonefns thisonstartfns thisondestroyfns thisinitialized thisfinished thisstarted thisdestroyed thisparentplayernull thisdurationoptionsduration thistimethisdurationthisdelay thispreviousstyles previousplayersforeach function player var stylesplayercapturestyles objectkeys styles foreach function prop return thispreviousstyles prop styles prop return webanimationsplayerprototypeonfinishfunction thisfinished thisfinished thisondonefnsforeach function fn return fn thisondonefns webanimationsplayerprototypeinitfunction var thisthis thisinitialized thisinitialized var keyframesthiskeyframesmap function styles var formattedkeyframe return objectkeys styles foreach function prop index var valuestyles prop valueangularanimationsautostyle amp amp valuecomputestyle thiselement prop void value amp amp formattedkeyframe prop value formattedkeyframe previousstylepropsobjectkeys thispreviousstyles previousstylepropslength amp amp keyframeslength var previousstylepropsforeach function prop prop prop prop thispreviousstyles prop var var kfkeyframes function prop kf prop computestyle prop thisplayerthistriggerwebanimation thiselement keyframes thisoptions thisfinalkeyframekeyframeslength copykeyframestyles keyframes thisresetdomplayerstate thisplayeraddeventlistener finish function return thisonfinish webanimationsplayerprototypetriggerwebanimationfunction element keyframes options return elementanimate keyframes options objectdefineproperty webanimationsplayerprototype domplayer get function return thisplayer enumerable configurable webanimationsplayerprototypeonstartfunction fn thisonstartfnspush fn webanimationsplayerprototypeondonefunction fn thisondonefnspush fn webanimationsplayerprototypeondestroyfunction fn thisondestroyfnspush fn webanimationsplayerprototypeplayfunction thisinit thishasstarted thisonstartfnsforeach function fn return fn thisonstartfns thisstarted thisplayerplay webanimationsplayerprototypepausefunction thisinit thisplayerpause webanimationsplayerprototypefinishfunction thisinit thisonfinish thisplayerfinish webanimationsplayerprototyperesetfunction thisresetdomplayerstate thisdestroyed thisfinished thisstarted webanimationsplayerprototyperesetdomplayerstatefunction thisplayer amp amp thisplayercancel webanimationsplayerprototyperestartfunction thisreset thisplay webanimationsplayerprototypehasstartedfunction return thisstarted webanimationsplayerprototypedestroyfunction thisdestroyed thisresetdomplayerstate thisonfinish thisdestroyed thisondestroyfnsforeach function fn return fn thisondestroyfns webanimationsplayerprototypesetpositionfunction p thisplayercurrenttimepthistime webanimationsplayerprototypegetpositionfunction return thisplayercurrenttimethistime webanimationsplayerprototypecapturestylesfunction var thisthis styles return thishasstarted amp amp objectkeys thisfinalkeyframe foreach function prop offset prop amp amp styles prop thisfinished thisfinalkeyframe prop computestyle thiselement prop styles webanimationsplayer webanimationsdriverfunction function webanimationsdriver return webanimationsdriverprototypeanimatefunction element keyframes duration delay easing previousplayers void amp amp previousplayers var playeroptions duration duration delay delay fill forwards easing amp amp playeroptionseasingeasing var previouswebanimationplayerspreviousplayersfilter function player return player instanceof webanimationsplayer return new webanimationsplayer element keyframes playeroptions previouswebanimationplayers webanimationsdriver exportsanimationdriveranimationdriver exports\u0275animationengineanimationengine exports\u0275animationanimation exports\u0275animationstylenormalizeranimationstylenormalizer exports\u0275noopanimationstylenormalizernoopanimationstylenormalizer exports\u0275webanimationsstylenormalizerwebanimationsstylenormalizer exports\u0275noopanimationdrivernoopanimationdriver exports\u0275domanimationenginedomanimationengine exports\u0275noopanimationenginenoopanimationengine exports\u0275webanimationsdriverwebanimationsdriver exports\u0275supportswebanimationssupportswebanimations exports\u0275webanimationsplayerwebanimationsplayer objectdefineproperty exports esmodule value sourcemappingurlanimationsbrowserumdminjsmap", "d": "5/2017"}, {"body": "adrienverge thank", "d": "5/2017"}, {"body": "vicb", "d": "5/2017"}, {"body": "bug update plunker example working chrome ie", "d": "5/2017"}, {"body": "replace follow code instead object code tried internet explorer plunker working solution", "d": "5/2017"}, {"body": "issue nt appear anything angular please provide info incase incorrect reopen", "d": "5/2017"}, {"body": "api docs keyed id name includes module exported nt think bug two exports point original symbol indeed display content happen thing reexported probably happening case", "d": "5/2017"}, {"body": "actually case autostyle really two different code entities two different docs neither docs look", "d": "5/2017"}, {"body": "think api docs templates better easier distinguish perhaps need make search titles informative instance item deprecated styled differently deprecated appended title search results", "d": "5/2017"}, {"body": "documents clearly different longer valid issue see", "d": "5/2017"}, {"body": "oninit components nt get lifecycle hook ngmodule", "d": "5/2017"}, {"body": "thank", "d": "5/2017"}, {"body": "please provide reproduction preferably plunker", "d": "5/2017"}, {"body": "go model variable hideme making use toggling behavior ng version playing little scenario noticed clas instead class working thank", "d": "5/2017"}, {"body": "issue bootstrap angular see css see bootstrap adding whatever class inspect table uncheck display dev tools td dissapear expert bootstrap css google suggested classes like could", "d": "5/2017"}, {"body": "perfect explanation thanks looking info helps understanding causing behavior yeah classhidden seems trick got know difference hidden classhidden thanks eric rob google closing angular nothing behavior", "d": "5/2017"}, {"body": "sorry nt see could cause confusion angular binding hidden attribute angular binding class attribute plus adding class provided bootstrap css ends html always ask help gitter chatroom", "d": "5/2017"}, {"body": "awesome eric thanks much make use gitter chatroom nt know chat community till mentioned know difference hidden classhidden well gitter chatroom nice explanation", "d": "5/2017"}, {"body": "solved apparently issue middleware event authorized request cors properly set header even case could still see error json response network tab coming server show response instead shows bug intended functionality", "d": "5/2017"}, {"body": "alxhub please advise", "d": "5/2017"}, {"body": "lansana event cors failure nothing response accessible client including response body devtools show course page nt access case return actual error browser case apparently reports behavior eg chrome working intended sorry", "d": "5/2017"}, {"body": "duplicate", "d": "5/2017"}, {"body": "closing since apart framework", "d": "5/2017"}, {"body": "probably confusing classes object litterals initial array object litterals thus instances employee please ask support question stackoverflow", "d": "5/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2017"}, {"body": "sorry thank", "d": "5/2017"}, {"body": "happening toc gets inserted right title deduced element pages nt title would fixed adding title document need change toc gets inserted api pages something needs addressed programmatically styles something nt happen automatically instead something author inserts widget sorts", "d": "5/2017"}, {"body": "wardbell sure change tag put instead tag would fix api pages", "d": "5/2017"}, {"body": "wardbell sure change tag put instead tag would fix api pages interesting idea another idea would change docviewer nt try insert toc already element document already api docs could choose place toc", "d": "5/2017"}, {"body": "understand talking wardbell add place wherever see fit api docs works already pr place add decide later want embedded toc pages", "d": "5/2017"}, {"body": "believe fixed", "d": "5/2017"}, {"body": "sending message google analytics path changes hash query", "d": "5/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2017"}, {"body": "please provide minimal project nt time debug full app thanks", "d": "5/2017"}, {"body": "vicb systemjs mode ok angularcli ok loadchildren mode materialmodule event work", "d": "5/2017"}, {"body": "marjangeorgiev amcdnl would nt beneficial ngxcharts", "d": "5/2017"}, {"body": "absolutely still use animate elements angularanimations example would tweening attribute experimented smil hands dom approach little success", "d": "5/2017"}, {"body": "one biggest impacts gap noticing reverberates way data structures data flow components ie use part life cycle hooks support animations idiomatic approaches imply using different data structures could solely rely angular dom updateschange detection extreme example perform dom creationmanipulation within component using get animation support", "d": "5/2017"}, {"body": "problem using printed html throws error check plunker", "d": "5/2017"}, {"body": "exactly set template ref solves issue leave open improve error message", "d": "5/2017"}, {"body": "alexzuza thx works find really strange callback return parameter sent loop reason dnot done default framework case feeling wrote useless code", "d": "5/2017"}, {"body": "ok confirm reproduce bug temporarily unable language service working due bug typescript fixed still seeing behavior described initial report", "d": "5/2017"}, {"body": "info issue", "d": "5/2017"}, {"body": "get errors using browser backbutton routing works fine prints said errormessage using angularcli angular", "d": "5/2017"}, {"body": "moxxnull using well", "d": "5/2017"}, {"body": "sorry provided detail plain realized error today mediumsized project found information amp co maybe investigate little weekend", "d": "5/2017"}, {"body": "looks like cliissue would mind reopening issue", "d": "5/2017"}, {"body": "sure thing", "d": "5/2017"}, {"body": "hello currency parameter currency pipe default value usd nt change value always use usd dependent locale position depends locale problem different matter translation value different right currency pipe change symbol currency automatically makes sense yes position currency symbol changes symbol sorry know number showing", "d": "5/2017"}, {"body": "please follow issue guidelines creating issue hard understand asking", "d": "5/2017"}, {"body": "followed issue guidelines first time receive help anyway forget regards", "d": "5/2017"}, {"body": "enough info indeed eg added issue closed probably nt get much attention reopened", "d": "5/2017"}, {"body": "facing issue manually mark dirty parent form group pushremove tofrom form array", "d": "5/2017"}, {"body": "typescript question angular one use really getting benefit typescript type system know parameter return data types best use declaration eg would want repeat method signature well think issue closed", "d": "5/2017"}, {"body": "fyi workaround pr work using typescript angular still throws following error atloader nodemodules type onlyself boolean undefined undefined property onlyself string index signature error atloader nodemodules type onlyself boolean undefined undefined property onlyself string index signature error atloader nodemodules type onlyself boolean undefined undefined property onlyself string index signature error atloader nodemodules type onlyself boolean undefined undefined property onlyself string index signature error atloader nodemodules type onlyself boolean undefined undefined property onlyself string index signature error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property onlyself string index signatur e error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property emitevent string index signatu error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property onlyself string index signatur e error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property emitevent string index signatu error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property onlyself string index signatur e error atloader nodemodules type onlyself boolean undefined emitevent boolean undefined undefined property emitevent string index signatu error atloader nodemodules type emitevent boolean undefined undefined property emitevent string index signature", "d": "5/2017"}, {"body": "facing problem call backend requestssubscriptions code working fine update", "d": "5/2017"}, {"body": "thank close ticket", "d": "5/2017"}, {"body": "angular supports source maps error logged place template represents element error occurred afaik limitation karma able use source maps see eg also able report place originated could try using view karma ie opening looking printed stack", "d": "5/2017"}, {"body": "set flag sets build use aot aot cli creates new main file different dev one use aot must pass parameters cli arguments wo nt matter set dev main file reason probably build application multiple locales nt edit main file know use arguments build please read story angularcli wiki know please read issue nt want use aot builds probably use set aot false", "d": "5/2017"}, {"body": "thank setting helped", "d": "5/2017"}, {"body": "error condition reported typescript default option exported class must extend exported classes typescript report case change option file fix code add front declaration keeping open bug report error even typescript allows repo expected error report exported received compiled successfully produced incorrect code app works initialized instead app works initialized", "d": "5/2017"}, {"body": "ok see problem exported foo another file default export seems issue takes place import oninit angularcore export default class foo implements oninit ngoninit alert foo initialized import component angularcore import foo foo component selector approot template app works export class appcomponent extends foo otherwise alright", "d": "5/2017"}, {"body": "dmitrysteblyuk nt currently support default exports create tracking bug issue reference issue make sure take scenario account", "d": "5/2017"}, {"body": "something going value firefox looks like browser always returns empty string sure whether bug firefox", "d": "5/2017"}, {"body": "looks like animation code angular needs break", "d": "5/2017"}, {"body": "well bug friend", "d": "5/2017"}, {"body": "problem visual studio giving red underline errors even though actua application working fine application actually works visual studio gives switchmap red underline error reason", "d": "5/2017"}, {"body": "fwiw affects field related index element array fields special way", "d": "5/2017"}, {"body": "information fix reverted affected well", "d": "5/2017"}, {"body": "kevupton requires contentchild query lifted due placed inside component reference pointed answer stack overflow questions support currently need lift query unfortunately work around gets quite complicated introduces unnecessary coupling implementation container case content consider adding support marking feature request query lifting explanation sufficient describe problem would like better understand implementing would enable help us properly gauge priority could give us example either preventing would enable", "d": "5/2017"}, {"body": "remaining issue whether track inpage navigations extracted closing one", "d": "5/2017"}, {"body": "hi guys got problem noticed reason everything sitting scss directory scss extension removed file found added hack angularcompilerclisrccompilerhostjs line cli version sindexof scss gt scss seemed find files clue might causing regards", "d": "5/2017"}, {"body": "tbosch update would super excited small bug dont want hack core files though", "d": "5/2017"}, {"body": "could reproduce issue thanks repo root cause angular supports standard css files extended version sass documented afaik plan natively support sass angular transformation done preprocess running tbosch confirm please", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "closing", "d": "5/2017"}, {"body": "kinda odd saying supported means words angular wo nt run nodesass plugin properly run sass files mlaval tbosch jelbourn afaik nt angularcsi already support sass giving option creating project cli repository global styles stylescss file allows users add global styles supports css imports project created stylesass option sass file instead applies scsslessstyl add global styles via apps styles property angularclijson stack creating project angular cli try ng new mynewproject stylesass generating components predifined sass files want scss syntax create project ng new mynewproject stylescss cli handles rest would small amount code rectify problem solution instead saying supported clearly asking reconsider reopening thread creating solution rectify issue rather tabling way running sass less way good sass developer utilizing file structure altering build process intertwined web pack ideal", "d": "5/2017"}, {"body": "sorry could nt miss quote css preprocessor integration angularcli supports major css preprocessors sassscss less stylus", "d": "5/2017"}, {"body": "agree feels weird angularcli support preprocessors aot build", "d": "5/2017"}, {"body": "mlaval would able consider reopening huge enterprise application trying run aot production thing holding us back aot sass used throughout application", "d": "5/2017"}, {"body": "really frustrating feature available angular right lots developers coverting project angular either encounter error forced create preprocessing build jobs sass smash whole sass one single file mlaval angular really want", "d": "5/2017"}, {"body": "think confusion different simple command line tool run aot angularcli adds ton features ontop including sass support", "d": "5/2017"}, {"body": "tbosch make support sass", "d": "5/2017"}, {"body": "mmathys sorry adding currently scope meant simple command line utility could nt run sass running using still work sass never worked could confirm", "d": "5/2017"}, {"body": "tbosch running sass prior possible instead using css use sass importing css files works fine global sass file imported using global sass times important aspect sass general much css error likely prevalent time goes another thought using sass file structure webpack handles completed something done webpack setup nt believe setup custom consideration given topic ask reconsider", "d": "5/2017"}, {"body": "starter project works scss needs gulp tasks convert scss css weird cross inject renaming inside source files ugly works", "d": "5/2017"}, {"body": "mmathys using gulp build process available", "d": "5/2017"}, {"body": "tbosch mlaval final verdict going support preprocessors sass less want make sure pour alternative route nt mind waiting fix inst going one guess find another solution", "d": "5/2017"}, {"body": "discover angularcli already supports sass aot already working correctly", "d": "5/2017"}, {"body": "maxailloud could elaborate", "d": "5/2017"}, {"body": "maxailloud mean works", "d": "5/2017"}, {"body": "maxailloud nt work", "d": "5/2017"}, {"body": "tried right works", "d": "5/2017"}, {"body": "nt fix ca nt hard angularcli", "d": "5/2017"}, {"body": "xetys try works next comment ask fix", "d": "5/2017"}, {"body": "generated application using added npm package containing scss mixins variables added statement appcomponentscss used one mixin checked proper behavior jhipster issue currently described using webpack trying figure manually apply webpack configuration enable using scss mixins inside component styles", "d": "5/2017"}, {"body": "xetys still confused comment tried right works lt lt works", "d": "5/2017"}, {"body": "works take vendor scss mixinvariable usage inside included component style nt work jhipster use webpack directly yet trying use vendor mixin leads resource file found error", "d": "5/2017"}, {"body": "easily sorry header anchors autogenerated standard way across site apply appropriate css", "d": "5/2017"}, {"body": "oh hold sorry missed point two anchors ought able move remove one", "d": "5/2017"}, {"body": "go", "d": "5/2017"}, {"body": "situation w", "d": "5/2017"}, {"body": "oh perfect", "d": "5/2017"}, {"body": "working well xmb xfl unsupported format error missing something", "d": "5/2017"}, {"body": "xlf xfl", "d": "5/2017"}, {"body": "wow dumb thanks", "d": "5/2017"}, {"body": "nt think special handling vs turns smiley changes attributes tracked using xyz scope watch hood calls adds callbacks callbacks run beginning next iteration note another er running example already middle happens using new ers executed part current iteration thus callbacks roughly equivalent following callbacks executed order happens outside everythng works expected callbacks executed ers next working fix", "d": "5/2017"}, {"body": "foxandxss still problem", "d": "5/2017"}, {"body": "facing issue ghetolay workaround works thanks current behavior starting app lazyloaded route trying redirect guard displaying blank page although code works guard obvious bug", "d": "5/2017"}, {"body": "concur poke yet fixed least v", "d": "5/2017"}, {"body": "pull request", "d": "5/2017"}, {"body": "royling say true example want see put route router outlet reuse routes example modals outlet nt set routes setting full path navigate function outlet part", "d": "5/2017"}, {"body": "dietergeerts ok got point deleted comment", "d": "5/2017"}, {"body": "workaround use writing intermedita typescript sources compiled example", "d": "5/2017"}, {"body": "sadly noticed issue ccjk characters", "d": "5/2017"}, {"body": "feedback anyone take look problem really annoying forces developers use ugly tricks order support ie properly", "d": "5/2017"}, {"body": "comment relevant since author fixed error also notice plunker turns really separate bug sorry inconvenience drol please check plunker inputs marked dirty ie therefore bug related swedish letters known bug duplicate please close issue favour original teofrey kneefer please check original issue pkozlowskiopensource labeled issue bug could please original issue get proper label", "d": "5/2017"}, {"body": "tytskyi sorry made typo plunk provided updated original post working plunk yes saw bug reported one may related exactly type bug sorry working plunk", "d": "5/2017"}, {"body": "items already fixed lands also fixed", "d": "5/2017"}, {"body": "pretty much errors removed", "d": "5/2017"}, {"body": "library support progress box display loader meaninful progress require one three things install use party adapter library eg b ditch use barebones apis directly c wait alxhub release us perhaps early preview", "d": "5/2017"}, {"body": "could least show indeterminate progress bar new httpclient usable", "d": "5/2017"}, {"body": "wardbell spoke petebacondarwin suggested use indeterminet progress bar material totally fine simplifies implementation quite bit since nt need worry progress points tie animations think good idea use placement sjtrimble suggested use material progress bar", "d": "5/2017"}, {"body": "apologise igorminar looked seeing talking changed dramatically adverse direction first converted aio nt understand happened original looked identical one angulario maybe something revert soon", "d": "5/2017"}, {"body": "fixed visually", "d": "5/2017"}, {"body": "think much better igorminar specify width height images close one see latest profile", "d": "5/2017"}, {"body": "cebor problem fixed disabled flag thanks", "d": "5/2017"}, {"body": "meriturva uninstalled types", "d": "5/2017"}, {"body": "query parameters nt dropped anymore looks like still handled properly see brief flicker location bar appears correspond url quickly changing back browser back button also nt successfully navigate back url history parameters containing comma demonstrate try original repro case add queryparamshandling merge link teamlistcomponenthtml click team link attempt use browser back functionality page updated", "d": "5/2017"}, {"body": "reopening one vicb mhevery jasonaden", "d": "5/2017"}, {"body": "wrote function like follow let run outside angular notice change detector working print error console demo", "d": "5/2017"}, {"body": "anchors fixed", "d": "5/2017"}, {"body": "would also need add require also need run aot server also wrong documentation says actually lives docs docs also say install following dependencies turns something broken following error printed macbookprovalerio remarketerng tanis npm install angularcompilercli angularplatformserver savedev remarketerng userstanisdocumentsremarketerng unmet peer dependency angularanimations angularcompilercli angularplatformserver npm warn angularplatformserver requires peer angularanimations none installed npm angularanimations save would include animations universal version using normal app", "d": "5/2017"}, {"body": "also generate aot files run included aot guide", "d": "5/2017"}, {"body": "got error new project generated cli typeerror read property prototype undefined aot working fine uni run edit importing polyfills serveraotts need think every package must specially server import client ones", "d": "5/2017"}, {"body": "everthing works fine need import mongoose generate error compiling warning module found error ca nt resolve vertx usersrafaelcostadocumentsutidasideiasdevelopuniversaltestesfromzero found topics without solution idea", "d": "5/2017"}, {"body": "resolved adding webpack config", "d": "5/2017"}, {"body": "one tried tutorial lazy loading modules ca nt resolved", "d": "5/2017"}, {"body": "fknop example link working", "d": "5/2017"}, {"body": "aot jit different jit works aot working box", "d": "5/2017"}, {"body": "tbosch created repository jit mode aot mode problem nt seem relate lifecycle hooks methods aot mode nt work also try create custom property custom method decorator", "d": "5/2017"}, {"body": "hey tbosch problem modify hook", "d": "5/2017"}, {"body": "tbosch vicb updates issue bug solutions thanks", "d": "5/2017"}, {"body": "general problem aot relies able statically analyze things like lifecycle hooks properties constructor arguments soon dynamic logic adds new methods properties aot compiler know", "d": "5/2017"}, {"body": "moving aot default future wo nt go away sorry closing infeasible", "d": "5/2017"}, {"body": "tbosch thanks answer", "d": "5/2017"}, {"body": "sorry disappointing ability take advantage ability decorators angular decorators wrote created things rely ability understand work aot come complain know work hard frustrating thanks answer", "d": "5/2017"}, {"body": "since problem appears angular cant find ngondestroyngonchanges functions class statically one needs help angular managed fix problem export class observeinputsbase implements onchanges ondestroy ngonchanges changes simplechanges void ngondestroy void component test export class todocomponent extends observeinputsbase constructor super test decorator overwriting ondestroyngonchanges observeinputsbase gives angular needed later overwrite corresponding functions also note needed super call base class constructor hope helps", "d": "5/2017"}, {"body": "netanelbasal think accept things basically building component angular always implement oninit ondestroy subscriptions building thirdparty libraries think aggravation hooks methods required lucato thanks sharing idea suggestion add superclass avoid implement constructor call point since angular made compiler tobias says thinking moving aot default meaning angular longer framework language effects think eliminate constructor call adding angular decorator really antipattern also think prototype function property like case decorators antipattern typescript javascript languages based disagree dynamic creation based runtime objects well known time compilation difficult course tsc compiler succeeds ngc compiler yet", "d": "5/2017"}, {"body": "seems ngc compiler fails really test decorators custom nonangular decorators ignored explains functions work work objects already evaluated compiler", "d": "5/2017"}, {"body": "duplicate submitted fix stringham could try fix give feedback", "d": "5/2017"}, {"body": "tbosch looking stringham working almost every case tada however run single case nt seem working would expect component works something like html mouseentermouseenterhovereditem set back set first event fired change detector nt run projected template third event always run fourth event flow chart describes issue seeing", "d": "5/2017"}, {"body": "would like reproduction work", "d": "5/2017"}, {"body": "davityle problem example seems also ie might dirty checked nested input changed yes reproduction would great", "d": "5/2017"}, {"body": "tbosch took way long reproduce super edge case even slightly interested fixing let know open new github issue gif reproduction code used reproduce almost necessary tells much edge case end involved projected templates fact much harder get break fix", "d": "5/2017"}, {"body": "davityle workaround different way achieving goal", "d": "5/2017"}, {"body": "yes simple workaround", "d": "5/2017"}, {"body": "tbosch thanks taking one cleaning workarounds able delete nearly lines code", "d": "5/2017"}, {"body": "davityle ok let leave closed thanks providing feedback", "d": "5/2017"}, {"body": "marcysutton regarding give region visually hidden heading something like search results headings become see sjtrimble add class still understand works solves whether apply similar reasoning elsewhere shed light", "d": "5/2017"}, {"body": "devintersection button checked done longer exists", "d": "5/2017"}, {"body": "wardbell idea provide heading search results section screen reader users often navigate headings could easily regular visible heading using visuallyhidden css preserves existing design hiding sighted users yet providing semantic structure screen reader navigation making new heading restructuring search result headings make proper content hierarchy multiple ways code visually hidden css method work fine", "d": "5/2017"}, {"body": "marcysutton use instead something link label collection results happen", "d": "5/2017"}, {"body": "pr moves search results search box top toolbar first tab search box ends first result believe necessary check box search results section", "d": "5/2017"}, {"body": "marcysutton regarding search results item escape key send focus back triggering input think type search box hit escape stay search box behavior missing mouse tab search box hit escape return search box mean", "d": "5/2017"}, {"body": "pretty sure meant smiley", "d": "5/2017"}, {"body": "fixed escape key send focus back triggering input", "d": "5/2017"}, {"body": "fixed sidenav links href attributes nt focusable recommend buttons toggles instead links", "d": "5/2017"}, {"body": "checkboxes ticked", "d": "5/2017"}, {"body": "noting may still additional issues pages absence full audit found another serious item anchor tags used deep link headings poorly constructed anchors still hrefs causing call ghost controls accessibility information focused pair hover state child icon element focus state make visible pretty bad accessibilitywise screenshot fix move hover state anchor add focus state time remove work better", "d": "5/2017"}, {"body": "moving issue heading anchors new issue", "d": "5/2017"}, {"body": "talked internally planning support di communication reasoning template user wrote structural directive actually parent element", "d": "5/2017"}, {"body": "tbosch since closed favor ticket amp also response observation positing comment creating directive via templateref inserting via viewcontainerref creates template sibling dom child therefore angular injection also respects child place creation see sure observation true dom created example html parent child template responsible template generation html parent child children child directives amp components made accessible communication parent amp children accomplished without external coordination managing mapping parent amp child via external service please look fragile implementation exactly issue mentioned root cause ability get access component created using static variable get access recently created directive clearly something scary", "d": "5/2017"}, {"body": "thekalinga think provide sufficient dom assume complete output html parent child first second better understanding sure observation true true see directives childparent communication produced dom anyway look comment plan support dependency injection future", "d": "5/2017"}, {"body": "tytskyi sorry meant seems true child directives within template directive course certainly true parent update full comment context", "d": "5/2017"}, {"body": "eta cant use audio tags page due huge performance drop", "d": "5/2017"}, {"body": "fixed", "d": "5/2017"}, {"body": "sorry hijack discussion happened jit jit used fast rc days name suggests justintime compiled needed fly somewhere angular final changed let compile everything startup meant startup times went sub second forced go aot way spent lot time hairy corner cases issue suggest jit got even worse angular disappointing angular usable without aot production moment slow jit makes development experience miserable becase refreshes quite frequent working code base watchers rant", "d": "5/2017"}, {"body": "oliverjanik think nobody ship jit code production today future good plunkers development aot considered also dev incremental compilation yet angular cli prod also aot default maybe try ng fully compatible nt notice anything substantial", "d": "5/2017"}, {"body": "problem ng team dropped ball jit aot nowhere near complete works poorly dev works typescript creating libraries nightmare metadatajson would hurt performant jit", "d": "5/2017"}, {"body": "update app considerably slower dev mode since", "d": "5/2017"}, {"body": "ping shlomiassaf would great could tweak reproduction version sourcemap actual issue", "d": "5/2017"}, {"body": "tbosch demo posted indeed reproduce issue demo based app stripped content remove content piece piece post demo reproducing issue time consuming effect identify root cause try week hope make one thing note though safari faster seconds load time", "d": "5/2017"}, {"body": "update issue found setup since facing issue used dev environment otherwise ca nt work removed find fast seconds load checked git revision day posted issue delete nodemodules back slow long revisionpackage installtest found potential suspect party angular component removing swimlanengxdatatable cc amcdnl bootstrap speed got seconds moved new table implementation week ago removed entire code related strange reproduce install nothing included templatestylecomponent code testing ngxdatatable results strange since lib quite popular reported angular betarc releases surely official best guess mix libraries one one libraries use sebastianvog kemsky users experiencing slowness using ngxdatatable", "d": "5/2017"}, {"body": "shlomiassaf woah specific componentetc causing slowness log bug table project w config dive tbosch see demos see anything plz let know", "d": "5/2017"}, {"body": "amcdnl sure root cause yes removed fast quite sure take vanilla cli project use table wo nt get slowness nt test though quite sure try making repro might take time", "d": "5/2017"}, {"body": "already posted necessary information comment related sourcemaps jit performance release mode much worse every browser except chrome", "d": "5/2017"}, {"body": "think issue related issue would try give option false", "d": "5/2017"}, {"body": "discussed mhevery complicates data flow reasoning easily leads cycles mhevery nt remember example", "d": "5/2017"}, {"body": "gkalpak want fix", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "actually style lno longer effect structure changed sjtrimble says intent liveexample take full width screen need remove redundant style smiley", "d": "5/2017"}, {"body": "anyone coming google works broken", "d": "5/2017"}, {"body": "ping mhevery vikerman", "d": "5/2017"}, {"body": "hi gkalpak mgol could share traviscircleci build could observe behaviour set angular test suite travis check builds ran whole bunch sessions browserstack face issue kind different setup using", "d": "5/2017"}, {"body": "sinstein see one occurrence admittedly happening much less often", "d": "5/2017"}, {"body": "gkalpak made changes platform take care issue good could please verify let know things work fine end", "d": "5/2017"}, {"body": "sinstein nt seen job flaking assume good smiley thanks looking", "d": "5/2017"}, {"body": "mvsit thing using ngxbootstrap", "d": "5/2017"}, {"body": "jrwpatterson add star dropdownmenu get embedded template ul class dropdownmenu dropdownmenu role menu arialabelledby zzzmenu ul class dropdownmenu dropdownmenu role menu arialabelledby zzzmenu", "d": "5/2017"}, {"body": "mentioned also helpful filter hostlistener decorator components marked dirty case nothing changes", "d": "5/2017"}, {"body": "previously thought would nice closing topright corner sure leaving sjtrimble consider smiley rest fixed", "d": "5/2017"}, {"body": "believe best without unless taking account accessibility considerations maybe add separately design consideration future topic discussion", "d": "5/2017"}, {"body": "nt think close button helps eg keyboard users much likely use esc key reach button", "d": "5/2017"}, {"body": "update", "d": "5/2017"}, {"body": "saw error added component modules instead declarations mistake check code", "d": "5/2017"}, {"body": "stay angular find way eradicate issue perhaps try move angular later", "d": "5/2017"}, {"body": "ievhenikonnykov verified issue multiple computers using special combination components guess happens specific cases right else guess would quite big fuss around", "d": "5/2017"}, {"body": "perhaps specific issue computer try another one believe something peculiar one components frustrating thing works aot majority angular errors expressive", "d": "5/2017"}, {"body": "works perfect ng serve try ng build prod get error error unexpected value aceeditordirective c declared module codeuimodule c dpdtestpublicappeuimodulets please add pipe directive component annotation error publicmaints module found error ca nt resolve gendirappappmodulengfactory c dpdtestpublic publicmaints multi publicmaints", "d": "5/2017"}, {"body": "running solved reproduce problem run seem problem build target could nt find affected changing edit noticed aot true default targeting production guessing running also workaround", "d": "5/2017"}, {"body": "tzachov solution works thanks lot question happens might reason especially works fine angular", "d": "5/2017"}, {"body": "problem using either commands nodemodulesbinngc p tsconfigaotjson run normal commands fine compile aot mode getting error error unexpected value helloworldcomponent hellolibhelloworldcomponentdts declared module appmodule testhellosrcappappmodulets please add pipe directive component annotation error srcmaints module found error ca nt resolve gendirappappmodulengfactory testhellosrc srcmaints multi srcmaints", "d": "5/2017"}, {"body": "trying use shared lib minified compiled gulp typescript annotations removed ts files references included everytime try ng build prod gt please add pipe directive component annotation everything works fine ng build etc possible skipignore errors certain files", "d": "5/2017"}, {"body": "command getting errors like guys working fine ng serve update case", "d": "5/2017"}, {"body": "ievhenikonnykov know late issue well importing library passed declarations array instead providers array within ngmodule modulets file check code see imported reference needs passed provider hope helps", "d": "5/2017"}, {"body": "michaelonubogu thank information thing use import modules imports section modulets files really bothers works aot mode throw error aot mode unfortunately still find reason work usual mode using jit", "d": "5/2017"}, {"body": "issue also running well execute npm start compile pass npm run build prod uploaded source code one repository represent issue please follow command follow git clone cd npm install npm run build prod", "d": "5/2017"}, {"body": "get bug devdependency angularcli get using ng serve", "d": "5/2017"}, {"body": "hello need join party need help error looks like getting angular material environment windows node npm yarn versions angular angular cli angular material typescript problem case able use app compiles able load app get console error prebootstrap loading screen loads sharedmodule referenced import commonmodule angularcommon import ngmodule angularcore import formsmodule reactiveformsmodule angularforms import mdbuttonmodule mdcheckboxmodule mdinputmodule mdlistmodule mdprogressbarmodule mdprogressspinnermodule mdselectmodule mdtabsmodule mdtoolbarmodule mdsnackbarmodule angularmaterial const sharedmodules commonmodule formsmodule reactiveformsmodule mdbuttonmodule mdcheckboxmodule mdinputmodule mdlistmodule mdselectmodule mdprogressspinnermodule mdprogressbarmodule mdselectmodule mdsnackbarmodule mdtabsmodule mdtoolbarmodule ngmodule imports sharedmodules exports sharedmodules declarations export class sharedmodule started getting error upgraded angular material beta help would appreciated thanks", "d": "5/2017"}, {"body": "addressed pr", "d": "5/2017"}, {"body": "benneq right wanted request extension animations module start stop triggers seem enough slightly advanced animations progress callback method also reasonable probably preferred method", "d": "5/2017"}, {"body": "excuse official docs user use existing project infomation tentative schedule month", "d": "5/2017"}, {"body": "hi solution problem issue", "d": "5/2017"}, {"body": "hi new information best wishes daniel", "d": "5/2017"}, {"body": "nothing done animations", "d": "5/2017"}, {"body": "thats bad honest see missing leave animations often animating one element time driving crazy", "d": "5/2017"}, {"body": "seems like issue happens ngfor also might related", "d": "5/2017"}, {"body": "actually able resolve issue using trackby ngfor", "d": "5/2017"}, {"body": "app working fine angular upgraded angular validation nt work something like used display validation messages nice easily angular even removing traces angular forms nt work html ranting bit read indeed trick", "d": "5/2017"}, {"body": "thing able tag putting lang attribute", "d": "5/2017"}, {"body": "hi thanks markpieszak script code added workaround work apparently prod use document directly read head children selector remove add replace todo", "d": "5/2017"}, {"body": "maybe nodemodules directory sub directories", "d": "5/2017"}, {"body": "hello problem forked library make work angular cli aot luck could anyone look fork simple module error error unexpected value imported module appmodule srcappappmodulet please add ngmodule annotation", "d": "5/2017"}, {"body": "facing similar issue however get error try register service app error see strangely another component works fine service removed edit ignore comment typo", "d": "5/2017"}, {"body": "ran using angularcli quite bit digging found generated imports versions reflect commented imported things started working fine exactly sure works understanding simply included polyfill", "d": "5/2017"}, {"body": "searching tips error turns forgot add typings indexdts packagejson file", "d": "5/2017"}, {"body": "error turned lavaei suggested local development shared module different project used use local copy run linked copy make development easier intellisense vs code etc soon deleted local shared project error went away also using angular cli possible tell angular cli ignore local copy shared repo would nice able serve shared repo directly shell app displays common components well use different repo", "d": "5/2017"}, {"body": "confirm irontoby issue removing reinstall error gone using angularcli well happen upgrading", "d": "5/2017"}, {"body": "thanks mentioning martinroob tool works perfectly still think current angular behaviour strange perhaps existance support tool also big argument smile plans merging support tool angular oder angularcli directly", "d": "5/2017"}, {"body": "hello dont want create new issue problem reset method create form form invalid form component return object form invoke method returned empty object form stay valid solution create form", "d": "5/2017"}, {"body": "formreset works call inside response request form clear errors appear", "d": "5/2017"}, {"body": "confirmed bug still exists angular different path", "d": "5/2017"}, {"body": "confirmed bug still exists angular different path", "d": "5/2017"}, {"body": "confirmed bug still exists angular", "d": "5/2017"}, {"body": "dneeleman would nt concern server side framework using", "d": "5/2017"}, {"body": "closing since tied flex layouts", "d": "5/2017"}, {"body": "news fixedscheduled", "d": "5/2017"}, {"body": "diestrin thanks confirmation snapshot provided describes exactly issue experiencing anything new regarding issue", "d": "5/2017"}, {"body": "solution mind wait lazy loaded route finish loading client finishes bootstrap starts removing replacing things document done setting initialnavigation option router enabled solution work", "d": "5/2017"}, {"body": "reuvenc time created server transition logic vikerman test afternoon let know take look fixed basically copied logic instead remove styles appinitializer running valid reason bootstrap listener default present duplicate", "d": "5/2017"}, {"body": "ah thanks diestrin nt realize flickering related styles switch discussed alxhub pointed initialnavigation enabled route lazily loaded styles removed assuming bootstrap complete synchronously case lazy loaded route fix looks something like cleaning adding tests get", "d": "5/2017"}, {"body": "diestrin thanks detailed explanation vikerman could estimate fix merged", "d": "5/2017"}, {"body": "try get next release", "d": "5/2017"}, {"body": "hi thanks details explanation issues wait bug fixed info concerning bug wanted add happens even without lazy loading route", "d": "5/2017"}, {"body": "flicker noticing http requests ran server browser design transfer state example pass http request within serialized string version app window object get call use instead making request", "d": "5/2017"}, {"body": "thanks hint markpieszak however use new transferstate equivalent old cacheservice right appinitializer rest app requests done client side flickering exactly described dropping styles adding however use past since organised updated dependencies morning nt issue probably still anglular updating seems resolve flicker nonlazyloaded routes sorry non relevant information", "d": "5/2017"}, {"body": "worries glad got working yes fairly similar cacheservice soon easier way transfer state well keep eye", "d": "5/2017"}, {"body": "helped lot thanks diestrin solution worked nicely project well thanks", "d": "5/2017"}, {"body": "sorry nt get time yesterday release part next one", "d": "5/2017"}, {"body": "fix part next angular release clarify makes client side wait router initialnavigation complete removing server side rendered styles combination initalnavigation enabled bug fix fix flickering lazy loaded routes please reopen issue still issues", "d": "5/2017"}, {"body": "hi thanks effort solve issue however still trouble making work correctly prerender lazy road works well flicker styles content bundle lazy loaded module loaded angular hydrate prerendered page request lazyloaded module loads using angular missing something thanks advance hint", "d": "5/2017"}, {"body": "version still facing problem http request get data server delivery page data disappears second shows", "d": "5/2017"}, {"body": "closing last item tracked", "d": "5/2017"}, {"body": "experiencing omni search top app search people inside person profile search another person click result switch persons profile component nt reinitialize data still previous person data", "d": "5/2017"}, {"body": "sharpmachine want get reinitialize every time implement routereusestrategy change default implementation shouldreuseroute return false default navigation switch route config reuses route without reinitializing saving dom manipulation time default implementation found ie actually use true custom routereusestrategy allows store previously created components reload based observable activated routes data super clean super fast however get job done", "d": "5/2017"}, {"body": "find work around", "d": "5/2017"}, {"body": "word", "d": "5/2017"}, {"body": "believe root cause issue also affecting one entered basically functions imported supported component attributes clearly supported define function module component", "d": "5/2017"}, {"body": "back ticks interpolating well removed sure specifically caused issue also interesting people problem almost exact circumstances extracted functions animation generation almost exactly chrisnicola caused issue", "d": "5/2017"}, {"body": "created library work around issue well", "d": "5/2017"}, {"body": "fyi chrome officially supports headless mode phantomjs deprecated", "d": "5/2017"}, {"body": "thinking bit think fix general way without needing change working", "d": "5/2017"}, {"body": "issue simply use gendir aot everthing works causes js files workspace change gendir aotweby put outdir aotweby getting error", "d": "5/2017"}, {"body": "sorry post error may misleading set allowjs keep getting errors", "d": "5/2017"}, {"body": "dzmitryshylovich see working chance pr coming", "d": "5/2017"}, {"body": "fixed already", "d": "5/2017"}, {"body": "hi still getting annoying message whenever try use aot compilation anything done avoid using maybe fix nt release yet thanks time edit see meant released edit tried still getting error fresh project", "d": "5/2017"}, {"body": "tbosch jasonaden robertohuertasm said confirm issue fixed event", "d": "5/2017"}, {"body": "tbosch jasonaden open new issue event nounusedparameters", "d": "5/2017"}, {"body": "yes please", "d": "5/2017"}, {"body": "also got error prod uncaught error find module angular", "d": "5/2017"}, {"body": "version released", "d": "5/2017"}, {"body": "confirmed fix thanks everyone", "d": "5/2017"}, {"body": "issue closed still get error upgraded angular days production code works fine tests reason mockbackend imported form angular undefined project nt use cli test started karma webpack curious thing angular module import works except testing include angular angularcoretesting ideas thanks", "d": "5/2017"}, {"body": "issue still present angular", "d": "5/2017"}, {"body": "progress", "d": "5/2017"}, {"body": "funnily enough seems opposite problem attributes seem work fine enter problem leave", "d": "5/2017"}, {"body": "issue upgraded angular still issue", "d": "5/2017"}, {"body": "funnily enough seems opposite problem attributes seem work fine enter problem leave try instead leave animation worked", "d": "5/2017"}, {"body": "luck problem facing issue", "d": "5/2017"}, {"body": "would bug fixed still facing issue please notify", "d": "5/2017"}, {"body": "project blocked", "d": "5/2017"}, {"body": "blocked also able work around issue aot following injecting injector service used appinitializer waiting initialized import locationinitialized angularcommon import injectable injector angularcore import http angular services import analyticsservice servicesanalyticsservice import settingsservice servicessettingsservice injectable export class appconfigservice private isinit false", "d": "5/2017"}, {"body": "update", "d": "5/2017"}, {"body": "also breaks component providers used see", "d": "5/2017"}, {"body": "always blocked version update", "d": "5/2017"}, {"body": "getting thing ngmodel upgraded first example page give error identifier valid defined ngmodel contain member", "d": "5/2017"}, {"body": "run ng serve angular cli nt generate separate ts class run ng build prod want use service variable html please change like testcomponenthtml testcomponentts", "d": "5/2017"}, {"body": "terrible", "d": "5/2017"}, {"body": "think going stick right", "d": "5/2017"}, {"body": "change return type instead event", "d": "5/2017"}, {"body": "fixed", "d": "5/2017"}, {"body": "way works comparing strictly typed values boolean detected first checks first true false values", "d": "5/2017"}, {"body": "try command npm install angularanimations save", "d": "5/2017"}, {"body": "something nt understand nt want animations rather want use noopanimationsmodule nt want animation module production code trying keep lightweight seems noopanimationsmodule stills require installed way use noopanimationsmodule without installing", "d": "5/2017"}, {"body": "fix existing spa templated net core app trying upgrade angular tried yet still get error", "d": "5/2017"}, {"body": "wanted add update topic change native acts exactly defaultnone new plunkr longer native box c styled inherently picks style parent adds original css thus available third box c native box styled box b styled box c nonstyled peculiar viewencapsulationnative emulated still parity emulated box styled box b nonstyled box c styled means style child ts file trying reference parent css style picked thus box b still styled mean part important part placing css style via component level always win thus style priority even said style class placed subordinate component class ie child class broken case made new plnkr took css parent placed child added different background child see would happen plnkr result everything acted encouraging digging found following vemulated style child worked accordingly vnative parent style added main css specific child style apart localized component styling picked child component lt lt emulated work native still argue best way handle situation associated component css always win thoughts igorminar dzmitryshylovich", "d": "5/2017"}, {"body": "facing issue may update", "d": "5/2017"}, {"body": "still following matsko merged animations features master bet available next beta", "d": "5/2017"}, {"body": "new animations features live angularanimations next", "d": "5/2017"}, {"body": "nt understand reason solution moving xroutingmodule fixed problem know documentation recommended beginning maybe logical reason fixed problem technically think cleaner xroutingmodule", "d": "5/2017"}, {"body": "clear multiple subscription observable way go absolutely reason angular way create local variable might nglet something else creating loca variables ngif hack achieve functionnality hack reaches limit need use falsy value local variable", "d": "5/2017"}, {"body": "marketing milestone tracked via api styling tracked", "d": "5/2017"}, {"body": "use isplatformbrowser thisplatformid encapsulate code want rendered browser pre rendered server side using angular universal code pre rendered server throws errors like window event etc tried", "d": "5/2017"}, {"body": "hello guys facing issue import import observable rxjsrx upgraded project angular angular eveything works fine systemjs builder able build project throwing following error error fetch rxjsaddobservabledomajaxjs help would appreciated thank", "d": "5/2017"}, {"body": "import rxjs way shows tutorial instead import examples issue thread problems fixed", "d": "5/2017"}, {"body": "first thank response secondly would like share systemjsconfig gulpjs file please help suggesting best way new angular systemjsconfigjs system configuration angular samples adjust necessary application needs function global systemconfig paths paths serve alias npm lib map tells system loader look things map app within app folder app app gulpjs const del require del const gulp require gulp const cleancss require gulpcleancss const concat require gulpconcat const runsequence require runsequence const sourcemaps require gulpsourcemaps const sysbuilder require systemjsbuilder const uglify require gulpuglify const tsc require gulptypescript const htmlreplace require gulphtmlreplace const tslint require gulptslint const tscconfig require tsconfigjson clean app prod gulptask clean app function return del public gulptask compile ts function return gulp src appts pipe sourcemapsinit pipe tsc tscconfigcompileroptions pipe sourcemapswrite pipe gulpdest publicapp gulptask lint ts function return gulp src appts pipe tslint formatter verbose pipe tslintreport generate systemjsbased builds gulptask bundle js function var builder new sysbuilder public systemjsconfigjs return builderbundle app publicappappminjs function consolelog build complete return del publicapp publicappappminjs catch function err consoleerror gt gt systemjsbuilder bundling failedboldgreen err copy dependencies gulptask copy prod libs function gulpsrc nodemodulesrxjs pipe gulpdest publiclibrxjs copy dev dependencies gulptask copy dev libs function gulpsrc nodemodulesrxjs pipe gulpdest publiclibrxjs copy core files dev env gulptask copy dev dependencies function gulpsrc nodemodulesmomentmomentjs pipe gulpdest publicscript gulptask prod index function gulpsrc indexhtml pipe htmlreplace css stylesmincss jsvendors libvendorsminjs jsapp appappminjs pipe gulpdest public gulptask dev index function gulpsrc indexhtml pipe htmlreplace css stylesfontawesomemincss stylesthemecss stylesprimengmincss stylesfullcalendarcss stylesvideogularcss stylesmaincss stylesbootstrapmincss stylesanimatecss stylesmaincss stylesstyleresponsivecss stylessvgstylecss stylesstylecss css stylescss jsvendors scriptjqueryjs scriptbootstrapminjs scriptmomentjs scriptshimminjs scriptzonejs scriptsystemsrcjs systemjsconfigjs pipe gulpdest public gulptask copy static dev function gulptask copy static prod function gulptask clean clean app gulptask build function callback runsequence clean app copy prod libs lint ts compile ts bundle js copy static prod prod index callback gulptask dev function callback runsequence clean app copy dev libs copy dev dependencies lint ts compile ts copy static dev dev index callback runsequence copy dev dependencies lint ts compile ts copy static dev dev index callback gulptask default function callback runsequence dev callback", "d": "5/2017"}, {"body": "also rxjs file missing error comes include project thank", "d": "5/2017"}, {"body": "reenable test think alias stuff removed", "d": "5/2017"}, {"body": "hi made another plnkr illustrate bug issue new formgroup created reusing old formcontrolname directives update directives happens formgroupdirectiveupdatedomvalue setupcontrol validators value updated state enableddisabled", "d": "5/2017"}, {"body": "workaround update directives manually change formgroup viewchildren formcontrolname formcontroldirectives querylist thismyformgroup thisformbuildergroup config", "d": "5/2017"}, {"body": "closed nt think supposed work without", "d": "5/2017"}, {"body": "yes could see firing first part ie already duplicate could look thanks zoechi", "d": "5/2017"}, {"body": "errors warnings pr failing build tags fail", "d": "5/2017"}, {"body": "wanted voice support ticket well running similar problem trying override component parent using easily mock component based selector way ones listed annotations", "d": "5/2017"}, {"body": "resolved", "d": "5/2017"}, {"body": "joshmobley yes solved little difference using child router read document", "d": "5/2017"}, {"body": "currently working project issues specific version took care bug", "d": "5/2017"}, {"body": "sorry actually enviroment", "d": "5/2017"}, {"body": "saying wo nt prerender ever", "d": "5/2017"}, {"body": "initially closed prerendering implemented remained closed commit reverted according understanding prerendering still roadmap initial launch issue appears post release list", "d": "5/2017"}, {"body": "upgraded directive uibaccordiongroup contains unsupported feature replace get problem suggest", "d": "5/2017"}, {"body": "codefansfan upgrade directives option wrap another component upgrade component necessary pass bindings wrapper component probably work case bootstrap css relies exact dom structure inserting wrapper component inbetween likely mess things thx foxandxss clarifying", "d": "5/2017"}, {"body": "said discover way avoid replace uibootstrap code create pr ping see create new version without", "d": "5/2017"}, {"body": "gkalpak thank reply find use ngxbootstrap instead upgrading", "d": "5/2017"}, {"body": "still see issue angular universal running fix", "d": "5/2017"}, {"body": "dietergeerts brick wall actually went far step code resolvers make sure nt crazy even confusing figured simply made thisroutereventssubscribe resolver wait ones done even looped resolved correct none undefined data would work sadly nt even work", "d": "5/2017"}, {"body": "kenisteward way wait componentless pathless route levels define level dependent resolves leads several issues like secondary routes nt work pathless parent performance impact level resolved series routerlinks edit time goes one router config level actually url like would expect imho router though rewritten several times still nt designed well bigger applications even hard find good examples use resolves official docs like put uirouter resolves preferred injecting services components", "d": "5/2017"}, {"body": "dietergeerts think simply resolved adding order level resolves router context every resolver level checks order allow resolvers level get data real issue reason made add resolve data resolvers finish makes sense context nt hit use case", "d": "5/2017"}, {"body": "made available resolves subscribe others even level matter move one later nt want rewrite resolves depend one", "d": "5/2017"}, {"body": "even solution get strange bothers", "d": "5/2017"}, {"body": "whatever reason forcing animations changing mapping using npm namespaces explicitly using nodemodules angular convention suggested earlier also forcing using typescript locally use angular official quickstart repo implementing material", "d": "5/2017"}, {"body": "solution work thanks", "d": "5/2017"}, {"body": "also facing issues would someone provide update progress please stuck moment cheers khoa", "d": "5/2017"}, {"body": "khoasydney sure issue ngupgrade currently expects specific structure ie angularjs owning toplevel element couple workarounds posted cases want circumvent currently investigating building ngupgrade meantime nothing stops applying still running difficulties probably different problem case submit new issue including necessary info", "d": "5/2017"}, {"body": "hi gkalpak angularjs owing toplevel explained still come across error read property get undefined zone task promisethen value typeerror read property get undefined due injector undefined looks like angular started first angularjs started bootstrap due code complexity within project impossible setup plunker look code run import silverlightobject silverlightobjectdirective import navigationmodeservice routenavigationmodeservice import silverlightmodule silverlightmodule import upgrademodule angularupgradestatic import platformbrowserdynamic angularplatformbrowserdynamic import angularmodule adviceossilverlight config locationprovider locationprovider gt true factory navigationmodeserviceid location location gt new navigationmodeservice location directive silverlightobject silverlightobjectfactory angularbootstrap documentgetelementbyid silverlightplugincontainer adviceossilverlight platformbrowserdynamic bootstrapmodule ref gt angular bootstrap complete bootstrap angularjs module const upgrade refinjectorget upgrademodule upgrademodule error thrown ngmodule imports fundsbasemodule browsermodule formsmodule httpmodule soarequestmodule clientmodule midwintermodule modellingmodule controlsmodule browseranimationsmodule routermoduleforroot approutes upgrademodule providers provide appid usefactory gt alert iget appid deps injector provide contextfactoryid usefactory gt iget contextfactoryid deps injector provide logger usefactory gt iget logger deps injector export default class appmodule", "d": "5/2017"}, {"body": "khoasydney really next impossible tell might causing code looks fine except provider injects instead assume copypaste typo ooc error appear call", "d": "5/2017"}, {"body": "hi gkalpak injector error misleading reason error due fact didnt set providers return scope rootscope set application running errors still need resolve though latest error come angular service got downgraded angularjs service tricky part angular service requires angularjs service injected constructor injected angularjs service undefined think might due fact angularjs bootstrap finished yet look like circular dependency issue im running idea fix one suggestions cheers khoa", "d": "5/2017"}, {"body": "sorry ca nt suggest solution without way identifying problem ultimate suggestion try narrow create minimal reproduction grin understand always easy", "d": "5/2017"}, {"body": "hi fixed remaining issues thought share come across injector undefined angularjs services requires scope rootscope please set angular providers made mistake return service usefactory function error service upgrade downgrade make sure check dependencies injections setup providers setup ngmodule cheers khoa", "d": "5/2017"}, {"body": "since currently nt prerender site nt need", "d": "5/2017"}, {"body": "issue future plan prerender site last checked still planning prerender nearfuture iteration doc viewer app therefore reopening untilunless say plans prerender anytime soon update see closed maybe means prerender anytime soon reclosing", "d": "5/2017"}, {"body": "kemsky found workaround also thought strange limitation", "d": "5/2017"}, {"body": "would great implemented cgatian need inject parents childen using createembeddedview using context pass parent put children manually", "d": "5/2017"}, {"body": "tolemac thats afraid give little context talking way get services component add property using pass reference component utilizing property component ideally able allow use injector", "d": "5/2017"}, {"body": "stores reference declaring view via private field dirty way patch field using current view see", "d": "5/2017"}, {"body": "kemsky unfortunately nt think simple tried updating different errors occur way deep compiler process attempting following nt work", "d": "5/2017"}, {"body": "anything else required land location trailing slash fix", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "tbosch sure totally related case want comunicate parents children witch create using think perhaps add feature requested could good solve issue", "d": "5/2017"}, {"body": "noted naming searching packages published npm also annoyingly difficult lot packages already named support angularjs unlikely ported seemed people going adopt naming scheme possible packages going remain neglected polluting npm namespace forever going get easier couple years unlike searchblog problem", "d": "5/2017"}, {"body": "news topic", "d": "5/2017"}, {"body": "hi error design correct pattern avoid sort issue observable using follows itemdisplaytext itemdisplaytext paging values change data loaded paging calculated keep throwing error dev mode prod error appear wondering correct pattern avoid issue help would appreciated", "d": "5/2017"}, {"body": "minuz question built carousel sorts paging depends scrollwidth child element always undefined initial check wait ngafterviewinit order set paging appears life cycle event reliably check element exists suggested solutions", "d": "5/2017"}, {"body": "hasnatbabur mikeandersun reddit post links article shows plunker demonstrating bootstrapping process would work mpa nt think angular constraining spa", "d": "5/2017"}, {"body": "facing typeerror issue exception call node module failed error prerendering failed error typeerror read property getdom undefined object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object modulecompile please suggest actually missing", "d": "5/2017"}, {"body": "trying use angular thanks", "d": "5/2017"}, {"body": "please enable function object", "d": "5/2017"}, {"body": "ngif directive get message directive syntax messed plunker", "d": "5/2017"}, {"body": "experiencing issue first ps solved issue simply reinstalled typings method", "d": "5/2017"}, {"body": "jmcclanahan one question probably stupid one code mention lazy loaded toolbar component put service call code ngoninit section manage initialize component without add html code hide later dom since component going used topbar nt load anywhere else", "d": "5/2017"}, {"body": "dunos realized completely left part example sorry want add dynamic component lazy loaded module associated toolbar component define reference location html template want dynamic component display updatetoolbar method take care creating component placing specified location showing component toolbar dynamically created component placed wherever put corresponding toolbartarget html clearcomponent method gets called whenever ngondestroy run takes care hiding component leave page js clearcomponent thistoolbartargetclear thiscomponentref thiscomponentrefdestroy ngondestroy thisresolversubunsubscribe thisclearcomponent also updated original post getting lot questions add working example using dynamic toolbar soon update guys link", "d": "5/2017"}, {"body": "jmcclanahan get think still nt understand call service make dynamic component thistoolbarservicereceivecontext call part since ngoninit never gets called nt see added entrycomponents need initialize somewhat get oninit work", "d": "5/2017"}, {"body": "dunos maybe example best say navigating index page app page corresponding route page define page modulecomponent page also separate component defined want display global toolbar inside page main component inject fire event bit code sorry could see could confusing nt put code component want display toolbar rather component associated page", "d": "5/2017"}, {"body": "jmcclanahan ah perfect many thanks got working", "d": "5/2017"}, {"body": "jmcclanahan solved issue finding post one thing noticed want save characters function declarations get reference componentfactoryresolver using injector pass return reference need end gives result passing componentfactoryresolver parameter function well", "d": "5/2017"}, {"body": "needed well", "d": "5/2017"}, {"body": "weird http changed want change headers document baserequestoptions says possible use object never gon na work merging requestoptions adding default headers common process really want see simple way", "d": "5/2017"}, {"body": "nallwhy", "d": "5/2017"}, {"body": "information problem reproduced angular zonejs problem occur component demonstrating issue lazy loaded see checkout lazyload branch created sample repo branch observe correct expected behaviour error thrown observer scheduled schedulerasap sent errorhandlerhandleerror", "d": "5/2017"}, {"body": "forget return promise qall problem", "d": "5/2017"}, {"body": "solutions yet running app fine spec files issues importing reactiveformsmodule testbed still dice", "d": "5/2017"}, {"body": "followed matfork works must import formsmodule reactiveformsmodule", "d": "5/2017"}, {"body": "looks interesting currently got problem whereby single route need wait data result one resolvers service call complete calling another service previous resolved data would able changes", "d": "5/2017"}, {"body": "could chain resolver dependency solve problem may following approach used note get data loaded inside resolve method synchronous resolver called data shared", "d": "5/2017"}, {"body": "looks good clarify get choice amp resolve concurrently values resolve sequentially values resolved available already sounds like would solution common problem nt found anything angular site", "d": "5/2017"}, {"body": "documentation great issue making idea gradually migrating angular difficult", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "faced similar problem handler router nt protection navigation url twice reasons", "d": "5/2017"}, {"body": "issue seem really quiet", "d": "5/2017"}, {"body": "pr submitted add bug type label assign people review pr created time ago trivial fix", "d": "5/2017"}, {"body": "facing problem ssarj mentioned using angular progress move operations ngafterviewinit instead ngoninit destination children components", "d": "5/2017"}, {"body": "tested works thank comments source code elements contains absolute path eg think relative path project root would better eg absolute path makes hard use values move directory another location source value element attribute reason could attribute like would easier read humans localization tools translationbundle contain source element exists compilation fails elemenst need removed would nice could exist translated files", "d": "5/2017"}, {"body": "good points open issue especially last one bug think point xliff spec like", "d": "5/2017"}, {"body": "open issue done", "d": "5/2017"}, {"body": "shlomiassaf commented aot fails tbosch still closed ticket confused", "d": "5/2017"}, {"body": "lol yep nt notice first message ok ran aot failed edited closed guess browser updated message real time edit happens github ping tbosch", "d": "5/2017"}, {"body": "shlomiassaf could create branch reproduces error", "d": "5/2017"}, {"body": "hi problem tried reproduce using one angular examples nt happen replace modify formgroup without seeing error nt understand error nt showing", "d": "5/2017"}, {"body": "charlieamer could find solution problem experiencing exact issue snesi mentioned problem happen angular example code tried compare every single aspect apps ca nt seem find works one case", "d": "5/2017"}, {"body": "charlieamer btw tried removecontrol addcontrol instead creating new formgroup help either", "d": "5/2017"}, {"body": "sorry long time away snesi trying find solved problem commits could nt find solution please post screenshots code skshirsagar", "d": "5/2017"}, {"body": "charlieamer exact code plunker snippet", "d": "5/2017"}, {"body": "plunker forked removecontrol addcontrol instead creating new formgroup exact original one", "d": "5/2017"}, {"body": "think solved problem using formarray let remember exactly solved", "d": "5/2017"}, {"body": "using formarray solved problem however get array value may may want example output arr", "d": "5/2017"}, {"body": "hi solved problem sure ended refactoring whole thing added little bit code might something formgroup n form controls get input field names backend bot names might repeat name already used found ignored use instead", "d": "5/2017"}, {"body": "issue using nt make difference totally new form instance like called emits new value might work definitely ugly solution tried snesi trick wrapper still fails way another solution", "d": "5/2017"}, {"body": "error void foreign elements self closed x error ocorreu um erro ocorreu um erro error favor tente novamente ng c appsmarcosvrsgithubiosrcappcorecontactcontactcomponenthtml error srcmaints module found error ca nt resolve gendirappappmodulengfactory c appsmarcosvrsgithubiosrc srcmaints multi webpackdevserverclient srcmaints webpack failed compile please tell us environment angular version browser firefox language typescript node aot issues node version", "d": "5/2017"}, {"body": "achieverprince stackoverflow answer", "d": "5/2017"}, {"body": "error runtime error template specified component tabspage fix help please", "d": "5/2017"}, {"body": "matsko dzmitryshylovich anyone looking also seeing safari scenarios", "d": "5/2017"}, {"body": "nt find way fully solve issue css came workaround import directive elementref onchanges input angularcore directive selector routerlink export class emptyrouterlinkdirective implements onchanges input routerlink", "d": "5/2017"}, {"body": "link solution issue please share thanks", "d": "5/2017"}, {"body": "ever figure experiencing behavior", "d": "5/2017"}, {"body": "broken example link removed aio", "d": "5/2017"}, {"body": "awesome close build still getting following error anyone ran overcome loss thanks help far", "d": "5/2017"}, {"body": "response comment failing due fact using pushstate routing changing hashlocationstrategy made everything work still ca nt read json files disk though", "d": "5/2017"}, {"body": "suggest use script tag facilitate loading json reverted var myvar thejson load file", "d": "5/2017"}, {"body": "thanks markovy got working completely fairly complex angular app multiple nested routes needed router configuration indexhtml file removed base href tag html added like", "d": "5/2017"}, {"body": "error gone", "d": "5/2017"}, {"body": "used resolve example thoughtram modified would break route call performs happens exception logged console route stays want handle error component level never loaded handling error clc", "d": "5/2017"}, {"body": "saw commit sticky routes sample manfredsteyer looks like trying solve problem maybe could used inspiration", "d": "5/2017"}, {"body": "tell main issue angular internally comparing entire detached tree given route nested routes entire route fails terms op navigate back top level route editing person stored route entire url tree starting person id level essentially person idedit navigate back person id via view button new route person idview fails angular internal check since child routes person id different solution updateoverride redirects store route ts export class customroutereusestrategy extends routereusestrategy handlers path string detachedroutehandle shoulddetach route activatedroutesnapshot boolean avoid second call getter let config route routerouteconfig nt store lazy loaded routes return config amp amp configloadchildren store route activatedroutesnapshot handle detachedroutehandle void let path string thisgetroutepath route thishandlers path handle circumvent error detached route includes nested routes causes error parent route include nested routes prevent whenever parent route stored changeadd redirect route current child route let config route routerouteconfig config let childroute activatedroutesnapshot routefirstchild let futureredirectto childroute childrouteurlmap function urlsegment return urlsegmentpath join let childrouteconfigs route configchildren childrouteconfigs let redirectconfigindex number let redirectconfig route childrouteconfigsfind function childrouteconfig index childrouteconfigpath amp amp childrouteconfigredirectto redirectconfigindex index return true return false redirect route exists redirectconfig futureredirectto current activated route child routes update redirectto redirectconfigredirectto futureredirectto else current activated route child routes remove redirect otherwise retrieval always fail route childrouteconfigssplice redirectconfigindex else futureredirectto childrouteconfigspush path redirectto futureredirectto pathmatch full shouldattach route activatedroutesnapshot boolean return thishandlers thisgetroutepath route retrieve route activatedroutesnapshot detachedroutehandle let config route routerouteconfig nt store lazy loaded routes nt even bother trying retrieve config configloadchildren return false return thishandlers thisgetroutepath route shouldreuseroute future activatedroutesnapshot curr activatedroutesnapshot boolean return futurerouteconfig currrouteconfig getroutepath route activatedroutesnapshot string let namedoutletcount number return routepathfromrootreduce path route gt let config route routerouteconfig config configoutlet amp amp configoutlet primaryoutlet path namedoutletcount else path return path configpath return path namedoutletcount new array namedoutletcount join know nt help everybody op matter sufficient use case may note actual slightly complicated extended interface provide additional configuration allowing route handled differently", "d": "5/2017"}, {"body": "information investigations seems reuse strategy sample app sticky routes sample works cases app child routes seem work app sibling auxiliary routes case error run", "d": "5/2017"}, {"body": "news seems like still present angular", "d": "5/2017"}, {"body": "using following workaround based fact routerlinkactiveoptions also trigger updates whenever route changes routing events", "d": "5/2017"}, {"body": "fix works", "d": "5/2017"}, {"body": "dzmitryshylovich nathanwalker anyone know version works", "d": "5/2017"}, {"body": "solution issue similar issue use attrsrc inside video tag source tag", "d": "5/2017"}, {"body": "feature land angular", "d": "5/2017"}, {"body": "good job need watch amp serve options", "d": "5/2017"}, {"body": "good place get official current benchmarks currently using angular would like make case angular", "d": "5/2017"}, {"body": "working use ittreating object ngfor ittreating array object use problem solve", "d": "5/2017"}, {"body": "way seeing considerations attribute directives seem like perfect fit like like containers attaching inputsoutputs existing components without redundant domnodes case using instead", "d": "5/2017"}, {"body": "bug preventing us using aggrid please fix asap", "d": "5/2017"}, {"body": "waiting merged wondering workarounds without editing nodemodules code like using something", "d": "5/2017"}, {"body": "hi could someone confirm fix actually working may benetisbentley notifications githubcom wrote waiting merged wondering workarounds without editing nodemodules code like using something receiving assigned reply email directly view github mute thread", "d": "5/2017"}, {"body": "actually nt fix problem tried add one liner comments hoping missing something else pr would fix coming conclusion nt related leak problems l encountering catching subscriptions unsubscribed stopped seeing anything related issue", "d": "5/2017"}, {"body": "typescript default generic types already plans support ts angular ready", "d": "5/2017"}, {"body": "desfero waiting build upgraded", "d": "5/2017"}, {"body": "also facing issue property setter methods getting called attachedcallback webcomponent would nice receive intial set properties attachedcallback render ui becomes unnecessary rerender component properties set part component init covered part issue need raise separate issue", "d": "5/2017"}, {"body": "getting would prefer scratch browser avoid", "d": "5/2017"}, {"body": "one workaround hope fixed maybe service", "d": "5/2017"}, {"body": "lizjulien works locally wanted goto particular section totally different page", "d": "5/2017"}, {"body": "also working latest version angular angular team", "d": "5/2017"}, {"body": "bjornharvold paste work around inside target component make work", "d": "5/2017"}, {"body": "thank playnirvik seen options really looked angular team anchor links working html page pretty big small thing", "d": "5/2017"}, {"body": "edit turns different error resulting bug ngtoolswebpack ticket opened new fun front company recent attempt upgrade systems ended couple dozen errors variety seems logging components shared library used current application eerily similar error opened ticket originally sure else though tried addressing component need shared lib directly using files seemed pull every file referenced index moving shared lib nodemodules compiler need know every angular component folder even needs read build map care whether module", "d": "5/2017"}, {"body": "yeah ran working library even though provides templated components directives library still must built aot compiler work aot builds used", "d": "5/2017"}, {"body": "chrisnicola saying library must precompiled aot published would imply library modules seems really counterintuitive library uncompiled ts files pull like file project whole thing compiled ngtoolswebpack plugin webpack worth noting even original error ticket fixed side eliminating references indexts files fix longer seems work", "d": "5/2017"}, {"body": "ah see yes misread problem nt pulling precompiled shared library via npm local ts library project understand correctly agree work correct definitely sounds like problem finding components module application possible solution would use aot build specific excludes files folders needed aot build", "d": "5/2017"}, {"body": "managed solve problems relating error problem solution appears exporting component used testing exported another file could reused caused issues running target solve declared module make sure also export component caused error unused component hacked exported order picked tool caused error component using ignoremodule technique could easily bypass", "d": "5/2017"}, {"body": "utopianstorm solution mentioned unusedmodule difficult scale also creates entire module source files included distribution bundle", "d": "5/2017"}, {"body": "phmager ever find work around abstract component issue pulling hair", "d": "5/2017"}, {"body": "solution sense definitely workaround overcomes error sure would difficult scale technique applied every time problem comes clutter distribution bundle matter state angular sort assumed would already littered spec files case much clean approach reaching directly guts nodemodules folder nt agree", "d": "5/2017"}, {"body": "least usecase originally opened ticket even viable workaround feasible every partner team maintain list unused shared components go additionally shipping essentially full apps simply compiler overly strict compromise willing make angular already pretty large justify shipping entire module unused components make opinionated compiler happy", "d": "5/2017"}, {"body": "see think adding another module makes big difference better take another look advocating creating one unused module share entire project one module every single component free overly strict compiler potentially dusins", "d": "5/2017"}, {"body": "worth noting shared codebase quite large unused module would far biggest module app situation typical still within bounds reason supported believe honestly months watching ticket go nowhere looking options including killing shared code repo", "d": "5/2017"}, {"body": "facing exactly issue fact suppressable warning ridiculous dear angular team anything", "d": "5/2017"}, {"body": "dzmitryshylovich exclude file using tried putting none seemed work", "d": "5/2017"}, {"body": "facing issue exact use case use rollup unused components nt even make ultimate bundle please suppress big nuisance stopping work", "d": "5/2017"}, {"body": "ran also damn frustrating", "d": "5/2017"}, {"body": "mlakmal others getting error code like remove annotation declare usable", "d": "5/2017"}, {"body": "created mock directive use tests get issue aot compilation nt want import mock directive plain modules please fix", "d": "5/2017"}, {"body": "work around chance", "d": "5/2017"}, {"body": "could nt find workaround inside candeactivate class still waiting pr", "d": "5/2017"}, {"body": "seems work like resolve nt navigate candeactivate cancels confirms whether component deactivated routed away otherwise nt really understand purpose", "d": "5/2017"}, {"body": "skaiser purpose described bug currently pr made solve issue candeactivate guard breaks history", "d": "5/2017"}, {"body": "release make", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hi maybe stupid question bug fixed angular angular normal missed something thanks", "d": "5/2017"}, {"body": "commit make could file new issue way reproduce specific problem", "d": "5/2017"}, {"body": "hi thanks reply file line creates bug one loadchildren import routes routermodule angularrouter import pages pagescomponent import authguard authauthcomponent import ngmodule angularcore export const routes routes path home canactivate authguard component pages children path settings loadchildren gt systemimport settingssettingsmodule path redirectto home pathmatch full path redirectto home pathmatch full ngmodule imports routermoduleforchild routes exports routermodule export class pageroutingmodule error message exactly marcuskrahl thought problem old webpack version trying upgrade webpack nt finished job think could good way", "d": "5/2017"}, {"body": "general wo nt work aot nt support closures instead need refactor top level function reference", "d": "5/2017"}, {"body": "thanks changing line ok", "d": "5/2017"}, {"body": "issue try close modal window outlet called modal load modal window component want close without knowing modal null routes modal", "d": "5/2017"}, {"body": "find angular ignores comment indicators renders anyway way comment things would big help", "d": "5/2017"}, {"body": "hi wondering word feature seems able visually mark certain items required basic feature expected modern forms ui yet since way retrieve information whether field required impossible implement feature using reactive forms", "d": "5/2017"}, {"body": "impossible lot work", "d": "5/2017"}, {"body": "reproducible anymore", "d": "5/2017"}, {"body": "seem able replicate project somehow getting also delete folder generate code simply adding folder back angular compiler wants use seemingly avoid error happening possible differences compiling server rendering entry well first compilation done fails second succeeds would assume due tofolder created time second compilation also using rather directly another thing note aot builds take seconds build minutes bundle webpack generally hit maximum amount ram override default ram limit node using helpful tsconfig used aot browser ran first thus one failing fix add take emit necessary libraries web apps like project sure option would fix guessing might avoided due racing condition simply creating folder advance nevertheless given happen think still bug ca nt simply create new folder especially immediately obvious root cause error ever happen encounter", "d": "5/2017"}, {"body": "maybe helps", "d": "5/2017"}, {"body": "issues plnkr updated version still nt work ngupgrade bug fixed", "d": "5/2017"}, {"body": "actually see simple transclusion works already updated plnkr nt work fixed fallback content multislot transclusion", "d": "5/2017"}, {"body": "looking places would need adding setelementstyle ngstyle nt think extra syntax good idea would really clean views sure quite people tried already makes sense anyone reading anyone else anything", "d": "5/2017"}, {"body": "also include similar handling secondary routes eg way would return true plnkr detail", "d": "5/2017"}, {"body": "fix workaround experiencing condition async validator hitting api check existence name returning properly form never registering observable complete stuck pending", "d": "5/2017"}, {"body": "happened forget return response observable generating new observable validation check let say filter checks whether anything controlvalue filter conditional fails nt pass api control marked pending call filter never finished even another instance passes original call still never completed call validator unique make sure observable marked complete time hit validator even value", "d": "5/2017"}, {"body": "encountered issue angular app minuz already observed similar pattern think could related validation actually used template versus used independently latter case async validators always stays pending state seems like angular make async call order save network requests thinks formgroup nt actually use case would request option force async validations validation form currently rendered strong use case us", "d": "5/2017"}, {"body": "dzmitryshylovich navigation seems work upgrading angular amp router returned promise null instead true false per spec", "d": "5/2017"}, {"body": "hello anyone still problem", "d": "5/2017"}, {"body": "behavior windowonbeforeunload changed binding windowonbeforeunload works expected shows dialog handler returns false function bound windowonbeforeunload runs navigation happens regardless returned ca nt demonstrate plunkr plunkr binds handler windowonbeforeunload candeactivate hook run page reloaded ca nt see way block page reloads example unsaved changes angular something supported per original issue wardbell", "d": "5/2017"}, {"body": "imho routerlink relative path look actual url tree create build routes regurarly add empty paths add resolves etc depend relative routerlink depend actual url created tree broken links everytime add level resolves depend think works designed designed badly", "d": "5/2017"}, {"body": "bontscho replicated code demo project unable hit component even though pass url starting sampleurl please let know missing something code routing export const approutes routes path redirectto profile name pathmatch full path auth component authcomponent path profile name component profilecomponent path name component homecomponent path name reponame component projectcomponent children path file component projectcontentcomponent path component pagenotfoundcomponent matcher matcherfunction component projectcontentcomponent export function matcherfunction url urlsegment urllength amp amp url pathstartswith sampleurl return consumed url return null", "d": "5/2017"}, {"body": "route last since always return match last route matcherfunction therefore never checked router try putting matcher function route route", "d": "5/2017"}, {"body": "matsko jasonaden nt issue closed landed", "d": "5/2017"}, {"body": "possible please test provide feedback sorry took long land", "d": "5/2017"}, {"body": "hi matsko copied pasted code published top issue angular nt work expected tests realized query firts parameter needed html tag name id preceeded exemple code nt work find tag whereas template posting comment nt know bug nt work intended changed mind supposed work query something based template variables error thank work", "d": "5/2017"}, {"body": "hey toniopelo ah see yes query tag nt think implementing indeed needed created issue apart next week release", "d": "5/2017"}, {"body": "ping matsko update", "d": "5/2017"}, {"body": "closing since animations processed anymore aot land", "d": "5/2017"}, {"body": "fixed upgraded angular core module loads shared library module imports permissions service able interact successfully data cached stored within lazy loaded route ribbons component utilizes directive imported shared module gets permissions service injected version service fresh copy data cached original load service missing know copy set breakpoints constructor permissions service hit twice happy set plunkr anyone would like see", "d": "5/2017"}, {"body": "johnnyclutch might different issue references one create separate bug attach plunkr", "d": "5/2017"}, {"body": "progress", "d": "5/2017"}, {"body": "current working way requires double cast typescript connectionmockerror response error mockerror accepts error expected behavior get proper response object tried work around problem creating class extending response implementing error type declared typesnode js class errorresponse extends response implements error name message export function mockerror errorresponseopts return new errorresponse new responseoptions errorresponseopts js mockconnectionmockerror mockerror status", "d": "5/2017"}, {"body": "seeing well simply trying lazy load module multiple named router outlets", "d": "5/2017"}, {"body": "help anyone else gets also error template like closing square brackets ngmodel", "d": "5/2017"}, {"body": "issue beacuse wrote ngif instead ngif", "d": "5/2017"}, {"body": "wanted revive issue since fairly important even though techincally add multiple validators using validatorscompose nt allow tell error triggering invalidity ie use haserror myerror", "d": "5/2017"}, {"body": "closed afaict still solution problem", "d": "5/2017"}, {"body": "also like know workarounds listed stack overflow already inside application solution route application query parameter app strips app entry", "d": "5/2017"}, {"body": "solution", "d": "5/2017"}, {"body": "hi filipesilva vsavkin fixed issue", "d": "5/2017"}, {"body": "eslab actually found appears proper work around issue case data trying pull guards really application information use guaranteed run guards completed enforce order execution need actually nt appear well document concept enforce resolver return using following class declaration class implement function corresponding signature blog post walks need know fully implement resolver", "d": "5/2017"}, {"body": "wonderpanda workaround gave works canactivate guard pretty good canload guard nt prevent module loading still implemented nt like module protected guard loads shoud nt wait response angular team hope fixed soon", "d": "5/2017"}, {"body": "facing issue anyone help", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hi may know got update", "d": "5/2017"}, {"body": "nt understand idea use children component shatter thing ancestors use even using local variables child components used every time else nt update child view dzmitryshylovich sod", "d": "5/2017"}, {"body": "crysislinux ever solve issue", "d": "5/2017"}, {"body": "relatively straightforward api", "d": "5/2017"}, {"body": "matter badly missed feature badly missed features developers affected get higher priority nt unlimited resources even google get everything done custom reuse strategy added back might address problem nt tried", "d": "5/2017"}, {"body": "chance add gist matanshukry official documentation far see link documentation urlmatcher official documentation router still broken broken url", "d": "5/2017"}, {"body": "matanshukry replicated code demo project shows error expression form supported building project currently using lastest version angular e please guide misssing something requirement follows xyzabcfileasddsadas xyzabcfileqwedfgyrf url contains file word redirect specific component", "d": "5/2017"}, {"body": "marcuskrahl status see pr never merged", "d": "5/2017"}, {"body": "fbobbio unfortunately response angular devs might update pull request ping devs soon", "d": "5/2017"}, {"body": "hi run problem want store current url redirect successful login relying canactivate means sometimes lazy module loaded unnecessarily nt ideal marcuskrahl know angular dev ping router prs", "d": "5/2017"}, {"body": "want let hope move", "d": "5/2017"}, {"body": "bueller", "d": "5/2017"}, {"body": "word", "d": "5/2017"}, {"body": "anything new request", "d": "5/2017"}, {"body": "nt know acceptable work around use override component reset changedetectionstrategy default component initialization like", "d": "5/2017"}, {"body": "overriding change detection described nt work however", "d": "5/2017"}, {"body": "issues well way got around typescript describe loadingindicatorcomponent gt let component loadingindicatorcomponent let fixture componentfixture calling detectchanges block tests began pass feel like good behavior tests needs better documented really threw loop angular cli generates components detect changes beforeeach specify want change detection", "d": "5/2017"}, {"body": "running issue deploying new release lazy loaded bundles cachebusting hashes filenames users leave app open tab long time returning new release trying navigate error happens error loading chunk x failed way handle routing errors", "d": "5/2017"}, {"body": "camusaran webpack added error callback u use u modify return special error failed chunk load handle regular router event done lazyload plugin webpack", "d": "5/2017"}, {"body": "artaommahe using angular cli", "d": "5/2017"}, {"body": "work either ngoninit let controls thismyformcontrols", "d": "5/2017"}, {"body": "works solution expanded process full form tree recursion", "d": "5/2017"}, {"body": "trying use code alexzunder throws following error form var declared way", "d": "5/2017"}, {"body": "khalav sorry declared form contex formgroup object reactive forms", "d": "5/2017"}, {"body": "soon drop metadata build steps aot igorminar haver tracking bug", "d": "5/2017"}, {"body": "update used gbs simple bootstrap project even gbs could nt command worked", "d": "5/2017"}, {"body": "still unable lazyload wildcard routes angular fixed somewhere", "d": "5/2017"}, {"body": "updates since logic checking accesstoken presence queryparams need actual value first activatedroutequeryparams notification update actual real queryparams published afterviewinit root component", "d": "5/2017"}, {"body": "sorry notices closed", "d": "5/2017"}, {"body": "workaround manual windowlocationhref parsing ngoninit root component", "d": "5/2017"}, {"body": "closing duplicate", "d": "5/2017"}, {"body": "news structural directives microsyntax allow outputs something could useful component libraries looks like issue abandoned months like know really never going happen pushed lot thanks", "d": "5/2017"}, {"body": "update", "d": "5/2017"}, {"body": "issue make angular work csp make angular cli work csp well would wonderfull angular angularcli could actually used create something secure", "d": "5/2017"}, {"body": "cpalevelit great solution zone working project really interested observable socketservice would able share rest code socketservice", "d": "5/2017"}, {"body": "sure typescript export class socketioservice export class socketiocallbackpair constructor public packet public callback export class socketioconnectionstateevent public constructor public type string", "d": "5/2017"}, {"body": "erikgrijzen problem already fixed", "d": "5/2017"}, {"body": "jaumard know already possible use json format translations ever used native module thirdparty module", "d": "5/2017"}, {"body": "possible right json serializer", "d": "5/2017"}, {"body": "fndmiranda solution yet nt search lot honest", "d": "5/2017"}, {"body": "please update documentation", "d": "5/2017"}, {"body": "also facing issue one please suggest", "d": "5/2017"}, {"body": "skuriles still work angular", "d": "5/2017"}, {"body": "thank hheexxyour solution worked mei used angular core angular browser bundle angularb b bundleslinker node bundleno warnings", "d": "5/2017"}, {"body": "closing since animations rebuilt please reopen shows", "d": "5/2017"}, {"body": "hy also would like see problem disabled fields existing formvalue fields come request would like set readonly send values also form submit another api get values formcontrols set request body able send making life bit harder never really like workarounds even really rare case someone working feature", "d": "5/2017"}, {"body": "problem way disable form control send form submit prepopulated fields must submitted user ca nt edit", "d": "5/2017"}, {"body": "used jonymul code small problem browser history useless entry url root app means go actual previous page click back twice used instead fix", "d": "5/2017"}, {"body": "ocombe still working design lot unexpected things take account like libraries could ship translations important hope part feature moment nt see way library provide translations application build may specify xliff file seems prebuild library language ability translate", "d": "5/2017"}, {"body": "yeah waiting important projects intended nonenglish speaking audiences", "d": "5/2017"}, {"body": "definitively something want support team working refactoring compiler allow us", "d": "5/2017"}, {"body": "estimate version targeted read somewhere might around", "d": "5/2017"}, {"body": "refactoring breaking changes necessary wo nt afraid", "d": "5/2017"}, {"body": "whaaaat oh noo im waiting feature said thinking dynamic language changing release fir version anyway hope one day even different build language wonder thanks ocombe", "d": "5/2017"}, {"body": "istiti said guaranteed date release schedule final release betas rcs", "d": "5/2017"}, {"body": "armno typeerror read property assertpresent undefined nt disappear correct order imports expected running proxy zone error disappears make assertpresent disappear need tweak coretestingumdjs file add check like instead proxyzonespec inside resetfakeasynczone method undefined hence error ps function line js file", "d": "5/2017"}, {"body": "needed implement return link sent rxjs rabbit hole implementation pairwise work user nt trigger navigation event least two times may cause small bug page page navigation event triggered event observable value thus pairwise emit user go back page page page event observable elements pairwise emits better implementation could potentially use buffercount rxjs navigationstart triggered page links page page page however seems navigationstart nt trigger page links page destination page page expected behaviour difference navigationstart navigationend import component oninit angularcore import navigationstart router angularrouter import rxjsaddoperatorfilter import rxjsaddoperatorbuffercount component selector appprofiledetails templateurl profiledetailscomponenthtml styleurls profiledetailscomponentcss export class profiledetailscomponent implements oninit constructor private router router ngoninit void thisroutereventsfilter e gt e instanceof navigationstart buffercount subscribe e gt consolelog e url nth emission source observable cause output observable emit array th nth previous current value pair reason emits second subsequent emissions source observable first emission previous value case check code pairwise hacked return undefined element event element buffer easily maybe take rxjs team", "d": "5/2017"}, {"body": "houmankml needed implement return link think need rx service", "d": "5/2017"}, {"body": "tytskyi thanks link explained use case sure locationback would work want return button appear user redirected profile details profile page however nt want appear user lands profile details page somewhere else eg searching specific profile main page admit possible solutions solve similar use cases adding new feature modifying current behaviour navigationstart urgent example one using redux location history array updated time navigation action issued though nt like particular approach global state would redundant navigation event observable exactly global history array working rxjs fun", "d": "5/2017"}, {"body": "another issue considers adding information previous route activatedroute would flexible easytouse solution since taken advantage eg guards", "d": "5/2017"}, {"body": "chuckjaz recently encountered generated library metadatajson attached however original ts files library able compile aot conditions perfectly leads believe instead compiling ngc could bigger package deploy ts code true note understand nt compile js writers would able use library unless compiled ts first", "d": "5/2017"}, {"body": "posting explanation might use one future one wants use custom structural directive reference template like within component needs use desugered version template angular compiler converts html data mydirectivedata able grab value desugered version placed child parent real access since div became child directive desugering fail order make work use desugered version directly way telling angular pick reference directive amp place reference placed proper modified original plunkr show example", "d": "5/2017"}, {"body": "cschulz thanks example child component put required field input check form valid find always form valid wrong required field empty find solution", "d": "5/2017"}, {"body": "execute manually validation check group fe", "d": "5/2017"}, {"body": "closing favor", "d": "5/2017"}, {"body": "still issue angular", "d": "5/2017"}, {"body": "ayrad example using work well two methods different signature afraid nt work", "d": "5/2017"}, {"body": "tragetaschen chuckjaz fyi issue generic parameter defaults introduces ts", "d": "5/2017"}, {"body": "sadly really first example class generic parameter varies parameter depending actual application way choose default parameter second example type drop varies per instance also default parameter way probably helps using default", "d": "5/2017"}, {"body": "exactly solution default sent iphone may pm kai ruhnau notifications githubcom wrote sadly really first example class generic parameter varies parameter depending actual application way choose default parameter second example type drop varies per instance also default parameter way probably helps using default receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "workaround otherservicets utilservicets typescript import injectable angularcore import observable rxjsobservable import activatedroute params angularrouter injectable export class utilservice constructor getallrouteparams params observable route activatedroute outlet string primary observable let children activatedroute routechildrenfilter c activatedroute gt return coutlet outlet", "d": "5/2017"}, {"body": "nt work delaying dynamic component creation also trick", "d": "5/2017"}, {"body": "hello workaround fix issue", "d": "5/2017"}, {"body": "gtzinos tried ask twitter morning nt know either months luck workaround yet", "d": "5/2017"}, {"body": "far found working demo lazy loading named router outlet ex made plunkr find way make work without success help would much appreciated example lazy loaded default routeroutlet lazy loaded named routeroutlet without success", "d": "5/2017"}, {"body": "much frustrating experimentation success getting nested lazyloaded modules use named routeroutlets angular project module routing hierarchy followed route configuration first three modules required number componentless parent routes appcomponent eager start startcomponent startsignin signincomponent startregister registercomponent lazy main maincomponent lazy mainlibrary librarycomponent mainlibrary manualid mainlibrary manualid sectionid mainlibrary manualid sectionid procedureid mainlibrary manualid sectionid procedureid procedurestepid mainlibrary manualid sectionid procedureid procedurestepid contentid lazy inboxcomponent maininbox assignmentid maininbox assignmentid taskid maininbox assignmentid taskidcontent contentid maininbox assignmentid taskidcomment commentid maininbox assignmentid taskidfeedback feedbackid lazy exchangecomponent approutingmodule mainroutingmodule libraryroutingmodule", "d": "5/2017"}, {"body": "keithgillette exactly make work change anything working since demo plunkr running still working", "d": "5/2017"}, {"body": "hi tried get working prior using angular things tripped along way leaving lazyloaded modules imports attempting make route entries named outlets direct children path loading component primary named auxiliary routeroutlets attempting name paths containing components load said routeroutlets last two points note extra componentless route contains actual path groups unnamed child routes actually load component specified unnamed parent route", "d": "5/2017"}, {"body": "keithgillette exactly outlet named detail librarycomponent", "d": "5/2017"}, {"body": "correct nekkon sorry nt noticed github markdown parser ate outlet definitions module routing hierarchy included original post corrected markdown display router outlets associated component", "d": "5/2017"}, {"body": "keithgillette noticed detail outlet empty path tried work nonempty path working problem reported plunkr", "d": "5/2017"}, {"body": "hi royling correct though path effect unique name componentless parent way could get named outlets work original post reported lazyloaded modules ou create fake component operate first route others thread seem unable get named routing outlets work lazyloaded modules sure fully understand original poster issue case found need fake components get named outlets nested lazyloaded modules work emptypath child routes componentless route workaround unless design may helpful least others unable get auxiliary routes working", "d": "5/2017"}, {"body": "keithgillette workaround helpful scenario want always load component auxiliary outlet would like load different routes outlet conditionally name routes unique paths work think common use case", "d": "5/2017"}, {"body": "following royling using workaround posted load arbitrary components components primary named auxiliary outlets conditionally based unique path long unique path specified componentless parent route components load given outlets specified pathless child routes uniquely named componentless parent route shown", "d": "5/2017"}, {"body": "keithgillette hero hours fighting stumbled across post sure enough trying use named router outlet root component lazyloaded module found rabbit hole confirm well add outlet entry child named route works expected broken fixed makes absolutely sense could find examples documentation explains exists workaround", "d": "5/2017"}, {"body": "keithgillette yes right workaround ok thanks gt long unique path specified componentless parent route gt given outlets specified pathless child routes uniquely named componentless parent route update debugging workaround pathless auxiliary route url never including aux part normal path aux route url include imho seems like root cause original bug reported sounds like working around bug root cause bug", "d": "5/2017"}, {"body": "royling wondering tested trying remove secondary route component something like tried part still broken even workaround let know works eventually move different solution altogether wanted someone else verify", "d": "5/2017"}, {"body": "hi issue mentioned post two different applications need usage thisi question router recognize route url named router outlet dropping ps till today thinking angular architecture allows thought like external small application case whole application must initialized start", "d": "5/2017"}, {"body": "jonesmac nt think syntax work nt want component appear named secondaryauxiliary outlet nt include child route given path example routes workaround example given componentless parent route want named outlet filled omit entire second child route entry specifies outlet name", "d": "5/2017"}, {"body": "shown configuration workaround example path provided angular router componentless parent path pathless child routes tell router display primary namedsecondary router outlets", "d": "5/2017"}, {"body": "jonesmac also failed remove aux outlet keithgillette said workaround could create another route wo named outlet navigate one remove outlet mentioned earlier imho expected url part aux outlet always included even pathless outlet", "d": "5/2017"}, {"body": "might fixed", "d": "5/2017"}, {"body": "brandonroberts thanks unfortunately suggested approach work aot case surprised obvious logical feature implemented maybe reason", "d": "5/2017"}, {"body": "felipedrumond would please fix typo issue title scrool scroll case impacts others finding", "d": "5/2017"}, {"body": "anyone know utilizing official intended way handle make route scrolling behave however want like example though personally believe navigating forward scrolls top back restores scroll position normal expected web behavior default right trying figure angular team expects handled", "d": "5/2017"}, {"body": "correct", "d": "5/2017"}, {"body": "concocted version code split directiveservice reason directive nt window scrollable scrollable flexbox divs instead needed way attach scroll tracker child elements feel free use helps working quite well one thing note whatever element want store scroll position needs attribute applied", "d": "5/2017"}, {"body": "internal note downlevel decorators tsc transform fix", "d": "5/2017"}, {"body": "gluix know called work put location automatically another cycle check later inside ngafterviewinit", "d": "5/2017"}, {"body": "spent hours figuring working found bug still working angular", "d": "5/2017"}, {"body": "like tragetaschen said defining subfeature modules routing worked really well someone searching like example appmodulets approutingmodulets dashboardmodulets dashboardroutingmodulets dashboardoverviewmodulets dashboardoverviewroutingmodulets scales really well define used route names parent module great eliminates collisions imagine route defined feature module importing two foooverview baroverview reason route path would overview gt conflict define paths parent module beware import module parent module enough import routermodule loadchildren", "d": "5/2017"}, {"body": "stefanrein tried implementing example logically seems would work however getting error ideas error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file resolving symbol approutes srcappapproutingmodulets resolving symbol approutingmodule srcappapproutingmodulets", "d": "5/2017"}, {"body": "stefanrein answer worked development got error mikedub compiling production syntax current routing documentation worked development production relevant snippet give loadchildren property children property set address adminmodule address adminmodule file location relative app root followed separator followed name exported module class adminmodule", "d": "5/2017"}, {"body": "mikedub typescript angular version using difference see using predefined webpack co preferences running equally ionic serve production command compiles fine one try recommendation message like inserting exported loadadminmodule function generate different error message excerpt packagejson versions", "d": "5/2017"}, {"body": "stefanrein excerpt packages used angularcli build project used angularcli start project yesterday morning nt added anything build process base angularcli build process try recommendation message like granted code admindashboard sample code example reason nt work clear loadchildrencallback type signature simply returning class case nt meet criteria also tried wrapping promise nt work either error trace", "d": "5/2017"}, {"body": "please show meetroutingmodulets btw please delete double post promise returns module needs return function returns module typedts", "d": "5/2017"}, {"body": "stefanrein yes decorator relevant code appmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import appcomponent appcomponent import coremodule corecoremodule import sharedmodule sharedsharedmodule import routermodule routes angularrouter import meetmodule meetmeetmodule import eventmodule eventeventmodule const approutes routes path redirectto pathmatch full ngmodule declarations appcomponent imports browsermodule formsmodule httpmodule coremodule sharedmodule eventmodule meetmodule routermoduleforroot approutes providers bootstrap appcomponent export class appmodule meetmodulets import ngmodule angularcore import commonmodule angularcommon import meetroutingmodule meetroutingmodule import meetdetailcomponent meetdetailmeetdetailcomponent import meetlistcomponent meetlistmeetlistcomponent import meetservice meetservice ngmodule imports commonmodule meetroutingmodule providers meetservice declarations meetdetailcomponent meetlistcomponent export class meetmodule meetroutingmodulets import ngmodule angularcore import routermodule angularrouter import meetlistcomponent meetlistmeetlistcomponent import meetdetailcomponent meetdetailmeetdetailcomponent ngmodule imports routermoduleforchild path meets component meetlistcomponent path meets id component meetdetailcomponent children path events loadchildren appeventeventmodule eventmodule exports routermodule export class meetroutingmodule eventmodulets import ngmodule type angularcore import commonmodule angularcommon import eventlistcomponent eventlisteventlistcomponent import eventservice eventservice import eventroutingmodule eventroutingmodule ngmodule imports commonmodule eventroutingmodule declarations eventlistcomponent providers eventservice export class eventmodule eventroutingmodulets import ngmodule angularcore import routes routermodule angularrouter import eventlistcomponent eventlisteventlistcomponent const routes routes path component eventlistcomponent ngmodule imports routermoduleforchild routes exports routermodule export class eventroutingmodule", "d": "5/2017"}, {"body": "separate module component practical method reuse components across different modules without creating dedicated modules big shared module together causing load needing one", "d": "5/2017"}, {"body": "real difference lines problematic import ngmodule angularcore import commonmodule angularcommon import mycomponent mycomponent ngmodule declarations mycomponent imports commonmodule export class mymodule", "d": "5/2017"}, {"body": "technically speaking difference problem organizing aspect creating lot noise imagine dozens components requiring additional module file containing exact code saying impossible saying must better way", "d": "5/2017"}, {"body": "fully understand components modules one project loaded programmatically clear organization part file component module difference point view think lines repeated real problem using angular alfa phase know ngmodules sure added lost", "d": "5/2017"}, {"body": "well sure could worst course think think make better think real solution performance organization wise option lazy load component deps way wo nt mind importing huge module using several components importantly wo nt loading processing parsecompilestoring etc dozens components nothing runtime", "d": "5/2017"}, {"body": "yes right exactly programmatically lazy load module component need one concrete moment programatically using depend business logic routes could done via angular router really necessary still difference lines code defining module structure module", "d": "5/2017"}, {"body": "encounter problem slash url encoded work rounte", "d": "5/2017"}, {"body": "someone share working solution allows vertical scrolling using swipeleft swiperight life figure config look like import hammergestureconfig hammergestureconfig angularplatformbrowser export class customhammerconfig extends hammergestureconfig public overrides swipe direction touchactionswipe", "d": "5/2017"}, {"body": "edit saw posting code already provided code months ago nt know whether delete comment never corrected one mention later edit chrillewoodz works import hammergestureconfig hammergestureconfig angularplatformbrowser export class customhammerconfig extends hammergestureconfig overrides pinch enable false rotate enable false ngmodule declarations imports providers provide hammergestureconfig useclass customhammerconfig bootstrap appcomponent export class appmodule unfortunately nt found solution nt disable pinch rotate assume completely disables usage gestures", "d": "5/2017"}, {"body": "chrillewoodz figure experiencing dilemma yet figure solution", "d": "5/2017"}, {"body": "well creating wrapper directive", "d": "5/2017"}, {"body": "main issue container removes sub animations get run parent always wins even parent nt animation children get chance animate yesterday animation patch callbacks fire child elements even parent animation inflight removal also landed parent animation query inner animations let run let try putting together demo next day two release", "d": "5/2017"}, {"body": "think one issue explained also applies one cold observable returned http request get post shared subject issue subscribe multiple times subject remains", "d": "5/2017"}, {"body": "manklu could explain code perhaps point explanation worked simple case tried apply complex form building components application throws provider controlcontainer error", "d": "5/2017"}, {"body": "agree wschaef please reopen issue facing issue", "d": "5/2017"}, {"body": "closed documentation still wrong", "d": "5/2017"}, {"body": "probably closed docs issues used tracked reopening since tracking docs issues repo drumarcco could please submit new pr file", "d": "5/2017"}, {"body": "pr opened gkalpak", "d": "5/2017"}, {"body": "dzmitryshylovich nt see outdated", "d": "5/2017"}, {"body": "using zonejs angular nt know really relates bug somebody point running code got error periodic timer still queue always even discardperiodictasks nt help move subscribe magically works", "d": "5/2017"}, {"body": "adrm try instead constructor interested would work updated code remove null union", "d": "5/2017"}, {"body": "wizarrc works definitely correct answer case inject nt work try add type seems confuse di thanks", "d": "5/2017"}, {"body": "adrm good hear updated comment", "d": "5/2017"}, {"body": "adrm another thought parameter maybe would work instead using instead mention strictnullcheck mode want compiler make sure check exists try dot", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "anyone help one", "d": "5/2017"}, {"body": "oddlyfunctional honpery viralstegowl happens please create new issue reproduction inside", "d": "5/2017"}, {"body": "matsko please share progress", "d": "5/2017"}, {"body": "fayezmm trick wonder way also would rewritten using like code style says", "d": "5/2017"}, {"body": "well see npm angularanimations released without query", "d": "5/2017"}, {"body": "released see", "d": "5/2017"}, {"body": "also looking also see ways eg get dimensions element also best answer seems elementrefnativeelement lacking methods also eventtarget null", "d": "5/2017"}, {"body": "worked matrix params hidden url required links need flag set others work normal urls", "d": "5/2017"}, {"body": "want replace id name still send id server get data", "d": "5/2017"}, {"body": "pace lazarljubenovic product manager number people asking particular feature critical factor determining prioritise said feature shut nt good way help product managers get data need make good decisions prioritisation keep comments coming keep respectful think everyone respectful issue therefore asking rfe prioritised release shortterm lack ability bind animation values major limitation angular animation perhaps wrong nt seem expensive terms dev cycles know ca nt project properly without respectfully", "d": "5/2017"}, {"body": "trying integrate gsap much luck support would really valuable", "d": "5/2017"}, {"body": "glinkot example state based animations gsap perfect gives lot control animations", "d": "5/2017"}, {"body": "cool thanks blake nt seen webpackbin looking good spot sandbox angular things codepen nt make easy hopefully allows usage gsap stuff like codepen topic thread ask somewhere else guess", "d": "5/2017"}, {"body": "curious new api looks like look video", "d": "5/2017"}, {"body": "still issue", "d": "5/2017"}, {"body": "edit resolved per followon messages html heroname rendering", "d": "5/2017"}, {"body": "anyone plunkr producing current angular seen issues initially appear similar turn instead consequence observable subscribed becomes true enters view", "d": "5/2017"}, {"body": "dynalon kylecordes please see plnkr added line literally code given angular tutorial using wrong love shown starting", "d": "5/2017"}, {"body": "huiguangliang yes adding changed semantic search pipe inside subscribe search result received bug angular code observables default cold cache value unlike promises subscribe item emitted get item solution turn cold observable hot observable cashes last element using change made plus importing publishreplay plunkr works fine agree issue mostly people understanding rxjsobservables real plunkr shows issue angular except relying hard grasp rxjs another topic huiguangliang look plunkr try understand difference hot cold observables read replaysubject vs behavioursubject vs subject", "d": "5/2017"}, {"body": "dynalon thanks clarifying indeed works good explanation", "d": "5/2017"}, {"body": "generally thing dynalon said", "d": "5/2017"}, {"body": "dynalon code creates subscribers heroes subscription example get duplicate invocations result", "d": "5/2017"}, {"body": "understand problem however solution besides turning observable hot observable seems like overkill template require one subscription want make sure tag produced elements far seems like best solution use list instead observable", "d": "5/2017"}, {"body": "angular try heroname", "d": "5/2017"}, {"body": "approach works like charm fixed plunker thanks lot answer", "d": "5/2017"}, {"body": "delagen great alternative works perfectly thanks suggestion", "d": "5/2017"}, {"body": "looks good would suggest needs better documented ie naive solution given top naive solution nt work alternative options listed raises question documented maybe", "d": "5/2017"}, {"body": "would helpful", "d": "5/2017"}, {"body": "would awesome last missing piece", "d": "5/2017"}, {"body": "matsko version fix still reproduce", "d": "5/2017"}, {"body": "feeling causing infinite loop error template tick function called", "d": "5/2017"}, {"body": "zoechi agreed default behaviour ending infinite loop error template nt seem like great idea", "d": "5/2017"}, {"body": "think running problem really annoying dev mode working try loading page error view created bound variable nt exist component angular goes infinite error loop literally kill browser process stop nt used happen going maintain new behavior adding max consecutive error threshold least nt completely hang browser", "d": "5/2017"}, {"body": "calling tick anything else saying think manually calling tick got basic component basic template template tries bind component property nt exist get infinite loop attach screenshot started happening nt see could possibly expected desired behavior", "d": "5/2017"}, {"body": "zoechi see lot prs fixing issue version prs go might simply using older version", "d": "5/2017"}, {"body": "zoechi thanks switch test", "d": "5/2017"}, {"body": "plunker reproduces issue template invalid keeps logging console wild guess might related handler executing code nt happen current tick settimeout http promise etc", "d": "5/2017"}, {"body": "close seeing similar stack trace though plunker nt hanging browser happens app anything uses settimeout etc suppose possible one dependencies could primeng etc regardless hope solution found things worked fine recently assume introduced", "d": "5/2017"}, {"body": "realised settimeout trigger change detection solution probably run runoutsideangular updated plunker", "d": "5/2017"}, {"body": "probably something similar something must triggering change detection handler", "d": "5/2017"}, {"body": "deleted comments somehow misinterpreted issue sorry confusion suggest create new issue comments closed issues least officially ignored", "d": "5/2017"}, {"body": "eta fix issue", "d": "5/2017"}, {"body": "hello happening people dealing everyone decided ignore angular builtin date pipe since nt work properly", "d": "5/2017"}, {"body": "still using momentbased workaround listed comments issue see latest version thereof unless certain none users using ie builtin formatter essentially useless issue unaddressed", "d": "5/2017"}, {"body": "webpack worked well took way less time learn webpack scratch add project spent trying get systemjs bundling working", "d": "5/2017"}, {"body": "news handled scenarios could needed different users animate parent container animate children parallel parent container", "d": "5/2017"}, {"body": "news", "d": "5/2017"}, {"body": "natcohen suggestion include upcoming features", "d": "5/2017"}, {"body": "running tests docs examples every build although optional travis task take long", "d": "5/2017"}, {"body": "found end breaking form across components easier actually keep handle formgroupformcontrol objects use formgroup amp amp formcontrol try find work around use formgroupname amp amp formcontrolname dynamically generate form infinitely resources allowing nested arraysobjects form controls edit well apparently hit another roadblock implementation formarray formarrayname would different editedit carrying formgroup reference worked case well", "d": "5/2017"}, {"body": "problem iamkritika", "d": "5/2017"}, {"body": "could guys implement functionality using array selected items component like use separately manipulate array experience works", "d": "5/2017"}, {"body": "closing issue please follow plans beyond", "d": "5/2017"}, {"body": "explained api docs function return promise nt clear", "d": "5/2017"}, {"body": "confusing names inituitive", "d": "5/2017"}, {"body": "also asked digging lot find word container misleading anchor much appropriate mention clear method clear content actually see desugared effect clearly see content appended end template section", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "restarting worked", "d": "5/2017"}, {"body": "fadzic add directive host element componentts like need parameters like elementref also need add directive host element redirected issue able needed using code way expert using angular workaround seems work far someone issues approach let know thanks", "d": "5/2017"}, {"body": "btinoco nt work lifecycle methods get called manually wire everything component uses directive rather angular wire", "d": "5/2017"}, {"body": "hccampos thanks heads tried directive execute unless use directive component manually call directive component thank letting know", "d": "5/2017"}, {"body": "btinoco yes subtle nasty issue one angularflexlayout hopes get fixed soon", "d": "5/2017"}, {"body": "news angular team year since issue opened", "d": "5/2017"}, {"body": "finding detailed description issue super cool finding feedback angular team super uncool", "d": "5/2017"}, {"body": "regarding already working solutions feature request sounds much like mixins fact bullet description feature actually matches official documentation typescript see angular becomes little worse though mixin class redeclare base class anther solution already works today would make component contain wrapper element apply directives eg component contained template like regarding create helper function service directly elementrefnativeelement yes seems like good idea well would care webworkers still experimental missing bigger features production almost library would work webworkers see eg also material library accesses dom directly", "d": "5/2017"}, {"body": "regarding option proposal current semantics host property bindings set property underlying html element directive however also introduce directives users could write following would confused update property directive regarding option option introducing kind bindings directives element lead cycle data binding graph angular support therefore lead hard debug errors stale values expression changed checked errors lead additional perf overhead compared directives injecting communicating directly regarding option proposal yes refer class seems odd directives triggered via", "d": "5/2017"}, {"body": "thomasburleson let talk offline use case details", "d": "5/2017"}, {"body": "tbosch like propose another option introduce native angular tag let call note mhevery proposed introduction tag however even though using tag name proposing separate meant specifically address issue raised tag would implemented regular directivecomponent class would instead magic framework code similar etc tag would simply serve pointer component host way analogous css host selector avoid ambiguous scenarios component would allowed one block would root tagnode component template one would use typescript option use declarative intuitive component selector gbtn template", "d": "5/2017"}, {"body": "way tbosch thank responding really appreciate engagement feedback issue", "d": "5/2017"}, {"body": "everyone else thoughts functionality specific components would also make sense directive could apply different directive host use case started subscribing issue involved thirdparty directives wanted isolate code case wanted change later b wanted apply default functionality instance without duplicate setup every time used example tooltip directive going applied large number elements throughout application want default delay appendtobody nt support centralized config object nt support central config object put three four attributes everywhere wanted use later end moving away library started using material tooltips manually replace every tooltip able create directive wrapped would simple changing directive apply mdtooltip host instead library", "d": "5/2017"}, {"body": "mikematusz looks like mind well snippet", "d": "5/2017"}, {"body": "would possible create property decorator instantiates directive example would work components well directives provide instancereference interaction would nt get lost inheriting componentdirective guess gets complicated also want provide input event bindings", "d": "5/2017"}, {"body": "yes also running issue", "d": "5/2017"}, {"body": "dzmitryshylovich mbhalera ca nt verify anymore cancelled project however unresolved stopped working", "d": "5/2017"}, {"body": "make sure enum type export thanks", "d": "5/2017"}, {"body": "today got release rxjs works closure compiler updated example repo externs cleaned well angular zonejs distribute needed externs respective packages add documentation announcement support shortly", "d": "5/2017"}, {"body": "way point idea end integrating rest existing tooling eg might eventually option added ngtoolswebpack automatically run aot output closure andor documented configuration steps webpackclosurecompiler something necessarily supersede webpack", "d": "5/2017"}, {"body": "possible implement closure", "d": "5/2017"}, {"body": "routerlinkactive active anchor tag solves problem v", "d": "5/2017"}, {"body": "leff requiring something element upgradeable upgraded component essentially becomes angular component ie owned angular angularjs also affects directives appear element ca nt angularjs directives upgraded component anything inside upgraded component template owned angularjs directives filters etc work expected although related usecase requiring ancestor angularjs directive also works upgraded components look nearest angularjs element required directive html require ngmodel get", "d": "5/2017"}, {"body": "gkalpak technical explanation accurate sure actually helpful trying upgrade components use angularjs angular might worth updating documentation indicate angularjs angular upgrade path provided developers need rewrite components", "d": "5/2017"}, {"body": "ngmodel reason abandoned upgrade path went full rewrite take months lines old app new app plus side way easier write components use ngmodel far test angularjs every time also made testing way easier cents", "d": "5/2017"}, {"body": "still happening", "d": "5/2017"}, {"body": "issue able resolve taking tag componentts use using angluarcli webpack weird", "d": "5/2017"}, {"body": "zoechi necessary use use http post custom return without map would give typescript error saying expected", "d": "5/2017"}, {"body": "problem took hours used material component angular material primeng searched wrong cause style append components thanks god came mind could angular problem someone googles problem uses primeng angular material solution simply insert component definition", "d": "5/2017"}, {"body": "darklinki think using better option", "d": "5/2017"}, {"body": "zoechi want rewrite complete css files every time u update package sure way use deep complete css files", "d": "5/2017"}, {"body": "darklinki nt know mean related update package mean complete css files", "d": "5/2017"}, {"body": "zoechi css element deep selector styles understand right would use deep every style declarations cause import css files themes angular material primeng would change style documents looks like much work updating package would reverted know css files could excluded", "d": "5/2017"}, {"body": "nt deprecated", "d": "5/2017"}, {"body": "yousseftaghlabi deprecated chrome relevant angular emulates rewrites selector combinators view encapsulation applied resulting selector wo nt contain", "d": "5/2017"}, {"body": "hi digging issue someone looking sometime soon best", "d": "5/2017"}, {"body": "kormic using good idea however deprecated used also changed combined kormic mtpultz workarounds seems working fairly well atm", "d": "5/2017"}, {"body": "splaktar angular universal app avoid server exception way works server message windowscrollto window defined thiselementnativeelementscrollintoview false scrollintoview defined thisrenderersetproperty documentbody document defined", "d": "5/2017"}, {"body": "hours work finally found solution server side rendering", "d": "5/2017"}, {"body": "fyi anyone cares probably also cares preserving scroll position previous views navigating back separate issue", "d": "5/2017"}, {"body": "question combined hash anchors supported box known like iterations routers angular click link scroll top click link go page scroll page scroll hit back forward go nt hard thought solved like someone google please get standup knock heads needs fixed yesterday nt write hacks every browser since lynx able", "d": "5/2017"}, {"body": "fikkatra dont know look like simple complicated", "d": "5/2017"}, {"body": "zoechi take op wish keep using declarative terseness opposed listening unlistening tofrom event imperatively pkozlowskiopensource think issue related debouncing ratereduction turning listener something happens something like unexistent syntax ts hostlistener document mouseup event mypredicate ondocumentmouseup evt mouseevent mypredicate boolean return shouldlistenornot robwormald interested know plug observable hostlistener gets listenedunlistened appropriately thanks like know well progress thanks everyone", "d": "5/2017"}, {"body": "clear decision supported long term probably ought removed form documentation would rather stuck around", "d": "5/2017"}, {"body": "aperl pretty sure plans remove long good replacement afaik currently nt therefore reason remove docs", "d": "5/2017"}, {"body": "dzmitryshylovich still experiencing behaviour using angular", "d": "5/2017"}, {"body": "example nicely tests existing angular implementations controlvalueaccessor eg checkbox value accessor", "d": "5/2017"}, {"body": "juliemr", "d": "5/2017"}, {"body": "developing new enterprise application stumbled upon problem today starting use angular estimates going fixed could least provide welldocumented workarounds thank", "d": "5/2017"}, {"body": "slavafomin want input dynamic type need create wrapper component render inside input proper type bit manual work trial mistakes end worth able something like official docs moment could look example", "d": "5/2017"}, {"body": "thank tytskyi suggestion decided reference directly instead referencing generic issue really blocker annoyance takes time figure", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "mrjmd tbosch noticed got closed recently wondering passing inspecifying templateurl supported", "d": "5/2017"}, {"body": "playground exactly would like pass templateurl", "d": "5/2017"}, {"body": "widgets others embed passing certain configurations child component get initialized based values wondering something like allow different view component based specified template", "d": "5/2017"}, {"body": "playground sounds bit like dynamic components dynamic content projection", "d": "5/2017"}, {"body": "cool thanks give try", "d": "5/2017"}, {"body": "implemented bootstrap hook initializes entry components defined page still uses hack anyone better way achieving change rootselectorornode still planned typescript const entrycomponents testcomponent ngmodule declarations entrycomponents entrycomponents entrycomponents imports browsermodule providers export class mymodule constructor private resolver componentfactoryresolver ngdobootstrap appref applicationref entrycomponentsforeach component gt const factory thisresolverresolvecomponentfactory component const elements documentgetelementsbytagname factoryselector elementslength gt elementslength gt const originalselector factoryselector let lt elementslength elements id originalselector fixme property readonly factory factoryselector elements id apprefbootstrap factory factory factoryselector originalselector else apprefbootstrap factory", "d": "5/2017"}, {"body": "hi updates", "d": "5/2017"}, {"body": "hello workarounds solve issue", "d": "5/2017"}, {"body": "check time", "d": "5/2017"}, {"body": "dcarabott already used solutions ca nt applied cases", "d": "5/2017"}, {"body": "hi issue waiting fix", "d": "5/2017"}, {"body": "seems solutionsworkarounds agree one create pull request", "d": "5/2017"}, {"body": "systemdisc workaround nt work expected need solution", "d": "5/2017"}, {"body": "humberd fantastic wrapper trying way work around luck far thank quick question though let say static function async validation obversable inside customasyncvalidator class implementing asyncvalidator use services passed contractor customasyncvalidator example pass validator function sure static method export class emailvalidator implements asyncvalidator contractor private emailservice emailservice static asyncemailvalidator c abstractcontrol observable let email cvalue making call backend return new observable observer gt thisemailservicevalidateemail email subscribe gt observernext null error gt observernext emailnotvalid true", "d": "5/2017"}, {"body": "hbweb go", "d": "5/2017"}, {"body": "thanks humberd yeah would work perfectly however actual problem ca nt access singleton emailservice service object class contractor asyncemailvalidator static method converting static asyncemailvalidator function back normal function cant use syntax", "d": "5/2017"}, {"body": "hbweb opinion create service inject component requires validation object pass method asyncvalidatorwrapper", "d": "5/2017"}, {"body": "humberd agree ca nt see way unless hacky way storing service object static variable inside emailvalidator", "d": "5/2017"}, {"body": "humberd aaaaah reason create emailvalidator service pass validation method wrapper injected service object longer available make http call angular responded undefined object working example case tks", "d": "5/2017"}, {"body": "really hope addressed angular solutions confirm api ergonomics great", "d": "5/2017"}, {"body": "utilising reactive talk ngrxforms feedback welcome one many issues could elegantly address", "d": "5/2017"}, {"body": "actually instead passing emailvalidatorasyncemailvalidator wrapper could ngoninit initialise custom validator object pass emailservice object form control", "d": "5/2017"}, {"body": "suppose work reactive forms nonstatic functions validator export class sitevalidator thissiteform thisformbuildergroup id thissiteid validatorsrequired numbervalidatornumbersonly qstasyncvalidatorwrapperdebounce thissitevalidatorsiteexistsbind thissitevalidator validator getting called", "d": "5/2017"}, {"body": "humberd use custom wrapper expose debounce vs generic solution rxjs calls", "d": "5/2017"}, {"body": "matthewerwin pass observable async validator angular subscribe every time press key press key times angular subscribe different instances observable wrapper angular always subscribe instance therefor debounce key press events whatever want", "d": "5/2017"}, {"body": "fact wrapper nt perfect explain let say async validation takes seconds press key debounce time angular subscribes observable takes mentioned seconds complete mean time subscription progress nt completed yet press another key debounce time angular subscribes nt unsubscribe previous one first key press subscription completes angular sets response error second one ignored", "d": "5/2017"}, {"body": "quick workaround unsupported currencies use decimal pipe format number search html code currency place beside formatted number", "d": "5/2017"}, {"body": "think doable absolute necessity building reusable components fairly intuitive markup closest come achieving use attribute selectors things want effectively replace nt lend well build intuitive components", "d": "5/2017"}, {"body": "implement", "d": "5/2017"}, {"body": "following code intuitively tried use hoping would work think would great convenient addition api suggested api", "d": "5/2017"}, {"body": "well afterviewinit work coming component sometimes scrolls sometimes nt afterviewchecked worked even gets called multiple time", "d": "5/2017"}, {"body": "one main problem charlesaraya solution way angular handling css pseudo class working properly supposed update instantly get updated eta fix proper implementation yet mdn pseudoclasses target", "d": "5/2017"}, {"body": "nt work anymore", "d": "5/2017"}, {"body": "nikkwong please open new issue details runnable demo problem", "d": "5/2017"}, {"body": "shubhammuttepawar problem simple solution one variable string json setter getter method get update everytime need set initialize setter last get getter service", "d": "5/2017"}, {"body": "bit redundant rechanged run npm install add packages", "d": "5/2017"}, {"body": "invalid link xfriday", "d": "5/2017"}, {"body": "still work enableprodmode see log debug debug tool check show us turn debug output production mode", "d": "5/2017"}, {"body": "solution found following issue closest brendanarnold wrote nt able make running plnkr bennylut posted say following template testvalue show private test viewcontainerref viewchild test set somedummysettername theelementref viewcontainerref thistest theelementref ngifthistest controller always corresponds actual state controller variable visible everywhere template taken", "d": "5/2017"}, {"body": "robwormald ca nt believe long searching simple solution thanks much", "d": "5/2017"}, {"body": "yeah settimeout works nt like fix case caused changing value eventemitter solution change weird right well true means eventemitter asyncronous", "d": "5/2017"}, {"body": "added following lines systemconfig working fine systemconfig packages format register defaultextension js map angularanimations npm angularanimationsbundlesanimationsumdjs angularanimationsbrowser npm angularanimationsbundlesanimationsbrowserumdjs angularplatformbrowseranimations npm angularplatformbrowserbundlesplatformbrowseranimationsumdjs", "d": "5/2017"}, {"body": "use get routing animations work", "d": "5/2017"}, {"body": "true really nt need arithmetic operators resort using time might feel like operators complicating matters forcing learn new approaches discussion promises", "d": "5/2017"}, {"body": "settimeout ftw needed order call", "d": "5/2017"}, {"body": "super cool", "d": "5/2017"}, {"body": "thank wmaurer good example one question though would like able use object instead string observable eg input chartconfig chartconfig constructor private reportservice reportservice super thisobservepropertycurrentvalue chartconfig subscribe changedconfig gt thisupdatechart changedconfig export class chartconfig public id string public type public data public labels however thisupdatechart ngonchanges called expand sample simple string observe object instead", "d": "5/2017"}, {"body": "well wrote words dynamic tabs ignored routing", "d": "5/2017"}, {"body": "hi fixed adding code webapi controller returnvaluecontentheadersadd xfilename filedoc returnvaluecontentheadersadd accesscontrolexposeheaders new xfilename", "d": "5/2017"}, {"body": "another react jsx lover chiming everything fine good old html templates coming custom attributes onclick onblur ev handlers basic map functions etc like ask templates must contain obscure htmllike attributes accepts string run loop ev handlers must kind prefix must consistent usual html frontend devs work look jsx simple clean approachable welldefined syntax scopes clearly defined correct usage curly braces plain js nt try reinvent wheel like templates speaking ease designers modify rendered content html vs jsx experience designer capable easy explain jsx works instead weird ngif etc html attrs personally jsx clear winner course debatable matter habit general least sides allowed speak compare things", "d": "5/2017"}, {"body": "vsavkin yeah would html code works html nt plnkr aux set using null nt clear aux route plnkr plnkr select aux link go back first links ca nt clear aux route even possible html", "d": "5/2017"}, {"body": "clearing secondary nt work setting outlet null seems way clear outlet put route primary outlet nt work routernavigate outlets right null work routernavigate outlets right null primary", "d": "5/2017"}, {"body": "news", "d": "5/2017"}, {"body": "support added bootstrappedroot components components projected content rendered example example app would bootstrapped component app template componentone template would rendered html sorry already answered vicb mhevery said compiling trying make jump angularjs angular seeking clarity direction feature plan able use angular next project many thanks", "d": "5/2017"}, {"body": "trying combine externals libraries depend scripts loaded webpack example jquery wo nt loaded yet put scripts head nest scripts component template removed angular jquery could fixed including twice noconflict mode obviously suboptimal mention external libraries solved way yet find satisfying solutions nt feel incredibly hacky", "d": "5/2017"}, {"body": "trying figure exactly use bind function using angularcli anyone know exactly needs added", "d": "5/2017"}, {"body": "ypaliwal example reaaaallly old look new syntax docs appbasehref", "d": "5/2017"}, {"body": "parsefloat return nan non numeric string produces unpredictable values non numeric strings like parsefloat gt parsefloat gt nan number gt nan expect number input chrome ca nt enter invalid characters ie value input type number differs ie seems ie nt perform proper sanitization nt return empty string value text input ie value valueasnumber nan ff value empty string valueasnumber nan chrome ca nt enter characters way put invalid number value empty string valueasnumber nan valueasnumber empty string browsers returns nan looks like valueasnumber good crossbrowser alternative eventtargetvalue number alternative parsefloat registeronchange might false positives number number valueasnumber even ie pass far suffer missed validation ie", "d": "5/2017"}, {"body": "addition previous comment valueasnumber nt work properly far stuck regexp custom controlvalueaccessor numbervalueaccessor public api unfortunately copypaste implementation checkbox radio select available used fine exponent meets except e", "d": "5/2017"}, {"body": "found get di correctly working using ts need set emitdecoratormetadata true tsconfigjson please refer article got code working expected", "d": "5/2017"}, {"body": "update doc dzmitryshylovich obsolete", "d": "5/2017"}, {"body": "jeffbcross could please update status regression vs angular interceptors transformers breaking essential functionality need make even simple api call authorization header logging errors handling retries flaky connections china frank stunned framework still support http marked experimental solved years ago xhrs fundamental spa currently status feature limbo issue marked closed backlog closed outdated referenced design doc marked obsolete open tagged issue related nt know whether forced make http wrapper basic functionality update dependencies later version supports need refactor codebase least clarity matter would soften hurt bit migration starting look really ugly", "d": "5/2017"}, {"body": "bgever create custom class extends angulars class customize liking several answers", "d": "5/2017"}, {"body": "zoechi think discussion build custom class rather really use http interceptors two different use cases opinion", "d": "5/2017"}, {"body": "whoever needs elegant solution interceptors try ng", "d": "5/2017"}, {"body": "borntraegermarc spot gund great library thanks reference considering exact port angularjs angular custom classes provide explicit way describe code http transformations needed eg could custom classes two different crossorigin apis bearer tokens applied removes magic interceptors also understand observables allow way retry cancel neat growing", "d": "5/2017"}, {"body": "anyone solve browser compatibility safari", "d": "5/2017"}, {"body": "called think way people would expect many use cases init function depends already called nt single use case way around consternation angularjs world", "d": "5/2017"}, {"body": "noted issue make angular work csp make angular cli work csp well would wonderfull angular angularcli could actually used create something secure", "d": "5/2017"}, {"title": "dynamically added classes removed using vbind class", "body": "version reproduction link steps reproduce add vbind class tag toggles class based boolean viewmodel data variable add class html element directly using javascript tested using classlist nt tried modifying attribute something causes boolean viewmodel variable change dynamically added class removed element expected dynamically added class removed actually happening dynamically added class removed", "num": "5795", "d": "5/2017"}, {"title": "slotcomponent communication", "body": "problem feature solve slots really useful needs way communicating component either ability directly call component methods send event simple example dropdown component one slot button content button must openclose dropdown content items must able close click currently dropdown components parse child items slots mounted attach event listeners bad handled transparently vue proposed api look like maybe something like emitlocal send event slot items component another idea insert elements slot pass component reference call methods directly although probably good design compromise user specify methods component expose sort miniapi", "num": "5793", "d": "5/2017"}, {"title": "render function datadirectives allow value expression set", "body": "problem feature solve setting directives render function provided nt automatically evaluated instead allow set would also nice allowed set provided proposed api look like javascript createelement div directives name mycustomdirective value allowed set instead automatically evaluated expression expression arg foo modifiers bar true createelement div directives name mycustomdirective value expression allowed set arg foo modifiers bar true", "num": "5792", "d": "5/2017"}, {"title": "suggestion mounting", "body": "hi always check element site vue throw errors finding dom elements mount usually start see example appjs using mount js helper const elementisfound element gt return documentbodycontains documentgetelementbyid element wondering possible extra mount function like appjs using mountif js", "num": "5791", "d": "5/2017"}, {"title": "components containing detect changes dynamic component", "body": "component project data update trigger outer component update", "num": "5790", "d": "5/2017"}, {"title": "event entering view router view rendered", "body": "", "num": "5789", "d": "5/2017"}, {"title": "disregard", "body": "nevermind", "num": "5788", "d": "5/2017"}, {"title": "partial ssr rendering", "body": "problem feature solve many component yet compatible ssr may require large changes support partial ssr rendering could allow use component meanwhile eventually ported directives could also benefit behavior components may mandatory seo could allow better clientsideserverside load balance proposed api look like vue component export default allowserversiderendering false", "num": "5787", "d": "5/2017"}, {"title": "read property component undefined", "body": "", "num": "5786", "d": "5/2017"}, {"title": "vif use vif route path judge control component tabletd element render three route use coponentin routepath switch vif control element position become wrong flash web page position become normal please tell", "body": "vif use vif route path judge control component tabletd element render three route use coponentin routepath switch vif control element position become wrong flash web page position become normal please tell templatecode scoperowdates scoperowtime \u59d3\u540d scoperowname \u9605\u8bfb\u91cf scoperowviews scoperowname scoperowpwd scoperowisadmin scoperowcategory scoperowtitle scoperowviewed \u7f16\u8f91 \u5220\u9664 route code path admin component alayout redirect home name \u540e\u53f0\u9996\u9875 children path component home path home component home path usermanage component tablelayout name \u7528\u6237\u7ba1\u7406 path categorymanage component tablelayout name \u5206\u7c7b\u7ba1\u7406 path articlemanage component tablelayout name \u6587\u7ae0\u7ba1\u7406 path datapage component datapage name \u6570\u636e\u9875", "num": "5785", "d": "5/2017"}, {"title": "read property component undefined", "body": "", "num": "5784", "d": "5/2017"}, {"title": "vuerouterjs uncaught typeerror read property component undefined", "body": "", "num": "5783", "d": "5/2017"}, {"title": "vue write page weex webwebview load", "body": "write vue compile weex browser weex webwebview load phone ca nt load example", "num": "5782", "d": "5/2017"}, {"title": "multiple events respond using shorthand", "body": "version reproduction link steps reproduce events fired reverse message switch class first event fired reverse message switch class expected events fired actually happening first event fired", "num": "5781", "d": "5/2017"}, {"title": "markdown demo bug", "body": "version reproduction link steps reproduce visit markdown demo expected result b c e f g h j expected list indented per source actually happening items levels b c e g h appear level items levels f j appear level probably goes deeper form bit insult first though understand ca nt help feel middle ground somewhere sure yet", "num": "5780", "d": "5/2017"}, {"title": "turn props validation one prop", "body": "problem feature solve would nice could turn validation one many even use shorthand validation proposed api look like", "num": "5779", "d": "5/2017"}, {"title": "unexpected triggering deep nested data", "body": "version reproduction link steps reproduce js new vue el data root key roota object watch roota function alert triggerd set b wrongly trigger watch new vue el data root roota object watch roota function alert vm set b trigger watch vue instance object watch expected adding new properties watch triggered actually happening adding new properties watch wrongly triggered", "num": "5776", "d": "5/2017"}, {"title": "able specify slot name inside render function createelement", "body": "problem feature solve specify slot name within render function like proposed api look like within render function specify slot name default temp creating child elements full code expected behavior temp child default child", "num": "5774", "d": "5/2017"}, {"title": "child components lost parent hides events lost", "body": "version reproduction link steps reproduce try listen children components event hide parent show expected events keep working actually happening events nt work app hidden init via shown time listen events child components hidden default mounted see reproduction mount displayed point populated hook lifecycle point also app displayed start events work hide show events setting nested wrapper change anything", "num": "5773", "d": "5/2017"}, {"title": "vueserverrenderer type definitions", "body": "problem feature solve using vueserverrenderer typescript seems vue vuerouter supported would nice vueserverrenderer came typings proposed api look like types directory", "num": "5772", "d": "5/2017"}, {"title": "", "body": "version reproduction link steps reproduce routes path component main children path helpdocument component helpdocument \u6211\u7684\u4efb\u52a1\u6240\u6709\u5de5\u4f5c\u6d41 path work component workmain children path task component workmytask path release component workmyrelease \u5728main\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728workmain\u4e2d \u4e5f\u5b58\u5728\u4e00\u4e2a helpdocument \u8def\u5f84\u4e0b \u7b2c\u4e00\u6b21\u8df3\u8f6c workrelease \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 workrelease\u8df3\u8f6c\u5230 worktask \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 worktask \u8df3\u8f6c\u5230 helpdocument \u4ee5\u4e0a\u6e32\u67d3\u90fd\u6ca1\u6709\u95ee\u9898 \u518d\u6b21\u4ece helpdocument \u8def\u5f84\u4e0b \u8df3\u8f6c workrelease expected \u5b9e\u9645\u6e32\u67d3\u7684\u5e94\u8be5\u662f workrelease \u7684\u5185\u5bb9 actually happening worktask \u4e2d\u7684\u5185\u5bb9", "num": "5771", "d": "5/2017"}, {"title": "vue \u5d4c\u5957\u4e09\u5c42 router", "body": "routes path component main children path helpdocument component helpdocument \u6211\u7684\u4efb\u52a1\u6240\u6709\u5de5\u4f5c\u6d41 path work component workmain children path task component workmytask path release component workmyrelease \u5728app\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728main\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728workmain\u4e2d \u4e5f\u5b58\u5728\u4e00\u4e2a helpdocument \u8def\u5f84\u4e0b \u7b2c\u4e00\u6b21\u8df3\u8f6c workrelease \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 workrelease\u8df3\u8f6c\u5230 worktask worktask \u8df3\u8f6c\u5230 helpdocument \u4ee5\u4e0a\u6e32\u67d3\u90fd\u6ca1\u6709\u95ee\u9898 \u518d\u6b21\u4ece helpdocument \u8def\u5f84\u4e0b \u8df3\u8f6c workrelease worktask \u4e2d\u7684\u5185\u5bb9", "num": "5770", "d": "5/2017"}, {"title": "use vm destroy routercomponent keepalive cached component work anymore", "body": "version reproduction link steps reproduce detail handle steps link demo expected b destroy component b nt impact c b actually happening b destroy b c b run b lifecycle learn vm destroy recommended use manual destroy component init cached component use keepalive also check components cached keepalive", "num": "5769", "d": "5/2017"}, {"title": "empty children app", "body": "version reproduction link steps reproduce create app template render function mount element content try get property expected list child components actually happening empty array really nt know issue docs nt cover scenario logic work", "num": "5768", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5767", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5766", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5765", "d": "5/2017"}, {"title": "bug", "body": "program like print hello worldhello world page work tried jquery instead vieresource export default name hello data return hello data b methods updatedata thishellodata var data err gt var lt thishellodata b hello world consolelog thishellodata value right thishellodatadata lt add line work mounted thisupdatedata", "num": "5764", "d": "5/2017"}, {"title": "create vue language service extension typescript", "body": "problem feature solve provides types custom components written sfc vue imported files like unit tests right suggest results every imported sfc component type rather component type extends vue makes much difficult annoying test proposed api look like would conform recently released ts version language server plugin supporty", "num": "5763", "d": "5/2017"}, {"title": "create vue language service extension typescript", "body": "support files mentioned typescript git repo essentially said spoken evan supporting vue files would something ideally language service extension would take see details would like request extension files gets written", "num": "5762", "d": "5/2017"}, {"title": "reactive data nt work array object", "body": "version reproduction link steps reproduce demo render template data equals demo use temporary variable save async data get result render template add another function named methods work template rendered link delete method work link expected actually happening", "num": "5761", "d": "5/2017"}, {"title": "outin transition issue async components", "body": "version reproduction link steps reproduce load click b button expected previous component disappear component b appears actually happening components b visible simultaneously behavior happens component b already loaded next time switch b everything fine", "num": "5760", "d": "5/2017"}, {"title": "missing named slots children components functional component", "body": "version reproduction link steps reproduce see console details expected named slots accessible children components functional component actually happening slots show default slot missing named slots", "num": "5759", "d": "5/2017"}, {"title": "enable component root element contains one logical node", "body": "problem feature solve compiling template error message ca nt use component root element even contains one node proposed api look like allow following code component root allow following code component root", "num": "5758", "d": "5/2017"}, {"title": "svg embedded images processed", "body": "version reproduction link steps reproduce use vhtml output valid svg image string handle node appear expected image node appear dom actually happening node appears dom complex cases ie issue following errors specified prefix declared line column seems point missing even added effect", "num": "5756", "d": "5/2017"}, {"title": "vue keepalive \u91cc\u9762\u5931\u6548", "body": "version reproduction link steps reproduce jsfiddle vue expected \u80fd\u591f\u5728\u63d2\u5165\u7684\u65f6\u5019\u8c03\u7528inserted hook actually happening keepalive \u65f6 \u975e\u9996\u6b21\u63d2\u5165\u4e0d\u4f1a\u6267\u884cinserted hook", "num": "5755", "d": "5/2017"}, {"title": "vue keepalive \u91cc\u9762\u5931\u6548", "body": "vue", "num": "5754", "d": "5/2017"}, {"title": "ie problem", "body": "version reproduction link steps reproduce run build expected running normally actually happening prompt promise \u672a\u5b9a\u4e49 \u5bf9\u8c61\u4e0d\u652f\u6301 n \u5c5e\u6027\u6216\u65b9\u6cd5 previous version everything normal updated latest version compiled running browser suggested promise defined vueresource replaced axios also reported mistake", "num": "5753", "d": "5/2017"}, {"title": "ie problem", "body": "previous version everything normal updated latest version compiled running ie browser suggested promise defined project vueresource replaced axios also reported mistake", "num": "5752", "d": "5/2017"}, {"title": "transitiongroup working table edge", "body": "version reproduction link steps reproduce transitions working tables application created jfiddle according issue demonstrate issue transition works great chrome edge using edge windows expected transition shufling items actually happening transitions ignored", "num": "5751", "d": "5/2017"}, {"title": "binding select option change working", "body": "version reproduction link steps reproduce select aircon brand see tag made check values datas formsubmissions nt updated expected focus focus input number bellow aircon brand area select bind populated making children selects expected change value select box binded vuejs actually happening working focus focus input text number work whenever change value select box", "num": "5750", "d": "5/2017"}, {"title": "double rendering polymer elements chrome caused vue", "body": "version reproduction link steps reproduce make polymer element separate file import polymer element main page makes new instance vue run page different browsers particularly chrome one notice number alert boxes well render order count different browsers expected end page loading every polymer element one copy template dom structure within custom element shadow dom shady dom actually happening chrome regardless version polymer dom structure used template structure rendered twice problem particular visible using shady dom polymer actually display element structure twice traced vue code identified trigger call documentcreateelement tag firefox ie edge call example goes polyfill definitely different behavior comparing native function inside chrome looks like point chrome already created template structure later vue starts attach bindings loops entire template structure within polymer element calls documentcreateelement every inner element within template may one possible causes making whole dom repeated particularly visible using polymer shady dom makes users actually see duplicated elements combinations either using shadow dom using polymer repeated structure would seem removed dom yet noticing alert box hooked example clear element got created twice time used example provided add line saying polymer dom shadow force polymer use shadow dom moment repeating dom disappear alert box still comes times instead render order definitely shows artifact reason posted behavior vue project imo looping inner template structure within polymer element calling documentcreateelement every single inner element may optimal way yet honest merely tracing describing much observation made possible ui professional happy leave issue judgment thank much attention", "num": "5749", "d": "5/2017"}, {"title": "feature request nested slots", "body": "problem feature solve creating pagesvue pass array objects create paginated list items inside component would like put container scoped slots proposed api look like pug js export default name adminchunk props items chunk data return index computed page thisindex thisindex gt thispageslength thispageslength thisindex return thispages thisindex pages return thisitemschunk thischunk use like pug adminchunk items items div style display flex slot container template scope item itemkey slot item div item itemkey maybe adding prop like slot nested name container would solve check children vnodes slot", "num": "5748", "d": "5/2017"}, {"title": "allow component indicate longer reused", "body": "problem feature solve example markup use component component instances reused returning route allowing state component maintained point need indicate particular component instance longer reused fresh instance component created example loggedin user visits route profile component reused available user navigates somewhere else logsout returns route saved instance profile component discarded fresh instance created proposed api look like perhaps hook could added component method returns false vue would create fresh instance component instead reusing previously saved instance export default name profile beforeactivated return somecondition true false", "num": "5747", "d": "5/2017"}, {"title": "input event fired element looses focus", "body": "version reproduction link steps reproduce create input field calls method user types blur field method called user typed something expected event triggered user types input element actually happening event called user blurs input field working typeahead component seeing weird behavior sure vue specific bug desired behavior happens method called trigger searches works nicely however input looses focus method also called weird", "num": "5744", "d": "5/2017"}, {"title": "vmodellazy custom component moment instance value sync component emits change", "body": "version reproduction link steps reproduce create custom component accept moment instance prop clone modify clone emit modified clone using change event data bound parent vmodellazy parent data update however bound separate value change updates correctly expected parent value updated actually happening nothing parent bound data get updated", "num": "5743", "d": "5/2017"}, {"title": "keepalive\u4e2dinclude\u548cexclude \u4e0d\u7ba1\u7528", "body": "\u9879\u76ee\u662f\u7528cli\u751f\u6210\u7684 \u7ec4\u4ef6\u4e2d\u6dfb\u52a0\u4e86name\u5c5e\u6027 include\u662f\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u5339\u914d\u7684 \u65e0\u8bba\u600e\u4e48\u8bbe\u7f6einclude\u548cexclude \u7ec4\u4ef6\u90fd\u4f1a\u88ab\u7f13\u5b58 \u4fee\u6539\u4e86packagejson\u4e2d\u7684vue\u7248\u672c \u5220\u9664nodemodules\u91cd\u65b0\u4e0b\u8f7d\u4f9d\u8d56\u5305 \u4ee5\u4e3avue\u5176\u4ed6\u5305\u6709\u7248\u672c\u4f9d\u8d56\u4f1a\u53ea\u4e0b\u8f7dvue\u4f1a\u6709\u5404\u79cd\u9519\u8bef \u6240\u4ee5\u91cd\u65b0\u4e0b\u8f7d \u4e0b\u8f7d\u5b8c\u4e4b\u540e\u91cd\u65b0\u8dd1\u9879\u76ee include\u548cexclude \u5c31\u8d77\u4f5c\u7528\u4e86", "num": "5741", "d": "5/2017"}, {"title": "watch conflicts", "body": "version reproduction link steps reproduce component declared two array one props data change one emit change push something array data push nothing works expected users props parameters never updated event catch actually happening users props parameters emit change", "num": "5740", "d": "5/2017"}, {"title": "vfor\u4e2dkey\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u5f15\u53d1\u4e0d\u540c\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u7b2c\u4e09\u4e2a\u94fe\u63a5\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u4e4b\u5904 expected actually happening", "num": "5739", "d": "5/2017"}, {"title": "global registered component wrong render sequence", "body": "version reproduction link steps reproduce indexjs parentvue content export default name parent created consolelog parent created mounted consolelog parent mounted childvue export default name child created consolelog child created mounted consolelog child mounted expected parent mounted child created mounted actually happening parent created mounted child ist created mounted", "num": "5738", "d": "5/2017"}, {"title": "", "body": "version steps reproduce router\u4f7f\u7528history expected \u8fd4\u56de\u5230a\u9875\u9762 actually happening \u95ee\u9898\u539f\u56e0\u5e94\u8be5\u662f\u5237\u65b0\u540erouter\u5185\u90e8\u53c8\u518d\u4e00\u6b21\u6267\u884c\u4e86", "num": "5736", "d": "5/2017"}, {"title": "\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u4f20\u53c2\u95ee\u9898", "body": "problem feature solve bug proposed api look like parent component child component", "num": "5735", "d": "5/2017"}, {"title": "sum concatenate issue onwards", "body": "version reproduction link steps reproduce sum input type number became concatenate ok expected total sum actually happening concatenate", "num": "5733", "d": "5/2017"}, {"title": "noncomponent child showing", "body": "version reproduction link steps reproduce want create transition component div data noncomponent also want cache component code looks like code working warnings errors vuejs showing component showing problem without working without right never showing question wrong components allowed warnings errors switch component noncomponent transition caching component noncomponents allowed simply ignored showing expected caching component showing actually happening showing", "num": "5732", "d": "5/2017"}, {"title": "remove attribute vmodelnumber empty", "body": "problem feature solve solves design pattern issue course expected mvm flow including vmodelnumber producing string empty enter number delete text input turns string reactive data object certainly major usability casting issue nt see purpose keeping empty string attribute model get spliced model empty create new attributes text entry vice versa certainly design pattern issue resolved needing implemented application level time small fix add lot sure many others agree proposed api look like currently input empty vmodelnumber modelnumber model number input empty vmodelnumber modelnumber model", "num": "5731", "d": "5/2017"}, {"title": "feature request remove attribute vmodelnumber empty", "body": "using vmodelnumber api expects optional fields enter number delete text input turns string reactive data object certainly major usability issue nt see purpose keeping empty string attribute model get spliced model empty create new attributes text entry vice versa certainly design pattern issue resolved small fix add lot sure many others agree", "num": "5730", "d": "5/2017"}, {"title": "emit update show false showsync show", "body": "sync \u8fd9\u662f\u7236\u7ec4\u4ef6\u4e2d\u7684\u4e00\u6bb5pug\u4ee3\u7801 calendar showsync show export exportdate \u8fd9\u662f\u5b50\u7ec4\u4ef6\u7684\u90e8\u5206\u4ee3\u7801 emit update show false calendar show show export exportdate update show val gt show val ps \u6211\u4f7f\u7528unpkg\u7684vuejs", "num": "5729", "d": "5/2017"}, {"title": "von clickself work", "body": "\u5176\u4ed6\u7684\u4fee\u9970\u7b26\u90fd\u884c \u5c31\u662fself\u8fd9\u4e2a\u4fee\u9970\u7b26 vue", "num": "5728", "d": "5/2017"}, {"title": "child component updated event unexpected triggered", "body": "version reproduction link steps reproduce child component updated event unexpected triggered content content changed expected child component updated event triggered content changed actually happening parent component changed child component content always updated whether content changed", "num": "5727", "d": "5/2017"}, {"title": "data numbers defined", "body": "version reproduction link steps reproduce create variable named numbers happens every variable named somename bound via vmodel open console load page expected variable undefined actually happening variable ist defined", "num": "5726", "d": "5/2017"}, {"title": "prepending new dom elements vs appending", "body": "version reproduction link steps reproduce clicking add item button provided link insert new item dom element last position first expected list items listed newest oldest vuejs allow user define new items added javascript either append prepend new elements actually happening entirely sure believe appends new dom element stack tried reversing computed list effect list order rendered also tried applying js method within component reverse list example vfor item index listreverse fail vfor item index reverse list fail vfor item index computedreversedlist fail causes infinite loop error vuejs see error log may infinite update loop component render function reversing list also messes list order completely please help provide best practice handle situation", "num": "5725", "d": "5/2017"}, {"title": "url \u4e2d\u542b\u6709 html", "body": "url \u4e2d\u542b\u6709 html \u50cf\u8fd9\u6837\u7684 \u73b0\u5728\u7528\u7684\u662fvuerouter", "num": "5724", "d": "5/2017"}, {"title": "url", "body": "", "num": "5723", "d": "5/2017"}, {"title": "never used window error window defined", "body": "version reproduction link steps reproduce npm npm run server npm run client node serverjs open expected expected rendered page actually happening internal error page", "num": "5722", "d": "5/2017"}, {"title": "ssr never used window error window defined", "body": "recently learing ssr created demo router without store link generate client config server config successfully ran server access router page error occured found usersworkiapyanggithublearnvuessrsrcappvue error render referenceerror window defined moduleexportsmoduleexports objectmoduleexportsmoduleexportslocation srcappvue webpackrequire webpack webpackbootstrap vuecomponentinjectstyle vuecomponenthook callhook vuecomponentvueinit new vuecomponent never used window appvue solve error successfully access page thanks", "num": "5721", "d": "5/2017"}, {"title": "component nt support blurnative event", "body": "problem feature solve use component like works nt worked use like need feature especially using form components example proposed api look like", "num": "5719", "d": "5/2017"}, {"title": "vue verbose devtools extension despite configsilent", "body": "version steps reproduce set vueconfigsilent true open devtools electron nt support chrome extensions vue spams devtools console download vue devtools extension despite needing silent expected vueconfigsilent true ought shut vue actually happening vue ca nt silenced devtools used despite possible reasons vuedevtools patch fix issue", "num": "5718", "d": "5/2017"}, {"title": "computed watch", "body": "function viewmodel thisa koobservable thisb koobservable thisc koobservable thisd koobservable kocomputed function let aa number thisa let bb number thisb \u53ef\u80fd\u662fajax\u8c03\u7528\u670d\u52a1\u5668\u65b9\u6cd5 thisc aa bb thisd aabb koapplybindings new viewmodel b c", "num": "5717", "d": "5/2017"}, {"title": "ssr client plugin watch template change", "body": "problem feature solve vueserverrenderer create helper clientplugin used replace htmlwebpackplugin server render situation however new plugin nt watch template file change plugin add feature like htmlwebpackplugin improve development experience proposed api look like changes", "num": "5716", "d": "5/2017"}, {"title": "boolean attribute true value nt render", "body": "version reproduction link steps reproduce set attribute element expected expect render actually happening rendered value attribute removed expected rendered correctly docs", "num": "5715", "d": "5/2017"}, {"title": "vue\u751f\u547d\u5468\u671f\u6267\u884c\u95ee\u9898", "body": "\u4ece a\u9875\u9762 routerback \u56de\u5230 destroy routerback \u56de\u5230 a\u9875\u9762 \u4ece a\u9875\u9762 routerback \u56de\u5230", "num": "5714", "d": "5/2017"}, {"title": "importing static assets vue component", "body": "building vue js based image viewer following script want show default image component image url supplied input however computed function unable return default image return string image url shown code comments image displayed note return image computed displayimage function default image shown component template using vuecli webpacksimple template starter missing project directory structure", "num": "5713", "d": "5/2017"}, {"title": "getting done github zenhub", "body": "hola githubmann created zenhub account vuejs organization zenhub project management tool integrated natively github created specifically fastmoving softwaredriven teams use zenhub get set zenhub download browser extension log github account get access zenhub complete featureset immediately zenhub zenhub adds series enhancements directly inside github ui realtime customizable task boards github issues multirepository burndown charts estimates velocity tracking based github milestones personal todo lists task prioritization timesaving shortcuts like quick repo switcher move issue button much add zenhub github still curious see zenhub features read user reviews issue written friendly zenhub bot posted request githubmann", "num": "5712", "d": "5/2017"}, {"title": "function", "body": "problem feature solve possible async local component registration convenient webpack code splitting however using provideinject symbols unique hashes becomes hard share symbol across components symbol separate file asynchronously loaded via import needs passed via proposed api look like parentvue const parent key symbol parent provide return parentkey sharedstate export default parent childvue const parent gt import parentvue const child components parent inject const parent thiscomponentsparent made return parent parentkey export default child", "num": "5710", "d": "5/2017"}, {"title": "bind bool arrtibute list", "body": "vue list items arrtibute datawowdelay bind datawowdelay", "num": "5708", "d": "5/2017"}, {"title": "css applied firefox transition example documentation", "body": "version reproduction link steps reproduce visit transition effects page guide using latest firefox look demo directly phrase pretty cool click button expected pretty cool expect supposed look chrome actually happening clunky unstyled button slides jumps styled one sudden change gif demonstrate", "num": "5707", "d": "5/2017"}, {"title": "lifecycle hook ca nt get new content dom updating variables", "body": "version reproduction link steps reproduce get resultx answering last question clicking button expected see result console answering last question actually happening see console answering last question created topic forum nobody answered yet", "num": "5706", "d": "5/2017"}, {"title": "npm update working", "body": "hello upgrade vue trying npm update packagejson updated something edit manually hope something npm update save someone please help", "num": "5705", "d": "5/2017"}, {"title": "expose api directly generating render function code element asts createcompiler function", "body": "problem feature solve may sounds awkward using modified ast generate render function instead using template files input following cases might useful people want optimized operations ast like jump codegen method basecompile function predisposed component loaded via webpack loader implements exposed generate function get new render function case initially load customized vue components new added dom elements attributes events etc visually edit rendered components modifying asts instead original template considered much easier previous step even generate new template file like reverse way template ast render function sure whether alternative way things might helpful comes something like visualized vue components development ide proposed api look like maybe createcompilercreator function add function property compile method like line srccompilercreatecompilerjs", "num": "5703", "d": "5/2017"}, {"title": "get return value int emit", "body": "version reproduction link steps reproduce var eventhub new vue vuecomponent foo template data function return value methods emit var newval eventhub emit maketwice thisvalue expecting newval object vue alert newval please check console log consolelog newval new vue el app data function return mounted eventhub maketwice thismaketwice methods maketwice val return val expected trying call component method using single event hub would like get return value component method actually happening currently returning object vue component method return value missing something return may possible expecting return value emit return method return value", "num": "5702", "d": "5/2017"}, {"title": "transition group event hooks", "body": "version reproduction link steps reproduce create transitiongroup two uniquely keyed transition elements attach event listeners transition hooks log number times hook called equal number transition elements expected transition element fire respective event hooks internally group emit event hooks transition element fired hook expect group aggregate events actually happening using transitiongroup component uniquely keyed transition element fire transition event hooks discretely rather group desired functionality technical limitation", "num": "5701", "d": "5/2017"}, {"title": "android \u600e\u4e48\u8c03vue\u91cc\u9762\u7684\u65b9\u6cd5 android call vue methods", "body": "\u6211\u5728android\u4f7f\u7528 mwebviewloadurl javascript hello use mwebviewloadurl javascript hello android effect", "num": "5700", "d": "5/2017"}, {"title": "list components delete one always delete last one", "body": "version reproduction link steps reproduce click input delete expected one clicked delete actually happening last input deleted", "num": "5699", "d": "5/2017"}, {"title": "", "body": "", "num": "5698", "d": "5/2017"}, {"title": "vue component custom delimiter working", "body": "version reproduction link steps reproduce following alias running vue inside component inside tags expected output models value actually happening outputting", "num": "5697", "d": "5/2017"}, {"title": "editor spit warnings", "body": "hi new vuejs would like know tell editor like atom sublime produce warning code like currently jsfiddle wrote nt show error console", "num": "5696", "d": "5/2017"}, {"title": "input value fast vmodel handle", "body": "version reproduction link steps reproduce use fast input input value get problem happen use barcode scanner expected let handle faster input reason ca nt actually happening use watch input box input box waiting barcode scanner barcode scanner input text one one example scanner input one one two scanners one old another brand new old one find slow new one input characters fast ca nt handle input become resolve problem use refresh value replace think problem come browser chrom information know miss thanks lot", "num": "5693", "d": "5/2017"}, {"title": "nt works emit", "body": "coffeescript coffee vuecomponent levelslist template levelslisttemplate props uuid type data elementlevels otherlevels mounted getelementlevels return methods getelementlevels uuid typeof uuid undefined uuid uuid get ajaxelements uuid elementlevelsjson data thiselementlevels thisotherlevels dataelementlevels elementlevel thiselementlevelspush elementlevel return dataotherlevels otherlevel thisotherlevelspush otherlevel return return return vuecomponent articlecontent template articlecontenttemplate props uuid data questionsblocks videoscreens mounted getblocks levels updateblocks alert goooood return return methods getblocks get ajaxelements uuid loadblocksjson data thisquestionsblocks thisvideoscreens dataquestionsblocks questionsblock thisquestionsblockspush questionsblock return datavideoscreens videoscreen thisvideoscreenspush videoscreen return return return levels new vue el jslevels code displays error typeerror undefined object evaluating levels error occur also add line successfully receive blocks line return problem", "num": "5692", "d": "5/2017"}, {"title": "using vue file generate html css file input model", "body": "problem feature solve vue component mine applied certain model generates certain htmlcss cli extracting output htmlcss seperate entities currently duplicate vue file node templating generation proposed api look like cli lets pass model vue component outputs htmlcss file appropriate input model", "num": "5689", "d": "5/2017"}, {"title": "functional component contextchildren wrong safari", "body": "version reproduction link steps reproduce run fiddle safari expected alerts form twice browsers actually happening alerts input form safari slot screwing something safari", "num": "5687", "d": "5/2017"}, {"title": "multiple ajax calls component", "body": "version reproduction link steps reproduce two ajax calls one parent one child calls performed load issue always works one expected load data two ajax calls actually happening one call performed", "num": "5686", "d": "5/2017"}, {"title": "aggregate function filters", "body": "problem feature solve delivers sum min max count average filters sql select statement aggregate functions years angularjs sum average taken sql sum count min max average groupby see angular usage sum filter support aggregate functions specifically source sum duration filter shift pipe char angular filters proposed api look like users filterby searchtext count pivot countryofbirth aveage", "num": "5685", "d": "5/2017"}, {"title": "vue introduction page error", "body": "version reproduction link steps reproduce currently code website looks like missing p closing div expected add example code actually happening noticed error think everyone notice big bug yea someone started learning html confused happen someone copy paste code", "num": "5684", "d": "5/2017"}, {"title": "methods filters called many times cause performance issue", "body": "version reproduction link steps reproduce yesterday tested vue chat application found typing new message app fast found problem filters every message show date use filter momentjs filters recalculate values manymany times every keydown event cause recalculating filtered values values took values depend vmodel value input variable recalculating view see console many lines recalculating vue method values filters nt recalculated dependencies changed vue recalculating event every typing input field behaviour similar angular dirty checking nt good performance know say vue computed values use many lists nt want create separate component one computed property list item causes overhead verbose displaying simple list expected filtered values recalculated dependencies changed actually happening filtered values recalculated every changing component even changed variable nt influence values", "num": "5682", "d": "5/2017"}, {"title": "props escaped single file components", "body": "version reproduction link steps reproduce follow instructions repo expected escape characters props inside single file components actually happening single file components escaped find character escaped however using single file components immediately escaped thus visualization correct track origin issue thank", "num": "5680", "d": "5/2017"}, {"title": "buildjs", "body": "problem feature solve bootstrap vue comes dependency packages devdependency packages packagejson currently dockerizing vue want copy dependency packages container cuz everytime build container pull devdependencis well absurdly time consuming thing buildjs depend devdependency packages else abstracted another build wrapper devs set nodeenv production mode npm install ng build think vue able well clean build support proposed api look like api necessary", "num": "5679", "d": "5/2017"}, {"title": "component rendered outside parent element", "body": "version reproduction link steps reproduce create table row component called use directive iterate data generate couple table rows well expected component rendered inside element actually happening component rendered outside element currently using technique tbody instead tr table rows live project works perfectly fine however ran bug attempting help user another issue", "num": "5678", "d": "5/2017"}, {"title": "vbind class erase manually added classes", "body": "version reproduction link steps reproduce add class jquery tag class toggled vbind class expected class added jquery remain class toggle class actually happening class added jquery deleted class toggle class", "num": "5677", "d": "5/2017"}, {"title": "find list vue vesions", "body": "", "num": "5676", "d": "5/2017"}, {"title": "iterate tr element recursively", "body": "version reproduction link steps reproduce would like iterate recursively objects get nested table template javascript lt tr gt lt td gt lt von click toggle gt lt gt lt td gt lt td gt lt td gt lt tr gt lt tr rowitem vshow open gt lt tr gt recursive line hidden line user click parent line children lines appear already try wrap content within tag get inside still illegal table layout breaks javascript lt tbody gt lt tr gt lt td gt lt td gt lt td gt lt td gt lt tr gt lt tr rowitem gt lt tr gt lt tbody gt vue nt require exactly one root element without idea solve thanks expected use multiple elements template another solution actually happening error component template contain exactly one root element", "num": "5674", "d": "5/2017"}, {"title": "childmethod gt parentmethodcall child", "body": "problem feature solve try create component based pattern facade example component named would add data variables methods watchers listeners direct child wrap make component windowfunctional ca nt use work use construction carry beyond fear would expand facadecomponent file component turn unreadable monster also pay attention assign classes styles dom child think artisanal method nt find better solution proposed api look like", "num": "5673", "d": "5/2017"}, {"title": "computed value unable track value dependency dynamic object", "body": "version reproduction link steps reproduce submit value change based change object see change go back change value nothing happened computed value utilize dynamic size object expected computed property changes based change object actually happening dependency tracking nt working use object methods dynamic object supported context throw error spend hours struggling bug expect folks similar problems well throw error simply saves time also behavior kind inconsistent computed value simply returns thing would respond change computed value actual computation nt ran bug cause trying create dynamic table view data dynamic list user add data list", "num": "5672", "d": "5/2017"}, {"title": "tree component bug", "body": "write tree component refer child component required vue warn failed mount component template render function defined ca nt use component tempalte", "num": "5671", "d": "5/2017"}, {"title": "webpack vue\u591a\u6587\u4ef6\u5165\u53e3", "body": "\u4f7f\u7528webpack vue \u5f00\u53d1\u591a\u9875\u9762\u5e94\u7528 \u5165\u53e3\u5305\u542b\u4e00\u4e2a\u516c\u7528\u7684commonjs \u548c \u5bf9\u5e94\u9875\u9762\u7684js\u6587\u4ef6 javascript commonjs import vue vue import toast pluginstoast import popup componentspopup vueuse toast vueuse popup windowvue vue javascript \u5bf9\u5e94\u9875\u9762\u7684js import app appvue new windowvue template components app mount app appvuethis toast toast\u4e0d\u5b58\u5728vueuse toast \u5982\u679c\u6211\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u5165\u53e3\u80fd\u8c03\u7528 \u6211\u60f3\u4e86\u60f3 \u53ef\u80fd\u662fvue\u8fd9\u5bf9\u8c61\u7684\u95ee\u9898 \u6211\u53c8\u6539\u4e86\u4e0b\u4ee3\u7801 javascript commonjs import toast pluginstoast import popup componentspopup windowvueinstall function vue vueuse toast vueuse popup javascript \u5bf9\u5e94\u9875\u9762\u7684js import vue vue import app appvue windowvueinstall vue new vue template components app mount app toastpopup\u8fd9\u4e2a\u7ec4\u4ef6\u4e0d\u5b58\u5728 commonjs \u548c \u5bf9\u5e94\u9875\u9762js \u6700\u540e\u9644\u4e0a\u591a\u9875\u9762\u7684webpack\u914d\u7f6e javascript const fs require fs const path require path const webpack require webpack const htmlwebpackplugin require htmlwebpackplugin const extracttextplugin require extracttextwebpackplugin const config require packagejson \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84 param dir returns string function resolve dir return pathjoin processcwd dir vue css\u52a0\u8f7d\u5668 returns css scss function cssloaders const cssloader loader cssloader options minimize processenvnodeenv development sourcemap false function generateloaders loader loaderoptions const loaders cssloader loader loaderspush loader loader loader options objectassign loaderoptions sourcemap false return css generateloaders scss generateloaders sass const pages fsreaddirsync resolve srcpages moduleexports function plugins htmlpluginoptions const htmlplugins const entrys common srccommonjs const name pages const entry entrys name entry processenvnodeenv development entrys name push builddevclient htmlpluginspush new htmlwebpackplugin objectassign filename processenvnodeenv development name html resolve configid name html template inject true chunks common name hash false chunkssortmode b return aid gt bid config env processenvnodeenv htmlpluginoptions const chunks objectvalues entrys htmlpluginspush new webpackoptimizecommonschunkplugin name vendors chunks chunks minchunks chunkslength new webpackoptimizecommonschunkplugin name common chunks common return entry entrys output path resolve configid filename staticjs name js publicpath chunkfilename staticjs id hash js resolve extensions vue js alias resolve publicsrc vue vuedistvueesmjs devtool processenvnodeenv development false cheapmoduleevalsourcemap module rules test vue loader vueloader options loaders cssloaders test css use processenvnodeenv development extracttextpluginextract cssloader styleloader cssloader test js loader babelloader include resolve src test pngjpe eotttfotf loader urlloader options limit name plugins htmlpluginsconcat plugins", "num": "5669", "d": "5/2017"}, {"title": "", "body": "", "num": "5668", "d": "5/2017"}, {"title": "check android", "body": "version reproduction link steps reproduce var ua amp amp uaindexof msie gt \u67e5\u627e\u5230\u8be5\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5 var isedge ua amp amp uaindexof edge gt var isandroid ua amp amp uaindexof android gt var isandroid ua amp amp uaindexof android gt uaindexof linux gt android\u7ec8\u7aef\u6216\u8005uc\u6d4f\u89c8\u5668 expected would fixed bug vuejs actually happening check android error make work error android", "num": "5666", "d": "5/2017"}, {"title": "check android", "body": "var ua amp amp uaindexof msie gt \u67e5\u627e\u5230\u8be5\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5 var isedge ua amp amp uaindexof edge gt var isandroid ua amp amp uaindexof android gt var isandroid ua amp amp uaindexof android gt uaindexof linux gt android\u7ec8\u7aef\u6216\u8005uc\u6d4f\u89c8\u5668", "num": "5665", "d": "5/2017"}, {"title": "comparing values firing watch", "body": "version reproduction link steps reproduce hi new vue framework using week using latest vue came problem starting trying implement multiple support removed equation simplify bug see normalsimple select following works expected everything fine see following multiple select example placed counter prevent browser hitting javascript lock uncomment return change function work breaks infinite recursion alternatively another solution uncomment json stringify compares sure lot play aware vue noob suspect issue watch event firing value changes value array hello hello result false hitting endless recursion change event firing value watcher indeed case nt know enough vue know perhaps watch perhaps make use jsonstringify something compare values using watch perhaps would break things understand endless recursion fault script firing change watch picking thought perhaps watch able handle arrays maybe objects fire match mercy vue noob expected endless recursion would happen actually happening endless recursion love vue", "num": "5664", "d": "5/2017"}, {"title": "fails ios webkit browsers function isnative", "body": "version reproduction link steps reproduce run ios safari browser add vuejs via amd throwing error function run string add check add check every variable function help expected running without errors actually happening throwing error", "num": "5663", "d": "5/2017"}, {"title": "inject", "body": "problem feature solve using styles inside vuejs components porperties like automatically injected define inside vue component something like resulting injected style contain defined properties proposed api look like api change different injected tags", "num": "5662", "d": "5/2017"}, {"title": "strange variable vshow behavior within component vueresource involved", "body": "version reproduction link steps reproduce run jsfiddle several times two components source displaying content http call done asynchronously one component wrapped within expected components display visible loaded actually happening first component version within shows randomly still produces element strange happens conjunction vueresource styles cases everything works well", "num": "5661", "d": "5/2017"}, {"title": "\u600e\u4e48\u628avif\u52a0\u5728\u6807\u7b7e\u6700\u5916\u5c42", "body": "", "num": "5660", "d": "5/2017"}, {"title": "\u9891\u7e41\u5207\u6362\u4e00\u4e2a\u5b50\u7ec4\u4ef6\u7684\u6570\u636e\u6e90 \u5bfc\u81f4\u4e0d\u89e6\u53d1\u7ec4\u4ef6\u7684updated\u94a9\u5b50", "body": "\u4e0b\u9762\u662f\u4ee3\u7801 \u4ee5\u4e0b\u662f\u63a7\u5236\u53f0\u7684\u8f93\u51fa", "num": "5659", "d": "5/2017"}, {"title": "\u5728\u5904\u7406\u6570\u636e\u7684\u51fd\u6570\u4e2d\u83b7\u53d6\u5f53\u524d\u6e32\u67d3\u7684\u9875\u9762\u5143\u7d20\u5bf9\u8c61", "body": "problem feature solve judgeerr formatitems proposed api look like function target data target", "num": "5658", "d": "5/2017"}, {"title": "click event emitted pressing return", "body": "version reproduction link steps reproduce use example referenced jsfiddle press button trigger desired behaviour focus input field press return expected input field either submit form simply nothing actually happening pressing return input field emits event stated turn triggers button tried vuejs versions extended example shows one button triggered see", "num": "5657", "d": "5/2017"}, {"title": "von click adding event listener", "body": "version reproduction link steps reproduce try branch unable reproduce minimal reproduction tools loginvue login username export default name login data return username password asyncdata store consolelog storestate return storestateusername methods submit function consolelog hi expected expect submit method fire actually happening event listener even attached using von click directive", "num": "5656", "d": "5/2017"}, {"title": "history cyrillic chars", "body": "version reproduction link steps reproduce click go foo link click go bar link click go foo link click go bar link click back button press keyboard expected click back button see changing routerview one state another actually happening triggering", "num": "5655", "d": "5/2017"}, {"title": "support using result vueextend mixins", "body": "version reproduction link steps reproduce run fiddle error shown console expected child logged console via watch handler child actually happening watch fired stratswatch function unconditionally converts child array already converted array via previous merge operation convert nested array fix seems updating line", "num": "5652", "d": "5/2017"}, {"title": "import componets fault", "body": "import elslider nodemoduleselementuipackagesslidersrcmain", "num": "5651", "d": "5/2017"}, {"title": "checkbox nt check binding checked attribute", "body": "version reproduction link steps reproduce instead using native checkbox simply use manage checkbox state block uichecking mouseclick tabspaceing expected checkbox check actually happening checkbox checking despite computed property evaluating nt want use understand short something like exact logic found since making minimal checkbox component wrap native checkbox elaborate css like refrain maintain data props instead event handler comes like simply hoist event", "num": "5650", "d": "5/2017"}, {"title": "sync prop validation", "body": "problem feature solve modifier back make sense recover sync validator well proposed api look like component relies sync modifier possible state prop declaration", "num": "5649", "d": "5/2017"}, {"title": "ability strict silently fail referencing properties vm", "body": "problem feature solve first thank work put library honestly saved well year life already also able write better code also begin trying regress back angular silently failing variable missing see different use case built quite robust solution sending customized text messagesemails ability add variables based user data timestamps etc end user able write message hey userfirstname requested code code hey userfirstname thanks giving us permission text youwe send messages point using nunjucks library interpolate variables message ca nt shake idea able use ssr vue instead created solid proof concept using vue issue running fact use property userpreferencessmsenabled undefined throws exception rather silently failing agree better throw exception rather silently fail angular see first exception rule encountered utilizing vue situation data put vm varies much templating purposes rendered browser send millions text messages per month customers would prefer send message interpolates blank values complete failure interpolate average user nt think terms javascript add variable would much better template render empty string one variable rather fail render also noteworthy users fair bit variation data objects exist one user may exist another user mostly nondevelopers using utility easy instruct instead user amp amp userpreferences amp amp userpreferencessmsenabled proposed api look like propose simple way override properties vm accessed lodash property lib functions exactly see working something like let property require lodashproperty const app new vue template simple property firstname deep property nonexistingobjectfirstname data return firstname simple get path return property path get method would make possible things would make possible return empty values exist would make possible create list variables used template especially conditional rendering", "num": "5648", "d": "5/2017"}, {"title": "nested transition working", "body": "version reproduction link steps reproduce try transition elements inside element transitioned expected interior elements would use rules closest tag supposed transition actually happening interior elements transition use neither closest parent transition tag rule might similar much older version vue user provided jsfiddle example code used extra stuff", "num": "5647", "d": "5/2017"}, {"title": "nested child component props sync error", "body": "version reproduction link steps reproduce \u70b9\u51fb open dialog ext \u663e\u793a dialog ext \u5185\u5bb9 \u5173\u95ed dialog ext showext value true \u63a7\u5236\u53f0\u4f1a\u8f93\u51fa vue warn \u70b9\u51fb open dialog base \u548c \u90fd\u4f1a\u663e\u793a\u51fa\u6765 \u4f9d\u6b21\u5173\u95ed \u518d\u6b21\u663e\u793a\u6765 expected \u91cc\u7684\u7ec4\u4ef6 \u5173\u95ed\u65f6\u80fd\u540c\u6b65 showext \u7684\u503c actually happening avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated visible", "num": "5646", "d": "5/2017"}, {"title": "component cache", "body": "mentiod vue component cache cache view async data api server", "num": "5644", "d": "5/2017"}, {"title": "\u5f53checked checked changed \u4e8b\u4ef6", "body": "", "num": "5643", "d": "5/2017"}, {"title": "provide way type instance method using typescript", "body": "version reproduction link steps reproduce use typescript create plugin adds instance method example install plugin try use component export default class appcomponent extends vue public data appdata public created thisdata apigetappdata lt property api exist type appdata expected expect error would like see official way allow actually happening ts build error sure best approach perhaps allowing sort generic vue class official documented suggestion working around right create subclass feels wrong use version everywhere else", "num": "5641", "d": "5/2017"}, {"title": "transition works velse", "body": "version reproduction link steps reproduce open link push button expected smooth transition actually happening elements changed without transition", "num": "5639", "d": "5/2017"}, {"title": "data object naming prefixes", "body": "version reproduction link steps reproduce open jsfiddle link click run look part code set data prop message working computed getters setters expected want feel free variables naming actually happening data props prefixes nt working axpected like vuejs want free variables naming underscore variable name javascript exception limitation vuejs", "num": "5638", "d": "5/2017"}, {"title": "vue", "body": "webpack\u7684\u8f93\u51fa\u914d\u7f6e \u5ba2\u6237\u7aef vuerouter failed resolve async component default error find module vuerouter uncaught error route navigation error find module functionmoduleresolvefilename functionmoduleload modulerequire require r e functionrequireensure e report e e arraymap native e arraymap native flatmapcomponents e e iterator e step e code modulenotfound vuerouter failed resolve async component default error find module", "num": "5637", "d": "5/2017"}, {"title": "module found error ca nt resolve scss", "body": "use add file mg webpack module packagejson", "num": "5636", "d": "5/2017"}, {"title": "even async components resolved timeout occur", "body": "version reproduction link steps reproduce reproduction link loaded wait expected async components resolved timeout occured actually happening async components resolved timeout occured following error console log", "num": "5635", "d": "5/2017"}, {"title": "templatehead function", "body": "version reproduction link steps reproduce better clone repo try run build script start app error thrown shitty stack trace see actually happening sure error setup expected expecting server server indexhtml actually happening getting thrown error", "num": "5634", "d": "5/2017"}, {"title": "vue crash", "body": "version reproduction link steps reproduce routerreplace expected \u70b9\u51fb\u8fd4\u56de\u540e\u6b63\u5e38\u8fd4\u56de\u9996\u9875 actually happening \u6d4f\u89c8\u5668\u767d\u5c4f\u6216\u5fae\u4fe1\u76f4\u63a5\u5d29\u6e83\u9000\u51fa \u7528\u7684\u662fsentry\u5f02\u5e38\u6846\u67b6", "num": "5632", "d": "5/2017"}, {"title": "prop modifier nt work vbind", "body": "version reproduction link steps reproduce bind whole object component properties attributes modifier expected properties must bounded component properties actually happening properties nt bounded", "num": "5631", "d": "5/2017"}, {"title": "build successfully pug", "body": "version steps reproduce webpack configuration copied vhn without modification introduced pug development process without problems build suggested find pugloader know introduce development environment used loader additional installation pugloader made following configuration moduleexports extractcss processenvnodeenv production preservewhitespace false postcss require autoprefixer browsers last versions loaders pug pugloader use npm run start start service visit give gray page back error switch back development environment pugloader also thrown exception addition development pugloader deleted may understand depth webpack current investigation difficult progress expected run successfully pug actually happening google translate", "num": "5630", "d": "5/2017"}, {"title": "vue page display blank phone browser", "body": "version reproduction link steps reproduce mintui project demo page open pc web browser wechat inner browser phone browser expected browser shows well actually happening phone browser show blank page create cli project run well pc web browser also display well wechat inner browser displayed qq uc sogou browser phone", "num": "5629", "d": "5/2017"}, {"title": "improve error reportingdebugging provideinject allow require flag inject", "body": "problem feature solve currently fails resolve nothing happens injected value remains untouched seems like opportunity warn developer could resolved perhaps intended behavior maybe makes sense sometimes injection would resolved case could way indicate given inject required stricter injection method current workaround throw error object undefined since injects resolved manual step must made many places proposed api look like new api needed support sure design warning hoping could resolved would warning browser console", "num": "5628", "d": "5/2017"}, {"title": "ssrclientmanifest amp ssrserverbundle ca nt emitted nonpublic dir", "body": "version reproduction link steps reproduce follow steps open url app work fine look dir like vuessrbugminimalreproductiondist mainbundlejs vuessrclientmanifestjson vuessrserverbundlejson see ssrclientmanifest amp ssrserverbundle files since use ssrclientmanifest amp ssrserverbundle server side files placed public folder tried specify different dir ssrclientmanifest amp ssrserverbundle store uncommenting buildwebpackclientconfigjs buildwebpackserverconfigjs rebuild app nt see ssrclientmanifest amp ssrserverbundle files dir deep dir case os wsl linux expected ssrclientmanifest amp ssrserverbundle files emitted dir actually happening ssrclientmanifest amp ssrserverbundle files emitted dir", "num": "5626", "d": "5/2017"}, {"title": "expose option change contentplaceholder value createbundlerenderer function", "body": "problem feature solve make flexible terms ssr allows developers decide placeholder name rather strictly dictate one use ie proposed api look like assume following object function", "num": "5624", "d": "5/2017"}, {"title": "vuejs available android phone", "body": "version reproduction link steps reproduce use new vue js go dying expected new vue object return true actually happening uncaught syntaxerror error msg attachments", "num": "5623", "d": "5/2017"}, {"title": "elementvue save use", "body": "clean way get current vue instance given dom node even future save access use case integration large famous enterprise content management system would like build content elements vue components unfortunately cms ships javascript code ca nt changed without high efforts third party scripts allow authors cms use dragndrop place new content element eg carousel teaser page dragndrop happened event fired would like bind reinitialize new placed inline template elements managed come hack maybe better solution use case js content change handler function handlecontentchange const inlinetemplates documentqueryselector inlinetemplate var inlinetemplate inlinetemplates processnewelement inlinetemplate tell vue initialize new element function processnewelement element const vue getclosestvueinstance element new vue el element data vue data returns vue instance next element dom tree function getclosestvueinstance element element return elementvue getclosestvueinstance elementparentelement", "num": "5621", "d": "5/2017"}, {"title": "\u6211\u60f3\u5b9e\u73b0\u7c7b\u4f3cgoogle nexttick", "body": "", "num": "5620", "d": "5/2017"}, {"title": "\u6587\u6863\u9519\u8bef", "body": "vue item \u548c index \u5199\u53cd\u4e86", "num": "5619", "d": "5/2017"}, {"title": "elements unnecessarily recreated vfor changes", "body": "version reproduction link steps reproduce change inputs marked change add row inputs following vfor rows get recreated lose value inputs remain seems happen inputs vfor element contained parent component slot expected inputs remain unchanged regardless happens sibling vfor element actually happening input elements following vfor recreated resetting value", "num": "5618", "d": "5/2017"}, {"title": "vfor template literals", "body": "hi posibility vfor use template literals got want make variable working vuex got state objects english spanish containing content translated want able insert english selected viceversa anyway without writing code times rendering thanks advance", "num": "5617", "d": "5/2017"}, {"title": "dynamic slot name binded vfor directive working scoped slots", "body": "version reproduction link steps reproduce create scoped slot using element necessary use dynamic props set slot property attempt utilize slot expected slot loaded display correctly actually happening dynamic properties nt seem work component slot property getting set null loaded", "num": "5616", "d": "5/2017"}, {"title": "dynamic slot name bound vfor directive working scoped slots", "body": "version reproduction link steps reproduce create scoped slot using element necessary use dynamic props set slot property attempt utilize slot expected slot loaded display correctly actually happening dynamic properties nt seem work component slot property getting set null loaded", "num": "5615", "d": "5/2017"}, {"title": "dynamic slot name working scoped slots", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "5614", "d": "5/2017"}, {"title": "ipadiphone crashing big page", "body": "version reproduction link steps reproduce iphone plus ipad crashing big pages iphone ipad air work ok see issue use following javascript div app contains dom nodes new vue data return test test mount app expected user see page actually happening crash message problem repeatedly occured url iphone ipad air work ok", "num": "5613", "d": "5/2017"}, {"title": "everything disappeared dom", "body": "version reproduction link steps reproduce provided comments jsfiddle url expected error actually happening body content disappeared", "num": "5612", "d": "5/2017"}, {"title": "use blur except buttons", "body": "hello input button save shows want hide button user click button want run method possible thanks", "num": "5611", "d": "5/2017"}, {"title": "style missing", "body": "version reproduction link steps reproduce iamges array change array item value expected old pictures modified new pictures everything else actually happening picture changed style backgroundsize gone", "num": "5609", "d": "5/2017"}, {"title": "style missing", "body": "version reproduction link steps reproduce iamges array change array item value change array value expected old pictures modified new pictures everything else actually happening picture changed style gone", "num": "5608", "d": "5/2017"}, {"title": "vbind props injects inappropriate attributes children", "body": "version reproduction link steps reproduce define components single prop one use vue instance pass props vbind props one inspect html expected props defined children used others ignored least injected html attributes turn markup invalid actually happening props defined child component injected attributes invalidates html markup", "num": "5606", "d": "5/2017"}, {"title": "warn component option object function", "body": "problem feature solve often get mixed properties component functions nt mistakenly define functions objects opposite scenario property needs function instead object already get helpful warning message define properties probably others functions instead vue either silently fails use property gives confusing error message spent embarrassing amount vue dev time simple mistake ones value function instead object simply ignored function instead object prevent children rendering log message cause runtime error message similar error errors least somewhat misleading real problem main benefit warning kind mistake would spend less time futzing around fixing boilerplate getting slightly wrong proposed api look like component initialized properties whose values functions objects emit warning similar warning eg", "num": "5605", "d": "5/2017"}, {"title": "allow vm watch signature similar watch property", "body": "problem feature solve running issue using instead usually using property within watch object tried following signature accustomed js mounted thissometest return instead reason signature supported proposed api look like", "num": "5604", "d": "5/2017"}, {"title": "optionmergestrategiesinject", "body": "version reproduction link steps reproduce make component extend another one parent child define injection parent injection lost overridden expected injections merged actually happening injections override parent ones injections initialisation looks injections keys merge prototype like done function mergeassets object hashes propsmethodscomputed instead copy object extend properties might cleaner allowed use prototype", "num": "5603", "d": "5/2017"}, {"title": "automatically create nested namespaces exists", "body": "problem feature solve automatically register namespaces would nice function register paths function check path existance registermodule could register path automatically currently possible hack access private var directly add dynamicaly loaded modules namespaces order loading could changed module must check namespace exists create eg proposed api look like extend registermodule auto namespace creation", "num": "5602", "d": "5/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u7ec4\u4ef6\u4e3a\u8fd9\u4e2a title \u5728\u5916\u90e8\u5e94\u7528\u8fd9\u4e2a\u7ec4\u4ef6 expected actually happening \u5355\u56fe\u7247 \u8bbe\u8ba1\u7a3f\u5206\u7c7b", "num": "5601", "d": "5/2017"}, {"title": "requireensure", "body": "version reproduction link steps reproduce route code const userquery resolve gt requireensure modulesusercenteruserqueryvue gt resolve require modulesusercenteruserqueryvue userqueryvue code dashboarduserresetpwd margin expected support webpack requireensure vue style block actually happening e neprojecticedashboardclientmodulesusercenteruserqueryvue e neprojecticedashboardclientmodulesusercenterusercentervue e neprojecticedashboardclientmoduleshomehomevue e neprojecticedashboardclientmodulesappvue find delete using webpack require ensure working properly", "num": "5600", "d": "5/2017"}, {"title": "typeerror read property call undefined", "body": "error log e neprojecticedashboardclientmodulesusercenteruserqueryvue e neprojecticedashboardclientmodulesusercenterusercentervue e neprojecticedashboardclientmoduleshomehomevue e neprojecticedashboardclientmodulesappvue route code const userquery resolve gt requireensure modulesusercenteruserqueryvue gt resolve require modulesusercenteruserqueryvue userqueryvue code dashboarduserresetpwd margin find delete using webpack require ensure working properly", "num": "5599", "d": "5/2017"}, {"title": "\u5728", "body": "\u5728", "num": "5598", "d": "5/2017"}, {"title": "allow access subcomponents declared component", "body": "problem feature solve posted seems impossible currently lets feature request seems dom tree processed outside inside like vue process first excelent like suggest well imagine component called alternative default templated something like subcomponent called templated exclusive make senses put global scope instead declares subcomponent instance method could create codes directly html like result like html hello world problem run code receives error like justly declared globally putting content directly starts suggestion finally suggestion allow access subcomponents declared component avoid globalize specific subcomponents like case edit know pass list top component spoils readability working static code mainly using template engine convert json easily proposed api look like affects", "num": "5596", "d": "5/2017"}, {"title": "\u7f3a\u5c11 ie use webpack vue router", "body": "", "num": "5595", "d": "5/2017"}, {"title": "using scoped slots syncing select object literal", "body": "version reproduction link steps reproduce create child component scoped slot parent template add scoped template child component bound select element data object try selecting option expected expected sync component object selected data object using select data binding actually happening instead nothing happens change option values string binds correctly also noted process putting select child component works expected", "num": "5594", "d": "5/2017"}, {"title": "since specific cases two consecutive comment vnodes merged one text vnode", "body": "version reproduction link steps reproduce use following template check foo expected template childnodes compiled actually happening vue gt compiles template childnodes vue performs correctly bug lead error clientside rendered virtual dom tree matching serverrendered content", "num": "5592", "d": "5/2017"}, {"title": "template rendering vuessrserverplugin raises error whitespace used around context property", "body": "version reproduction link steps reproduce access expected error see text actually happening error rendering error caused omission whitespace whitespace requirement documented removed unnecessary consistent way templates work elsewhere", "num": "5591", "d": "5/2017"}, {"title": "ability make shallow comparison prev next stateprops rendering", "body": "problem feature solve provides way make least shallow comparison current stateprops component next stateprops able abort unnecessary unwanted component rerendering situations pretty much like reactjs perhaps ca nt find mentionexample related kind situation maybe missing something case sorry inconvenient proposed api look like", "num": "5590", "d": "5/2017"}, {"title": "allow using function call syntax create bound function directive expressions", "body": "problem feature solve similar event binding allow directive value create bound functions would functionally similar already works event bindings makes sense syntax consistent use case directive deactivates element clicked returned promise fulfilled pen better understand since functionally similar makes sense syntax work currently call right away set returned value want proposed api look like", "num": "5588", "d": "5/2017"}, {"title": "input event triggered clicking outside input field", "body": "version reproduction link steps reproduce jsfiddle type character input field input event logged console click outside input field another input event logged console happen expected input event triggered like vue actually happening input event triggered regression occur vue breaks autocomplete component relies input events trigger autocompletion", "num": "5587", "d": "5/2017"}, {"title": "random event triggered input vmodel", "body": "version reproduction link steps reproduce click text input type letter h hit enter two events triggered hit enter event expected expected enter trigger event like normally type anything behavior see actually happening adds extra event hitting enter key nt hitting enter key normally without anything typed front could nt find reason explanation within changelogs assuming intended behavior customer complained autocomplete stayed open hit enter key nt previous week fix easy move keydown keyup canceling upcoming request kinda strange bug", "num": "5586", "d": "5/2017"}, {"title": "clerical error", "body": "version reproduction link steps reproduce code locates srccompilercodegenindexjs line transforms pluckmodulefunction optionsmodules transformcode think second parameter transformcode wrong transformnode optionsmodules gendata statickeys transfromnode transfromcode expected transfromnode actually happening transfromcode", "num": "5585", "d": "5/2017"}, {"title": "unit test ca nt compile less file correctly", "body": "version reproduction link steps reproduce steps vue init webpack myproject cd myproject everything works fine cnpm less lessloader savedev edit please check code detail steps way capitalize first letter good way env may ignore case file name mkdir srcless create new file check content create new file check content create new file check content npm run dev everything works fine terminate dev server error raised unable resolve variable defined please check message content step export default name app import lessappless content ofsrclessappless step content step content step app fontsize fontsize webkitfontsmoothing antialiased mozosxfontsmoothing grayscale textalign center color margintop error message step warn reporter sourcemap position found trace undefined phantomjs mac os x error error module build failed app fontsize fontsize variable fontsize undefined userstangjinfengtmpmyprojectsrclessbaseless line column phantomjs mac os x executed error secs secs expected baseless complied resolve variables correctly actually happening error variable undefined raised", "num": "5584", "d": "5/2017"}, {"title": "using ajaxprefilter", "body": "problem feature solve using ajaxprefilter add headers requests works trying vuejs vue request must execute different scope filter nt trigger way apply ajaxprefilter vue thank would awesome nt find anything proposed api look like would like know feature exists could added docs", "num": "5583", "d": "5/2017"}, {"title": "vue template compiler namespace support", "body": "problem feature solve ability structured template sometimes end lot components even name rename inside one component feel like would nice could namespace proposed api look like html import authentication signup usercomponents import counter serverstatus statisticscomponents export default components user authentication signup statistics counter serverstatus", "num": "5582", "d": "5/2017"}, {"title": "naming components string templates different documentation", "body": "version reproduction link steps reproduce component components section named kebabcase template used kebabcase used camelcase used string template camelcase kebabcase intitlecase name specified components section named titlecase forms available string templates expected according documentation registering components props use kebabcase camelcase titlecase vue care documentation also mentions using string templates however bound html caseinsensitive restrictions means even template reference components props using camelcase titlecase kebabcase actually happening components specified using kebabcase nt show referenced using camecase titlecase components specified using camelcase nt show referenced using titlecase", "num": "5581", "d": "5/2017"}, {"title": "add selected attribute", "body": "version reproduction link steps reproduce add select dropdown update selected attribute via computed property expected selected attribute added actually happening selected attribute added need using datatables plugin option print table csv format default includes option table need filter values currently selected display csv table unfortunately datatables passes string html element included example edited since selected attribute nt added determine selected thanks", "num": "5580", "d": "5/2017"}, {"title": "multiple events single von similar vbind object", "body": "problem feature solve could make binding bunch events element clear would also make work similarly proposed api look like way create computed list returns hash many event listeners repetitive events get something close directive without modifiers nearly useful also nt remove events quick attempt", "num": "5578", "d": "5/2017"}, {"title": "vmodel directive nt set according prop value child component using single file comp", "body": "version reproduction link steps reproduce open jsfiddle vue result different value prop set html output passed prop however app render passed prop parent code two different versions discussion vue forum issue expected prop child component set parent actually happening undefined using vue noticed issue days ago tricky part reproduce fact happens using render functions generated webpackvueloader original source two components processed vueloader create render functions child component nt receive prop value javascript passed prop value moduleexports props value string parent javascript moduleexports data function return customval value parent components testcomp require testcompvue", "num": "5577", "d": "5/2017"}, {"title": "allow key attribute scoped slots one single root element", "body": "problem feature solve improving rendering performance generic lists proposed api look like listvue listaflavouravue imaginarylistaflavourbvue", "num": "5575", "d": "5/2017"}, {"title": "custom methods text interpolation", "body": "problem feature solve allow create custom methods filters text interpolation declare methods actions example vuex map appwide thus would need importing libraries proposed api look like example developer could simply add following function method inside mustache syntax following would call function return formatted number", "num": "5574", "d": "5/2017"}, {"title": "ssr uid shared requests", "body": "version reproduction link steps reproduce tests based branch nuxtjs brings compatibility nuxtjs reproduced setup set false expected incremented context reset every request actually happening shared across requests request affects next one", "num": "5573", "d": "5/2017"}, {"title": "make creating functional components easier", "body": "problem feature solve currently declaring functional components specify field supply render method would lot clearer instead framework could figure sees function instead object proposed api look like registering function functional component registering components example vue files", "num": "5572", "d": "5/2017"}, {"title": "ssr error instanceof error false", "body": "version reproduction link steps reproduce use vueserverrender found vmrunnewcontext result cause koa think add error expected actually happening", "num": "5570", "d": "5/2017"}, {"title": "filter documentation wrong", "body": "version reproduction link steps reproduce navigate vue api docs note mentions filters understanding removed api expected expected see filter docs note removal actually happening still see filter clicking link source returns broken link", "num": "5569", "d": "5/2017"}, {"body": "expected handle dynamic classes vue", "d": "5/2017"}, {"body": "think bug behaviour means ca nt use vue conjunction pieces javascript example class independent vue method adds class element happens also class added class removed seems like reasonable use case work", "d": "5/2017"}, {"body": "let put another way manage classes vue alone use pluginlib custom code manipulate classes wrap vue component bug really", "d": "5/2017"}, {"body": "one core principles vue works well frameworks existing projects taken opening paragraph vue guide unlike monolithic frameworks vue designed ground incrementally adoptable core library focused view layer easy pick integrate libraries existing projects say use vue manage everything completely contradicts core principle nt see technical reason vue ca nt preserve dynamically added classes think bug convert feature request", "d": "5/2017"}, {"body": "actually easy integrate libs vue need help always ask forum dynamic class issue facing discussed many times already looking issues may help", "d": "5/2017"}, {"body": "expose methods parent component customising component content using slot use scoped slots pass methods way pass variables html", "d": "5/2017"}, {"body": "thanks raising point setting expression jsx pure js makes sense since already pass arbitrary expression evaluated set value render functions add warning vue important part updating docs playground edit makes sense use expression directive", "d": "5/2017"}, {"body": "ah see suggestion automatically evaluating using", "d": "5/2017"}, {"body": "possible expression evaluated template compiler use directly value", "d": "5/2017"}, {"body": "see oh well thanks time", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "wrong", "d": "5/2017"}, {"body": "created called rendered call routerpush called component rendered", "d": "5/2017"}, {"body": "use nexttick inside mounted support please refer forums", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "pretty easily define wrapper component keeps components rendering ssr postpones rendering client hydration works correctly egoist like lines code could viable workaround request discussed", "d": "5/2017"}, {"body": "get \u0e1e\u0e04 franck freiburger notifications githubcom problem feature solve many component yet compatible ssr may require large changes support partial ssr rendering could allow use component meanwhile eventually ported directives could also benefit behavior components may mandatory seo could allow better clientsideserverside load balance proposed api look like vue component export default allowserversiderendering false receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "thanks fine", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "sorry found solution click isa isa reversemessage", "d": "5/2017"}, {"body": "markdown actually uses spaces list indent doublespace likely display expected eg seen result github markdown also regardless whether behavior correct issue markdown library marked instead vue", "d": "5/2017"}, {"body": "set", "d": "5/2017"}, {"body": "due things watcher keeps track dependencies new reactive property added watcher fire designed handle case may exist initial watch thus wo nt collected dependency watcher fires new value old value primitive strictly equal watcher wo nt trigger callback however new value old value objects arrays may mutated trigger callback safe long story short overfire cases ensure correctness entire system design constraint aware practice wo nt lead logical errors critical perf problems wontfix may check see improve rewriting reactivity system using proxies", "d": "5/2017"}, {"body": "got lead logic errors using vuex store shared cache adding new item item object cache depending upon cache items triggered leads considerable performance problem item object callbacks relating called making unwanted logic results understand hard detect object changed easy way fix try using rx instead vue reactive system guys suggestions use case", "d": "5/2017"}, {"body": "halfsolution using finergrained computedwatchers whenever possible prefer making final computed watched value primitive know might always feasible though logicwise since watcher callback definition called multiple times always able safely overwrite previous sideeffects called value could lead logical errors would even likely lead logical errors called different values", "d": "5/2017"}, {"body": "yes temporary solution like suggested stringifying object saving vuex cache however drawbacks since component uses cache item would make redundant copy string parse new object memory consumes cpu memory objectwatching worked fine would one copy object memory stringifyparse needed another possible solution order avoid unwanted firing callbacks since watcher function called super frequently might consume much cpu dig logic see possible make safe repeating redundant callbacks think rxjs help case", "d": "5/2017"}, {"body": "improved logic use events instead notify change cache works fine thanks", "d": "5/2017"}, {"body": "use", "d": "5/2017"}, {"body": "use wait updates change also bug report", "d": "5/2017"}, {"body": "ktsn would interested working api surface big relatively straightforward", "d": "5/2017"}, {"body": "done", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "manually destroyed obviously created also never manually call component mounted vue component ed suggestion using computed property prop control page keptalive", "d": "5/2017"}, {"body": "thanks ur reply maybe use wrong way think u nt get point mean manual destroy b b gt click gt b gt c gt b b runs lifecycle think gt b b cached b gt c gt b use cached componentb however b created ps b gt c trigger c gt b triggered", "d": "5/2017"}, {"body": "child components reproduction works child components provided root instance", "d": "5/2017"}, {"body": "ktsn hm generic html tags treated child components component children give paragraphs", "d": "5/2017"}, {"body": "docs functional component render context component instance see", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "support files mentioned typescript git repo essentially said spoken evan supporting vue files would something ideally language service extension would take see details would like request extension files gets written", "d": "5/2017"}, {"body": "language service implementation vscode octref currently working", "d": "5/2017"}, {"body": "currently nt plan implement standalone project want idelike experience need use vscode vetur maybe octref able extract language service standalone project future", "d": "5/2017"}, {"body": "tracked going happen soon since language service undergoing major rewrite better template intellisense previously dealing htmlcssjs regions using multiple language services separately combining together vetur provide even advanced intellisense template using info cssjs sections", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use add new keys reactive objects", "d": "5/2017"}, {"body": "thanks looks like bug thanks concise clear repro", "d": "5/2017"}, {"body": "seems async component rendered early", "d": "5/2017"}, {"body": "solved wait minute rendering need use hidden element placeholder", "d": "5/2017"}, {"body": "actually intended behavior name slots resolution follows rule work children nodes parent component node created rendering context case created context root instance created context functional component slot names ignored one hack work around use root instance create instead rendering context nodes", "d": "5/2017"}, {"body": "caikan second case change code code may cause two div element template allowed vue first sample code results one template one div template", "d": "5/2017"}, {"body": "reason property nt exist adding nothing either ie element therefore anything sure something give deeper look", "d": "5/2017"}, {"body": "sure issue though stuff renders fine svg nodes example probably better position judge app renders different svg layers based svg strings everything works fine really element nt svg data works fine hope helps bit", "d": "5/2017"}, {"body": "maybe works things moment wo nt work elements missing idea ie thought", "d": "5/2017"}, {"body": "maybe wording g element properly support innerhtml use time hope figure though may pm eduardo san martin morote lt notifications githubcom wrote maybe works things g moment vhtml wo nt work elements missing innerhtml idea ie thought receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "lt nt work without vue involved", "d": "5/2017"}, {"body": "hmm indeed seems polyfill takes helps directive render contents open issue repo seems polyfill nt handle images properly thanks guys", "d": "5/2017"}, {"body": "expected behavior called initial insert inside kept alive wo nt trigger similar hook components", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "ca nt open repro link please provide github repo instead explanation also vague nt seem related vue way vue core nt use promise internally tests passed sure upgraded vue libs please try isolate problem", "d": "5/2017"}, {"body": "u open", "d": "5/2017"}, {"body": "could problem related latest version webpack", "d": "5/2017"}, {"body": "closing believe nothing vue would lead error please make sure provide repro shows error caused upgrading vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "current behavior create reactive fields exist although value set nt trigger updates design encourages declare model fields upfront instead using empty object however using dynamic path segments binding seems impractical declare fields beforehand added patch makes code work said seems better use array already works current version", "d": "5/2017"}, {"body": "expected behavior mount vue instance piece indom template vue uses merely template extracts outerhtml element parses virtual dom render fns generate new dom structure replaces original element use custom elements template initialized page load vue generates dom simple fix move app template tag makes custom elements dormant vue mounts", "d": "5/2017"}, {"body": "content inside considered fallback content means proposal implemented without breaking changes personally feel makes slot composition overly complicated", "d": "5/2017"}, {"body": "trying understand better problem would need te discard component create new one current user kind state held vuex", "d": "5/2017"}, {"body": "using vuex maybe something look user data comes promise returning service implementation look something like export default name profile created userservicegetuser user gt thisuser user know could check see fresh data using hook component reused user see old state view network request get new user data resolves would prefer new instance profile component created know user data changed due user interaction elsewhere app", "d": "5/2017"}, {"body": "already props dynamically updated extra api feels redundant also imo controlled outside rather inside component", "d": "5/2017"}, {"body": "already fixed guess via pr", "d": "5/2017"}, {"body": "sqal said", "d": "5/2017"}, {"body": "components sugar syntax nt support modifiers using event nt change anything components actually use prefer", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "changing attach name props named users everything goes rightbut nt reason", "d": "5/2017"}, {"body": "understand need first understand vue performs updates templates first compiled render functions render functions called every time component updated since using inline literal prop value new literal array created every time parent component rerenders causes prop watcher fire every time solution avoid using inline literals use constant value instead", "d": "5/2017"}, {"body": "ok thank explanations", "d": "5/2017"}, {"body": "\u662f\u9488\u5bf9\u83b7\u5f97 key", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "\u56e0\u4e3a\u5916\u9762\u7684 li todo key todo \u90fd\u88ab\u91cd\u65b0\u521b\u5efa\u4e86", "d": "5/2017"}, {"body": "please include reproduction link small repository would helpful", "d": "5/2017"}, {"body": "also desription unsure actual problem saying parent hook fires child everything else seems like expected behaviour would indeed strange shoud fired called means child nt begin exists point", "d": "5/2017"}, {"body": "parent created mounted child created mounted console log parent created parent mounted child created child mounted parent created child created child mounted parent mounted", "d": "5/2017"}, {"body": "ok could loader bundle problem code loading vue use webpack components name vue cause problem vuecomponent child component child works import child componentschildvue vuecomponent child child question causes problem wrong render sequence components themselve work bundler return promise vue use vue uses promise accept dynamic loaded components", "d": "5/2017"}, {"body": "rendering sync process hwever lazyload component webpack happens asychronously parent finish rendering sychronously child lazyloaded rendered execution order lficecycle hooks different sync render expected", "d": "5/2017"}, {"body": "thanks thats thought feature request enable use lazy loaded components", "d": "5/2017"}, {"body": "case parent lazy loaded component", "d": "5/2017"}, {"body": "feature request enable use lazy loaded components using right nt discussion done forum", "d": "5/2017"}, {"body": "\u63d0\u4ea4\u9519\u5730\u65b9\u4e86", "d": "5/2017"}, {"body": "\u8fd9\u91cc\u8ddfnative\u4e8b\u4ef6\u7684", "d": "5/2017"}, {"body": "javoski \u758f\u5ffd", "d": "5/2017"}, {"body": "\u7528 arguments \u5c31\u53ef\u4ee5\u4e86 tue may pm yuri notifications githubcom wrote javoski \u758f\u5ffd receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "\u8bf7\u7ed9\u91cd\u73b0 tue may pm yuri notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "arguments tue may pm yuri notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "commit lead think using modifier better explict way value html input elements always returns string see", "d": "5/2017"}, {"body": "expected according browser default behavior adding modifier directive meet expectation", "d": "5/2017"}, {"body": "thanks solution vmodelnumber pengchongfu javoski", "d": "5/2017"}, {"body": "yeah works components think could include warning noncomponents", "d": "5/2017"}, {"body": "posva okay way make transition noncomponent cached component nt want create new component noncomponent", "d": "5/2017"}, {"body": "actually everything component noncomponent element", "d": "5/2017"}, {"body": "closing seen must use components inside", "d": "5/2017"}, {"body": "guess current behavior expected one beause syntax sugar seem make scene event handler delete property object maybe break reactivity property", "d": "5/2017"}, {"body": "find work around thank", "d": "5/2017"}, {"body": "saw expected behavior reason allow user know value provided input otherwise could entered user also empty input", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "could expected behavior vue force update component children", "d": "5/2017"}, {"body": "jkzing force update component occasion", "d": "5/2017"}, {"body": "rlsz sure let wait core members answer", "d": "5/2017"}, {"body": "jkzing", "d": "5/2017"}, {"body": "expected behavior child component slot content slot content may changed parent rerender force update child necessary", "d": "5/2017"}, {"body": "actually child component without slot also updatedthe determinant child component look like means wo nt updated parent changes updated parent changes whether child slot besides said slot content may changed parent rerender possibility vue trigger child updated even uncertain child content changed right", "d": "5/2017"}, {"body": "rlsz yes determine whether content changed needs diffed however content part child vdom tree way diff force child update", "d": "5/2017"}, {"body": "think make sense child component nt slot content", "d": "5/2017"}, {"body": "thanks point better way think determine whether child content changed differ outerhtml child vdom tree", "d": "5/2017"}, {"body": "rlsz outerhtml updates vdom nodes", "d": "5/2017"}, {"body": "javoski try", "d": "5/2017"}, {"body": "rlsz really meant content inside tag rendered child component intend render slot content related topic updated hooks reply actually child component without slot also updatedthe determinant child component look like means wo nt updated parent changes updated parent changes whether child slot", "d": "5/2017"}, {"body": "javoski suggestion", "d": "5/2017"}, {"body": "rlsz thing ancestor component changes without regenerate child vdom tree diff old ones know whether child updated even child nt need still updated also happens vdom implementations like always rerender child component whether without", "d": "5/2017"}, {"body": "jkzing imperfection react also vue think", "d": "5/2017"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "5/2017"}, {"body": "mutates original array nt want create shallow copy avoid also make sure use attribute rendering lists", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "default webpack isomorphic use instead", "d": "5/2017"}, {"body": "thanks lot quick check helps ps nt chance attend vue meeting beijing chance access media like videos meeting thanks", "d": "5/2017"}, {"body": "works fine may looks like blur event never bubble wo nt trigger outer div", "d": "5/2017"}, {"body": "blur event triggered element captures focus eg use attribute make element focusable", "d": "5/2017"}, {"body": "afaik electron support devtool extensions", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "spec clearly defines value truefalseundefined usecase boolean value also string", "d": "5/2017"}, {"body": "ah indeed thanks pointing thanks time", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "meet problem example print lifecycle components abc destroy component b b gt c b run b lifecycle u see b destroyed got recommended ues manual clear cached component", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "think problem way import image try import image file assetdefaultjpg", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "nt export symbol separate file import chunks", "d": "5/2017"}, {"body": "posva nt solve problem still asynchronously load file actually complicates wo nt able leverage vue async component feature block declaration component till chunk loaded file longer component", "d": "5/2017"}, {"body": "meant asynchronously loading chunk since small unnecessary nt change rest code specially async component part", "d": "5/2017"}, {"body": "posva perhaps mentioned entry points suggesting synchronously load symbol file inlined entry points create two different symbols", "d": "5/2017"}, {"body": "oh right symbol different although raised point right start trying async load two components use inject suppose creating app lib wonder need use injectprovide targeted towards libs imo relate two components way chunk app wise", "d": "5/2017"}, {"body": "posva making library", "d": "5/2017"}, {"body": "code split library even though looks like bad idea put components chunk", "d": "5/2017"}, {"body": "posva library modular many entry points accommodate specific usecase besides point feature request wo nt going details normally nt issue webpack chunking async loading inconvenience fact vue async components loader nt function evaluated async components loaded asking make take function seems like reasonable feature request could benefits thanks trying help looking solutions problem least thread would like issue regarded simply feature request", "d": "5/2017"}, {"body": "ah see get multiple entrything said earlier thanks trying help looking solutions problem least thread would like issue regarded simply feature request regarded feature may convenient need know problem exists makes necessary pretty normal ask questions", "d": "5/2017"}, {"body": "problem fr solves described first post understandable fine ask questions concerned way kept offering alternative solutions steering fr thread offtopic", "d": "5/2017"}, {"body": "nt worry sceptical fr usually worse concerned pattern could impact usage injectprovide usage injectprovide provided definitely good one part sceptical part referencing parent child basically right inject access component static limits behaviour purpose making function makes super flexible also dangerous ps feel like really bothers asking questions understand usecase may super clear bother make clearer", "d": "5/2017"}, {"body": "posva part sceptical part referencing parent child basically parentsomething accessible context component instance hence note referring instance parent component declaration example closer context child instance tripleequals declaration safer imported explicit dependency rather implicit dependency crucial parent immediate parent child poor assumption make right inject access component static limits behaviour purpose making function makes super flexible also dangerous dangerous literally every method lifecycle event handlers render nonfunctional data provide methods computed etc function access instance access retrieve components component declared global ones anyway putting declaration component apart feature request already something helps understand fr better consider symbol separate file like said reason put component declaration purely convenience organizational leverage vue async component feature ps feel like really bothers asking questions understand usecase may super clear bother make clearer probably confused overlooking wrote understandable fine ask questions concerned way kept offering alternative solutions steering fr thread offtopic reiterate fine ask questions", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "datawowdelay", "d": "5/2017"}, {"body": "know bind lines arrtibute datawowdelay nt know deal lines without atawowdelay lines list", "d": "5/2017"}, {"body": "pass anyway element wont care get attribute need true components specify prop props access even pass throw hope helped", "d": "5/2017"}, {"body": "thanks micaso", "d": "5/2017"}, {"body": "tested fresh firefox works nicely must plugin extension messing style make sure open kind issues vuejsvuejsorg repo", "d": "5/2017"}, {"body": "suspect ffox ubuntugnome sorry posting wrong queue nonbug wasting time thanks", "d": "5/2017"}, {"body": "nt understand description problem asking question qualify steps reproduce transitions part problem problem exists without well distract makes think bug", "d": "5/2017"}, {"body": "linusborg pointed due transitions original element still dom animated anyway query dom result instead logic computed property", "d": "5/2017"}, {"body": "hi bramu depends specified dependency see update manually packagejson run recommend use", "d": "5/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "5/2017"}, {"body": "nt think jsx need cause syntactic sugar createelement suppose want load render component usual time scenario want load exactly component new attrs props added original binded event disabled removed importantly want keep template component pure possible instead modifying adding extra logic achieve goal think best way modify ast directly compile render function hope guys catch point", "d": "5/2017"}, {"body": "nt return anything would difficult imagine supposed return consider fact could fire several different functions none", "d": "5/2017"}, {"body": "sirlancelot alternative call component method return value without", "d": "5/2017"}, {"body": "found guid vuejs parentchild component relationship summarized props events parent passes data child via props child sends messages parent via events alternatives want return calculated value parent method want reuse want duplicate code props really trustable two way", "d": "5/2017"}, {"body": "turn poorman vuex store supplying constructor starting object use create computed property seeing original post nt strictly issue vue team definition may able get better assistance forums gitter stack overflow", "d": "5/2017"}, {"body": "ianpatel encourage ask questions forum gitter try use issue tracker bug reports feature requests question pubsub trying called rpc instead emitting event provide method called barebones implementation fills calls function name without dedicated api", "d": "5/2017"}, {"body": "intended behavior hook used manipulate dom elements called every single item respectively", "d": "5/2017"}, {"body": "thanks response best practice tips managing events aggregate good ol counter system got nt love idea manually syncing number transition elements counter logic", "d": "5/2017"}, {"body": "perhaps using namespaced keys filtering checking match although regular html elements children would checked well", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "delimiters changed using runtime compilation full build work files keep files syntax consistent also version yet", "d": "5/2017"}, {"body": "oh okay thanks haha yeah realized cli upsidedownface also thanks great work love vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use", "d": "5/2017"}, {"body": "reproduction link link vuejs repository see problem page", "d": "5/2017"}, {"body": "sorry need repro somehow simulate reasonable way feel free open new issue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "create issue vuejsvuecli", "d": "5/2017"}, {"body": "okay thanks znck", "d": "5/2017"}, {"body": "first use option able reproduce situation appear html parsing safari element wrapped template tag results normal form element removed know gt outhtml add associated class everything right nt think bug much like safari approach", "d": "5/2017"}, {"body": "lonelyclick said related safari wonder allowed include form inside custom tag mds says wo nt happen use template strings files", "d": "5/2017"}, {"body": "repro seem using plugin handle async computed may post issue ask gitter forums stackoverflow", "d": "5/2017"}, {"body": "since vue default filters shipped free create search found one", "d": "5/2017"}, {"body": "indeed look like want google beforehand found nothing googlefufailure", "d": "5/2017"}, {"body": "maybe report", "d": "5/2017"}, {"body": "looks fine may fixed meantime kind problems better directly send pr vuejsorg repo", "d": "5/2017"}, {"body": "chrome see console output change value browser using", "d": "5/2017"}, {"body": "nirazul use last version chrome osx sierra see input field variable filtered values use variable input field logically influences filtered values recalculated every time change variable strange", "d": "5/2017"}, {"body": "dom gets updated vue therefore methods get applied filter sure expected use computed property need caching", "d": "5/2017"}, {"body": "posva looked generated render function saw filter function called every time function component called behaviour vue different performance nt need create computed property every transformation value transform function called dependent values changed called every rendering list many elements slow new behaviour similar dirty checking angular sad", "d": "5/2017"}, {"body": "imo expected change lead vm call render function invoke myfilter mymethod may improved keep dependencies relation object vnode states depend", "d": "5/2017"}, {"body": "wrap elements rely vue component avoid example", "d": "5/2017"}, {"body": "xujiongbo course create child component case case list need create new component every list item sometimes verbose fact think filters become useless behaviour expected also reactive computed properties much better need application great performance creating new component every small list item one big overhead looked like choice lesser two evils performance", "d": "5/2017"}, {"body": "also problem every property need created computed properties transformed data example property type date js want display two places different formats momentjs fact good performance create two new computed properties looked bit verbose looked like view layer model layer move model layer due performance issues", "d": "5/2017"}, {"body": "deshadow well different data changed update dom element vue directives associated dom need calculate data change go recalculate expressions vue need regenerate new tree compare old one process needs recalculate expressions value change vue going modify last use fact request simple want ability cache result like", "d": "5/2017"}, {"body": "first expected behavior component entire render function called updated second perf problem really rather vue taking calculating dates good maybe try memoizing calculation filters use faster alternative third values component nt sound like good idea maybe consider splitting component smaller ones splits updates well result better perf", "d": "5/2017"}, {"body": "well boss right", "d": "5/2017"}, {"body": "gebilaoxiong ok understand position values list items chat loaded messages every message date need show fact request simple want filter ability cache result like computed property absolutely right think performance improvements logically right nt agree ok", "d": "5/2017"}, {"body": "think use instead", "d": "5/2017"}, {"body": "please provide better steps reproduction component repository affected", "d": "5/2017"}, {"body": "also please remove vuejsuibpagination lib make repro easier make sure problem within vue lib", "d": "5/2017"}, {"body": "thank lonelyclick linusborg simple really visualization previous next labels affected lsaquo rsaquo escaped posva create single tag attribute inside template value", "d": "5/2017"}, {"body": "please take look srcpagesdashboardvue reproduction link html", "d": "5/2017"}, {"body": "please take time create proper repro", "d": "5/2017"}, {"body": "thank patience posva smile expect helps see appvue symbol escaped", "d": "5/2017"}, {"body": "escaped appvue tested using works nicely", "d": "5/2017"}, {"body": "devdependencies development buildjs development script need custom set packages installed custom build vue fit specific use case find workaround explain problem dockerize vue app wo nt install devdep", "d": "5/2017"}, {"body": "require checkversions processenvnodeenv production var ora require ora var rm require rimraf var path require path var chalk require chalk var webpack require webpack var config require config var webpackconfig require webpackprodconf var spinner ora building production spinnerstart rm pathjoin configbuildassetsroot configbuildassetssubdirectory err gt err throw err webpack webpackconfig function err stats spinnerstop err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false nn create image based official node image dockerhub create directory app placed run mkdir p usrsrcapp change directory commands run inside new directory workdir usrsrcapp get code needed run app copy usrsrcapp install dependencies run npm install run npm run build set environmental variables todo pulled due npm install rather npm install production default resulting pulling dev dependencies well env nodeenv production expose port app runs expose serve app cmd npm start code dockerfile way pluck dependency container moving nodeenv see todo bottom kinda bizarre packagejson see nt want put dependency production container build script depends pull inside container anyways", "d": "5/2017"}, {"body": "explaining problem nt install vue package", "d": "5/2017"}, {"body": "posva make concise want make builds happen inside docker container building outside container copying makes reuse modules sometime clogs packages nt cleaned unexpected way build script depend devdep packages cleanly build dependency packages also fast cuz much fewer packages anyways depends still pull devdeps order build whilst packaging container viztor u mean building outside container copying", "d": "5/2017"}, {"body": "posva talking building vue talking building app docker container question nothing vue hardly anything webpack template might used changed quite bit question essentially optimize webpack build minimum packages installed repository place conversation suggestion improve webpack template please open issue wwwgithubcomvuejstemplateswebpack", "d": "5/2017"}, {"body": "linusborg acknowledge fact issue derived vue directly although whole buildjs built automatically vuecli issued made issue terms previous framework used angularjs implicit cli build tool abstracts packages dependencies build tool needs one shot made seem clean probably use webpack well included whole abstracted tool package dep devdep anyways thanks regards", "d": "5/2017"}, {"body": "bug browser moving element outside table vue get replace", "d": "5/2017"}, {"body": "already issue today according docs need use special attribute custom component hoisted invalid content thus causing errors eventual rendered output corrected fiddle", "d": "5/2017"}, {"body": "try putting function instead", "d": "5/2017"}, {"body": "expected behavour vue virtual dom nt know changes applied dom jquery similar tools always overwritten removed whenever component rerenders reapply styles want persist", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "using user defined tag xline working", "d": "5/2017"}, {"body": "wiiikiii thanks response seems work isit legal table layout", "d": "5/2017"}, {"body": "exact issue today solved using multiple tags table rows use css style element component w rows output", "d": "5/2017"}, {"body": "rebz thank response already tried case recursive use multiple tags table rows like example would like component output html parent id parent name parent description child id child name child description child id child name child description see fiddle talking get inside breaks table layout way illegal table layout wiiikiii solution seems working nt know best way legal layout", "d": "5/2017"}, {"body": "looking issue discovered another one", "d": "5/2017"}, {"body": "bug components require root node technical limitation vdom implementation try use functional components though functionality limited nt need root element please use stakc overflow forum forumvuejsorg take discussion", "d": "5/2017"}, {"body": "please nt disguise question feature request ask questions forum stackoverflow pass around functions way pass objects declaring functions suffice", "d": "5/2017"}, {"body": "function passed way pass objects return would declaring functions stumble across every dom updating resetting styles classes", "d": "5/2017"}, {"body": "please use forums gitter stack overflow next time thanks", "d": "5/2017"}, {"body": "reactivity caveat need use", "d": "5/2017"}, {"body": "posva thank much response btw think would fair throw warning error case", "d": "5/2017"}, {"body": "detectable search detection caveat docs understand", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "provide component option look", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "reproduction please try properly explain bug", "d": "5/2017"}, {"body": "please make fixed android checking var isandroid ua amp amp uaindexof android gt uaindexof linux gt check android cli uc brower", "d": "5/2017"}, {"body": "enough information uc useragent string getting versions uc browser using eventual bug check leading reporting bug saying fix need provide context", "d": "5/2017"}, {"body": "hello sorry please listen explain bug vuejs version vuejs file lines around location place judge android detection think place bug found production environment uc browser useragent juc linux u zhw cn var isandroid ua amp amp uaindexof android gt really detect user using device read code wrote vuejs suggest using following way fix bug place please use var isandroid ua amp amp uaindexof android gt ua indexuf linux gt detect thank qqcom evan date vuejsvue cc daheige author subject vuejsvue check android enough information uc useragent string getting versions uc browser using eventual bug check leading reporting bug saying fix need provide context receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "proposed fix would lead linux browsers also detected android nt think appropriate fix uc version using seem old vs latest may also device android os using", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "worth wrote workaround stackoverflow question today sure changing way watch works viable solution cases", "d": "5/2017"}, {"body": "ya agree sure worth either thought interesting watch fire watched variable set value sure straight javascript compare curious someone vue experience thought perhaps watch use loose comparison arraysobjects", "d": "5/2017"}, {"body": "vuejs bug", "d": "5/2017"}, {"body": "watcher checks whether fire using strict equal changing behavior would breaking unlikely happen imo component responsibility avoid infinite loop also think appropriate place check shallow equality inside watcher callback", "d": "5/2017"}, {"body": "already fixed commit make sure actually using latest version", "d": "5/2017"}, {"body": "please open issue vueloader repository", "d": "5/2017"}, {"body": "migrated vuejsvueloader", "d": "5/2017"}, {"body": "thanks posva", "d": "5/2017"}, {"body": "make sure use different attrs components though problem appears second child appears first one", "d": "5/2017"}, {"body": "nothing second component however updated jsfiddle convenince removed second component problem remains please reopen issue", "d": "5/2017"}, {"body": "sake clarity nt work expected one component wrapped exists page added second one illustrate difference result", "d": "5/2017"}, {"body": "using instead latter work", "d": "5/2017"}, {"body": "thanks joining nt know maybe mentioned docs however actually works except rare cases type race condition happening example works well emit child component settimeout rather http request callback real prodution code used need show loader separate div wait content child component load transition smoothly switch example however turn transition applies top wrapper div element nt apply need hide first div loader show div child component may see another fiddle also without wrapping div like get warning whatever option take hit wall", "d": "5/2017"}, {"body": "would probably better approach problem different way want show loader place component still loading data would recommend using directive component attaches loader certain condition ie another approach would use dynamic approach", "d": "5/2017"}, {"body": "thedutchcoder dynamic component approach nt work child component tells parent loaded data must mounted start loading data thus use vshow vif even complicated child component real app actually check jsfiddle try modify var rather nt get idea custom directive well could elaborate mean tell component show loaded inside parent actually trying resolve many loader trying make dry code make one global loader shows route initializes loads works ok try add smooth transitions", "d": "5/2017"}, {"body": "ok guys still nt find working answer issue closed let summarize try make dry solution use different components show spinnerloader within transition component switch initialization tried first problem transition applies top wrapper div element nt apply need hide first div loader show div child component second problem blocks get randomly time blocks ar shown third problem smooth transition like switch blocks smoothly fourth move loader inside component problem dry component switches loader switches well thus visually twitches nearest solution needed second random must shown unexpected thus reported bug achieve needed result vue guys", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "computed ref \u5e94\u8be5\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898", "d": "5/2017"}, {"body": "xujiongbo \u6211\u540c\u65f6\u9700\u8981\u4f20\u9012\u6570\u636e computed", "d": "5/2017"}, {"body": "need pass data use method create new component props next time please make sure follow issue reporting guidelines opening issue ask questions forum stackoverflow thanks", "d": "5/2017"}, {"body": "vue related", "d": "5/2017"}, {"body": "thank investigation tested markup variations looks like actually default behaviour anyway record anyone else runs put instead button submit add regular buttons", "d": "5/2017"}, {"body": "use submit inside form field button default type submit inside form use submitprevent submitform", "d": "5/2017"}, {"body": "see aleksejdix explanation", "d": "5/2017"}, {"body": "also nt work telling actually checkout branch something weird going directive preventing attachment event listener", "d": "5/2017"}, {"body": "may look later generally fail reproduce simple setup probably something setup case issue tracker wrong place something like forumvuejsorg would right one", "d": "5/2017"}, {"body": "tried quickly clone server nt start unhandled rejection error connect econnrefused objectexportserrnoexception exportsexceptionwithhostport tcpconnectwrapafterconnect oncomplete way check problem quickly", "d": "5/2017"}, {"body": "trying connect port server running port", "d": "5/2017"}, {"body": "database server listening", "d": "5/2017"}, {"body": "deleted username password server configurations serverappjs need postgres", "d": "5/2017"}, {"body": "works fine something must end", "d": "5/2017"}, {"body": "know also without ssr setup works using client side rendering something ssr messing directives think", "d": "5/2017"}, {"body": "copied component verbatim vue hn setup hydration working properly likely problem specific setuplogic please try isolate issue something demonstrate indeed caused vue", "d": "5/2017"}, {"body": "thanks much looking", "d": "5/2017"}, {"body": "belongs vuerouter dup vuejsvuerouter tldr nt use unicode characters route paths officially supported use hash mode", "d": "5/2017"}, {"body": "always case need array obvious variable array", "d": "5/2017"}, {"body": "said pr use plain objects instead mixins achieve something similar", "d": "5/2017"}, {"body": "posva using typescript decorators implementation decorator uses vueextend options order create components needing extendmixin functionality multiple components causing issue avoid problem ability change underlying component telling use vue typescript scenario simple change code would fix thanks", "d": "5/2017"}, {"body": "ideally mixin component otherwise extend loose ability extend multiple things time", "d": "5/2017"}, {"body": "use decorator exporting mixin", "d": "5/2017"}, {"body": "time work may bug", "d": "5/2017"}, {"body": "actually implemented mixins constructors past motivation class style declaration typescript friendly objects", "d": "5/2017"}, {"body": "possible different decorator support friendly declarations wrapping object", "d": "5/2017"}, {"body": "think wrapping needed since simply uses merging mixins afaik vue component decorators using", "d": "5/2017"}, {"body": "may factors going created example uses inside vuerouter works chrome firefox error firefox actually issue traced code pr however see would cause difference browsers different decorator would possibility however may required issue resolved", "d": "5/2017"}, {"body": "ca nt work would work chrome ff anyone else able take lookany ideas", "d": "5/2017"}, {"body": "side note give error typescript doesnt option property", "d": "5/2017"}, {"body": "yes declared declaration files due undocumented api", "d": "5/2017"}, {"body": "considered public api though would definitely helpful toolslibsplugins need reflection component instance access normalized options object best case typeinterface", "d": "5/2017"}, {"body": "seems difference behaviour firefox vs browsers caused vuerouter present page sample includes vuerouter external resources use error firefox sample vuerouter removed works update caused vuerouter presence global mixin", "d": "5/2017"}, {"body": "posva finally figured root cause issue every object firefox already watch member objectprototypewatch means reaches watch merge strat parentwatch already true merges single array pull request fixes unsure actually write unit test issue present gecko browser watch support", "d": "5/2017"}, {"body": "hey nice job thanks lot looking well simulate adding property object prototype remove afterwards sure opened pr could nt find dizzy could nt see", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "never set value checkbox wo nt update besides favor use much easier even wrapped components nt stop component implementing interface customizing model implementation works", "d": "5/2017"}, {"body": "thanks looking nirazul prop nt need declared rather passed jsfiddle input element attribute evaluated expression computed property jsfiddle update said reason would prefer avoid component nt need maintain state example using example variable bound prop nt update parent mutates value new property created per instance reflecting state component functionally need achieved using computed property bubbles event returns prop value however point making addressing seems vue bug element could investigated", "d": "5/2017"}, {"body": "never defined setting prop binding case subtle difference html attributes props skilled enough explain checked binding would nt work leave library authors \u30c4", "d": "5/2017"}, {"body": "nirazul also prop passed html slot aw nt sell self short thanks looking nonetheless", "d": "5/2017"}, {"body": "looks like behavior caused call assumption vue dom update kicks via microtask browser checks behavior browser resets checkbox state sees event default behavior prevented overwriting dom changes made vue firefox works properly think chromewebkitonly behavior sure need really need wrap calls get around", "d": "5/2017"}, {"body": "thanks looking awesome nt think see browser issue use block checkbox checking clicked also ensure single source truth checkbox reflecting within view model rather dom needed state input strictly reflect data view", "d": "5/2017"}, {"body": "imho introduce prop validation since modifier syntax suger corresponding handler child component validation would mean child control state update strategy parent", "d": "5/2017"}, {"body": "may right ok", "d": "5/2017"}, {"body": "purposely without knowing exists templates javascript never null js let users js without knowing add security checks kind like dealing user input js context rather one things wrap straightforward natural way computed property fallback content context apply transformation templates transform stuff like", "d": "5/2017"}, {"body": "think use computed property stubs possible nested fields also done envs proxies available create proxy objects allows arbitrary path access either way nt think exposing ways rewire property access vue instance would good idea", "d": "5/2017"}, {"body": "thanks responses posva transforming abc amp amp ab amp amp abc makes sense part still edge cases vif abc efg creating transforms edge cases would unfortunately quite difficult wo nt able depend customers manually fantastic idea actually given try works really well exception missing rootlevel properties believe fact everything data extracted scope render function accessed rootlevel variable example recursively made proxy object accessing returns null expected instead throwing exception huge step forward still throws exception attempting since otherdata defined vm appears due something like behind scenes unfortunately way put proxy beneath otherdata case solve problem running regex entire template matching varname varname simply adding matching properties rootlevel data properties nt exist already combining recursive proxy works really well looks good solution right however still nt give good way get list paths data referenced template post vifs logic keep looking solutions one though thanks help", "d": "5/2017"}, {"body": "need add attr tabs", "d": "5/2017"}, {"body": "error telling problem make sure look part releases notes need help please ask questions forum stackoverflow", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use instead", "d": "5/2017"}, {"body": "augment vue types see", "d": "5/2017"}, {"body": "nt add css transition also beware vue optimization reuse dom elements may need use", "d": "5/2017"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access see", "d": "5/2017"}, {"body": "thanks answer", "d": "5/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "working sassscss caveat", "d": "5/2017"}, {"body": "error generated code fails pass fsreadfilesync method using templates", "d": "5/2017"}, {"body": "reproduction", "d": "5/2017"}, {"body": "element properties like remove good go", "d": "5/2017"}, {"body": "posva without modifier still unnecessary data html property presented component previous version vue worked fine explain please behavior changed", "d": "5/2017"}, {"body": "never worked way find info", "d": "5/2017"}, {"body": "posva thank much sorry wasted time", "d": "5/2017"}, {"body": "sorry question bug report", "d": "5/2017"}, {"body": "try find problem project get nothing clone vhn modify component use pug vueloader document said processing templates little different webpack template loaders pugloader return template function instead compiled html string instead using pugloader install original pug step step problem still case still issue google translate", "d": "5/2017"}, {"body": "necessarily vue issue please open mintui repo instead", "d": "5/2017"}, {"body": "fact tried mintui muse ui also build two problem found even mintui demo opened mobile web browser think might something wrong vue", "d": "5/2017"}, {"body": "probably lacking promise polyfill", "d": "5/2017"}, {"body": "johnhargrove could give example failing sure happen", "d": "5/2017"}, {"body": "lokson situation child component ca nt satisfied component ancestors including root vue object ran developing validation service basically class top level component represents collection form inputs inputs complicated vue components building forget validationservice parent components silently never reference injected results errors related accessing members undefined object etc theory reason feature request getting kind indication went unsatisfied seems useful development", "d": "5/2017"}, {"body": "gmailcom", "d": "5/2017"}, {"body": "use relative file path like also nt necessarily public depends serve server exclude files static serving middleware put public assets instead", "d": "5/2017"}, {"body": "works though still think would better absolute path possible", "d": "5/2017"}, {"body": "would make flexible", "d": "5/2017"}, {"body": "example build framework something like nextjs like use layout custom vue application entry name differ vuessroutlet make bit abstract implementation details", "d": "5/2017"}, {"body": "would add extra cost learn gain barely benefit", "d": "5/2017"}, {"body": "use strict", "d": "5/2017"}, {"body": "nt device test strict mode nt work android added something else docs work", "d": "5/2017"}, {"body": "meiliujun", "d": "5/2017"}, {"body": "defcc nexus", "d": "5/2017"}, {"body": "posva run sample testing run ok excepted google nexus tested device iphone gt iphone gt iphone gt gt android gt android samsung gt android vivo honor", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "extent yes official devtool relies unlikely change break", "d": "5/2017"}, {"body": "thanks see reason follow approach", "d": "5/2017"}, {"body": "jantimon ca nt really say much niche case suggest tearing existing vue instances longer needed", "d": "5/2017"}, {"body": "sure really niche case pretty much affects every wysiwygish ui representation editors content management system feature point need rely clientside rendering technique content component case becomes present cents discussion", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "entirely sure looks like bug happens slot content mean time ing element question helps", "d": "5/2017"}, {"body": "ran something similar although example nested slot causes sibling component recreated probably related", "d": "5/2017"}, {"body": "nerdcave think related reason describe pr find works well change position like", "d": "5/2017"}, {"body": "pengchongfu also works add thanks looking", "d": "5/2017"}, {"body": "nerdcave also add wrapper like wrapper would placeholder default changed", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "sure label labelling improvement bug", "d": "5/2017"}, {"body": "posva sparamasivan missing something two root elements parent compoent error reported", "d": "5/2017"}, {"body": "defcc oh sorry forgot update repro yeah wrong adding single root element still showcases problem", "d": "5/2017"}, {"body": "also updated demo seems bug scoped slots", "d": "5/2017"}, {"body": "thank folks fixing", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "worked fine tested simulator kind errors also appear simulator vue nt even seem impact speed page manage js stack trace safari may look looks like something related device big amount content may want use something like nt look like error", "d": "5/2017"}, {"body": "posva crashing simulator also tested wwwbrowserstackcom iphone safari screenshot", "d": "5/2017"}, {"body": "bug expects expression either use note single quote around value", "d": "5/2017"}, {"body": "throw error removing everything dom correct", "d": "5/2017"}, {"body": "use non minified version vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "property short hand background styles including words setting override original fyi using instead solve problem", "d": "5/2017"}, {"body": "xujiongbo thanks solve problem", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "expected behavior nt want need either explicitly bind parent props declare props child", "d": "5/2017"}, {"body": "linked example props declared child problem persists working vbindprop documentation says", "d": "5/2017"}, {"body": "got mean declare props child say props might receive would force declare input props button example vice versa good pattern", "d": "5/2017"}, {"body": "dotbits also say expected behaviour three things equivalent currently bind nt prop named pass case root element also nt understand mean workinng introduced", "d": "5/2017"}, {"body": "posva problem children components level different props receive whole set props declared prop child html attribute child element implementing components pattern library based atomic design system brad frost means include even small elements like buttons call actions dozens different context nested levels explicitly declare props huge overhead case granular distribution atoms molecules organisms yes right last working version prop modifier created fiddle reproduces behavior version", "d": "5/2017"}, {"body": "oh see seem misunderstood modifier info docs bind things nt need case bind props explicitly fiddle going produce wrong markup keep mind ignoring pops would also breaking change", "d": "5/2017"}, {"body": "posva got try custom directive filter owned props suggestion approach", "d": "5/2017"}, {"body": "suggest explicitly bind props need component render function easier", "d": "5/2017"}, {"body": "nothing embarrassed interests think using object instead function vice versa worked properties dev warnings cool cost maintain execution thought docs covered quite well", "d": "5/2017"}, {"body": "ping phoenixeliot", "d": "5/2017"}, {"body": "less lack understanding going boilerplate little fast later actually using options things fail ways nt clear making new component throw common options start fill later take mental overhead remembering exactly called nt using vue terribly long nt heart yet also side note use coffeescript think notation could look pretty similar throw together new component look something like done right easy notice put instead one works perfectly fine breaks try actually use say change watcher nt run super obvious reason always feels like gotcha eventually figure also note usually happens like next day adding new functionality thus nt boilerplate fresh head erroneously assuming works nt seen problems", "d": "5/2017"}, {"body": "specific design decision behind common way setting function arguments understand similar api may seem intriguing personally nt think api need one function call config object ok different api docs clearly document changing syntax would breaking change justified supporting would add bloat small nonetheless codebase still justified comfort similar api", "d": "5/2017"}, {"body": "understand would agree adding warning would appropriate", "d": "5/2017"}, {"body": "thanks reporting easy first contribution needs little knowledge vue file needs modified inject arrays object able merge prolly used case someone looking first contribution", "d": "5/2017"}, {"body": "jaj ok got note quite logical indeed almost question though easiest way fork pull request", "d": "5/2017"}, {"body": "please move issue fr nt understand would need dynamically register nested module registering containing modules really talk", "d": "5/2017"}, {"body": "sorry wrong project app loads plugins different companies marketplace company namespace eg separate loading sets plugin loader transfer plugin register themselve module must currently check exists true add know modules store add overwrite something namespace companies allowed", "d": "5/2017"}, {"body": "think add helper registers nested module create necessary modules plugins call instead register topmost module modules registered time", "d": "5/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue provide editable repro use base thanks", "d": "5/2017"}, {"body": "reproduction", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "thanks proposal unfortunately implicit behaviour really want keep things explicit one things make easy collaborate vue project ok globalise subcomponents advice namespace makes clearer component nested inside another sometimes may even need namespace specific enough change parent name", "d": "5/2017"}, {"body": "posva seems bit strange behaviour subcomponents allowed put directly template local registration globalize seems overloading declares subdependencies vue project even make sense used outside specific contextcomponent nt make senses outside instance tables cells tabs container tabs buttons ca nt see pratical reason wanted considering context kind lifecycle limitation something work make possible future", "d": "5/2017"}, {"body": "local registration explicit want things", "d": "5/2017"}, {"body": "posva maybe think turn local registration explicit slots instance export default components option require optionvue code determine explicity slot supports subcomponent allowed parent", "d": "5/2017"}, {"body": "still explicit component using select much intuitive simple add component parent usual new syntax using methods described global components thu may david rodrigues notifications githubcom wrote posva maybe think turn local registration explicit slots instance export default components option require optionvue code determine explicity slot supports subcomponent allowed parent receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello solved problem problem clue moment also want point email qqcom thank much", "d": "5/2017"}, {"body": "initialised find information caveat", "d": "5/2017"}, {"body": "posva object initialized component data misread reproduction", "d": "5/2017"}, {"body": "oh sorry misread indeed happening object treated readonly modify content scope scoped slot modifications component explicitly pass", "d": "5/2017"}, {"body": "great thanks note example works successfully modifying content scope scoped slot side effect recommended use", "d": "5/2017"}, {"body": "share fiddle nt work", "d": "5/2017"}, {"body": "speak completely correct works using object attribute guess would hard avoid though since javascript pointing data object beg question compose form scoped slot built scoped component flow exactly couple different pieces page data binding object attribute saved database working seen fiddle unless data binding object never able modify scope scoped slot would imply compose inputs slot workaround passing component scoped slot binding component eg slot template would considered bad hackpoor design decision", "d": "5/2017"}, {"body": "yes point attribute object work javascript nature recommended although come handy sometimes however pass method scoped slot use event handler together binding replaces case although even better keep within component", "d": "5/2017"}, {"body": "think vue internal way tracking things loops skipped elements seem stored empty text nodes probably faster processing needed see skipped items get rendered empty text nodes vue seems smart simply processing items list nt fall condition although sure intentional someone core team might able shine light nt seem like bug internal way tracking vnodes", "d": "5/2017"}, {"body": "think could issue vue internally since also report see text nodes closest thing put svg simple component containing svg seems cause extra vnodes around svg particularly problematic ssr hydration fail fyi believe text nodes comment nodes thus handling correctly ssr unfortunately holiday moment confirming intentional change difficult hope track tomorrow bug get patch asap get biscet tomorrow find true cause however need create small repro tests track failure update soon", "d": "5/2017"}, {"body": "thedutchcoder ssr problematic server side generate two real dom nodes nt match virtual dom client side result hydration failure", "d": "5/2017"}, {"body": "blakenewman nt use svg think problem may introduced commit optimized empty comment vnode could also create text vnode tried launch pull request sure author intention hope helpful track problem", "d": "5/2017"}, {"body": "issue extra vnode last one text checked built file elementui found bug comes false words two consecutive comment vnodes merged one text vnode", "d": "5/2017"}, {"body": "every vue component similar mechanism builtin nt need implement", "d": "5/2017"}, {"body": "maybe express well example case react used deliberately abort rerendering even currentnext stateprops different meant way accomplish something like vuejs", "d": "5/2017"}, {"body": "call move something right away set returned value bindingvalue want unfortunately yes directive exception often need execute inline statement hand custom directive directives expects value would also breaking change already pass function params example bind arguments commonly used part js better know benefit", "d": "5/2017"}, {"body": "fyi use thu may pm eduardo san martin morote lt notifications githubcom wrote call move something right away set returned value bindingvalue want unfortunately yes von directive exception often need execute inline statement hand custom directive directives expects value would also breaking change already pass function params example bind arguments bind bind commonly used part js better know benefit receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "tested randomevent mentioned", "d": "5/2017"}, {"body": "closing dup", "d": "5/2017"}, {"body": "thanks reporting looks like problem comes moment simple workaround use check value actually changed", "d": "5/2017"}, {"body": "maybe checking composing true create pr test bit", "d": "5/2017"}, {"body": "seem like mistake also defined flow typings unit tested right testing", "d": "5/2017"}, {"body": "linusborg thanks", "d": "5/2017"}, {"body": "please make sure read contributing guide issues bug reports feature requests encourage ask questions forum stack overflow gitter happy help", "d": "5/2017"}, {"body": "work really well external component collections could put elements like", "d": "5/2017"}, {"body": "justnobody true vuetify purpose uses prefix", "d": "5/2017"}, {"body": "vue import user usercomponents import statistics statisticscomponents export default namespaces user statistics feature want achieve", "d": "5/2017"}, {"body": "nt seem like clear name namespaces seems little long though similar note sure vue could differentiate namespace definition component definition example case could invalid component definition properties", "d": "5/2017"}, {"body": "xujiongbo yes kinda like nt like clear enough justnobody thinking uppercasing maybe something like conflicts name", "d": "5/2017"}, {"body": "another option validate prop values gets string containing colon looks", "d": "5/2017"}, {"body": "sure understand missing already namespace components look better helper done outside vue", "d": "5/2017"}, {"body": "posva hmm right nice never though obvious thank", "d": "5/2017"}, {"body": "top vue inspector devtools always shows titlecase form component", "d": "5/2017"}, {"body": "doc needs clarification intended behavior kebabcase baseline always supported two convenience conversions issue belongs vuejsorg feel free submit pr", "d": "5/2017"}, {"body": "done", "d": "5/2017"}, {"body": "choose one better manual next time please ask questions forum stackoverflow first thanks", "d": "5/2017"}, {"body": "thanks posva sure understood issue try explain better forum good one", "d": "5/2017"}, {"body": "solved problem post case someone ends looking alternative way solve using jquery still seems able update attributes vuejs though guess ca nt figure thanks posva", "d": "5/2017"}, {"body": "crswll means need parse event modifiers opposite template compiler moment sure good idea", "d": "5/2017"}, {"body": "nt know enough vue internals answer well guess attempting feature would good way figure", "d": "5/2017"}, {"body": "think complicated also need consider custom events", "d": "5/2017"}, {"body": "imo separate directive like native rewritten reason exists also handle custom events mentioned lonelyclick otherwise little sense bulk directive additional innerlibrary work redundant use cases", "d": "5/2017"}, {"body": "think could good fit avoid rewrites followed wostex suggestion although would make sense mind could open door passing around event nameshandlers would shortcut sometimes repetitive template assignments", "d": "5/2017"}, {"body": "lukeed still think part vue separate directive use", "d": "5/2017"}, {"body": "opposed idea either", "d": "5/2017"}, {"body": "thanks reporting fine update package project updated recently tell still enough test locally using vuecompile works correctly", "d": "5/2017"}, {"body": "know use inside template", "d": "5/2017"}, {"body": "certain tested variant didnt notice performance difference actually works thanks", "d": "5/2017"}, {"body": "another important part could applied specific elements template even though bind initial value also could ease filtering text interpolation inside elements", "d": "5/2017"}, {"body": "difference native filter wonder", "d": "5/2017"}, {"body": "oh apologize bad missed feature thank pointing", "d": "5/2017"}, {"body": "herringtondarkholme possible define filters whole app though ie across components", "d": "5/2017"}, {"body": "please ask questions forum stackoverflow thanks", "d": "5/2017"}, {"body": "internal used part application state think fine long user follows rule", "d": "5/2017"}, {"body": "realized construct function passed parameter configuration object actually reserved async components pity live thanks unit test", "d": "5/2017"}, {"body": "fyi might interested nickmessing idea sugar via babel plugin", "d": "5/2017"}, {"body": "known behavior ssr turn correct personally recommend nontrivial project performance please refer official ssr guide wonder whether fix appropriate since patching builtin never enough copy whole context breaks original point", "d": "5/2017"}, {"body": "herringtondarkholme case real problem vmruninnewcontext output different thing like", "d": "5/2017"}, {"body": "lonelyclick fixed next version using instead current behavior evaluate bundle separate context available", "d": "5/2017"}, {"body": "significantly faster looking forward new release", "d": "5/2017"}, {"body": "still please read template syntax section", "d": "5/2017"}, {"body": "worth noting link filters outdated returns search results github", "d": "5/2017"}, {"body": "rpkilby would kind please start new issue vuejsorg website repo problem scott", "d": "5/2017"}, {"body": "posva demo revised data usually get databasebut option needs frontend developer database nt allowed revise frontend developers want know next explanation meaning due limitations modern javascript original text official documents tell limitations javascript", "d": "5/2017"}, {"body": "means js built limitation want learn check", "d": "5/2017"}, {"body": "posva thanks link learn js vue", "d": "5/2017"}, {"body": "jounqin thinking think behavior preserved bundle separate context prevent affecting server process polyfills modify proper solution either explicitly attach inside bundle code like whitelist server", "d": "5/2017"}, {"body": "thanks explanation whitelisting server works fine", "d": "5/2017"}, {"body": "jounqin code example nt really understand make work correctly using", "d": "5/2017"}, {"body": "jonaskuiler vue need still using course running vue like", "d": "5/2017"}, {"body": "posva reproduce safari ios", "d": "5/2017"}, {"body": "behaves like issue", "d": "5/2017"}, {"body": "yeah bug safari manage fix docs take look pr nt think worth time bug probably disappear future releases safari make clear completely unrelated vue though", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "history", "d": "5/2017"}, {"body": "notifications githubcom wrote history receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "\u6bcf\u4e2a view vue \u6bcf\u4e2a\u5355\u9875\u9876\u5c42\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f created link \u4e2d\u4f20\u5165\u7684\u5c31\u662f windowdocumentlocationhref", "d": "5/2017"}, {"body": "\u5c3c\u5965 notifications githubcom wrote \u6bcf\u4e2a view vue \u6bcf\u4e2a\u5355\u9875\u9876\u5c42\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f created link \u4e2d\u4f20\u5165\u7684\u5c31\u662f windowdocumentlocationhref receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "wangxiao", "d": "5/2017"}, {"body": "\u53f7\u62fc\u63a5\u4e00\u4e2a \u8bd5\u8bd5 notifications githubcom wrote wangxiao receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "\u4f20\u7ed9\u670d\u52a1\u7aef\u7684\u53c2\u6570\u505a\u8fc7 encodeuricomponent", "d": "5/2017"}, {"body": "repros ios safari", "d": "5/2017"}, {"body": "yes problem reproducible safari app well vue", "d": "5/2017"}, {"body": "centaur found workaroud", "d": "5/2017"}, {"body": "cherrygeqi added following code data fetch least test team satisfied", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "option gitbook enable pdf download could please turn going flight today wanted read docs whilst offline vue vuex", "d": "5/2017"}, {"body": "docs gitbok clone repos really easiest way", "d": "5/2017"}, {"body": "\u540e\u6765\u53d1\u73b0\u5176\u4ed6\u4f20\u53c2\u7684\u6307\u4ee4\u5c31\u4e0d\u62a5\u9519 div vlazyload", "d": "5/2017"}, {"body": "think would better typescript vuejs could work together directly currently happy using babel jsx plugin vueclasscomponent packages seem like lot toolchain job appears work issues put together starter project single file components packages", "d": "5/2017"}, {"body": "got problem", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "also met problem case want create fallback property use get value input input value visible problem inconsistent browsers default behavior browsers default behavior vue version", "d": "5/2017"}, {"body": "personal suggestion register manually vue issue tracking seems different imes different application logics require conflicting strategies leaving programmers manually registering listeners might still expedient", "d": "5/2017"}, {"body": "alias cause problem use production environment", "d": "5/2017"}, {"body": "sorry respond closed issue list behavior documented anywhere see example seems snag others occasionally seen seems quick note might beneficial save headaches thanks great framework either way", "d": "5/2017"}, {"body": "posva expected behavior tag allowed transition follow tag antixrist think maybe pass transition type intention template component vshow directive inside transition props visible transtype code jsfiddle", "d": "5/2017"}, {"body": "using vmodel custom getset work fine something wrong computed getset functions", "d": "5/2017"}, {"body": "nt attribute get removed empty creates tons casting errors really", "d": "5/2017"}, {"body": "looks like nt agree vmodelnumber ever returned string still hold strongly thinking property removed object turned null", "d": "5/2017"}, {"body": "kgrosvenor yeah met problem nt think empty string reasonable see explanation also reasonable making difference complicated need number type useful need know user input use filters make easier", "d": "5/2017"}, {"body": "purepear thanks check really like vue template engine know lot template engines support simplified inheritance feature well composition maybe would nice compromise would store source template string object automatically compiling vue file along render function would easy adjustment nt already would give people lot flexibility templates fnlctrl know template source string compiled render function stored component would simple change would huge help give lot flexibility without vuejs support addition template features guess ends decision totally support inheritance might useful others hitting issue", "d": "5/2017"}, {"body": "\u548c\u697c\u4e3b\u540c\u6837\u7684\u95ee\u9898\u554a", "d": "5/2017"}, {"body": "sure right way got around issue async options using component render async operation complete", "d": "5/2017"}, {"body": "thank much", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "fixed used filter grayscale nt enable hardware acceleration added", "d": "5/2017"}, {"body": "works know compiled template going inserted generic solution", "d": "5/2017"}, {"body": "solution", "d": "5/2017"}, {"body": "ucdit answer called scoped slots see eg child component parent component hello parent propstext result hello parent hello child", "d": "5/2017"}, {"body": "maybe good idea add section official documentation aswell found searching quite detailed information file input even though change warning available feels quite hard create responsive form file uploads spa", "d": "5/2017"}, {"body": "could bootstrap problem time bootstrap also reasons use display properties vue nt change default behaviour bootstrap ca nt remove utilities still like posva suggestion adding option like want use another option could adding new global configuration property conditionalrenderingpriority type boolean default false usage adds inline styles added", "d": "5/2017"}, {"body": "resolve", "d": "5/2017"}, {"body": "want use html standard input typedate field edit date type model wonderfully powerfull extensible framework ca nt box ca nt read date field overwrite date string data select date solution could written two lines twoway filters modifier best solution would support natively checkbox standard input field date special thing", "d": "5/2017"}, {"body": "custom modifiers seems like brainer unless good reason masking input parsing value application use common practice making syntatic sugar like vmodellazycurrency amount would amazing", "d": "5/2017"}, {"body": "range function min max var array j var min lt max array j j return array", "d": "5/2017"}, {"body": "oppianmatt could share clearer example ca nt tell api documentation best go currently trying var addhandlers function el var button elgetelementbyidname tooltipitem buttonaddeventlistener click function event consolelog clicked eventtarget new vue el app template components app mounted function addhandlers el anyone better knowhow comes across please indicate approach event handling even possible vue", "d": "5/2017"}, {"body": "use rerender view update data find reactively update use ensure data given say vue taskqueue", "d": "5/2017"}, {"body": "plasmatium", "d": "5/2017"}, {"body": "shuaibird", "d": "5/2017"}, {"body": "plasmatium event listener\u5728beforecreate\u51fd\u6570\u4e2d\u7ed1\u5b9a\u662f\u4e0d\u662f\u5408\u7406\u7684\u505a\u6cd5", "d": "5/2017"}, {"body": "shuaibird \u5728\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9", "d": "5/2017"}, {"body": "plasmatium \u6211\u5199\u7684immutableremove\u51fd\u6570", "d": "5/2017"}, {"body": "shuaibird", "d": "5/2017"}, {"body": "facing issue vuejs anybody knows fixed somehow", "d": "5/2017"}, {"body": "nt ca nt really limitation comes reactivity system vue", "d": "5/2017"}, {"body": "since nt work vue ended simply creating method traverses object deletes element marked deletion regardless depth method created granted first pass deepclean obj keys keyslength return deepclean thiswhatever whant ends happening thiswhatever gets updated accordingly regardless depth ways requires less code sure works", "d": "5/2017"}, {"body": "nt know guys already aware seems stuff happening regards vue nativescript implementation started communityled initiative port nativescript vuejs take look community slack vue channel initial steps taken igor need prs lots help please join us comment", "d": "5/2017"}, {"body": "came across interesting tweet though sure means max lynch ionic regards support vuejs frameworks", "d": "5/2017"}, {"body": "cool ionic actually native ionic emulates native app ui guidelines uses native sdks bringing ui standards device features native apps together full power flexibility open web ionic uses cordova phonegap deploy natively runs browser progressive web app still awesome ionic supports vue though edit okay neither ionic nativescript reactnative weex really native hybrid approaches seems issue least originally native rendering like reactnative", "d": "5/2017"}, {"body": "nesbocaj one draws ionic support progressive web apps interesting discussion pwa", "d": "5/2017"}, {"body": "guys getting familiar vuejs requirements arise mobile development maintain single code base much possible support ios android platform app must also support push notifications know thread almost year old choices please help", "d": "5/2017"}, {"body": "codelabstudios quasar framework", "d": "5/2017"}, {"body": "sorry little late party nt terribly expensive looks like change part song cause songwithextrastuff rerun update duration property every song maybe update duration properties maybe song properties even nt changed maybe far new vue know works would even noticeable performance impact event calculated properties nested objects update appropriately thank much example", "d": "5/2017"}, {"body": "also annoying generates html like tag list gets long wo nt linebreak sometimes developers forget writing html inside tags", "d": "5/2017"}, {"body": "getting error putting propsexample test component", "d": "5/2017"}, {"body": "evan please see regarding simular issueworkaround involve autocasting instead splicing attribute number empty", "d": "5/2017"}, {"body": "kylemccarthy", "d": "5/2017"}, {"body": "lost hours similar place array mutation case used function template mention maybe help developers used following code template produced infinite loop warning html tel lesson learned prepare mutate data adding local component state", "d": "5/2017"}, {"body": "fnlctrl templates converted render functions use selfclosing tags compiling vue single file components", "d": "5/2017"}, {"body": "except stringify index nulls destination object", "d": "5/2017"}, {"body": "bit later gon na work value computed property comes vuex store", "d": "5/2017"}, {"body": "already solution xlink href also got problem able use vattr vbind position used vuejs also component using vuejs", "d": "5/2017"}, {"body": "sure problem nt use vbind issue closed alsomst years please open thread forumvuejsorg need help", "d": "5/2017"}, {"body": "found docs", "d": "5/2017"}, {"body": "know people thread gon na love", "d": "5/2017"}, {"body": "thank much sharing octref right time needed", "d": "5/2017"}, {"body": "thanks octref played bit really like proper typescriptin inside component files anyone interested compatible template", "d": "5/2017"}, {"body": "zigomir experimental wip would nt say good idea distribute widely yet see context future bright ts definitions provided much better semantical intellisense typechecking region etc used augment shape contextual typing", "d": "5/2017"}, {"title": "canvas backbone", "body": "wish integrate canvas tag backbonejs stuck position defining view would appreciate one direct associate view canvas", "num": "4141", "d": "5/2017"}, {"title": "update version npm", "body": "npm old version backbone would cool update", "num": "4138", "d": "5/2017"}, {"body": "familiar canvas creating native html element existing canvas element javascript var canvasview backboneviewextend tagname canvas render function modify canvas element element already exists page javascript var canvasview backboneviewextend el mycanvas selector render function modify canvas element", "d": "5/2017"}, {"body": "npm latest release master yet released", "d": "5/2017"}, {"body": "instead vue uses fork snabbdom virtual dom library think safer use virtual dom library looking forward modularized backbone support virtual dom view layer", "d": "5/2017"}, {"body": "maybe backbonejs official view plugins one virtual dom one incremental dom one good ole fashioned underscore templates", "d": "5/2017"}, {"body": "year later thank goodness nt get shoved glad someone keeping cool head humble opinion nothing respect dissenting opinions personally would nt rush improve everyone hammer hotgluing stapleremover every one backbone underscore rare examples programming world equivalent elegant proofs modularize backbone alternate virtual doms comes preinitialize prepreinitialize preonpreinit existing plugins extensions give modest idea community patched thus actually consistently needed many people issues basic getters inside view functions compared want support classes yet library remained lean useful extensible quick example flufflobbying one two usecases given preinitialize merge actually closed jashkenas commenting one line call setelement initialize closing ticket hardly usecase let sure celebrate ability fork extend almost none us opportunity contribute web order backbone underscore easy pollute ecosystem reactive instead corrective functional certainly rushing jam personal backbone extensions see rare quality opensource repo easy extend almost anyone appreciate lack jumping things around hope lack continues made another noisy year without hotglue spinners favorite hammer thrilled mobs yet picked backbone carried oh look still use next projects best everyone", "d": "5/2017"}, {"body": "valleyspirit nt know understand saying underscorejs less deprecated supports useful features natively think important upgrade framework backbone take advantage new features language implemented maybe work pull request", "d": "5/2017"}, {"body": "think important upgrade framework backbone take advantage new features language implemented whole heatedly agree instead chasing shiny things frameworks chasing would like see backbone stay stable also evolve language get outdated", "d": "5/2017"}, {"body": "kind see directions discussed continuing make bb lean mean better suited deploy web nonweb apps bent towards modern package managers nt expect mainline bb release change much larger surrounding ecosystem grow much point things currently stand good bad fork realizing ideas worth pursuing nonetheless even better way provide continuity new ideas flourish one questioning impact bb underscore future assume discussing things bb ideas behind still form preferred framework choice", "d": "5/2017"}, {"body": "always exoskeleton disclaimer one contributors want go full route couple good ideas imo often better stick mainline bb something would like see improved currently", "d": "5/2017"}, {"body": "something would like see improved currently hard say part culture thing suppose opinions differ newcomer side around things go tech angle instance bit bearish speak regard adding mixin collection amp model assumes moving forward bullish bb version one thing big boon modification done thus far would events update backboneesnextevents adding async sync trigger amp return results consider low hanging fruit merging back mainline bb however async kind assumes otherwise separate promise module would necessary undesirable modification opens tons modularization possibilities use events inprocess messaging corner stone future efforts really improvement like going venture bb reorganization modularization nice keep open line communication going mainline bb maintainers tech angle would nice regard figuring tests shared efforts something look point possible slight modifications necessary nice work mainline bb maintainers regard", "d": "5/2017"}, {"body": "changelog added", "d": "5/2017"}, {"body": "ping jashkenas jridgewell braddunbar", "d": "5/2017"}, {"body": "nt already possible models cloned model original model", "d": "5/2017"}, {"body": "used backbone upgrade broke scenarios id property exists model collection uncommon scenario imagine adding models temporary collection without need polymorfismus example javascript version backbonemodelextend idattribute versionnumber new version versionnumber id name first version new version versionnumber id name second version versions new backbonecollection first version set collection versionsreset referenced pr fixes problem always prefers model collection one set id default collection never used broke behaviour backbone breaks backbone caseywebdev chance support scenarios preferably without changing code base could think changing pr prefer collection model means creating collections know models added without default model javascript temporarycollection backbonecollectionextend model backbonemodelextend idattribute null versions new temporarycollection collection idattribute null fallback model one lets models set versionsreset better possibility scenario", "d": "5/2017"}, {"title": "custom causes", "body": "tl dr added custom location type open browser route foo followed instructions copied code exactly appeared file called added line said reference code given docs simply decided restart server usual went back browser sitting one routes hit received cryptic error much googling trial error discovered fix error remove config line restart server suddenly app worked fine even odd start app without line app running browser window reloads fine etc readd line says triggers live reload app still works fine eg hitting reload page nt vie get contacts whatever route error course console gives consolelog output expected code long short using custom location totally seems screw really sad frustrating ideas fix full disclosure posted discuss resolution", "num": "15311", "d": "5/2017"}, {"title": "api document", "body": "methods emberrouter api document", "num": "15309", "d": "5/2017"}, {"title": "ember crashes encountering unexpected query param type", "body": "controller tries deserialize array based query param fail query param properly stringified causing ember completely crash occur user tries edit query param directly may better gracefully handle cases like keep app alive since simple refresh fix issue change url field", "num": "15306", "d": "5/2017"}, {"title": "eachin handle maps", "body": "came situation wanted iterate keys object guaranteed order objects per spec nt guarantee key ordering practice small objects engines tho turns support guarantee key insertion ordering feature interested", "num": "15304", "d": "5/2017"}, {"title": "ember assertions result object computeds running object init service injections appear idemponent", "body": "ok bit strange one ill best explain goes known ember runs assertions attempting set property object example assertion whether object property set destroyed making assertions ember eagerly call tostring method said object order prepare informative message assertion fail possible ember object may call computed property inside tostring method situations lead unexpected behaviour however come across scenario leads objects computed property getting computed init method chance run leading erroneous unexpected behaviour scenario follows custom object non ember data model registered container calls one computeds tostring method custom object uses emberinjectservice store access store unknowingly redundant initializer injection runs work injects store property figured would idempotent factory object looked using factoryfor container instance created result redundant initializer leads ember calling emberset providing store leads assertion checks whether object destroyed turn leads eager calling objects tostring method calls one objects computeds init method run particular case computed needed property set init computing erroneous value anything scenario raises question whether considered safe eagerly call methods ember object known init method executed especially true case method called eagerly case assertion fails would expect redundant injection would idempotent case appear unintended side effects please see attached twiddle failing acceptance test demonstrating scenario describing happy write submit actual failing test wanted get feedback twiddle proceeding thank taking time look", "num": "15299", "d": "5/2017"}, {"title": "super lost async operations", "body": "method points wrong method async operation instance assuming super exists route following return two different super methods async beforemodel consolelog await super thissupername await loadaccess consolelog await super thissupername longer version demonstrates issue using promises twiddle cause cause proxied version class instance instance thus scoped instance context rather execution context example bound function assumes function called make asynchronous calls workaround workaround save method beginning method plans use asynchronous code use saved method async beforemodel let super await loadaccess supercall arguments solution cleanest approach would use proxy object wrap original provide overridden method calls correct super method pass function wrapper essentially creating execution context method call however proxy yet seem supported internet explorer depending browsers ember supporting may feasible unfortunately nt see another way handles edge cases might another case documenting issue providing workaround enough browsers support proxy implement full solution progressive solution could used tests proxy uses exists falls back old implementation though makes application behave different different platforms makes issue even harder debug happens", "num": "15291", "d": "5/2017"}, {"title": "runindebug may leaking highiteration helpers used", "body": "running component template pair nested blocks volumes respectively resulting iterations quite helpers markup helpers called lot example helper invoked times per iteration times run development mode leaving route returning takes longer longer linearly time slowly building etc seem matter helpers use using custom helpers btw occurs even remove helpers except two helpers even remove html helpers looping nothing else within using chrome profiler reveals culprit call stack starts drills etc production issue makes sense runindebug nop profile note code emberdebugjs vendorjs seems ember code tried debug paygrade wrt ember blush", "num": "15290", "d": "5/2017"}, {"title": "feature queryparams allow associative array parameter", "body": "got associative array would like able would result additionnaly must would able update element eg would result would result currently setting result mind result", "num": "15286", "d": "5/2017"}, {"title": "add assertion called frameworkobject", "body": "likely start deprecation swapped assertion reason always called always ensure called code supering", "num": "15281", "d": "5/2017"}, {"title": "document fix issue computed properties model updating template", "body": "bug exists computed properties nt update template returning hook route update fine accessed properties controller worse depending computed property calculated template sometimes update making behavior inconsistent documented issue closed design creating new issue behavior counterintuitive b documented c inconsistent twiddle gives example bug property accessed via controller updates model route specifically computed properties used templates returned hook update fine computed properties return result call update fine computed properties return relationship ember data entity wo nt update computed properties fail update far tell instance works fine user computed userid function return get store findrecord user get userid model return get user fails user computed userid function return get store findrecord user get userid account computed useraccount function return get useraccount model return get account documentation updated document exactly return value update templates serious consideration taken toward fixing bug instead dismissing design behavior use computed property requires knowing property implemented breaks principle encapsulation makes slight changes computed property implemented break downstream users property unexpectedly knowing internals ember potential ways fix issue allow computed property dependencies defined computed property add special returns object template bind would get property way makes observable template updates automatically whenever value changes though special property behave like properties regards computed properties templates workaround use regular computed properties controller avoid using route altogether", "num": "15275", "d": "5/2017"}, {"title": "adding queryparams controller throws emberget exception", "body": "issue looking documentation adding query params controller upon refreshing page experience two exceptions tried route thing happens controller code route code exception version info", "num": "15274", "d": "5/2017"}, {"title": "specifying visit api setup rendering environment", "body": "currently glimmer environment renderer environment etc setup even using due injections providing every route property template instances require glimmer env renderer etc", "num": "15273", "d": "5/2017"}, {"title": "unregistering reregistering model nt clear factorycache", "body": "unit test part solution manually delete factorycache relationships previously registered model properly cleared update due bug emberdata linked issue deleting container factorycache indeed right solution basically current", "num": "15268", "d": "5/2017"}, {"title": "url encoding use encodeuricomponent", "body": "using ember question issue following route hit get browser url console hit get browser url console consolelogs correct wondering browser url symbols encoded symbols decoded nt consistent actually encode symbols expose anywhere function encoding use internally could use routes globbed dynamic segments issue strange inconsistency none documented anywhere", "num": "15266", "d": "5/2017"}, {"title": "custom elements regression", "body": "seems partially fixed get get", "num": "15258", "d": "5/2017"}, {"title": "emberdata findall works correctly query much", "body": "github repository concicesly recreates problem explanation issue following text also appears readme repo core problem basically bug appears centered around type query used load model view use works however work works work mean great question glad asked first context simple ui html model item itemname approutesindexjs define terms works work works eg happens clicking add new item button ui triggering action new item automatically rendered block page work eg happens clicking button triggering ui never updates console shows mirage posted item received valid response see screenshot block never rerendered idea fix suggestions andor pointing error ways welcome desired screenshot digital proof showing console add new item button clicked showing mirage post item ui never updated", "num": "15256", "d": "5/2017"}, {"title": "start nested transaction", "body": "upgrading see following errors suppose related back tracking issues error message makes hard work back towards cause ideas would go debugging", "num": "15255", "d": "5/2017"}, {"title": "retrying transition nt change url", "body": "working fine something like twiddle twiddle works fine production code nt try going route transfer controller click button log retry last transition production code leaves url instead changing interesting thing happens production case directly hit route refresh logged ie enter directly url press enter sure else could tell please ask need information", "num": "15251", "d": "5/2017"}, {"title": "events delegated components dom teardown gt", "body": "preamble chrome triggers synchronous events focused dom node removed dom fiddle illustrate create page attach event listener unlike bubbles programmatically focus element remove event synchronously triggered behavior present chrome neither firefox safari trigger event dom teardown firefox open issue add behavior however ember handlers component fire component element teardown tested layout teardown seems incorrect handlers component torn dispatched reproduction twiddle expected behavior given component tag element focus component removed rendering hook called actual behavior hook called render phase handler called suspect component handling event removed event dispatcher property disregarded dom teardown phase may events impacted regression though admittedly pretty weird wild manifest components focus firing final change notification triggered dom teardown parts app may longer expecting changes point example emberdata record created route called remove store presuming work aborted given record property bound value user causes transition final change notification occurs rendering record throws exception deleted record longer properties set", "num": "15250", "d": "5/2017"}, {"title": "edge weakmap issues", "body": "code like js import ember ember export default embercontrollerextend window embercomputed function return window url embercomputedreadonly windowlocationhref gives error repro debugging determined error likely kind special object edge edge weakmap implementation nt recognize real object", "num": "15249", "d": "5/2017"}, {"title": "emberobject ownerinjection jsonstringified", "body": "hi ran issue offirgolanembercpvalidations introducing project creating results provided ember twiddle demonstrates behavior default ember data function calls overrode function app ignore property nt know addressing circular reference makes sense context entire instance would appear stringified representation perhaps ember data correct repo report case please let know close favor issue ember data repo thanks", "num": "15248", "d": "5/2017"}, {"title": "unexpected observer running init", "body": "js import ember ember function alert function alert export default embercontrollerextend emberon init emberobserver emberobserver runs twice run expected would expect run without runs adding observer causes run twice init observer keys left nt affect test also change works expected", "num": "15246", "d": "5/2017"}, {"title": "support minlength attribute input helper", "body": "currently ember nt support attributes nt appear list verified nt work however already", "num": "15243", "d": "5/2017"}, {"title": "possible documentation issues containerfactoryfor applicationinstancelookup", "body": "hello containerfactoryfor description states consumer factory responsible destruction factory instances bit unclear initially read need destroy instance factory believe interpret destroy instances created factory makes perfectly sense could experience ambiguity native english speaker think good thing remind developers need destroy manually created objects suggest add similar remark description applicationinstancelookup instances looked option singleton false need destroyed manually", "num": "15241", "d": "5/2017"}, {"title": "loading route always entered using asyncawait", "body": "looks like application loading route loading route always entered use asyncawait method use normal promise nt look like loading route entered correct since promise resolved immediately created twiddle reproduce issue", "num": "15240", "d": "5/2017"}, {"title": "embererror error", "body": "emberdebug contain key emberdebugemberdebug called change", "num": "15237", "d": "5/2017"}, {"title": "undefined object evaluating emberdefaultdeprecateapply beta canary", "body": "started seeing travis today beta canary last successful build first time error popped", "num": "15236", "d": "5/2017"}, {"title": "router property undefined", "body": "hi upgraded app receiving following errors loading app digging error bit appears property nt defined causing error example defined also tried ember luck works fine dependencies reference thanks advance", "num": "15235", "d": "5/2017"}, {"title": "transitionto route liking model instead id", "body": "form create new account report save transition route route well good rather pass make api request hook since already saved model right try pass model directly like ember gets unhappy issue happens via controller loads template model stays route routes set twiddle", "num": "15234", "d": "5/2017"}, {"title": "update transpilation avoid closures using", "body": "cases using force babel transpilation include extra closures update babel options throw error occurs see example", "num": "15233", "d": "5/2017"}, {"title": "coreview trigger blindly expects property function named event", "body": "emberviewslibviewscoreviewjs truthy property component name event triggered method throws following error proposed solution typecheck actually function would like pr", "num": "15228", "d": "5/2017"}, {"title": "using ebercomputed set", "body": "use embercomputed set tried something like set work", "num": "15227", "d": "5/2017"}, {"title": "passing components properties works hash helper", "body": "trying use helper pass components components property yielding block noticed seems work using helper instead providing example code made reproduction twiddle twiddle passing components data quick summary twiddle proposes cases component passed another yielding component property helper yielding component directly passing component property helper passing component directly would expect four cases would render exactly meaning four would text however two cases component passed directly render instead best debug using handlebars try get idea different hash nohash instances tell component value times ca nt figure works without", "num": "15225", "d": "5/2017"}, {"title": "custom elements regression", "body": "", "num": "15221", "d": "5/2017"}, {"title": "dom attributes number literals", "body": "following mustache thrown works breaks twiddle", "num": "15217", "d": "5/2017"}, {"title": "add stack info runlater call", "body": "based conversation slack stefanpenner gmunjal test timing best way debug determine preventing world settling gmunjal update put breakpoint apptesthelperswait function seems emberrunhasscheduledtimers returning true way determine scheduling timer spenner gmunjal hmm debugged lets see remember regular tasks way gmunjal stepping hasscheduledtimers bit complicated found backburnerstimers property problem gives number spenner unsure way works tasks also include function perfect realize theory tostring function may help gmunjal think whats missing thing optionally save stack github ebrynbackburnerjs backburnerjs rewrite emberjs run loop generic microlibrary", "num": "15215", "d": "5/2017"}, {"title": "iscausedbyinitialtransition property transition either null undefined", "body": "route hook inspecting second argument determine whether first page user landed request property property method works feels like hack property return either encountered situation", "num": "15214", "d": "5/2017"}, {"title": "production builds running callback", "body": "using supposed call callback running debug build seems currently running callbacks production builds seems broken canary demo demo working properly", "num": "15212", "d": "5/2017"}, {"title": "error message precompile requires host use emberclibabel despite installed", "body": "hi tried upgrade large project get error emberclihtmlbarsinlineprecompile requires host use emberclibabel use emberclibabel please upgrade emberclihtmlbarsinlineprecompile general question doc issue get broccoli error like find caused core addon name specific question emberclihtmlbarsinlineprecompile installed nt work bug", "num": "15211", "d": "5/2017"}, {"title": "bug service unknown injection within applicationcontroller", "body": "ember generated new service custom applicationcontroller controller js import controller inject embercontroller import get getproperties emberobject export default controllerextend tracking inject init thissuper arguments let tracking get tracking get error", "num": "15209", "d": "5/2017"}, {"title": "ember breaks production build", "body": "breaks app production app boot shows following errors console uncaught typeerror read property registerwaiter undefined objecty runindebug anonymous anonymous anonymous anonymous followed moving back solved issue", "num": "15206", "d": "5/2017"}, {"title": "bug input checkbox value returns internet explorer", "body": "binding attribute checkbox tag controllercomponent property seems broken see minimal example code template controller inputvalue actions getcheckboxvalue let value documentqueryselector input typecheckbox value value alert value value", "num": "15203", "d": "5/2017"}, {"title": "bugregression injecting autogenerated controllers nt work acceptance tests", "body": "reproduction clone run tests expected error attempting inject unknown injection controller application apparently happens tests normal execution works also works instead injecting autogenerated controller create empty application controller works fails canary cc rwjblue discussed slack", "num": "15202", "d": "5/2017"}, {"title": "ember appears indifferent closing brace computed property brace expansion", "body": "nt seem like big deal noticed comes computed properties ember seems indifferent presence closing brace brace expansion please see following twiddle demonstrates behaviour would expect modelbar modelbaz watched updated given end brace expansion missing", "num": "15201", "d": "5/2017"}, {"title": "parent route keeps calling hook visiting child routes", "body": "sure bug something understanding say following routes defined goal people send direct links edit person issue comes fact person route keeps calling function every time click link edit person happens ui goes back loading state reloaded example showing hook continuing called visiting child route bug understanding works scenario user visits people user clicks page loads info person user clicks edit link uses linkto helper visit shows edit form next display person route user share edit link", "num": "15200", "d": "5/2017"}, {"title": "embertemplatecompilerjs output incorrect", "body": "contains development builds various packages production build causes errors present production version package stripped various transpiled classes due transpiled debug build", "num": "15198", "d": "5/2017"}, {"title": "aliased actions used component templates without controller", "body": "want confirm whether feature bug based documentation end using project using action component template passed another template controller component controller performing action parent controller main concern patched future example template templatename component example", "num": "15196", "d": "5/2017"}, {"body": "mean", "d": "5/2017"}, {"body": "iterators likely add iterator support maybe something", "d": "5/2017"}, {"body": "cibernox feature interested yes fwiw think support map support anything method accepts callback stefanpenner iterators likely add iterator support maybe eachin something agreed support native iterables present", "d": "5/2017"}, {"body": "agreed support native iterables symboliterator present", "d": "5/2017"}, {"body": "thank writing detailed issue current state assertions ideal exact reason mentioned eagerly calculating messages often turns costly case cause error created remember address back forgot actually get around fixing spent time today digging submitting pr fix lands update version plugin ember build uses transpiled output output assertion become see would result message portion generated actually required", "d": "5/2017"}, {"body": "pleasure rwjblue thank quick reply taking time move fix forward safe say close issue wait fix land", "d": "5/2017"}, {"body": "landed changes upstream submitted pr updating ember use newer babel plugin version", "d": "5/2017"}, {"body": "fastfedora ya sure fixed without hefty performance penalty known limitation userland super helper transition objects super essentially exactly like workaround hood workaround recommended one recommending pain nt nearly bad clearly increased asyncawait usage pain continue grow hopefully pave road classes sooner ergonomics nt suffer also noticed", "d": "5/2017"}, {"body": "fastfedora also good sleuthing great issue writeup issue annoys crap", "d": "5/2017"}, {"body": "dliblik thanks digging would really helpful could create reproduction demo help figure going think either embertwiddle full blown embercli app would work well demo issue", "d": "5/2017"}, {"body": "yup great sleuthing reproduction dive help figure whatsup asap", "d": "5/2017"}, {"body": "ok let see put together thanks", "d": "5/2017"}, {"body": "test project update issue occurs high volume custom helpers rendered debug mode attached project simple loop repeats helper returns fixed string times flip back forth route using provided link console log show everincreasing render time time leave return route remove helper component template problem goes away", "d": "5/2017"}, {"body": "btw repro case somebody fixed already nope still", "d": "5/2017"}, {"body": "finally would really cool cause identified person found gave quick summary cause found would happily put time identified root cause could debugged insitu", "d": "5/2017"}, {"body": "seems fixed master includes large architecture refactor within glimmervm", "d": "5/2017"}, {"body": "rwjblue good know thanks test close", "d": "5/2017"}, {"body": "krisselden help able identify root issue helper invoked pass arguments arguments frozen via helpers ca nt mutate cause issues rendering engine helper nt hash arguments use shared empty object avoid allocating bunch empty objects reason roughly thing positional params passed since objects shared frozen throughout lifetime running application turns think almost certainly bug chrome refreezing object many times starts taking significantly time upon freeze attempt demo snippet shows issue js let objectfreeze objectcreate null let objectfreeze function freeze objectfreeze objectfreeze function timedfreeze consoletime freeze let lt freeze consoletimeend freeze timedfreeze timedfreeze timedfreeze timedfreeze timedfreeze demo jsbin", "d": "5/2017"}, {"body": "submitted work around", "d": "5/2017"}, {"body": "hello homersimpsons closing since emberjs bug feature requests need follow process explained thank", "d": "5/2017"}, {"body": "cc krisselden stefanpenner sanity check", "d": "5/2017"}, {"body": "rwjblue", "d": "5/2017"}, {"body": "conversation runspired suggested perhaps better required super hook seems paired thoughts", "d": "5/2017"}, {"body": "purposes destroy markphase turn stuff nt cause change events willdestroy sweep phase things may caused change events", "d": "5/2017"}, {"body": "ya makes sense good explanation reasoning behind two wondering choose required supering", "d": "5/2017"}, {"body": "feel need could convinced suppose", "d": "5/2017"}, {"body": "bug exists computed properties nt update template returning model hook route update fine accessed properties controller appear bug def area guides improved maybe help let explain whats happening maybe propose changes guide make obvious responsibility hook method route translate url query params object pass object controller general time invoked potentially changing route revisited queryparams change example returned hook navigation computed property change changes appear related url navigation queryparam change one options move queryparam makes sense sure way changes model hook rerun users hard reloads get back exact expected state others require context writing response feel stackoverflow question bug request cc emberjslearningteammanagers ideas canshould improve guidesdocs cover", "d": "5/2017"}, {"body": "disagree bug one property templates act like properties templates fact reason occurring make less bug others clearly run across issue side took two entire days debugging identify issue writing rewriting computed properties dozen different ways trying figure nt updating properly templates undoubtedly many others given figuring cause pain actual use case bit complicated actually set session thus data nt change however rely deferred loading via ember data derivative properties data properties update fine used controller included model documentation appears indicate using hook ember way passing data template route case documentation updated based comment would infer hook used loading data based query parameters otherwise use computed properties controller yet documentation makes seem issues implementing one two solutions proposed fix bug", "d": "5/2017"}, {"body": "one property model templates act like properties templates may hint misalignment regular old property property exists controller route routes function way route url queryparam change derive data destined set routes controllermodel property documentation appears indicate using model hook ember way passing data template route case documentation updated yes way convert given url data typically model case source truth appear url may right approach issues implementing one two solutions proposed fix bug data flow routes controllers serves purpose purpose ensure url page state remain insync data flow always url driven ensures reloadingbooking marking back button work consistent correctly sourceoftruth url could bypassed described would impede mentioned goals suspect least provided example may want usersession service encapsulate user session information route still populate usersession service user property initial load subsequent changes url reflecting maintained managed usersession details assuming intentions tricky sure covers cases suspect approach may yield positives outcomes still nt believe issue worst guide improvements could help changing dataflow routes controllers templates proposed would whole new feature explored via rfc process", "d": "5/2017"}, {"body": "documentation process found guides routing specifying route model find api documentation routemodel well please help us improve useful future users thank", "d": "5/2017"}, {"body": "going close issue still believe bug although issue closed continue discussion provide guidance best approaches general would recommend using stack overflow sorts questions please feel free cross link", "d": "5/2017"}, {"body": "general would recommend using stack overflow sorts questions please feel free cross link support question bug report already stated looking solution looking get bug fixed see bug please add others discussion core problem appears see bug stop looking implementation perspective look developer using ember perspective one property acts differently templates properties nonobvious inconsistent ways makes hard reason happening slight changes computed property implemented change result makes system fragile hard refactor call bug call bad design problem addressed given good reason arguing fact specifically also proposed two different ways could fixed however recognized problem talking fixes nt going help always hard simplifying code example enough explain issue without losing context like stay focus solving bug rather trying solve specific examples giving demonstrate bug bug report support question let go back another simplified example may explain bug another perspective say route supposed display list accounts logged user model directly tied url want model return list accounts currentuser service model return get currentuseraccounts computed property returns active accounts accounts computed useraccounts function let accounts get useraccounts return accounts null accountsfilterby active true undefined try access model relationship loaded yet template following two initially start value loaded direct access updated model access understand position hook route supposed called sets controller developer perspective results inconsistent nonobvious behavior rendering templates slight changes implementation change happens template look implementation computed property know happen breaks core principle encapsulation instance would update model access direct access correctly today hook always function fairly easy extend syntax allow also computed property could set controller templates update correctly one thing know certain writing hook using property extend syntax allow dependency specified dependency passed controller templates update correctly b regain encapsulation since longer need know property implemented specify using nt hard implement would nt break existing code since existing code assigns regular function key", "d": "5/2017"}, {"body": "see bug please add others discussion rwjblue paired responses gladly reach others", "d": "5/2017"}, {"body": "fastfedora empathizes frustration changing dataflow routes controllers templates proposed would whole new feature explored via rfc process rationale behind treating bug case missed long comment also mean imply idea bad good rather describe new feature need like new features go rfc process process helps understand motivations alignmentsmisalignments etc said suspect abovedescribed feature nt mean thorough exploration wo nt change minds", "d": "5/2017"}, {"body": "hello tsteuwer reproduce problem data try twiddle please send reproduction thank", "d": "5/2017"}, {"body": "delved bit deeper seems happens catchall route using params repository instructions recreate ember open console see error maybe thinking wrong way converting huge travel site ember slugs look like examplecomcountrycitystate times countrycitystate could regioncity marketingtopten something along lines need able catchall issue filtersortetc need query params handle", "d": "5/2017"}, {"body": "serabe anyone looking managed track follow post visit page passed throws emberget error changing fixes issue ca nt find world creates key first place", "d": "5/2017"}, {"body": "awesome thanks continuing dig tsteuwer reproduced error seeing twiddle tracked key object using globwildcard routes ember defined name eg name used pass wildcard value like dynamic segments value eg reason used scenario twiddle path essentially creating model param reference position solution error provide name wildcard like revision twiddle end nt bug perse method instead believe assertion much earlier evaluated tell name needed glob route path submitted address angle", "d": "5/2017"}, {"body": "tsteuwer would great could go back double check docs used determine globwildcard routes defined perhaps submit pr tweaking language make fairly subtle point bit clearly since think comments address reported issue going close please let know misdiagnosed reopen dig", "d": "5/2017"}, {"body": "solution spot rwjblue absolutely submit pr docs thanks much looking literally going ember source trying figure feel like work query params ever ticket lmao", "d": "5/2017"}, {"body": "suspect master cache needs cleared named differently", "d": "5/2017"}, {"body": "tests introduced", "d": "5/2017"}, {"body": "bekzod got cycles lend hand one", "d": "5/2017"}, {"body": "sure look", "d": "5/2017"}, {"body": "leooo version ember looking", "d": "5/2017"}, {"body": "ember amp ed", "d": "5/2017"}, {"body": "leooo tried following test ember fail might ember data issue also manually checked everything works reproduce ember ember data", "d": "5/2017"}, {"body": "bekzod ok strange leave open try create failing test next days probably ember data indeed case go ed repo suppose thanks lot checking l", "d": "5/2017"}, {"body": "bekzod stefanpenner added failing test", "d": "5/2017"}, {"body": "poking beefed ember tests around seems working well ember side going close dig ember data issue", "d": "5/2017"}, {"body": "tracking issues glimmer", "d": "5/2017"}, {"body": "awesome thank", "d": "5/2017"}, {"body": "jsbin links wrong corrected glimmer issues fixed", "d": "5/2017"}, {"body": "thank", "d": "5/2017"}, {"body": "update thought might related somehow live tried using like code ran evidenced statements shown results code action runs correctly mirage posts correctly results never show ui", "d": "5/2017"}, {"body": "seems like lot work get reactive filtered array even array filtered still rerender underlying array updated knockout even computed property returned array reran underlying observable array computed prop used pushedpoppedetc understand ember lot hood knockout evidenced ginormouse api needed jump thru hoping additional cruft pay faster smoother better easier app however far heckuva time translating know ember data model sure return array like know updates properly would better make utility store handles underlying arrays filters needed feeds embera observable arrays users needed instead using emberdata bottom line want live list realizing works great soon want apply sort clientside filtering even pass query server server side filtering loose semblance live list please please please correct missing something translating concepts head right really want ember work hard time getting things work way imagine easily right box", "d": "5/2017"}, {"body": "probably want return result model hook eg leverage computed property controller live record array get back model hook use computed property template", "d": "5/2017"}, {"body": "hmmm excellent suggestion thanks however seems transfer responsibility handling bulk filtering onto individual clients foregoes incredibly powerful query engines present backend form sql etc seems suggestion would fall face tens thousands records etc really want records seems would better server send need instead giving us records finding relevant yes filtering results nt live update records added removed therein lies crux problem seems fork road filter get live update createdelete ops let server filter live update createdelete ops way around quandary way get benefits server filtering luxury live updating list client createdelete ops note context discussion talking live updates createdelete ops talking createdelete ops happen local client sort streaming sockets anything another discussion entirely obviously", "d": "5/2017"}, {"body": "sure want subset total available records particular route loads free use model hook get need would change strategy would get live somewhere model hook example routejs model return thisstorequery modelitemname query controllerjs items embercomputed function return thisstorepeekall modelitemname filtereditems embercomputedfilterby items name test live view store update whenever new gets added", "d": "5/2017"}, {"body": "intriguing shall test suggestion great idea curious though would seem imply could one live view store eg soon query add items store would update live views yeah really clear one list ui results records model categorya another list ui results records model categoryb would seem lists would get full list model items eg would return categorya items categoryb items appears tied specific gives live view items store ever one live view store model client correct thinking correctly way get return live view may bug design decision correct thanks help way", "d": "5/2017"}, {"body": "would live query different result filter applied given scenario would think following would satisfactory items embercomputed function return thisstorepeekall modelitemnames itemscategorya embercomputedfilterby items category itemscategoryb embercomputedfilterby items category b apologies overlooked nuance nt work", "d": "5/2017"}, {"body": "ahhh see going missed apologies thinking imagining server would filtering categorya categoryb via call explicit filtering needed client side apologize realize may way line ask others handle scenario past sure situations apps entire list records larger want sent client still want new item button update ui directly rather refetching list server nt want loose sight forest trees open alternative suggestions handle type thing envision something store reference ember array result new item action trigger controller directly adds item stored ember array array course used ui apps records get snapshot list directly manage adding items list instead relying update list", "d": "5/2017"}, {"body": "would exactly described model hook could backend records categories b records asked transferred wire local set two computed properties got point time new record type added eg way computed properties refire everything uptodate", "d": "5/2017"}, {"body": "ahhhhhhh lightbulb got suggestion basically something like whatever syntax computed filter ui basically duplicating query providing live array chew bit see coming thanks help", "d": "5/2017"}, {"body": "drats really wanted work like suggested either going work theory wrong b implementation theory wrong corrections welcome see code repo linked op added following properties javascript items embercomputed function return thisget store peekall modelitemname sorteditems embercomputed items function consolelog sorteditems computed called return thisget items sortby name index hook modified ui use instead action problem console shows mirage simulating post server new items computed never reexecuted saying appears console right app boots bottom line nt appear work live array nt appear notify computed new items never recomputes appears thoughtssuggestionscorrections thanks", "d": "5/2017"}, {"body": "really close working ember arrays two special properties reference using ember array dependent key computed property example want update resort every time membership list items changes make sorteditems look like may updated something want resort happens addition item addedremoved use edit add nt use previous examples computed function sets correct observer", "d": "5/2017"}, {"body": "ahh right work said okay ask docs nt clear matter use multiple properties like yes tried syntax nt work thoughts chain computed properties", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "ahhh ha bueno blind missing something docs bad seeing", "d": "5/2017"}, {"body": "josiahbryan documented computed properties guide multiple dependents object", "d": "5/2017"}, {"body": "mentioned computed properties guide specifically section honest actually go check see worked something ever thought", "d": "5/2017"}, {"body": "either free time pr adding example brace expansion would appreciated", "d": "5/2017"}, {"body": "ahhhh thanks locks jaswilli slowly getting pieced together much appreciation patience help computed function worked expected reacted properly changes name age properties resorted accordingly thanks locks suggestion see whip something figure pr new github higherorder concepts like prs etc old dog new tricks etc", "d": "5/2017"}, {"body": "locks source ca nt seem find files similar", "d": "5/2017"}, {"body": "josiahbryan guides separate repository easiest way get started click pencil icon topright title", "d": "5/2017"}, {"body": "locks hey thanks give go nt even notice pencil bad", "d": "5/2017"}, {"body": "locks pr created realize headers proposed stylistic opinions may desired worries feel free chop drop whatever wanted ignore whole pr leisure worries either way cheers", "d": "5/2017"}, {"body": "thanks locks", "d": "5/2017"}, {"body": "thanks contribution", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "someone please explain meaning assertion type error guard usage problem fix app glimmer internal problem", "d": "5/2017"}, {"body": "encountering issue well using used unminified ember see error would awesome hear anyone advice debugging", "d": "5/2017"}, {"body": "issue slightly different symptoms occurs project embedded another site specifically wordpress run locally via ember serve directly via indexhtml issue occurs goes away ie emulation mode set earlier disabling minification seem make difference rolling back previous versions changes error output solve problem tried others briefly able reproduce error chrome locally updating packages unfortunately nt record package combo achieved speculatively seems happen ajax request returns result parsed", "d": "5/2017"}, {"body": "someone please explain meaning assertion ran red herring sorts basically error occurs render putting vm bad state results error although glimmer also needs address able recover correctly may want look errors console address example someone trying use", "d": "5/2017"}, {"body": "hypothetical fix need actually write tests confirm nt get exited yet", "d": "5/2017"}, {"body": "beta channel release channel", "d": "5/2017"}, {"body": "news issue could please guys provide workaround blocks company migration", "d": "5/2017"}, {"body": "released morning fix assertion wed may pm alexander kapelyukhovskiy lt notifications githubcom wrote news issue could please guys provide workaround blocks company migration receiving commented reply email directly view github mute thread gt jordan hawker wwwjordanhawkercom senior javascript engineer twitch", "d": "5/2017"}, {"body": "thanks forgot close", "d": "5/2017"}, {"body": "problem since release glad testing tests failing hope fixed soon", "d": "5/2017"}, {"body": "seems like could related thought affecting beta", "d": "5/2017"}, {"body": "thank workmanw yes suspected due updating yarnlock incorrectly dig confirm morning get", "d": "5/2017"}, {"body": "confirmed diff", "d": "5/2017"}, {"body": "fixed published min", "d": "5/2017"}, {"body": "fun fun see two options ensure view removed sooner registry guard based view state events received vote would", "d": "5/2017"}, {"body": "would quite cool keep components around short time schedule destroying later benefit hassle async benefit guarded event behavior events work expect browser choice benefit simplify fadeout crossfade native animations immediate teardown gc problem see rework whole application vinubiscom native animations used lf chrome major bugs since issue tracker video fullscreen broken position fixed nt work chrome going change issue translatewillchange creating new coordinate system guy misunderstood spec back two times word different contexts narrow applications dealing video andor position fixed top menus css native animation support end would big secondary effect", "d": "5/2017"}, {"body": "would quite cool keep components around short time schedule destroying later think orthogonal issue sure look liquidfire addresses solution seems handle case nicely", "d": "5/2017"}, {"body": "nt case moment framework support keeping components longer would great future applications possible solution problem liquid fire nt work well sophisticated apps works programmer ux experience past", "d": "5/2017"}, {"body": "sounds like bug edgechakra cc nolanlawson jdalton", "d": "5/2017"}, {"body": "thanks heads looks like left host object old", "d": "5/2017"}, {"body": "jdalton best us open issue track said progress", "d": "5/2017"}, {"body": "reduced example likely", "d": "5/2017"}, {"body": "let file chakra github repo see gets pushed back edge since dealing dom hosted object toss yes reduced repro sufficient throws", "d": "5/2017"}, {"body": "jdalton awesome thanks issue opened kellyselden thanks bug report nt think ember work around issue likely important fix chakraedge friends able work around creating chain nodes objects turn nonobservable anyways", "d": "5/2017"}, {"body": "nolanlawson opened us ie edge issue", "d": "5/2017"}, {"body": "version ember provide reproduction", "d": "5/2017"}, {"body": "included link ember twiddle reproduces ember version per", "d": "5/2017"}, {"body": "rwjblue thought moved owner stuff meta wip", "d": "5/2017"}, {"body": "emberobserver function return arguments observing seems missing path", "d": "5/2017"}, {"body": "observing seems missing path stefanpenner could put random key nt affect test case left conciseness see observer keys left nt affect test", "d": "5/2017"}, {"body": "mind adding failing test twiddle", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "could missing something javascript nt objects get destroyedgcd fall scope situations would need manual destruction object opposed letting go away fall scope", "d": "5/2017"}, {"body": "josiahbryan correctly point language point view real destruction javascript observers andor bindings tied object could read probably prevent object falling scope destroy method schedules destruction ember clean object get properly gced additionally isdestroyed flag set longer set property object accidentally reference object lingering try use get nice exception implies leak effective sounds personally rarely try set property object dereferenced design occasion forget actually dereference application complete rely features build framework including addons like emberdata nt think ever need call destroy manually done behind scenes however creating instances objects take life cycle consideration", "d": "5/2017"}, {"body": "likely asyncawait getting native promises nt coalesce runloop yet work address back burner repo although possible tuning required", "d": "5/2017"}, {"body": "work around replace native promise embers add initializer setting nice know works", "d": "5/2017"}, {"body": "lovetingyuan awesome thank reporting serabe maybe time look", "d": "5/2017"}, {"body": "serabe think related", "d": "5/2017"}, {"body": "bug added simple mistake moving many imports added pr fixing thank", "d": "5/2017"}, {"body": "almost certainly ember data issue", "d": "5/2017"}, {"body": "unsure lukemelia reported similar error another comment think may due recent largeish refactoring emberdebug package landed morning sometime", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "reproduce addons use require configuration please provide twiddle repo reproduction thank", "d": "5/2017"}, {"body": "nt understand code going assume problem related changing names", "d": "5/2017"}, {"body": "kevlarr issue approach set path route router matters issue ember configured report route path pass model object router tries resolve property model object report present present configure path router resolve property passed model object makes smooth transition case model hook reportsreport route invoked since passing entire model object hope satisfies need", "d": "5/2017"}, {"body": "twiddle follow ember convention go like replace twiddle work expected", "d": "5/2017"}, {"body": "closing since sharavanaprasad kumkanillam given right solution thank", "d": "5/2017"}, {"body": "serabe saw responses question explicitly stated docs somewhere convention nt good word something mandatory", "d": "5/2017"}, {"body": "sharavanaprasad kumkanillam perfect thanks help nt seen anywhere using actually necessary", "d": "5/2017"}, {"body": "kevlarr written dynamic segments section guides ember follows convention two reasons first reason routes know fetch right model default follow convention second object one value associated key thank", "d": "5/2017"}, {"body": "routes know fetch right model default follow convention nt anything providing model hence confusion thanks pointing though appreciate went find resource drop get reasons", "d": "5/2017"}, {"body": "typeof method function", "d": "5/2017"}, {"body": "currently sets nonobservable datastructures may change future today working intended using set wish computed property dirtied must manually inform computed property", "d": "5/2017"}, {"body": "nt really think bug actually let explain see agree believe crux issue generally called dot rule standard curly invocation dynamic component includes period invocation example ember versions supported closure components syntax works invocation yielded component really nothing helper though however work intended reason made every invocation possible component invocation possible helper invocation local property backing js object block param make example work would need use helper", "d": "5/2017"}, {"body": "rwjblue issue reason works hash helper without design please look section rfc introduced following one understand thank", "d": "5/2017"}, {"body": "gotcha makes sense appreciate explanation rwjblue serabe hoping create parent component took property could either string component passed helper way without dot", "d": "5/2017"}, {"body": "fwiw updated twiddle show working using helper scenarios", "d": "5/2017"}, {"body": "demo", "d": "5/2017"}, {"body": "intent actually allow detect transition initial transition rather detect transition caused initial transition eg initial transition redirect second redirect transition would first would think seems better straight value though would appreciate pull request fixing note fix longer able detect initial transition may want add another flag specifically think following would trick going close believe bug happy help iterate routerjs like make pr make bit better", "d": "5/2017"}, {"body": "thought saw thought built wrong thing guess nt crazy", "d": "5/2017"}, {"body": "bisected first bad commit breakage fixed exhibits issue", "d": "5/2017"}, {"body": "issue likely one dependencies using emberclihtmlbarsinlineprecomplile assertion message added trying helpful folks actually checking babel version project babel version thing including inline precompiler working fixing though also please note issue tracker bugs ember seems like bug emberclihtmlbarsinlineprecompile open issue cross link back", "d": "5/2017"}, {"body": "assertions", "d": "5/2017"}, {"body": "bcardarella guess need import instead work", "d": "5/2017"}, {"body": "yeah coding penalties", "d": "5/2017"}, {"body": "looks like something expecting embertestregisterwaiter present even production build need info environment able help specifically need figure calling registerwaiter", "d": "5/2017"}, {"body": "hope helps environment packagejson broccoliassetrev emberajax embercli embercliappversion emberclibabel emberclidependencychecker emberclieslint emberclihtmlbars emberclihtmlbarsinlineprecompile embercliinjectlivereload embercliqunit emberclisass emberclishims emberclisri emberclistringhelpers emberclitestdouble embercliuglify embercollection embercomposablehelpers emberexportapplicationglobal emberkeyboard emberloadinitializers embermathhelpers embernewcomputed emberpaper emberperfectscroll emberpowerdatepicker emberpowerselect emberprism emberpromisehelpers emberresolver emberrouteactionhelper embersource embertruthhelpers embervelocitymixin liquidfire loaderjs phantomjsprebuilt", "d": "5/2017"}, {"body": "right next step would look addons using another thing might easier disable minification production build way could look code causing failure unminified would something like", "d": "5/2017"}, {"body": "ok found code snipped crashes startendtickresume fire end emberrunindebug function var tproto var sproto var count var wrappees sproto transition tproto transition tproto select tproto selectall tproto filter point code suppose issue moved project", "d": "5/2017"}, {"body": "relate ember close", "d": "5/2017"}, {"body": "take ember equation return", "d": "5/2017"}, {"body": "yes set attribute template return correctly also tried replicate vanilla javascript pointers instincts start looking happy take try triage little bit", "d": "5/2017"}, {"body": "confirm problem set element checked looking element inspector panel", "d": "5/2017"}, {"body": "generally speaking error seem correct think may case folks would want general needed router information eg etc tad annoying case always generate one think simplest solution would register present", "d": "5/2017"}, {"body": "believe something changed way injection works eager acceptance tests found another error test although time legit mistake importing service nt exist anymore model would pass tests never try access failed even tests nt exercise functionality regular execution tests things seem work", "d": "5/2017"}, {"body": "yes agreed enables double extend feature corrects number missing validation scenarios guess saying validations happening errors thrown actually correct however specific case make sure present validation error nt triggered since guarantee created available nt done routing booted fails assertion depending timing", "d": "5/2017"}, {"body": "rwjblue got right place warm application route", "d": "5/2017"}, {"body": "think would add something like following would also update test", "d": "5/2017"}, {"body": "trolled whilst working emberconcurrency dummy docs site strong opinions whether breaking enough fixedreverted sharing", "d": "5/2017"}, {"body": "thank fixed adding test case checking fix backported thank", "d": "5/2017"}, {"body": "thats great thank", "d": "5/2017"}, {"body": "error code misunderstanding route go child route asking go", "d": "5/2017"}, {"body": "actually found issue task update didtransition thought didtransition enter route enter child route thanks help btecu", "d": "5/2017"}, {"body": "sure understand saying try reproduce twiddle far seems normal code", "d": "5/2017"}, {"body": "looks normal issue closed merely difficulty finding documented example passing action component template using like examples found involved controller like examples could link pass actions component use without controller like short snippet posted thanks", "d": "5/2017"}, {"body": "yep called closure actions thank", "d": "5/2017"}, {"body": "many thanks link exactly looking know extract function component passed unquoted reference", "d": "5/2017"}, {"body": "also try look point today", "d": "5/2017"}, {"body": "fix", "d": "5/2017"}, {"body": "stefanpenner updated embernativedomeventdispatcher use embersource seem passing test suite recall repotest app using pull track issue coming see", "d": "5/2017"}, {"body": "believe ran issue", "d": "5/2017"}, {"body": "hello mwpastore closing since emberjs bug might interested emberjsrfcs thank", "d": "5/2017"}, {"body": "exactly looking thanks serabe", "d": "5/2017"}, {"body": "cents took forever finally end reason thought default template came expecting", "d": "5/2017"}, {"body": "summary embertypeof deprecated use native typeof pr way emberrouteactionhelper", "d": "5/2017"}, {"body": "lougreenwood ping", "d": "5/2017"}, {"body": "faced issue solve", "d": "5/2017"}, {"body": "ping", "d": "5/2017"}, {"body": "still reproduce please send reproduction shows issue twiddle small repo thank", "d": "5/2017"}, {"body": "yeah screen", "d": "5/2017"}, {"body": "came across issue attempting update addon embercli anyone found decent workaround usage", "d": "5/2017"}, {"body": "currently working emberlinkwithfollower update running across issue tests using emberclimocha", "d": "5/2017"}, {"body": "researching similar issue able narrow text problem text triggers regular expression optimization used determine whether function wrapped exists anywhere text function eg string comment actual function call triggers function wrapped since relying feature test ie whether function source retrieved falls back always wrapping function javascript engine nt support wondering impact optimization removed", "d": "5/2017"}, {"body": "fastfedora provides excellent workaround recommendation follow tricky balance getting helper working without hefty performance penalty plans transition classes super works essentially fastfedora workaround works nice ergonomics suspect unfortunate wontfix rather overtime able move away entirely", "d": "5/2017"}, {"body": "seeing", "d": "5/2017"}, {"body": "jabraok ping", "d": "5/2017"}, {"body": "serabe sorry kind old stuff close issue thanks help", "d": "5/2017"}, {"body": "stefanpenner could suggest turn permanent warning instead deprecationerror plugin authors may play game release minor releases removing hooks base classes could break actual apps could happen even migration ember", "d": "5/2017"}, {"body": "seeing issue", "d": "5/2017"}, {"body": "anyone reported mozilla yet think worked around glimmer", "d": "5/2017"}, {"body": "note firefox implementation value required attribute actually correct setting must set element value new value set element dirty value flag true invoke value sanitization algorithm", "d": "5/2017"}, {"body": "possible fix glimmer regression case ember field marked invalid trying submit form field empty martndemus validation sanitization dirty value would mean changed whereas validation kick either asking via dom api submitting form afaik", "d": "5/2017"}, {"body": "hunch could glimmer first inserts input dom sets value bound property might trigger firefox validation", "d": "5/2017"}, {"body": "crsici ping", "d": "5/2017"}, {"body": "sorry delay found emberjs issue close request", "d": "5/2017"}, {"body": "running issue today", "d": "5/2017"}, {"body": "jakeleboeuf issue upgrading fixed version edit brain almost gone deep space realized tested wrong still continuing", "d": "5/2017"}, {"body": "case anyone runs issue could possibly import controller ember import alias embercomputed export default controllerextend deployments alias model note importing incorrectly using emberclishims current project using lost hour gave came back saw clearly wrong", "d": "5/2017"}, {"body": "caught today tend ignore comments", "d": "5/2017"}, {"body": "work adding one property first indicated stack trace eliminated many error messages cascaded initial one", "d": "5/2017"}, {"body": "neilthawani may hide error nt necessarily fix problem error meant indicate setting value twice probably setting putting one delaying second set happens different runloop nt fixed core problem rendering twice need render tricked ember knowing issue renders happen separate runloops", "d": "5/2017"}, {"body": "uh oh thanks basically missed point entirely edit struggling inserted comfortable handler one data viz components toggles tooltip setting flag within allowed us debug real issue actually backtracking controller invoking data viz component tooltip component tl dr nt keep got error using helpful debugging real issue uncovered", "d": "5/2017"}, {"body": "psa anyone else upgrading improved backtracking rerender assertion error mentioned gavinjoyce actually included ember also suggested jumping straight might helpful", "d": "5/2017"}, {"body": "seen glimmer well anyone work around would great", "d": "5/2017"}, {"body": "rwjblue intrigued since getting eventually ended tried changing dummy app addon still labelled violator something wrong", "d": "5/2017"}, {"body": "ksnyde need disable events preventdefault scroll touchstart touchmove mousedown mousemove etc", "d": "5/2017"}, {"body": "also need check nt something besides ember adding", "d": "5/2017"}, {"body": "thanks krisselden message brings mousewheel event specifically red herring", "d": "5/2017"}, {"body": "also guess bigger question least whether one disable events component component basis rather app level think checking soon set would allow component manage events fyi important interactive visualizations whose events blocked normal component aka tagname", "d": "5/2017"}, {"body": "experienced ember process update ember version future reference recommend use emberclisentry found origin error even upgrade sentry subscription due amount false alarms plus one afternoonevening", "d": "5/2017"}, {"body": "bumped issue new suggestions handle", "d": "5/2017"}, {"body": "seeing error tried workarounds proposed fixes avail", "d": "5/2017"}, {"body": "also seeing error", "d": "5/2017"}, {"body": "tried event router noticed nt work whereas works expected action route missing something", "d": "5/2017"}, {"body": "also seems event router called initial startup route whereas action", "d": "5/2017"}, {"body": "urre able resolve issues problem", "d": "5/2017"}, {"body": "edit ignore jazz badwrong information locks pointed towards much better query parameter instead dynamic immediately binds query parameter normal property shadow computed property sanitizes sets previous attempts involved binding query parameter computed property sanitized set sorry noise better solution javascript approuterjs routermap function thisroute shop approutesshopjs export default emberrouteextend queryparams selecteditemindex replace true appcontrollersshopjs import computed embermacrohelperscomputed export default embercontrollerextend cart emberserviceinject queryparams selecteditemindex selecteditemindex selecteditemindex computed selecteditemindex get index const itemslength thisget cartitemslength original problem solution lost better part yesterday issue still persists use case sanitizing query parameter use index emberarray malformed eg nan string andor bounds use default index update url reflect adjustment events response future clicks trigger explain help make case merely cosmetic issue ca nt set property update url described issue ca nt set next tick using emberrun take effect late ie invalid index would already used access array ca nt set set next tick update url property change least suspect reason nt work ca nt use computed property sanitizing setter controller ca nt bind query parameter computed property ca nt use observer normal property ca nt set property observing ca nt use observer emberrun due issue described ca nt call hook due related issues ca nt set query parameter stuff happening hook repeated query parameter changes clearly nexus pain issue issue limitation able bind query parameter computed property combine create neat frustrating little trap workaround created nested select route simply takes query parameter code dynamic segment sanitizes sets property parent controller sanitized index bounds transitions nested index route turn transitions back nested select route default index nested routes templates controllers parent route outlet exist solely handle routing issue javascript approuterjs routermap function thisroute shop function thisroute index path thisroute select path index approutesshopjs export default emberrouteextend setupcontroller controller model thissuper arguments model fetch products shop appcontrollersshopjs export default embercontrollerextend cart emberserviceinject selecteditemindex actions selectitem index return thisreplaceroute shopselect index approutesshopindexjs export default emberrouteextend beforemodel return thisreplacewith shopselect approutesshopselectjs export default emberrouteextend setupcontroller index thissuper arguments model gt", "d": "5/2017"}, {"body": "rwjblue sure fixed abort case yet seeing issue ember transition route aborted model hook url reflects state application transition aborted others still experiencing behavior", "d": "5/2017"}, {"body": "rsvp also integrates ember dev tools think acceptance tests wait rsvp promises settle basically keep using rsvp ember apps", "d": "5/2017"}, {"body": "hi getting issue specified quoteless path action helper resolve action name string perhaps meant use quoted actionname eg action save", "d": "5/2017"}, {"body": "nvntiwari like error mentioned able resolve actionname call dosearch property either return functionname string function defined corresponding context think case solve using quote dosearch nt fix create embertwiddle demonstrate issue", "d": "5/2017"}, {"body": "thanks kumkanillam working", "d": "5/2017"}, {"title": "jqueryajax cache false still messes url jquery", "body": "description jqueryajax cache false still messes url jquery fixed via please look test case jqueryajax turn url ends one ends link test case", "num": "3682", "d": "5/2017"}, {"title": "differing results height zoom set non value padding boxsizing set borderbox", "body": "description differing results height zoom set non value actually seems specific chrome padding boxsizing set borderbox results latest jquery differ returned div high padding around boxsizing borderbox zoom result latest jquery subtracted padding boxsizing borderbox zoom result padding subtracted latest jquery subtracted padding without border box zoom levels give versions padding subtracted inner outer heights also seem broken seeing heights returned element would expect result borderbox consistent zoom levels without borderbox believe different seems involve transforms however sure chrome handles zoom internally form transform may related tested far google chrome version link test case", "num": "3681", "d": "5/2017"}, {"title": "fadeout bootstrap image jquery", "body": "documentation fadeout method read fadeout method animates opacity matched elements opacity reaches display style property set none element longer affects layout page sadly bootstrap image two classes center image dblock mxauto first one makes image displayed block impossible fadeout image see link however remove dblock class everything works fine image longer centered see link way fadeout image displayed block", "num": "3679", "d": "5/2017"}, {"title": "locationhash exploit cross site script jquery version", "body": "description code exploiting locationhash jquery cross site scripting browser chrome link test case javascript jquery dom xss result alert popup shown thanks", "num": "3677", "d": "5/2017"}, {"title": "eventpagey browser dependend", "body": "description browser dependent set element browsers tested chrome firefox edge takes account nt ie would expect behavior consistent link test case open console see debug values roughly ie ps see debug output click foo", "num": "3676", "d": "5/2017"}, {"title": "guthub api working jquery", "body": "hi return list releases works fine many repos issue jquery team uses github releases something different repo thanks", "num": "3675", "d": "5/2017"}, {"title": "hello", "body": "description link test case", "num": "3674", "d": "5/2017"}, {"title": "show hide problems", "body": "show hide work much easy way div display flex call show set display block instead internally hide show might set initial computed display value reset good behaviour seams work always probably hide call dont internally variable", "num": "3672", "d": "5/2017"}, {"title": "always parameters", "body": "please mix parameters always function", "num": "3670", "d": "5/2017"}, {"title": "eventwhich may need updated soon", "body": "description according jquery docs eventwhich property normalizes eventkeycode eventcharcode according mdn deprecated feature removed web standards though browsers may still support process dropped avoid using update existing code possible aware feature may cease work time suggested replacement returns key label eg escape instead key code eg guess wo nt suitable replacement jquery sure jquery planning would nice version returns key label instead key code", "num": "3668", "d": "5/2017"}, {"title": "strange values window outer dimensions", "body": "hello noticed strange values window outer dimensions width height different vanilla javascript look codepen sample hope helps regards", "num": "3667", "d": "5/2017"}, {"title": "somebody explain detail window scrolltop issue", "body": "posted siilar q stackoverflow jquery forum nobody answered learning parallax scrolling using jquery statement somebody explain detail works dynamicaly window scroll function var wscroll scrolltop wscroll lt pcontainerheight", "num": "3665", "d": "5/2017"}, {"title": "delegated click handler called nonbutton target disabled", "body": "description nonbutton target element delegated click handler disabled handler called expected handler called element support attribute reproduced issue chrome firefox believe problematic line example link test case jquery zepto comparison", "num": "3664", "d": "5/2017"}, {"title": "script error within angular template", "body": "description import java script lib certain html view angularjs always error debug error find jquery error typeerror read property undefined whole process add", "num": "3663", "d": "5/2017"}, {"title": "typeof window undefined window", "body": "", "num": "3662", "d": "5/2017"}, {"title": "clicking element different behaviour calling elementtrigger click", "body": "description see discussion clicking element eg canvas different behaviour calling elementtrigger click example html javascript documentgetelementbyid test onclickfunction e estoppropagation documentonclick function e alert triggered click canvas nothing happens open console type get alert link test case", "num": "3660", "d": "5/2017"}, {"title": "performance issues", "body": "hi came across huge performance issue using jquery backbone function backbone calls remove view element dom nothing crazy function jquery call function seems querying child elements calling elements case call elements wanted understand jquery actually calling function removing child nodes wanted remove parent element anyone ideas would much appreciated thanks", "num": "3655", "d": "5/2017"}, {"title": "resolve asynchronous jquery deferred object", "body": "question code found testing jasmine node switch jquery jquery using deferred objects handle initialized variable call deferresolve variable ready callback executed immediately function two functions call complex logic order first execute resume pause callback seems synchronously executing callbacks deferred wait happen code jasmine test echo number execute number complex logic order executed string first delay fact calls echo get echoed end needed add test promises one breaking changes deferred object jquery bug nt execute immediately", "num": "3654", "d": "5/2017"}, {"title": "deprecate property", "body": "became useless basically since never documented remove better safe side deprecate first remove next major", "num": "3653", "d": "5/2017"}, {"title": "title edit page altshifte fails select edge", "body": "selecting edit link stock install mediawiki using title edit page altshifte works fine chrome firefox fails edge guess perhaps due within title accesskey e hand works fine raw html link looks like edit test fiddle", "num": "3652", "d": "5/2017"}, {"body": "successfully deal problem unfortunately bootstrap uses css values display style property set none instead using bootstrap class create custom class without", "d": "5/2017"}, {"body": "ca nt pass arbitrary content jquery expect safe made rules easier follow past lt potentially preceded whitespaces interpreted html content need make sure happen expect code nonmalicious hash use case", "d": "5/2017"}, {"body": "longstanding problem margins html body elements comments already offset position documentation issue cause css resets explicitly set margin padding html body would solve issue something", "d": "5/2017"}, {"body": "use margintop cms add menu top viewport pushing rest theme setting margintop respectively would cause lot issues work around issue though anyhow testing obviously bug ie since eventclienty reports expected value see", "d": "5/2017"}, {"body": "gave look code fact bug inside dataprivset elem display display set call hide set show bug example display flex javascript call divshow set node block flex call hide set internally prev value block flex call show set diplayblockprev", "d": "5/2017"}, {"body": "works please create jsfiddlenet example browser version jquery", "d": "5/2017"}, {"body": "jquery javascript library sorry work explained bug", "d": "5/2017"}, {"body": "nt support jquery amp anymore try jquery sorry work explained bug explanation clear enough always ask minimal test case since reported jquery test case going close issue still see jquery test case demonstrating problem reopen", "d": "5/2017"}, {"body": "unfortunately behavior long history changing would big breaking change right document issue note deferredalways method receives arguments used resolve reject deferred object often different reason best use actions require inspecting arguments cases use explicit done fail handlers since arguments wellknown orders", "d": "5/2017"}, {"body": "thank opening issue like avoid copying many properties unless need normalizing perf reasons see issues discussions go deprecating jquery", "d": "5/2017"}, {"body": "thanks links issue informative", "d": "5/2017"}, {"body": "per method applicable window document objects use height instead per method applicable window document objects use width instead", "d": "5/2017"}, {"body": "jquery bug tracker support forum fact one answered places excuse look help", "d": "5/2017"}, {"body": "looked year ago browsers still nt consistent propagating clicks disabled buttonslinks see ticket references reason setting property elements defined meaning elements happen pick name short meaningful custom need", "d": "5/2017"}, {"body": "set property links habit since works buttons afterwards realize nt disable click handler since property supported links certainly critical issue make habit report potential bugs open source projects use", "d": "5/2017"}, {"body": "talked many things break invalid html deemed possible solutions worth", "d": "5/2017"}, {"body": "fine thanks considering thought might well get situation documented case anyone else runs", "d": "5/2017"}, {"body": "since test case close test case include jquery latest version angular might try asking debugging help stackoverflow", "d": "5/2017"}, {"body": "inline event handlers supported", "d": "5/2017"}, {"body": "mgol behaviour exists addeventlistener", "d": "5/2017"}, {"body": "yeah even happens without jquery", "d": "5/2017"}, {"body": "dmethvin nt click canvas see issue made canvas white obvious", "d": "5/2017"}, {"body": "znewsham test case broken nt include jquery fixed amp added invocation alerts appears", "d": "5/2017"}, {"body": "mgol hate beat dead horse slightly different doesnt work addeventlistener used though work additionally", "d": "5/2017"}, {"body": "jquery nt fire event listeners attached jquery event system layer top dom events way jquery know elements dom events attached even whether event fired event known browser like vs userdefined event like list varies browser reason event like works like want cases jquery runs dom method element present discrepancies inline handlers event listeners impact jquery behavior see", "d": "5/2017"}, {"body": "dmethvin thanks info ended dealing specific situation overriding first call eventually rewrite library use jquery events natively reason make testing big rewrite easier ca nt start rewrite tests place", "d": "5/2017"}, {"body": "might guess name cleans data elements added calls jquery method including event handlers attached uses jquery data functionality internally remove large dom subtree jquery go free data may stored elements subtree call custom event teardown handlers may set element take quite bit time given random point dom tree jquery nt way know whether elements subtree contain custom event handlers data must explicitly removed know sure none descendants contain jquery data could something like avoid searching subtree data events careful though incorrect knowledge result memory leakage andor event handlers may incorrectly fire cause unpredictable behavior pictures nt indicate version jquery involved things work differently jquery require inspecting subtree extent", "d": "5/2017"}, {"body": "please read upgrade guide particular another behavior change required promisesa compliance deferred callbacks always called asynchronously previously callback added deferred already resolved rejected callback would run immediately synchronously questions please direct stack overflow find bug please create test case jsfiddle jsbin would clearly show expect get bug report pretty convoluted one read carefully see exactly mean", "d": "5/2017"}, {"body": "thanks response ask first got answer thought asking", "d": "5/2017"}, {"body": "ca nt confirm test case works chrome firefox edge amp could make sure correct andor provide info", "d": "5/2017"}, {"body": "works well microsoft edge", "d": "5/2017"}, {"body": "noticed beta tester reported problems edge confirmed end pages login required able edit running edge latest via browserstack worked around switching accesskey selector", "d": "5/2017"}, {"body": "since reproducible test case going close find something consistently breaks stable edge version please post amp reopne", "d": "5/2017"}, {"body": "seems like issue might fixable separate selector issue hope fix selector issue abandoning", "d": "5/2017"}, {"body": "hope fix selector issue abandoning getelementsbytagname try approach would mind providing perf tests", "d": "5/2017"}, {"body": "markelog pr accepted", "d": "5/2017"}, {"body": "works great thanks", "d": "5/2017"}, {"body": "problem like", "d": "5/2017"}, {"body": "version nonminified jquery", "d": "5/2017"}, {"body": "hi timmywil already assigned someone want take", "d": "5/2017"}, {"body": "hi timmywil want take", "d": "5/2017"}, {"body": "tldr nt load jquery defer struggled hours bug ended yes removing defer solves", "d": "5/2017"}, {"body": "gkatsanos yes believe current state things", "d": "5/2017"}, {"body": "modules roadmap related issue", "d": "5/2017"}, {"body": "jquery jquerymobile give apreventdefault function works jquery", "d": "5/2017"}, {"body": "mgol talking switching modules future nt future already came", "d": "5/2017"}, {"body": "shrpne always pull requests welcome", "d": "5/2017"}, {"body": "shrpne sort primary place jquery used browser transpilers seen widespread usage es modules defined spec still supported natively stable browser except safari surprisingly said getting understand argument made jquery get ahead browsers still wonder much actually gain jquery users use compiled version jquery seems like nt made slim build available saw notable amount jquery users including custom build code rewriting modules build system use es modules require lot effort predict users actually take advantage final issue time require lot effort volunteers anyone wants take time would welcome pr", "d": "5/2017"}, {"body": "timmywil open issue better sum everything modules new issue issues modules closed looks like unwanted feature glad see milestone badge least future always eyes may somebody would like carry", "d": "5/2017"}, {"body": "roadmap issue", "d": "5/2017"}]