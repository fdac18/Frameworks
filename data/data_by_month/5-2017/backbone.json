[{"title": "update version npm", "body": "npm old version backbone would cool update", "num": "4138", "d": "5/2017"}, {"body": "familiar canvas creating native html element existing canvas element javascript var canvasview backboneviewextend tagname canvas render function modify canvas element element already exists page javascript var canvasview backboneviewextend el mycanvas selector render function modify canvas element", "d": "5/2017"}, {"body": "npm latest release master yet released", "d": "5/2017"}, {"body": "instead vue uses fork snabbdom virtual dom library think safer use virtual dom library looking forward modularized backbone support virtual dom view layer", "d": "5/2017"}, {"body": "maybe backbonejs official view plugins one virtual dom one incremental dom one good ole fashioned underscore templates", "d": "5/2017"}, {"body": "year later thank goodness nt get shoved glad someone keeping cool head humble opinion nothing respect dissenting opinions personally would nt rush improve everyone hammer hotgluing stapleremover every one backbone underscore rare examples programming world equivalent elegant proofs modularize backbone alternate virtual doms comes preinitialize prepreinitialize preonpreinit existing plugins extensions give modest idea community patched thus actually consistently needed many people issues basic getters inside view functions compared want support classes yet library remained lean useful extensible quick example flufflobbying one two usecases given preinitialize merge actually closed jashkenas commenting one line call setelement initialize closing ticket hardly usecase let sure celebrate ability fork extend almost none us opportunity contribute web order backbone underscore easy pollute ecosystem reactive instead corrective functional certainly rushing jam personal backbone extensions see rare quality opensource repo easy extend almost anyone appreciate lack jumping things around hope lack continues made another noisy year without hotglue spinners favorite hammer thrilled mobs yet picked backbone carried oh look still use next projects best everyone", "d": "5/2017"}, {"body": "valleyspirit nt know understand saying underscorejs less deprecated supports useful features natively think important upgrade framework backbone take advantage new features language implemented maybe work pull request", "d": "5/2017"}, {"body": "think important upgrade framework backbone take advantage new features language implemented whole heatedly agree instead chasing shiny things frameworks chasing would like see backbone stay stable also evolve language get outdated", "d": "5/2017"}, {"body": "kind see directions discussed continuing make bb lean mean better suited deploy web nonweb apps bent towards modern package managers nt expect mainline bb release change much larger surrounding ecosystem grow much point things currently stand good bad fork realizing ideas worth pursuing nonetheless even better way provide continuity new ideas flourish one questioning impact bb underscore future assume discussing things bb ideas behind still form preferred framework choice", "d": "5/2017"}, {"body": "always exoskeleton disclaimer one contributors want go full route couple good ideas imo often better stick mainline bb something would like see improved currently", "d": "5/2017"}, {"body": "something would like see improved currently hard say part culture thing suppose opinions differ newcomer side around things go tech angle instance bit bearish speak regard adding mixin collection amp model assumes moving forward bullish bb version one thing big boon modification done thus far would events update backboneesnextevents adding async sync trigger amp return results consider low hanging fruit merging back mainline bb however async kind assumes otherwise separate promise module would necessary undesirable modification opens tons modularization possibilities use events inprocess messaging corner stone future efforts really improvement like going venture bb reorganization modularization nice keep open line communication going mainline bb maintainers tech angle would nice regard figuring tests shared efforts something look point possible slight modifications necessary nice work mainline bb maintainers regard", "d": "5/2017"}, {"body": "changelog added", "d": "5/2017"}, {"body": "ping jashkenas jridgewell braddunbar", "d": "5/2017"}, {"body": "nt already possible models cloned model original model", "d": "5/2017"}, {"body": "used backbone upgrade broke scenarios id property exists model collection uncommon scenario imagine adding models temporary collection without need polymorfismus example javascript version backbonemodelextend idattribute versionnumber new version versionnumber id name first version new version versionnumber id name second version versions new backbonecollection first version set collection versionsreset referenced pr fixes problem always prefers model collection one set id default collection never used broke behaviour backbone breaks backbone caseywebdev chance support scenarios preferably without changing code base could think changing pr prefer collection model means creating collections know models added without default model javascript temporarycollection backbonecollectionextend model backbonemodelextend idattribute null versions new temporarycollection collection idattribute null fallback model one lets models set versionsreset better possibility scenario", "d": "5/2017"}]