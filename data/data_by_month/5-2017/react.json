[{"title": "children foreach filters functions", "body": "react unexpected behaviour silently filters functions current behavior expected behavior childrenforeach throw invariant error function type child met childrenforeach nt filter function type children", "num": "9821", "d": "5/2017"}, {"title": "componentdidmount triggered initial render", "body": "code facing issue life cycle method using electrode js framework make render server side facing random behaviour life cycle methods time triggered time class bannerslist extends reactcomponent constructor props super props thiscreatetable thiscreatetablebind thisonchangepage thisonchangepagebind thisstate skip limit componentdidmount thisonchangepage onchangepage page let skip page thisstatelimit thispropssetbanner endpointsadminbanner skip thisstatelimit thissetstate currentpage page skip skip createtable row index return rowtitle rowtitle na rowdisplaysection rowdisplaysection na moment rowcreatedat x format ddmmyyyy render let data thispropsgetbanners amp amp thispropsgetbannersdata amp amp thispropsgetbannersdataitems amp amp thispropsgetbannersdataitemslength gt amp amp thispropsgetbannersdataitemsmap thiscreatetable", "num": "9820", "d": "5/2017"}, {"title": "optimize defaultprops proptypes", "body": "want request feature report bug feature proptypesstring default string current behavior two statics representing thing kind trivial sometimes people write useless code design ca nt tell author wanted expected behavior make defaultprops work proptypes one static two statics much easier hoc developers customize modify remove", "num": "9818", "d": "5/2017"}, {"title": "fix function arity issues", "body": "flow supports verifying number arguments passed function enabling feature updating flow master results arity errors x pr reduces errors fix remaining errors", "num": "9817", "d": "5/2017"}, {"title": "returns undefined question thispropsformgetfieldsvalue", "body": "antd chrome window use thispropsformgetfieldsvalue take value form code follows result expect use thispropsformgetfieldsvalue take value form actual result versions react browser os affected issue work previous versions react", "num": "9810", "d": "5/2017"}, {"title": "touchstart preventdefault prevent click event", "body": "want request feature report bug bug current behavior calling synthetic event fails prevent click event also tried nt make difference current behavior bug please provide steps reproduce possible minimal demo problem via similar template div supposed handle hover case process click first time tapped via touch click desktop fine however tapping touch mobile device using dev tools touch emulation trigger immediately jsfiddle touchstartpreventdefault allowed mobile touchaction none class somebutton extends reactcomponent constructor props super props render return however move listener use normal dom api everything works jsfiddle javascript class somebutton extends reactcomponent constructor props componentdidmount thiselemaddeventlistener touchstart e gt thisstatehover epreventdefault works thissetstate hover true render return gt expected behavior first time processed treat hover wait process event next pointer mouse events processed versions react browser os affected issue work previous versions react react sure previous react versions chrome android chrome mac emulating touch firefox mac emulating touch", "num": "9809", "d": "5/2017"}, {"title": "problem unstablerendersubtreeintocontainer refs", "body": "want request feature report bug report bug current behavior use usual technique portals unstablerendersubtreeintocontainer also need control portal children using legacy syntax know problem async called refs used undefined due async nature current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open browser console press add button got error causes according logs called callback expected behavior needed defined general case completely completed render know pattern using callback preferred solution quite complex combination two libraries nt access callback someone interested libs reactautocomplete reacttether may way avoiding rerender saving refs first render versions react browser os affected issue work previous versions react using", "num": "9808", "d": "5/2017"}, {"title": "fiber ref instance cause error", "body": "want request feature report bug sure maybe bug current behavior debugger find versions react browser os affected issue work previous versions react use", "num": "9807", "d": "5/2017"}, {"title": "react ignores css grid properties style attribute", "body": "want request feature report bug bug current behavior using css grid properties element style attribute work react ignores current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react include css grid properties css properties rendered dom react intends support subset css made clear documentation supported properties enumerated nothing suggest certain properties work others wo nt without error message warning indicating ignored versions react browser os affected issue work previous versions react react", "num": "9805", "d": "5/2017"}, {"title": "react wo nt work behind proxy basic authentication", "body": "hello react application running local intranet apps run behind web proxy basic authentication userpassword checked ad server accessing react app directly via unauthenticated proxy everything works fine access app proxy authentication enabled manage fetch first page every request performed using fetch fails unauthorized basically authorization header hashed credentials passed fetch request works seamlessly", "num": "9804", "d": "5/2017"}, {"title": "reactchildrenmap children child index gt got childtypename undefined ie browser", "body": "title want get child element tag name success chrome browser failed ie browser", "num": "9803", "d": "5/2017"}, {"title": "arraymap render", "body": "code screen console show problem please thanks", "num": "9802", "d": "5/2017"}, {"title": "nonsensical code official react blog post submit pr official react blog", "body": "hey guys back came across post official react blog contained code example made sense implement intent expressed blog post cancel promise componentwillmount setstate invoked component mounted ignored back remembered saw tweet today topic gaearon blog post question nonsensicalnonworking code js use promises may need wrap promise order make cancelable const cancelablepromise makecancelable new promise r gt componentsetstate cancelablepromise promise gt consolelog resolved catch reason gt consolelog iscanceled reasoniscanceled cancelablepromisecancel cancel promise makecancelable defined istarkov const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val promisecatch error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true try blog post even referenced stackoverflow answer given points pretty ridiculous nonworking nonsensical example code afaik using schemes rely promiserace limitationsissues see way cancel promises afaik cancellable promise es proposal withdrawn right way promise cancellation userland promise implementations recommend bluebird promise library details see", "num": "9801", "d": "5/2017"}, {"title": "componentwillreceiveprops bug", "body": "subj jsbin example jsx class child extends component componentwillreceiveprops props consolelog thispropsdatalength consolelog propsdatalength render return null class parent extends component constructor props super props thisspeed componentdidmount render return", "num": "9800", "d": "5/2017"}, {"title": "different behaviour different devices", "body": "first react app must admit however app works perfectly fine chrome access safari safari mobile bit lazy function link returns array content rendered component based props father state get called every time user changes filters yet safari rendering happens less regularly function returns right object safari render method lazy safari check adding removing coding filter produce changes safari code repo", "num": "9799", "d": "5/2017"}, {"title": "conditional rendering working react native", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9794", "d": "5/2017"}, {"title": "reactchildrenisvalidchildren similar reactisvalidelement", "body": "want request feature report bug feature current behavior method available expected behavior returns true passed opaque children object", "num": "9791", "d": "5/2017"}, {"title": "chrome scroll position preserved", "body": "want request feature report bug bug possibly react google chrome current behavior scroll position preserved children element list change order bug seems apply react keys child elements unchanged current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo available broken case resize demo window scrollable already scroll bottom window click refresh button left window scroll automatically expected behavior window keep scroll position working case resize demo window scrollable already scroll bottom window click refresh button right window scroll expected behavior versions react browser os affected issue work previous versions react tested react version older versions tested affected browsers osx google chrome official build osx beta google chrome official build beta affected osx beta firefox osx beta safari version", "num": "9789", "d": "5/2017"}, {"title": "two things nt like react", "body": "want request feature report bug feature css love react ca nt help notice vue components one thing better writing css way css looks syntax importantly access css properties looks elegant simple create module css ca nt react feature every solution knows invented syntax walkaround recently learned nt obvious bind event handler argument performant time seems natural way pass arguments event handler way create new function every time component renders possibly damage performance alternative know seems less apparent supposed bind way try pass arguments ways good way solve", "num": "9787", "d": "5/2017"}, {"title": "synthetic eventphase nt reflect synthetic phase", "body": "want request feature report bug bug current behavior called bubbling phase current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo shows event phase react incorrect bubbling must capturing moreover also shows bubbling phase probably reason syntethic event expected behavior calls capturing phase calls bubbling phase versions react browser os affected issue work previous versions react react version os work", "num": "9783", "d": "5/2017"}, {"title": "orphaned doc page", "body": "found page linked anywhere else online docs far tell old page needs removed new page somehow nt added properly", "num": "9782", "d": "5/2017"}, {"title": "question make table date scheduler previous next button react", "body": "", "num": "9774", "d": "5/2017"}, {"title": "make date scheduler week previous next button html table", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9773", "d": "5/2017"}, {"title": "paste event handler invoked focus applied element programmatically", "body": "want request feature report bug bug current behavior clicking element set focus allows onpaste handler invoked expected apply focus element using htmlelementfocus method onpaste handler invoked current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle open console jsfiddle click yellow div focus use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console expected click input element focus press arrow key set focus yellow div programmatically use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console double check paste event firing using dev tools expected behavior expect event handler invoked regardless focus applied element versions react browser os affected issue work previous versions react react react tested macos w chrome v", "num": "9769", "d": "5/2017"}, {"title": "example documentation working", "body": "want request feature report bug bug current behavior example documentation working macos chrome current behavior bug please provide steps reproduce possible minimal demo problem go try filter things entering data input textbox expected behavior filter content versions react browser os affected issue work previous versions react nt know", "num": "9767", "d": "5/2017"}, {"title": "set react dependency amd builds addons", "body": "right react undefined addons may depend createclass documented createfragment reactlinkedinput problem running amd environment without react defined globally lead dependency found probably solved follows manually edit unminified version making work like test modify requirejs systemjs fixtures oneoffs test specifically nt need committed submit pr react core maintainer rebuild minified version process intended repeat automated easy way reproduce tag flarnie andor gaearon ideally making changes code worth someone wants work happy review prs otherwise pick next couple days", "num": "9765", "d": "5/2017"}, {"title": "improve react reactnative sync scripts", "body": "followup work pr sync react www changes current process syncing react facebook www involves running script within www repo would nice relocate script react repo since coupled react build process shims anyway point could better share code eg autogenerated change log react native sync script react sync script updateadd documentation new sync process sync reactnative fbsource changes possible sync react reactnative simultaneously update reactnative sync script autogenerate change log based commits master since last sync something react sync script currently script moved react github share code remove script fbsource react reactnative synced fbsource way react synced www using new central sync scripts updateadd documentation new sync process secondary goals syncing www fbsource similar possible avoid confusion would nice easy noncoreteam members run sync scripts also", "num": "9763", "d": "5/2017"}, {"title": "facing issue load local images react js", "body": "posted issue please check", "num": "9762", "d": "5/2017"}, {"title": "seems legal stuff making things difficult", "body": "hi please make legal language easier understand user friendly anyone use without worry", "num": "9760", "d": "5/2017"}, {"title": "reactlink still using reactproptypes", "body": "want request feature report bug bug current behavior react using reactproptypes even though states going deprecated current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior use proptypes package versions react browser os affected issue work previous versions react", "num": "9755", "d": "5/2017"}, {"title": "createreactclass compiled latest google closure compiler", "body": "trying compile createreactclass latest closure compiler compiler complains related createreactclass npm package needs republished react code ticket spun", "num": "9750", "d": "5/2017"}, {"title": "bug createreactclass work amd environment", "body": "want request feature report bug report bug current behavior unable require module bug seems similar uses without proper calls javascript copied var factory require factory hack grab noopupdatequeue isomorphic react var reactnoopupdatequeue new reactcomponent updater current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle errors jsfiddle expected behavior able load createreactclass without problem versions react browser os affected issue work previous versions react react createreactclass", "num": "9749", "d": "5/2017"}, {"title": "convert elements test objects tomatchobject jest", "body": "want request feature report bug request guidance add feature testing especially jest enzyme current behavior get benefit descriptive jsx must pay cost irrelevant details snapshot tests cause unnecessary updates risk incorrect decisions proposed behavior goal balance effort write tests initially update tests correctly components change replace elements relevant subset props therefore issue convert expected react elements directly test objects especially shallow rendering new deepeventshallowtest pattern see tablec example information see overview status proposed able import string sentinel value ignore children absence children received object given react element return unrendered element test object enumerable see omitted properties including omitted think clearer names willing contribute guidance draft code expects object expect array elements components render react think test cases examples tests enzyme although pending via reacttestrenderer reacttestrenderershallow", "num": "9747", "d": "5/2017"}, {"title": "question listen user events syntheticevents", "body": "hello smile question react synthetic events listen events parent component want track user activity want handle mouse events wheel events etc possible listen event yes yes listen window document events ca nt localize component make event maybe possible localize component using eventtarget thanks", "num": "9746", "d": "5/2017"}, {"title": "reactdomserverrendertostaticmarkup trigger componentwillmount serverside bug avoid", "body": "react reactdom reactrouter calling reactdomserverrendertostaticmarkup serverside trigger componentwillmount one component strange behavior happen components server rendering using recommended way reactrouter routes defining fetchdata attribute call static function component component define static function use react life cycle hooks render client reproduce behavior clone repo visit see server side rendering logs see reducer run means ssr job initialstate build everything fine visit see fetcharticlesrequest fetcharticlerequest note plural see blogarticle component retrigger second time meaning global state affected see object article loading true state initialstate time client receive get error client behavious quite strange componentwillmount call nested route blogarticle blog wondering bug react", "num": "9745", "d": "5/2017"}, {"title": "reactproxy served restrictive csp policy server without throwing error firefox", "body": "want request feature report bug feature current behavior firefox throws error running react application using csp header scriptsrc set self case error looks like content security policy page settings blocked loading resource self scriptsrc set self keyword scriptsrc error message translated error message ff links following row react bundle file reactproxymodulescreateclassproxyjs get rid error ff allowing unsafeeval csp policy dont want current behavior bug please provide steps reproduce possible minimal demo problem via similar template run react application ff browser csp policy scriptsrc set self check console errors expected behavior error handling source code event execution environment allow dynamic evaluation still shows error ff versions react browser os affected issue work previous versions react name reactproxy version firefox version ubuntu", "num": "9744", "d": "5/2017"}, {"title": "android app hangs production mode", "body": "hi currently android app production hangs specific screen touch button even hardware back button works correctly debug mode anyone spot possible problems source quite large nt post code tried show alert hangs enter error screen hangs timeout show alert still able press alert close button alert close app still hangs react version react reactnative", "num": "9743", "d": "5/2017"}, {"title": "question question regarding best practice", "body": "apologies nonestandard git issue nt quite sure else ask working another developer react project using wondering anything wrong bad practice using fat arrow functions hoisted parameters hoisted component class nt set within constructor example class mycomponent extends reactcomponent constructor props super props state name setname e gt thissetstate name etargetvalue colleagues approach class mycomponent extends reactcomponent constructor props super props thisstate name setname e thissetstate name etargetvalue reason use approach automatically scopes within function nt need write additional line bind method within constructor figured ultimately preference worth identically told way first example bad practice thanks advance", "num": "9739", "d": "5/2017"}, {"title": "docs visual realign", "body": "hi folks shot visual realign react docs goals create conservative realign nt controversial still opens opportunity future expansion features heading towards design system avoid major architectural changes best handled separate pr future inspiration graphqlorg gridded sites process mockups minute receive go ahead would work rest elements amp viewport sizes write css scratch thoughts notes moved sidebar right hand side improve readability collapsed noncurrent docs nav categories add intro paragraph first para docs page baseline grid column grid proxima nova current site footer layout would tightened screenshot current one atm fire away comments cc gaearon", "num": "9728", "d": "5/2017"}, {"title": "warning missing key prop array arrays", "body": "believe following bug array div elements without key props correctly result warning array length arrays containing div elements result warning example believe correct behavior array arrays div elements also result warning react firefox", "num": "9727", "d": "5/2017"}, {"title": "react without virtually impossible", "body": "thing like react still use micro apps small portions website need user interaction declarative uis still simplify development lot without setup whole build environment use cases looks definitely overkill know may sound like grumpy grandpa worried true anymore react deprecation need external modules sure need bundle modules browser expose globals ca nt load react cdn write code anymore also using warnings still issued like getdefaultprops used classic reactcreateclass definitions use static property named instead maybe fact bug possibly issues wrong stick react maybe start making react builds specifically environments bundling needed external modules etc", "num": "9721", "d": "5/2017"}, {"title": "passing children propschildren works documented", "body": "either raw react jsx seems children passed property props object instead documented methods separate parameter reactcreateelement enclosed component tags jsx encountered syntax book rather confused book provided explanation syntax find mentioned anywhere react documentation intuitively expected work documented children available propery props object documented reverse possible well passing children propschildren actually supported perhaps explicitly mentioned docs deprecated feature something also asked stack overflow", "num": "9718", "d": "5/2017"}, {"title": "licensing faq suggestion adding links remove ambigity", "body": "referring specifically termination additional patent grant facebook bsdpatents license cause copyright license also terminate unclear copyright license referred quote would directly linking words additional patent grant words copyright license appropriate document possiblepermissible facebook legal team editing note link would facebook oss wide versions react specific licenses", "num": "9716", "d": "5/2017"}, {"title": "add license faq handling patent grant redistribution", "body": "could please add clarification license faq describes rights obligations concerning patent grant redistributing reactjs eg something like redistribute reactjs third party form eg fork modify incorporate product allowed choose bsd license license drop additional patent grant guess yes redistribute reactjs third party form eg fork modify incorporate product possible also transfer additional patent grant receivers derived work guess patent grant license facebook direct receivers formally delete patent grant third party receive license react upstream project facebook license compatible guess yes since patents grant addition", "num": "9715", "d": "5/2017"}, {"title": "bug input type number", "body": "example original value need format take javascript class test extends reactcomponent state value changevalue gt alert thissetstate value render return reactdomrender mountnode", "num": "9712", "d": "5/2017"}, {"title": "rendertostring different result normal render", "body": "used react render entire page server side got errors like one trying render component document using server rendering checksum invalid usually means rendered different component type props client one server render methods impure react handle case due crossbrowser quirks rendering document root look environment dependent code components ensure props client server side client datareactid server datareactid problem ending tags elements rendered using react server rendertostring client render using app component server client", "num": "9708", "d": "5/2017"}, {"title": "object shorthand props", "body": "hi find wanting feature lot name const find pass like would love able use shorthand notation object creation assumes passed component would work like anyone else find worthwhile change", "num": "9707", "d": "5/2017"}, {"title": "bug reactdom still contains reference reactproptypes", "body": "react sends deprecation warning using reactproptypes stack trace points reactdom webpack config im sure surrounding lines code see onchange key", "num": "9704", "d": "5/2017"}, {"title": "functional setstate default docs tutorials first steps guides", "body": "", "num": "9703", "d": "5/2017"}, {"title": "debugid may empty", "body": "want request feature report bug bug current behavior tests sporadically logging warning fail tests log warnings causing flakiness current behavior bug please provide steps reproduce unable consistently reproduce seeing roughly failure rate test suite nt seem patterns around tests fail error expected behavior expect tests either log warning consistently something wrong log warning versions react browser os affected issue work previous versions react appearance warning correlates pretty closely migration node node", "num": "9698", "d": "5/2017"}, {"title": "foo foo shorthand jsx", "body": "want request feature report bug want request feature current behavior currently shorthand jsx props boolean default attributes spread however writing jsx many cases could better shorthand syntax example", "num": "9696", "d": "5/2017"}, {"title": "warn dispatching redux actions componentwillupdate runtime docs", "body": "want request feature report bug feature current behavior component dispatching redux action causing things blow confusing ways instance causing different component get called second time got called led various npes reconciliation process expected behavior would nice anything would trigger update call component would immediately error dev mode even causing different component update case triggering ancestor container update would possible versions react browser os affected issue work previous versions react seeing react chrome macos ca nt say sure code caused bugs previous versions react blame rests code anyway", "num": "9693", "d": "5/2017"}, {"title": "needed simplified chinese documentation", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9692", "d": "5/2017"}, {"title": "better approach", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9690", "d": "5/2017"}, {"title": "createreactclass umd module work amd environment", "body": "undefined", "num": "9689", "d": "5/2017"}, {"title": "postpatch", "body": "basic post changed patch test", "num": "9688", "d": "5/2017"}, {"title": "new test post", "body": "basic post test post", "num": "9687", "d": "5/2017"}, {"title": "new test post", "body": "basic post test going fail", "num": "9686", "d": "5/2017"}, {"title": "document pass args event handlers", "body": "inside loop common want pass param event handler would good thing add doc page also pass args without triggering rerender child component ie creating new function every time", "num": "9685", "d": "5/2017"}, {"title": "reactcomponent undocumented templated class", "body": "see used three template parameters documented nowhere simply could nt find docs able deduce second third types respectively however coud nt figure first template parameter documented anywhere please", "num": "9684", "d": "5/2017"}, {"title": "error document optimizing performance", "body": "reconciliation algorithm react uses diff one tree another determine parts need changed found define reconciliationin opinion reconciliation contains two part diff element tree update actual dom node think picture need reconciliation color red", "num": "9682", "d": "5/2017"}, {"title": "difference clientserver side react rendering latter even", "body": "good day honest fellows fairly new react single page apps really ca nt wrap head around something server routing section stated send indexhtml despite accessing different routes guess ok send file since almost empty usually div tag os something way react injecting html sent server already client side right building different html file sorts clientside routing handled caveats either questions sorry lot difference clientserver side react rendering server side react rendering even would one want clientside routing major one client accesses data via api different route instance redux reducers would kind work right help understand please", "num": "9681", "d": "5/2017"}, {"title": "scrolling gets jammed specific condittions", "body": "see fiddle using chrome bug small problem occurs specific conditions fiddle shows scrollable box halfway color box changed solid color semitransparent color scrolling see seems get little stuck way becomes much apparent using page key scroll colorchange point even repeated pushes page page going semitransparent color solid color works fine expected behavior scrolling nt hitch colorchanging point pushing page supposed scroll box way recreating bug container must positioned absolute relative must zindex set problem occurs going solid color rgba color alpha nt enviorment tested fedoralinux windows behavior seems occur chrome firefox works fine react version", "num": "9680", "d": "5/2017"}, {"title": "onclick unexpected behaviour text selections", "body": "bug current behavior text selection component handler react fires onclick steps reproduce expected behavior onclick fires text selection double click events versions react browser os react latest os macos latest browser chrome latest", "num": "9678", "d": "5/2017"}, {"title": "tutorial", "body": "hi couple questionsrequests regarding tutorial board render function snippets question show later removed winner status make use thisstate value instead thisprop value understand removed later trying follow along understand code seemed inconsistent jumpto function game class discussion reads set xisnext true index move number even number code given reads line read set xisnext true index move number odd number thank", "num": "9677", "d": "5/2017"}, {"title": "error boundaries rendertostring typeerror read property listeners null rendertostring", "body": "want request feature report bug report bug current behavior seeing errors kibana across userbase rendering nodejs current behavior bug please provide steps reproduce possible minimal demo problem via similar template happens react internals nt able reproduce issue struggling create minimal repro searched issue able find gaearonreacthotloader nt exactly helpful nt use react hot loader someone maybe explain type behavior would cause based dig bit expected behavior error versions react browser os affected issue work previous versions react packages react reactdom update could coincided upgrade server node", "num": "9674", "d": "5/2017"}, {"title": "cantt mount text node components", "body": "cantt mount text node components child window edge jsx const somecomponent gt displayed displayed text node break mounting displayed mounting stopped class popoutwindow extends reactcomponent constructor props super props thisstate openedwindow null componentdidmount var win container openedwindow componentdidupdate thisstateopenedwindowupdate thispropschildren render return reactdomrender container throws following error debugging stack trace noticed fragment creation line resulting malformed fragment later trying append malformed fragment dom line fails throws error tried replace fragment span element specific case child window worked could solution", "num": "9667", "d": "5/2017"}, {"title": "react github wiki security issue", "body": "browsing react github wiki noticed following get anyone edit wiki without reviewed edit linked main wiki page", "num": "9666", "d": "5/2017"}, {"title": "dynamically loading scripts components", "body": "access object dynamically loading scripts components class appcomponent extends reactcomponent componentwillmount newprops consolelog new script loadscript consolelog windowgoogle render export default appcomponent dynamic loading google maps script export default class loadscript constructor loadscript gt", "num": "9664", "d": "5/2017"}, {"title": "concern rendering nested array", "body": "find warning given render array nested another case debugging react find used validate children keys function used check child node checked checking nesting array eg objects property named function never called warning message never thrown bug react acquiesce case giving warning message better maybe", "num": "9662", "d": "5/2017"}, {"title": "libjscso segment error android application running low probability", "body": "idebug idebug idebug sl fp idebug ip sp lr pc fffffffe cpsr idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug scr idebug pc fffffffe idebug pc idebug pc idebug idebug fffffffb idebug idebug fffffffb idebug fffffffc idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug idebug fffffffb idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug fffffffa idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug fffffffb idebug fffffffb idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug idebug ffffffff idebug idebug idebug fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffdc ffffffff ffffffff ffffffff ffffffff idebug ffffffec ffffffff ffffffff ffffffff ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug rx vectors idebug map address idebug map", "num": "9660", "d": "5/2017"}, {"title": "rfc onchange oninput nt polyfill oninput uncontrolled components", "body": "nicer name fact propagated highlevel components default name much nicer high level event name generally helpful many newcomers react nt know dom well lot inverse however nt change fact confusing people familiar unfortunately changing would cause confusion everyone already knows react reason like change like get away polyfilling uncontrolled components use case filled kinds imperative code leads edge cases eg readingsetting readingsetting use controlled components nt need touch imperatively therefore wo nt hit edge cases ideally get away reading instead pass directly event handler proposal controlled components polyfilled works like today allowed overfire many events even nothing changed may special fiber rules regarding synchronous flushing optional pass second arg works like one version warns deprecated suggests switching next version works like browser still warns tells use forever optional add gettersetter dom development mode warn used directly uncontrolled components polyfilled works however browser works warns browser differences nt also specify andor warnings suggests implementing listeners cover edge cases switch controlled component polyfilled works however browser works", "num": "9657", "d": "5/2017"}, {"title": "onresize event missing", "body": "get unknown prop warning warning unknown prop tag best tell actually something expected work since browsers support also found post someone discussing behavior looked spec cursory glance apparently tells might actually supported many elements also tells event bit complicated work work looking workaround indeed bug expect would rather fix work around", "num": "9655", "d": "5/2017"}, {"title": "typeerror read property updater undefined", "body": "want request feature report bug bug report current behavior typeerror read property updater undefined reproduce js import react component react import logo logosvg import appcss import axios axios class app extends component constructor super thisstate colors thisonfilechange thisonfilechangebind onfilechange e const setstate render return welcome react thisstatecolorsmap function c const styles height width backgroundcolor chex return export default app cant provide url post guess doesnt matter versions react browser os affected issue work previous versions react chrome version react reactdom", "num": "9654", "d": "5/2017"}, {"title": "reactnative snapshot tests failing locally master branch", "body": "want request feature report bug probably kind bug tests current behavior run two failing snapshot tests failures escape characters seem missing generated snapshot see screenshot current behavior bug please provide steps reproduce possible minimal demo problem via similar template machine latest master branch expected behavior snapshot tests pass passing circleci", "num": "9653", "d": "5/2017"}, {"title": "class comparison works nodeenv production", "body": "would like report bug react typeclass comparison seems work nodeenv set production created repo illustrate bug expect typeclass comparison work regardless nodeenv set", "num": "9652", "d": "5/2017"}, {"title": "testutils documentation missing", "body": "hey ca nt find link testutils documentation anywhere react website going updates omer", "num": "9651", "d": "5/2017"}, {"title": "fiber custom reactfiberreconciler renderer receives old props commitupdate setstate parent component", "body": "hi sure bug probably something wrong want make sure trying create paperjs bridge react based reactartfiber running ubuntu chrome version using hacked version react export know import mean time anyway code app app component method triggers rerender function receives old value btw questions would best place ask learn fiber apart source code import react component react import proptypes proptypes import invariant fbjslibinvariant import emptyobject fbjslibemptyobject import reactfiberreconciler reactdom import paper paper const colors red black green orange brown violet const types layer layer path path circle circle group group tool tool const segments const const layer typeslayer const path typespath const circle typescircle const group typesgroup const tool typestool function getrandomint min max return mathfloor mathrandom max min min class app extends component constructor props super props thisstate strokecolor colors activetool move width height zoom circles id center radius strokecolor black strokescaling false id center radius strokecolor red strokescaling false id center radius strokecolor green strokescaling false addcircle gt const circles height width thisstate const newcircles circles id circleslength center getrandomint width getrandomint height radius getrandomint strokecolor colors getrandomint strokescaling false thissetstate circles newcircles changepathcolor gt const strokecolor thisstate const index colorsindexof strokecolor const nextcolor colors colors thissetstate strokecolor nextcolor gt lt lt lt lt lt lt lt lt lt change strokecolor consolelog strokecolor nextcolor onwheel e gt const activetool zoom thisstate activetool move const delta ewheeldelta edeltay const newzoom delta gt zoom zoom thissetstate zoom newzoom onmovemousedown e scope gt thispoint epoint onmovemousedrag e gt todo thissetstate center etoolviewscrollby thispointsubtract epoint onmovemouseup e gt thispoint null onpenmousedown e gt thispath thispathselected false thispath new paperpath segments epoint strokecolor black fullyselected true onpenmousedrag e gt thispathadd epoint onpenmouseup e gt thispathsimplify thispathfullyselected true render const activetool circles strokecolor height width zoom thisstate const paperprops activetool strokecolor height width zoom onwheel thisonwheel return app tools active tool activetool color circlesmap circle gt class paper extends component componentdidmount const activetool children height width zoom thisprops componentdidupdate prevprops prevstate const activetool children height width zoom thisprops componentwillunmount paperrendererupdatecontainer null thismountnode render consolelog thispropsstrokecolor const height onwheel width thisprops const canvasprops ref ref gt thiscanvas ref height onwheel width return function applylayerprops instance props prevprops todo function applytoolprops tool props prevprops todo function applygroupprops tool props prevprops todo function applycircleprops instance props prevprops propscenter prevpropscenter instancecenter new paperpoint propscenter propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth propsfillcolor prevpropsfillcolor instancefillcolor propsfillcolor function applypathprops instance props prevprops consolelog applypathprops propsstrokecolor lt lt lt lt lt lt lt lt strokecolor change propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth const paperrenderer reactfiberreconciler appendchild parentinstance child childparentnode parentinstance childremove appendinitialchild parentinstance child typeof child string noop string children text eg foo bar invariant false text children already flattened return committextupdate textinstance oldtext newtext noop commitmount instance type newprops noop commitupdate instance type oldprops newprops consolelog commitupdate instance type newprops instanceapplyprops instance newprops oldprops createinstance type props internalinstancehandle consolelog createinstance type props const children paperprops props let instance createtextinstance text rootcontainerinstance internalinstancehandle return text finalizeinitialchildren domelement type props return false insertbefore parentinstance child beforechild invariant child beforechild paperreact insert node prepareforcommit noop prepareupdate domelement type oldprops newprops return true removechild parentinstance child destroyeventlisteners child resetaftercommit noop resettextcontent domelement noop getroothostcontext return emptyobject getchildhostcontext return emptyobject scheduleanimationcallback windowrequestanimationframe scheduledeferredcallback windowrequestidlecallback shouldsettextcontent props return typeof propschildren string typeof propschildren number usesyncscheduling true export default app", "num": "9648", "d": "5/2017"}, {"title": "use localstorage componentwillmount", "body": "learning react js want check authentication token set localstorage component renders currently trying inside componentwillmount method gives warning localstorage defined access localstorage", "num": "9647", "d": "5/2017"}, {"title": "page state changed case nt use setstate", "body": "create class message messagejsx file component testinput behind export default class message extends reactcomponent constructor props super props thisstate text thisshowtext thisshowtextbind showtext consolelog thisstatetext render return class testinput extends reactcomponent constructor props super props thisstate text componentwillmount thissetstate text thispropstext componentwillreceiveprops nextprops thissetstate text nextpropstext testinputproptypes text proptypesarray click click button testinput component push click string state click show click result button message page console state click use setstate method message use react version ps maybe issue like could someone close mine", "num": "9646", "d": "5/2017"}, {"title": "need know react get released", "body": "bug feature search lot internet find release date react please mention tried check raise question forum questions raising thanks kalpana", "num": "9645", "d": "5/2017"}, {"title": "external packages transforming", "body": "want request feature report bug bug current behavior checks shipped browser expected behavior react browserify transform converts actual environment variable react packages x proptypes x createreactclass x reactaddonscreatefragment x reacttransitiongroup", "num": "9641", "d": "5/2017"}, {"title": "rename reacteventlistener reactdomeventlistener", "body": "currently reacteventlistener domspecific module generic sounding name confusing contributors ie confusing let rename reactdomeventlistener pretty easy rename file update resort imports philippspiess working task", "num": "9639", "d": "5/2017"}, {"title": "error element ref created another elements constructor dev environment", "body": "creating element ref inside constructor error thrown production mode dev mode minimal sample error reactowner refs happen dev production modes happening react", "num": "9635", "d": "5/2017"}, {"title": "warning message zindex", "body": "want request feature report bug report bug current behavior warning message current behavior bug please provide steps reproduce possible minimal demo problem via similar template setting css style property zindex numerical value warning displayed warning tag owner passed numeric string value css property value treated unitless number future version react expected behavior warning zindex according css mdn versions react browser os affected issue work previous versions react", "num": "9633", "d": "5/2017"}, {"title": "featurerequest make writing css easy", "body": "react need external apis write css quite difficult like event handling react component support css pseudo selectors missing like static block style styles classname pseudo style pathtofilecss component class component", "num": "9632", "d": "5/2017"}, {"title": "react djnogo", "body": "hello use reactdjnogo develop web system meet upload picture use form tag input tag put tags react render function know problem need help thanks much", "num": "9631", "d": "5/2017"}, {"title": "persistant event", "body": "want request feature report bug bug current behavior persistent event broken console prints different values async operation current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior console print value async operation versions react browser os affected issue work previous versions react using react chrome os mac", "num": "9630", "d": "5/2017"}, {"title": "reactinputselection typeerror", "body": "got automated error report sentry relating reactinputselection thought would notify case interest unfortunately know user happened windows nt reactdom", "num": "9628", "d": "5/2017"}, {"title": "ismounted behavior different", "body": "want request feature report bug bug current behavior calling prior versions would return returns believe untested behavior new tests added may check wrong value changing line test exhibit behavior fix would defer setting flag mixins method called component versions react browser os affected issue work previous versions react anything using broken working correctly", "num": "9627", "d": "5/2017"}, {"title": "reactpatents suck", "body": "wrong people puts sort indirect limitation open source project started use react love earth nt right words facebook breaks rules break projects lowest thing ever done facebook maybe code related developer potential abuse", "num": "9623", "d": "5/2017"}, {"title": "proper explanation ref vs controlled input use case state variable react", "body": "went docs react controlled uncontrolled components created simple use case want enforce user enter uppercase values input field first case used ref onchange achieve global object property capture dom node code second case used value property state onchange code docs says controlled component every state mutation associated handler function makes straightforward modify validate user input example wanted enforce names written uppercase letters could write handlechange well validate user input even using state syncing value prop state done first example definitely validating user input done without using state explain one approach better exactly single source truth means important cases using global variable component object accessed throughout component also unnecessarily use value thisstateinput example would call render every keystroke whereas case render called nt performance case better also docs write uncontrolled component instead writing event handler every state update use ref get form values dom well need write event handler like onchange even using ref validate user input run time done case using event handler ref normal use case state variable understanding case option use state variable need update view dynamically thissetstate calls render every time run code grateful someone could clarify three examples enhance understanding concepts", "num": "9621", "d": "5/2017"}, {"title": "warn class function", "body": "want request feature report bug bug current behavior class testwrongproptypes extends component static proptypes return children proptypesstring missing proptypesstringisrequired example react silently skip checking default props setting component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior know order work proptypes definition like warning like proptypesdefaultprops function either property getter prevent errors versions react browser os affected issue work previous versions react discovered react probably behavior also earlier versions", "num": "9620", "d": "5/2017"}, {"title": "reactdomcomponent get compiled reactdomserverdevelopment reactdomdevelopment", "body": "wrong place ask please let know put line like run search build directory appears", "num": "9618", "d": "5/2017"}, {"title": "react webpack socketio", "body": "hi working personal project want use webpackdevserver hot loader dev ssr production reactrouter finding way make things work together anyone already problem try build something like", "num": "9617", "d": "5/2017"}, {"title": "get proptype info component even built", "body": "want request feature report bug feature current behavior unknown current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior would nice something like proptypesgetproptypes component would accept component return proptype definitions work anything including default html element types something like even better would worked elements well seems like could hit element prototype currently ca nt find good way extension retain prop types default component andor way get prop types html elements versions react browser os affected issue work previous versions react reactdom", "num": "9614", "d": "5/2017"}, {"title": "possibility catch startstop pulltorefresh gesture event refreshcontrol component", "body": "want request feature report bug feature current behavior possibility catch startstop pulltorefresh gesture event refreshcontrol component expected behavior would great something like onpullstart onpullend event know moment startstop pulltorefresh gesture related question stackoverflow", "num": "9612", "d": "5/2017"}, {"title": "remove warnings unminified file", "body": "warning accessing proptypes via main react package deprecated use proptypes package npm instead warning lazyrenderbox reactcreateclass deprecated removed version use plain javascript classes instead yet ready migrate createreactclass available npm dropin replacement", "num": "9611", "d": "5/2017"}, {"title": "suggestion return promise", "body": "would nice could return promise resolves component render function return value stateless functional component might complex components need rerender promises get cached resolve", "num": "9610", "d": "5/2017"}, {"title": "onload working tags", "body": "seems attribute nt work tags tags could add support", "num": "9607", "d": "5/2017"}, {"title": "need better warning message proptypes deprication", "body": "problem removal proptypes main react package import lot packages warning message could help track culprit right helpful warning accessing proptypes via main react package deprecated use proptypes package npm instead", "num": "9605", "d": "5/2017"}, {"title": "docs update profiling components chrome timeline", "body": "google chrome dropped shiny new performance tab instead old timeline tab devtools read really much read except timeline panel renamed performance panel better reflect purpose result docs needs updated reflect new changes tested profiling component react app work seems work really matter updating docs submit pr update", "num": "9601", "d": "5/2017"}, {"title": "justificationexplanation immutable props docs", "body": "would nice react docs good concise explanation decided make props immutable developer friends using angular regularly make use technique child mutates data structure owned parent think great docs great job explaining ca nt react way dealing passing callbacks would nice see tangible specific examples exactly problem solved making props immutable", "num": "9599", "d": "5/2017"}, {"title": "setselectionrange function", "body": "want request feature report bug report bug current behavior trying move cursor contenteditable div calling setselectionrange div throws typeerror example code expected behavior caret moved setselectionrange function environments tested react chrome safari macos sierra", "num": "9596", "d": "5/2017"}, {"title": "add support controllist api controllist attribute", "body": "version chrome shipped support htmlmediaelement controllist api extension controllist attribute elements like attribute looks practice react lt support attribute strips warning console could add support new attribute nt pressing issue possible set attribute via javascript ie setting component lifecycle event would nice recognized valid attribute", "num": "9594", "d": "5/2017"}, {"title": "possible component listen events nondescendent elements", "body": "want request feature report bug feature current behavior components attach event listeners eg onclick descendent dom elements way component listen events originating elements descedents use case mind bunch components marked pink borders screenshot control state want state change click happens anywhere purple region could solve moving state parent component renders purple div seems consequence fact eventlistening tree tied render tree components state actually interact", "num": "9593", "d": "5/2017"}, {"title": "really strage error pressing", "body": "work company converting previous server side website react rest services started making components press get following error console exception thrown hook handling onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren also browser jumps completly different url use container components solutions", "num": "9591", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "error uncaught typeerror super expression must either null function undefined really want know thanks much", "num": "9590", "d": "5/2017"}, {"title": "ensure flat bundles nt duplicate code weak minifiers", "body": "minifier nt eliminate constant expressions like uglify way flat bundles currently work would ship two bundles warn prominently case would effectively ship double bundle production", "num": "9589", "d": "5/2017"}, {"title": "ui tracking react", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9588", "d": "5/2017"}, {"title": "input type number decimal number support", "body": "need suggestions probably bug tried using tried step step work tried react posted first bug suggestion", "num": "9585", "d": "5/2017"}, {"title": "examples articles wiki outdatedunmaintained", "body": "referring example came page link example broken look first point react starter kit includes several examples view online github repository", "num": "9583", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "use project show error chrome console thanks everyone", "num": "9581", "d": "5/2017"}, {"title": "fiber returning functions render throw", "body": "jsx class foo extends reactcomponent render return foo class app extends reactcomponent render return foo returns instead accidentally fiber catch", "num": "9577", "d": "5/2017"}, {"title": "bug ref function gets called twice update first mount first call null value", "body": "gaearon arguing functions need called twice due internal implementation details insignificant respect end users use react end user nt care ref functions called work honestly called twice strange perspective enduser knows nothing react internal implementation nt stated end users actually need guard values duplicate calls ref functions complicates enduser code would urge internal implementation modified stop calling ref functions twice", "num": "9574", "d": "5/2017"}, {"title": "error boundary text clear", "body": "error text enhancement request current behavior exception thrown something like printed react caught error thrown fix error code consider adding error boundary tree customize error handling behavior typeerror undefined object evaluating flags error located editor created connect editor connect editor created routercontext div created app app created connect app connect app created routercontext routercontext created router router provider error thrown clear error boundary would great link docs page describes googled react error boundary ended clear answers top hits", "num": "9571", "d": "5/2017"}, {"title": "add dev flag", "body": "want check whether react dev mode would work previous versions react", "num": "9569", "d": "5/2017"}, {"title": "react changed behaviour onchange behave exactly like oninput already oninput available", "body": "official docs say onchange onchange event behaves would expect whenever form field changed event fired intentionally use existing browser behaviour onchange misnomer behaviour react relies event handle user input real time already event fires every keystroke ie oninput nt understand react changed behaviour onchange behave oninput also docs everywhere onchange used specific reason two completely interchangeable react event behaviour actual onchange react intend correct future code", "num": "9567", "d": "5/2017"}, {"title": "getting warning strokelinecap value", "body": "want request feature report bug bug current behavior shows warning strokelinecap value butt nt part spec link current behavior bug please provide steps reproduce possible minimal demo problem via similar template create path strokelinecap pass butt value show warning expected behavior nt show warning versions react browser os affected issue work previous versions react react", "num": "9566", "d": "5/2017"}, {"body": "case application coz home page nt promise calls could catching errors somewhere else many reports issue always caused accidentally caught errors please provide reproducing project think bug react thanks", "d": "5/2017"}, {"body": "using redux provider component containing intlprovider reactintl contains muithemeprovider followed reactrouter start app debug code home page render call works fine till return statement home page contains single render method empty div return fails error navigating page using react router even page navigating nt contain promise calls aware react router call might failing internally could using promise dispatching action push reduxrouter pathname configured path second page since ie specific settings babel include polyfills scenario current babelrc presets react plugins reacthotloaderbabel transformobjectassign input used assist towards finding area issue could would great help meanwhile would work creating subset project minimum reproducible scenario", "d": "5/2017"}, {"body": "neytema able reproduce browser using", "d": "5/2017"}, {"body": "hey neytema experimenting appears reactchilrden utilities filter component children totally clear reactchildren docs intended behavior think might react expert sure looks like could use children prop array normally like iterate functions though", "d": "5/2017"}, {"body": "nodejs frankalbenesius concerned inconsistency pass object type child throw objects valid react child error functions valid react child also far know object example ca nt simply use children array always array flat one", "d": "5/2017"}, {"body": "format code bit better comprehensible use mark like", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "proptypes moved separate package react perhaps file issue", "d": "5/2017"}, {"body": "goto proptypes repo", "d": "5/2017"}, {"body": "want rebase later", "d": "5/2017"}, {"body": "oh hey nt see pr yet pr resolves issues happy help track others", "d": "5/2017"}, {"body": "assume copy pasted incorrectly moreover guess issue related", "d": "5/2017"}, {"body": "directly related react try asking corresponding repo", "d": "5/2017"}, {"body": "ummahusla also think reactform question better shut question also helpless", "d": "5/2017"}, {"body": "coluccini thank take closer look", "d": "5/2017"}, {"body": "likeyakult try", "d": "5/2017"}, {"body": "hey likeyakult try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow mentioned", "d": "5/2017"}, {"body": "ummahusla thank", "d": "5/2017"}, {"body": "aweary ok thank", "d": "5/2017"}, {"body": "completeness works expected firefox android chromium based browsers still get issue", "d": "5/2017"}, {"body": "enoahnetzach became curious comment tested finding peculiar chrome mac emulating touch second example solves issue firefox mac emulating touch neither example works desired record touch events spec clear happen", "d": "5/2017"}, {"body": "adding list safari ios simulated works expected", "d": "5/2017"}, {"body": "hmm bummer thanks everyone digging following produce test case use react produce test case dom fixture manual test suite additionally pr attaches touch listeners local element curious might unexpected sideeffect fixing issue assuming react issue", "d": "5/2017"}, {"body": "nhunzaker thanks based findings far suspect pr might solve issue except firefox mac mobile appears persist regardless would easy way test code", "d": "5/2017"}, {"body": "custom build branch could pull react reactdom react reactdom forked updated gist scripts though wo nt able dig testing later today tomorrow", "d": "5/2017"}, {"body": "nhunzaker thank tested using chrome android chrome emulated touch mac unfortunately behavior seems", "d": "5/2017"}, {"body": "nesmalltown please provide example reproducing issue difficult debug without knowing source code use jsfiddle running latest alpha release", "d": "5/2017"}, {"body": "try little tough give times thanks", "d": "5/2017"}, {"body": "seen happen duplicate package example symlink react build folder pull stable unstable version mistake delete local try assuming building master also run check duplicates", "d": "5/2017"}, {"body": "gaearon thanks example symlink react build folder use windows think nt little confusedyou say delete local react nodemodules try delete think project wo nt workif wrong please let know result unmet peer dependency reactdom npm err peer dep missing react required chaienzyme npm err peer dep missing react required enzyme npm err peer dep missing react required reactcssthemr npm err peer dep missing react required reactrouter npm err peer dep missing react required reactrte npm err peer dep missing react required reactscroll npm err peer dep missing react required reactsparkscroll npm err peer dep missing react required reactsparkscrollrekapi npm err peer dep missing react required redboxreact npm err peer dep missing reactdom required chaienzyme npm err peer dep missing reactdom required reactaddonstestutils npm err peer dep missing reactdom required reactrte npm err peer dep missing reactdom required reactscroll npm err peer dep missing reactdom required redboxreact npm err code", "d": "5/2017"}, {"body": "install back npm ls react say", "d": "5/2017"}, {"body": "gaearon delete react reactdom says unmet dependency reactdom npm err missing react required myprojectname npm err missing reactdom required myprojectname npm err code reinstall unmet peer dependency reactdom npm err peer dep missing react required chaienzyme npm err peer dep missing react required enzyme npm err peer dep missing react required reactcssthemr npm err peer dep missing react required reactrouter npm err peer dep missing react required reactrte npm err peer dep missing react required reactscroll npm err peer dep missing react required reactsparkscroll npm err peer dep missing react required reactsparkscrollrekapi npm err peer dep missing react required redboxreact npm err peer dep missing reactdom required chaienzyme npm err peer dep missing reactdom required reactaddonstestutils npm err peer dep missing reactdom required reactrte npm err peer dep missing reactdom required reactscroll npm err peer dep missing reactdom required redboxreact npm err code", "d": "5/2017"}, {"body": "eh annoying npm nt print ls unsatisfied peer dependencies basically saying two reacts somewhere pretty sure suggest check sources pane browser console looking see two different directories delete extra one good sure react bug please provide project reopen", "d": "5/2017"}, {"body": "fixed part", "d": "5/2017"}, {"body": "nt sound like react issue react nt concerned network requests like question single page apps encourage ask stackoverflow since use issue tracker bugs features react try keep focused", "d": "5/2017"}, {"body": "success chrome browser", "d": "5/2017"}, {"body": "failed ie browser", "d": "5/2017"}, {"body": "hey possible failing references constructor function component nt supported ie edge taking example reference component constructor references name property constructor supported ie", "d": "5/2017"}, {"body": "sounds like problem control components rendered children get around using static property like instead relying environment provide name check instead since aspect environment react ca nt really control going close hopefully workaround helps", "d": "5/2017"}, {"body": "place return inside function", "d": "5/2017"}, {"body": "thanks ematipico", "d": "5/2017"}, {"body": "warning console says wink recommend reading warnings often point mistakes", "d": "5/2017"}, {"body": "posts docs folder send prs would help clarified part code nt make sense", "d": "5/2017"}, {"body": "clarify problems think idibidiart pointing uses hoisted throws error since used top file example uses promise nt resolve never called use resolve get cancellation behavior chained wrapped promise nt called canceled may point confusion code within original promise execute matter cancellation nt prevent wrapped promise resolving manages whether called resolve", "d": "5/2017"}, {"body": "happy take pr changing working approach think copy pasted comments nt know person merged tested", "d": "5/2017"}, {"body": "worth noting even bluebird cancellation mean original promise callback execute code produces sideeffects cancellation prevent control whether called could continue using example moved callback instead promise", "d": "5/2017"}, {"body": "aweary gaearon hoisting aside copiedpasted code blog post plane yesterday without paying attention point aweary stated obvious things make sense relative promise spec premise cancel promise invalid relative promise spec possible without buildtime ast manipulation callback function conditionally nullify based cancellation state outer scope consider intent may preempt straight forward bluebird userland implementations support kind cancellation misnomer imo called cancellation promise cancellation could continue using example moved setstate callback instead promise need add promise resolution cancel called would actually reached like js const makecancelable originalpromise gt let hascanceled false const wrappedpromise new promise resolve reject gt return promise wrappedpromise cancel hascanceled true const cancelablepromise makecancelable new promise resolve reject gt settimeout gt alert original promise eg fetch promisified async call executed successfully resolve call unsuccessful reject cancelablepromise promise gt consolelog resolved would use setstate catch reason gt consolelog iscanceled reasoniscanceled cancelablepromisecancel cancel", "d": "5/2017"}, {"body": "fixed comment say cancel", "d": "5/2017"}, {"body": "gaearon please make sure take pr language informative misleading nothing like cancel promise exist es land", "d": "5/2017"}, {"body": "also purpose blog post believe setstate cancellable originalpromise assume xhr call async call returns promise way blog post would actually make sense would demonstrate avoid setting state promisified xhr promisified async call bound succeed component unmounted updated example code comments makes sense", "d": "5/2017"}, {"body": "idibidiart thanks explaining well aware promises really cancelable language somewhat misleading need repeat every comment agree point feel strongly welcome submit pr better job explaining snippet even replace snippet another snippet would make sense happy review merge high priority issue us pretty old blogpost ton work bring react closer sorry spending time time soon happy take contributions", "d": "5/2017"}, {"body": "huge pain point es spec discussions still arrived consensus cancellable promise huge issue promise spec scream roof top painful cancellable promise would simplify much concurrent code make things fun anyway reason came besides tweet reminding encountered latest version react native exnavigation apps built without using setstate anywhere get warning saying call setstate unmounting component etc trace goes back exnavigation replaceimmediately forgot exact method name frustrating problem react general think need surfaced taken care moving react navigation going invest time fixing warning getting exnavigation feel common problem react common enough cry loud feel free set context maybe misimagining consequence lack cancellability promise spec hmm close happy make pr aweary nt get first edit look closely fiber try understand whether concurrency model provides changes picture managing concurrency react maybe part fiber get new better concurrency primitives look thanks", "d": "5/2017"}, {"body": "hmm close happy make pr aweary nt get first feel free submit pr close change landed", "d": "5/2017"}, {"body": "great done aweary please feel free review", "d": "5/2017"}, {"body": "mutates array react nt automatically clone props refer array inside method make work like expect make sure create new array", "d": "5/2017"}, {"body": "oh thank try", "d": "5/2017"}, {"body": "help noob thank match", "d": "5/2017"}, {"body": "include content relevant problem please include code sample description expect actually happens", "d": "5/2017"}, {"body": "types invalid children looking test tried using", "d": "5/2017"}, {"body": "aweary think wants validate whether value child thing anything valid childchildren certain values rendered eg reactdom dounan want", "d": "5/2017"}, {"body": "think wants validate whether value child yep sorry clear initial issue anything valid childchildren agreed issue specifically react blackbox data structure react doc reactchildren provides utilities dealing thispropschildren opaque data structure want writing library provides validation logic props state would like skip validation given opaque children data structure currently checking key prop children possible developer reassigns value children prop different prop key key state instead would nice able simply check value react opaque children data structure think might possible use use existing children helper functions via sort trycatch seems brittle hacky", "d": "5/2017"}, {"body": "agreed issue specifically react children blackbox data structure react doc reactchildren provides utilities dealing thispropschildren opaque data structure actually opaque structure today treated nt try parse asis instead use helpers speculating opaque children structure may introduced future however assume even may opaque structure values still valid children opaque children structure simply valid value may performancesemantic differences probably primarily used jsx entirely sure trying build tl dr thing invalid children value valid child probably always", "d": "5/2017"}, {"body": "tl dr thing invalid children value valid child probably always true think objects invalid children react children actually opaque structure today treated nt try parse asis instead use reactchildren helpers right currently children could arbitrary data structure primitive however devs supposed care need treat black box value think suggested name might slightly throwing thread offtopic let give black box value type really looking function given arbitrary value returns true iff value type current world function really possible implement value could anything string number react element etc thinking specific use case sure function would cover cases think might need think bit however function would cover majority cases need cover still think would nice type utility function example throw exception", "d": "5/2017"}, {"body": "true think objects invalid children react yeah partly used treated bad idea deprecated unthinkable objects tostringed future something similar also important note objects still valid children used components handle children manually depending target children value valid child like native elements support string values children determined generic fashion value valid always", "d": "5/2017"}, {"body": "question nt really verify valid children validate value returned reactdom example pass function child component uses render callback ca nt return function think reasonable defer validation react since provide much better error messages cases especially inclusion render stack feel providing api testing would encourage library authors implement error messaging sure good thing general case mentioned add invariant isvalidelement condition could used validate child rendered need could use handle really need", "d": "5/2017"}, {"body": "depending target children value valid child makes sense need could use reactisvalidelement typeof handle really need probably approach take thanks aweary syranide info advice", "d": "5/2017"}, {"body": "isolate bug react manipulations dom methods issue", "d": "5/2017"}, {"body": "ca nt reproduce windows", "d": "5/2017"}, {"body": "unable reproduce osx running chrome", "d": "5/2017"}, {"body": "sorry seems issue chrome able reproduce bug using dom manipulations manually interested", "d": "5/2017"}, {"body": "writing css way css looks syntax importantly access css properties sure mean react works fine regular css write css file work component issues", "d": "5/2017"}, {"body": "yes facebook sells hard modular css concept somewhat least think best practice writing css one file many solutions css js point none looks natural vue", "d": "5/2017"}, {"body": "modular css concept referring facebook makes references css react docs particular mean sells hard mean create react app allow importing css files js css js solution way split single css files many files associated components however files pure css special modular extensions used sure differs regular way write css", "d": "5/2017"}, {"body": "recommended correct wrong write css component seem thanks explanation guess puzzled different css solutions question asked", "d": "5/2017"}, {"body": "cssmodules option import regular css styledjsx like write css markup inline styles used way always dynamic styling", "d": "5/2017"}, {"body": "fateriddle recommended never recommended way add dynamic styles calculated javascript eg style depends prop know sure people use places even instead class names entirely subjective react users write style css correct wrong write css component seem nothing react either describing nonstandard extension css called css modules neither endorsed facebook even currently supported create react app probably saw third party project required react even recommended officially", "d": "5/2017"}, {"body": "bind way try pass arguments ways good way solve", "d": "5/2017"}, {"body": "hope discussion helps general recommend sticking examples official documentation using create react app curate people use react different ways really say react pretty flexible indeed use normal css recommend css modules inline styles even vuelike solutions like styledjsx method binding hope link bjrmatos provided helps would add nt worry unless actually causing performance issues app lot misinformation performance suggest spend time microoptimizing things unless dealing specific problem cheers", "d": "5/2017"}, {"body": "intentionally hid addon wo nt make react might wise later maybe", "d": "5/2017"}, {"body": "nt know clear precedent put docs deprecated moved features warnings feature current version react add note docs leave accessible main navigation fully movedremoved current released version react orphan doc pages eventually moving gists setting redirects think may orphaned doc pages features still fully removed react", "d": "5/2017"}, {"body": "yea point sure worth bringing back guess still searchable google", "d": "5/2017"}, {"body": "think need momentjs", "d": "5/2017"}, {"body": "thank eightfeet try", "d": "5/2017"}, {"body": "hey fgseneres try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "5/2017"}, {"body": "hey bkilrain thanks report appears chrome behaves though sure chrome bug jsfiddle reproducing issue without react shows issue react able reproduce behavior chrome safari works fine without react firefox", "d": "5/2017"}, {"body": "since clear whether expected based spec behavior inconsistent major browsers nt think something addressed react recommend maybe referring chrome bug tracker may already issue could nt find one though file new one hope helps", "d": "5/2017"}, {"body": "tutorial step static version scroll step see actual working example", "d": "5/2017"}, {"body": "yep seems expected ideas changing wording clearer please send pull request take look", "d": "5/2017"}, {"body": "cc gaearon thoughts approach regarding www cc yungsters thoughts regarding fbsource", "d": "5/2017"}, {"body": "sounds like great idea feel free replace command", "d": "5/2017"}, {"body": "replied please read user guide", "d": "5/2017"}, {"body": "issues repository read developers like lawyers use feature requests bug reports please feel free contact lacker questions license much clarification could provide", "d": "5/2017"}, {"body": "thanks dan apologize pollution lacker please readjust legal language used react make easier users use react without worrying legal trouble thanks", "d": "5/2017"}, {"body": "thanks reporting might want release addon via npm look", "d": "5/2017"}, {"body": "although solution tried exactly environment jsfiddle posted leave reference fix error adding following diff diff nodemodulescreatereactclasscreatereactclassjs createreactclassjs use strict var factory require factory var react require react hack grab noopupdatequeue isomorphic react var reactnoopupdatequeue new reactcomponent updater", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "ahhh continue close jochenberger notifications receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "thanks proposal pedrottimark test renderer recently got new api provides easily traversable tree structure describing rendered elements see could implemented userland using api looking draft seems like might pretty straightforward", "d": "5/2017"}, {"body": "aweary thank link pr method follow effort proposed use expected value test objects converted unrendered elements think call method say stay userland depends react element reason support recommend minimize devdependencies similar type testing answers concerns github twitter snapshot testing solution seems like diplomacy technology problem appears jest ava remaining work packages hurt feelings team needs close issue focus finishing fiber", "d": "5/2017"}, {"body": "lfirek looking excellent resource source understanding implement synthetic events potential resources perhaps archaic trivial example handling touch events using would follows", "d": "5/2017"}, {"body": "solution problem want handle events childschilds", "d": "5/2017"}, {"body": "thank clarifying question lfirek hear saying would like child component bubble events parent component would use correct", "d": "5/2017"}, {"body": "found mistake blog function call server rendering blogarticle function called change hook function willmount didmount cheers", "d": "5/2017"}, {"body": "part react please file instead probably using indirectly react hot loader", "d": "5/2017"}, {"body": "thanx gaearon indeed hot loader issue thus perspective non issue since keep server config restrictive without unsafeeval production settings", "d": "5/2017"}, {"body": "possibility use property initializer syntax mentioned official documentation guess bad practice otherwise would pointed warning fact experimental syntax end decide use dedicated babel plugin enable feature notre", "d": "5/2017"}, {"body": "ewanvalentine side note nt need pass constructor calling base class unless nt need props inside constructor fine well", "d": "5/2017"}, {"body": "thanks folks really helpful", "d": "5/2017"}, {"body": "screenshots look little fuzzy reason mockups pdfs docshomepdf docspdf", "d": "5/2017"}, {"body": "cc lacker would interested", "d": "5/2017"}, {"body": "long right sidebar follow page scrolling smile technique useful sidebar taller viewport like one currently online", "d": "5/2017"}, {"body": "need bundle modules browser expose globals ca nt load react cdn write code anymore already bundled versions need include tags maybe fact bug maybe file", "d": "5/2017"}, {"body": "maybe file tried reproduce failed turned intentionally using development version react minified version therefore set react issued warning manfacepalming closing thank", "d": "5/2017"}, {"body": "interesting thanks explaining", "d": "5/2017"}, {"body": "sure passing children documented totally equivalent", "d": "5/2017"}, {"body": "gaearon aweary think added alternative passing yes would happy work pr", "d": "5/2017"}, {"body": "laumair hope nt mind opinion matter one answered question definitely think worth documenting believe important clarify whether people encouraged use approach yes circumstances example personally see logical reason one would ever use beauty jsx similarities syntax xmlhtml even worse used appropriate love make first pr repo nt mind course", "d": "5/2017"}, {"body": "anderssonchristian please feel free submit pull request believe important clarify whether people encouraged use approach yes circumstances example personally see logical reason one would ever use take drops matter personal preference time prefer using times pass string child end using version", "d": "5/2017"}, {"body": "lacker saw mentioned relation patentlegal shenanigans pinging", "d": "5/2017"}, {"body": "appreciate questions would prefer use react issue tracker use bug reports feature requests best venue legal matters suggest reach lacker private planned collect feedback thanks", "d": "5/2017"}, {"body": "please email legal fbcom get touch worked faq best people respond also talk lacker concerns", "d": "5/2017"}, {"body": "gaearon thanks", "d": "5/2017"}, {"body": "gaearon got auto reply unsupported email alias team unable receive reports channel maybe internal alias", "d": "5/2017"}, {"body": "general suggest asking lawyer concerned specific issues like nt know faq exhaustive would nt want tell hey hang wait clarification bring questions others like internal legal team see straightforward would build faq detail", "d": "5/2017"}, {"body": "lacker thanks engagement yes already making decision official statement facebook redistribution would good anyways", "d": "5/2017"}, {"body": "tags rendered server side", "d": "5/2017"}, {"body": "believe also issue order attributes html element using rendertostring get different order attributes using client side rendering also gives error", "d": "5/2017"}, {"body": "got fixed problem date object server used timezone", "d": "5/2017"}, {"body": "yes want something like future please see", "d": "5/2017"}, {"body": "think line current code changed use instead april commit perhaps version reactdom working date maybe change nt released yet", "d": "5/2017"}, {"body": "oh bvaughn think turned manual proptype definition instead referencing proptypes", "d": "5/2017"}, {"body": "right alil using updating likely close moment everything works", "d": "5/2017"}, {"body": "react reactdom error still exists flushed nodemodules yarn restarted server npm list reactdom everything looks date still got errors", "d": "5/2017"}, {"body": "acdlite bvaughn react europe need volunteer look", "d": "5/2017"}, {"body": "funkjunky feel taking", "d": "5/2017"}, {"body": "sure need bit patient sure read bit needs done contribute never really contributed open source project outside work", "d": "5/2017"}, {"body": "sorta excited participate alil mentioned patched grepped reactproptypes appears cleaned everywhere close wait next release thanks help everyone", "d": "5/2017"}, {"body": "worries run something else want tackle feel free reach happy run getting things setup way finding code best", "d": "5/2017"}, {"body": "thanks nhunzaker may well mention grep found tests errors still mentioning reactproptypes", "d": "5/2017"}, {"body": "update tutorials x tutorialmd pr first step guidesexamples x todojs pr x markdownjs pr docs x state lifecylces pr x conditional rendering pr x forms pr x pr x lifting state pr x thinkinginreact pr x compositionvsinheritance pr x optimizingperformance pr x context pr x higherordercomponent pr x integratingwithotherlibraries pr x reference events pr", "d": "5/2017"}, {"body": "searching finding putting prs find getting tedious last per cover rest docs", "d": "5/2017"}, {"body": "think got", "d": "5/2017"}, {"body": "thanks jordanpapaleo might better git history done single pr think gaearon", "d": "5/2017"}, {"body": "hi ca nt imagine precisely outcome goal reveal intent communicate method async lead subtle bugs devs read carefully docs meanwhile screams method async functional programming spread many javascripter heart fp description could say succintly emulating fluxredux namings rule thumb update docs would say need read previous state update use lambda update state regardless existing one object version could stay", "d": "5/2017"}, {"body": "idea would many started know would get done last night least small easy approve prs gearon please let know acceptable merge thanks", "d": "5/2017"}, {"body": "fiber presentation heard non functional approach may going away examples function format would good case defer gearon", "d": "5/2017"}, {"body": "seen come using enzyme investigating briefly see proxying think enzyme ruled cause", "d": "5/2017"}, {"body": "seeing another issue react logging warning messages tests", "d": "5/2017"}, {"body": "issue test log full warnings ideas fix", "d": "5/2017"}, {"body": "hard fix without reproducing project", "d": "5/2017"}, {"body": "sure airbnb seeing happen test runs test files apparent pattern try recreate best sure able come consistent failure", "d": "5/2017"}, {"body": "create reproducing project tomorrow case giving error every test project", "d": "5/2017"}, {"body": "nt look good two reacts causes sorts issues please ensure one copy try", "d": "5/2017"}, {"body": "thanks dedupe properly see helps", "d": "5/2017"}, {"body": "sorry nt realize standalone jsx repo jsx milestone close", "d": "5/2017"}, {"body": "understand headache run well lifecycle well documented since redux operates state well guess sure needs done", "d": "5/2017"}, {"body": "lifecycle well documented perspective one component happens lifecycle method triggers ancestor update big question mind seen work cases blow situations nt really know", "d": "5/2017"}, {"body": "really sure agree issue would argue state changes lifecycle methods always bad would also think state changes would run redux store change already happened lifecycle methods invoked caused invoke ultimately seems granted little information additional reducer listening action dispatched triggered lifecycle methods first place rather rely react tell made error redux least seems like asking suggesting original issue", "d": "5/2017"}, {"body": "take look react docs chinese working progress", "d": "5/2017"}, {"body": "chinese translation react updated docs outdated longer maintained related discussion people need badly", "d": "5/2017"}, {"body": "need chinese document", "d": "5/2017"}, {"body": "would right fix modules really meant oneoffs sure plan support amd unless easy fix", "d": "5/2017"}, {"body": "umd module generated", "d": "5/2017"}, {"body": "gaearon nt really understand code coming bundled looks like works react globally defined must bug surely", "d": "5/2017"}, {"body": "unfortunately really intend post new versions manual fiddling browserifyed bundles tack onto global fix would manual looks like works react globally defined must bug surely looking umd bundle yes looks like bug disputing works browser main reason made bundles high priority issue love see fix", "d": "5/2017"}, {"body": "see", "d": "5/2017"}, {"body": "think nt tested edit wups changed react react", "d": "5/2017"}, {"body": "lgtm", "d": "5/2017"}, {"body": "try preparing change based versions checked know sound like much fun", "d": "5/2017"}, {"body": "gaearon branch", "d": "5/2017"}, {"body": "yep", "d": "5/2017"}, {"body": "may know files generated even edited get one running etc get minified file source file edited instead", "d": "5/2017"}, {"body": "generated hand oneoff think make changes silly send pr nonminified version minify hand", "d": "5/2017"}, {"body": "pull request sent tried one requirejs amd environment nt found problems please check dan abramov notifications generated hand oneoff think make changes silly send pr nonminified version minify hand receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "problem every addon", "d": "5/2017"}, {"body": "progress upgrading problematic module encountered dan abramov notifications problem createreactclass every addon receiving commented reply email directly view github mute thread", "d": "5/2017"}, {"body": "amd broken reactdomminjs reactdom makes impossible use requirejs rise replace cause normally components reactdomminjs name guess", "d": "5/2017"}, {"body": "sound like related issue file new issue project reproducing", "d": "5/2017"}, {"body": "gaearon sounds like issue resolved released", "d": "5/2017"}, {"body": "yes plan fix", "d": "5/2017"}, {"body": "oh know even plans perfect create new issue case", "d": "5/2017"}, {"body": "referring issue thread nt sound related described please file new issue problem experienced minimal reproducing example", "d": "5/2017"}, {"body": "excuse please could avoid creating issues repositories unless real issue", "d": "5/2017"}, {"body": "problem problem syntax different callback created time renders cases fine however callback passed prop lower components components might extra rerendering generally recommend binding constructor using property initializer syntax avoid sort performance problem cases fine generally recommend another way causing performance problem related problem comes passing param event handlers loop know trick extract another component js class itemlist extends reactcomponent constructor props super props render return thispropsitemsmap item gt onclick itemid consolelog clicked item itemid class button extends reactcomponent constructor props super props render return onclick thispropsonclick thispropsitemid ok got state could well make function component instead right nope back square one new function constructed every render mean recommended switch function components class components soon take functions props use function components would decrease lot really smarter move never use function components avoid convert classes uncommon function components start totally noninteractive get event listeners personally think gon na go whatever makes readable code worry performance notice performance problems would really nice clear confusion would make sense recommend using add work section able compare functions whole point right", "d": "5/2017"}, {"body": "kinda first parameter type note currently ca nt use intersection types like", "d": "5/2017"}, {"body": "could please point internal source file defines could nt find", "d": "5/2017"}, {"body": "flow codebase weirdly guess react codebase yet partially typed", "d": "5/2017"}, {"body": "strange thing thank much try work pr update documentation pretty confusing try get deeper react", "d": "5/2017"}, {"body": "react documentation nt section flow fully sure would like document however section react flow website help", "d": "5/2017"}, {"body": "gaearon section react flow website guide present entire api reference yes think react section flow currently react docs section typechecking proptypes explains reactproptypes deprecated react opinion comes way encourage usage typescript flow static typechecking hence part reason flow section react documentation think", "d": "5/2017"}, {"body": "wording react doc really unfortunate nt say deprecated say moved deprecating moving separate package although agree general think flowts better way open new guide called static type checking shows use react flow typescript describes main api definitions would like work", "d": "5/2017"}, {"body": "gaearon yes would like help much", "d": "5/2017"}, {"body": "understanding diff algorithm reconciliation two different things diff algorithm figures nodes tree changed reconciliation occurs parts tree know changed diff process react uses update real dom elements component fewest amount mutations", "d": "5/2017"}, {"body": "react rendering html server side client side isomorphic application server side rendering html created server sent client eg nunjucksexpress client side rendering html created browser js ex angularjs react traditionally client side rendering see reactdom render target app first render app inside target app client sends api requests server receives data needed component rerendered screen serverside rendering server handles initial render user first request app server receives request renders required component html string sends response client client render server also send state yout app along response client use initial state important preload data generating html want client also access data otherwise markup generated client wo nt match server markup client would load data", "d": "5/2017"}, {"body": "thanks answer difference client server side rendering gets rendered would want serverside transfer building operations client server free client load correct routing logic clientserver sides differs guess really nt use serverside routing always giving back blank file huh data comes api routes rerenders data spa ways things nt understanding precise routing logic using different browser api overriding one request page per route server please correct wrong", "d": "5/2017"}, {"body": "yes idea right server side rendering html document prepared server delivered browser client load less use server side routing using reactrouter set reactrouter inside server url request comes match url routes match make component string return response client using router client side guess concern rendering different components based url changes data fetched like way said json react rerender dom new data react longer navigating different html pages remote server instead change components single page", "d": "5/2017"}, {"body": "ok thanks got answers needed kind overall picture anyone wondering useful materials topic medium article github project", "d": "5/2017"}, {"body": "ca nt reproduce chrome works expected even sure could possibly cause seeing effectively working outside react except scrollevent sure nt caused chrome plugin problem occurs going solid color rgba color alpha nt sounds like chrome bug opacity causes element become stacking context possibly bug edit testing chrome", "d": "5/2017"}, {"body": "tested chrome lag noticeable basically ignores scroll input completely however syranide pointed seems chrome issue bug react also feels like scrolling rgba color kind jaggy compared solid color used", "d": "5/2017"}, {"body": "ps unless transient bug chrome may helpful beware overuse", "d": "5/2017"}, {"body": "sorry tried times take react code whenever bug disappeared jsfiddle still well thanks anyways keep good work", "d": "5/2017"}, {"body": "thescottyjam problem would mind reposting issue chrome tracker think happy seem like expected behavior especially trivial example", "d": "5/2017"}, {"body": "reported thanks", "d": "5/2017"}, {"body": "thescottyjam excellent disable smooth scrolling flag chrome work expected probably nt see disabled windows", "d": "5/2017"}, {"body": "workaround react router onclick workaround example export const onclick gt let clicktime let pos x return onclick gt onmousedown nativeevent e gt clicktime datenow posx ex posy ey onmouseup nativeevent e gt datenow clicktime lt amp amp posx ex amp amp posy ey amp amp onclick link", "d": "5/2017"}, {"body": "hey ax looks like expected behavior reference highlight text trigger event clarify expect different behavior", "d": "5/2017"}, {"body": "hm right confused", "d": "5/2017"}, {"body": "board render function snippets question show later removed winner status make use thisstate value instead thisprop value yea guess bit confusing right going removed showing intermediate stage still exists could remove code snippet show alone people ca nt quickly check made first bunch changes correctly could omit contents methods nt changed say something like less distracting could maybe add comments like think jumpto function game class discussion reads set xisnext true index move number even number code given reads xisnext step false true line read set xisnext true index move number odd number guess bit confusing number even causing condition ternary evaluate think code right would explicit would like help issues editing tutorial", "d": "5/2017"}, {"body": "hi gaearon thanks quick response think original solution second question regarding xisnext perfectly fine think needed wrap head around however still unsure first question explanation states change board takes squares via props proceeds use board render guess unsure fine use replaced function referring two sets squares one particular array element handed game vs entire array passed game thank", "d": "5/2017"}, {"body": "explanation states change board takes squares via props line referring line specifically replace thisstatesquares thispropssquares board rendersquare rest transformation done yet covered right code snippet regarding unsure thisstatesquares fine use calculatewinner nt touched method yet removing part code right ahead delete code calculating status board render function nt make sense change code right deleting maybe better way rephrase clarify one time snippet looking meant final version code one three changes applied delete constructor board replace thisstatesquares thispropssquares board rendersquare replace thishandleclick thispropsonclick board rendersquare next steps fix issue", "d": "5/2017"}, {"body": "happens use component implements one subcomponents throws error update description expected real error message also non truncated stacktrace", "d": "5/2017"}, {"body": "page deleted unfortunately wikis work could conceivably delete completely common issue", "d": "5/2017"}, {"body": "gaearon thx quick response wikis still possible permissions checking github project management found small checkbox saying restrict editing users teams push access public wikis still readable everyone possible quite strict way anyhow thx", "d": "5/2017"}, {"body": "see case think would work us mostly edit wiki contains community resources official docs strict write access", "d": "5/2017"}, {"body": "perfectly valid pass nonreactelements component children example sourced handy way defer rendering child component instead needing example fetch user parent see usecases means since children anything checking make sure nt arrays would nt make much sense would limit ways children could used likely break backwards compatibility existing apps", "d": "5/2017"}, {"body": "totally understand point thanks much reply case scenario common usage write code like still little confused array variablelength structure different function clearly declared key provided help optimisation rerendering otherwise warning given case better follow convention warn developers clear avoid confusion like rerender performance affected indeed hand case even developers provide unique key item nt think improvement performance possible react optimisation handle thanks reply", "d": "5/2017"}, {"body": "yeah definitely agree particular usecase could confusing really common error seen various forms library perspective developer really want pass data shaped nested arrays sort checking coercion children would prevent likely result confusion way get exactly put case would suggest making parent component want pass nested arrays flattening way users component nt account", "d": "5/2017"}, {"body": "yeah totally agreed giving warning suggest add unique key nested arrays without optimisation help make sense seems said making parent component flattening best choice moment thx", "d": "5/2017"}, {"body": "gt fact propagated highlevel components oninput bubbles like get away polyfilling uncontrolled components could link src code polyfilling instead pass value directly event handler think great change change api controlled components onchange works like oninput one version one version mean maybe typo next version works like browser still warns tells use oninput forever please dev mode uncontrolled components add oninput maybe add something doc ref prop set oninput necessity use ref cases", "d": "5/2017"}, {"body": "oninput bubbles believe means propagated lot people use higher level components one version next version react work currently deprecation warning would imagine warnings devonly", "d": "5/2017"}, {"body": "deecewan thanks share believe means propagated lot people use higher level components thanks misunderstand next version react work currently deprecation warning would imagine warnings devonly next sentence uses word next version sentence uses one version confuse", "d": "5/2017"}, {"body": "sebmarkbage previously brought separating uncontrolled controlled inputs entirely guys seemed generally agree might good time longer relevant ie uncontrolled reactenhanced implementation controlled behavior could possibly even package imho going removing attribute whitelists specialcasing native inputs seems like step direction regarding vs unless imeissues hiding seems fine seems like generally good react naming convention components change also checkboxesradios etc would still report value change via right", "d": "5/2017"}, {"body": "syranide think vs also interesting avenue explore overloaded means eg could actually name lazily load impl details example make configurable scope bunch things user space could therefore kind wanted talk events isolation decouple concerns", "d": "5/2017"}, {"body": "sebmarkbage entirely sure mean sounds like thought topic perhaps would idea settle unique event name say etc way weird ifthisthenthat behavior events behave differently depending mode input free implement behavior exactly best suits us worry quirks may problem original events asis untouched add another one sure needs align perhaps big deal access polyfilled event uncontrolled inputs probably come handy sometimes", "d": "5/2017"}, {"body": "trueadm proposed thing new name bit confusing changing nice would nice able fire event even nothing changed something might changed leaves deduping user code already state available rather forcing implementation keep state accessible dedupe every time also simplifies implementation burden thinking bit right complex polyfills events really things polyfill override eg implementation listens events fill gap browsers fixing adding support presumably huge implementation burden seems likely eventually use alone world would seem like completely unnecessary overhead custom event", "d": "5/2017"}, {"body": "sebmarkbage browser vendors going make behave like current let change name like said proposal idea going case makes complete sense align awesome behaviour future day remove additional polyfills altogether lot people using react world instead actually one people back wrote first react app warn going change also warn change semantics", "d": "5/2017"}, {"body": "really general concept change allows simplifying really complicated polyfill also actively encouraging folks use better controlled input pattern really encourage ya please give full major version warn add entire form library ecosystem react built top behavior onchange custom inputs copy onchangevalue pattern", "d": "5/2017"}, {"body": "looking post linked post seems actually use onresize ie browsers still sure wording spec initiated report issue talk window also iframes maybe excluded close issue since use polluting list issues someone comments certainly interested", "d": "5/2017"}, {"body": "bug need bind use arrow function callback", "d": "5/2017"}, {"body": "may related version installed ran got following message outdated snapshot snapshot header found jest introduced versioned snapshots ensure developers project using version jest please update snapshots upgrade jest going try see helps", "d": "5/2017"}, {"body": "pretty sure figured jest installed globally reason think used run tests react even though packagejson uninstalled global version jest ran tests master pass", "d": "5/2017"}, {"body": "issue caused react hot loader unfortunately currently good workaround", "d": "5/2017"}, {"body": "interesting everything works set production including react hot loader", "d": "5/2017"}, {"body": "rhl disables production", "d": "5/2017"}, {"body": "guess nt understand determines running production rhl still works start app like", "d": "5/2017"}, {"body": "relies envification provide instructions bundling production note suitable production server", "d": "5/2017"}, {"body": "nt think intentional probably accidentally removed website index updated", "d": "5/2017"}, {"body": "flarnie tagging since probably bring back part", "d": "5/2017"}, {"body": "find", "d": "5/2017"}, {"body": "gaearon thanks lot", "d": "5/2017"}, {"body": "sure related also noticed react docs deindexed google search facebookgithubio higherorder components nothing", "d": "5/2017"}, {"body": "weird problems reported google search seems like separate issue", "d": "5/2017"}, {"body": "thanks omerts gaearon flagging put back main navigation also noticed shallow renderer section seems outdated sure missed update nt cherrypicked something fixing separate diff", "d": "5/2017"}, {"body": "know import reactfiberreconciler mean time supported way moment using fork seems reasonable meantime btw questions would best place ask learn fiber apart source code fine nt looked specific question yet", "d": "5/2017"}, {"body": "ahh found bug commitupdate api changed working working code thanks quick reply gaearon add questions soon", "d": "5/2017"}, {"body": "problem specific paperjs works jsx structure paperjs instances created even though child instance created problem create new yet paperjs automatically creates new empty adds path end instead would like create parent instance children might stupid question way reverse process calling createinstance next problem change example entire paper tree rerendered executing unnecessary calls need set optimize rightbest way basically could completely skip piece code also trying figure write tests paperjs supports nodecanvas offers importexport svg json advice", "d": "5/2017"}, {"body": "bhumisukhadiya view helpful", "d": "5/2017"}, {"body": "bhumisukhadiya accessing windowlocalstorage", "d": "5/2017"}, {"body": "alexintosh bhumisukhadiya right must use", "d": "5/2017"}, {"body": "hey bhumisukhadiya try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow serverside rendering accessing might throw error server usually safest dom", "d": "5/2017"}, {"body": "sure trying think might bit confused state works need synchronize two different component states instead let parent component state pass props child stay sync suggest revisiting lifting state similar section react tutorial since look like bug close issue hope links help", "d": "5/2017"}, {"body": "particular example see parent component mutated array passed parent component part recommend mutation much suggest go tutorial fully explains exact issues", "d": "5/2017"}, {"body": "think reason happened changed state object matter sub parent component thank advice go reading tutorial", "d": "5/2017"}, {"body": "yes correct", "d": "5/2017"}, {"body": "record forum", "d": "5/2017"}, {"body": "specific date mind hoping get summer", "d": "5/2017"}, {"body": "acdlite pr ca nt find code", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "mean also need addons already", "d": "5/2017"}, {"body": "look addons see addons use need think already proxying", "d": "5/2017"}, {"body": "think already proxying require reactfoo point release decouple almost addons keep existing react removes lib", "d": "5/2017"}, {"body": "added list description shows packages use nt include either add ones use", "d": "5/2017"}, {"body": "let add necessary", "d": "5/2017"}, {"body": "fixes please let us know worked", "d": "5/2017"}, {"body": "looks good thanks quick turnaround", "d": "5/2017"}, {"body": "tackle", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "code using tried replicate ca nt get warning given warning said assume passing string first tag link get error pass number", "d": "5/2017"}, {"body": "using gsap style value set let say value number fixed changing zindex auto warning nt show see string try get back project put code", "d": "5/2017"}, {"body": "hey ashokkumarsand thanks taking time write suggestions introducing new api handling css may provide value could also introduce significant overhead affect performance bundle size currently bunch community driven projects implement api similar requesting glamor aphrodite styledcomponents fela since problem difficult solve within react many highlyperformant stable solutions exist community going say something wo nt included recommend checking reactiflux discussreactjsorg discussion topic hope helps", "d": "5/2017"}, {"body": "use way", "d": "5/2017"}, {"body": "could describe details issue error logs share jsfiddle", "d": "5/2017"}, {"body": "use issue tracker bug reports feature requests need help getting something working please use suggested resources cheers", "d": "5/2017"}, {"body": "hey trejgun thanks taking time write issue problem seeing due event persistence never actually updating passed input inside component enter number like event target new number since new value nt tracked nt changed react reverts back original value keeping input controlled would expect fork example track state appropriately updates change event handler see get expected behavior case hope helps", "d": "5/2017"}, {"body": "aweary thanks answer basically saying change order helpers thanks helps", "d": "5/2017"}, {"body": "fixed locally splitting ismountedmixin two js var ismountedpremixin componentdidmount function thisismounted true var ismountedpostmixin componentwillunmount function thisismounted false installing post spec mixed life ca nt find right repo pr though", "d": "5/2017"}, {"body": "use react unfortunately would recommend anyone else till issue patent rubbish would decent read google microsoft apple ok well good billions dollars fight needed companies nt ridicules unacceptable book", "d": "5/2017"}, {"body": "thanks feedback case might wrong idea patent grant means published faq hope helps", "d": "5/2017"}, {"body": "let say text field typed something text field later want get value something like html field stores value get element value called uncontrolled input done react well using react render input field tell initial value let say prefill input still need leave editable something like put cursor input try type nothing happen every time type react component rerender react see value supposed type first char like value becomes react overwrite controlled input specify value order update value must also specify onchange callback input event callback new suggested value input something like class mycomponent extends component constructor props super props makes controlled component hope explanation helps bit understand update state every time change input", "d": "5/2017"}, {"body": "used old engine stack switched use new engine fiber master uses instead however still uses stack moment", "d": "5/2017"}, {"body": "hi soutomario check", "d": "5/2017"}, {"body": "read need note production point function replaced empty shims save code size work dom components accept props current release pass unknown props plan future releases rely whitelists currently ca nt find good way extension retain prop types default component andor way get prop types html elements explicitly use props component declare pass though benefit writing explicitly outer component since react check inner component anyway", "d": "5/2017"}, {"body": "well trying get around warning thrown unknown property types sounds like future releases ok guess ignore thanks", "d": "5/2017"}, {"body": "future releases end dom see something like dom would recommend fixing components cause rather figure trying get around warning contains link explaining fix", "d": "5/2017"}, {"body": "yeah looking way get prop types span whatever building property provider course populating proptypes nt exist becomes difficult thing could come proptypes defined send everything let react sort type proptypesgetproptypenames proptypesgetproptypes method would make things like ideseditors easier implement", "d": "5/2017"}, {"body": "thing could come proptypes defined send everything let react sort pretty much intend dom integration work", "d": "5/2017"}, {"body": "valeriik possible meant open issue reactnative repo instead", "d": "5/2017"}, {"body": "sure sorry fault", "d": "5/2017"}, {"body": "worries", "d": "5/2017"}, {"body": "please read blog post add link warnings next version", "d": "5/2017"}, {"body": "application nt use reactproptypes reactcreateclass still gives warnings", "d": "5/2017"}, {"body": "means one dependencies use try update", "d": "5/2017"}, {"body": "observation using react typescript typical wildcard import react gets translated interoprequirewildcard enumerates react type causing warning displayed even nt actually use proptypes", "d": "5/2017"}, {"body": "oh interesting thanks sharing", "d": "5/2017"}, {"body": "gaearon general recommendation pattern pattern common among typescript developers lot get warning", "d": "5/2017"}, {"body": "sounds reasonable proptypes thing sure way prevent", "d": "5/2017"}, {"body": "see way specifying imports explicitly like wish mentioned somewhere migration guide recommended way import module way js babel shows warning", "d": "5/2017"}, {"body": "return promise sounds similar let keep discussion prototype slightly different approach might revisit future", "d": "5/2017"}, {"body": "cool true nt using componentwillmount mean stateful", "d": "5/2017"}, {"body": "issue bit general discussion", "d": "5/2017"}, {"body": "zabojad calling onload try class app extends component render return get svg loaded img loaded console", "d": "5/2017"}, {"body": "flaque nt passing function though passing result expression case one immediately calls evaluates see says nothing whether original issue reproducible confused counterexample", "d": "5/2017"}, {"body": "davezuko good point wrong class app extends component sayhello consolelog hello render return definitely print hello good catch davezuko", "d": "5/2017"}, {"body": "think might duplicate btw", "d": "5/2017"}, {"body": "hi confirm passing function attr indeed looks like duplicate thank looked", "d": "5/2017"}, {"body": "plan improve wording possible us give details warning message ca nt know code importing however easy click message chrome see expanded stack trace stack trace show library warning coming actionable item add gif showing blog post link blog post warning cc flarnie", "d": "5/2017"}, {"body": "gaearon wow fast thanks reply running electron node chromium redux react extensions enabled seeing anything stack trace since warning stop show call stack past", "d": "5/2017"}, {"body": "see perhaps electron nt retain full stacks warnings", "d": "5/2017"}, {"body": "gaearon sorry found need check pause caught exceptions directly watch call stacks left put others issue", "d": "5/2017"}, {"body": "aah explains thanks", "d": "5/2017"}, {"body": "node nt retain full stacks warnings use react ssr", "d": "5/2017"}, {"body": "might practical look stacks client side alternative could override throw error immediately catch print stack dirty works", "d": "5/2017"}, {"body": "quick question sure right place ask though see printwasted reactaddonsperf chrome timeline", "d": "5/2017"}, {"body": "help", "d": "5/2017"}, {"body": "sort first bullet point undoredo time travel makes perfect sense bit confused second third bullet points tracking changes determining rerender seem like thing nt reason tracking changes determine rerender also angular buddy swears angular supports mutating props able correctly track changes rerendering necessary apps created react far needed undo shouldcomponentupdate beyond two things seems reasons immutable props correct wrong unlike frameworks react requires explicit function call tell rerender setstate forceupdate would way child component since mutated props question possible mutate props would effect components higher tree nt immutable props thing gives us oneway data flow nt benefits terms predictability passing mutable pointer mutated parent child alike common pattern frameworks think worth lines docs detailing allowed trade offs involved something semiequivalent react talking feel could write submit pull request want make sure facts straight", "d": "5/2017"}, {"body": "welp setselectionrange nt extend contenteditable things bad closing sorry", "d": "5/2017"}, {"body": "ran today well inside statelesspure component reflifecycle events really wont work", "d": "5/2017"}, {"body": "ran issue today support andor standardized way specify unknown props html attributes described etc would awesome", "d": "5/2017"}, {"body": "arsduo reference issue description pr sure circle back issue merges", "d": "5/2017"}, {"body": "thank much may nathan hunzaker notifications githubcom wrote arsduo reference issue description pr sure circle back issue merges receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "ran issue aswell would amazing", "d": "5/2017"}, {"body": "forgive nt understand question nt expected mentality react pass data props purple parent would onclick event would change state children elements would state associated props example class purple extends reactcomponent constructor props super props thisstate purpleclick false handleclick thissetstate prevstate gt purpleclick prevstatepurpleclick render return would allow time click outer purple container effect state children", "d": "5/2017"}, {"body": "please provide project reproducing problem", "d": "5/2017"}, {"body": "guess need details probably jsfiddle minimal code required see error would help may want use template", "d": "5/2017"}, {"body": "website designed different people currently going code noticed different programming styles look code right componenta defined function componentb defined extending reactcomponent class componentb extends reactcomponent render const propa thisprops componentc function componentd class okay mix function class options must component extend reactcomponent", "d": "5/2017"}, {"body": "totally fine use functions classes code looks wrong js class componentb extends reactcomponent render const propa thisprops missing statement js class componentb extends reactcomponent render const propa thisprops return lt nt forget return fix issue regardless strange get proper error one posted byproduct earlier mistake diagnosis correct three questions fix help sure see one error console see one error check pause caught exceptions chrome sources pane try find original error think code might swallowing original error eg block", "d": "5/2017"}, {"body": "explen language arrival home see message greek thenk stay withe k help please afraid sent mymail android \u03c4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7 \u03bc\u03b1\u0390\u03bf\u03c5 dan abramov notifications githubcom totally fine use functions classes code looks wrong class componentb extends reactcomponent render const propa thisprops missing return statement class componentb extends reactcomponent render const propa thisprops return lt nt forget return fix issue regardless strange get proper error one posted byproduct earlier mistake diagnosis correct three questions fix help sure see one error console see one error check pause caught exceptions chrome sources pane think code might swallowing original error eg try catch block receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "gaearon using chrome apparently much better logging firefox chrome see console warning exception thrown hook handling onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren invariant objectonsetchildren callhook emitevent objectonsetchildren reactdomcomponentsetchildrenforinstrumentation reactdomcomponentupdatechildren reactdomcomponentupdatechildren reactdomcomponentupdatedomchildren reactdomcomponentupdatecomponent uncaught typeerror read property componentwillenter undefined constructorperformenter arrayforeach native constructorcomponentdidupdate measurelifecycleperf callbackqueuenotifyall reactreconciletransactionclose reactreconciletransactioncloseall reactreconciletransactionperform reactupdatesflushtransactionperform uncaught promise typeerror read property componentwillleave undefined constructorperformleave arrayforeach native constructorcomponentdidupdate measurelifecycleperf callbackqueuenotifyall reactreconciletransactionclose reactreconciletransactioncloseall reactreconciletransactionperform reactupdatesflushtransactionperform", "d": "5/2017"}, {"body": "updated packages npm made uncaught typeerror read property componentwillenter undefined go away main error occures line happens non production mode notice nextchildismounted imply executed child component mounted happen", "d": "5/2017"}, {"body": "need example could run debug", "d": "5/2017"}, {"body": "ca nt help nt provide code reproducing issue delete issue template", "d": "5/2017"}, {"body": "please provide information looking report bug make feature request", "d": "5/2017"}, {"body": "cc aweary nhunzaker", "d": "5/2017"}, {"body": "seems work fine", "d": "5/2017"}, {"body": "thanks report clarify mean said nt work hard debug sure behavior expecting behavior seeing peteotaqui showed appears work fine decimal values controlled components", "d": "5/2017"}, {"body": "aweary meant type decimal field goes blank", "d": "5/2017"}, {"body": "share jsfiddle reproducing behavior use template also verify version react using sounds like bug existed older release", "d": "5/2017"}, {"body": "thanks flagging nobody really maintaining wiki pages lot stuff outdated plain recommended try find good examples put instead", "d": "5/2017"}, {"body": "deleted broken link bigger issue pages looking official completely abandoned wonder someone community would taking care cc mrscobbler markerikson tylermcginnis would interested helping think prune examples articles wiki pages outdated overly complicated repos add good beginner midlevel content long free add separate section paid content high quality", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "course", "d": "5/2017"}, {"body": "sorry issue tracker react issue please file appropriate repository thanks", "d": "5/2017"}, {"body": "looks like bug happen", "d": "5/2017"}, {"body": "looks like minimal validation behind flag latest alpha release paths nt hit since nt even check function though edit check actually fine still forget invariant works sometimes also check undefined actually crash try return seems like another issue try changing example crash tab", "d": "5/2017"}, {"body": "warning link cause infinite loop might crash tabbrowser gaearon example showing returning cause infinite loop screenshot showing endless barrage errors open separate issue like", "d": "5/2017"}, {"body": "infinite loop probably", "d": "5/2017"}, {"body": "got thanks function issue think would fixed invariant checks moved block added correct code path warning done elsewhere", "d": "5/2017"}, {"body": "right treat unknown types empty special case since almost always bug early return nt think decided unsupported values either warn treat empty throw", "d": "5/2017"}, {"body": "one disadvantage throwing versus warning requires extra check production null edit guess already null check", "d": "5/2017"}, {"body": "think using warning would make easy components silently fail existing behavior throw well validation logic already bundle dead code right safely move outside check", "d": "5/2017"}, {"body": "actually ask could make type render work various components foo goo hoo etc need conditionally render right use class foo extends reactcomponent render return foo class goo extends reactcomponent render return goo class hoo extends reactcomponent render return hoo class app extends reactcomponent render consolelog foo switch thispropswhattorender case foo return case hoo return default return match reactdomrender documentgetelementbyid container would work instead could use map method components array", "d": "5/2017"}, {"body": "happy continue discussion however unless something old issue cover encourage create duplicate issues way demand attention", "d": "5/2017"}, {"body": "seems related discussion able extract anything actionable", "d": "5/2017"}, {"body": "get message meant stable release using alpha releases please prepared pieces place yet including docs new features", "d": "5/2017"}, {"body": "gaearon used create react native app structure merged back web project seems latest version react native depends beta version react tried downgrade reactnative version xcode project stopped working", "d": "5/2017"}, {"body": "oh see realize particular error message displayed old reconciler rn still uses get fixed please ignore part error boundaries feature available rn yet", "d": "5/2017"}, {"body": "gaearon mentioned versions bad config run", "d": "5/2017"}, {"body": "fine alpha version package really relevant contains little code nt worry still confused message gets printed though provide exact sequence steps reproduce", "d": "5/2017"}, {"body": "particular confused saying use rn", "d": "5/2017"}, {"body": "gaearon trying universal codebase main code powers ios app different entry points log bug app", "d": "5/2017"}, {"body": "see check version using sure using rn apps fine using supported right", "d": "5/2017"}, {"body": "gaearon ok interested downgrading supported version version must used well since could advise working tuple compatible versions tried downgrading warning output tried specifying wanted react ended installing anyway yarnlock something messed workflow", "d": "5/2017"}, {"body": "sounds expected caret means install latest version major want lock project need put without caret", "d": "5/2017"}, {"body": "would work previous versions react think nongoal something implement devtools side duck type checks etc providing boolean argument inject call enough", "d": "5/2017"}, {"body": "one thing need ensure highlights dev mode even react thinks prod mode example set nt uglify thus get deoptimizations caused code dev blocks", "d": "5/2017"}, {"body": "also opposite show dev uglify nt set tricky", "d": "5/2017"}, {"body": "think fixed bringing", "d": "5/2017"}, {"body": "maybe tomocchino provide historical context think time decision made years ago work consistently browsers confusing people coming web platforms would expect change event fire every change case react bigger issue fail handle change soon enough controlled inputs never update leading people think react broken team went calling retrospect might better idea polyfill keep name rather change behavior another event ship sailed long time ago might revisit decision future would encourage treat quirk react dom get used pretty quickly hope helps event behaviour actual onchange useful apps anyway quoting mdn different browsers always agree whether change event fired certain types interaction would want app rely far alternatives go react gives pretty much kind behavior use instead browser", "d": "5/2017"}, {"body": "warning getting proptype warning indicates likely using third party component proptype definition restricts round square see react nt warn using svg react library provides component", "d": "5/2017"}, {"body": "seems like issue issue react", "d": "5/2017"}, {"body": "hey using specific library provides component doable using context common choice theming small example showing accomplish asking specific ui library better asking issue tracker support forums", "d": "5/2017"}, {"body": "using reactcloneelement", "d": "5/2017"}, {"body": "hello sure understanding correctly could buttongroup component rendering children child props nt color props pass color props buttongroup button component", "d": "5/2017"}, {"body": "yeah use provide default props children demonstrated context frequently used theming popular ui libraries technically unstable api consider using provide good abstraction use case issue tracker meant bug reports feature requests additional support usage questions recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow feel free continue current discussion though clarifying questions", "d": "5/2017"}, {"body": "nhunzaker reason using loose equality checks text inputs", "d": "5/2017"}, {"body": "believe relic dealing edge cases number inputs short touch value property number inputs whatsoever chromesafari unexpected things like drop trailing decimal places clear invalid input etc needs go added condition specifically check type nt remove check wrapping text fixtures something review later today", "d": "5/2017"}, {"body": "sent pr sorry trouble", "d": "5/2017"}, {"body": "react mark component pure setting ispurereactcomponent property true even extend purecomponent base class nt ever define internal flag defining components extend may lead unexpected behavior future releases", "d": "5/2017"}, {"body": "currently method hint component pure impure seems weird decide include party component extends nt know whether impure whether use parent component", "d": "5/2017"}, {"body": "currently method purcecomponent hint component pure impure alternatively write implementation even share across codebase", "d": "5/2017"}, {"body": "probably talking different stories imagine need component find npm registry include root component however nt know whether component implements render method like case component impure change render result even though stays problem without reading source code unable tell impure impossible make decision whether let extends react share mechanism explicitly detect component purity result almost components inherit implement based props state finally impacts performance", "d": "5/2017"}, {"body": "gray zhang notifications githubcom probably talking different stories imagine need component find npm registry include root component however nt know whether component implements render method like case component impure change render result even though stays problem without reading source code unable tell impure impossible make decision whether let extends react share mechanism explicitly detect components purity result almost components inherit implement based props state finally impacts performance receiving subscribed thread reply email directly view github", "d": "5/2017"}, {"body": "gaearon heard screen reader users jsfiddle keyboardscreen reader accessible also remember l\u00e9onie watson talking chris codepen open issue also demos running githubpages react projects already also help plus allow developers inspect output browser npminstalling localserverrunning decide want tinker esp case often reason phone wo nt run stuff local network laptops house fine external githubpages example server help devs phones like mine view stuff browsers idea issue phone something noticed working stuff work", "d": "5/2017"}, {"body": "gaearon yes github would probably best moment asking around different blind programmer lists far found online js environment accessible code editor frankly use site see app look like finished tutorial code finished form somewhere code editor really least issues though lack button link names much important ca nt even see working example tutorial looks like see long line button could label buttons like blank square square x square put buttons table rather using css would whole lot accessible tictactoe needs square layout table element way get screen readers thanks", "d": "5/2017"}, {"body": "sorry previous comment said js fiddle jsbin excepting edit box", "d": "5/2017"}, {"body": "jsbin better ux easier use nt really matter live examples pretty easy see", "d": "5/2017"}, {"body": "gaearon hi dan progress", "d": "5/2017"}, {"body": "using windows would like get community help", "d": "5/2017"}, {"body": "get ask help place close find solution share reopen", "d": "5/2017"}, {"body": "like keep open keep track broken", "d": "5/2017"}, {"body": "getting error nesmalltown tried fixing made progress nt fix fully obviously workarounds rather real fixes anyway error solution replace files pattern regex error solution replace files pattern string error solution make change lets build process get farther c rootapps v modulesreactmain npm run build reactbuild build c rootapps v modulesreactmain npm run versioncheck amp amp node scriptsrollupbuildjs reactbuild versioncheck c rootapps v modulesreactmain node scriptstasksversioncheckjs starting reactdevelopmentjs umddev name provided external module proptypescheckproptypes optionsglobals guessing checkproptypes name provided external module proptypes optionsglobals guessing proptypes name provided external module createreactclassfactory optionsglobals guessing factory complete reactdevelopmentjs umddev starting reactproductionminjs umdprod name provided external module proptypes optionsglobals guessing proptypes name provided external module proptypescheckproptypes optionsglobals guessing checkproptypes name provided external module createreactclassfactory optionsglobals guessing factory complete reactproductionminjs umdprod starting reactdevelopmentjs nodedev complete reactdevelopmentjs nodedev starting reactproductionminjs nodeprod complete reactproductionminjs nodeprod starting reactdevjs fbdev complete reactdevjs fbdev starting reactprodjs fbprod complete reactprodjs fbprod starting reactdomstackdevjs fbdev reactbaseclasses imported srcisomorphicreactjs could resolved treating external dependency npm err windowsnt npm err argv c c run build npm err node npm err npm npm err code elifecycle npm err reactbuild build npm err exit status npm err npm err failed reactbuild build script npm run versioncheck amp amp node scriptsrollupbuildjs npm err make sure latest version nodejs npm installed npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err npm run versioncheck amp amp node scriptsrollupbuildjs npm err get information open issue project npm err npm bugs reactbuild npm err nt available get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err c rootapps v modulesreactmainnpmdebuglog however seen getting error nt know fix rather sense replacement make many files giving workaroundbased approach anyway maybe someone else figure next step us poor windows people deserted linux mac devs", "d": "5/2017"}, {"body": "venryx thanks attempt say pattern regex nt find typo", "d": "5/2017"}, {"body": "build windows issue two parts first part rolluppluginalias related issue take look rolluprolluppluginalias pr solve part fixed rolluppluginalias repository could use temporary solution create paste scriptsrollupbuildjs replace second part windows path replaced require string replace modules replacemodules rolluppluginreplace breaks windows path used could normalize replacemodules paths replace use rolluppluginreplace js use rollup repalce plugin windows paths breaks string dos nt replace function normalizereplacemodules maptoreplace const newmap objectkeys maptoreplace foreach key gt newmap key maptoreplace key replace g return newmap getplugins const replacemodules modulesgetdefaultreplacemodules bundletype objectkeys replacemodules length gt normalizereplacemodules make effect windows paths replace pluginsunshift replace normalizereplacemodules replacemodules lt venryx nesmalltown teemosauce ccsang please confirm solve issue", "d": "5/2017"}, {"body": "mhhegazy greate work thanks lot really much appreciated", "d": "5/2017"}, {"body": "mhhegazy btw execute commands follow fiberdebugger doc get error error srcindexjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcindexjs module found reactdom webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcappjs error srcappjs module found reactnooprenderer webstormworkspacereactfixturesfiberdebuggersrc srcappjs error reactdraggabledistreactdraggablejs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactdraggabledist reactdraggabledistreactdraggablejs error reactdraggabledistreactdraggablejs module found reactdom webstormworkspacereactfixturesfiberdebuggernodemodulesreactdraggabledist reactdraggabledistreactdraggablejs error srceditorjs module found react webstormworkspacereactfixturesfiberdebuggersrc srceditorjs error srcfibersjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcfibersjs error reactmotionlibtransitionmotionjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactmotionlib reactmotionlibtransitionmotionjs error reactmotionlibstaggeredmotionjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulesreactmotionlib reactmotionlibstaggeredmotionjs failed compile error srcindexjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcappjs error srceditorjs module found react webstormworkspacereactfixturesfiberdebuggersrc srceditorjs error srcfibersjs module found react webstormworkspacereactfixturesfiberdebuggersrc srcfibersjs error srcindexjs module found reactdom webstormworkspacereactfixturesfiberdebuggersrc srcindexjs error srcappjs module found reactnooprenderer webstormworkspacereactfixturesfiberdebuggersrc srcappjs error createreactclassindexjs module found react webstormworkspacereactfixturesfiberdebuggernodemodulescreatereactclass createreactclassindexjs think loader ca nt find corresponding modules press click linked module name ide find dist directory little confused know solve", "d": "5/2017"}, {"body": "nesmalltown work desired environment looks like env file nt make effect environment take spin get back related issue build end diffs table build succeed", "d": "5/2017"}, {"body": "nesmalltown run commands cmd powershell bash webstorm run run cmd try run webstorm take look", "d": "5/2017"}, {"body": "mhhegazy works methanks lot smiley", "d": "5/2017"}, {"body": "success using", "d": "5/2017"}, {"body": "zodiac thanks also trick", "d": "5/2017"}, {"body": "jsfiddle showing fixed latest react alpha release", "d": "5/2017"}, {"body": "closing since realize reported react team aware would appreciated link spare rabbit hole case others stumble upon", "d": "5/2017"}, {"body": "updated issue", "d": "5/2017"}, {"body": "gaearon something need get approved internally create labels close", "d": "5/2017"}, {"body": "really please feel free make experience system use works well", "d": "5/2017"}, {"body": "babel system works us make sure stylistically similar existing names update links need updating", "d": "5/2017"}, {"body": "debated internally really reached consensus going close sorry addressing sooner instead inconsistent would prefer address issues warning system separately future", "d": "5/2017"}, {"body": "okay adjust warning get clarification hypnosphi questions", "d": "5/2017"}, {"body": "changelog git tags updated please reopen comment missed anything", "d": "5/2017"}, {"body": "thanks website still said latest probably want update site rebuild", "d": "5/2017"}, {"body": "bumped website version", "d": "5/2017"}, {"body": "added link class mdn page happy take prs adding links think reasonable solution", "d": "5/2017"}, {"body": "issue react injects properties dynamically actually road probably using stale externs commit fixed seeing", "d": "5/2017"}, {"body": "anmonteiro compiling directly npm externs guess would help thanks", "d": "5/2017"}, {"body": "able find work around running problem using webpackclosurecompiler", "d": "5/2017"}, {"body": "regarding downgrading deprecation warnings addon packages proptypes package warning syntax throw prefer downgrade reacttransitiongroup nt deprecation warnings none addons deprecated standalone builds nt see deprecation warnings think could consider update deprecation proptypes library check addons deprecation warnings release new versions done wondering think gaearon", "d": "5/2017"}, {"body": "transitiongroup deprecation warning let add forgot make sure wording says moved since moving happened looks like never added moved warnings utilities since either moved deprecated adding messages release hopefully meant gaearon", "d": "5/2017"}, {"body": "proptypes package warning syntax throw prefer downgrade removed apis would throw think makes different additionally occurrences warning false positives caused mismatching version react think ever seen code relying pattern practice prefer make quieter looks like never added moved warnings reactaddons utilities since either moved deprecated adding messages release hmm sorry unclear meant talking deprecating meant two entry points specifically two entry points specifically npm ones print deprecation message break unlike packages importing gone example keep working separate discussion think would make sense deprecate addons require changes code example would still work umd build made specifically probably postpone deprecating getters sure approach well reacttransitiongroup nt deprecation warnings replacement promoting two packages instead reach react internals people use", "d": "5/2017"}, {"body": "also ideally get version stands completely botched amd environments", "d": "5/2017"}, {"body": "removed apis would throw think makes different true thought reason would throw nt make sense downgrade warning proptypes add deprecation warnings probably postpone deprecating reactaddons getters sure approach well sounds good revisit later", "d": "5/2017"}, {"body": "safe cherrypick flarnie would like", "d": "5/2017"}, {"body": "yesterday saw comment nhunzaker thanks", "d": "5/2017"}, {"body": "great discussion definitely hear need better api around warnings come great examples feedback documented think open adding complete way configure warnings future versions well require attention starting figure fit roadmap happens open separate issue continuing discussion tagging spicyj tomocchino visibility since recently talking improving react warnings", "d": "5/2017"}, {"body": "gaearon made new issue closed one hides issue", "d": "5/2017"}, {"body": "saw closed sorry open source projects github generally work happy continue discussion allocate time answering comments please consider issue direct competition open issues generally try answer find time ping thread feel like communication enough", "d": "5/2017"}, {"body": "believe saying passing null likely set enduser component thisel property null forcing old value collected assumption always correct showed last example yes least possible clean works simple cases like mentioned possible complex cases split answer two three explanations call unmounting call update function changes call update arrow function call unmounting consider alwaysmounted grandparent component passes ref callback several levels deep list item mount unmount never notify ref node unmounting grandparent way cleaning ref would hold onto dom node forever since grandparent never unmounts creating memory leak grandparent component fault notify unmounting give tools stop holding onto node time since refs firstclass values composable functions expect refs coming components direct parents fact one motivations making functions similar issue pops comes something clones ref along way example cases like might want run side effect set field add none things reversible unless also notified ref detached since ref correspond component dom node arbitrarily deep tree component lifecycle helpful protect leaks even simple case conditionally render something relying cleanup helps free dom reference soon subtree unmounts eg state change rather component unmounts important resourceconstrained environments react native calling one possible disposable mechanism could come convoluted way signal ref empty eg practice though using single value attribute simpler also makes easier spot places side effect subscription gets added removed code would colocated one function verbose common case setting field nice bonus happens nicely detach field reference use simple way assignment matter deeply ref owner child separated component hierarchy ergonomics good defaults important call update function changes say replaced two different functions reasons explained important least notify node detached hope ref could something like coming different owner components accept cleaned makes sense call calling instance dom node like would detach attach detaches attaches already talked detaching refs important brings us call update arrow function arrow functions different referential identity inside call know sure different one since harm detaching old one update attaching new one since vitally important corner cases okay calling arrow functions way described annoying work around declaring bound method class case would referentially identical every call react would tiny bit extra work detaching attaching would know ref changed would still call node unmounting hope helps", "d": "5/2017"}, {"body": "regarding question also outer component using component nt necessarily know component use function outer component author nt worry passed function possibly awkwardly called twice null expected values render consider part ref callback contract many different function contracts function returns promise nodestyle errback function reducer etc react ref callback also contract use signal disposal make sense expose contract outer component always wrap function provided user way around modify contract seam happening could also make clear exposing contract naming prop suffix fact linked earlier intentionally exposing ref callbacks props fairly popular guarantees contract people find useful", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "problem workaround currently", "d": "5/2017"}, {"body": "gaearon looks like last release making sync react packages intentional", "d": "5/2017"}, {"body": "addons sync one released times independently fixes coincidence lined plan keep releasing yes latest versions likely going stay latest", "d": "5/2017"}, {"body": "since almost two months since last update issue gon na give go", "d": "5/2017"}, {"body": "going merge rogeliog pr nt gotten pretty busy sorry going close issue favor", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "thanks lot dan try later week almost finished udemy introduction hopefully smoother time around tue may dan abramov notifications githubcom wrote closed receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "sounds great please let us know whether helps", "d": "5/2017"}, {"body": "progress issue well desired feature one way another", "d": "5/2017"}, {"body": "progress would issue ideas make work want give try please feel free", "d": "5/2017"}, {"body": "reasonable build renderers using reactfiberreconciler fine unstable wondering final decision whether reconciler supported public api point", "d": "5/2017"}, {"body": "supported public api nt decided expose okay use old exposed version meantime", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "gaearon suggest something one recently experiment writing virtual dom without libraries lines starting already done implementation lite version used attached nodes wherever turned able override parent component found pretty useful easy js const shouldcommentslistupdate props nextprops gt return propscomments nextpropscomments const list items gt itemsmap item gt item const comments comments gt gives us ability overwrite inner implementation based parent rules well apply function nodes components let know think solution", "d": "5/2017"}, {"body": "repository umd module work react undefined line like report issue sure supposed", "d": "5/2017"}, {"body": "please file issue repo module branch since nt plan development", "d": "5/2017"}, {"body": "im trying get hands dirty ca nt find information fiber default renderer flag something fiber renderer actually exported", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "new test", "d": "5/2017"}, {"body": "please stop comments notify people participating discussion project maintainers", "d": "5/2017"}, {"body": "brigand rewrote parts tutorial following along easier let us know still struggling happy look remaining issues case missed anything", "d": "5/2017"}, {"body": "think safe assume markup accessible malicious attackers everything else avoiding case inputs sounds beneficial surface added complexity would nt worth minimal security benefits going go ahead close since nt anything actionable react team feel free ask clarifying questions", "d": "5/2017"}, {"body": "hey devdoomari thanks request sorry took long respond nt think something want extracting internal module external one makes difficult iterate new features address bug fixes since requires orchestration package release cycles feel free use files inspiration utilities though lot stuff would nt entirely relevant outside context react internals anyways may better defining tailored utility based functionality provides", "d": "5/2017"}, {"body": "since example longer repo", "d": "5/2017"}, {"body": "getting error ie build application works fine mozilla chrome moreover standalone express server app runs fine ie built js file using webpack babel fails navigate used inside jsp file", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "brigand advice good since update assume figured future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "5/2017"}, {"body": "gaearon petarslavnic may little topic nt want start new thread view wasted time chrome performance tools", "d": "5/2017"}, {"body": "andrewdavidcostello thanks saving day", "d": "5/2017"}, {"body": "sorry delay intentional moved disabled click event behavior time wrapper around buttons simpleeventplugin tradeoff would allow trigger click event disabled buttons please correct wrong bypasses event plugin system", "d": "5/2017"}, {"body": "hi gaearon anything remaining pick", "d": "5/2017"}, {"body": "bump word issue hitting problem selenium", "d": "5/2017"}, {"body": "fixing issue", "d": "5/2017"}, {"body": "fixed issue way correct parent tag form fieldset disabled button fire case clicking children span div even parent div disabled children button fire click span onclick fire alert hello gt click case click span onclick fire alert hello gt click click span onclick fire click alert hello gt issue didnt occuered firefoxbut chrome safari issue issue leave specification browser question test test give reactcomponent object traversetwophase method browser traversetwophase method receive simple object tag type receive reactcomponent object write test case", "d": "5/2017"}, {"body": "must one people view use constructors instead componentwillmount mistake might holdover normal class idioms regarding keeping constructor thin never ever performing operation inside nt needed initialize object things used arguments would use constructor constructor seems like private react implementation detail signature constructor need change sure blindly super args also see developers omit second parameter constructor time seems like bad practice componentwillmount solves makes subclassing components difficult fan inheritance general although found usages appropriate already product constructor used may constructor much parent component erased subclasses componentwillmount also solves choose execute super classes version might best programming practice though argued essentially makes unit testing components difficult longer stub componentwillmount event nt want called proved fairly invaluable testing certain mounting operations using enzyme without worry actually making call since typically done using redux provide props usually done without problems anything think usage constructors avoided componentwillmount", "d": "5/2017"}, {"body": "jamespedid saying sometimes want create instance component without mounting unit tests call methods test work", "d": "5/2017"}, {"body": "would ideal although sure works react world used enzyme seems kind silly use shallow wrapper grab instance able call methods able new general nt investigated though mostly use enzyme although would nt hard test", "d": "5/2017"}, {"body": "jamespedid nt understand mean complaint imagining probably way restructure code makes easy unit test without needing monkeypatch noop trying test certain mounting operations perhaps could component call standalone function props mounts unit test standalone function would try avoid monkeypatching component want test test totality behavior mounts", "d": "5/2017"}, {"body": "experiencing bug hopes help reproduce steps take open firefox using upload file refresh page upon refresh see links", "d": "5/2017"}, {"body": "would add zdila fix using definitely fixed issue although might still consider bug", "d": "5/2017"}, {"body": "finally getting back around distractions noticed new version createreactclass published npm looks like still based code simple creating pr dependencies createreactclass packagejson updated take crack branch made", "d": "5/2017"}, {"body": "yeah chrome bug way fix set attribute", "d": "5/2017"}, {"body": "idea overcome bug third party components like uses could use jest snapshots", "d": "5/2017"}, {"body": "fix backported", "d": "5/2017"}, {"body": "mean", "d": "5/2017"}, {"body": "yes aristona typo edited comment thanks", "d": "5/2017"}, {"body": "using cloudflare please disable autominification html", "d": "5/2017"}, {"body": "issue raises wanted embed facebook video site localhost know right way react header component put code html video one routes video renders making mouseover video get error invariant violation unable find element id someone may idea never done iife react thank", "d": "5/2017"}, {"body": "error code want render new component already imported render component trying use", "d": "5/2017"}, {"body": "anyone gotten autoplay video work android react seems work ios playsinline autoplay get work consistently android limited android version", "d": "5/2017"}, {"body": "combination running webpack p using uglify plugin causes issue regarding p flag think reading react docs optimizing performance wbepack section webpack docs building production clarify people get errors warnings combining two things p flag build script webpacks docs state running webpack p equivalently webpack optimizeminimize define processenvnodeenv production performs following steps minification using uglifyjsplugin runs loaderoptionsplugin see documentation sets nodejs environment variable triggering certain packages compile differently nt deep background webpack seems code p flag webpack accomplish thing confirm small project testing purpose running build script webpack p flag without code webpackconfigjs results code running opposite build script without p flag adding code webpackconfigjs either way minification errors warnings using minified copies development versions warnings like react redux removed note windows nt seem work packagejson build set nodeenvproduction yarn run clean amp amp webpack webpackconfigjs new webpackdefineplugin processenv nodeenv jsonstringify processenvnodeenv getting warning first place seems like nodeenv never set production fixed using crossenv", "d": "5/2017"}, {"body": "running via nodenpm via umd bundle tooling run client server via node sorry completely forgot respond scenario runs ci local dev machines bundle bundling recently switched using webpack webtamp instead gulp creating bundle specific unorthodox js perspective unit testing requirements works well resolved issue still great work seems solution found", "d": "5/2017"}, {"body": "hi got kind error img element uncaught typeerror read property reactinternalinstance null import react react import logoimage logopng const logo gt return using urlloader even hardcoding value src attribute get error edit replace image div use image background issue weird stuff impression something done passed years without issue", "d": "5/2017"}, {"body": "hade exact issue problem included javascript files multiple times johndugan pointed would possible react throw warning senses included multiple times", "d": "5/2017"}, {"body": "js import react component react import assetscssglobalcss import album class app extends component render return export default app get error try render electron webpack image rendered properly following error message", "d": "5/2017"}, {"body": "isaachinman nt tried personally", "d": "5/2017"}, {"body": "react likely include streaming renderer tomocchino working nt plan add one react", "d": "5/2017"}, {"body": "spicyj neat nt know tomocchino hacking", "d": "5/2017"}, {"body": "edit removed avoid confusion", "d": "5/2017"}, {"body": "edit removed avoid confusion", "d": "5/2017"}, {"body": "confused trying want exclude build library depends standalone version need put externals enough issues standalone please file issues get answers posting thread makes confusing thread completely different internal structure information thread relevant putting together comments like confuse future readers relation two except one fork", "d": "5/2017"}, {"body": "gaearon happening firefox strange bug resize events fire whenever happen scheduled via event loop happening instantly mean concurrency problems ofc functions run time single javascript context behaviour checked u meet resize window observe consolelogs resize listener flooding console original issue happens concurrent running probably problem use internal state thing happens chrome event however idea yet happens input even controlled react focus", "d": "5/2017"}, {"body": "providing workaround seems prevent issue couldnt reproduce manually resizing probably due less frequent calls causing resizes programatically really quickly issue surfaced quite frequently fix disappeared completely introducing workaround used snippet", "d": "5/2017"}, {"body": "thought server side rendering side effects free apparently use inject content leaflet popovers happens cycle parentsetstate parent rerenders triggers componentdidmount child component map wrapper map wrapper create clusters create associated popovers calling reactdomserverrendertostaticmarkup bunch stuff trigger following stack trace could understand little even though called rendertostaticmarkup care seems shared state already browser side transaction probably able make small repro project theses steps edit chrome though", "d": "5/2017"}, {"body": "seeing error chrome beta browsers fine", "d": "5/2017"}, {"body": "getting error chrome well nt made updates changes actually think react devtools got updated yesterday checked disabling devtools makes error go away enabling devtools bring back first reload second reload opening react panel devtools", "d": "5/2017"}, {"body": "disabling react devtools fixed issue also", "d": "5/2017"}, {"body": "disabling react devtools worked well", "d": "5/2017"}, {"body": "react devtools issue fixed react devtools appear chrome addon store within hour check updated yet big thanks pioul filed bug report devtools", "d": "5/2017"}, {"body": "hey running problem come workaround use contenteditable", "d": "5/2017"}, {"body": "think able close release", "d": "5/2017"}, {"body": "see merged issue closed", "d": "5/2017"}, {"body": "thank", "d": "5/2017"}, {"body": "experiencing issue react using reactmodal", "d": "5/2017"}, {"body": "experiencing issue please create example reproducing diagnose thanks", "d": "5/2017"}, {"body": "sorry forgot attach example link forget bug caused incorrect error handling putting react erroneous state", "d": "5/2017"}, {"body": "gaearon gon na try", "d": "5/2017"}, {"body": "commited pr adds onload onerror events svg still missing others like onunload onresize onscroll onzoom etc thank gaearon mentioning correct file name", "d": "5/2017"}, {"body": "key definitely bad idea", "d": "5/2017"}, {"body": "haha yes long sense moved away solution", "d": "5/2017"}, {"body": "ismounted function removed", "d": "5/2017"}, {"body": "add true end window listener enable capture mode working thanks probablyup", "d": "5/2017"}, {"body": "rickhanlonii sure care though performance implications passing props like pure children always force render removing benefits pure components use pure components heavily starting become big problem far conclude two options create new object eg get rid warning leave unnecessary rerenderings affected components create style object outside component get rid unnecessary rerenderings leave mutation warning anything", "d": "5/2017"}, {"body": "officially added html spec chance yall might consider reopening", "d": "5/2017"}, {"body": "created input wrapper solve race condition anyone suggestions fix known issues please open ticketpr", "d": "5/2017"}, {"body": "problem wrapping returns nt help distinguish", "d": "5/2017"}, {"body": "needed spicyj", "d": "5/2017"}, {"body": "think original post explains issue detail problematic reason please open new issue", "d": "5/2017"}, {"body": "use case replacestate company app creating custom forms component takes order definition json request creates various forms different types create value state store keys changes far good problem using reactrouter customorder ordernumber component tied customorder moving one order number next different page state remains previous custom order workaround thinking creating function const initialstate intitial state thisreset gt thisstate initialstate thisforceupdate p", "d": "5/2017"}, {"body": "brianboyko sounds like store form state object state instead ie moving one order number next different page state remains previous custom order nt seem like preferable behavior probably use ordernumber key element", "d": "5/2017"}, {"body": "according changelog since suppose possible", "d": "5/2017"}, {"body": "glad saw thread app react encountering windows phone useragent", "d": "5/2017"}, {"body": "seems clear bug react passing valid attribute form element right behavior especially since react supports server side rendering chance behavior change soon", "d": "5/2017"}, {"body": "hi first aware gaearon seems nt work production build trying solve live retranslation page including reexecuting router branch worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting bug tricky production best resolved updated meantime may something wrong", "d": "5/2017"}, {"body": "pavel use reactdeepforceupdate production nt often switching languages use give child reference forceupdate tree retaining state much better forcererendering whole tree magical exactly changing attribute context object default react wed may pavel lang notifications githubcom wrote hi first aware gaearon reactdeepforceupdate seems nt work production build trying solve live retranslation page including reexecuting router featurereactintl branch reactstarterkit worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting tricky production best resolved reactintl updated meantime may something wrong receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "adding name list developers wasted hour debugging problem", "d": "5/2017"}, {"body": "use jsonml lot flow anybody know good reacttojsonml custom renderier", "d": "5/2017"}, {"body": "drom", "d": "5/2017"}, {"body": "paranoidjk need exactly opposite tool would take react virtualdom structure render jsonml like object object proxy custom implementation reactdomrender", "d": "5/2017"}, {"body": "seems able get around ismountedsetstate inconsistencies declaring separate private variable mounted instance setting componentwillmount componentwillunmount ie seems work intended anyone knows might ideal ears also would nice react could handle implicitly seems ridiculous nt obviously nt want set component state component longer mounted nt let us fail silently sheesh", "d": "5/2017"}, {"body": "discussion little old think reasonable conclusion recommend use apis provide cancellation example axios lets create canceltoken requests cancel component unmounts js componentdidmount thiscancelsource axioscanceltokensource axiosget canceltoken thiscancelsourcetoken componentwillunmount thiscancelsourcecancel agree cancellation necessarily suggest using different library asking library use add cancellation api right way solve problem also eliminates whole class bugs example fetch data based props also cancel requests previous props risk getting new response earlier older response potentially displaying wrong ui cancellation already solves race conditions one reason embrace choose implement cancellation reason setting field way go yes clunky clunkiness reminds application using network less efficiently application might memory leaks application might race conditions case react throw errors happens anymore intentionally keep suboptimal case clunky developers incentives implement right solution cancellation edge cases related libraries like redux would recommend perform side effects might affect tree unmounted sounds like potential performance issue anyway enqueue side effects flush next tick like sum warning error available classes anyway right fix implement cancellation libraries like make easy always either ignore warning use field cases like redux better dispatch next tick let tree unmount first think covers everything issue closing thanks everyone discussion", "d": "5/2017"}, {"body": "regarding case seems like reordering call would solve issue", "d": "5/2017"}, {"body": "gaearon contextualize part comment please application using network less efficiently cancelling promisified http request ultimately calls xhrabort simply unregisters callback client side close socket browser since many requests tabs could using afaik sockets expensive likely shared cancellation client side automatically interrupt db query server moreover happens mutative operation wo nt roll back automatically cases browser closing socket user closes browser server end sending request client anyway thus using network bandwidth like corrected wrong subtleness comment would good greater context around discussion includes server network thanks", "d": "5/2017"}, {"body": "fair nt know nt close socket thanks correcting", "d": "5/2017"}, {"body": "reduxlogic nice cancellation mechanism", "d": "5/2017"}, {"body": "fastclick get along event switch", "d": "5/2017"}, {"body": "observed triggering rerender react sorts things blow correction ing action redux store react causing things blow", "d": "5/2017"}, {"body": "want join chorus agree least returning promise would nice times nt want use could make component render recursively forever", "d": "5/2017"}, {"body": "gaearon think react team missing issue popular put shoes js developer learning new libraries express gulp etc started understand beauty futures streams asyncawait take pride knowing avoid callback hell many peers decry downfall js start using react heavily find core async part api uses callbacks done learning bad one small issue going keep major pain point new react developers either promises longer used ubiquitously b setstate longer used asynchronously c react returns promise setstate", "d": "5/2017"}, {"body": "working examples libraries enhanced support promises retaining backwards compatibility callbacks case callback param provided would call usual however callback passed would return promise change straightforward similar ctrlaltdylan snippet added check callback param", "d": "5/2017"}, {"body": "chrisblossom really except hotfixing line", "d": "5/2017"}, {"body": "created input wrapper solve race condition anyone suggestions fix known issues please open ticketpr", "d": "5/2017"}, {"body": "sorry late reply hope accepted augriedinger agree behavior using shape proptype assume deep merge prop expected also imagine cases deep merge explicitly wanted example two props depending already came across case maybe solution would additional argument like say better way", "d": "5/2017"}, {"body": "danielsundberg implementation one get work component classes", "d": "5/2017"}, {"body": "voted would nt use since changes method derived classes need override render specialcase knowledge error handling base class works propagates affect react components current workaround using wrap render method base class constructor calling hacky requires changes derived classes need written least constrains impact hack much looking forward proper error boundaries", "d": "5/2017"}, {"body": "merge declared styles well specific inline style like background boxstyle overwritten order assignment", "d": "5/2017"}, {"body": "completely unnecessary already iterate range place values array use array simple solution considered programming basics javascript var weightrange var lt weightrangepush reactproptypesoneof weightrange isrequired want get fancy use custom prop solution javascript productproptypes weight function props propname componentname let weight props propname", "d": "5/2017"}, {"body": "genericlady works way build array first separately built allows encode gt gt lt lt semantics directly validator without needing create large array inmemory", "d": "5/2017"}, {"body": "ljharb line shortened", "d": "5/2017"}, {"body": "genericlady took positional arguments clean way encapsulate intentionally chose object better solution please file issue airbnbproptypes repo discuss", "d": "5/2017"}, {"body": "anyone else like ends looking ticket think need roll contenteditable fancier text input make sure check facebook draftjs draftjs plugins project might save lot time", "d": "5/2017"}, {"body": "clear problem solved still nt see bundle different packages serverclient render something different without checksum warning warning btw actually mean react could find real solution hopefully wrong would mean impossible use react isomorphic apps many scenarios well least scenarios involving canvas svg video animations lot code related modules nt needed server cases break code window defined tried something like course nt work idea use react precisely define different bundlesmarkups isomorphic way without incurring warning", "d": "5/2017"}, {"body": "tried something like course nt work idea use react precisely define different bundlesmarkups isomorphic way without incurring warning browser version usually bundled separately normally outside react use technique like used isbrowser package basically module returns always returns server tell packager browserifywebpacketc replace module one returns always returns bundled shipped browser", "d": "5/2017"}, {"body": "thanks dantman still could nt understand deal webpackreact get server client bundles way say keep trying also found simplest way avoid requiring libraries could break server leave outside bundle normal tag sometimes actually want use public cdn still ideal many scenarios neither server react complain someone example used webpackreact would great", "d": "5/2017"}, {"body": "add writing party widget injected using react use css library cleanslate gives dom completely reset css also means use important styles necessary anyone making widget ca nt trust styles rest page despite good practice necessary", "d": "5/2017"}, {"body": "react css support seems little behind times css support actually properly support features css standard also css modules key issues css easily addressed means modules namely global namespaces code isolation see tool used reactonrails projects rebass css module example seems limited support works decent modal popup though", "d": "5/2017"}, {"body": "tectract css modules far outside scope react core also inline styles isolated css modules", "d": "5/2017"}, {"body": "usecase using reactnative reactnativevectoricons want prop component determined data received promise", "d": "5/2017"}, {"body": "supported think would make lots complex code easier understand possibly open new async patterns", "d": "5/2017"}, {"body": "issue want ssr search predict props also content fetched action componentwillmount wait props prepared render props string", "d": "5/2017"}, {"body": "stumbled accross aswell really annoying spicyj news", "d": "5/2017"}, {"body": "nt tested might work higher order component component base class really fan deep inheritence hierarchies demonstrates fairly easily get around feature yet existing react could easily wrap delegate although would bit verbose less performant react changing pass function consistent functional components nt look like would break backwards compatibility happy create pr get time", "d": "5/2017"}, {"body": "stevetaylor", "d": "5/2017"}, {"body": "syranide nt side effects long nt break rules safe terms event handler callbacks recreated render cycle reference always current inline handler something like web service call inline callback executed subsequent ticks potentially subsequent renders something wrong least stop inlining handlers besides handlers something subsequent tick abort various lifecycle handlers case something bit stupid like calling unmounted component let stale web service callbacks pile", "d": "5/2017"}, {"body": "reproducing issue encountered irisschaffer isomorphic application render static page react express client export props use page component even handling password input value react client react component deletes saved password input even chrome shows briefly disable javascript browser saved password stays place issue visible chrome using last version related react saved password accessible elementvalue event fired dom like focus key event etc tried simulate event fire javascript luck fill value property", "d": "5/2017"}, {"body": "also raise warning checkboxes input really control checkedvalue attribute might arbitrary element controls see valuable newbies edge cases add noise logs cases said would neigh impossible come proptype accurate useful time also fwiw checked warning checkboxes shows value checked element checked nt raise warning probably separate issue", "d": "5/2017"}, {"body": "tswaters case checkbox disabled readonly", "d": "5/2017"}, {"body": "sumbad children contain array requires separate check reactdomserverrendertostaticmarkup render arrays", "d": "5/2017"}, {"body": "reordering accessibility", "d": "5/2017"}, {"body": "happening jsdom well case team project standards nt going accommodate leaving errors console tests run suppress stub obnoxious preventing getting work merged project", "d": "5/2017"}, {"body": "encountered issue today windows phone call method specified onchange fix going applied", "d": "5/2017"}, {"body": "good way animate removal delaying instance call delete function updates state saying element x removed sets timeout make ajax request meanwhile component recive signal animate another way never remove element always visible state changed materialui uses instance", "d": "5/2017"}]