[{"title": "react variables scope defined", "body": "mostly security question react store javascript variablesstate way window object access variable defined inside react lets say also using redux store sensitive data variable state way attacker able perform successful xss attack could something like", "num": "10080", "d": "6/2017"}, {"title": "input typeradio incorrectly trigger onchange handler", "body": "bug put several input type radio name jsfiddle example onchange handler triggered individual input mouse click input happen example try click different radio inputs several times next clicks consolelog output expect trigger onchange every time click nonselected radio input bug reproduces several latest versions react least os ubuntu try latest chrome latest firefox", "num": "10078", "d": "6/2017"}, {"title": "bootstrap checkbox button triggered react", "body": "want request feature report bug bug current behavior onchange event triggered click button current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior click button binded onchange event supposed triggered versions react browser os affected issue work previous versions react sure version", "num": "10075", "d": "6/2017"}, {"title": "invalid authentication token present redirect user authentication page stage", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10074", "d": "6/2017"}, {"title": "missing return lists keys documentation", "body": "want request feature report bug reporting bug current behavior keyword missing documentation", "num": "10073", "d": "6/2017"}, {"title": "feature request warnings hook", "body": "want request feature report bug want request feature current behavior warning code hardcoded call makes hard integrate warnings tools workaround could use webpack alias fork displays onscreen use case similar another use case integrate react warnings testing infrastructure helps us better see warning belongs test expected behavior react allows library user override default warnings behavior versions react browser os affected issue work previous versions react workaround works react still work react flat bundles means still hook probably breaks flat bundles stopped", "num": "10072", "d": "6/2017"}, {"title": "react amp reactdom bundle size expand", "body": "try bundle react amp reactdom using browserify code results follows results see tbundlejs commented something js cat nodemodulesreactindexjs use strict processenvnodeenv production moduleexports require cjsreactproductionminjs else moduleexports require cjsreactdevelopmentjs bundled react reactdom bundled react next reactdom next something wrong", "num": "10071", "d": "6/2017"}, {"title": "nt convert attributes dom elements strings custom elements", "body": "want request feature report bug feature current behavior react converts values strings passing native methods dom elements expected behavior custom elements landing browsers possible custom elements extend least chrome custom things input values passing onto means custom element authors accept values strings bring performance benefits example imagine custom elements designed rendering webgl using imperatively overhead strings avoided example suppose class react converts values strings ever passing custom element authors allow end users benefit performance improvements browsers allow anything passed react custom element nt extend native super class string conversion anyways react nt case would awesome could pass numberbased values webglrendering custom elements propagate directly webgl without convert strings numbers every tick hundreds thousands webgl objects versions react browser os affected issue work previous versions react", "num": "10070", "d": "6/2017"}, {"title": "element type invalid thrown nested functional component", "body": "want request feature report bug think bug current behavior trying render child imported exports function function b elsewhere reference fine note purely functional think tracked issue w stack trace right info added ready thrown mounting element recognized mean recognized react component alright instantiatereactcomponent instantiatereactcomponentjs instantiatechild reactchildreconcilerjs anonymous reactchildreconcilerjs traverseallchildrenimpl traverseallchildrenjs traverseallchildrenimpl traverseallchildrenjs current behavior bug please provide steps reproduce possible minimal demo problem via similar template could reproduce jsfiddle coz involves module though expected behavior element recognized mounted alright versions react browser os affected issue work previous versions react react google chrome os x strangely happens built linux already ruled upperlowercasing issue tested mounted alone working alright nt tested w previous version react", "num": "10069", "d": "6/2017"}, {"title": "enhance feature request hope provide render props state", "body": "hope provide js class app extends component use", "num": "10067", "d": "6/2017"}, {"title": "react release", "body": "react release", "num": "10066", "d": "6/2017"}, {"title": "feature request support serverside rendering nonstandard dom attribute names eg amp prop value", "body": "want request feature report bug request feature working project build amp page react server side rendering issue add custom attribute builtin amp element order able use ampbind need able output bindings special attributes form eg amp carousel example work ampbind current behavior parsing error unexpected token fatal versions react browser os affected issue work previous versions react information read discussion pr", "num": "10064", "d": "6/2017"}, {"title": "read react source code amp find dir special component function reactpurecomponent", "body": "read react source code find dir path special component function defined confused nested dirs amp folders", "num": "10062", "d": "6/2017"}, {"title": "displayname questioning still needed", "body": "used error messages dev tools hocs would argue valuable mode even comes error messages think never seen production log containing sure though never valuable dev mode shouldnt ditch adding write ditching transformcodemod inferred functionsclassesvariables anyway remaining use case would using hocs im wrong let know would however fix minor problems smaller build outputs slightly remove problem unintentionally preventing treeshaking sfcs flat bundles read", "num": "10060", "d": "6/2017"}, {"title": "ff mobile duplicated characters controlled component", "body": "want request feature report bug bug current behavior go modified version controlled components docmentation page put chars upper case type input get type b get aab expected behavior ab versions react browser os affected issue work previous versions react codepen uses react bug occurs firefox mobile desktop version tested bug occurs change case", "num": "10059", "d": "6/2017"}, {"title": "installation warnings errors ubuntu", "body": "want request feature report bug report bug current behavior receiving errors warnings executing command current behavior bug please provide steps reproduce possible minimal demo problem via similar template creating new app node received following benjamin thor myapps createreactapp myfirstreactapp creating new react app homebenjaminmyappsmyfirstreactapp installing packages might take couple minutes installing react reactdom reactscripts fsevents install homebenjaminmyappsmyfirstreactappnodemodulesfsevents nodepregyp install fallbacktobuild nodepregyp info worked ends ok nodepregyp verb cli nodepregyp verb cli homebenjaminmyappsmyfirstreactappnodemodulesfseventsnodemodulesbinnodepregyp nodepregyp verb cli install nodepregyp verb cli fallbacktobuild nodepregyp info using nodepregyp nodepregyp info using node linux nodepregyp verb command install nodepregyp info check checked found nodepregyp http get nodepregyp http nodepregyp err tried download nodepregyp err prebuilt binaries found fsevents node abi falling back source compile nodegyp nodepregyp http status code downloading tarball nodepregyp verb command build rebuild gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror make entering directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild solinkmodule target releaseobjtargetnode copy releasenode make leaving directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild nodepregyp info ok npm notice created lockfile packagelockjson commit file react reactdom reactscripts added packages expected behavior create app without warnings versions react browser os affected issue work previous versions react react version latest operating system distributor id ubuntu description ubuntu lts release codename xenial browser used yet node nix", "num": "10058", "d": "6/2017"}, {"title": "document process deprecating api react", "body": "split process making decision communicate release support folks updating syntax included deprecation warning", "num": "10057", "d": "6/2017"}, {"title": "componentdidmount getting invoked phantomjs", "body": "componentdidmount getting invoked opening page phantomjs workaround need automation stuff also ca nt change code move somewhere else componentdidmount help appreciated node version phantom version latest reactjs version latest", "num": "10052", "d": "6/2017"}, {"title": "include canary tests community packages part release process", "body": "cc gaearon general lots little utilities helpful standalone packages one example ideal react team maintain package primarily would guaranteed either break new react version released updated work upcoming version prior release interests react team signing maintain package requests might come would possible make part release process ensure compatible versions community packages exist happy create package example know community would love guarantee enzyme would always work official react version release prior release", "num": "10051", "d": "6/2017"}, {"title": "render callbacks fire even though error happened", "body": "think something like throws prints success means safe wrap promise like example throws error silenced promise already resolved hit serverintegrationtest", "num": "10049", "d": "6/2017"}, {"title": "guccccccgekfbfghhkkfrcincttgkceeknidjtdijklvlt", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10047", "d": "6/2017"}, {"title": "style object columns shorthand property wrong expansion", "body": "want request feature report bug report bug current behavior adding style object element shorthand property expand wrong way left untouched expand totally different behaviour see current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react latest", "num": "10043", "d": "6/2017"}, {"title": "caret standard controlled input immediately disappears", "body": "bug ca nt type standard controlled works fine update okay know problem lies something chetonreactsortable input talking inside deactivate input focus caret works controlled component proper weird thing input lose focus seen still white border css active caret simply immediately disappears even weird parent node onclick basically works caret shows type fine directly clicking input caret immediately disappears please check video anyone ever experience already tried removing blur keydown whatever handlers input nothing changed basically simple controlled input handler sidenote save state rather client meteor minimongo database works fine browser including nt get recent react version vm macos", "num": "10042", "d": "6/2017"}, {"title": "react umbrella", "body": "umbrella issue fixes need included next patch release commits x changeeventpluginjs ie detection broken chromesafariff etc pr error element ref created another elements constructor dev environment pr x treat columns property unitless number x move augmentclass definition syntheticevent proxy replacement x use closure bind argument callback reacterrorutils x fix uncontrolled radios x add controllist dom property whitelist documentation changelog documentation misc update lockfile version bump bower", "num": "10040", "d": "6/2017"}, {"title": "force react hit server route instead staying within spa", "body": "hello facing problem quite time none solutions found google worked basically trying make react app go spa hit server route express eg appget authsteam however tried using reactrouter link redirect still stayed within spa found reactrouter internal navigation tried using anchor tag supposedly forces app hit server route still stays within react page gives component weird thing hard refresh cmd shift r mac hits server route redirects website login page case steam login finish logging callback url authsteamreturn shows component hard refresh everything supposed redirects homepage set redirect also requser available know gave example trying user authentication think question specific trying react question wanted use another server route something else appget exampleurl would face problem basically question force react hit server route instead staying within spa", "num": "10034", "d": "6/2017"}, {"title": "refsroot breaks", "body": "bug report rely saved ref component layout formatting excel addin used property component save reference functionality broke longer defined react version browser reproduced safari chrome macos chrome windows codepen reproducing behavior thanks nick", "num": "10031", "d": "6/2017"}, {"title": "changeeventpluginjs ie detection broken chromesafariff etc", "body": "bug current behavior website include number scripts parties via segment etc one seems modifying inadvertently combination release reactdom broken website completely code changeeventpluginjs error written console every time try click input box specifically line causing issues party library actually setting enough break line even though undefined exists key means browsers reactdom believes running ie current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduce app uses reactdom includes input boxes add following top head tag executes immediately documentdocumentmode undefined example found expected behavior previous versions branch reactdom code works fine allow load relevant party libraries without experiencing issues reached vendor fix issue side sure long take versions react browser os affected issue work previous versions react nt work react dom works looking history code seems gone back forth two different ways checking documentmode commit changed back code causes error", "num": "10030", "d": "6/2017"}, {"title": "react getting installed windows", "body": "hello trying install react windows system entering npm install createreactapp command giving error attaching npmdebuglog info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli createreactapp info using npm info using node silly loadcurrenttree starting silly install loadcurrenttree silly install readlocalpackagedata silly fetchpackagemetadata createreactapp silly fetchnamedpackagedata createreactapp silly maptoregistry name createreactapp silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry data result silly maptoregistry raw createreactapp silly maptoregistry scope null silly maptoregistry escapedname createreactapp silly maptoregistry name createreactapp silly maptoregistry rawspec silly maptoregistry spec latest silly maptoregistry type tag silly maptoregistry uri verbose request uri verbose request auth needed info attempt registry request try pm verbose request id http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get silly fetchpackagemetadata error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata error createreactapp error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata code econnrefused silly fetchpackagemetadata errno econnrefused silly fetchpackagemetadata syscall connect silly fetchpackagemetadata address silly fetchpackagemetadata port silly rollbackfailedoptional starting silly rollbackfailedoptional finishing silly runtoplevellifecycles finishing silly install printinstalled verbose stack error connect econnrefused verbose stack objectexportserrnoexception verbose stack exportsexceptionwithhostport verbose stack tcpconnectwrapafterconnect oncomplete verbose cwd c usersaniruddhreact error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install createreactapp error node error npm error code econnrefused error errno econnrefused error syscall connect error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error code econnrefused error errno econnrefused error syscall connect error address error port error behind proxy please make sure error proxy config set properly see npm help config verbose exit true", "num": "10023", "d": "6/2017"}, {"title": "input type number reformats already valid numbers", "body": "like report bug current behavior using input type number shave trailing behind seperator see eg state starts number input shows expected behavior number input show least provide way specify tofixed used n numbers behind seperator versions react browser os affected issue work previous versions react tested ff goes wrong lines", "num": "10022", "d": "6/2017"}, {"title": "feature request add module entry packagejson export version react", "body": "want request feature report bug request feature current behavior react ecosystem promoting classes modules since many packages like reactrouter redux es folder npm package source code modules unless missing something strange react offer option current behavior bug please provide steps reproduce possible minimal demo problem via similar template install react try import browser native modules enabled expected behavior es folder npm package modules source code like react ecosystem projects allow import react native modules make developer workflow simple versions react browser os affected issue work previous versions react versions", "num": "10021", "d": "6/2017"}, {"title": "feature request rendertypes", "body": "want request feature report bug request feature per discussion today tomocchino thejameskyle like nonflow mechanism annotate type elements component expects render examples flow types comparison realize may currently checked flow yet jsx function foo yes return yes foorendertypes bar div class bar extends reactcomponent static rendertypes button render return jsx function foo yes reactelement return yes class bar extends reactcomponent render reactelement return inside airbnb lots use cases container components separate package say intentionally restrictive proptypes prop allow also package however app consumes component library package dev may want create turn renders however unable pass proptype warnings fail tests even though conceptually permitted would allow us widen proptype allow either anything renders helps us maintain separation concerns package nt know accept well maintain strictness package nt allow wacky element inside imagine implementation render called sfc invoked async rendering component resolves suppose development exists component evaluate equivalent elementtype like proptypes log error one returned cc spicyj", "num": "10020", "d": "6/2017"}, {"title": "feature request need ability debug checksum mismatch production environment", "body": "want request feature report bug feature current behavior currently checksum mismatch happens mounting react tree server rendered markup get markup difference dev environment reality mismatches happen production env much bigger variety user contexts trigger mismatch hard reproduce mismatch scenarios dev environment without knowing markup difference expected behavior proposing provide apps way obtain markup difference even production environment diffs reported back developers debugging mismatch root cause fiber would probably change checksum works ready still need ability debug issue production env trying something like works probably best approach idea simple though provide way application control react tree report markup diff upon checksum mismatch application might care mismatch subset react trees mounted would concerns markup normalization cost using data attribute container node best approach since container also document node thought two alternative ways neither perfect add option signature add prop like element rendered allow application collect markup diff even production environment setting markup difference value data attribute container node please share thoughts ideas raising pr implement ideal approach thanks", "num": "10016", "d": "6/2017"}, {"title": "suggested words get appended currently typed word writing comment fb using virtual keyboard windows", "body": "reproes soft keyboard used repro navigate facebookcom front page type select wonder list suggestions expected replaced wonder actual appends wonder making wonwonder", "num": "10014", "d": "6/2017"}, {"title": "dangerouslysetinnerhtml svg elements", "body": "want request feature report bug bug current behavior using svg elements dom nodes previous render nt removed current behavior bug please provide steps reproduce possible minimal demo problem via similar template see fiddle expected behavior dom contain last rendered value versions react browser os affected issue work previous versions react react browser work previous versions react sure digging around found made think happening line looks like call never remove previous nodes add new ones guess", "num": "10013", "d": "6/2017"}, {"title": "react component using reactnoopupdatequeue dev build preventing state updates", "body": "want request feature report bug reporting bug facing really strange issue every app stops working running via webpack hot dev server issue presents struggle get work even cleaning everything stashing git changes resetting yarnlock etc production builds noticed issue never occurs simple component renders two fields hostname port maintains field values component essentially expected behavior expect basic case able update form fields without issue enter text field triggers field event turn invokes updating value field gets rerendered actual behavior observe expected behaviour every time production time development idea sometimes rebuilding certain modules see issue occur able change value either fields instead see following error electron console environment react operating system windows browser version electron chromium browser additional details notice development production builds react component pass react updater superclass constructor react base class uses two places assigned breakpoint neither dev production build see anything except getting assigned field yet production builds state updates work expected step code production find magically replaced real update queue magic sometimes nt happen dev builds state changes fail noop get warning messages shown reference excerpt react component code js export default class connectionpane extends reactcomponent constructor props iconnectionpaneprops super props private get ishostnamevalid boolean private get isportvalid boolean private get areconnectionsettingsvalid boolean public render return hostname port private sethostname event thissetstate hostname eventtargetvalue private setport event const port eventtargetvalue private onsubmit event eventpreventdefault", "num": "10012", "d": "6/2017"}, {"title": "syntheticeventaugmentclass undefined qtwebkit browsers", "body": "want request feature report bug bug current behavior everything seems terrible certain webkit browser page pulls bundled script nt seem finish loading console errors augmentclass undefined build details ing using babelloader presets current behavior bug please provide steps reproduce possible minimal demo problem via similar template building use qtwebkit test browser visit offending page expected behavior see complaints syntheticevent console versions react browser os affected issue work previous versions react react reactdom qtwebkit", "num": "10010", "d": "6/2017"}, {"title": "warning unsupported style prop webkitoverflowscrolling", "body": "potential bug warning unsupported vendorprefixed style property webkitoverflowscrolling mean webkitoverflowscrolling check render method warning nt used come tried remedy using different style lib using radium tried instead warning still shows yet properly styled browser warning seems obsolete mac os chrome react", "num": "10009", "d": "6/2017"}, {"title": "minified version react cdn throws errors unminified cdn works fine", "body": "using react official cdns minified version throws uncaught typeerror unminified dev version cdns used code results unminified version works without errors minified version results following error uncaught typeerror selfpropssearchcallback function error react official minified cdn version", "num": "10005", "d": "6/2017"}, {"title": "react input value tracking incompatible zombiejs", "body": "react backports input value handling fixes new input value tracking nt work zombiejs problem react wraps property zombiejs assigns property functions eg confuses value tracking loses track value change definitely debatable whether react bug zombiejs bug find behaviour react bit strange let assume controlled react zombiejs test fills initially empty text field value somevalue zombie implements using internal steps happens try running example test test calls field focused triggers setter reactdom tracker longer original value new value somevalue input event fired eventually end reactdom function tracker compares containing somevalue raw value dom node containing somevalue change event sent whatever controlling propsstate thinks value react dom node agree somevalue react lose change events zombiejs react works fine", "num": "10003", "d": "6/2017"}, {"title": "react dung vue beautify", "body": "use reactjs timebut framework design look like designed threeyears child shit fuck every developerbut vue maked chinexe save hell vue fresh freedom air methis freedom sweet pointer someone deliberatelymy meaning everyone designed except", "num": "10002", "d": "6/2017"}, {"title": "clear entire call stack browser certain function gets executed", "body": "want clear entire call stack browser certain function gets executed react js code", "num": "10001", "d": "6/2017"}, {"title": "false positive getdefaultprops warning mixing development production versions", "body": "migrating rewrite original react components however warning really transferring classic definition would like ask warning appropriate depreciation sames level migrating ooops get ticket", "num": "9999", "d": "6/2017"}, {"title": "createreactclassintegrationtest fails", "body": "want request feature report bug bug current behavior running npm test master branch createreactclassintegrationtest fails current behavior bug please provide steps reproduce possible minimal demo problem via similar template installed repo cloning ran npm install npm test expected behavior test pass versions react browser os affected issue work previous versions react latest version commit", "num": "9997", "d": "6/2017"}, {"title": "detect empty selection", "body": "component uses get user selected files user cancels file selection popup callback never called since change nonsense since expected action callback gets called null empty array implement nt find related event listen", "num": "9996", "d": "6/2017"}, {"title": "error info removes app", "body": "feature really hard track runtime errors eg none code stacktrace swallowed react", "num": "9995", "d": "6/2017"}, {"title": "set initial state undefined", "body": "want request feature report bug feature current behavior initial state null expected behavior initial state undefined manually set state undefined class would make sense box would allow destructuring without errors version react reactdom sorry suggested", "num": "9991", "d": "6/2017"}, {"title": "regression onchange nt fire defaultchecked radio inputs", "body": "want request feature report bug bug current behavior react behaviour changed fires change event reliably need console open get debugger statement first change fires subsequent changes fire changes fire versions react browser os affected issue work previous versions react react vs react chrome latest stable", "num": "9988", "d": "6/2017"}, {"title": "proper compatibale version react reactaddonstestutils reactdom", "body": "tried various package version still getting error run causing issue file looks like update getting error may know causing issue dependency issue nt know", "num": "9986", "d": "6/2017"}, {"title": "setvalueforproperty throwing untraceableunpausable error", "body": "hey getting following error many time console tried setting pause exceptions true nt seem pause error actual error message unhelpful debugging underlying issue many places component rendering svg path help tracking component actually causing error would greatly appreciated thanks", "num": "9984", "d": "6/2017"}, {"title": "compatible version found createreactclass lt", "body": "env package npm actually missing want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior npm install problem versions react browser os affected issue work previous versions react", "num": "9981", "d": "6/2017"}, {"title": "ensure npm command results expected result", "body": "creating issue track thread currently tools nt properly dce npm bundle branching need combine dev prod bundle one file", "num": "9980", "d": "6/2017"}, {"title": "bug fontfamily wraps font names nested doublequotes chrome", "body": "bug current behavior fontfamily declaration used react multiword fonts wrapped doublequotes chrome nested double quotes valid html attributes react nt creating style attribute way steps reproduce open react fiddle chrome inspect text rendered react result pane notice style declaration words times new roman double quotes results nested double quotes ie style fontfamily georgia times new roman serif really valid original fontfamily declaration quotes open react fiddle safari firefox notice nested double quotes happen fontfamily declaration left asis evidence open simple fiddle chrome inspect text rendered result pane notice chrome add nested double quotes around times new roman nt seem browser seems react used expected behavior would expect one two things happen multiword fonts would left asis ie style fontfamily georgia times new roman serif multiword fonts would wrapped single quote instead double ie style fontfamily georgia times new roman serif react versions seeing react version know working previous versions react", "num": "9979", "d": "6/2017"}, {"title": "modules react reactdom", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react analyze bundle file webpack came across serval modules exist react reactdom guess files ignored files listed reactprodinvariantjs keyescapeutilsjs traverseallchildrenjs reactelementsymboljs reactproptypessecretjs getiteratorfnjs", "num": "9975", "d": "6/2017"}, {"title": "error addcomponentasrefto class", "body": "react bit complicated report dont super isolated use case application extremely complex ca nt confirm latest react ca nt confirm react fault thats unacceptable feel free close general layout things exports bunch javascript including react via webpack private repo loads code extends imports things like react windowreact using webpack external feature attempting use reactcompnent provide base class complex functionality worked fine using reactcreateclass fairly confident two copies react loading page really hard understand webpack internals loading react comes windowreact investigated per webpack compiled output however odd referencing internally happens specifying attribute static html specific html also specific reference error unrelated generated output exists elsewhere parent element generated children first core issue case output tooltip raw html everything works fine change return result stripped errors dump consolelog version text generatehtmlviareactdomserver get true output domserver still receive ref error literally baffled point going might something obvious debugging last hours avail sentry exports sentryio externals config originally thought might related bootstrap tooltips since thats removed anything relevant still triggered full source component though clearly wo nt work jsx import react react import reactdom reactdom import reactdomserver reactdomserver import jquery jquery import displaynumber getslot utilsbilling import utils sentry import moment moment let guttersize let leftgutter let graphpadding class usagechart extends reactcomponent constructor props super props bar line onclick onlinedrag onlinerelease onlineselect onresize tooltip foreach n gt n n bind thisstate width height componentdidmount windowaddeventlistener resize thisonresize thisonresize thisattachtooltips componentwillunmount windowremoveeventlistener resize thisonresize thisremovetooltips jquery reactdomfinddomnode unbind attachtooltips jquery reactdomfinddomnode tooltip container body selector tip removetooltips jquery reactdomfinddomnode tooltip destroy destroy tooltips parent find tip tooltip destroy descendents tallestthing throw new error implemented scale return thisstateheight guttersize thistallestthing flip h return thisstateheight guttersize h distance b return mathabs b onresize thisrefssvgelement return thissetstate width thisrefssvgelementgetboundingclientrect width onlineselect e onlinerelease e onlinedrag e onclick e tooltip point let projected totals ts point let otherdropped totalsdroppedtotal totalsdroppedoverquota totalsdroppedspikeprotection return reactdomserverrendertostaticmarkup moment ts format projected projected events totalstotaltolocalestring accepted totalsacceptedtolocalestring dropped totalsdroppedtotaltolocalestring quota totalsdroppedoverquotatolocalestring spike protection totalsdroppedspikeprotectiontolocalestring otherdroppedtolocalestring getbars point throw new error implemented bar point todo max disabled lt wide zoom screwyness let zoom windowmatchmedia maxwidth matches zoom return null getlines return lines return thisgetlines map l gt lquota gt throw new error invalid line return thisline name lname quota lquota height lquota thisscale demandheight ldemand thisscale drop ldrop canselect lcanselect false line props let classname line line propsname propsname let cursor propscanselect nsresize inherit slotsrules let tt thistallestthing getlegenditems throw new error implemented legend props let size let r let items thisgetlegenditems let sum let offsets itemsmap n gt let last sum sum nlength size return last bars let usagedata thispropsusagedata let totals total accepted dropped total overquota spikeprotection filtered return usagedata map p gt totalstotal ptotal totalsaccepted paccepted totalsdroppedtotal pdroppedtotal totalsdroppedoverquota pdroppedoverquota totalsdroppedspikeprotection pdroppedspikeprotection totalsfiltered pfiltered return p totals totals dropped totalsdropped ts pts map thisbar renderchart let usagedata thispropsusagedata render try return thisrenderchart catch ex utilslogginglogexception ex return un oh hit error trying render usage chart nt worry sentry let us know usagechartproptypes usagedata reactproptypesarrayof reactproptypesshape accepted reactproptypesnumberisrequired total reactproptypesnumberisrequired ts reactproptypesanyisrequired dropped reactproptypesshape total reactproptypesnumberisrequired overquota reactproptypesnumberisrequired spikeprotection reactproptypesnumberisrequired isrequired trialend reactproptypesstring slots reactproptypesarrayof reactproptypesobject usagechartdefaultprops usagedata export default usagechart", "num": "9974", "d": "6/2017"}, {"title": "expose shouldcomponentupdate purecomponent", "body": "nice following api", "num": "9972", "d": "6/2017"}, {"title": "bug style undefined setvalueforstyles", "body": "appears possible style property node undefined setvalueforstyles method csspropertyoperationsjs using unknown able get state stack trace typeerror style undefined style csspropertyoperations internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler", "num": "9970", "d": "6/2017"}, {"title": "error addcomponentasrefto", "body": "started getting error right upgrading error addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details", "num": "9967", "d": "6/2017"}, {"title": "add units css custom properties", "body": "want request feature report bug bug current behavior js html current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior leave values passed versions react browser os affected issue work previous versions react react", "num": "9963", "d": "6/2017"}, {"title": "string refs without owner fail gracefully", "body": "occurs fiber multiple instances react package ca nt share current owner", "num": "9962", "d": "6/2017"}, {"title": "undefined object evaluating ugetcall since", "body": "since updating started uncaught exception pinned version back problem gone away per rollbar problem seems mostly ios safari sometimes osx safari unable repo users clearly experiencing user agents stacktraces", "num": "9961", "d": "6/2017"}, {"title": "bug version working ios inputvaluetrackingjs", "body": "appears version work older ios devices ios tested affected root cause appears broken versions simply return method used inside causes react break causing nothing rendered error message stack trace affected code javascript track function inst gettracker inst return var node reactdomcomponenttreegetnodefrominstance inst var valuefield ischeckable node checked value var descriptor objectgetownpropertydescriptor nodeconstructorprototype valuefield var currentvalue node valuefield someone already defined value bail nt track value cause reporting changes better hard failure needed certain tests spyon input values nodehasownproperty valuefield return objectdefineproperty node valuefield enumerable descriptorenumerable configurable true get function return descriptorgetcall set function value currentvalue value descriptorsetcall value", "num": "9959", "d": "6/2017"}, {"title": "onclick onchange nt fire radio buttons ios", "body": "want request feature report bug bug current behavior onclick onchange nt fire radio buttons ios typeerror undefined object evaluating descriptorgetcall current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior onclick onchange fire versions react browser os affected issue work previous versions react react ios working", "num": "9956", "d": "6/2017"}, {"title": "run unit tests compiled bundles", "body": "lot tests using public apis number growing soon delete stack reconciler code remove feature flags partly responsible nonpublic api calls well stackspecific tests still tests operate directly files position opt specific test files hopefully growing count running compiled development production bundles ci nt compromise local iteration speed already separation use today telling warning failures use future telling whether expectation skipped prod bundle could use help building initial proof concept running tests ci bundles converting tests use public apis search source find good starting points tests might better written public apis always possible try bit openended probably requires prior knowledge test things generally feeling comfortable repo contributed good issue dive", "num": "9955", "d": "6/2017"}, {"title": "safe react native react alpha", "body": "currently react native since released stable around corner rn uses react march saw release rn started using react series completely skipped version prevented updating react native waiting official stable release react mid june official stable release react appears version entering version still alpha react world using react reactnative world using react anyone know react skipped safe use version react native production deal react anyway even mentioned list react releases", "num": "9948", "d": "6/2017"}, {"title": "fix fixture branch", "body": "want request feature report bug kind bug either react fixture current behavior open error console react load current behavior bug please provide steps reproduce possible minimal demo problem via similar template step check yarn install amp amp yarn buildfixturessystemjshtml expected behavior see hello world appear versions react browser os affected issue work previous versions react also present last release react still present react", "num": "9947", "d": "6/2017"}, {"title": "refs working properly componentdidmount", "body": "want request feature report bug bug user failure current behavior thisinputclick happens one child component rendered fails first one current behavior bug please provide steps reproduce expected behavior first component open dialog box versions react browser os affected issue work previous versions react chrome macos react reactdom application comes deeply nested component times dialog box shows component actually unmounts weird thing still works older version application", "num": "9944", "d": "6/2017"}, {"title": "stateless react components controlled input", "body": "asked question stackoverflow get response trying luck currently make controlled inputs work inside stateless react components wrapping stateless component inside sate full component example js const inputcomponent props gt return class app extends reactcomponent constructor props super props thisstate name tekeste thishandlechange thishandlechangebind handlechange event thissetstate name eventtargetvalue render return would like know couple things good pattern achieve goal ie controlled inputs inside stateless components", "num": "9930", "d": "6/2017"}, {"title": "wrong javascript heap memory", "body": "edit sorry wrong project meant post reactnative", "num": "9927", "d": "6/2017"}, {"title": "inconsistencies among documentation", "body": "hi trying figure whether adopting react would safe risky choice important able draw boundaries ie able define node elements managed react ones pretty important able integrate well nonreact components trying understand guarantees get using react noticed two sections documentation nt seem compatible prevent react touching dom mounting return empty lt div render method element properties children react reason update leaving jquery plugin free manage part dom suggests using mountunmount hooks order initialize destroy thirdparty components however enough guarantee integration succeed get later important remember reconciliation algorithm implementation detail react could rerender whole app every action end result would currently shouldcomponentupdate returns false componentwillupdate render componentdidupdate invoked note future react may treat shouldcomponentupdate hint rather strict directive returning false may still result rerendering component problem ca nt really rely reconciliation algorithm touch elements react supposed manage guarantees would possible integrate react thirdparty components future big concern let give example illustrate suppose want integrate lightweight multioptions autocomplete component provides public apis constructor desctructor onchange hook stateful component nt direct access state restore destroying recreating opens menu several items containing checkbox item label click items checking checkbox onchange would triggered could use change state ancestor component managed react responding state change event react simply decides rerender ancestor component without respecting ignoring diff algorithm means would probably call autocomplete component wrapper would able destroy component would able initialize component would lost state like scroll position currently selected items words means react would nt able play nice thirdparty components order guarantee need guarantees react reconciliation algorithm nt implementation detail without guarantees nt considered hint otherwise supposed wrap thirdlibrary components reliable way really scared start migrating application use react unless feel confident always able integrate thirdparty stateful components could please review statements documentation", "num": "9926", "d": "6/2017"}, {"title": "reactcsstransitiongroup children text ie edge false effect", "body": "want request feature report bug think may ie sure current behavior reactcsstransitiongroup children text text ie edge false like text ok versions react browser os affected issue work previous versions react os react", "num": "9925", "d": "6/2017"}, {"title": "nonshouldcomponentupdate state prop updates", "body": "want request feature report bug feature current behavior renderindependent lifecycle hook called state prop updates expected behavior certain cases currently makes sense run code whenever state props update even render wo nt happen eg contextproviding component needs update child subscribers even best rerender immediate child due frequency updates using state case rerendering component passed children component renders instance shallow child component passed props based internal state passed nt want update since would rerendering potentially large component tree reason still want notify context subscribers state changed workable use lifecycle method eta maybe similar called state updates called may updated allowed", "num": "9922", "d": "6/2017"}, {"title": "urgent nt support latest builds reactnative react", "body": "possible use latest builds reactnative react related reactnative works already builds reactdom nt support app crashes", "num": "9915", "d": "6/2017"}, {"title": "reactaddonsupdate uses objectassign", "body": "want request feature report bug undocumented breaking change current behavior starting package changed depending internal file package actually include full implementation internal implementation depended polyfill external one actually calls directly breaking support ie reactaddonsupdate react reactaddonsupdate requires users support polyfill mentioned release blog post react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior add mention release blog post versions react browser os affected issue work previous versions react react worked fine react", "num": "9913", "d": "6/2017"}, {"title": "possible delay proptypes isrequired validation constructor got called", "body": "want request feature report bug feature current behavior element wrapped like following child receive waring understand expected behavior however warning really annoying expected behavior delay proptypes validation till avoid unnecessary warnings maybe got called since wrapped use merge render prop merged wo nt see lot unnecessary warnings keep mark childproptypes versions react browser os affected issue work previous versions react react", "num": "9904", "d": "6/2017"}, {"title": "mouseleave events fire unexpectedly mousing descendant node different react root", "body": "want request feature report bug bug current behavior mousing descendant dom node different react root mouseleave event parent react dom component fired unexpectedly current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open console see logs printed mouse parent normal child back note fire mouse parent portal child rendered embedding new react root note fire mouse back note fires sometimes fires multiple times enterexit step expected behavior fire enteringexiting portal child since descendant node parent versions react browser os affected issue work previous versions react tested following issue reproducible cases react latest chrome firefox safari", "num": "9901", "d": "6/2017"}, {"title": "get fixtures working branch", "body": "multiple errors thrown trying build fixtures branches need fixtures working order manual testing addon fixes", "num": "9900", "d": "6/2017"}, {"title": "eventhandler react component without implementing component side", "body": "want request feature report bug feature current behavior add event handler components outer layer implemented inside component well like without ca nt add event handlers parent something like work opinion example export default class somecomponent extends reactcomponent render nt event handler logic return content nt working opinion shouldcould well render return working yet think last way would cleaner render return sum request event handler props added component would pass outer layer component", "num": "9898", "d": "6/2017"}, {"title": "cursor jumps end controlled component", "body": "want request feature report bug bug per current behavior typing inside controlled input component cursor jump end value modified current behavior bug please provide steps reproduce possible minimal demo problem via similar template modified controlled components example described documentation see fork codepen type transformed automatically place cursor follows insert lower case character observe cursor jumps end cursor jumps end lower case character inserted modification cursor remains presumably value nt overwritten react expected behavior cursor remain current position versions react browser os affected issue work previous versions react react browser chrome os win", "num": "9894", "d": "6/2017"}, {"title": "trigger change event radio value", "body": "want request feature report bug bug current behavior selecting value twice row results triggering change event twice value current behavior bug please provide steps reproduce possible minimal demo problem via similar template open click twice option result see console change event triggered time even changed value equal previous one comparison may check native html implementation expected behavior change event trigger value versions react browser os affected issue work previous versions react macos sierra safari", "num": "9893", "d": "6/2017"}, {"title": "javascript responsible rendering html issue", "body": "question related binding html javascript making javascript responsible creating dom hiding resources browser blocked javascript lead opting html optimization browser like background parsing html separate thread bind html javascript bind code understand react dom manipulation well", "num": "9892", "d": "6/2017"}, {"title": "lost setnativeprop others methods create personal component child nodes", "body": "hi creating custom component inside mycomponent loop childs refs next code try use setnativeprop inside component setnativeprop undefined using next code reach child inside method another way tried putting refs text lost refs also way draw nodes without loss properties form rebuiltcreate node characteristics inside", "num": "9890", "d": "6/2017"}, {"title": "numberisnan", "body": "supported internet explorer code sample lifting state documentation used specifically writing conversion functions section see function following quick start guide using visual code editor createreactapp using internet explorer test component completing lifting state section getting following error typeerror object nt support property method isnan fixed using reguler doc updated use", "num": "9888", "d": "6/2017"}, {"title": "viewbox inline svg sometimes rendered viewbox", "body": "reactjs nt seem consistently rendering camelcased instead rendered sample code works chrome firefox ideas version", "num": "9885", "d": "6/2017"}, {"title": "input type number initial value value changes empty string value update", "body": "example bug best guess maybe react truthiness checking thinks updating value component", "num": "9884", "d": "6/2017"}, {"title": "rendering array jsx components", "body": "build something tree table folder subfolders elements one folder keeps inside subfolders informations rendering correctly react ignoring part code folder component subfolder component element structure looks like subfolder next row folder row contains table inside really important later need able manipulate tables inside subfolders element rows another subfolder know subfolders key also major problem react completely ignore inside subfolder td element using another table props children try use way works fine parse api response function push element inside array return end need create chunk jsx render end check type object api response push different component array main problem react completely ignore tables inside td elements render regular table expecting something like know easiest way build normal string later use dangerouslysetinnerhtml method want avoid sure bug react nt understand rendering array looks like", "num": "9880", "d": "6/2017"}, {"title": "add export html props react package since react already using validation", "body": "want request feature report bug feature current behavior react package provide list acceptable props html node div span etc sometimes packages pass props like reactredux passing provided pop error saying unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior since react using list props validation react package also provide allow react users make sure pass normal props versions react browser os affected issue work previous versions react", "num": "9878", "d": "6/2017"}, {"title": "unstablehandleerror read property listeners null", "body": "want request feature report bug bug current behavior typeerror read property listeners null current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior renders error text versions react browser os affected issue work previous versions react", "num": "9877", "d": "6/2017"}, {"title": "order linting prettier contributing docs", "body": "want request feature report bug documentation discussion current behavior currently contributing guide lists lint step running prettier example says current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior think would make sense run prettier first since automatically get rid certain lint errors like singlequotes commadangle firsttime contributor following steps order might waste time fixing things manually lint step proceeding formatting step versions react browser os affected issue work previous versions react na", "num": "9876", "d": "6/2017"}, {"title": "remove streaming renderer fb builds", "body": "nt get fb builds correct wrong", "num": "9868", "d": "6/2017"}, {"title": "add cases server rendering fixture", "body": "server rendering lot quirks easy break fixture set fixturesssr could expanded stuff things fixture test controlled uncontrolled types inputs including dates numbers etc children single stringnumber children array multiple stringnumbers children interleaved nodes stringnumbers event handlers hydrated nodes something useful clicked reused event handlers multiple different nodes etc onload event handlers special properties nt map directly attribute names like subtrees subtrees hidden attribute set tests deprioritization probably need onscreen options turn onoff things test suite test conditions server client differences turn flag makes server client differ minor ways async hydration use fiber async features hydrate tree defer hydration time useful test slow loading conditions user may changed state form controls hydration combined async make async rendering artificially slow reveal issues patching event handlers attached early commit phase ok start small nt", "num": "9866", "d": "6/2017"}, {"title": "component lifecycle error handling", "body": "greetings react team let start saying big fan work team keep good work said one major disadvantages react sort throws exception thrown one lifecycle methods ie null undefined reference although ultimately developer ensure proper error handling wondering would consider adding additional component lifecycle method catching unhandled exceptions ie componentdidfail developer perspective would make life much easier really help improve quality applications produce matt", "num": "9865", "d": "6/2017"}, {"title": "investigate ci got broken master pr passed", "body": "see pr passed ci pr merged master test failure later fixed wonder missing check prs", "num": "9864", "d": "6/2017"}, {"title": "reactfiberreconciler become public api implementing party renderers", "body": "investigating using react drawing custom native uis fall outside scope reactnative reactwindowsnative seems like sensible place start assuming fibers start getting used mainline relatively soon seems reasonably likely certainly seems easy get proof concept running using least far recommended entry point party renders use", "num": "9862", "d": "6/2017"}, {"title": "fully translated latest version react docs chinese", "body": "see chinese docs react docs chinese translated docs directly modified original markdown files hard pull request merge official docs plans add feature jekyll doc website", "num": "9860", "d": "6/2017"}, {"title": "reactplayer autoplay muted video mobile", "body": "ca nt manage autoplay video mobile browser dont audio code thisvideowrapper el gt inspect page see", "num": "9855", "d": "6/2017"}, {"title": "question use arrow functions bind manually classes performance difference", "body": "terms performance difference using arrow functions bind manually using classes using arrow functions methods class prototype class instance using bind attach methods class prototype sounds like bind manually better performance mean consider using bind instead arrow functions class methods suggestions comments really appreciated terms performance would recommend using javascript class mycomponent extends reactcomponent constructor props super props methoda gt javascript class mycomponent extends reactcomponent constructor props super props thismethoda thismethodabind methoda", "num": "9851", "d": "6/2017"}, {"title": "browser compatibility issue jquery version", "body": "report bug need confirm current behavior getting following error console using jquery min js line var icfnremove dcbrowsermozilla amp amp parsefloat cbrowserversion lt uncaught typeerror read property remove undefined", "num": "9848", "d": "6/2017"}, {"title": "error using immutable data structures section docs", "body": "want request feature report bug report bug current behavior optimizing performance section docs subsection called using immutable data structures end sentence case since new reference returned mutating x safely assume x changed sentence read assumption correct safely assume x changed current behavior bug please provide steps reproduce possible minimal demo problem via similar template doc question posted expected behavior described safely assume x changed versions react browser os affected issue work previous versions react na", "num": "9844", "d": "6/2017"}, {"title": "rfc resilient nodenormalize", "body": "debate support nodenormalize case summary mostly supported stack inserted comment nodes everything important used innerhtml generate html client preserve everything important anymore new hydration resilient however happens already active client tree possible consecutive text nodes merged single one something calls nodenormalize whole subtree merges consecutive text nodes possible extensions might even magic context think idea automatic recovery phase would nt impact hot paths would nt normally need anything however would add small nontrivial amount code edge case almost never happens also bit awkward since adds dom specific case hostconfig api every renderer consider afaik bugs related fb regard extensions anything else find breaks things outside fb without shipping broken version", "num": "9836", "d": "6/2017"}, {"title": "add reactchildrenfind", "body": "think method would really useful situations need iterate children find one satisfies particular condition running situation often react code examples react router component iterates children figure matches url component use training workshops need iterate figure label show select box wonder would interest others seeing something like", "num": "9834", "d": "6/2017"}, {"title": "error provided production build", "body": "currently transform enabled together production build indicators poorly performant configuration even already check existence source field reuse check issue something prod mode exists problem nt warning module prod unclear would get attention even considered spammy prod could throw might extreme since misconfiguration would kill site could also use set flag object icon devtools extension could use indicate misconfigured build", "num": "9832", "d": "6/2017"}, {"title": "possible false positive getdefaultprops warning createreactclass production environment", "body": "want request feature report bug potential bug current behavior dependency using using get past deprecation warning still defined class definition still getting following warning current behavior bug please provide steps reproduce possible minimal demo problem via similar template ca nt use jsfiddle createreactclass appears cdn version try create minimal amount code properly reproduce tonight expected behavior exactly sure supposed trigger warning using versions react browser os affected issue work previous versions react react os windows browser chrome", "num": "9831", "d": "6/2017"}, {"title": "first bug cra throws", "body": "looks like something createreactclass removal correctly cherrypicked steps reproduce create new cra project update version react run get error", "num": "9830", "d": "6/2017"}, {"title": "na", "body": "issue intended another repo accidentally posted mistake", "num": "9829", "d": "6/2017"}, {"title": "keys children really improve performance", "body": "originally try use react perf tool prove theory write code experiment found opposite result someone explain correct testing wrong way", "num": "9826", "d": "6/2017"}, {"body": "nt see bug expected behavior need behavior write handler triggers behavior correct scenario based one triggered", "d": "6/2017"}, {"body": "selbekk think misunderstood try scenario fiddle example click click click click second time triggered", "d": "6/2017"}, {"body": "ah sorry indeed misunderstand question theory click radio button first time trigger change event however unselect clicking another radio button nt trigger one suddenly dom keeps state react job unless want use uncontrolled components discouraged cases since react nice trickery events synthesized improve performance might one issues arises set attribute keep choice set state luck fork pen agree bit weird behavior", "d": "6/2017"}, {"body": "yes already fix trouble extract state right write report bug think using uncontrolled inputs bad way sometimes simpler think developers forgot case input typeradio used group select case name however radio group common way past generation web", "d": "6/2017"}, {"body": "would better could specify browser along version used", "d": "6/2017"}, {"body": "sorry created clean react bootstrap system works seems introduce bugs used reactonrails system debug surely bug reactjs thank", "d": "6/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "6/2017"}, {"body": "whoops stupid please ignore", "d": "6/2017"}, {"body": "worries arrows implicit returns nt body curly braces", "d": "6/2017"}, {"body": "cc trueadm", "d": "6/2017"}, {"body": "wenbing commented development umd bundle package need package tested get another note nt need comment development bundle future manually rather using envify next react release work expected", "d": "6/2017"}, {"body": "interesting note ca nt used html engine passes alreadystringified values point also optimization possible nonstring received call extended method call string value moment called order prevent html engine even string conversion example strings calculated open dev tools inspect dom currently optimization possible react automatically converts values strings", "d": "6/2017"}, {"body": "nt see problem removing string coercion calls coerce nonstring values anyways cc spicyj historical reason need explicitly coerce", "d": "6/2017"}, {"body": "happening jsdom think could get away", "d": "6/2017"}, {"body": "aweary afaik nt always way would expect may problem know iswas intentional", "d": "6/2017"}, {"body": "think packing problem restart fixed sorry false issue", "d": "6/2017"}, {"body": "feature preact really enjoy think resistance though newcomers might cache variables end using old versions stateprops", "d": "6/2017"}, {"body": "indeed lead convenience", "d": "6/2017"}, {"body": "finished yet", "d": "6/2017"}, {"body": "yep works still things figure team making lots head way feel free checkout work progress pull requests", "d": "6/2017"}, {"body": "please see find dir special component function reactpurecomponent defined related logic old engine new engine", "d": "6/2017"}, {"body": "shouldnt ditch adding write ditching transformcodemod inferred functionsclassesvariables anyway afaik nt adding explicitly recommend nt either indeed inferred functionsclasses", "d": "6/2017"}, {"body": "thanks quick answer habit developed didnt quite question till today also got impression added react docs true however still floating around ie", "d": "6/2017"}, {"body": "really big deal react redux like two components libraries components would definitely recommend pattern case hardly matters", "d": "6/2017"}, {"body": "yeah surely doesnt matter codewise keeping legacy popular library kinda gives wrong example somebody might use without real need project", "d": "6/2017"}, {"body": "probably belongs", "d": "6/2017"}, {"body": "correct issue tracker bug reports feature requests react thanks", "d": "6/2017"}, {"body": "move appropriate repository apologies unaware repo", "d": "6/2017"}, {"body": "hey thanks filing issue possible timing issue like phantomjs script nt waiting sufficiently whatever needs happen componentdidmount hard tell would really helpful us could write example test case demonstrates behavior otherwise hard make headway", "d": "6/2017"}, {"body": "hey thanks reply mistake sorry bother thanks", "d": "6/2017"}, {"body": "utilities mind", "d": "6/2017"}, {"body": "reactisvalidelement lists html element names lists event names number things people either depend react copypaste react codebases able access", "d": "6/2017"}, {"body": "lists html element names ones react nt whitelist tag names anymore lists event names use linting", "d": "6/2017"}, {"body": "potential examples recall depended would longer need depend particular version react range isvalidelement package far less likely change across major react versions regardless interrogating use case comes nt particularly scalable productive fact remains people found use cases would made much easier robust changes react exposed modular packages react either depended directly ran tests described nodejs prevent ecosystem breakage", "d": "6/2017"}, {"body": "sorry yubikey", "d": "6/2017"}, {"body": "use easy", "d": "6/2017"}, {"body": "incomplete answer", "d": "6/2017"}, {"body": "try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "please report nt look related react accessing component internals may change versions component libraries", "d": "6/2017"}, {"body": "gaearon bad meant report repo open sorry", "d": "6/2017"}, {"body": "worries", "d": "6/2017"}, {"body": "came report problem nice analysis alirussell", "d": "6/2017"}, {"body": "thanks detailed report alirussell opened pr address setting questionable choice reverting check makes sense since still works expected still using elsewhere change event plugin hoping get patch release", "d": "6/2017"}, {"body": "sounds good aweary thanks", "d": "6/2017"}, {"body": "maybe might want move issue correct repository", "d": "6/2017"}, {"body": "reading log see tries connect npm registry local machine nt know intentionally wanted try resetting try", "d": "6/2017"}, {"body": "nt intentionally must default", "d": "6/2017"}, {"body": "default maybe tool installed ran", "d": "6/2017"}, {"body": "gaearon tried still facing issue", "d": "6/2017"}, {"body": "unfortunately ca nt provide support npm repository report issue like error message clear attempting connect instead real registry nt know related create react app issue install npm package example", "d": "6/2017"}, {"body": "gaearon thanks ton installed node mentioned changes problem resolved react working fine thanks", "d": "6/2017"}, {"body": "good know thank sharing", "d": "6/2017"}, {"body": "cc aweary", "d": "6/2017"}, {"body": "appears firefox specific firefox truncate number values trailing zeros also predates changes made input value issue suspect issue long time bug report bugzilla years ago feeling nt something work around though look", "d": "6/2017"}, {"body": "cc nhunzaker think viable away around ca nt think way nt involve using text inputs reasonable solution regression issue react without viable normalization strategy think may write firefox quirk", "d": "6/2017"}, {"body": "nt believe anything looks like extraneous zeroes lost display value user sees extraneous zeroes correctly reported access value property reports even nt show extraneous precision lost soon user types accessing point returns truncated string number tested via nt think anything wait firefox make change meantime number inputs really fussy formatting would recommend using text input maximum control display value either way sent pr test cover would work otherwise", "d": "6/2017"}, {"body": "source code react still using custom module system close commonjs using modules afaict assume also exposed", "d": "6/2017"}, {"body": "anyone bumping possible bundle commonjs modules native modules using config file", "d": "6/2017"}, {"body": "understand correctly could ie annotating components checking restrictive proptypes checks right sounds like proposal add runtime check react dev ensure component renders matches rendertypes property accurate also might look like implemented components render fragments", "d": "6/2017"}, {"body": "yes exactly without react enforcing adding arbitrary convention imo potentially dangerous ecosystem sure would look like fragmented rendering assume fragments would able optionally specify rendertypes well wanted nothing inherent feature proposed would require single root node words something rendered rendertypes would pass", "d": "6/2017"}, {"body": "cc sebmarkbage", "d": "6/2017"}, {"body": "really want flow support since flow infer way ensure nt considered proptypes might able want coroutines fiber let implement kind thing user space wider solution kind parentchild relationships indirections", "d": "6/2017"}, {"body": "valuable use able use prefiber hopefully feature added easily", "d": "6/2017"}, {"body": "likely wo nt back port new features react get fiber train chat airbnb react adoption path btw", "d": "6/2017"}, {"body": "server rendering fiber coming p", "d": "6/2017"}, {"body": "landed", "d": "6/2017"}, {"body": "passes tests must done", "d": "6/2017"}, {"body": "regardless tho also pretty disappointing prior released new feature would nt considered would willing accept wrote pr", "d": "6/2017"}, {"body": "getting started release work switch focus another release everything entails try break ecosystem possible could think worth even sure correctly implement would much easier fiber actually reason nt always ability parent see possible children deep setstate example could switch rendering rendering would way enforce efficiently", "d": "6/2017"}, {"body": "enforcing actually returns theoretically could return would nt get rendertype warning starts actually rendering", "d": "6/2017"}, {"body": "releasing took several weeks effort several people good position add features point branch diverged way much causing much duplicated effort also nt usual stability guarantees anymore nt use production", "d": "6/2017"}, {"body": "gked repo specifically react facebook website want report bug react check support article facebook help website thanks", "d": "6/2017"}, {"body": "nt encounter issue bind functions within calls instead construction time ie instead nt initially violates rule performance reasons hell guess", "d": "6/2017"}, {"body": "upon debugging module export appears undefined assignment expect", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "tried remedy using different style lib using radium tried styledcomponents instead warning still shows yet div properly styled browser webkitoverflowscrolling touch ffxsam provide example incorrectly produces warning react warning appears suppressed correct name used sounds like style libraries using applying prefix incorrectly case open issue including reproduction", "d": "6/2017"}, {"body": "jasoncramfighter please provide example reproducing issue use jsfiddle template hard help nt enough information also appear errors provided examples actually returning render method tried take example adjust runs reproduce issue appears working example provide example reproduces issue happy help identify issue react", "d": "6/2017"}, {"body": "hey aweary thanks fast response apologies enough information created fiddle using template removed reference formcontrol avoid confusion issue still appears switch minified nonminified good part issue seems line code mistakenly forgotten remove line never noticed nonminified version somehow still works fail like minified version either way think behavior seems inconsistent fiddle cdns used", "d": "6/2017"}, {"body": "jasoncramfighter thanks clarifying reason happens development unminified build props frozen dev actually deleted production props frozen gets deleted get error strict mode deleting property frozen object throws looks like components using rendered strict mode use class components see example throws error dev nt aware discrepancy cc gaearon intended", "d": "6/2017"}, {"body": "adding fiddle code seems make throw sure classes change anything though", "d": "6/2017"}, {"body": "right explicitly using strict mode resolves strange nt strict default", "d": "6/2017"}, {"body": "gekkio thanks taking time file issue controlled input react assumes source truth input value prop essentially controlled means controlled react prop settings property node controlled component put input inconsistent state react recommended possible zombiejs provide way update input value dispatching actual events instead setting property reacttestutils simulate method might useful reference sorry breaking behavior try avoid possible think safe say pattern unsupported hope helps", "d": "6/2017"}, {"body": "thanks quick response open bug zombiejs might consider workaround test code zombiejs nt change current approach", "d": "6/2017"}, {"body": "troll", "d": "6/2017"}, {"body": "waste time adding comments close plz", "d": "6/2017"}, {"body": "\u706b\u94b3\u5218\u660e", "d": "6/2017"}, {"body": "shame", "d": "6/2017"}, {"body": "trolling trollface", "d": "6/2017"}, {"body": "actionable suggestions improving react api open hearing stands issue destructive happy found success vue best luck", "d": "6/2017"}, {"body": "\u4e22\u4eba \u4e22\u4eba \u4e22\u4eba shame u", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "thanks feedback specific suggestions learn vue love hear thread constructive lock", "d": "6/2017"}, {"body": "nt seem like question related react please ask javascript question stackoverflow thanks", "d": "6/2017"}, {"body": "mondwan share example reproducing issue seeing warning using latest version last release example use jsfiddle starting point reproducing", "d": "6/2017"}, {"body": "non minified version works expected however using minified version maybe related issue", "d": "6/2017"}, {"body": "mondwan issue using minified build unminified build means internal flag uses suppress warning applied react warns make sure use correct build environment minified production unminified development", "d": "6/2017"}, {"body": "umm warning first place brandon dail notifications closed receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "used components created example warning catch cases someone moving classes forget remove favor never get warning using correct build also important use minified bundles production much performant token useful use unminified build development contains sizeable set useful checks warnings", "d": "6/2017"}, {"body": "point still using reactcreateclass instead class even though replaced createreactclass get warning first place createreactclass made class rules like effective brandon dail notifications getdefaultprops used components created createreactclass example warning catch cases someone moving createclass classes forget remove getdefaultprops favor defaultprops never get warning using correct build createreactclass also important use minified bundles react reactdom production much performant token useful use unminified build development contains sizeable set useful checks warnings receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "getting warning using production build development build production build strips code prevents warning development", "d": "6/2017"}, {"body": "general nt support mixing production development versions libraries", "d": "6/2017"}, {"body": "would still nice way avoid false positive pretty confusing maybe turn flag number always set dev set prod mode nt check", "d": "6/2017"}, {"body": "ahhh see points thanks explanations actually always show warnings problem however hided development codes codes get striped running production order get rid warnings better changes calls defaultprops correct brandon dail notifications getting warning using production createreactclass build development react build production build strips code prevents warning development receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "fix false positive warnings need either use reactjs createreactclassjs development reactminjs createreactclassminjs production mistaken warning occur mix development production versions two libraries", "d": "6/2017"}, {"body": "shows warnings changing defaultprops suggested dan abramov notifications fix false positive warnings need either use reactjs createreactclassjs development reactminjs createreactclassminjs production mistaken warning occur mix development production versions two libraries receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "work even without changing still work correctly createclass issue mistaken warning mistaken warning happens mix development production versions", "d": "6/2017"}, {"body": "probably fails run rather get latest version included bugfix need cherrypick equivalent master think", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "store callback call variable example callback set check need maybe bad practice option", "d": "6/2017"}, {"body": "seriouslyfluffy quite clear solution robust lib user always notified whether process succeeded failed example windowconfirm function return null user click cancel make async version confirm callback always called", "d": "6/2017"}, {"body": "one", "d": "6/2017"}, {"body": "try", "d": "6/2017"}, {"body": "seriouslyfluffy hi one question trigger callback body focus event get files user selected test focus event triggered input change event", "d": "6/2017"}, {"body": "example showed access files via array fileslist", "d": "6/2017"}, {"body": "file inputs nt expose cancellation events already selection made call file selector opened canceled passapole solution addresses also future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "hey richburdon thanks input agree warning nt descriptive could note warning actual stack trace available call thankfully react implement better error reporting even include render stack example logs warning check console see including render stack making easier trace error since issue already resolved master going close always open hearing feedback make error messages better", "d": "6/2017"}, {"body": "note nt recommend using react time", "d": "6/2017"}, {"body": "way react also provides information although less detailed stateless function components given refs see ref wrappedinstance statelesscomponent created apollo component attempts access ref fail fact appear trace instead real component names means build might misconfigured would expect see real component names could share minimal project reproducing could take look happening", "d": "6/2017"}, {"body": "example using react current version includes component names warning warning stateless function components given refs see ref foo greeting created app attempts access ref fail", "d": "6/2017"}, {"body": "cc jquense", "d": "6/2017"}, {"body": "surethis weird kinda case problem seems nt control group onchange event nt fire value correct case mixing defaultchecked seems like unsupported combo either input controlled cc insin well since also noticed", "d": "6/2017"}, {"body": "ah fairly certain know happening value tracked individual input another radio checked update last checked value remains click back aect thinks already checked nt update think needs simple call reactdominput", "d": "6/2017"}, {"body": "addendum happens uncontrolled groups method triggers update component instance since value state changing perspective instance nothing changes wish uncontrolled inputs nt exist", "d": "6/2017"}, {"body": "managed reproduce simpler test case defaultchecked needed jsx var hello reactcreateclass render function return reactdomrender documentgetelementbyid container changing radio buttons back forth log cc linkgoron seems like actual bug state react view dom differs actual dom see fiddle example", "d": "6/2017"}, {"body": "managed reproduce problem comparing vs also without defaultchecked", "d": "6/2017"}, {"body": "sum problem uncontrolled radiocheckbox groups probably update issue title", "d": "6/2017"}, {"body": "issue fixed track problem affecting web app stuck make radio buttons work", "d": "6/2017"}, {"body": "easy workaround manage radio buttons component state instead relying underlying dom yes bit annoying", "d": "6/2017"}, {"body": "supported mix packages please ensure version make work issues please provide project reproducing", "d": "6/2017"}, {"body": "tried changing version written previously getting error get result share project dont liberty need information", "d": "6/2017"}, {"body": "ca nt share project please share minimal example reproducing create new project add one test verify still issue", "d": "6/2017"}, {"body": "replace", "d": "6/2017"}, {"body": "run changing versions pretty sure different version file say missing definitely something wrong either versions really got installed bundler configuration close nothing provide project reliably reproducing could take another look", "d": "6/2017"}, {"body": "provide project reproducing", "d": "6/2017"}, {"body": "ya go look console error question thank", "d": "6/2017"}, {"body": "issue passing invalid value attribute specifically remove see error goes away confusing pausing exception though ca nt reproduce outside react strange must missing something", "d": "6/2017"}, {"body": "hey aweary yup issue mind hitting error makes perfect sense passing nan value path attribute able pause exception get type stack trace leading back element causing issue maybe code wrapping function call question hiding somethingstopping exception bubbling", "d": "6/2017"}, {"body": "tnrich wondering browser bug assuming using chrome firefox nt seem throw error invalid values discovered throws error even without javascript might mean chrome throwing error way nt compatible provided debugging tools even windowonerror nt invoked error might something brought chrome team instead", "d": "6/2017"}, {"body": "works end", "d": "6/2017"}, {"body": "probably means custom npm registry nt updated yet", "d": "6/2017"}, {"body": "need one file specifically would help", "d": "6/2017"}, {"body": "guess critical still pay extra module overhead modules instead", "d": "6/2017"}, {"body": "instead guess since two packages overhead probably nt significant bundles add unnecessary numbers comparison result like tool", "d": "6/2017"}, {"body": "sure combining files right approach combining modules single file definitely impact startup performance using react npm node module feel move way using browserify wants get accurate results ie use webpack", "d": "6/2017"}, {"body": "quirk chrome displays values set javascript react actually generate string sets dom properties verify fiddle uses dom apis without quotes chrome displays result", "d": "6/2017"}, {"body": "gaearon looks like fiddle posted content fiddle understand correctly though meant looks like chrome culprit react firefox amp safari correctly change string georgia times new roman serif using single quotes thanks looking anyways", "d": "6/2017"}, {"body": "oops must forgotten hit save", "d": "6/2017"}, {"body": "currently intentional although time less", "d": "6/2017"}, {"body": "extremely unlikely bug react either two reacts create element string outside method nt think third option reason error would occur understand hard isolate need least project inspect look issue really confident one two issues explain happens two reacts string refs needs set currently executing component executing component otherwise would nt know owns string refs produced keeps pointer global shared state inside however elements created method needs read state associate owners elements renders component talks different one calling error occur ensure points calling via jsx", "d": "6/2017"}, {"body": "nt think help without repro project hope helps", "d": "6/2017"}, {"body": "gaearon confirm whether different react given theres easy identity aware location mount application component describing add output exact value implies must using copy react ca nt find copy also analyzed webpack stats could nt find second copy could nt identify way well identity would matter might concern sure easy way confirm best guess theres kind race condition react larger html nodes causing time render increase thus exposing purely guess form experience dealing infrastructure code really sure come use case given nda could give access dump repo able replicate also willing spend time synchronously someone via screen share person sf help debug obviously work around feel like issue upstream like help sort", "d": "6/2017"}, {"body": "sure test used important part verify copy react reactdom sees matches one use app need put logs reactdom module code addition components", "d": "6/2017"}, {"body": "want get particular module looking need match react module reads reactdom writes", "d": "6/2017"}, {"body": "dig update details pretty sure one react possible webpack causing problems usage abnormal", "d": "6/2017"}, {"body": "provide use js class componenta extends reactcomponent shouldcomponentupdate nextprops nextstate thispropsanypropnestedobject newpropsanypropnestedobject return true return shallowcompare nextprops nextstate render return nt think adding embrace inheritance like api consistent react methods might also interpret special way future allowing override clashes also might support form purity annotations functional components work form inheritance either would nice avoid deviation api thanks suggestion though", "d": "6/2017"}, {"body": "occured firefox version windows", "d": "6/2017"}, {"body": "provide reproducing case", "d": "6/2017"}, {"body": "unfortunately difficulty providing reproducing case nt indication react components involved update stack trace pretty much production error reporting system could potentially related certain types dom nodes style attributes", "d": "6/2017"}, {"body": "bit hard imagine reproduce locally set breakpoint try capture data work way call stack", "d": "6/2017"}, {"body": "sorry case please confirm read message example says might two copies react run verified case", "d": "6/2017"}, {"body": "yes indeed issue deleted ran fixed issue", "d": "6/2017"}, {"body": "would like send fix still time cutting", "d": "6/2017"}, {"body": "sure", "d": "6/2017"}, {"body": "looking cut tomorrow please let us know ca nt finish today try fix", "d": "6/2017"}, {"body": "working right fix today", "d": "6/2017"}, {"body": "thanks", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "reported two times fix soon", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "thanks already reported", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "cc aweary nhunzaker", "d": "6/2017"}, {"body": "also cc jquense code added", "d": "6/2017"}, {"body": "fix perhaps got master let find", "d": "6/2017"}, {"body": "arg problem much time forgot also added master", "d": "6/2017"}, {"body": "thanks remember anything else cut", "d": "6/2017"}, {"body": "least terms changes made nt hear issues nt think anything else added", "d": "6/2017"}, {"body": "cherrypick cut thanks jquense gaearon", "d": "6/2017"}, {"body": "update waiting cut fix release either way within day", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "sure issue related error safari desktop version react regular input fields email password types happens load time also everytime onchange fires", "d": "6/2017"}, {"body": "please provide minimal example eg jsfiddle consistently reproduces issue safari", "d": "6/2017"}, {"body": "gaearon reported bug confirmed fixed", "d": "6/2017"}, {"body": "cc iamdustan case interested", "d": "6/2017"}, {"body": "sorry posted react native side", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "see reply", "d": "6/2017"}, {"body": "think issue need use local nt work xhr cross domain stuff", "d": "6/2017"}, {"body": "thanks gaearon one fixture requires running local server looks like fixtures good go", "d": "6/2017"}, {"body": "marksmt example set state onclick handlers state actually changes first click componentdidmount executed", "d": "6/2017"}, {"body": "updated code actually issue file upload dialog show site loads component one gets loaded site gets loaded dialog box nt appear bug referring words trigger file upload dialog component loads site loads know example pretty minimal application want dialog upload open whenever component loaded seen weird things like upload dialog opened component gets unmoutented", "d": "6/2017"}, {"body": "guess due security restrictions browsers related react call inside handler actual click vanilla js demo", "d": "6/2017"}, {"body": "section issues react framework tips best practices join huge react community chat issues like answer post good pattern controlled inputs unfortunately ca nt make controlled input stateless component way", "d": "6/2017"}, {"body": "robertistok mentioned try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "responding state change event react simply decides rerender ancestor component without respecting shouldcomponentupdate ignoring diff algorithm means would probably call componentwillunmount autocomplete component wrapper would able destroy component nt understand part documentation says rerender refers calling render method reconciling changes unmounting mounting components react never unmounts components unless key type changes ca nt guarantee react wo nt calling render cases pretty much guarantee component key type nt change react wo nt unmount component destroy state attempt reconcile parts dom managed react always shortcircuit returning managing content manually touch dom react nt manage eg imperatively change attribute nt exist react side react wo nt blow away changes rerendering experience maintaining components many interfacing nonreact code depend behavior rules enough keep code working even make changes algorithm example recently completely rewrote implementation unlock long requested features dozen components required changes think reasonable price pushing library forward sure helps hope nt want overpromise nothing change also lot code needs keep working relies patterns way clarify docs regards two guarantees happy take pr", "d": "6/2017"}, {"body": "also specific concerns please create examples happy discuss problem issues like often get philosophical people start talking past completely different things want make sure discussing cases", "d": "6/2017"}, {"body": "experience rules enough keep code working even make changes algorithm yes definitely agree see confusion coming take look snippet documentation try think like someone new react would take important remember reconciliation algorithm implementation detail react could rerender whole app every action end result would read nt understand talking calling method component rendering usually means taking virtual tree transforming dom representation rerendering first glance would mean dropping old dom tree recreate scratch nt one got interpretation nt mind like submit pr clarify part documentation rerendering means calling render components completely fine would nt fear react thanks explanation", "d": "6/2017"}, {"body": "sure pr would great sorry confusing rendering bit overloaded term challenge phrase way would understandable beginners provided enough information advanced users", "d": "6/2017"}, {"body": "suggested changes part", "d": "6/2017"}, {"body": "also updated article reflect misunderstanding sorry confusion", "d": "6/2017"}, {"body": "thanks report longer maintain transitiongroup repository please report instead cheers", "d": "6/2017"}, {"body": "hey thanks taking time write suggestion umbrella issue new lifecycle method ideas could post proposal instead thanks", "d": "6/2017"}, {"body": "react native depends version package faster release cycle please use whatever version react native tells exists related version ready public consumption yet sure issue close seems intentional problems please describe detail eg need react native project crashes", "d": "6/2017"}, {"body": "bug unintentional cc flarnie", "d": "6/2017"}, {"body": "happened babel transform turning calls nt transpile addons extracted fix", "d": "6/2017"}, {"body": "closing since fixed", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "inspecting unpkg seems confirm fixed latest version two places version polyfill inline references minutes try pull something windows laptop see issues come", "d": "6/2017"}, {"body": "nt find quick way test loading module let know tomorrow would helpful trying load js fiddle unpkg nt get right", "d": "6/2017"}, {"body": "yes fixed thanks", "d": "6/2017"}, {"body": "thanks reporting", "d": "6/2017"}, {"body": "possible please see past discussion", "d": "6/2017"}, {"body": "behavior described could convenient cases like one mention nt think good generic solution firstly would require react renderers like dom maintain explicit whitelist event handlers treat differently component props general whitelists something moving away eg dom attributes bloat codebase hard maintain beyond whitelist dom would presumably also need map html elements dispatched events know passed eg otherwise happen ambiguous cases like jsx class somecomponent extends reactcomponent render propose react passthru onclick component explicitly pass onchange though native event onfoo return example think proposal also breaks encapsulation components users component nt necessarily knowcareabout dom elements composes specific external api maybe component wants intercept events run custom logic allow propagate team considering ways improve event subscriptionhandling future versions react bit orthogonal request mention passing note area may changing future well thanks proposal examples going close though nt think something canshould accommodate cheers", "d": "6/2017"}, {"body": "modify input text case transform think expected way react guess particular transform preserves number characters react point view text completely replaced typing puts cursor end afaik general solution would work cases work around manually managing dom selection using ref explained detail think bug encourage participate discussion thoughts add cheers", "d": "6/2017"}, {"body": "cc nhunzaker aweary", "d": "6/2017"}, {"body": "thanks report sullenor looks like works expected react look see include fix release", "d": "6/2017"}, {"body": "extend given example radio elements see fires per radio words event fired value name changes might well rename screen grab clear callback fired seems different problem sullenor describing tested google chrome version official build", "d": "6/2017"}, {"body": "klavs mentioned uncontrolled radio inputs project stopped working expected stopped calling onchange function radio button checked", "d": "6/2017"}, {"body": "avivshafir particular issue filed release nt think describing related confirm bug", "d": "6/2017"}, {"body": "gaearon yes think particular issue related indeed almost certain bug example sorry confusion", "d": "6/2017"}, {"body": "thanks avivshafir comments managed understand reported issue affecting uncontrolled radio inputs working example controlled radios working expected", "d": "6/2017"}, {"body": "hi try keep github issues focused either bug reports discussion around requirements new features question actionable issue going close suggest reposting question one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow cheers", "d": "6/2017"}, {"body": "believe bug react please create example reproducing", "d": "6/2017"}, {"body": "assume question instance expecting refs instances define components create app extending nt automatically inherit methods like method others like available default components exported react native ones backed native views might find example page useful deals issue specifically apologies misunderstood question", "d": "6/2017"}, {"body": "close think bvaughn addressed question still issues please create complete runnable example reproducing problem thanks", "d": "6/2017"}, {"body": "confusing behavior rather avoid using docs use documentation indeed runtime methods may available older browsers like feel like willing live examples people use modern browsers learning single occurrence seem like something people would run close reconsider people keep bumping issue", "d": "6/2017"}, {"body": "aaronshaf thanks report map camelcased viewbox cases share small example reproducing issue created small example see rendered chrome firefox issue template contained link jsfiddle use template example future reference great could provide information requested opening issue thanks", "d": "6/2017"}, {"body": "looks like interference polyfill", "d": "6/2017"}, {"body": "thanks report brendoncrawford believe resolved", "d": "6/2017"}, {"body": "thanks taking time write request thomasjuster future versions react warn unknown props dom elements advise avoid spreading props onto dom nodes general unless guarantee contain valid html attributes warning put place ease transition react eventually let attributes pass since react removing validation layer wo nt available export check implements change hope helps", "d": "6/2017"}, {"body": "example use spread avoid passing invalid propsattributes", "d": "6/2017"}, {"body": "works pointing latest alpha", "d": "6/2017"}, {"body": "breaks server rendering", "d": "6/2017"}, {"body": "expected fully worked would nt alpha describing new feature name says stable yet", "d": "6/2017"}, {"body": "said nt think currently support error boundaries server renderer might worth raising separate issue", "d": "6/2017"}, {"body": "happy take pr fixing", "d": "6/2017"}, {"body": "nt since nt think anybody checked bundles extrabloated code believe close future need fix replace old domserverrenderer completely remove old bundles build process", "d": "6/2017"}, {"body": "good point make sure something fix next two weeks nt manually exclude running sync", "d": "6/2017"}, {"body": "yea either way works disabling easy removing corresponding bundles", "d": "6/2017"}, {"body": "sorry noob question something written fixtures differ unit test suite right impression fixtures run ci meant looked humans", "d": "6/2017"}, {"body": "right impression fixtures run ci meant looked humans aickin correct assuming ssr fixtures setup like dom ones", "d": "6/2017"}, {"body": "yep things hard catch automated way eg things nt replicate jsdom could added selenium manual fixtures bisect far seems like less hassle dealing flaky integration tests", "d": "6/2017"}, {"body": "already done want take please let know take also would great point right direction starting one tia", "d": "6/2017"}, {"body": "nt think feel free work first post describes code lives done specific questions work please post thread try answer", "d": "6/2017"}, {"body": "hey rupojs made progress", "d": "6/2017"}, {"body": "hi matthewrister version introduced new experimental error boundary feature basically trycatch component tree feature improved significantly upcoming version currently available alpha interested trying error occurs render component lifecycle method react looks tree nearest ancestor component define method method called given chance rerender recovery state rerender also fails react continues looking next highest error boundary eventually runs functions similar trycatch behavior test code feature interested learning works going close issue since seems overlap highly existing feature", "d": "6/2017"}, {"body": "thanks bvaughn great see already work going space kudos writing entertaining test cases matt", "d": "6/2017"}, {"body": "would add tests pretty old describe feature supported cases work support react much comprehensive described tests", "d": "6/2017"}, {"body": "whoops thanks dan nt mean link version test", "d": "6/2017"}, {"body": "puzzled nt understand test failed us ci run ran test showed passing remembered made change make tests properly run ci back think related ci change made jest task runner turning exit", "d": "6/2017"}, {"body": "thanks investigating clarify issue pr merge base include fix might prs like need mindful ideally rebase old prs merging", "d": "6/2017"}, {"body": "hi rubyruy team nt yet decided best expose accompanying build tooling create support custom renderers roadmap though time think best bet would probably fork repo", "d": "6/2017"}, {"body": "closing duplicate let discuss", "d": "6/2017"}, {"body": "thanksbut notice sections translated think important help developers understand react", "d": "6/2017"}, {"body": "nesmalltown thanks reminding continue translation work keep coming react updates", "d": "6/2017"}, {"body": "awesome please keep track plan use tool translation like jest", "d": "6/2017"}, {"body": "gaearon ok keep track", "d": "6/2017"}, {"body": "thargarius share source component looks like muted video using prop problem please provide example reproducing issue use starting point", "d": "6/2017"}, {"body": "hi thargarius ca nt tell description issue application code thirdparty component react please provide repro case template start narrows things react although react rendering html snippet provided think looks correct edit looks like aweary beat", "d": "6/2017"}, {"body": "oh realized published issue wrong repo sorry inconvenience", "d": "6/2017"}, {"body": "hi two ways writing equivalent second one compiled first one using bind attach methods class prototype example still attach function instance thismethoda thismethodabind essentially facebook use second way class properties aware still experimental part want stick stable syntax could bind manually hope helps", "d": "6/2017"}, {"body": "far runtime behavior goes identical later binding method constructor means defining method class prototype instance former define method instance property avoiding duplication mentioned experimental ymmv check example babel repl see difference", "d": "6/2017"}, {"body": "thanks gaearon helpful question coming testing component methods find method class prototype use ca nt find method prototype use see issue enzyme", "d": "6/2017"}, {"body": "aweary thanks helps lot process converting classes", "d": "6/2017"}, {"body": "leiclearsky also check automatic class transform used convert thousands components documented", "d": "6/2017"}, {"body": "provide details version react etc see error create something react reactdom jquery like", "d": "6/2017"}, {"body": "hey mentioned please provide example reproducing issue template start nt explicitly support compatibility libraries like jquery nt think anything react would prevent interop sounds like maybe trouble getting work together try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "closing since response", "d": "6/2017"}, {"body": "hello working first contribution", "d": "6/2017"}, {"body": "hey assitan heads already open pr fix", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "resolution ship version see badly breaks conditions get data", "d": "6/2017"}, {"body": "would calling much overhead", "d": "6/2017"}, {"body": "markerikson semantically different operation adds keys", "d": "6/2017"}, {"body": "looks docs ah yes interesting nt noted sure seems like useful addition", "d": "6/2017"}, {"body": "need find selected element already know one selected thanks onchange callback know data used render children seems wrong read back tree", "d": "6/2017"}, {"body": "fezvrasta onchange events fired initial render", "d": "6/2017"}, {"body": "run need search singleplural children maybe would make sense complement basically use case consumer library building adamant wanted able use navigation component like components need split like responsive layout work internally main navigation component wrap content secondary navigation menu one container content shows top right large enough collapses side small screens initial implementation build navigation take parts props like somewhat valid argument much less readable achieve desired structure ended writing couple helper functions scan children find ones appropriate types like let typesareequal typea typeb gt typea typeb processenvnodeenv production workaround proxies used reacthotloader typesareequal typea typeb gt typea typeb typeaname typebname function getchildrenwithtype children type let childrenwithtype reactchildrenforeach children child gt child amp amp typesareequal type childtype childrenwithtypepush child return childrenwithtype function getchildwithtype children type strict true let childrenwithtype getchildrenwithtype children type childrenwithtypelength return childrenwithtype else strict throw new error getchildwithtype type child count childrenwithtypelength else return null", "d": "6/2017"}, {"body": "mjackson probably want add expanded key like imagine use example like let make label css animation fades created way stateful choose way make stateful animation wo nt play switch items key variant add explicit keys switch foo bar animation play switch foo default wo nt key looking component isolation way knowing avoids problem encoding nesting key even would probably semantically said think use case traversing children better handled coroutines fiber fragments help things like", "d": "6/2017"}, {"body": "agree time want array children probably want keys sebmarkbage sometimes nt case router component nt want assume different key might render thing case would nt want unmount remount contrived basically ca nt always assume different key think probably total edge case happy close ran issues using inside thought worth shot seeing anyone else thought might useful well", "d": "6/2017"}, {"body": "think touches expectation one might react children using jsx simply syntax sugar borrowing semantics react semantically equivalent something like js sometimes part bothers intuition right basically test see happens different components might different things even accidentally switch behavior releases", "d": "6/2017"}, {"body": "add handling routes reactjsx seems like bad idea perhaps looks nice concept nt seem sound regular js would much better fit would allow define exact semantics want crazy", "d": "6/2017"}, {"body": "yes uses syntax sugar standalone also able render purely syntax sugar previous versions router bit topic reason decided reuse components inside make easier people upgrading previous versions refactoring imagine routes render independently great dropping content distant places app need render url strong use case make really convenient nt use components make everything work another strong use case choosing different routes common routers instead inventing new syntax use case decided reuse bunch components inside", "d": "6/2017"}, {"body": "finally tracked appears offending line understand code saying getdefaultprops ok component created production seems counter might intended environment production nt want warning triggered correct would nt want set value environments fact warning environment seems like regardless environment nt want see warnings components created using base", "d": "6/2017"}, {"body": "would also note conjunction using webpack setting", "d": "6/2017"}, {"body": "turns organization using wonky build process items webpacked others running react development mode webpacking dependencies production mode caued mismatch dependencies way things react expected user error", "d": "6/2017"}, {"body": "acutually add appears right", "d": "6/2017"}, {"body": "keys ensure reorder items react treats reorder rather update item list important performance also correctness otherwise might end nested state staying place parents conceptually moved like reorderable list input fields inside", "d": "6/2017"}, {"body": "need reproducible example proceed close since impossible investigate create one reopen thanks", "d": "6/2017"}, {"body": "neytema understand referencing example would need pass string type react component created array type react elements type checking means preventing error mistaken though theory semantically correct adds keys", "d": "6/2017"}, {"body": "sourabhchourasiya much code us reasonably help lifecycle methods nt called application may silently failing check errors swallowed provide reduced test case template start demonstrating issue react would great sounds like usagesupport question try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow happy reopen provide test case demonstrating issue react thanks", "d": "6/2017"}, {"body": "nhunzaker nonreact comparison case asked", "d": "6/2017"}, {"body": "bit hard figure going case going eventually drop favor firstclass portal api see working example using requires react alpha close unlikely change behavior hope helps", "d": "6/2017"}, {"body": "gaearon thanks following try refactor portal implementation using materialui solve regression introduced fiber reconciliation algo", "d": "6/2017"}, {"body": "nt think regression seems like example issue fiber change behavior", "d": "6/2017"}, {"body": "sure regression either could edge case making work prerelease version still noticed breakingchange materialui project open issue reference dig", "d": "6/2017"}, {"body": "still confused saying react version uses fiber ever worked saying different similar issue", "d": "6/2017"}, {"body": "managed reproduce experience simple jsfiddle demo behaviour definitely changed latest next however likely important affecting unstable api going first class one fiber version gaearon thanks support", "d": "6/2017"}, {"body": "fateriddle reactcsjs js import react react import csjs reactcsjs csjs export default class button extends reactcomponent render return flexibity instance run postcss transforms compile time css problematic overall react nt make pick unless brings us forward vue inhibits innovation sidelines fumbling around old css webpack loaders react churning awesome stuff like glamor styledcomponents one day idea come along good perhaps traditional css fall away like jsx made html irrelevant pick method suits", "d": "6/2017"}, {"body": "think syntethic event trigger bubbling phase instead capturing phase causing react use bubbling event simulate capturing event would use unified type event trigger event user registered event array", "d": "6/2017"}, {"body": "ca nt understand use capturing phase wrong smile strange issue exists", "d": "6/2017"}, {"body": "going work hopefully get resolved time release", "d": "6/2017"}, {"body": "closing favor internal diff", "d": "6/2017"}, {"body": "fixed next release", "d": "6/2017"}, {"body": "blocked issue build system relies closure compiler dependencies use createreactclass anything help process forward", "d": "6/2017"}, {"body": "fixed next release", "d": "6/2017"}, {"body": "change latest build createreactclass npm package need wait", "d": "6/2017"}, {"body": "see comment rc addons released separately today", "d": "6/2017"}, {"body": "fixed please verify plan publish final version tomorrow", "d": "6/2017"}, {"body": "future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "gaearon checking think move forward cc lacker", "d": "6/2017"}, {"body": "looks slick love lend hand need one", "d": "6/2017"}, {"body": "bvaughn glad love help dude safe get started sync thoughts writing new markup", "d": "6/2017"}, {"body": "joecritch nt final say happens docs site interested improving chat tom next day get context", "d": "6/2017"}, {"body": "bvaughn cheers brian", "d": "6/2017"}, {"body": "think avoid recommending mentioning docs representing children hidden prop implementation detail example use react without jsx still specific api representing children document api encouraging users utilize means unable change children represented internally without disrupting public api said feel relatively certain nt something want going go ahead close cc gaearon let know input feel differently thanks input everyone", "d": "6/2017"}, {"body": "thanks submit errata suggestion book question bad coding practice", "d": "6/2017"}, {"body": "working", "d": "6/2017"}, {"body": "example mine key ca nt formated number equal", "d": "6/2017"}, {"body": "aweary housekeeping close issues release fix shipped wait", "d": "6/2017"}, {"body": "nhunzaker typically close issue merged master", "d": "6/2017"}, {"body": "awesome thanks land next minor release react", "d": "6/2017"}, {"body": "igreulich agree making something like dispatching actions missing point", "d": "6/2017"}, {"body": "igreulich know seems like question reduxspecific number ways trigger ancestor updates nt involve redux example ing new location publishing state change state framework besides redux would argue state changes lifecycle methods always bad saying even etc would better wrap state change calls sure consensus react community think even seen dan abramov encouraging people dispatch actions", "d": "6/2017"}, {"body": "igreulich ultimately seems granted little information additional reducer listening action dispatched triggered lifecycle methods first place rather rely react tell made error redux understand sounds ideal instance reducer middleware responds location change causes component mount update simply impossible libraries like work independently whatever routing framework use whatever causes form component mount dispatch actions lifecycle methods even wrap dispatch", "d": "6/2017"}, {"body": "hard believe try use internal component state like function heard causes help want use something try fashion works great", "d": "6/2017"}, {"body": "guys everything saying redux reduxform reactrouter etc example trying say code running causes ancestor update probably cause errors later react immediately error ancestor update triggered rather blowing later confusing error messages help everyone including consumers libraries mistakenly addition docs explicitly state nt update local external state inside componentwillupdate", "d": "6/2017"}, {"body": "ok get docs direct message says note call thissetstate need update state response prop change use componentwillreceiveprops instead guy understand update state internal external bad idea trying fix thing blowing later confusing error messages think transactions react later new reconciler ca nt handle simple situation think deal", "d": "6/2017"}, {"body": "fixed please verify plan publish final version tomorrow", "d": "6/2017"}, {"body": "cool works thanks", "d": "6/2017"}, {"body": "also encountered issue originally posted issue facebookincubatorcreatereactapp cra repo description according docs assigned inside component method nt know created composed component inside constructor assigning testing runs without errors warnings running production build produced error rest application stopped working expected behavior also give error expect development application works production one well actual behavior error warning environment run commands project folder fill results ejected reactscripts react specify operating system windows home version browser version google chrome reproducible demo see project readme demonstrates see deployed version errors", "d": "6/2017"}, {"body": "likely bug hunch might already fixed master appreciate somebody could confirm writing failing test", "d": "6/2017"}, {"body": "gaearon following thread would interested verifying bug attempting fix still exist unless either bug reporters would like tackle", "d": "6/2017"}, {"body": "sure go ahead need look assignments reactcurrentownercurrent seems deviate production think deviation intentional either nt consider case breaking refs constructor protection got lost point", "d": "6/2017"}, {"body": "gaearon added test verify bug still exist master look fixing bug next", "d": "6/2017"}, {"body": "aweary many third party apis nt full filled standard like something style tags like polymer fulfilled communities need mostly things hack based like standard", "d": "6/2017"}, {"body": "fwiw found react cssmodules pretty nice work application code tricky mix dynamic values eg themes propsdrivenstyles otherwise think modules approach pretty nice", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "nt see version published yet", "d": "6/2017"}, {"body": "set still rc exists turn tomorrow", "d": "6/2017"}, {"body": "ah indeed probably internal registry slow try soon", "d": "6/2017"}, {"body": "confirmed working correctly", "d": "6/2017"}, {"body": "great thanks sending fix", "d": "6/2017"}, {"body": "gaearon good bet hard lot people look stack traces investigate components upgraded use", "d": "6/2017"}, {"body": "seems like need adding files", "d": "6/2017"}, {"body": "ah might misdiagnosed rickyh right looks like need add whitelist throw together pr get something testing", "d": "6/2017"}, {"body": "done also put jsfiddle anyone nt mind taking gander make sure nt missed something", "d": "6/2017"}, {"body": "merged addition also sent pull request ship next minor release", "d": "6/2017"}, {"body": "since response zhuyinjing going close assume usage issue figured still problem believe issue react please respond example reproducing issue use template", "d": "6/2017"}, {"body": "merged issue closed", "d": "6/2017"}, {"body": "agree well encompasses mouse events includes normalizations browser consistency think best leave warning situation thanks taking time submit issue though rauschma", "d": "6/2017"}, {"body": "seen similar problem santiagopuentep want find reason noticed elements get css transition move forward ie smaller index number wrt siblings dom order also lifecycle hooks called fixed maintain dom ordering transition gaearon need troubleshoot using fiber matters", "d": "6/2017"}, {"body": "noticed elements get css transition move forward huynguyen artifact react handles reordering really react bug would say reordering happen one way another react always handles reordering direction end simply browsers quirky able avoid reordering via flexbox instead related", "d": "6/2017"}, {"body": "gaearon finally able create vanilla js version problem persists react changing positioning dom nodes resets transition ones moved least jsfiddle vanilla version thanks help anyway", "d": "6/2017"}, {"body": "hello like solve issue beginner react slack channel irc channel would happy join", "d": "6/2017"}, {"body": "jackysatpal get touch going", "d": "6/2017"}, {"body": "gaearon dan say inside function get current version state assume want get current version state read modify", "d": "6/2017"}, {"body": "gives currently rendered state nt expose pending state might even calculated point discussion cc spicyj sebmarkbage thoughts particularly", "d": "6/2017"}, {"body": "gaearon dan say code prints console see consolelog render click button twice instead seems case prevstate receive functional setstate always state rendered ui", "d": "6/2017"}, {"body": "assume see setting state twice incrementcount function therefore increasing count magnitude rather time function called react nt actually rerender eventhandling completed setstate called twice function rerendering", "d": "6/2017"}, {"body": "react nt actually rerender eventhandling completed setstate called twice function rerendering yeah moment one could think react would call render first call functional set state apparently nt", "d": "6/2017"}, {"body": "seems like works", "d": "6/2017"}, {"body": "closing work remains around changes open new issues thanks gaearon nhunzaker bvaughn aweary acdlite everyone helped process onward towards", "d": "6/2017"}, {"body": "acdlite problem fiber app far major one simple test case crash browser chrome probably open task manager kill tab testing", "d": "6/2017"}, {"body": "thanks test case aware issue fix stable goes", "d": "6/2017"}, {"body": "gaearon sorry bothering wanted ask follow issue understand confusion created issue created new repo tried reproduce earlier line calling super without props line using props render passing props indexjsx npm start navigate works tried accept props constructor like diff diff git asrcappjsx bsrcappjsx index asrcappjsx bsrcappjsx import react react export default class app extends reactcomponent constructor props constructor super still works created issue expecting work mentioned missed props impression nt work makes sense nt pass react parameter project showed working without complaining anything react change way props passed passed lifecycle hook surprised nt work time kinda curious surprised works", "d": "6/2017"}, {"body": "mentioned passing constructor finishes inside constructor works pass constructor finishes running react assign manually case forgot", "d": "6/2017"}, {"body": "okay understood thanks", "d": "6/2017"}, {"body": "hitting clear indeed revert dom prop representing html attribute value works expected uncontrolled inputs controlled inputs react update dom props new value every change hitting clear noticeable effect setting dom prop empty string manually change fixes js class dateinput extends reactcomponent componentdidupdate prevprops prevpropsvalue thispropsvalue thisrefsinputdefaultvalue render return", "d": "6/2017"}, {"body": "react release", "d": "6/2017"}, {"body": "vicbell ready yet", "d": "6/2017"}, {"body": "gaearon really enough set ensure nt load execute unnecessary code production mentioned anywhere docs using webpack trying use minified versions using following config getting exactly error ie", "d": "6/2017"}, {"body": "szimek exact error except reactnative idea look", "d": "6/2017"}, {"body": "seem mixing incompatible versions", "d": "6/2017"}, {"body": "oh nt think thing official compatibility chart", "d": "6/2017"}, {"body": "react native always supports one version package find one checking looking peer dependency already get warning use wrong one", "d": "6/2017"}, {"body": "gaearon looked packagejson file version peer dependency react version installed point considering starting new project moving source folder", "d": "6/2017"}, {"body": "testing output component component component please nt tell also needs ensure compatibility", "d": "6/2017"}, {"body": "please provide project reproducing problem people generally use rn without issues need give details help", "d": "6/2017"}, {"body": "tell use npm instead yarn think people nt use yarn right", "d": "6/2017"}, {"body": "sorry need ask repository nt know", "d": "6/2017"}, {"body": "guess providing repo would mean nothing since app", "d": "6/2017"}, {"body": "take look see anything wrong side things ca nt answer questions like tell reactnativecli use npm instead yarn part repo", "d": "6/2017"}, {"body": "also using typescript maybe part issue", "d": "6/2017"}, {"body": "nt know report looked packagejson file version nt sound right see stack trace file nt exist try searching see redbox running file added also bumped minimal required react version would nt crash something wrong report", "d": "6/2017"}, {"body": "ok updated deps dependencies like error changed", "d": "6/2017"}, {"body": "please provide minimal code reproducing problem likely problem exactly error message says future versions provide details", "d": "6/2017"}, {"body": "try making zero current error message says makes think infinite loop somewhere error shows activating", "d": "6/2017"}, {"body": "gaearon started new one still business logic adding typescript shows start activate menu one publish github want take look", "d": "6/2017"}, {"body": "gaearon put base project see works", "d": "6/2017"}, {"body": "related issue originally described please create new issue project react native repo thanks", "d": "6/2017"}, {"body": "gaearon created one react native repo since might related instead react", "d": "6/2017"}, {"body": "ajayu", "d": "6/2017"}, {"body": "ajayu discovered using let key something loops code apparently nt polyfilled properly replacing map worked nothing reactrouter firing render call caused error happen", "d": "6/2017"}, {"body": "issue occurs specifically using", "d": "6/2017"}, {"body": "please read comment see issue without descriptive error code swallowing errors locking issue comments confuse people googling cause error always another error happened earlier code might swallowed", "d": "6/2017"}, {"body": "jeez annoying nhunzaker sebmarkbage aweary fix event plugin simply add new event guessing middle button clicks explicitly specced nt count breaking jeez", "d": "6/2017"}, {"body": "error nothing worked exact error cause completely different code react components shared iframes components different typeof value different iframes caused error although worked browsers error", "d": "6/2017"}, {"body": "able get working including much smaller others may want consider trying well", "d": "6/2017"}, {"body": "smorin", "d": "6/2017"}, {"body": "also problem send function prop child component production code works however test nt work error", "d": "6/2017"}, {"body": "mean using test renderer wo nt work please see reasons", "d": "6/2017"}, {"body": "use", "d": "6/2017"}, {"body": "longer maintaining transition group addons please check instead thanks", "d": "6/2017"}, {"body": "clear linked repo dropin replacement version maintained foreseeable future", "d": "6/2017"}, {"body": "ericnakagawa hramos anything side start process want lose valuable effort like get sync soon", "d": "6/2017"}, {"body": "gaearon ping eric directly leading localization effort sites", "d": "6/2017"}, {"body": "hi writing let anyone know help spanish translations watching issue", "d": "6/2017"}, {"body": "thanks ongoing work begin accepting translations coming weeks", "d": "6/2017"}, {"body": "stevemorin", "d": "6/2017"}, {"body": "smorin", "d": "6/2017"}, {"body": "aweary anyone else thread trying understand arguments officially supported part eventhandler class back specification according react seems three arguments passed syntheticevent object think node onclick handler undefined sure third object supposed looking documentation nt mention anything syntheticevent supposed get access nodedom object official object second argument points officially supported also supposed use syntheticevent appearing contain reference nodedomelement onclick event see screen shot version react according modified code semanticuireact import react component react import menu segment semanticuireact export default class menuexamplesecondarypointing extends component state activeitem home e name gt consolelog thissetstate activeitem name gt consolelog let arguments let index index lt alength index consolelog index consolelog thissetstate activeitem name thefunction consolelog handleitemclick e n l gt windowthee e windowthen n windowthel l thisthefunction consolelog consolelog consolelog thissetstate activeitem nname render const activeitem thisstate liquidweavergit", "d": "6/2017"}, {"body": "relay modern static queriesahead time code generation getvariables subscriptions graphqljs subscription support mutation typescript flow disable global variables modulenamemaper vscode terminal webpack vendor split multi output path babel babelruntime vs babelpolyfill passperpreset bad idea reexport issue ascii art licecap", "d": "6/2017"}, {"body": "looks relevant someone please comment possible child b render runs first runs b render implemented", "d": "6/2017"}, {"body": "aweary suggestion moving idea called state updates called may updated allowed certain cases currently makes sense run code whenever state updates even render wo nt happen wo nt work eg contextproviding component needs update child subscribers even best rerender immediate child due frequency updates workable use lifecycle method", "d": "6/2017"}, {"body": "carrying mstijak jamespedid emphasise whilst may discourage deep inheritance according sebmarkbage pretty usefulimportant able run something construction mounting sense typescript ts sanitised production code sorry use case seems obscured abstract class basecomponent extends reactcomponent props rxbehaviorsubject selected rxobservable componentwillmount thisprops new rxbehaviorsubject thisprops thisselected rxobservable combinelatest thisprops thiskey map props key gt props key componentwillreceiveprops nextprops p thisprops next nextprops class concretecomponent extends basecomponent lt gt key rxobservableof name actually changes practice note ca nt perform initialization inside constructor runs child constructors run child constructor initializes initialization ca nt run inside initial render needs use properties set note nt async ready render one level inheritance nt go deeper alternative lets factor common parts component would mixins guess another way might pass every value child using extra constructor parameters works pretty unergonomic remember pass context requires parent initialize fields summary pattern stable works correctly asis nt appear pleasant substitute afaict happy corrected", "d": "6/2017"}, {"body": "tekacs yo dawg heard like reactive programming put rxjs stream could get reactive updates get reactive updates wink", "d": "6/2017"}, {"body": "build observable many observables combined rather handle latter specially yes take component reactively updated whole reactively update inside result comes pretty nicely despite silliness", "d": "6/2017"}, {"body": "tekacs passing data props observables take place redux etc would", "d": "6/2017"}, {"body": "use case find compelling eg want trigger async data request know need soon first want render child content kind like link browser however nt necessarily need handle instance might enough static method without access", "d": "6/2017"}, {"body": "without access state would store result async request", "d": "6/2017"}, {"body": "would rely external system keep cache around like relay flux store request available like something nt get direct handle resource separate request gets data note use case meant used canonical data loading model async api builds ideas would explicitly block rendering subtree data fetched could combine prefetches render api update block async", "d": "6/2017"}, {"body": "tekacs case think number ways could avoid deepening class hierarchy still accomplish want example js function createrxjscomponent key methods key rxobservable methods object reactclass class rxjscomponent extends reactcomponent selected rxobservable let key methods rxjscomponent key rxjscomponent key methods key return rxjscomponent const concretecomponent createrxjscomponent key rxobservableof name actually changes practice", "d": "6/2017"}, {"body": "yup several state streams include observable graphql queries via apollo state store others passed children propagate back rather messier pattern passing functions suggest last post certainly works certainly thought using abstract classes make easy downstream implementors team implement component correctly b access override variety common functionality used many components kind perhaps makes less clear chose simplest example could find post reduce things assure result turns unmanageably messy huge done using pattern like confused actual base component looks like wrote hours recently get something core sorted subclasses whilst certainly possible transform form give nearly practical", "d": "6/2017"}, {"body": "blocked issue build system relies closure compiler dependencies use createreactclass anything help process forward", "d": "6/2017"}, {"body": "merged soon", "d": "6/2017"}, {"body": "fixed please verify become tomorrow", "d": "6/2017"}, {"body": "gcc complains trailing commas object literals error positions seem wrong though", "d": "6/2017"}, {"body": "fix trailing commas issues bit frustrating nt whole list issues fix one one", "d": "6/2017"}, {"body": "gaearon react supports bellow", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "gaearon ignore gcc warn", "d": "6/2017"}, {"body": "ah see regardless easy fix added fix final cut soon", "d": "6/2017"}, {"body": "warning error behavior depends language level set gcc gaearon try new build", "d": "6/2017"}, {"body": "sorry nt published version without trailing commas yet final testing", "d": "6/2017"}, {"body": "always check results using", "d": "6/2017"}, {"body": "fixes", "d": "6/2017"}, {"body": "works fine afaict thanks", "d": "6/2017"}, {"body": "thanks reporting issues sorry nt acting fast good news revamped addons built unlikely issues find something able fix much faster", "d": "6/2017"}, {"body": "workaround issue", "d": "6/2017"}, {"body": "closing fixed released", "d": "6/2017"}, {"body": "explanation disabling cloudflare html minification necessary see stackoverflow answer", "d": "6/2017"}, {"body": "aweary polyfill detect mouseup occuring outside browser window would wise safari devs comply browsers point", "d": "6/2017"}, {"body": "test component exists contains try using component without props pass testing component exists also kind risky basically would like typical div exists test component edit basically find works ok enough validate component shallow rendered output", "d": "6/2017"}, {"body": "error caused cloudflare html minification problem documentation problem solution", "d": "6/2017"}, {"body": "seem found another instance warning triggered null reference inside reacttoolbox dialog similar reactportal child method built testcase minimal would like nt able recreate bug couple hours jsfiddle without reacttoolbox test case", "d": "6/2017"}, {"body": "point unlikely spend time fixing working rewrite include addon said find easy fix please send pr", "d": "6/2017"}, {"body": "js reactcomponentprototypehandleevent function known reactcomponent events var map click onclick change onchange fallback helper function capitalize type return typecharat touppercase typeslice one handleevent rule return function handleevent e var method map etype capitalize etype method thisprops thispropsmethod mentioned sminutoli knows pattern passes nt use used till today trade slightly slower dispatch vs extremely improved memory consumption thousand components wo nt need instances boundmethods extra references benchmarked create simple test check bound arrow actual memory consumption vs classes based inherited react involved hey let developers decide looks like winwin everyone", "d": "6/2017"}, {"body": "talking oop creativity", "d": "6/2017"}, {"body": "sure thing sminutoli yet sebmarkbage closed year ago let try convince easily benchmarkable best way go", "d": "6/2017"}, {"body": "fixed released today", "d": "6/2017"}, {"body": "issue function example show error", "d": "6/2017"}, {"body": "littlee short mean instead", "d": "6/2017"}, {"body": "kopahead instead checked thisstateismustfill checked thisstateismustfill nt think related said", "d": "6/2017"}, {"body": "clippath attribute recognized react use clippath attribute name works", "d": "6/2017"}, {"body": "fixed released today please reopen open new issue referencing one still issue", "d": "6/2017"}, {"body": "issue around tag spa gaearon created minimal project reproduce issue chrome version thanks file structure appjsx js appjsx import react component react import reactdom reactdom class app extends component render return reactdomrender documentgetelementbyid container js webpackconfjs const path require path const webpack require webpack const extracttextplugin require extracttextwebpackplugin const htmlwebpackplugin require htmlwebpackplugin moduleexports context pathresolve dirname app entry app appjsx output filename js name js chunkfilename js id js path pathresolve dirname public module rules test cssscss use extracttextpluginextract use loader cssloader loader sassloader test jsjsx use loader babelloader exclude nodemodules test pngjpgsvg use loader fileloader nameimages name ext plugins new extracttextplugin css name css new webpackhotmodulereplacementplugin new htmlwebpackplugin template indexejs json presets react plugins transformobjectrestspread json name example version description img src issue scripts start webpackdevserver build webpack devdependencies babelcore babelloader babelplugintransformobjectrestspread babelpresetreact cssloader extracttextwebpackplugin fileloader htmlwebpackplugin react reactdom scssloader webpack webpackdevserver dependencies html img src issue", "d": "6/2017"}, {"body": "also confirmed doctyper findings rootnodeparentnode null similar workaround reactdomlibreacteventlistnerjs function findparent added following bypass error beginning learn react sure exactly happening unmounted node looking parent", "d": "6/2017"}, {"body": "nt pinpointed locomotif single change either creates eliminates failure attribute image tag minimum viable example rather small almost cra barebones one clones snapshot runs see error fiddle component image see get weird", "d": "6/2017"}, {"body": "appears nt guaranteed mounted dom calling within consequently sniffing yields missing", "d": "6/2017"}, {"body": "locomotif problem dealing remove", "d": "6/2017"}, {"body": "alexandernanberg makes absolute sense thanks trick recently added nt occur remove line code noticed console message appearing twice briefly assumed something loaded twice disregarded thought hot loader added image node couple days issue exposed thanks million nt think would thought look since indexejs radar also read johndugan post guess must missed", "d": "6/2017"}, {"body": "fyi edge ship passive event listeners last major browsers nt support yet", "d": "6/2017"}, {"body": "note chrome passivebydefault intervention applies event without explicit still force synchronous scrolling mousewheel twofinger trackpad scrolling wrote blog post subtleties also edge team intent implement intervention ship passive event listeners still want explicitly specify", "d": "6/2017"}, {"body": "trying css custom prop nt get applied", "d": "6/2017"}, {"body": "nt released yet", "d": "6/2017"}, {"body": "april pr merged april", "d": "6/2017"}, {"body": "fezvrasta forked pen still seeing style applied div", "d": "6/2017"}, {"body": "thejase see comment released april merge done days later", "d": "6/2017"}, {"body": "pixelass ah understand sorry nt thinking straight nonetheless correct selector previous fork would never see css property value anyway", "d": "6/2017"}, {"body": "wait next release right", "d": "6/2017"}, {"body": "release candidate npm final", "d": "6/2017"}, {"body": "thanks spicyj", "d": "6/2017"}, {"body": "trying use variables boolean way change things css ideal way would set workaround nt work either sets open instead manage jsx way disable units inline styles", "d": "6/2017"}, {"body": "think pass string", "d": "6/2017"}, {"body": "fezvrasta nt work get warning think wait", "d": "6/2017"}, {"body": "jump back since dealt p thanks felipeochoa table experience almost never want either native focus events tho react offer instead want focus events bubble encapsulated termed suspect tho point may unlikely would require new polyfill", "d": "6/2017"}, {"body": "add ca nt actually adapt mouseenterleave logic since nt set focusblur events", "d": "6/2017"}, {"body": "way print measurement dom like simple text nt access console", "d": "6/2017"}, {"body": "jimfb repro could please take look", "d": "6/2017"}, {"body": "unfortunately finddomnode throw called first clientside render", "d": "6/2017"}, {"body": "surprising functional component default", "d": "6/2017"}, {"body": "load error events fixes", "d": "6/2017"}, {"body": "mdogadailo nt seem affected load error events", "d": "6/2017"}, {"body": "zabojad yes ticket tag element like", "d": "6/2017"}, {"body": "like starter kit native modules able avoid bundling small projects example see react without webpack", "d": "6/2017"}, {"body": "suggestion small improvement istarkov code const makecancelable promise gt let hascanceled false promisethen val gt hascanceled reject iscanceled true resolve val catch error gt hascanceled reject iscanceled true reject error new promise redundant", "d": "6/2017"}, {"body": "sbenda paste code thanks", "d": "6/2017"}, {"body": "please check docs option", "d": "6/2017"}, {"body": "reparent important reactnative", "d": "6/2017"}, {"body": "add fuel fire trying workaround issue discovered current version ios safari nt trigger event using japanese hiragana ime think intentional composition menu never seems closed eyesofkids example workaround inputvalue never updated though fixes issue japanese ime", "d": "6/2017"}, {"body": "documentation nt mention way use html entities anymore solution given spicyj still works", "d": "6/2017"}, {"body": "codebases moving typescript flow think returning would useful try avoid using anymore except libraries force usage", "d": "6/2017"}, {"body": "playing around materialize select feature meteor react way fixed issue meteor handleselectchange event eventpreventdefault var test eventtargetvalue thissetstate value test render choose option option option option materialize select", "d": "6/2017"}, {"body": "tried onchange event nt fired type date", "d": "6/2017"}, {"body": "actually opposite also facing issue noitidart workaround working throws error saying valueselectnull find really useful require property also allow null values", "d": "6/2017"}, {"body": "note pr open reactdeepforceupdate update components subscribe certain context element languishing would ideal outofthebox behavior allow choosing event listeners forceupdatesubscribers pass updates tree wed may wout mertens woutmertens gmailcom wrote pavel use reactdeepforceupdate production nt often switching languages use give child reference forceupdate tree retaining state much better forcererendering whole tree magical exactly changing attribute context object default react wed may pavel lang notifications githubcom wrote hi first aware gaearon reactdeepforceupdate seems nt work production build trying solve live retranslation page including reexecuting router featurereactintl branch reactstarterkit worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting tricky production best resolved reactintl updated meantime may something wrong receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "likely get back another issue tracked", "d": "6/2017"}, {"body": "gaearon thank much summarising solutions issue exactly looking one question existing setting field solution recommended way eg set mounted flag asking webpack docs example handles slightly differently eg set mounted flag first line looks strange set flag says component mounted life cycle hook says component mounted", "d": "6/2017"}, {"body": "agree better place set flag", "d": "6/2017"}, {"body": "use componentwillmount thissetstate key thispropsdefaultvalue render lt defaultvalue thiskey gt", "d": "6/2017"}, {"body": "need add using framework relies bubbling events communicate children parents unfortunately since child gets called parent dispatch bubbling event point expect parent catch even change lifecycle would nice lifecycle method like componentattachedtodom something similar indicate dom node fully attached dom tree", "d": "6/2017"}, {"body": "works", "d": "6/2017"}, {"body": "riverleo interesting understood asyncawait works promise objects syntactic sugar confirm actually waiting setstate complete executing code pattern works simple case many times function calls setstate within want wait function complete setstate call example function myfunction something thissetstate would like execute setstate completes myfunctionthen end day trying find workarounds fundamental deficiency setstate right way would add promise capability", "d": "6/2017"}, {"body": "peacechen code contents final build babel js var function callee paginate return function callee context switch contextprev contextnext case contextnext return thissetstate callee json presets flow nextbabel plugins transformruntime transformflowstriptypes styledcomponents ssr true displayname false preprocess true reactintl messagesdir localemessages checked log see worked worked expected problems", "d": "6/2017"}, {"body": "riverleo wraps expression correct promise resolving state updated", "d": "6/2017"}, {"body": "riverleo agree milesj generated code shows properly waiting setstate complete app happens finish setstate quickly case cases line generated code key correct way would code around would different example would need present created promise created pr returns promise callback param provided setstate much simpler diving react callback queue modifying queue would require rearchitecting significant rewrite", "d": "6/2017"}, {"body": "wrote thoughts think wo nt supporting plausible change anytime soon reasons close issue however plan look providing better component apis components state next year consider feedback part future work thanks", "d": "6/2017"}, {"body": "also mouseenter event never triggers", "d": "6/2017"}, {"body": "nt think react implement behavior described issue reactspecific certain browsers eg chrome safari nt dispatch mouseover mouseenter event case described even using vanilla js mouse moves nt think react try iron behavior going close issue always reopen feel strongly", "d": "6/2017"}, {"body": "purecomponent", "d": "6/2017"}, {"body": "issue case error shown browser also tried activating pause exception luck app use backbone react errors inside backbone views properly logged console ones react components ideas", "d": "6/2017"}, {"body": "used api way wrap es around react code catches errors initial updates catches errors event handlerscallbacks nt require monkeypatching nt require wrap modify existing components however api going deprecated strategy wo nt work react used successfully react think useful solution error boundaries ready details", "d": "6/2017"}, {"body": "small update latest alphas react still ready wide use known issues infinite loops development implement error boundaries start playing see satisfy use case recommended way use create component like js class errorboundary extends reactcomponent state error null unstablehandleerror error info thissetstate error note send error info analytics want render thisstateerror render anything want note try render original children throw error boundary longer catch return something went wrong thisstateerrortostring return thispropschildren put anywhere protect specific components note acts catch block catches errors children nest error boundaries like nest catch blocks exact api may change", "d": "6/2017"}, {"body": "slorber error boundaries nt work latest alpha reason please create complete reproducing example", "d": "6/2017"}, {"body": "seems interesting however would allow rescuing individual components instead sub tree examples small icon throws error render whole apppage wo nt rendered imagining something like least class level could use inheritance js class safecomponent extends component catchrender err reporterror err return null class whatever extends safecomponent render throw whoops return small cosmetic detail", "d": "6/2017"}, {"body": "support individual component level randomly disappearing individual components nt great user experience however free wrap components error boundary create base class although generally nt recommend examples small icon throws error render whole apppage wo nt rendered whole apppage divide page individual sections wrap error boundary granularity", "d": "6/2017"}, {"body": "one question hmr reset error guess need store boundaries saved errors react proxy logic perhaps way bubble child force updated anyway thinking loud excited give try mon jun dan abramov notifications githubcom wrote support individual component level randomly disappearing individual components nt great user experience however free wrap components error boundary create base class although generally nt recommend receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "warrants separate discussion immediately clear hot reloading work error handling might looking hot reloading time year good time discuss ideal experience", "d": "6/2017"}, {"body": "ended implementing higher order component wrap components javascript export default function errorboundary wrappedcomponent class errorboundarycomponent extends reactcomponent state error null return errorboundarycomponent solution considerably better extending base component wrap functional components catch errors occur component wrappers selector redux", "d": "6/2017"}, {"body": "joshclowater benefit opposed using regular component gives freedom granularity", "d": "6/2017"}, {"body": "gaearon personal preference guess find slightly cleaner abstracts error handling jsx wrapping many components could noisy parse also know want component handle errors nt worry parent containers wrapping risk missing somewhere else javascript oops missed one", "d": "6/2017"}, {"body": "think problem listed doc", "d": "6/2017"}, {"body": "adding event listener manually using", "d": "6/2017"}, {"body": "nt discussion pr issue last two months pr need cc gaearon", "d": "6/2017"}, {"body": "seems reactdropzone also suffering one", "d": "6/2017"}, {"body": "used unique classnames fancy scrollmagicgsap effect deployed whole site shat lol", "d": "6/2017"}, {"body": "definitely something needed server side rendering right inject call official way would much better", "d": "6/2017"}, {"body": "syranide thanks sharing nt know", "d": "6/2017"}]