[{"title": "react variables scope defined", "body": "mostly security question react store javascript variablesstate way window object access variable defined inside react lets say also using redux store sensitive data variable state way attacker able perform successful xss attack could something like", "num": "10080", "d": "6/2017"}, {"title": "input typeradio incorrectly trigger onchange handler", "body": "bug put several input type radio name jsfiddle example onchange handler triggered individual input mouse click input happen example try click different radio inputs several times next clicks consolelog output expect trigger onchange every time click nonselected radio input bug reproduces several latest versions react least os ubuntu try latest chrome latest firefox", "num": "10078", "d": "6/2017"}, {"title": "bootstrap checkbox button triggered react", "body": "want request feature report bug bug current behavior onchange event triggered click button current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior click button binded onchange event supposed triggered versions react browser os affected issue work previous versions react sure version", "num": "10075", "d": "6/2017"}, {"title": "invalid authentication token present redirect user authentication page stage", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10074", "d": "6/2017"}, {"title": "missing return lists keys documentation", "body": "want request feature report bug reporting bug current behavior keyword missing documentation", "num": "10073", "d": "6/2017"}, {"title": "feature request warnings hook", "body": "want request feature report bug want request feature current behavior warning code hardcoded call makes hard integrate warnings tools workaround could use webpack alias fork displays onscreen use case similar another use case integrate react warnings testing infrastructure helps us better see warning belongs test expected behavior react allows library user override default warnings behavior versions react browser os affected issue work previous versions react workaround works react still work react flat bundles means still hook probably breaks flat bundles stopped", "num": "10072", "d": "6/2017"}, {"title": "react amp reactdom bundle size expand", "body": "try bundle react amp reactdom using browserify code results follows results see tbundlejs commented something js cat nodemodulesreactindexjs use strict processenvnodeenv production moduleexports require cjsreactproductionminjs else moduleexports require cjsreactdevelopmentjs bundled react reactdom bundled react next reactdom next something wrong", "num": "10071", "d": "6/2017"}, {"title": "nt convert attributes dom elements strings custom elements", "body": "want request feature report bug feature current behavior react converts values strings passing native methods dom elements expected behavior custom elements landing browsers possible custom elements extend least chrome custom things input values passing onto means custom element authors accept values strings bring performance benefits example imagine custom elements designed rendering webgl using imperatively overhead strings avoided example suppose class react converts values strings ever passing custom element authors allow end users benefit performance improvements browsers allow anything passed react custom element nt extend native super class string conversion anyways react nt case would awesome could pass numberbased values webglrendering custom elements propagate directly webgl without convert strings numbers every tick hundreds thousands webgl objects versions react browser os affected issue work previous versions react", "num": "10070", "d": "6/2017"}, {"title": "element type invalid thrown nested functional component", "body": "want request feature report bug think bug current behavior trying render child imported exports function function b elsewhere reference fine note purely functional think tracked issue w stack trace right info added ready thrown mounting element recognized mean recognized react component alright instantiatereactcomponent instantiatereactcomponentjs instantiatechild reactchildreconcilerjs anonymous reactchildreconcilerjs traverseallchildrenimpl traverseallchildrenjs traverseallchildrenimpl traverseallchildrenjs current behavior bug please provide steps reproduce possible minimal demo problem via similar template could reproduce jsfiddle coz involves module though expected behavior element recognized mounted alright versions react browser os affected issue work previous versions react react google chrome os x strangely happens built linux already ruled upperlowercasing issue tested mounted alone working alright nt tested w previous version react", "num": "10069", "d": "6/2017"}, {"title": "enhance feature request hope provide render props state", "body": "hope provide js class app extends component use", "num": "10067", "d": "6/2017"}, {"title": "react release", "body": "react release", "num": "10066", "d": "6/2017"}, {"title": "feature request support serverside rendering nonstandard dom attribute names eg amp prop value", "body": "want request feature report bug request feature working project build amp page react server side rendering issue add custom attribute builtin amp element order able use ampbind need able output bindings special attributes form eg amp carousel example work ampbind current behavior parsing error unexpected token fatal versions react browser os affected issue work previous versions react information read discussion pr", "num": "10064", "d": "6/2017"}, {"title": "read react source code amp find dir special component function reactpurecomponent", "body": "read react source code find dir path special component function defined confused nested dirs amp folders", "num": "10062", "d": "6/2017"}, {"title": "displayname questioning still needed", "body": "used error messages dev tools hocs would argue valuable mode even comes error messages think never seen production log containing sure though never valuable dev mode shouldnt ditch adding write ditching transformcodemod inferred functionsclassesvariables anyway remaining use case would using hocs im wrong let know would however fix minor problems smaller build outputs slightly remove problem unintentionally preventing treeshaking sfcs flat bundles read", "num": "10060", "d": "6/2017"}, {"title": "ff mobile duplicated characters controlled component", "body": "want request feature report bug bug current behavior go modified version controlled components docmentation page put chars upper case type input get type b get aab expected behavior ab versions react browser os affected issue work previous versions react codepen uses react bug occurs firefox mobile desktop version tested bug occurs change case", "num": "10059", "d": "6/2017"}, {"title": "installation warnings errors ubuntu", "body": "want request feature report bug report bug current behavior receiving errors warnings executing command current behavior bug please provide steps reproduce possible minimal demo problem via similar template creating new app node received following benjamin thor myapps createreactapp myfirstreactapp creating new react app homebenjaminmyappsmyfirstreactapp installing packages might take couple minutes installing react reactdom reactscripts fsevents install homebenjaminmyappsmyfirstreactappnodemodulesfsevents nodepregyp install fallbacktobuild nodepregyp info worked ends ok nodepregyp verb cli nodepregyp verb cli homebenjaminmyappsmyfirstreactappnodemodulesfseventsnodemodulesbinnodepregyp nodepregyp verb cli install nodepregyp verb cli fallbacktobuild nodepregyp info using nodepregyp nodepregyp info using node linux nodepregyp verb command install nodepregyp info check checked found nodepregyp http get nodepregyp http nodepregyp err tried download nodepregyp err prebuilt binaries found fsevents node abi falling back source compile nodegyp nodepregyp http status code downloading tarball nodepregyp verb command build rebuild gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror make entering directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild solinkmodule target releaseobjtargetnode copy releasenode make leaving directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild nodepregyp info ok npm notice created lockfile packagelockjson commit file react reactdom reactscripts added packages expected behavior create app without warnings versions react browser os affected issue work previous versions react react version latest operating system distributor id ubuntu description ubuntu lts release codename xenial browser used yet node nix", "num": "10058", "d": "6/2017"}, {"title": "document process deprecating api react", "body": "split process making decision communicate release support folks updating syntax included deprecation warning", "num": "10057", "d": "6/2017"}, {"title": "componentdidmount getting invoked phantomjs", "body": "componentdidmount getting invoked opening page phantomjs workaround need automation stuff also ca nt change code move somewhere else componentdidmount help appreciated node version phantom version latest reactjs version latest", "num": "10052", "d": "6/2017"}, {"title": "include canary tests community packages part release process", "body": "cc gaearon general lots little utilities helpful standalone packages one example ideal react team maintain package primarily would guaranteed either break new react version released updated work upcoming version prior release interests react team signing maintain package requests might come would possible make part release process ensure compatible versions community packages exist happy create package example know community would love guarantee enzyme would always work official react version release prior release", "num": "10051", "d": "6/2017"}, {"title": "render callbacks fire even though error happened", "body": "think something like throws prints success means safe wrap promise like example throws error silenced promise already resolved hit serverintegrationtest", "num": "10049", "d": "6/2017"}, {"title": "guccccccgekfbfghhkkfrcincttgkceeknidjtdijklvlt", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10047", "d": "6/2017"}, {"title": "style object columns shorthand property wrong expansion", "body": "want request feature report bug report bug current behavior adding style object element shorthand property expand wrong way left untouched expand totally different behaviour see current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react latest", "num": "10043", "d": "6/2017"}, {"title": "caret standard controlled input immediately disappears", "body": "bug ca nt type standard controlled works fine update okay know problem lies something chetonreactsortable input talking inside deactivate input focus caret works controlled component proper weird thing input lose focus seen still white border css active caret simply immediately disappears even weird parent node onclick basically works caret shows type fine directly clicking input caret immediately disappears please check video anyone ever experience already tried removing blur keydown whatever handlers input nothing changed basically simple controlled input handler sidenote save state rather client meteor minimongo database works fine browser including nt get recent react version vm macos", "num": "10042", "d": "6/2017"}, {"title": "react umbrella", "body": "umbrella issue fixes need included next patch release commits x changeeventpluginjs ie detection broken chromesafariff etc pr error element ref created another elements constructor dev environment pr x treat columns property unitless number x move augmentclass definition syntheticevent proxy replacement x use closure bind argument callback reacterrorutils x fix uncontrolled radios x add controllist dom property whitelist documentation changelog documentation misc update lockfile version bump bower", "num": "10040", "d": "6/2017"}, {"title": "force react hit server route instead staying within spa", "body": "hello facing problem quite time none solutions found google worked basically trying make react app go spa hit server route express eg appget authsteam however tried using reactrouter link redirect still stayed within spa found reactrouter internal navigation tried using anchor tag supposedly forces app hit server route still stays within react page gives component weird thing hard refresh cmd shift r mac hits server route redirects website login page case steam login finish logging callback url authsteamreturn shows component hard refresh everything supposed redirects homepage set redirect also requser available know gave example trying user authentication think question specific trying react question wanted use another server route something else appget exampleurl would face problem basically question force react hit server route instead staying within spa", "num": "10034", "d": "6/2017"}, {"title": "refsroot breaks", "body": "bug report rely saved ref component layout formatting excel addin used property component save reference functionality broke longer defined react version browser reproduced safari chrome macos chrome windows codepen reproducing behavior thanks nick", "num": "10031", "d": "6/2017"}, {"title": "changeeventpluginjs ie detection broken chromesafariff etc", "body": "bug current behavior website include number scripts parties via segment etc one seems modifying inadvertently combination release reactdom broken website completely code changeeventpluginjs error written console every time try click input box specifically line causing issues party library actually setting enough break line even though undefined exists key means browsers reactdom believes running ie current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduce app uses reactdom includes input boxes add following top head tag executes immediately documentdocumentmode undefined example found expected behavior previous versions branch reactdom code works fine allow load relevant party libraries without experiencing issues reached vendor fix issue side sure long take versions react browser os affected issue work previous versions react nt work react dom works looking history code seems gone back forth two different ways checking documentmode commit changed back code causes error", "num": "10030", "d": "6/2017"}, {"title": "react getting installed windows", "body": "hello trying install react windows system entering npm install createreactapp command giving error attaching npmdebuglog info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli createreactapp info using npm info using node silly loadcurrenttree starting silly install loadcurrenttree silly install readlocalpackagedata silly fetchpackagemetadata createreactapp silly fetchnamedpackagedata createreactapp silly maptoregistry name createreactapp silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry data result silly maptoregistry raw createreactapp silly maptoregistry scope null silly maptoregistry escapedname createreactapp silly maptoregistry name createreactapp silly maptoregistry rawspec silly maptoregistry spec latest silly maptoregistry type tag silly maptoregistry uri verbose request uri verbose request auth needed info attempt registry request try pm verbose request id http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get silly fetchpackagemetadata error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata error createreactapp error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata code econnrefused silly fetchpackagemetadata errno econnrefused silly fetchpackagemetadata syscall connect silly fetchpackagemetadata address silly fetchpackagemetadata port silly rollbackfailedoptional starting silly rollbackfailedoptional finishing silly runtoplevellifecycles finishing silly install printinstalled verbose stack error connect econnrefused verbose stack objectexportserrnoexception verbose stack exportsexceptionwithhostport verbose stack tcpconnectwrapafterconnect oncomplete verbose cwd c usersaniruddhreact error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install createreactapp error node error npm error code econnrefused error errno econnrefused error syscall connect error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error code econnrefused error errno econnrefused error syscall connect error address error port error behind proxy please make sure error proxy config set properly see npm help config verbose exit true", "num": "10023", "d": "6/2017"}, {"title": "input type number reformats already valid numbers", "body": "like report bug current behavior using input type number shave trailing behind seperator see eg state starts number input shows expected behavior number input show least provide way specify tofixed used n numbers behind seperator versions react browser os affected issue work previous versions react tested ff goes wrong lines", "num": "10022", "d": "6/2017"}, {"title": "feature request add module entry packagejson export version react", "body": "want request feature report bug request feature current behavior react ecosystem promoting classes modules since many packages like reactrouter redux es folder npm package source code modules unless missing something strange react offer option current behavior bug please provide steps reproduce possible minimal demo problem via similar template install react try import browser native modules enabled expected behavior es folder npm package modules source code like react ecosystem projects allow import react native modules make developer workflow simple versions react browser os affected issue work previous versions react versions", "num": "10021", "d": "6/2017"}, {"title": "feature request rendertypes", "body": "want request feature report bug request feature per discussion today tomocchino thejameskyle like nonflow mechanism annotate type elements component expects render examples flow types comparison realize may currently checked flow yet jsx function foo yes return yes foorendertypes bar div class bar extends reactcomponent static rendertypes button render return jsx function foo yes reactelement return yes class bar extends reactcomponent render reactelement return inside airbnb lots use cases container components separate package say intentionally restrictive proptypes prop allow also package however app consumes component library package dev may want create turn renders however unable pass proptype warnings fail tests even though conceptually permitted would allow us widen proptype allow either anything renders helps us maintain separation concerns package nt know accept well maintain strictness package nt allow wacky element inside imagine implementation render called sfc invoked async rendering component resolves suppose development exists component evaluate equivalent elementtype like proptypes log error one returned cc spicyj", "num": "10020", "d": "6/2017"}, {"title": "feature request need ability debug checksum mismatch production environment", "body": "want request feature report bug feature current behavior currently checksum mismatch happens mounting react tree server rendered markup get markup difference dev environment reality mismatches happen production env much bigger variety user contexts trigger mismatch hard reproduce mismatch scenarios dev environment without knowing markup difference expected behavior proposing provide apps way obtain markup difference even production environment diffs reported back developers debugging mismatch root cause fiber would probably change checksum works ready still need ability debug issue production env trying something like works probably best approach idea simple though provide way application control react tree report markup diff upon checksum mismatch application might care mismatch subset react trees mounted would concerns markup normalization cost using data attribute container node best approach since container also document node thought two alternative ways neither perfect add option signature add prop like element rendered allow application collect markup diff even production environment setting markup difference value data attribute container node please share thoughts ideas raising pr implement ideal approach thanks", "num": "10016", "d": "6/2017"}, {"title": "suggested words get appended currently typed word writing comment fb using virtual keyboard windows", "body": "reproes soft keyboard used repro navigate facebookcom front page type select wonder list suggestions expected replaced wonder actual appends wonder making wonwonder", "num": "10014", "d": "6/2017"}, {"title": "dangerouslysetinnerhtml svg elements", "body": "want request feature report bug bug current behavior using svg elements dom nodes previous render nt removed current behavior bug please provide steps reproduce possible minimal demo problem via similar template see fiddle expected behavior dom contain last rendered value versions react browser os affected issue work previous versions react react browser work previous versions react sure digging around found made think happening line looks like call never remove previous nodes add new ones guess", "num": "10013", "d": "6/2017"}, {"title": "react component using reactnoopupdatequeue dev build preventing state updates", "body": "want request feature report bug reporting bug facing really strange issue every app stops working running via webpack hot dev server issue presents struggle get work even cleaning everything stashing git changes resetting yarnlock etc production builds noticed issue never occurs simple component renders two fields hostname port maintains field values component essentially expected behavior expect basic case able update form fields without issue enter text field triggers field event turn invokes updating value field gets rerendered actual behavior observe expected behaviour every time production time development idea sometimes rebuilding certain modules see issue occur able change value either fields instead see following error electron console environment react operating system windows browser version electron chromium browser additional details notice development production builds react component pass react updater superclass constructor react base class uses two places assigned breakpoint neither dev production build see anything except getting assigned field yet production builds state updates work expected step code production find magically replaced real update queue magic sometimes nt happen dev builds state changes fail noop get warning messages shown reference excerpt react component code js export default class connectionpane extends reactcomponent constructor props iconnectionpaneprops super props private get ishostnamevalid boolean private get isportvalid boolean private get areconnectionsettingsvalid boolean public render return hostname port private sethostname event thissetstate hostname eventtargetvalue private setport event const port eventtargetvalue private onsubmit event eventpreventdefault", "num": "10012", "d": "6/2017"}, {"title": "syntheticeventaugmentclass undefined qtwebkit browsers", "body": "want request feature report bug bug current behavior everything seems terrible certain webkit browser page pulls bundled script nt seem finish loading console errors augmentclass undefined build details ing using babelloader presets current behavior bug please provide steps reproduce possible minimal demo problem via similar template building use qtwebkit test browser visit offending page expected behavior see complaints syntheticevent console versions react browser os affected issue work previous versions react react reactdom qtwebkit", "num": "10010", "d": "6/2017"}, {"title": "warning unsupported style prop webkitoverflowscrolling", "body": "potential bug warning unsupported vendorprefixed style property webkitoverflowscrolling mean webkitoverflowscrolling check render method warning nt used come tried remedy using different style lib using radium tried instead warning still shows yet properly styled browser warning seems obsolete mac os chrome react", "num": "10009", "d": "6/2017"}, {"title": "minified version react cdn throws errors unminified cdn works fine", "body": "using react official cdns minified version throws uncaught typeerror unminified dev version cdns used code results unminified version works without errors minified version results following error uncaught typeerror selfpropssearchcallback function error react official minified cdn version", "num": "10005", "d": "6/2017"}, {"title": "react input value tracking incompatible zombiejs", "body": "react backports input value handling fixes new input value tracking nt work zombiejs problem react wraps property zombiejs assigns property functions eg confuses value tracking loses track value change definitely debatable whether react bug zombiejs bug find behaviour react bit strange let assume controlled react zombiejs test fills initially empty text field value somevalue zombie implements using internal steps happens try running example test test calls field focused triggers setter reactdom tracker longer original value new value somevalue input event fired eventually end reactdom function tracker compares containing somevalue raw value dom node containing somevalue change event sent whatever controlling propsstate thinks value react dom node agree somevalue react lose change events zombiejs react works fine", "num": "10003", "d": "6/2017"}, {"title": "react dung vue beautify", "body": "use reactjs timebut framework design look like designed threeyears child shit fuck every developerbut vue maked chinexe save hell vue fresh freedom air methis freedom sweet pointer someone deliberatelymy meaning everyone designed except", "num": "10002", "d": "6/2017"}, {"title": "clear entire call stack browser certain function gets executed", "body": "want clear entire call stack browser certain function gets executed react js code", "num": "10001", "d": "6/2017"}, {"title": "false positive getdefaultprops warning mixing development production versions", "body": "migrating rewrite original react components however warning really transferring classic definition would like ask warning appropriate depreciation sames level migrating ooops get ticket", "num": "9999", "d": "6/2017"}, {"title": "createreactclassintegrationtest fails", "body": "want request feature report bug bug current behavior running npm test master branch createreactclassintegrationtest fails current behavior bug please provide steps reproduce possible minimal demo problem via similar template installed repo cloning ran npm install npm test expected behavior test pass versions react browser os affected issue work previous versions react latest version commit", "num": "9997", "d": "6/2017"}, {"title": "detect empty selection", "body": "component uses get user selected files user cancels file selection popup callback never called since change nonsense since expected action callback gets called null empty array implement nt find related event listen", "num": "9996", "d": "6/2017"}, {"title": "error info removes app", "body": "feature really hard track runtime errors eg none code stacktrace swallowed react", "num": "9995", "d": "6/2017"}, {"title": "set initial state undefined", "body": "want request feature report bug feature current behavior initial state null expected behavior initial state undefined manually set state undefined class would make sense box would allow destructuring without errors version react reactdom sorry suggested", "num": "9991", "d": "6/2017"}, {"title": "regression onchange nt fire defaultchecked radio inputs", "body": "want request feature report bug bug current behavior react behaviour changed fires change event reliably need console open get debugger statement first change fires subsequent changes fire changes fire versions react browser os affected issue work previous versions react react vs react chrome latest stable", "num": "9988", "d": "6/2017"}, {"title": "proper compatibale version react reactaddonstestutils reactdom", "body": "tried various package version still getting error run causing issue file looks like update getting error may know causing issue dependency issue nt know", "num": "9986", "d": "6/2017"}, {"title": "setvalueforproperty throwing untraceableunpausable error", "body": "hey getting following error many time console tried setting pause exceptions true nt seem pause error actual error message unhelpful debugging underlying issue many places component rendering svg path help tracking component actually causing error would greatly appreciated thanks", "num": "9984", "d": "6/2017"}, {"title": "compatible version found createreactclass lt", "body": "env package npm actually missing want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior npm install problem versions react browser os affected issue work previous versions react", "num": "9981", "d": "6/2017"}, {"title": "ensure npm command results expected result", "body": "creating issue track thread currently tools nt properly dce npm bundle branching need combine dev prod bundle one file", "num": "9980", "d": "6/2017"}, {"title": "bug fontfamily wraps font names nested doublequotes chrome", "body": "bug current behavior fontfamily declaration used react multiword fonts wrapped doublequotes chrome nested double quotes valid html attributes react nt creating style attribute way steps reproduce open react fiddle chrome inspect text rendered react result pane notice style declaration words times new roman double quotes results nested double quotes ie style fontfamily georgia times new roman serif really valid original fontfamily declaration quotes open react fiddle safari firefox notice nested double quotes happen fontfamily declaration left asis evidence open simple fiddle chrome inspect text rendered result pane notice chrome add nested double quotes around times new roman nt seem browser seems react used expected behavior would expect one two things happen multiword fonts would left asis ie style fontfamily georgia times new roman serif multiword fonts would wrapped single quote instead double ie style fontfamily georgia times new roman serif react versions seeing react version know working previous versions react", "num": "9979", "d": "6/2017"}, {"title": "modules react reactdom", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react analyze bundle file webpack came across serval modules exist react reactdom guess files ignored files listed reactprodinvariantjs keyescapeutilsjs traverseallchildrenjs reactelementsymboljs reactproptypessecretjs getiteratorfnjs", "num": "9975", "d": "6/2017"}, {"title": "error addcomponentasrefto class", "body": "react bit complicated report dont super isolated use case application extremely complex ca nt confirm latest react ca nt confirm react fault thats unacceptable feel free close general layout things exports bunch javascript including react via webpack private repo loads code extends imports things like react windowreact using webpack external feature attempting use reactcompnent provide base class complex functionality worked fine using reactcreateclass fairly confident two copies react loading page really hard understand webpack internals loading react comes windowreact investigated per webpack compiled output however odd referencing internally happens specifying attribute static html specific html also specific reference error unrelated generated output exists elsewhere parent element generated children first core issue case output tooltip raw html everything works fine change return result stripped errors dump consolelog version text generatehtmlviareactdomserver get true output domserver still receive ref error literally baffled point going might something obvious debugging last hours avail sentry exports sentryio externals config originally thought might related bootstrap tooltips since thats removed anything relevant still triggered full source component though clearly wo nt work jsx import react react import reactdom reactdom import reactdomserver reactdomserver import jquery jquery import displaynumber getslot utilsbilling import utils sentry import moment moment let guttersize let leftgutter let graphpadding class usagechart extends reactcomponent constructor props super props bar line onclick onlinedrag onlinerelease onlineselect onresize tooltip foreach n gt n n bind thisstate width height componentdidmount windowaddeventlistener resize thisonresize thisonresize thisattachtooltips componentwillunmount windowremoveeventlistener resize thisonresize thisremovetooltips jquery reactdomfinddomnode unbind attachtooltips jquery reactdomfinddomnode tooltip container body selector tip removetooltips jquery reactdomfinddomnode tooltip destroy destroy tooltips parent find tip tooltip destroy descendents tallestthing throw new error implemented scale return thisstateheight guttersize thistallestthing flip h return thisstateheight guttersize h distance b return mathabs b onresize thisrefssvgelement return thissetstate width thisrefssvgelementgetboundingclientrect width onlineselect e onlinerelease e onlinedrag e onclick e tooltip point let projected totals ts point let otherdropped totalsdroppedtotal totalsdroppedoverquota totalsdroppedspikeprotection return reactdomserverrendertostaticmarkup moment ts format projected projected events totalstotaltolocalestring accepted totalsacceptedtolocalestring dropped totalsdroppedtotaltolocalestring quota totalsdroppedoverquotatolocalestring spike protection totalsdroppedspikeprotectiontolocalestring otherdroppedtolocalestring getbars point throw new error implemented bar point todo max disabled lt wide zoom screwyness let zoom windowmatchmedia maxwidth matches zoom return null getlines return lines return thisgetlines map l gt lquota gt throw new error invalid line return thisline name lname quota lquota height lquota thisscale demandheight ldemand thisscale drop ldrop canselect lcanselect false line props let classname line line propsname propsname let cursor propscanselect nsresize inherit slotsrules let tt thistallestthing getlegenditems throw new error implemented legend props let size let r let items thisgetlegenditems let sum let offsets itemsmap n gt let last sum sum nlength size return last bars let usagedata thispropsusagedata let totals total accepted dropped total overquota spikeprotection filtered return usagedata map p gt totalstotal ptotal totalsaccepted paccepted totalsdroppedtotal pdroppedtotal totalsdroppedoverquota pdroppedoverquota totalsdroppedspikeprotection pdroppedspikeprotection totalsfiltered pfiltered return p totals totals dropped totalsdropped ts pts map thisbar renderchart let usagedata thispropsusagedata render try return thisrenderchart catch ex utilslogginglogexception ex return un oh hit error trying render usage chart nt worry sentry let us know usagechartproptypes usagedata reactproptypesarrayof reactproptypesshape accepted reactproptypesnumberisrequired total reactproptypesnumberisrequired ts reactproptypesanyisrequired dropped reactproptypesshape total reactproptypesnumberisrequired overquota reactproptypesnumberisrequired spikeprotection reactproptypesnumberisrequired isrequired trialend reactproptypesstring slots reactproptypesarrayof reactproptypesobject usagechartdefaultprops usagedata export default usagechart", "num": "9974", "d": "6/2017"}, {"title": "expose shouldcomponentupdate purecomponent", "body": "nice following api", "num": "9972", "d": "6/2017"}, {"title": "bug style undefined setvalueforstyles", "body": "appears possible style property node undefined setvalueforstyles method csspropertyoperationsjs using unknown able get state stack trace typeerror style undefined style csspropertyoperations internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler", "num": "9970", "d": "6/2017"}, {"title": "error addcomponentasrefto", "body": "started getting error right upgrading error addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details", "num": "9967", "d": "6/2017"}, {"title": "add units css custom properties", "body": "want request feature report bug bug current behavior js html current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior leave values passed versions react browser os affected issue work previous versions react react", "num": "9963", "d": "6/2017"}, {"title": "string refs without owner fail gracefully", "body": "occurs fiber multiple instances react package ca nt share current owner", "num": "9962", "d": "6/2017"}, {"title": "undefined object evaluating ugetcall since", "body": "since updating started uncaught exception pinned version back problem gone away per rollbar problem seems mostly ios safari sometimes osx safari unable repo users clearly experiencing user agents stacktraces", "num": "9961", "d": "6/2017"}, {"title": "bug version working ios inputvaluetrackingjs", "body": "appears version work older ios devices ios tested affected root cause appears broken versions simply return method used inside causes react break causing nothing rendered error message stack trace affected code javascript track function inst gettracker inst return var node reactdomcomponenttreegetnodefrominstance inst var valuefield ischeckable node checked value var descriptor objectgetownpropertydescriptor nodeconstructorprototype valuefield var currentvalue node valuefield someone already defined value bail nt track value cause reporting changes better hard failure needed certain tests spyon input values nodehasownproperty valuefield return objectdefineproperty node valuefield enumerable descriptorenumerable configurable true get function return descriptorgetcall set function value currentvalue value descriptorsetcall value", "num": "9959", "d": "6/2017"}, {"title": "onclick onchange nt fire radio buttons ios", "body": "want request feature report bug bug current behavior onclick onchange nt fire radio buttons ios typeerror undefined object evaluating descriptorgetcall current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior onclick onchange fire versions react browser os affected issue work previous versions react react ios working", "num": "9956", "d": "6/2017"}, {"title": "run unit tests compiled bundles", "body": "lot tests using public apis number growing soon delete stack reconciler code remove feature flags partly responsible nonpublic api calls well stackspecific tests still tests operate directly files position opt specific test files hopefully growing count running compiled development production bundles ci nt compromise local iteration speed already separation use today telling warning failures use future telling whether expectation skipped prod bundle could use help building initial proof concept running tests ci bundles converting tests use public apis search source find good starting points tests might better written public apis always possible try bit openended probably requires prior knowledge test things generally feeling comfortable repo contributed good issue dive", "num": "9955", "d": "6/2017"}, {"title": "safe react native react alpha", "body": "currently react native since released stable around corner rn uses react march saw release rn started using react series completely skipped version prevented updating react native waiting official stable release react mid june official stable release react appears version entering version still alpha react world using react reactnative world using react anyone know react skipped safe use version react native production deal react anyway even mentioned list react releases", "num": "9948", "d": "6/2017"}, {"title": "fix fixture branch", "body": "want request feature report bug kind bug either react fixture current behavior open error console react load current behavior bug please provide steps reproduce possible minimal demo problem via similar template step check yarn install amp amp yarn buildfixturessystemjshtml expected behavior see hello world appear versions react browser os affected issue work previous versions react also present last release react still present react", "num": "9947", "d": "6/2017"}, {"title": "refs working properly componentdidmount", "body": "want request feature report bug bug user failure current behavior thisinputclick happens one child component rendered fails first one current behavior bug please provide steps reproduce expected behavior first component open dialog box versions react browser os affected issue work previous versions react chrome macos react reactdom application comes deeply nested component times dialog box shows component actually unmounts weird thing still works older version application", "num": "9944", "d": "6/2017"}, {"title": "stateless react components controlled input", "body": "asked question stackoverflow get response trying luck currently make controlled inputs work inside stateless react components wrapping stateless component inside sate full component example js const inputcomponent props gt return class app extends reactcomponent constructor props super props thisstate name tekeste thishandlechange thishandlechangebind handlechange event thissetstate name eventtargetvalue render return would like know couple things good pattern achieve goal ie controlled inputs inside stateless components", "num": "9930", "d": "6/2017"}, {"title": "wrong javascript heap memory", "body": "edit sorry wrong project meant post reactnative", "num": "9927", "d": "6/2017"}, {"title": "inconsistencies among documentation", "body": "hi trying figure whether adopting react would safe risky choice important able draw boundaries ie able define node elements managed react ones pretty important able integrate well nonreact components trying understand guarantees get using react noticed two sections documentation nt seem compatible prevent react touching dom mounting return empty lt div render method element properties children react reason update leaving jquery plugin free manage part dom suggests using mountunmount hooks order initialize destroy thirdparty components however enough guarantee integration succeed get later important remember reconciliation algorithm implementation detail react could rerender whole app every action end result would currently shouldcomponentupdate returns false componentwillupdate render componentdidupdate invoked note future react may treat shouldcomponentupdate hint rather strict directive returning false may still result rerendering component problem ca nt really rely reconciliation algorithm touch elements react supposed manage guarantees would possible integrate react thirdparty components future big concern let give example illustrate suppose want integrate lightweight multioptions autocomplete component provides public apis constructor desctructor onchange hook stateful component nt direct access state restore destroying recreating opens menu several items containing checkbox item label click items checking checkbox onchange would triggered could use change state ancestor component managed react responding state change event react simply decides rerender ancestor component without respecting ignoring diff algorithm means would probably call autocomplete component wrapper would able destroy component would able initialize component would lost state like scroll position currently selected items words means react would nt able play nice thirdparty components order guarantee need guarantees react reconciliation algorithm nt implementation detail without guarantees nt considered hint otherwise supposed wrap thirdlibrary components reliable way really scared start migrating application use react unless feel confident always able integrate thirdparty stateful components could please review statements documentation", "num": "9926", "d": "6/2017"}, {"title": "reactcsstransitiongroup children text ie edge false effect", "body": "want request feature report bug think may ie sure current behavior reactcsstransitiongroup children text text ie edge false like text ok versions react browser os affected issue work previous versions react os react", "num": "9925", "d": "6/2017"}, {"title": "nonshouldcomponentupdate state prop updates", "body": "want request feature report bug feature current behavior renderindependent lifecycle hook called state prop updates expected behavior certain cases currently makes sense run code whenever state props update even render wo nt happen eg contextproviding component needs update child subscribers even best rerender immediate child due frequency updates using state case rerendering component passed children component renders instance shallow child component passed props based internal state passed nt want update since would rerendering potentially large component tree reason still want notify context subscribers state changed workable use lifecycle method eta maybe similar called state updates called may updated allowed", "num": "9922", "d": "6/2017"}, {"title": "urgent nt support latest builds reactnative react", "body": "possible use latest builds reactnative react related reactnative works already builds reactdom nt support app crashes", "num": "9915", "d": "6/2017"}, {"title": "reactaddonsupdate uses objectassign", "body": "want request feature report bug undocumented breaking change current behavior starting package changed depending internal file package actually include full implementation internal implementation depended polyfill external one actually calls directly breaking support ie reactaddonsupdate react reactaddonsupdate requires users support polyfill mentioned release blog post react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior add mention release blog post versions react browser os affected issue work previous versions react react worked fine react", "num": "9913", "d": "6/2017"}, {"title": "possible delay proptypes isrequired validation constructor got called", "body": "want request feature report bug feature current behavior element wrapped like following child receive waring understand expected behavior however warning really annoying expected behavior delay proptypes validation till avoid unnecessary warnings maybe got called since wrapped use merge render prop merged wo nt see lot unnecessary warnings keep mark childproptypes versions react browser os affected issue work previous versions react react", "num": "9904", "d": "6/2017"}, {"title": "mouseleave events fire unexpectedly mousing descendant node different react root", "body": "want request feature report bug bug current behavior mousing descendant dom node different react root mouseleave event parent react dom component fired unexpectedly current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open console see logs printed mouse parent normal child back note fire mouse parent portal child rendered embedding new react root note fire mouse back note fires sometimes fires multiple times enterexit step expected behavior fire enteringexiting portal child since descendant node parent versions react browser os affected issue work previous versions react tested following issue reproducible cases react latest chrome firefox safari", "num": "9901", "d": "6/2017"}, {"title": "get fixtures working branch", "body": "multiple errors thrown trying build fixtures branches need fixtures working order manual testing addon fixes", "num": "9900", "d": "6/2017"}, {"title": "eventhandler react component without implementing component side", "body": "want request feature report bug feature current behavior add event handler components outer layer implemented inside component well like without ca nt add event handlers parent something like work opinion example export default class somecomponent extends reactcomponent render nt event handler logic return content nt working opinion shouldcould well render return working yet think last way would cleaner render return sum request event handler props added component would pass outer layer component", "num": "9898", "d": "6/2017"}, {"title": "cursor jumps end controlled component", "body": "want request feature report bug bug per current behavior typing inside controlled input component cursor jump end value modified current behavior bug please provide steps reproduce possible minimal demo problem via similar template modified controlled components example described documentation see fork codepen type transformed automatically place cursor follows insert lower case character observe cursor jumps end cursor jumps end lower case character inserted modification cursor remains presumably value nt overwritten react expected behavior cursor remain current position versions react browser os affected issue work previous versions react react browser chrome os win", "num": "9894", "d": "6/2017"}, {"title": "trigger change event radio value", "body": "want request feature report bug bug current behavior selecting value twice row results triggering change event twice value current behavior bug please provide steps reproduce possible minimal demo problem via similar template open click twice option result see console change event triggered time even changed value equal previous one comparison may check native html implementation expected behavior change event trigger value versions react browser os affected issue work previous versions react macos sierra safari", "num": "9893", "d": "6/2017"}, {"title": "javascript responsible rendering html issue", "body": "question related binding html javascript making javascript responsible creating dom hiding resources browser blocked javascript lead opting html optimization browser like background parsing html separate thread bind html javascript bind code understand react dom manipulation well", "num": "9892", "d": "6/2017"}, {"title": "lost setnativeprop others methods create personal component child nodes", "body": "hi creating custom component inside mycomponent loop childs refs next code try use setnativeprop inside component setnativeprop undefined using next code reach child inside method another way tried putting refs text lost refs also way draw nodes without loss properties form rebuiltcreate node characteristics inside", "num": "9890", "d": "6/2017"}, {"title": "numberisnan", "body": "supported internet explorer code sample lifting state documentation used specifically writing conversion functions section see function following quick start guide using visual code editor createreactapp using internet explorer test component completing lifting state section getting following error typeerror object nt support property method isnan fixed using reguler doc updated use", "num": "9888", "d": "6/2017"}, {"title": "viewbox inline svg sometimes rendered viewbox", "body": "reactjs nt seem consistently rendering camelcased instead rendered sample code works chrome firefox ideas version", "num": "9885", "d": "6/2017"}, {"title": "input type number initial value value changes empty string value update", "body": "example bug best guess maybe react truthiness checking thinks updating value component", "num": "9884", "d": "6/2017"}, {"title": "rendering array jsx components", "body": "build something tree table folder subfolders elements one folder keeps inside subfolders informations rendering correctly react ignoring part code folder component subfolder component element structure looks like subfolder next row folder row contains table inside really important later need able manipulate tables inside subfolders element rows another subfolder know subfolders key also major problem react completely ignore inside subfolder td element using another table props children try use way works fine parse api response function push element inside array return end need create chunk jsx render end check type object api response push different component array main problem react completely ignore tables inside td elements render regular table expecting something like know easiest way build normal string later use dangerouslysetinnerhtml method want avoid sure bug react nt understand rendering array looks like", "num": "9880", "d": "6/2017"}, {"title": "add export html props react package since react already using validation", "body": "want request feature report bug feature current behavior react package provide list acceptable props html node div span etc sometimes packages pass props like reactredux passing provided pop error saying unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior since react using list props validation react package also provide allow react users make sure pass normal props versions react browser os affected issue work previous versions react", "num": "9878", "d": "6/2017"}, {"title": "unstablehandleerror read property listeners null", "body": "want request feature report bug bug current behavior typeerror read property listeners null current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior renders error text versions react browser os affected issue work previous versions react", "num": "9877", "d": "6/2017"}, {"title": "order linting prettier contributing docs", "body": "want request feature report bug documentation discussion current behavior currently contributing guide lists lint step running prettier example says current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior think would make sense run prettier first since automatically get rid certain lint errors like singlequotes commadangle firsttime contributor following steps order might waste time fixing things manually lint step proceeding formatting step versions react browser os affected issue work previous versions react na", "num": "9876", "d": "6/2017"}, {"title": "remove streaming renderer fb builds", "body": "nt get fb builds correct wrong", "num": "9868", "d": "6/2017"}, {"title": "add cases server rendering fixture", "body": "server rendering lot quirks easy break fixture set fixturesssr could expanded stuff things fixture test controlled uncontrolled types inputs including dates numbers etc children single stringnumber children array multiple stringnumbers children interleaved nodes stringnumbers event handlers hydrated nodes something useful clicked reused event handlers multiple different nodes etc onload event handlers special properties nt map directly attribute names like subtrees subtrees hidden attribute set tests deprioritization probably need onscreen options turn onoff things test suite test conditions server client differences turn flag makes server client differ minor ways async hydration use fiber async features hydrate tree defer hydration time useful test slow loading conditions user may changed state form controls hydration combined async make async rendering artificially slow reveal issues patching event handlers attached early commit phase ok start small nt", "num": "9866", "d": "6/2017"}, {"title": "component lifecycle error handling", "body": "greetings react team let start saying big fan work team keep good work said one major disadvantages react sort throws exception thrown one lifecycle methods ie null undefined reference although ultimately developer ensure proper error handling wondering would consider adding additional component lifecycle method catching unhandled exceptions ie componentdidfail developer perspective would make life much easier really help improve quality applications produce matt", "num": "9865", "d": "6/2017"}, {"title": "investigate ci got broken master pr passed", "body": "see pr passed ci pr merged master test failure later fixed wonder missing check prs", "num": "9864", "d": "6/2017"}, {"title": "reactfiberreconciler become public api implementing party renderers", "body": "investigating using react drawing custom native uis fall outside scope reactnative reactwindowsnative seems like sensible place start assuming fibers start getting used mainline relatively soon seems reasonably likely certainly seems easy get proof concept running using least far recommended entry point party renders use", "num": "9862", "d": "6/2017"}, {"title": "fully translated latest version react docs chinese", "body": "see chinese docs react docs chinese translated docs directly modified original markdown files hard pull request merge official docs plans add feature jekyll doc website", "num": "9860", "d": "6/2017"}, {"title": "reactplayer autoplay muted video mobile", "body": "ca nt manage autoplay video mobile browser dont audio code thisvideowrapper el gt inspect page see", "num": "9855", "d": "6/2017"}, {"title": "question use arrow functions bind manually classes performance difference", "body": "terms performance difference using arrow functions bind manually using classes using arrow functions methods class prototype class instance using bind attach methods class prototype sounds like bind manually better performance mean consider using bind instead arrow functions class methods suggestions comments really appreciated terms performance would recommend using javascript class mycomponent extends reactcomponent constructor props super props methoda gt javascript class mycomponent extends reactcomponent constructor props super props thismethoda thismethodabind methoda", "num": "9851", "d": "6/2017"}, {"title": "browser compatibility issue jquery version", "body": "report bug need confirm current behavior getting following error console using jquery min js line var icfnremove dcbrowsermozilla amp amp parsefloat cbrowserversion lt uncaught typeerror read property remove undefined", "num": "9848", "d": "6/2017"}, {"title": "error using immutable data structures section docs", "body": "want request feature report bug report bug current behavior optimizing performance section docs subsection called using immutable data structures end sentence case since new reference returned mutating x safely assume x changed sentence read assumption correct safely assume x changed current behavior bug please provide steps reproduce possible minimal demo problem via similar template doc question posted expected behavior described safely assume x changed versions react browser os affected issue work previous versions react na", "num": "9844", "d": "6/2017"}, {"title": "rfc resilient nodenormalize", "body": "debate support nodenormalize case summary mostly supported stack inserted comment nodes everything important used innerhtml generate html client preserve everything important anymore new hydration resilient however happens already active client tree possible consecutive text nodes merged single one something calls nodenormalize whole subtree merges consecutive text nodes possible extensions might even magic context think idea automatic recovery phase would nt impact hot paths would nt normally need anything however would add small nontrivial amount code edge case almost never happens also bit awkward since adds dom specific case hostconfig api every renderer consider afaik bugs related fb regard extensions anything else find breaks things outside fb without shipping broken version", "num": "9836", "d": "6/2017"}, {"title": "add reactchildrenfind", "body": "think method would really useful situations need iterate children find one satisfies particular condition running situation often react code examples react router component iterates children figure matches url component use training workshops need iterate figure label show select box wonder would interest others seeing something like", "num": "9834", "d": "6/2017"}, {"title": "error provided production build", "body": "currently transform enabled together production build indicators poorly performant configuration even already check existence source field reuse check issue something prod mode exists problem nt warning module prod unclear would get attention even considered spammy prod could throw might extreme since misconfiguration would kill site could also use set flag object icon devtools extension could use indicate misconfigured build", "num": "9832", "d": "6/2017"}, {"title": "possible false positive getdefaultprops warning createreactclass production environment", "body": "want request feature report bug potential bug current behavior dependency using using get past deprecation warning still defined class definition still getting following warning current behavior bug please provide steps reproduce possible minimal demo problem via similar template ca nt use jsfiddle createreactclass appears cdn version try create minimal amount code properly reproduce tonight expected behavior exactly sure supposed trigger warning using versions react browser os affected issue work previous versions react react os windows browser chrome", "num": "9831", "d": "6/2017"}, {"title": "first bug cra throws", "body": "looks like something createreactclass removal correctly cherrypicked steps reproduce create new cra project update version react run get error", "num": "9830", "d": "6/2017"}, {"title": "na", "body": "issue intended another repo accidentally posted mistake", "num": "9829", "d": "6/2017"}, {"title": "keys children really improve performance", "body": "originally try use react perf tool prove theory write code experiment found opposite result someone explain correct testing wrong way", "num": "9826", "d": "6/2017"}, {"body": "nt see bug expected behavior need behavior write handler triggers behavior correct scenario based one triggered", "d": "6/2017"}, {"body": "selbekk think misunderstood try scenario fiddle example click click click click second time triggered", "d": "6/2017"}, {"body": "ah sorry indeed misunderstand question theory click radio button first time trigger change event however unselect clicking another radio button nt trigger one suddenly dom keeps state react job unless want use uncontrolled components discouraged cases since react nice trickery events synthesized improve performance might one issues arises set attribute keep choice set state luck fork pen agree bit weird behavior", "d": "6/2017"}, {"body": "yes already fix trouble extract state right write report bug think using uncontrolled inputs bad way sometimes simpler think developers forgot case input typeradio used group select case name however radio group common way past generation web", "d": "6/2017"}, {"body": "would better could specify browser along version used", "d": "6/2017"}, {"body": "sorry created clean react bootstrap system works seems introduce bugs used reactonrails system debug surely bug reactjs thank", "d": "6/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "6/2017"}, {"body": "whoops stupid please ignore", "d": "6/2017"}, {"body": "worries arrows implicit returns nt body curly braces", "d": "6/2017"}, {"body": "cc trueadm", "d": "6/2017"}, {"body": "wenbing commented development umd bundle package need package tested get another note nt need comment development bundle future manually rather using envify next react release work expected", "d": "6/2017"}, {"body": "interesting note ca nt used html engine passes alreadystringified values point also optimization possible nonstring received call extended method call string value moment called order prevent html engine even string conversion example strings calculated open dev tools inspect dom currently optimization possible react automatically converts values strings", "d": "6/2017"}, {"body": "nt see problem removing string coercion calls coerce nonstring values anyways cc spicyj historical reason need explicitly coerce", "d": "6/2017"}, {"body": "happening jsdom think could get away", "d": "6/2017"}, {"body": "aweary afaik nt always way would expect may problem know iswas intentional", "d": "6/2017"}, {"body": "think packing problem restart fixed sorry false issue", "d": "6/2017"}, {"body": "feature preact really enjoy think resistance though newcomers might cache variables end using old versions stateprops", "d": "6/2017"}, {"body": "indeed lead convenience", "d": "6/2017"}, {"body": "finished yet", "d": "6/2017"}, {"body": "yep works still things figure team making lots head way feel free checkout work progress pull requests", "d": "6/2017"}, {"body": "please see find dir special component function reactpurecomponent defined related logic old engine new engine", "d": "6/2017"}, {"body": "shouldnt ditch adding write ditching transformcodemod inferred functionsclassesvariables anyway afaik nt adding explicitly recommend nt either indeed inferred functionsclasses", "d": "6/2017"}, {"body": "thanks quick answer habit developed didnt quite question till today also got impression added react docs true however still floating around ie", "d": "6/2017"}, {"body": "really big deal react redux like two components libraries components would definitely recommend pattern case hardly matters", "d": "6/2017"}, {"body": "yeah surely doesnt matter codewise keeping legacy popular library kinda gives wrong example somebody might use without real need project", "d": "6/2017"}, {"body": "probably belongs", "d": "6/2017"}, {"body": "correct issue tracker bug reports feature requests react thanks", "d": "6/2017"}, {"body": "move appropriate repository apologies unaware repo", "d": "6/2017"}, {"body": "hey thanks filing issue possible timing issue like phantomjs script nt waiting sufficiently whatever needs happen componentdidmount hard tell would really helpful us could write example test case demonstrates behavior otherwise hard make headway", "d": "6/2017"}, {"body": "hey thanks reply mistake sorry bother thanks", "d": "6/2017"}, {"body": "utilities mind", "d": "6/2017"}, {"body": "reactisvalidelement lists html element names lists event names number things people either depend react copypaste react codebases able access", "d": "6/2017"}, {"body": "lists html element names ones react nt whitelist tag names anymore lists event names use linting", "d": "6/2017"}, {"body": "potential examples recall depended would longer need depend particular version react range isvalidelement package far less likely change across major react versions regardless interrogating use case comes nt particularly scalable productive fact remains people found use cases would made much easier robust changes react exposed modular packages react either depended directly ran tests described nodejs prevent ecosystem breakage", "d": "6/2017"}, {"body": "sorry yubikey", "d": "6/2017"}, {"body": "use easy", "d": "6/2017"}, {"body": "incomplete answer", "d": "6/2017"}, {"body": "try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "please report nt look related react accessing component internals may change versions component libraries", "d": "6/2017"}, {"body": "gaearon bad meant report repo open sorry", "d": "6/2017"}, {"body": "worries", "d": "6/2017"}, {"body": "came report problem nice analysis alirussell", "d": "6/2017"}, {"body": "thanks detailed report alirussell opened pr address setting questionable choice reverting check makes sense since still works expected still using elsewhere change event plugin hoping get patch release", "d": "6/2017"}, {"body": "sounds good aweary thanks", "d": "6/2017"}, {"body": "maybe might want move issue correct repository", "d": "6/2017"}, {"body": "reading log see tries connect npm registry local machine nt know intentionally wanted try resetting try", "d": "6/2017"}, {"body": "nt intentionally must default", "d": "6/2017"}, {"body": "default maybe tool installed ran", "d": "6/2017"}, {"body": "gaearon tried still facing issue", "d": "6/2017"}, {"body": "unfortunately ca nt provide support npm repository report issue like error message clear attempting connect instead real registry nt know related create react app issue install npm package example", "d": "6/2017"}, {"body": "gaearon thanks ton installed node mentioned changes problem resolved react working fine thanks", "d": "6/2017"}, {"body": "good know thank sharing", "d": "6/2017"}, {"body": "cc aweary", "d": "6/2017"}, {"body": "appears firefox specific firefox truncate number values trailing zeros also predates changes made input value issue suspect issue long time bug report bugzilla years ago feeling nt something work around though look", "d": "6/2017"}, {"body": "cc nhunzaker think viable away around ca nt think way nt involve using text inputs reasonable solution regression issue react without viable normalization strategy think may write firefox quirk", "d": "6/2017"}, {"body": "nt believe anything looks like extraneous zeroes lost display value user sees extraneous zeroes correctly reported access value property reports even nt show extraneous precision lost soon user types accessing point returns truncated string number tested via nt think anything wait firefox make change meantime number inputs really fussy formatting would recommend using text input maximum control display value either way sent pr test cover would work otherwise", "d": "6/2017"}, {"body": "source code react still using custom module system close commonjs using modules afaict assume also exposed", "d": "6/2017"}, {"body": "anyone bumping possible bundle commonjs modules native modules using config file", "d": "6/2017"}, {"body": "understand correctly could ie annotating components checking restrictive proptypes checks right sounds like proposal add runtime check react dev ensure component renders matches rendertypes property accurate also might look like implemented components render fragments", "d": "6/2017"}, {"body": "yes exactly without react enforcing adding arbitrary convention imo potentially dangerous ecosystem sure would look like fragmented rendering assume fragments would able optionally specify rendertypes well wanted nothing inherent feature proposed would require single root node words something rendered rendertypes would pass", "d": "6/2017"}, {"body": "cc sebmarkbage", "d": "6/2017"}, {"body": "really want flow support since flow infer way ensure nt considered proptypes might able want coroutines fiber let implement kind thing user space wider solution kind parentchild relationships indirections", "d": "6/2017"}, {"body": "valuable use able use prefiber hopefully feature added easily", "d": "6/2017"}, {"body": "likely wo nt back port new features react get fiber train chat airbnb react adoption path btw", "d": "6/2017"}, {"body": "server rendering fiber coming p", "d": "6/2017"}, {"body": "landed", "d": "6/2017"}, {"body": "passes tests must done", "d": "6/2017"}, {"body": "regardless tho also pretty disappointing prior released new feature would nt considered would willing accept wrote pr", "d": "6/2017"}, {"body": "getting started release work switch focus another release everything entails try break ecosystem possible could think worth even sure correctly implement would much easier fiber actually reason nt always ability parent see possible children deep setstate example could switch rendering rendering would way enforce efficiently", "d": "6/2017"}, {"body": "enforcing actually returns theoretically could return would nt get rendertype warning starts actually rendering", "d": "6/2017"}, {"body": "releasing took several weeks effort several people good position add features point branch diverged way much causing much duplicated effort also nt usual stability guarantees anymore nt use production", "d": "6/2017"}, {"body": "gked repo specifically react facebook website want report bug react check support article facebook help website thanks", "d": "6/2017"}, {"body": "nt encounter issue bind functions within calls instead construction time ie instead nt initially violates rule performance reasons hell guess", "d": "6/2017"}, {"body": "upon debugging module export appears undefined assignment expect", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "tried remedy using different style lib using radium tried styledcomponents instead warning still shows yet div properly styled browser webkitoverflowscrolling touch ffxsam provide example incorrectly produces warning react warning appears suppressed correct name used sounds like style libraries using applying prefix incorrectly case open issue including reproduction", "d": "6/2017"}, {"body": "jasoncramfighter please provide example reproducing issue use jsfiddle template hard help nt enough information also appear errors provided examples actually returning render method tried take example adjust runs reproduce issue appears working example provide example reproduces issue happy help identify issue react", "d": "6/2017"}, {"body": "hey aweary thanks fast response apologies enough information created fiddle using template removed reference formcontrol avoid confusion issue still appears switch minified nonminified good part issue seems line code mistakenly forgotten remove line never noticed nonminified version somehow still works fail like minified version either way think behavior seems inconsistent fiddle cdns used", "d": "6/2017"}, {"body": "jasoncramfighter thanks clarifying reason happens development unminified build props frozen dev actually deleted production props frozen gets deleted get error strict mode deleting property frozen object throws looks like components using rendered strict mode use class components see example throws error dev nt aware discrepancy cc gaearon intended", "d": "6/2017"}, {"body": "adding fiddle code seems make throw sure classes change anything though", "d": "6/2017"}, {"body": "right explicitly using strict mode resolves strange nt strict default", "d": "6/2017"}, {"body": "gekkio thanks taking time file issue controlled input react assumes source truth input value prop essentially controlled means controlled react prop settings property node controlled component put input inconsistent state react recommended possible zombiejs provide way update input value dispatching actual events instead setting property reacttestutils simulate method might useful reference sorry breaking behavior try avoid possible think safe say pattern unsupported hope helps", "d": "6/2017"}, {"body": "thanks quick response open bug zombiejs might consider workaround test code zombiejs nt change current approach", "d": "6/2017"}, {"body": "troll", "d": "6/2017"}, {"body": "waste time adding comments close plz", "d": "6/2017"}, {"body": "\u706b\u94b3\u5218\u660e", "d": "6/2017"}, {"body": "shame", "d": "6/2017"}, {"body": "trolling trollface", "d": "6/2017"}, {"body": "actionable suggestions improving react api open hearing stands issue destructive happy found success vue best luck", "d": "6/2017"}, {"body": "\u4e22\u4eba \u4e22\u4eba \u4e22\u4eba shame u", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "thanks feedback specific suggestions learn vue love hear thread constructive lock", "d": "6/2017"}, {"body": "nt seem like question related react please ask javascript question stackoverflow thanks", "d": "6/2017"}, {"body": "mondwan share example reproducing issue seeing warning using latest version last release example use jsfiddle starting point reproducing", "d": "6/2017"}, {"body": "non minified version works expected however using minified version maybe related issue", "d": "6/2017"}, {"body": "mondwan issue using minified build unminified build means internal flag uses suppress warning applied react warns make sure use correct build environment minified production unminified development", "d": "6/2017"}, {"body": "umm warning first place brandon dail notifications closed receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "used components created example warning catch cases someone moving classes forget remove favor never get warning using correct build also important use minified bundles production much performant token useful use unminified build development contains sizeable set useful checks warnings", "d": "6/2017"}, {"body": "point still using reactcreateclass instead class even though replaced createreactclass get warning first place createreactclass made class rules like effective brandon dail notifications getdefaultprops used components created createreactclass example warning catch cases someone moving createclass classes forget remove getdefaultprops favor defaultprops never get warning using correct build createreactclass also important use minified bundles react reactdom production much performant token useful use unminified build development contains sizeable set useful checks warnings receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "getting warning using production build development build production build strips code prevents warning development", "d": "6/2017"}, {"body": "general nt support mixing production development versions libraries", "d": "6/2017"}, {"body": "would still nice way avoid false positive pretty confusing maybe turn flag number always set dev set prod mode nt check", "d": "6/2017"}, {"body": "ahhh see points thanks explanations actually always show warnings problem however hided development codes codes get striped running production order get rid warnings better changes calls defaultprops correct brandon dail notifications getting warning using production createreactclass build development react build production build strips code prevents warning development receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "fix false positive warnings need either use reactjs createreactclassjs development reactminjs createreactclassminjs production mistaken warning occur mix development production versions two libraries", "d": "6/2017"}, {"body": "shows warnings changing defaultprops suggested dan abramov notifications fix false positive warnings need either use reactjs createreactclassjs development reactminjs createreactclassminjs production mistaken warning occur mix development production versions two libraries receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "work even without changing still work correctly createclass issue mistaken warning mistaken warning happens mix development production versions", "d": "6/2017"}, {"body": "probably fails run rather get latest version included bugfix need cherrypick equivalent master think", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "store callback call variable example callback set check need maybe bad practice option", "d": "6/2017"}, {"body": "seriouslyfluffy quite clear solution robust lib user always notified whether process succeeded failed example windowconfirm function return null user click cancel make async version confirm callback always called", "d": "6/2017"}, {"body": "one", "d": "6/2017"}, {"body": "try", "d": "6/2017"}, {"body": "seriouslyfluffy hi one question trigger callback body focus event get files user selected test focus event triggered input change event", "d": "6/2017"}, {"body": "example showed access files via array fileslist", "d": "6/2017"}, {"body": "file inputs nt expose cancellation events already selection made call file selector opened canceled passapole solution addresses also future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "hey richburdon thanks input agree warning nt descriptive could note warning actual stack trace available call thankfully react implement better error reporting even include render stack example logs warning check console see including render stack making easier trace error since issue already resolved master going close always open hearing feedback make error messages better", "d": "6/2017"}, {"body": "note nt recommend using react time", "d": "6/2017"}, {"body": "way react also provides information although less detailed stateless function components given refs see ref wrappedinstance statelesscomponent created apollo component attempts access ref fail fact appear trace instead real component names means build might misconfigured would expect see real component names could share minimal project reproducing could take look happening", "d": "6/2017"}, {"body": "example using react current version includes component names warning warning stateless function components given refs see ref foo greeting created app attempts access ref fail", "d": "6/2017"}, {"body": "cc jquense", "d": "6/2017"}, {"body": "surethis weird kinda case problem seems nt control group onchange event nt fire value correct case mixing defaultchecked seems like unsupported combo either input controlled cc insin well since also noticed", "d": "6/2017"}, {"body": "ah fairly certain know happening value tracked individual input another radio checked update last checked value remains click back aect thinks already checked nt update think needs simple call reactdominput", "d": "6/2017"}, {"body": "addendum happens uncontrolled groups method triggers update component instance since value state changing perspective instance nothing changes wish uncontrolled inputs nt exist", "d": "6/2017"}, {"body": "managed reproduce simpler test case defaultchecked needed jsx var hello reactcreateclass render function return reactdomrender documentgetelementbyid container changing radio buttons back forth log cc linkgoron seems like actual bug state react view dom differs actual dom see fiddle example", "d": "6/2017"}, {"body": "managed reproduce problem comparing vs also without defaultchecked", "d": "6/2017"}, {"body": "sum problem uncontrolled radiocheckbox groups probably update issue title", "d": "6/2017"}, {"body": "issue fixed track problem affecting web app stuck make radio buttons work", "d": "6/2017"}, {"body": "easy workaround manage radio buttons component state instead relying underlying dom yes bit annoying", "d": "6/2017"}, {"body": "supported mix packages please ensure version make work issues please provide project reproducing", "d": "6/2017"}, {"body": "tried changing version written previously getting error get result share project dont liberty need information", "d": "6/2017"}, {"body": "ca nt share project please share minimal example reproducing create new project add one test verify still issue", "d": "6/2017"}, {"body": "replace", "d": "6/2017"}, {"body": "run changing versions pretty sure different version file say missing definitely something wrong either versions really got installed bundler configuration close nothing provide project reliably reproducing could take another look", "d": "6/2017"}, {"body": "provide project reproducing", "d": "6/2017"}, {"body": "ya go look console error question thank", "d": "6/2017"}, {"body": "issue passing invalid value attribute specifically remove see error goes away confusing pausing exception though ca nt reproduce outside react strange must missing something", "d": "6/2017"}, {"body": "hey aweary yup issue mind hitting error makes perfect sense passing nan value path attribute able pause exception get type stack trace leading back element causing issue maybe code wrapping function call question hiding somethingstopping exception bubbling", "d": "6/2017"}, {"body": "tnrich wondering browser bug assuming using chrome firefox nt seem throw error invalid values discovered throws error even without javascript might mean chrome throwing error way nt compatible provided debugging tools even windowonerror nt invoked error might something brought chrome team instead", "d": "6/2017"}, {"body": "works end", "d": "6/2017"}, {"body": "probably means custom npm registry nt updated yet", "d": "6/2017"}, {"body": "need one file specifically would help", "d": "6/2017"}, {"body": "guess critical still pay extra module overhead modules instead", "d": "6/2017"}, {"body": "instead guess since two packages overhead probably nt significant bundles add unnecessary numbers comparison result like tool", "d": "6/2017"}, {"body": "sure combining files right approach combining modules single file definitely impact startup performance using react npm node module feel move way using browserify wants get accurate results ie use webpack", "d": "6/2017"}, {"body": "quirk chrome displays values set javascript react actually generate string sets dom properties verify fiddle uses dom apis without quotes chrome displays result", "d": "6/2017"}, {"body": "gaearon looks like fiddle posted content fiddle understand correctly though meant looks like chrome culprit react firefox amp safari correctly change string georgia times new roman serif using single quotes thanks looking anyways", "d": "6/2017"}, {"body": "oops must forgotten hit save", "d": "6/2017"}, {"body": "currently intentional although time less", "d": "6/2017"}, {"body": "extremely unlikely bug react either two reacts create element string outside method nt think third option reason error would occur understand hard isolate need least project inspect look issue really confident one two issues explain happens two reacts string refs needs set currently executing component executing component otherwise would nt know owns string refs produced keeps pointer global shared state inside however elements created method needs read state associate owners elements renders component talks different one calling error occur ensure points calling via jsx", "d": "6/2017"}, {"body": "nt think help without repro project hope helps", "d": "6/2017"}, {"body": "gaearon confirm whether different react given theres easy identity aware location mount application component describing add output exact value implies must using copy react ca nt find copy also analyzed webpack stats could nt find second copy could nt identify way well identity would matter might concern sure easy way confirm best guess theres kind race condition react larger html nodes causing time render increase thus exposing purely guess form experience dealing infrastructure code really sure come use case given nda could give access dump repo able replicate also willing spend time synchronously someone via screen share person sf help debug obviously work around feel like issue upstream like help sort", "d": "6/2017"}, {"body": "sure test used important part verify copy react reactdom sees matches one use app need put logs reactdom module code addition components", "d": "6/2017"}, {"body": "want get particular module looking need match react module reads reactdom writes", "d": "6/2017"}, {"body": "dig update details pretty sure one react possible webpack causing problems usage abnormal", "d": "6/2017"}, {"body": "provide use js class componenta extends reactcomponent shouldcomponentupdate nextprops nextstate thispropsanypropnestedobject newpropsanypropnestedobject return true return shallowcompare nextprops nextstate render return nt think adding embrace inheritance like api consistent react methods might also interpret special way future allowing override clashes also might support form purity annotations functional components work form inheritance either would nice avoid deviation api thanks suggestion though", "d": "6/2017"}, {"body": "occured firefox version windows", "d": "6/2017"}, {"body": "provide reproducing case", "d": "6/2017"}, {"body": "unfortunately difficulty providing reproducing case nt indication react components involved update stack trace pretty much production error reporting system could potentially related certain types dom nodes style attributes", "d": "6/2017"}, {"body": "bit hard imagine reproduce locally set breakpoint try capture data work way call stack", "d": "6/2017"}, {"body": "sorry case please confirm read message example says might two copies react run verified case", "d": "6/2017"}, {"body": "yes indeed issue deleted ran fixed issue", "d": "6/2017"}, {"body": "would like send fix still time cutting", "d": "6/2017"}, {"body": "sure", "d": "6/2017"}, {"body": "looking cut tomorrow please let us know ca nt finish today try fix", "d": "6/2017"}, {"body": "working right fix today", "d": "6/2017"}, {"body": "thanks", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "reported two times fix soon", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "thanks already reported", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "cc aweary nhunzaker", "d": "6/2017"}, {"body": "also cc jquense code added", "d": "6/2017"}, {"body": "fix perhaps got master let find", "d": "6/2017"}, {"body": "arg problem much time forgot also added master", "d": "6/2017"}, {"body": "thanks remember anything else cut", "d": "6/2017"}, {"body": "least terms changes made nt hear issues nt think anything else added", "d": "6/2017"}, {"body": "cherrypick cut thanks jquense gaearon", "d": "6/2017"}, {"body": "update waiting cut fix release either way within day", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "sure issue related error safari desktop version react regular input fields email password types happens load time also everytime onchange fires", "d": "6/2017"}, {"body": "please provide minimal example eg jsfiddle consistently reproduces issue safari", "d": "6/2017"}, {"body": "gaearon reported bug confirmed fixed", "d": "6/2017"}, {"body": "cc iamdustan case interested", "d": "6/2017"}, {"body": "sorry posted react native side", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "see reply", "d": "6/2017"}, {"body": "think issue need use local nt work xhr cross domain stuff", "d": "6/2017"}, {"body": "thanks gaearon one fixture requires running local server looks like fixtures good go", "d": "6/2017"}, {"body": "marksmt example set state onclick handlers state actually changes first click componentdidmount executed", "d": "6/2017"}, {"body": "updated code actually issue file upload dialog show site loads component one gets loaded site gets loaded dialog box nt appear bug referring words trigger file upload dialog component loads site loads know example pretty minimal application want dialog upload open whenever component loaded seen weird things like upload dialog opened component gets unmoutented", "d": "6/2017"}, {"body": "guess due security restrictions browsers related react call inside handler actual click vanilla js demo", "d": "6/2017"}, {"body": "section issues react framework tips best practices join huge react community chat issues like answer post good pattern controlled inputs unfortunately ca nt make controlled input stateless component way", "d": "6/2017"}, {"body": "robertistok mentioned try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "responding state change event react simply decides rerender ancestor component without respecting shouldcomponentupdate ignoring diff algorithm means would probably call componentwillunmount autocomplete component wrapper would able destroy component nt understand part documentation says rerender refers calling render method reconciling changes unmounting mounting components react never unmounts components unless key type changes ca nt guarantee react wo nt calling render cases pretty much guarantee component key type nt change react wo nt unmount component destroy state attempt reconcile parts dom managed react always shortcircuit returning managing content manually touch dom react nt manage eg imperatively change attribute nt exist react side react wo nt blow away changes rerendering experience maintaining components many interfacing nonreact code depend behavior rules enough keep code working even make changes algorithm example recently completely rewrote implementation unlock long requested features dozen components required changes think reasonable price pushing library forward sure helps hope nt want overpromise nothing change also lot code needs keep working relies patterns way clarify docs regards two guarantees happy take pr", "d": "6/2017"}, {"body": "also specific concerns please create examples happy discuss problem issues like often get philosophical people start talking past completely different things want make sure discussing cases", "d": "6/2017"}, {"body": "experience rules enough keep code working even make changes algorithm yes definitely agree see confusion coming take look snippet documentation try think like someone new react would take important remember reconciliation algorithm implementation detail react could rerender whole app every action end result would read nt understand talking calling method component rendering usually means taking virtual tree transforming dom representation rerendering first glance would mean dropping old dom tree recreate scratch nt one got interpretation nt mind like submit pr clarify part documentation rerendering means calling render components completely fine would nt fear react thanks explanation", "d": "6/2017"}, {"body": "sure pr would great sorry confusing rendering bit overloaded term challenge phrase way would understandable beginners provided enough information advanced users", "d": "6/2017"}, {"body": "suggested changes part", "d": "6/2017"}, {"body": "also updated article reflect misunderstanding sorry confusion", "d": "6/2017"}, {"body": "thanks report longer maintain transitiongroup repository please report instead cheers", "d": "6/2017"}, {"body": "hey thanks taking time write suggestion umbrella issue new lifecycle method ideas could post proposal instead thanks", "d": "6/2017"}, {"body": "react native depends version package faster release cycle please use whatever version react native tells exists related version ready public consumption yet sure issue close seems intentional problems please describe detail eg need react native project crashes", "d": "6/2017"}, {"body": "bug unintentional cc flarnie", "d": "6/2017"}, {"body": "happened babel transform turning calls nt transpile addons extracted fix", "d": "6/2017"}, {"body": "closing since fixed", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "inspecting unpkg seems confirm fixed latest version two places version polyfill inline references minutes try pull something windows laptop see issues come", "d": "6/2017"}, {"body": "nt find quick way test loading module let know tomorrow would helpful trying load js fiddle unpkg nt get right", "d": "6/2017"}, {"body": "yes fixed thanks", "d": "6/2017"}, {"body": "thanks reporting", "d": "6/2017"}, {"body": "possible please see past discussion", "d": "6/2017"}, {"body": "behavior described could convenient cases like one mention nt think good generic solution firstly would require react renderers like dom maintain explicit whitelist event handlers treat differently component props general whitelists something moving away eg dom attributes bloat codebase hard maintain beyond whitelist dom would presumably also need map html elements dispatched events know passed eg otherwise happen ambiguous cases like jsx class somecomponent extends reactcomponent render propose react passthru onclick component explicitly pass onchange though native event onfoo return example think proposal also breaks encapsulation components users component nt necessarily knowcareabout dom elements composes specific external api maybe component wants intercept events run custom logic allow propagate team considering ways improve event subscriptionhandling future versions react bit orthogonal request mention passing note area may changing future well thanks proposal examples going close though nt think something canshould accommodate cheers", "d": "6/2017"}, {"body": "modify input text case transform think expected way react guess particular transform preserves number characters react point view text completely replaced typing puts cursor end afaik general solution would work cases work around manually managing dom selection using ref explained detail think bug encourage participate discussion thoughts add cheers", "d": "6/2017"}, {"body": "cc nhunzaker aweary", "d": "6/2017"}, {"body": "thanks report sullenor looks like works expected react look see include fix release", "d": "6/2017"}, {"body": "extend given example radio elements see fires per radio words event fired value name changes might well rename screen grab clear callback fired seems different problem sullenor describing tested google chrome version official build", "d": "6/2017"}, {"body": "klavs mentioned uncontrolled radio inputs project stopped working expected stopped calling onchange function radio button checked", "d": "6/2017"}, {"body": "avivshafir particular issue filed release nt think describing related confirm bug", "d": "6/2017"}, {"body": "gaearon yes think particular issue related indeed almost certain bug example sorry confusion", "d": "6/2017"}, {"body": "thanks avivshafir comments managed understand reported issue affecting uncontrolled radio inputs working example controlled radios working expected", "d": "6/2017"}, {"body": "hi try keep github issues focused either bug reports discussion around requirements new features question actionable issue going close suggest reposting question one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow cheers", "d": "6/2017"}, {"body": "believe bug react please create example reproducing", "d": "6/2017"}, {"body": "assume question instance expecting refs instances define components create app extending nt automatically inherit methods like method others like available default components exported react native ones backed native views might find example page useful deals issue specifically apologies misunderstood question", "d": "6/2017"}, {"body": "close think bvaughn addressed question still issues please create complete runnable example reproducing problem thanks", "d": "6/2017"}, {"body": "confusing behavior rather avoid using docs use documentation indeed runtime methods may available older browsers like feel like willing live examples people use modern browsers learning single occurrence seem like something people would run close reconsider people keep bumping issue", "d": "6/2017"}, {"body": "aaronshaf thanks report map camelcased viewbox cases share small example reproducing issue created small example see rendered chrome firefox issue template contained link jsfiddle use template example future reference great could provide information requested opening issue thanks", "d": "6/2017"}, {"body": "looks like interference polyfill", "d": "6/2017"}, {"body": "thanks report brendoncrawford believe resolved", "d": "6/2017"}, {"body": "thanks taking time write request thomasjuster future versions react warn unknown props dom elements advise avoid spreading props onto dom nodes general unless guarantee contain valid html attributes warning put place ease transition react eventually let attributes pass since react removing validation layer wo nt available export check implements change hope helps", "d": "6/2017"}, {"body": "example use spread avoid passing invalid propsattributes", "d": "6/2017"}, {"body": "works pointing latest alpha", "d": "6/2017"}, {"body": "breaks server rendering", "d": "6/2017"}, {"body": "expected fully worked would nt alpha describing new feature name says stable yet", "d": "6/2017"}, {"body": "said nt think currently support error boundaries server renderer might worth raising separate issue", "d": "6/2017"}, {"body": "happy take pr fixing", "d": "6/2017"}, {"body": "nt since nt think anybody checked bundles extrabloated code believe close future need fix replace old domserverrenderer completely remove old bundles build process", "d": "6/2017"}, {"body": "good point make sure something fix next two weeks nt manually exclude running sync", "d": "6/2017"}, {"body": "yea either way works disabling easy removing corresponding bundles", "d": "6/2017"}, {"body": "sorry noob question something written fixtures differ unit test suite right impression fixtures run ci meant looked humans", "d": "6/2017"}, {"body": "right impression fixtures run ci meant looked humans aickin correct assuming ssr fixtures setup like dom ones", "d": "6/2017"}, {"body": "yep things hard catch automated way eg things nt replicate jsdom could added selenium manual fixtures bisect far seems like less hassle dealing flaky integration tests", "d": "6/2017"}, {"body": "already done want take please let know take also would great point right direction starting one tia", "d": "6/2017"}, {"body": "nt think feel free work first post describes code lives done specific questions work please post thread try answer", "d": "6/2017"}, {"body": "hey rupojs made progress", "d": "6/2017"}, {"body": "hi matthewrister version introduced new experimental error boundary feature basically trycatch component tree feature improved significantly upcoming version currently available alpha interested trying error occurs render component lifecycle method react looks tree nearest ancestor component define method method called given chance rerender recovery state rerender also fails react continues looking next highest error boundary eventually runs functions similar trycatch behavior test code feature interested learning works going close issue since seems overlap highly existing feature", "d": "6/2017"}, {"body": "thanks bvaughn great see already work going space kudos writing entertaining test cases matt", "d": "6/2017"}, {"body": "would add tests pretty old describe feature supported cases work support react much comprehensive described tests", "d": "6/2017"}, {"body": "whoops thanks dan nt mean link version test", "d": "6/2017"}, {"body": "puzzled nt understand test failed us ci run ran test showed passing remembered made change make tests properly run ci back think related ci change made jest task runner turning exit", "d": "6/2017"}, {"body": "thanks investigating clarify issue pr merge base include fix might prs like need mindful ideally rebase old prs merging", "d": "6/2017"}, {"body": "hi rubyruy team nt yet decided best expose accompanying build tooling create support custom renderers roadmap though time think best bet would probably fork repo", "d": "6/2017"}, {"body": "closing duplicate let discuss", "d": "6/2017"}, {"body": "thanksbut notice sections translated think important help developers understand react", "d": "6/2017"}, {"body": "nesmalltown thanks reminding continue translation work keep coming react updates", "d": "6/2017"}, {"body": "awesome please keep track plan use tool translation like jest", "d": "6/2017"}, {"body": "gaearon ok keep track", "d": "6/2017"}, {"body": "thargarius share source component looks like muted video using prop problem please provide example reproducing issue use starting point", "d": "6/2017"}, {"body": "hi thargarius ca nt tell description issue application code thirdparty component react please provide repro case template start narrows things react although react rendering html snippet provided think looks correct edit looks like aweary beat", "d": "6/2017"}, {"body": "oh realized published issue wrong repo sorry inconvenience", "d": "6/2017"}, {"body": "hi two ways writing equivalent second one compiled first one using bind attach methods class prototype example still attach function instance thismethoda thismethodabind essentially facebook use second way class properties aware still experimental part want stick stable syntax could bind manually hope helps", "d": "6/2017"}, {"body": "far runtime behavior goes identical later binding method constructor means defining method class prototype instance former define method instance property avoiding duplication mentioned experimental ymmv check example babel repl see difference", "d": "6/2017"}, {"body": "thanks gaearon helpful question coming testing component methods find method class prototype use ca nt find method prototype use see issue enzyme", "d": "6/2017"}, {"body": "aweary thanks helps lot process converting classes", "d": "6/2017"}, {"body": "leiclearsky also check automatic class transform used convert thousands components documented", "d": "6/2017"}, {"body": "provide details version react etc see error create something react reactdom jquery like", "d": "6/2017"}, {"body": "hey mentioned please provide example reproducing issue template start nt explicitly support compatibility libraries like jquery nt think anything react would prevent interop sounds like maybe trouble getting work together try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "closing since response", "d": "6/2017"}, {"body": "hello working first contribution", "d": "6/2017"}, {"body": "hey assitan heads already open pr fix", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "resolution ship version see badly breaks conditions get data", "d": "6/2017"}, {"body": "would calling much overhead", "d": "6/2017"}, {"body": "markerikson semantically different operation adds keys", "d": "6/2017"}, {"body": "looks docs ah yes interesting nt noted sure seems like useful addition", "d": "6/2017"}, {"body": "need find selected element already know one selected thanks onchange callback know data used render children seems wrong read back tree", "d": "6/2017"}, {"body": "fezvrasta onchange events fired initial render", "d": "6/2017"}, {"body": "run need search singleplural children maybe would make sense complement basically use case consumer library building adamant wanted able use navigation component like components need split like responsive layout work internally main navigation component wrap content secondary navigation menu one container content shows top right large enough collapses side small screens initial implementation build navigation take parts props like somewhat valid argument much less readable achieve desired structure ended writing couple helper functions scan children find ones appropriate types like let typesareequal typea typeb gt typea typeb processenvnodeenv production workaround proxies used reacthotloader typesareequal typea typeb gt typea typeb typeaname typebname function getchildrenwithtype children type let childrenwithtype reactchildrenforeach children child gt child amp amp typesareequal type childtype childrenwithtypepush child return childrenwithtype function getchildwithtype children type strict true let childrenwithtype getchildrenwithtype children type childrenwithtypelength return childrenwithtype else strict throw new error getchildwithtype type child count childrenwithtypelength else return null", "d": "6/2017"}, {"body": "mjackson probably want add expanded key like imagine use example like let make label css animation fades created way stateful choose way make stateful animation wo nt play switch items key variant add explicit keys switch foo bar animation play switch foo default wo nt key looking component isolation way knowing avoids problem encoding nesting key even would probably semantically said think use case traversing children better handled coroutines fiber fragments help things like", "d": "6/2017"}, {"body": "agree time want array children probably want keys sebmarkbage sometimes nt case router component nt want assume different key might render thing case would nt want unmount remount contrived basically ca nt always assume different key think probably total edge case happy close ran issues using inside thought worth shot seeing anyone else thought might useful well", "d": "6/2017"}, {"body": "think touches expectation one might react children using jsx simply syntax sugar borrowing semantics react semantically equivalent something like js sometimes part bothers intuition right basically test see happens different components might different things even accidentally switch behavior releases", "d": "6/2017"}, {"body": "add handling routes reactjsx seems like bad idea perhaps looks nice concept nt seem sound regular js would much better fit would allow define exact semantics want crazy", "d": "6/2017"}, {"body": "yes uses syntax sugar standalone also able render purely syntax sugar previous versions router bit topic reason decided reuse components inside make easier people upgrading previous versions refactoring imagine routes render independently great dropping content distant places app need render url strong use case make really convenient nt use components make everything work another strong use case choosing different routes common routers instead inventing new syntax use case decided reuse bunch components inside", "d": "6/2017"}, {"body": "finally tracked appears offending line understand code saying getdefaultprops ok component created production seems counter might intended environment production nt want warning triggered correct would nt want set value environments fact warning environment seems like regardless environment nt want see warnings components created using base", "d": "6/2017"}, {"body": "would also note conjunction using webpack setting", "d": "6/2017"}, {"body": "turns organization using wonky build process items webpacked others running react development mode webpacking dependencies production mode caued mismatch dependencies way things react expected user error", "d": "6/2017"}, {"body": "acutually add appears right", "d": "6/2017"}, {"body": "keys ensure reorder items react treats reorder rather update item list important performance also correctness otherwise might end nested state staying place parents conceptually moved like reorderable list input fields inside", "d": "6/2017"}, {"body": "need reproducible example proceed close since impossible investigate create one reopen thanks", "d": "6/2017"}, {"body": "neytema understand referencing example would need pass string type react component created array type react elements type checking means preventing error mistaken though theory semantically correct adds keys", "d": "6/2017"}, {"body": "sourabhchourasiya much code us reasonably help lifecycle methods nt called application may silently failing check errors swallowed provide reduced test case template start demonstrating issue react would great sounds like usagesupport question try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow happy reopen provide test case demonstrating issue react thanks", "d": "6/2017"}, {"body": "nhunzaker nonreact comparison case asked", "d": "6/2017"}, {"body": "bit hard figure going case going eventually drop favor firstclass portal api see working example using requires react alpha close unlikely change behavior hope helps", "d": "6/2017"}, {"body": "gaearon thanks following try refactor portal implementation using materialui solve regression introduced fiber reconciliation algo", "d": "6/2017"}, {"body": "nt think regression seems like example issue fiber change behavior", "d": "6/2017"}, {"body": "sure regression either could edge case making work prerelease version still noticed breakingchange materialui project open issue reference dig", "d": "6/2017"}, {"body": "still confused saying react version uses fiber ever worked saying different similar issue", "d": "6/2017"}, {"body": "managed reproduce experience simple jsfiddle demo behaviour definitely changed latest next however likely important affecting unstable api going first class one fiber version gaearon thanks support", "d": "6/2017"}, {"body": "fateriddle reactcsjs js import react react import csjs reactcsjs csjs export default class button extends reactcomponent render return flexibity instance run postcss transforms compile time css problematic overall react nt make pick unless brings us forward vue inhibits innovation sidelines fumbling around old css webpack loaders react churning awesome stuff like glamor styledcomponents one day idea come along good perhaps traditional css fall away like jsx made html irrelevant pick method suits", "d": "6/2017"}, {"body": "think syntethic event trigger bubbling phase instead capturing phase causing react use bubbling event simulate capturing event would use unified type event trigger event user registered event array", "d": "6/2017"}, {"body": "ca nt understand use capturing phase wrong smile strange issue exists", "d": "6/2017"}, {"body": "going work hopefully get resolved time release", "d": "6/2017"}, {"body": "closing favor internal diff", "d": "6/2017"}, {"body": "fixed next release", "d": "6/2017"}, {"body": "blocked issue build system relies closure compiler dependencies use createreactclass anything help process forward", "d": "6/2017"}, {"body": "fixed next release", "d": "6/2017"}, {"body": "change latest build createreactclass npm package need wait", "d": "6/2017"}, {"body": "see comment rc addons released separately today", "d": "6/2017"}, {"body": "fixed please verify plan publish final version tomorrow", "d": "6/2017"}, {"body": "future reference try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "6/2017"}, {"body": "gaearon checking think move forward cc lacker", "d": "6/2017"}, {"body": "looks slick love lend hand need one", "d": "6/2017"}, {"body": "bvaughn glad love help dude safe get started sync thoughts writing new markup", "d": "6/2017"}, {"body": "joecritch nt final say happens docs site interested improving chat tom next day get context", "d": "6/2017"}, {"body": "bvaughn cheers brian", "d": "6/2017"}, {"body": "think avoid recommending mentioning docs representing children hidden prop implementation detail example use react without jsx still specific api representing children document api encouraging users utilize means unable change children represented internally without disrupting public api said feel relatively certain nt something want going go ahead close cc gaearon let know input feel differently thanks input everyone", "d": "6/2017"}, {"body": "thanks submit errata suggestion book question bad coding practice", "d": "6/2017"}, {"body": "working", "d": "6/2017"}, {"body": "example mine key ca nt formated number equal", "d": "6/2017"}, {"body": "aweary housekeeping close issues release fix shipped wait", "d": "6/2017"}, {"body": "nhunzaker typically close issue merged master", "d": "6/2017"}, {"body": "awesome thanks land next minor release react", "d": "6/2017"}, {"body": "igreulich agree making something like dispatching actions missing point", "d": "6/2017"}, {"body": "igreulich know seems like question reduxspecific number ways trigger ancestor updates nt involve redux example ing new location publishing state change state framework besides redux would argue state changes lifecycle methods always bad saying even etc would better wrap state change calls sure consensus react community think even seen dan abramov encouraging people dispatch actions", "d": "6/2017"}, {"body": "igreulich ultimately seems granted little information additional reducer listening action dispatched triggered lifecycle methods first place rather rely react tell made error redux understand sounds ideal instance reducer middleware responds location change causes component mount update simply impossible libraries like work independently whatever routing framework use whatever causes form component mount dispatch actions lifecycle methods even wrap dispatch", "d": "6/2017"}, {"body": "hard believe try use internal component state like function heard causes help want use something try fashion works great", "d": "6/2017"}, {"body": "guys everything saying redux reduxform reactrouter etc example trying say code running causes ancestor update probably cause errors later react immediately error ancestor update triggered rather blowing later confusing error messages help everyone including consumers libraries mistakenly addition docs explicitly state nt update local external state inside componentwillupdate", "d": "6/2017"}, {"body": "ok get docs direct message says note call thissetstate need update state response prop change use componentwillreceiveprops instead guy understand update state internal external bad idea trying fix thing blowing later confusing error messages think transactions react later new reconciler ca nt handle simple situation think deal", "d": "6/2017"}, {"body": "fixed please verify plan publish final version tomorrow", "d": "6/2017"}, {"body": "cool works thanks", "d": "6/2017"}, {"body": "also encountered issue originally posted issue facebookincubatorcreatereactapp cra repo description according docs assigned inside component method nt know created composed component inside constructor assigning testing runs without errors warnings running production build produced error rest application stopped working expected behavior also give error expect development application works production one well actual behavior error warning environment run commands project folder fill results ejected reactscripts react specify operating system windows home version browser version google chrome reproducible demo see project readme demonstrates see deployed version errors", "d": "6/2017"}, {"body": "likely bug hunch might already fixed master appreciate somebody could confirm writing failing test", "d": "6/2017"}, {"body": "gaearon following thread would interested verifying bug attempting fix still exist unless either bug reporters would like tackle", "d": "6/2017"}, {"body": "sure go ahead need look assignments reactcurrentownercurrent seems deviate production think deviation intentional either nt consider case breaking refs constructor protection got lost point", "d": "6/2017"}, {"body": "gaearon added test verify bug still exist master look fixing bug next", "d": "6/2017"}, {"body": "aweary many third party apis nt full filled standard like something style tags like polymer fulfilled communities need mostly things hack based like standard", "d": "6/2017"}, {"body": "fwiw found react cssmodules pretty nice work application code tricky mix dynamic values eg themes propsdrivenstyles otherwise think modules approach pretty nice", "d": "6/2017"}, {"body": "fixed please verify", "d": "6/2017"}, {"body": "nt see version published yet", "d": "6/2017"}, {"body": "set still rc exists turn tomorrow", "d": "6/2017"}, {"body": "ah indeed probably internal registry slow try soon", "d": "6/2017"}, {"body": "confirmed working correctly", "d": "6/2017"}, {"body": "great thanks sending fix", "d": "6/2017"}, {"body": "gaearon good bet hard lot people look stack traces investigate components upgraded use", "d": "6/2017"}, {"body": "seems like need adding files", "d": "6/2017"}, {"body": "ah might misdiagnosed rickyh right looks like need add whitelist throw together pr get something testing", "d": "6/2017"}, {"body": "done also put jsfiddle anyone nt mind taking gander make sure nt missed something", "d": "6/2017"}, {"body": "merged addition also sent pull request ship next minor release", "d": "6/2017"}, {"body": "since response zhuyinjing going close assume usage issue figured still problem believe issue react please respond example reproducing issue use template", "d": "6/2017"}, {"body": "merged issue closed", "d": "6/2017"}, {"body": "agree well encompasses mouse events includes normalizations browser consistency think best leave warning situation thanks taking time submit issue though rauschma", "d": "6/2017"}, {"body": "seen similar problem santiagopuentep want find reason noticed elements get css transition move forward ie smaller index number wrt siblings dom order also lifecycle hooks called fixed maintain dom ordering transition gaearon need troubleshoot using fiber matters", "d": "6/2017"}, {"body": "noticed elements get css transition move forward huynguyen artifact react handles reordering really react bug would say reordering happen one way another react always handles reordering direction end simply browsers quirky able avoid reordering via flexbox instead related", "d": "6/2017"}, {"body": "gaearon finally able create vanilla js version problem persists react changing positioning dom nodes resets transition ones moved least jsfiddle vanilla version thanks help anyway", "d": "6/2017"}, {"body": "hello like solve issue beginner react slack channel irc channel would happy join", "d": "6/2017"}, {"body": "jackysatpal get touch going", "d": "6/2017"}, {"body": "gaearon dan say inside function get current version state assume want get current version state read modify", "d": "6/2017"}, {"body": "gives currently rendered state nt expose pending state might even calculated point discussion cc spicyj sebmarkbage thoughts particularly", "d": "6/2017"}, {"body": "gaearon dan say code prints console see consolelog render click button twice instead seems case prevstate receive functional setstate always state rendered ui", "d": "6/2017"}, {"body": "assume see setting state twice incrementcount function therefore increasing count magnitude rather time function called react nt actually rerender eventhandling completed setstate called twice function rerendering", "d": "6/2017"}, {"body": "react nt actually rerender eventhandling completed setstate called twice function rerendering yeah moment one could think react would call render first call functional set state apparently nt", "d": "6/2017"}, {"body": "seems like works", "d": "6/2017"}, {"body": "closing work remains around changes open new issues thanks gaearon nhunzaker bvaughn aweary acdlite everyone helped process onward towards", "d": "6/2017"}, {"body": "acdlite problem fiber app far major one simple test case crash browser chrome probably open task manager kill tab testing", "d": "6/2017"}, {"body": "thanks test case aware issue fix stable goes", "d": "6/2017"}, {"body": "gaearon sorry bothering wanted ask follow issue understand confusion created issue created new repo tried reproduce earlier line calling super without props line using props render passing props indexjsx npm start navigate works tried accept props constructor like diff diff git asrcappjsx bsrcappjsx index asrcappjsx bsrcappjsx import react react export default class app extends reactcomponent constructor props constructor super still works created issue expecting work mentioned missed props impression nt work makes sense nt pass react parameter project showed working without complaining anything react change way props passed passed lifecycle hook surprised nt work time kinda curious surprised works", "d": "6/2017"}, {"body": "mentioned passing constructor finishes inside constructor works pass constructor finishes running react assign manually case forgot", "d": "6/2017"}, {"body": "okay understood thanks", "d": "6/2017"}, {"body": "hitting clear indeed revert dom prop representing html attribute value works expected uncontrolled inputs controlled inputs react update dom props new value every change hitting clear noticeable effect setting dom prop empty string manually change fixes js class dateinput extends reactcomponent componentdidupdate prevprops prevpropsvalue thispropsvalue thisrefsinputdefaultvalue render return", "d": "6/2017"}, {"body": "react release", "d": "6/2017"}, {"body": "vicbell ready yet", "d": "6/2017"}, {"body": "gaearon really enough set ensure nt load execute unnecessary code production mentioned anywhere docs using webpack trying use minified versions using following config getting exactly error ie", "d": "6/2017"}, {"body": "szimek exact error except reactnative idea look", "d": "6/2017"}, {"body": "seem mixing incompatible versions", "d": "6/2017"}, {"body": "oh nt think thing official compatibility chart", "d": "6/2017"}, {"body": "react native always supports one version package find one checking looking peer dependency already get warning use wrong one", "d": "6/2017"}, {"body": "gaearon looked packagejson file version peer dependency react version installed point considering starting new project moving source folder", "d": "6/2017"}, {"body": "testing output component component component please nt tell also needs ensure compatibility", "d": "6/2017"}, {"body": "please provide project reproducing problem people generally use rn without issues need give details help", "d": "6/2017"}, {"body": "tell use npm instead yarn think people nt use yarn right", "d": "6/2017"}, {"body": "sorry need ask repository nt know", "d": "6/2017"}, {"body": "guess providing repo would mean nothing since app", "d": "6/2017"}, {"body": "take look see anything wrong side things ca nt answer questions like tell reactnativecli use npm instead yarn part repo", "d": "6/2017"}, {"body": "also using typescript maybe part issue", "d": "6/2017"}, {"body": "nt know report looked packagejson file version nt sound right see stack trace file nt exist try searching see redbox running file added also bumped minimal required react version would nt crash something wrong report", "d": "6/2017"}, {"body": "ok updated deps dependencies like error changed", "d": "6/2017"}, {"body": "please provide minimal code reproducing problem likely problem exactly error message says future versions provide details", "d": "6/2017"}, {"body": "try making zero current error message says makes think infinite loop somewhere error shows activating", "d": "6/2017"}, {"body": "gaearon started new one still business logic adding typescript shows start activate menu one publish github want take look", "d": "6/2017"}, {"body": "gaearon put base project see works", "d": "6/2017"}, {"body": "related issue originally described please create new issue project react native repo thanks", "d": "6/2017"}, {"body": "gaearon created one react native repo since might related instead react", "d": "6/2017"}, {"body": "ajayu", "d": "6/2017"}, {"body": "ajayu discovered using let key something loops code apparently nt polyfilled properly replacing map worked nothing reactrouter firing render call caused error happen", "d": "6/2017"}, {"body": "issue occurs specifically using", "d": "6/2017"}, {"body": "please read comment see issue without descriptive error code swallowing errors locking issue comments confuse people googling cause error always another error happened earlier code might swallowed", "d": "6/2017"}, {"body": "jeez annoying nhunzaker sebmarkbage aweary fix event plugin simply add new event guessing middle button clicks explicitly specced nt count breaking jeez", "d": "6/2017"}, {"body": "error nothing worked exact error cause completely different code react components shared iframes components different typeof value different iframes caused error although worked browsers error", "d": "6/2017"}, {"body": "able get working including much smaller others may want consider trying well", "d": "6/2017"}, {"body": "smorin", "d": "6/2017"}, {"body": "also problem send function prop child component production code works however test nt work error", "d": "6/2017"}, {"body": "mean using test renderer wo nt work please see reasons", "d": "6/2017"}, {"body": "use", "d": "6/2017"}, {"body": "longer maintaining transition group addons please check instead thanks", "d": "6/2017"}, {"body": "clear linked repo dropin replacement version maintained foreseeable future", "d": "6/2017"}, {"body": "ericnakagawa hramos anything side start process want lose valuable effort like get sync soon", "d": "6/2017"}, {"body": "gaearon ping eric directly leading localization effort sites", "d": "6/2017"}, {"body": "hi writing let anyone know help spanish translations watching issue", "d": "6/2017"}, {"body": "thanks ongoing work begin accepting translations coming weeks", "d": "6/2017"}, {"body": "stevemorin", "d": "6/2017"}, {"body": "smorin", "d": "6/2017"}, {"body": "aweary anyone else thread trying understand arguments officially supported part eventhandler class back specification according react seems three arguments passed syntheticevent object think node onclick handler undefined sure third object supposed looking documentation nt mention anything syntheticevent supposed get access nodedom object official object second argument points officially supported also supposed use syntheticevent appearing contain reference nodedomelement onclick event see screen shot version react according modified code semanticuireact import react component react import menu segment semanticuireact export default class menuexamplesecondarypointing extends component state activeitem home e name gt consolelog thissetstate activeitem name gt consolelog let arguments let index index lt alength index consolelog index consolelog thissetstate activeitem name thefunction consolelog handleitemclick e n l gt windowthee e windowthen n windowthel l thisthefunction consolelog consolelog consolelog thissetstate activeitem nname render const activeitem thisstate liquidweavergit", "d": "6/2017"}, {"body": "relay modern static queriesahead time code generation getvariables subscriptions graphqljs subscription support mutation typescript flow disable global variables modulenamemaper vscode terminal webpack vendor split multi output path babel babelruntime vs babelpolyfill passperpreset bad idea reexport issue ascii art licecap", "d": "6/2017"}, {"body": "looks relevant someone please comment possible child b render runs first runs b render implemented", "d": "6/2017"}, {"body": "aweary suggestion moving idea called state updates called may updated allowed certain cases currently makes sense run code whenever state updates even render wo nt happen wo nt work eg contextproviding component needs update child subscribers even best rerender immediate child due frequency updates workable use lifecycle method", "d": "6/2017"}, {"body": "carrying mstijak jamespedid emphasise whilst may discourage deep inheritance according sebmarkbage pretty usefulimportant able run something construction mounting sense typescript ts sanitised production code sorry use case seems obscured abstract class basecomponent extends reactcomponent props rxbehaviorsubject selected rxobservable componentwillmount thisprops new rxbehaviorsubject thisprops thisselected rxobservable combinelatest thisprops thiskey map props key gt props key componentwillreceiveprops nextprops p thisprops next nextprops class concretecomponent extends basecomponent lt gt key rxobservableof name actually changes practice note ca nt perform initialization inside constructor runs child constructors run child constructor initializes initialization ca nt run inside initial render needs use properties set note nt async ready render one level inheritance nt go deeper alternative lets factor common parts component would mixins guess another way might pass every value child using extra constructor parameters works pretty unergonomic remember pass context requires parent initialize fields summary pattern stable works correctly asis nt appear pleasant substitute afaict happy corrected", "d": "6/2017"}, {"body": "tekacs yo dawg heard like reactive programming put rxjs stream could get reactive updates get reactive updates wink", "d": "6/2017"}, {"body": "build observable many observables combined rather handle latter specially yes take component reactively updated whole reactively update inside result comes pretty nicely despite silliness", "d": "6/2017"}, {"body": "tekacs passing data props observables take place redux etc would", "d": "6/2017"}, {"body": "use case find compelling eg want trigger async data request know need soon first want render child content kind like link browser however nt necessarily need handle instance might enough static method without access", "d": "6/2017"}, {"body": "without access state would store result async request", "d": "6/2017"}, {"body": "would rely external system keep cache around like relay flux store request available like something nt get direct handle resource separate request gets data note use case meant used canonical data loading model async api builds ideas would explicitly block rendering subtree data fetched could combine prefetches render api update block async", "d": "6/2017"}, {"body": "tekacs case think number ways could avoid deepening class hierarchy still accomplish want example js function createrxjscomponent key methods key rxobservable methods object reactclass class rxjscomponent extends reactcomponent selected rxobservable let key methods rxjscomponent key rxjscomponent key methods key return rxjscomponent const concretecomponent createrxjscomponent key rxobservableof name actually changes practice", "d": "6/2017"}, {"body": "yup several state streams include observable graphql queries via apollo state store others passed children propagate back rather messier pattern passing functions suggest last post certainly works certainly thought using abstract classes make easy downstream implementors team implement component correctly b access override variety common functionality used many components kind perhaps makes less clear chose simplest example could find post reduce things assure result turns unmanageably messy huge done using pattern like confused actual base component looks like wrote hours recently get something core sorted subclasses whilst certainly possible transform form give nearly practical", "d": "6/2017"}, {"body": "blocked issue build system relies closure compiler dependencies use createreactclass anything help process forward", "d": "6/2017"}, {"body": "merged soon", "d": "6/2017"}, {"body": "fixed please verify become tomorrow", "d": "6/2017"}, {"body": "gcc complains trailing commas object literals error positions seem wrong though", "d": "6/2017"}, {"body": "fix trailing commas issues bit frustrating nt whole list issues fix one one", "d": "6/2017"}, {"body": "gaearon react supports bellow", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "gaearon ignore gcc warn", "d": "6/2017"}, {"body": "ah see regardless easy fix added fix final cut soon", "d": "6/2017"}, {"body": "warning error behavior depends language level set gcc gaearon try new build", "d": "6/2017"}, {"body": "sorry nt published version without trailing commas yet final testing", "d": "6/2017"}, {"body": "always check results using", "d": "6/2017"}, {"body": "fixes", "d": "6/2017"}, {"body": "works fine afaict thanks", "d": "6/2017"}, {"body": "thanks reporting issues sorry nt acting fast good news revamped addons built unlikely issues find something able fix much faster", "d": "6/2017"}, {"body": "workaround issue", "d": "6/2017"}, {"body": "closing fixed released", "d": "6/2017"}, {"body": "explanation disabling cloudflare html minification necessary see stackoverflow answer", "d": "6/2017"}, {"body": "aweary polyfill detect mouseup occuring outside browser window would wise safari devs comply browsers point", "d": "6/2017"}, {"body": "test component exists contains try using component without props pass testing component exists also kind risky basically would like typical div exists test component edit basically find works ok enough validate component shallow rendered output", "d": "6/2017"}, {"body": "error caused cloudflare html minification problem documentation problem solution", "d": "6/2017"}, {"body": "seem found another instance warning triggered null reference inside reacttoolbox dialog similar reactportal child method built testcase minimal would like nt able recreate bug couple hours jsfiddle without reacttoolbox test case", "d": "6/2017"}, {"body": "point unlikely spend time fixing working rewrite include addon said find easy fix please send pr", "d": "6/2017"}, {"body": "js reactcomponentprototypehandleevent function known reactcomponent events var map click onclick change onchange fallback helper function capitalize type return typecharat touppercase typeslice one handleevent rule return function handleevent e var method map etype capitalize etype method thisprops thispropsmethod mentioned sminutoli knows pattern passes nt use used till today trade slightly slower dispatch vs extremely improved memory consumption thousand components wo nt need instances boundmethods extra references benchmarked create simple test check bound arrow actual memory consumption vs classes based inherited react involved hey let developers decide looks like winwin everyone", "d": "6/2017"}, {"body": "talking oop creativity", "d": "6/2017"}, {"body": "sure thing sminutoli yet sebmarkbage closed year ago let try convince easily benchmarkable best way go", "d": "6/2017"}, {"body": "fixed released today", "d": "6/2017"}, {"body": "issue function example show error", "d": "6/2017"}, {"body": "littlee short mean instead", "d": "6/2017"}, {"body": "kopahead instead checked thisstateismustfill checked thisstateismustfill nt think related said", "d": "6/2017"}, {"body": "clippath attribute recognized react use clippath attribute name works", "d": "6/2017"}, {"body": "fixed released today please reopen open new issue referencing one still issue", "d": "6/2017"}, {"body": "issue around tag spa gaearon created minimal project reproduce issue chrome version thanks file structure appjsx js appjsx import react component react import reactdom reactdom class app extends component render return reactdomrender documentgetelementbyid container js webpackconfjs const path require path const webpack require webpack const extracttextplugin require extracttextwebpackplugin const htmlwebpackplugin require htmlwebpackplugin moduleexports context pathresolve dirname app entry app appjsx output filename js name js chunkfilename js id js path pathresolve dirname public module rules test cssscss use extracttextpluginextract use loader cssloader loader sassloader test jsjsx use loader babelloader exclude nodemodules test pngjpgsvg use loader fileloader nameimages name ext plugins new extracttextplugin css name css new webpackhotmodulereplacementplugin new htmlwebpackplugin template indexejs json presets react plugins transformobjectrestspread json name example version description img src issue scripts start webpackdevserver build webpack devdependencies babelcore babelloader babelplugintransformobjectrestspread babelpresetreact cssloader extracttextwebpackplugin fileloader htmlwebpackplugin react reactdom scssloader webpack webpackdevserver dependencies html img src issue", "d": "6/2017"}, {"body": "also confirmed doctyper findings rootnodeparentnode null similar workaround reactdomlibreacteventlistnerjs function findparent added following bypass error beginning learn react sure exactly happening unmounted node looking parent", "d": "6/2017"}, {"body": "nt pinpointed locomotif single change either creates eliminates failure attribute image tag minimum viable example rather small almost cra barebones one clones snapshot runs see error fiddle component image see get weird", "d": "6/2017"}, {"body": "appears nt guaranteed mounted dom calling within consequently sniffing yields missing", "d": "6/2017"}, {"body": "locomotif problem dealing remove", "d": "6/2017"}, {"body": "alexandernanberg makes absolute sense thanks trick recently added nt occur remove line code noticed console message appearing twice briefly assumed something loaded twice disregarded thought hot loader added image node couple days issue exposed thanks million nt think would thought look since indexejs radar also read johndugan post guess must missed", "d": "6/2017"}, {"body": "fyi edge ship passive event listeners last major browsers nt support yet", "d": "6/2017"}, {"body": "note chrome passivebydefault intervention applies event without explicit still force synchronous scrolling mousewheel twofinger trackpad scrolling wrote blog post subtleties also edge team intent implement intervention ship passive event listeners still want explicitly specify", "d": "6/2017"}, {"body": "trying css custom prop nt get applied", "d": "6/2017"}, {"body": "nt released yet", "d": "6/2017"}, {"body": "april pr merged april", "d": "6/2017"}, {"body": "fezvrasta forked pen still seeing style applied div", "d": "6/2017"}, {"body": "thejase see comment released april merge done days later", "d": "6/2017"}, {"body": "pixelass ah understand sorry nt thinking straight nonetheless correct selector previous fork would never see css property value anyway", "d": "6/2017"}, {"body": "wait next release right", "d": "6/2017"}, {"body": "release candidate npm final", "d": "6/2017"}, {"body": "thanks spicyj", "d": "6/2017"}, {"body": "trying use variables boolean way change things css ideal way would set workaround nt work either sets open instead manage jsx way disable units inline styles", "d": "6/2017"}, {"body": "think pass string", "d": "6/2017"}, {"body": "fezvrasta nt work get warning think wait", "d": "6/2017"}, {"body": "jump back since dealt p thanks felipeochoa table experience almost never want either native focus events tho react offer instead want focus events bubble encapsulated termed suspect tho point may unlikely would require new polyfill", "d": "6/2017"}, {"body": "add ca nt actually adapt mouseenterleave logic since nt set focusblur events", "d": "6/2017"}, {"body": "way print measurement dom like simple text nt access console", "d": "6/2017"}, {"body": "jimfb repro could please take look", "d": "6/2017"}, {"body": "unfortunately finddomnode throw called first clientside render", "d": "6/2017"}, {"body": "surprising functional component default", "d": "6/2017"}, {"body": "load error events fixes", "d": "6/2017"}, {"body": "mdogadailo nt seem affected load error events", "d": "6/2017"}, {"body": "zabojad yes ticket tag element like", "d": "6/2017"}, {"body": "like starter kit native modules able avoid bundling small projects example see react without webpack", "d": "6/2017"}, {"body": "suggestion small improvement istarkov code const makecancelable promise gt let hascanceled false promisethen val gt hascanceled reject iscanceled true resolve val catch error gt hascanceled reject iscanceled true reject error new promise redundant", "d": "6/2017"}, {"body": "sbenda paste code thanks", "d": "6/2017"}, {"body": "please check docs option", "d": "6/2017"}, {"body": "reparent important reactnative", "d": "6/2017"}, {"body": "add fuel fire trying workaround issue discovered current version ios safari nt trigger event using japanese hiragana ime think intentional composition menu never seems closed eyesofkids example workaround inputvalue never updated though fixes issue japanese ime", "d": "6/2017"}, {"body": "documentation nt mention way use html entities anymore solution given spicyj still works", "d": "6/2017"}, {"body": "codebases moving typescript flow think returning would useful try avoid using anymore except libraries force usage", "d": "6/2017"}, {"body": "playing around materialize select feature meteor react way fixed issue meteor handleselectchange event eventpreventdefault var test eventtargetvalue thissetstate value test render choose option option option option materialize select", "d": "6/2017"}, {"body": "tried onchange event nt fired type date", "d": "6/2017"}, {"body": "actually opposite also facing issue noitidart workaround working throws error saying valueselectnull find really useful require property also allow null values", "d": "6/2017"}, {"body": "note pr open reactdeepforceupdate update components subscribe certain context element languishing would ideal outofthebox behavior allow choosing event listeners forceupdatesubscribers pass updates tree wed may wout mertens woutmertens gmailcom wrote pavel use reactdeepforceupdate production nt often switching languages use give child reference forceupdate tree retaining state much better forcererendering whole tree magical exactly changing attribute context object default react wed may pavel lang notifications githubcom wrote hi first aware gaearon reactdeepforceupdate seems nt work production build trying solve live retranslation page including reexecuting router featurereactintl branch reactstarterkit worrying use tgriesser trick loose internal state components controlled uncontrolled inputs nt try trick expecting tricky production best resolved reactintl updated meantime may something wrong receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "likely get back another issue tracked", "d": "6/2017"}, {"body": "gaearon thank much summarising solutions issue exactly looking one question existing setting field solution recommended way eg set mounted flag asking webpack docs example handles slightly differently eg set mounted flag first line looks strange set flag says component mounted life cycle hook says component mounted", "d": "6/2017"}, {"body": "agree better place set flag", "d": "6/2017"}, {"body": "use componentwillmount thissetstate key thispropsdefaultvalue render lt defaultvalue thiskey gt", "d": "6/2017"}, {"body": "need add using framework relies bubbling events communicate children parents unfortunately since child gets called parent dispatch bubbling event point expect parent catch even change lifecycle would nice lifecycle method like componentattachedtodom something similar indicate dom node fully attached dom tree", "d": "6/2017"}, {"body": "works", "d": "6/2017"}, {"body": "riverleo interesting understood asyncawait works promise objects syntactic sugar confirm actually waiting setstate complete executing code pattern works simple case many times function calls setstate within want wait function complete setstate call example function myfunction something thissetstate would like execute setstate completes myfunctionthen end day trying find workarounds fundamental deficiency setstate right way would add promise capability", "d": "6/2017"}, {"body": "peacechen code contents final build babel js var function callee paginate return function callee context switch contextprev contextnext case contextnext return thissetstate callee json presets flow nextbabel plugins transformruntime transformflowstriptypes styledcomponents ssr true displayname false preprocess true reactintl messagesdir localemessages checked log see worked worked expected problems", "d": "6/2017"}, {"body": "riverleo wraps expression correct promise resolving state updated", "d": "6/2017"}, {"body": "riverleo agree milesj generated code shows properly waiting setstate complete app happens finish setstate quickly case cases line generated code key correct way would code around would different example would need present created promise created pr returns promise callback param provided setstate much simpler diving react callback queue modifying queue would require rearchitecting significant rewrite", "d": "6/2017"}, {"body": "wrote thoughts think wo nt supporting plausible change anytime soon reasons close issue however plan look providing better component apis components state next year consider feedback part future work thanks", "d": "6/2017"}, {"body": "also mouseenter event never triggers", "d": "6/2017"}, {"body": "nt think react implement behavior described issue reactspecific certain browsers eg chrome safari nt dispatch mouseover mouseenter event case described even using vanilla js mouse moves nt think react try iron behavior going close issue always reopen feel strongly", "d": "6/2017"}, {"body": "purecomponent", "d": "6/2017"}, {"body": "issue case error shown browser also tried activating pause exception luck app use backbone react errors inside backbone views properly logged console ones react components ideas", "d": "6/2017"}, {"body": "used api way wrap es around react code catches errors initial updates catches errors event handlerscallbacks nt require monkeypatching nt require wrap modify existing components however api going deprecated strategy wo nt work react used successfully react think useful solution error boundaries ready details", "d": "6/2017"}, {"body": "small update latest alphas react still ready wide use known issues infinite loops development implement error boundaries start playing see satisfy use case recommended way use create component like js class errorboundary extends reactcomponent state error null unstablehandleerror error info thissetstate error note send error info analytics want render thisstateerror render anything want note try render original children throw error boundary longer catch return something went wrong thisstateerrortostring return thispropschildren put anywhere protect specific components note acts catch block catches errors children nest error boundaries like nest catch blocks exact api may change", "d": "6/2017"}, {"body": "slorber error boundaries nt work latest alpha reason please create complete reproducing example", "d": "6/2017"}, {"body": "seems interesting however would allow rescuing individual components instead sub tree examples small icon throws error render whole apppage wo nt rendered imagining something like least class level could use inheritance js class safecomponent extends component catchrender err reporterror err return null class whatever extends safecomponent render throw whoops return small cosmetic detail", "d": "6/2017"}, {"body": "support individual component level randomly disappearing individual components nt great user experience however free wrap components error boundary create base class although generally nt recommend examples small icon throws error render whole apppage wo nt rendered whole apppage divide page individual sections wrap error boundary granularity", "d": "6/2017"}, {"body": "one question hmr reset error guess need store boundaries saved errors react proxy logic perhaps way bubble child force updated anyway thinking loud excited give try mon jun dan abramov notifications githubcom wrote support individual component level randomly disappearing individual components nt great user experience however free wrap components error boundary create base class although generally nt recommend receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "warrants separate discussion immediately clear hot reloading work error handling might looking hot reloading time year good time discuss ideal experience", "d": "6/2017"}, {"body": "ended implementing higher order component wrap components javascript export default function errorboundary wrappedcomponent class errorboundarycomponent extends reactcomponent state error null return errorboundarycomponent solution considerably better extending base component wrap functional components catch errors occur component wrappers selector redux", "d": "6/2017"}, {"body": "joshclowater benefit opposed using regular component gives freedom granularity", "d": "6/2017"}, {"body": "gaearon personal preference guess find slightly cleaner abstracts error handling jsx wrapping many components could noisy parse also know want component handle errors nt worry parent containers wrapping risk missing somewhere else javascript oops missed one", "d": "6/2017"}, {"body": "think problem listed doc", "d": "6/2017"}, {"body": "adding event listener manually using", "d": "6/2017"}, {"body": "nt discussion pr issue last two months pr need cc gaearon", "d": "6/2017"}, {"body": "seems reactdropzone also suffering one", "d": "6/2017"}, {"body": "used unique classnames fancy scrollmagicgsap effect deployed whole site shat lol", "d": "6/2017"}, {"body": "definitely something needed server side rendering right inject call official way would much better", "d": "6/2017"}, {"body": "syranide thanks sharing nt know", "d": "6/2017"}, {"title": "aio search issues", "body": "submitting current behavior searching work expected searched routing found style guide searched base tag seemed find every occurrence base instead locating discussion base href searched template reference variable seemed find every occurrence template trying putting value quotes found nothing expected behavior expect search results list appropriate topics especially using common key words routing expect search results handle multiword searches minimal reproduction problem instructions type aforementioned search strings motivation use case changing behavior important provide assistance customers via documentation many customers first experience documentation using search feature please tell us environment", "num": "17889", "d": "6/2017"}, {"title": "detected module reexported different package", "body": "reproduction clone error moved along reexport original location seems metadata nt seen reexport tried adding metadatajson packages effect using angularangular dependencies", "num": "17888", "d": "6/2017"}, {"title": "expressionchangedafterithasbeencheckederror nt give enough context", "body": "submitting current behavior today upgrade application see console error expressionchangedafterithasbeencheckederror expression changed checked previous value true current value false expected behavior information provided element attribute expression error applies something like error expressionchangedafterithasbeencheckederror expression changed checked previous value true current value false component motivation use case changing behavior developers understand part complex application code base causing issue please tell us environment", "num": "17887", "d": "6/2017"}, {"title": "dependency injection npm module another npm module provider exception", "body": "submitting current behavior try use party npm module npm module add application case use ngxtranslate module npm module want build get error provider service solution use translatemoduleforroot npm module create different service connected application service change language fire expected behavior able use party services npm module minimal reproduction problem instructions motivation use case changing behavior becomes difficult create npm modules rely npm modules please tell us environment", "num": "17886", "d": "6/2017"}, {"title": "controlvalueaccessor binds another controlvalueaccessor initial value gets wiped", "body": "submitting current behavior two components implementing controlvalueaccessor one binds value inner one gets undefined instead right value writevalue method value chained back clearing original data binding hopefully plunkr useful demostrating problem plunkr problem original green value thingie wiped original start bindings work correctly buttons function expected expected behavior expect data would wiped form binding minimal reproduction problem instructions motivation use case changing behavior motivation pattern created custom dropdown could bind data also notion job dropdown specific behavior wanted use jobdropdown multiple places bind data job dropdown bound value dropdown revealing bug please tell us environment", "num": "17883", "d": "6/2017"}, {"title": "messagespan contain value startcol amp endcol", "body": "submitting x bug report current behavior pr new migration tool generate json file contains old new messages includes information source files using messagespans noticed value startcol amp endcol obviously wrong see file example expected behavior endcol real number column end message minimal reproduction problem instructions use pr motivation use case changing behavior correct information please tell us environment angular version", "num": "17881", "d": "6/2017"}, {"title": "compilerclearcache compilerclearcachefor templates cleared", "body": "submitting current behavior compilerclearcache clears metadataresolver compiledtemplatecache compiledhosttemplatecache compiledngmodulecache supposed route another page templateurl requested hence template stays compilerclearcachefor possible cache cleared updated plunker reproduces problem please tell us environment based stackoverflow answer used work", "num": "17880", "d": "6/2017"}, {"title": "need oauth azure active directory authentication module", "body": "submitting need standard oauth azure active directory authentication module", "num": "17877", "d": "6/2017"}, {"title": "angular context lost authentication", "body": "submitting used azure ad authentication url authentication home page login button authenticating azure ad oauth login page canactivate guard checks using user authenticated returns true else false successful login returned back url instead home causing canactivate guard return false routes level think angular context reloaded also able get correct authentication status even successful login tried authentication without using using rest api calls still facing issue see browser console error successful authentication returning home page router file code", "num": "17876", "d": "6/2017"}, {"title": "raise error missing exports imported component use html tag selector", "body": "submitting current behavior angular raise error imported component exported module happens explicit html tag used template imported component expected behavior error raised cases minimal reproduction problem instructions missing export statement imported used explicit html tag used template error thrown stays undefined evident reason uncomment line srcmodulets properly rendered error raised change template tag angular complain unknown element ask check whether angular component motivation use case changing behavior could find reason staying undefined took long time figure missing export statement please tell us environment", "num": "17874", "d": "6/2017"}, {"title": "component private properties still accessible within template", "body": "submitting current behavior actually sure bug nt understand supposed work since offcial release angularcli aot compilations errors supposed reported correctly private component properties accessed within component template report errors correctly private properties still accessible template within ngforngif every time ca nt see pattern ngmodel event directives binding sometimes reproduce plunker think jit compilation error issued trying figure pattern expected behavior nt really know throw errors every times maybe nt understand well machanism please tell us environment", "num": "17871", "d": "6/2017"}, {"title": "routing issue resolver", "body": "hi use make use resolver routing nt work however console log resolver working fine means resolver code ok suggestions fix issue", "num": "17869", "d": "6/2017"}, {"title": "alternative deep future", "body": "x documentation issue request changelog deep combinator deprecated css spec also deprecated emulated shadow dom mode removed future would like know whether alternative future start using ways", "num": "17867", "d": "6/2017"}, {"title": "error using ngcontainer children components", "body": "submitting current behavior list tabs defined file like render list html dropdown list years year selected navigate corresponding year current tab works first navigation second time get following error error error uncaught promise typeerror read property component null routing config expected behavior expect error thrown thrown first navigation error disapears use children components instead minimal reproduction problem instructions using kendo ui angular requires specific license manage reproduce plunkr motivation use case changing behavior want load tabs dynamically wish could define route children file tabs defined nt create new tab new line router config please tell us environment angularcli node os browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others", "num": "17866", "d": "6/2017"}, {"title": "accessing remote template html net angular", "body": "application needs access templates dynamically provided net engineiis need bind data side receiving template working current behavior currently try access remote template fails access however remote templates ready access expected behavior upon hitting remote template url request receive remote template dynamic template based user privileges supplied net engine iis rest response data bound html rendering minimal reproduction problem instructions motivation use case changing behavior customer existing application production wants new application uses several templates old existing application template generation logic kept intact please tell us environment windows machines application development ram intel machines microsoft iis version microsoft visual studio net version integrated mvcnet", "num": "17865", "d": "6/2017"}, {"title": "angularcore compatible typescript activating option strictnullchecks", "body": "submitting current behavior running project depends latest typescript option strictnullchecks true compilation error occurs expected behavior add support typescript stricknullchecks minimal reproduction problem instructions update typescript devdependency version set stricknullchecks true tsconfigjson run motivation use case changing behavior please tell us environment", "num": "17863", "d": "6/2017"}, {"title": "animation errors informative", "body": "right animation fails runtime query finds elements hard pinpoint triggertransition blame", "num": "17862", "d": "6/2017"}, {"title": "ngclass removes existing class applying array contains empty slots", "body": "submitting construct class array strings middle classes empty string change class leaving classes unchanged current behavior ngclass apply correct classes removes last class array internally last class added add remove list since add class code nothing since already list error remove list removes class expected behavior ngclass apply correct classes action nothing existing classes add class following code tries add existing class removes would suggest fixing bug reverse order first remove add case bugs future ngclass toggle css classes expressed strings got stringify recorditem minimal reproduction problem instructions motivation use case changing behavior developers expect binding correct please tell us environment updated ngstyle ngclass sorry brain fart", "num": "17852", "d": "6/2017"}, {"title": "determine module directive extends another directive different package", "body": "reproduction clone run case directive extends running consumes material cdk get remove base class works add declarations another module correctly report declared two modules", "num": "17849", "d": "6/2017"}, {"title": "compiler throw error use hostlistener service", "body": "submitting current behavior allowed put hostlistener service even nt work expected behavior compiler fail least emit warning telling use hostlistener within service place nt host wo nt work minimal reproduction problem instructions motivation use case changing behavior qualityoflife improvement", "num": "17847", "d": "6/2017"}, {"title": "assign read property participants object object object", "body": "submitting current behavior follow code throws exception error typeerror assign read property participants object object object seems objects frozen dev mode expected behavior whilst follows work browser console using node var immu function idx b idx users b return var one immu name test users name test users name test users minimal reproduction problem instructions motivation use case changing behavior please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac darwin angularcli", "num": "17846", "d": "6/2017"}, {"title": "missing information routing", "body": "submitting current behavior anchor app nt display heroes awaited issue selector myapp match elements expected behavior heroes displayed minimal reproduction problem instructions motivation use case changing behavior needed change root indexhtml file tag app crash please tell us environment", "num": "17844", "d": "6/2017"}, {"title": "angular app broken ie edge", "body": "submitting current behavior angular application broken ie edge approot getting replaced get error console uncaught promise error invalid pointer error invalid pointer nrwrapper browserplatformlocationprototypereplacestate pathlocationstrategyprototypereplacestate locationprototypereplacestate anonymous function anonymous function safesubscriberprototypetryorunsub safesubscriberprototypenext subscriberprototypenext subscriberprototypenext expected behavior application run fine works perfectly fine chrome firefox minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17843", "d": "6/2017"}, {"title": "aio ajs guide image problems", "body": "sure plunker issue embedded one need double check", "num": "17842", "d": "6/2017"}, {"title": "aio logo guide missing", "body": "", "num": "17841", "d": "6/2017"}, {"title": "server side rendering half data", "body": "packagejson name maphisha version license mit angularcli scripts start ung serve lint tslint srcts test ung test webdrivermanager update standalone false gecko false protractor private true dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularclassidlepreload nguidatetimepicker typeschartjs typeschartjs chartlibrary chartjs compression corejs express nglazyloadimage rxjs tshelpers zonejs devdependencies angularcompilercli typesbodyparser typescompression typescookieparser typesexpress typesexpressservestaticcore typesjasmine typesmime typesnode typesservestatic angularrouterloader codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmaremapistanbul protractor tsloader tsnode tslint typescript universalcli component import component oninit renderer ngzone viewchild viewencapsulation changedetectorref input angularcore import router activatedroute params angularrouter import environment environmentsenvironment import windowref additionalwindowref import articlecomponent articlecomponent import metacomponent commonmetacomponent import storageservice storageservice import apiservice apiservice declare var declare var sliderhome declare var ga component encapsulation viewencapsulationnone providers apiservice selector templateurl viewsviewdesktopbodyarticlehtml styleurls csscommoncss cssresetcss cssarticledetailcss csscoachmarkscss export class articlescomponent implements oninit viewchild metacomponent private metacomp metacomponent viewchild articlecomponent private articlecomp articlecomponent articlearr constructor private storage storageservice private apiservice apiservice private zone ngzone private router router private activatedroute activatedroute private winref windowref private renderer renderer private ref changedetectorref thisarticlecompgetslug thismetacompsetmetadata updatearticleparent arr articlearr arr child component import component oninit renderer viewchild viewencapsulation output eventemitter angularcore import router activatedroute params angularrouter import apiservice apiservice import environment environmentsenvironment import storageservice storageservice import windowref additionalwindowref import commentcomponent commentcommentcomponent import articlelistcomponent articlelistcomponent declare var declare var getarticlestyle declare var coach import metacomponent commonmetacomponent import adcomponent commonadcomponent component selector template providers apiservice export class articlecomponent implements oninit viewchild metacomponent private metacomp metacomponent getslug get data callfunc cutomise thisarticlearr dasdsa dsadsad thisupdatearticleemit thisarticlearr callfunc something thisarticlearr abc abc thisupdatearticleemit thisarticlearr cutomise something thisupdatearticleemit thisarticlearr declare var ga declare var gascript declare var userprint import component oninit viewencapsulation angularcore import environment environmentsenvironment import meta metadefinition metaservice gt code import router activatedroute navigationend angularrouter component encapsulation viewencapsulationnone styles template providers meta selector export class metacomponent implements oninit metatags type string title string description string keyword string image string environment call function metacomponent whole server side rendering routeroutlet stop call articlecomponent function half data render view source note edited vicb hide unrelevant info", "num": "17840", "d": "6/2017"}, {"title": "aio di di action", "body": "complicates searching title result appear", "num": "17839", "d": "6/2017"}, {"title": "aio ngmodules plunker wo nt navigate crisis center heroes", "body": "reason throw big error", "num": "17838", "d": "6/2017"}, {"title": "server side rendering half data", "body": "packagejson name new app version license mit angularcli scripts start ung serve lint tslint srcts test ung test webdrivermanager update standalone false gecko false protractor private true dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularclassidlepreload nguidatetimepicker typeschartjs typeschartjs chartlibrary chartjs compression corejs express nglazyloadimage rxjs tshelpers zonejs devdependencies angularcompilercli typesbodyparser typescompression typescookieparser typesexpress typesexpressservestaticcore typesjasmine typesmime typesnode typesservestatic angularrouterloader codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmaremapistanbul protractor tsloader tsnode tslint typescript universalcli component b c c b viewchild b get data various function request emits c contains function call service external js functions update meta tags view page b c functions call data shown view source b functions called half data visible", "num": "17837", "d": "6/2017"}, {"title": "docs aio forms validation nt external live example", "body": "reason embedded plunker", "num": "17836", "d": "6/2017"}, {"title": "way found add modules runtime app module dependencies feasible", "body": "hi want add module based event angular application dynamically feasible angular application regards vasuneet", "num": "17835", "d": "6/2017"}, {"title": "aio roboto font installed machines nt preinstalled", "body": "submitting current behavior font light hard read expected behavior font normal weight minimal reproduction problem instructions visit page eg motivation use case changing behavior ease reading straining readers eyes please tell us environment chromium latest also cross checked firefoxedge computers browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx x safari desktop version xx safari ios version xx ie version xx x edge version xx", "num": "17834", "d": "6/2017"}, {"title": "enableprodmode exception application crash nt redisplay data go another router", "body": "hi use angular need customize errorhandler appmodulets injectable class myerrorhandler implements errorhandler handleerror error consoleerror exception errormessage consoleerror exception errorstack injectable export class myerrorhandler private appref abouterrorhome another page data page nt show template show template without data resolve", "num": "17833", "d": "6/2017"}, {"title": "develop jit along aot relative paths working", "body": "submitting current behavior originally posted following issue upgraded angular resolve problem relative paths answer relative paths technical restriction jit convert project support aot agreed would good keep times went along hard work finally got working relative paths indeed work across application hallelujah according aot compiler guide develop jit along aot ideal thought unfortunately triggers issues relative paths jit expected behavior able develop jit along aot paths components resolved successfully compiler minimal reproduction problem instructions follow steps unfortunately produce plunker due complexity app sorry might give go later still none wiser example using library components imported private repository nodemodules one components navcomponentts following code gets following error running jit mode navcomponenthtml failed load resource server responded status found understand role systemjsangularloader help handle convert absolute paths nt seem working imported modules work fine aot mode though motivation use case changing behavior seems confusion jitaot use relative paths guides suggest develop jit along aot however previous issues comments suggested relative paths supported across environments surely nt need separate files paths nt make logical sense others able jit eventually become defunct mind promise able develop jit along aot removed angular guides jit support paths aot please tell us environment", "num": "17832", "d": "6/2017"}, {"title": "special characters query parameter value url getting truncated", "body": "current behavior special characters url query parameters getting truncated example send get request url actually goes server expected behavior shouldt truncate anything provided url minimal reproduction problem instructions reproducible please see console result motivation use case changing behavior please tell us environment browser x chrome desktop version latest x firefox version latest x edge version latest", "num": "17830", "d": "6/2017"}, {"title": "enable partial change detection event", "body": "submitting current behavior event fired deeply nested child event propagates middle nested child full change detection triggered afterwards expected behavior event fired deeply nested child event propagates middle nested child partial change detection triggered afterwards starting middle nested child parentmost component event handled example user code rootcomponent root component childacomponent child component rootcomponent childbcomponent child component rootcomponent childzcomponent child component rootcomponent library code child component childacomponent fires scroll event handles event propagates additional events unknown level parent components childacomponent nt fire event rootcomponent would better performant trigger change detection childacomponent level rootcomponent level many child components perform change detection propose two changes component level enable optin tracing able query parentmost invalidated component changedetectorref tracing enabled via component factory event handler component level enable optin smart change detection automatically traces events emitted component instead triggering full change detection triggers partial one instead based tracing data minimal reproduction problem instructions na motivation use case changing behavior change detection expensive performance critical events virtual scrolling handling events contained components sideeffects occurred optin behavior thus nonbreaking change problem relying manual change detection performance critical events first requires run outside ngzone avoid full change detection event propagates past library component outside control still want perform change detection events handled way query parentmost component invalidated call change detector additionally since event must called outside ngzone another zone must implemented handle zonepatched callbacks please tell us environment", "num": "17829", "d": "6/2017"}, {"title": "change detection fails update host bindings", "body": "submitting current behavior update component host bindings call host bindings remain expected behavior update component host bindings call host bindings updated minimal reproduction problem instructions notice text changed match background color untracked event changes properties manual call change detector processed text changed background color remains motivation use case changing behavior developer expects referencesbindings inside component updated manual detect changes point manual detect changes managing performance component updating host bindings parent component call must also process checks parent component well note injecting workaround child components performance hit also impossible root component provider changedetectorref error displayed please tell us environment", "num": "17828", "d": "6/2017"}, {"title": "feature better class binding syntax", "body": "submitting current behavior bind classes elements use slightly better scenarios expected behavior lookingpleasing binding exclusive classes common work thought special syntax single braces believe used currently assume nt conflict anything html alternative syntaxes maybe motivation use case changing behavior find cumbersome way write class binding angular pollutes element instantaneously pop class binding compared suggest deserves special syntax see productive whilst working alongside css frameworks", "num": "17827", "d": "6/2017"}, {"title": "docs aio template reference var scope guidance nt match framework actual behaviour", "body": "submitting current behavior according docs refer template reference variable anywhere template however appears though template reference variable ca nt accessed outside embedded view expected behaviour docs updated reflect expected behavior documentation reflects real behaviour minimal reproduction problem instructions see plunker template reference variable always see also motivation use case changing behavior think transparent use users deal template reference variable please tell us environment", "num": "17826", "d": "6/2017"}, {"title": "distinguish coremodule appmodule drop", "body": "submitting current behavior distinction roles appmodule coremodule unclear motivation use case changing behavior roles identical provision appwide singletons ought two coremodule eliminated confusing roles different distinction made perfectly clear cursory survey gitter seems coremodule serves keep appmodule getting big purpose stated angular docs fact intended unique purpose called something like keepappmodulefromgettingtoobigmodule coremodule implies constituent classes serve core role different role appmodule confusing two things seemingly serve purpose discernible advantages many respectable example applications coremodule", "num": "17825", "d": "6/2017"}, {"title": "error provider renderer", "body": "submitting current behavior believe recommended service injection onto component get errors compiler error console click button said component see stackoverflow post expected behavior refactor service works migration minimal reproduction problem instructions motivation use case changing behavior similar recommended practice original renderer could injected like shown please tell us environment", "num": "17824", "d": "6/2017"}, {"title": "router add support setting multiple values optional route parameter", "body": "submitting current behavior using routerlink routernavigate set query parameter array contain multiple values serialized set optional route parameter array contain multiple values expected behavior able use way query parameters minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17823", "d": "6/2017"}, {"title": "angular animation issue", "body": "submitting current behavior pages animations get error typeerror object nt support property method contains stack trace contains noopanimationdriverprototypecontainselement transitionanimationengineprototypebalancenamespacelist transitionanimationengineprototypecreatenamespace transitionanimationengineprototyperegister animationengineprototyperegister animationrendererfactoryprototypecreaterenderer createcomponentview callwithdebugcontext expected behavior able animate without throwing errors minimal reproduction problem instructions please tell us environment", "num": "17822", "d": "6/2017"}, {"title": "retrieve records initially service rest", "body": "hi team could please let know retrieve first records service rest records service datatable loads records datatable service taking long time retrieve recordsso need records retrieved first remaining records code calls service headers headers map res response gt resjson catch thishandleerror let know implement using observables thanks", "num": "17821", "d": "6/2017"}, {"title": "make easier run ng test quickstart app", "body": "submitting current behavior setup process taken quick start project starting try testing extremely painful noted findings able get ng test work plus karma using lts version node headache expected behavior introduce ng init perhaps minimal reproduction problem instructions motivation use case changing behavior make easy convert npm based project ng one karma tests run quickstart way user least follow along website instructions please tell us environment run node one two way via nvm currently using order facilitate karma angularcli node os darwin angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice optangularprojectsquickstart angular version angularcore browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others", "num": "17820", "d": "6/2017"}, {"title": "documentation change detection view composition", "body": "submitting angular forbids changes view data composed please elaborate actually works also related testing template driven forms since directives create form controlsgroups asynchronously others please refer stackoverflow question", "num": "17815", "d": "6/2017"}, {"title": "aot gendir compiler option ca nt set aot", "body": "submitting current behavior setting aot compiler option makes compiler break expected behavior able compile resolve paths app code correctly ie paths mapped directory tsconfig another option need minimal reproduction problem instructions gist relevant code aot documentation create file folder create minimal module minimal component test app compile create two files one aot one jit like docs specify make sure put set compileroption nt run rxjs error jit compile output aot compile set packagejson add scripts compiler jit compile aot something like fine error use case full stack ie multi project project layout typical front end code folder several directories main server application serves ideally rollup bundles project would available browser script tags via mind makes sense put output sibling bundles folder environment related issues", "num": "17814", "d": "6/2017"}, {"title": "eventpreventdefault sporadic behaviour", "body": "submitting current behavior hostlistener app component provides event example mousedown false returned even stoppropagation preventdefault event prevented first time true returned event handler next time false returned event prevented instead default behavior executed every time expected behavior every time event prevented false respective functions default behavior occur minimal reproduction problem instructions ui toggle control thissharedserviceeditoractive upon true returns false event handler prevent default behavior motivation use case changing behavior use case preventing app navigating instead use select individual elements page like editor somekind please tell us environment", "num": "17813", "d": "6/2017"}, {"title": "getting error implemented platformwebworker http used together", "body": "submitting current behavior receiving error message error implemented expected behavior api return results minimal reproduction problem instructions create webworker following example create service inject app component use following code import injectable angularcore import headers http angular import observable rxjsobservable injectable export class productlistservice private headers new headers contenttype applicationjson call app component see error implemented error message browser details found stackoverflow question motivation use case changing behavior please tell us environment", "num": "17812", "d": "6/2017"}, {"title": "aio structural directives warning regarding templates", "body": "", "num": "17810", "d": "6/2017"}, {"title": "two way binding query params", "body": "bind query parameters ways route changes queryparams get reread works like typescript import activatedroute params router angularrouter export class searchcomponent implements oninit someproperty string constructor private route activatedroute thisroutequeryparamssubscribe params gt thissomeproperty params somequeryparam update url thissomeproperty gets updated variable value changes url get updated idea done example want query parameter somequeryparam get updated change thissomeproperty", "num": "17809", "d": "6/2017"}, {"title": "aio lifecycle hooks page bad image position", "body": "extra live example link far away top", "num": "17808", "d": "6/2017"}, {"title": "formcontrol reflect new disabled value", "body": "submitting current behavior setting new instance directive disabled propertyattribute control dom element update newest value expected behavior setting new instance directive disabled propertyattribute control dom element reflect newest value minimal reproduction problem instructions please tell us environment", "num": "17806", "d": "6/2017"}, {"title": "activatedrouteparamsflatmap working properly", "body": "submitting current behavior post displayed ngswitchcase templateposts true navigate part website log always logs navigation ngswitchcase templateposts false postscomponent thisactiveredrouteparamsflatmap always executed pss navigation gt click button changing url browser works normally templatecomponenthtml postcomponentts", "num": "17805", "d": "6/2017"}, {"title": "nodemodules angularanimationsbrowser exported member \u0275domanimationengine", "body": "submitting ionic framework ionic app scripts angular core angular compiler cli node os platform windows navigator platform user agent windows nt khtml like gecko export declare function instantiatesupportedanimationdriver noopanimationdriver export declare function instantiatedefaultstylenormalizer webanimationsstylenormalizer", "num": "17804", "d": "6/2017"}, {"title": "strange behavior aheadoftime compilation configure rootdirs", "body": "submitting current behavior error occurs compiling project aot tsconfigjson contains rootdirs expected behavior compilation error occur especially compiling angular internal modules angularcore minimal reproduction problem instructions simplified project containing files demonstrate tsconfigjson appmaints appmodulets use compile project otherwise removing rootdirs tsconfigjs compilation fine motivation use case changing behavior please tell us environment", "num": "17803", "d": "6/2017"}, {"title": "angular animation transition working expected", "body": "using latest angular version tried demo plunker following animation tutorial animate seen animate working expected codes seen working video tutorial sure version angular using plunker known bug missing something", "num": "17802", "d": "6/2017"}, {"title": "rxjs angular error", "body": "submitting current behavior done anything used version working updated angular version systems broken expected behavior error minimal reproduction problem instructions current motivation use case changing behavior updating please tell us environment linux mint latest node latest angular version xyz browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others warning nodemodules angularcore critical dependency request dependency expression error atloader class subject incorrectly extends base class observable types property lift incompatible type operator operator gt observable assignable type operator operator gt observable type observable assignable type observable type assignable type r error atloader class websocketsubject incorrectly extends base class anonymoussubject types property lift incompatible type operator operator gt websocketsubject assignable type operator operator gt observable type websocketsubject assignable type observable types property operator incompatible type operator assignable type operator type r assignable type", "num": "17800", "d": "6/2017"}, {"title": "numbers selecticu fail compile template parse error", "body": "submitting current behavior given code app compiles correctly changing number fails template parse error unexpected character eof unescaped template use escape error ng thememodulethemecomponenthtml invalid icu message missing select start gender select error male f female select end ng thememodulethemecomponenthtml invalid icu message missing error ng thememodulethemecomponenthtml expected behavior handle numbers strings display correctly minimal reproduction problem instructions drop example working please tell us environment", "num": "17799", "d": "6/2017"}, {"title": "aio brand color nt comply accessibility needs", "body": "using blue everywhere page header links accesible contrast wise doc viewer background fafafa", "num": "17797", "d": "6/2017"}, {"title": "amazon silk browser amazon fire tablets", "body": "submitting current behavior using amazon silk browser amazon fire tablet angular operate well html shown interactions serverside api respond expected behavior able interact forms shown receive success message data submitted received current behaviour amazon silk tablet form hangs message object progressevent shown instead success message minimal reproduction problem instructions example application used application running launched tablet successfully interact forms forms process successful endresult instead hang motivation use case changing behavior enable angular applications require login form input work amazon fire tablet family please tell us environment mongo db npm node windows pro server amazon fire inch tablet os version android kffowi amazon silk browser ver client", "num": "17796", "d": "6/2017"}, {"title": "docs aio misspelling root folder table entry quickstart page", "body": "submitting current behavior table heading root folder purpose entry includes sentence file set several defaults also configure files included project build expected behavior purpose entry sentence read file set several defaults also configure files included project built structure sentence changed way make build work minimal reproduction problem instructions go scroll root folder heading view misspelling table heading row purpose column motivation use case changing behavior correct spelling entry please tell us environment production hitting website directly", "num": "17795", "d": "6/2017"}, {"title": "download version github branches", "body": "submitting current behavior link download zip file setup probably relates end game want download run gradually add code nothing jives furthermore cli project adds confusion see comment additionally milestone wrap nt even included import browseranimationsmodule angularplatformbrowseranimations appmodulets tabbed sources imports browseranimationsmodule folder structure tabbed sources makes reference animationsts milestone completely lost plot none source download syncs anything appmodulests zipped download extra imports import browseranimationsmodule angularplatformbrowseranimations import router angularrouter import composemessagecomponent composemessagecomponent import loginroutingmodule loginroutingmodule import logincomponent logincomponent website makes reference import adminmodule adminadminmodule never used zipped download later milestone appmodulets closely resembles zip adminmodule actually top search web page adminmodule realise lazy loaded via anything makes case needing versions check git able diff loadchildren appadminadminmodule adminmodule missed vital bit info first read thru additionally sure deliberate mistake setting session id ever appears url gone admin page attempting login expected behavior several points throughout code pull code git repo manually add code appropriate starting point able follow along better cement understanding rather reading milestone corrected appmodulests tabs also add animationsts tab amp source folders minimal reproduction problem instructions try downloading zip find appmodulets import routermodule routes angularrouter motivation use case changing behavior make code along better understand rather dry reading exercise please tell us environment angularcli node os darwin angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angulartscwrapped angularupgrade angularcli", "num": "17794", "d": "6/2017"}, {"title": "disabling form controls leads changedafterchecked errors", "body": "submitting current behavior mycomponent input property output property users sometimes want disable component event handled setting component property rightfully causes child input element emit event called changes binding causing expressionchangedafterithasbeencheckederror happens binding used expected behavior expressionchangedafterithasbeencheckederror thrown minimal reproduction problem instructions steps reproduce focus input element change text press enter demo motivation use case changing behavior ideally using binding break scenario otherwise working bindings using timeouts manual change detection plausible workarounds outstanding issue please tell us environment", "num": "17793", "d": "6/2017"}, {"title": "parallel asynchronous non blocking routing", "body": "application page category buttons basically button click pull list items category page shown api fetched data available designed angular app routes resolve api calls block entire page spinner page loads migrating application functionality angular user clicks one category response delayed may click category navigates back would expecting data loaded previously clicked category angular cancels route due navigation id match current route click planet people concurrently observe one section loads section nt load data inspect see navigationcancel event thrown", "num": "17791", "d": "6/2017"}, {"title": "security error angular application routing using browser authentication url", "body": "submitting current behavior running problem angular application using url browser authentication credentials load url without credentials works expected trigger url format different page sections loading withe errors thrown console exception uncaught promise securityerror operation insecure currently checking firefox version debugged issue appears due failure routing mechanism authentication credentials used followed router event tracking suggested detect route change angular navigationstart routesrecognized events triggered expected correct resolution routes navigationerror triggered error mentioned securityerror operation insecure shall address known issues address routing using authentication credentials expected behavior throw security error securityerror operation insecure routing work basic http authentication embedded url minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17789", "d": "6/2017"}, {"title": "dynamic templateurl", "body": "possibility get variable templateurl iam creating hybrid application application browser want change html file submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17788", "d": "6/2017"}, {"title": "angular animations ie working properly", "body": "submitting current behavior transform animation nothing expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17787", "d": "6/2017"}, {"title": "please guide debug angular app", "body": "use vscode want fix one big problem app reason fix debug code find random code stackoverflow debug angular vscode working nt debug anything launchjson version configurations name launch chrome localhost sourcemaps type chrome request launch url sourcemaps true diagnosticlogging true webroot workspaceroot userdatadir workspaceroot vscodechrome name attach chrome sourcemaps type chrome request attach port sourcemaps true diagnosticlogging true webroot workspaceroot debug console error processing restart typeerror read property page undefined chromedebugadapterrestart c objectdispatchrequest c objectprotocolserverhandledata c socket c emitone socketemit readableaddchunk socketreadablepush pipeonread terminated got disconnect request killing chrome process pid taskkill f pid", "num": "17786", "d": "6/2017"}, {"title": "usage injectiontoken shared module", "body": "hi would like ask feed interface injection shared module shared module published npm referenced real app npm example component module component receives instance interface injection context interface would like export component module shared module use real angular app angular app appmodulets import module imports icecalendarmodule declare token declare providers iceruntimecontext available shared module received error saying provider context question configure icecalendarmodule inject token iceruntimecontext external app", "num": "17784", "d": "6/2017"}, {"title": "angular version animations broken nt specify unit", "body": "x regression behavior used work stopped working new release current behavior recently updated project angular suddenly animation stopped working attempts discovered change following code working nt know happening version worked problem documented anywhere wanted spare someone else trouble", "num": "17783", "d": "6/2017"}, {"title": "upload files amazon aws", "body": "find documentation uploading files amazon aws using angulr", "num": "17781", "d": "6/2017"}, {"title": "destroyed view reattached view container", "body": "submitting current behavior destroyed view attached view container expected behavior thought view destroyed state used anymore minimal reproduction problem instructions plunker relevant code export class app viewchild vc read viewcontainerref vc name string constructor private resolver componentfactoryresolver thisname ngoninit const factory thisresolverresolvecomponentfactory acomponent const ref thisvccreatecomponent factory", "num": "17780", "d": "6/2017"}, {"title": "missing documentation use webworker aot", "body": "nt use webworkers bootstrap application like without aot aot assumed must something similar webworkers understand always bootstrap application script worker loader file bootstrap app like compiled expecting something along lines nt find anything like", "num": "17779", "d": "6/2017"}, {"title": "queryparamshandling documentation", "body": "submitting documentation issue request current behavior useful documentation queryparamshandling single line use case navigationextras gives detail regarding parameters available use far tell reference documentation query queryparamshandling top level angular documentation yields nil results expected behavior option documented able find references option searching documentation", "num": "17778", "d": "6/2017"}, {"title": "removing npm postinstall circle config breaks linting", "body": "commit removed appears failure running get following logs removing linting step started failing sync shrinkwrap added back avoid error loop back confirm actually want note caching installed version also running meaning wo nt caching version actually works linting", "num": "17776", "d": "6/2017"}, {"title": "change detection triggered observable whose values emitted errorhandler", "body": "submitting current behavior component change detection triggered connecting asyncpipe rxjs observable whose values emitted asynchronously custom errorhandler expected behavior component change detection triggered component updated value emitted observable minimal reproduction problem instructions see plunker open console see debug log click async error button make http call results error look console tells us error correctly catch error handler tells us component listening observable correctly receive error updated oups written dom click clic perform user action trigger change detection button perfom simple user interaction trigger change detection updated oups written dom motivation use case changing behavior trying detect backend api nt reachable emit http error custom error handler listen kind error emit error inside observable global service popup component listening observable display error occurs please tell us environment", "num": "17772", "d": "6/2017"}, {"title": "testbedcreatecomponent error testbedcompilecomponents pending", "body": "seen several people inside outside google writing unit tests use immediately without waiting latter resolve often silently work someday fail blue something seemingly unrelated changed throw informative error occurs something happen angular technically breaking change tests pass today wrong still succeed", "num": "17770", "d": "6/2017"}, {"title": "viewchild annotated field stays undefined certain circumstances", "body": "submitting bug mistake feel free help stackoverflow current behavior annotated field stays certain circumstances parent component type implements abstract base class type three abstract fields component type annotates field types turn also extends uses different template selector fields type get propery initialized component type field type stays undefined expected behavior field type minimal reproduction problem instructions open browser debug mode see console output click drives tab console print corresponds component mentioned field print executed please tell us environment browser x chrome desktop version x firefox version x edge version", "num": "17769", "d": "6/2017"}, {"title": "typeerror set property prototype undefined typescript updated", "body": "typescript updated angular version typescript version", "num": "17768", "d": "6/2017"}, {"title": "language service fail hard component used entry component", "body": "submitting current behavior language service meets component custom decorator fails stack expected behavior ls report warning fail minimal reproduction problem instructions check repo decorator motivation use case changing behavior ability use ls custom component decorators please tell us environment", "num": "17767", "d": "6/2017"}, {"title": "feature directive support styles styleurls properties", "body": "submitting current behavior currently requires custom styles deal inclusion styles accept maybe expected behavior accept decorator motivation use case changing behavior", "num": "17766", "d": "6/2017"}, {"title": "aio codeexample inside callout media queries", "body": "", "num": "17765", "d": "6/2017"}, {"title": "aot jit compiled external files", "body": "please help use mymodule compiled aot jitcompiler added customdecorators mycomponents compiled external files reproduce myrepositary aotandjitl failure ng serve aottrue complete success ng serve aotfalse use aot jit angularcli", "num": "17764", "d": "6/2017"}, {"title": "search documentation", "body": "thanks separating old new documentation really helpful unfortunately search field documentation work properly pressing enter trigger search browser thanks fixing", "num": "17763", "d": "6/2017"}, {"title": "aot compilation error", "body": "project build successfully aot compilation failed", "num": "17762", "d": "6/2017"}, {"title": "universal dead", "body": "", "num": "17761", "d": "6/2017"}, {"title": "router link click function", "body": "requirement requirement want tabs click send tab display icon beside tab also click second tab generate click function click first tab hide icon nt know start requirement first routes implemented router link thanks praveen", "num": "17759", "d": "6/2017"}, {"title": "min attribute input type number working", "body": "submitting current behavior using angular attribute html element type number working angular browser sees correctly stops arrows allowing go minimum angular still considers valid manually type number min expected behavior angular consider element invalid rule violated minimal reproduction problem instructions plunker button become disabled number entered set work change intended behaviour occurs motivation use case changing behavior support added form validators please tell us environment", "num": "17758", "d": "6/2017"}, {"title": "producing custom elements", "body": "submitting current behavior ca nt produce custom elements angular components box however downgrade angular components angulajs components expected behavior easily produce custom element angular component minimal reproduction problem instructions proof work code promote custom element appmodulets motivation use case changing behavior nt plan organisation use angular apps technologies custom elements used outside angular would prefer use angular asked produce standard webcomponents reddit told wise person inspired angular bridge ended proof work like start conversation get official comment whether outputting custom elements would supported future whether implementation correct albeit incomplete thanks", "num": "17757", "d": "6/2017"}, {"title": "aio erroneous dgeni missing example file error", "body": "submitting current behavior reports wrong two counts file exists location purported error line importantly dgeni fails generate codesnippet file note one boilerplate files would error boilerplate task neglected case get error experiment copied adjusted path accordingly works ignoring boilerplate files reason", "num": "17753", "d": "6/2017"}, {"title": "aio tab headings wrap", "body": "right truncate often renders useless one tell file affected example see codetab", "num": "17751", "d": "6/2017"}, {"title": "ngtemplateoutletcontext nt work closure compiler", "body": "submitting current behavior context properties available ngtemplate using closure compiler expected behavior available minimal reproduction problem instructions forked official closure demo added template context test motivation use case changing behavior working option closure compiler pass context widely used inconvenient nt allow use pipes etc please tell us environment", "num": "17750", "d": "6/2017"}, {"title": "wrong source file name srcappappcomponenthtml gt appcomponentts", "body": "submitting current behavior documentation refers srcappappcomponenthtml expected behavior point still inlined selector appcomponentts minimal reproduction problem instructions motivation use case changing behavior clarification appropriate source file modify point coding please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others nothing", "num": "17749", "d": "6/2017"}, {"title": "browseranimationsmodule hmr causes addition app instance code modification", "body": "submitting current behavior using fresh clone angularstarter develop using hmr works fine npm run server dev hmr import browseranimationsmodule appmodulets every time modify code save ctrls another application instance added browser beneath previous instance nt matter code modified lazy module actually use animation issues application instance added time save code causes application instances accumulate make changes code rebuild time takes longer instances added looks like rebuilds made instances something like code changes browser refreshes save behavior starts vertical scrollbar shows page height accumulation instances increased upon save expected behavior saving modified code add another application instance minimal reproduction problem instructions clone repo npm install run npm run server dev hmr app show fine import browseranimationsmodule appmodulets import browseranimationsmodule angularplatformbrowseranimations imports browseranimationsmodule modify code save example change title homecomponenthtml content content modified application displayed another application shown beneath motivation use case changing behavior rebuild time takes longer longer modify code defeats purpose hmr display incorrect please tell us environment notes wondering repo correct place submit issue submitted hmr repo thinking think correct place hmr treats modules equally since modules handled correctly hmr cause bug probably browseranimationsmodule app instance added looks like code modification docs mentions removing browsermodule browseranimationsmodule used gave compile errors json pipe json removed use pipe relevant lines problem still occurs afterwards tried demonstrate plnkr complicated insert hmr code images first image shows app code modification second image shows browser screen title modified title changed content content seen screen another app instance added bottom old title scrollbar shows accumulated height", "num": "17748", "d": "6/2017"}, {"title": "animation regression still", "body": "submitting regression current behavior one animation nt appear difficult explain better see plunker provided see blue red block coming grey one route change supposed go backward next route change disappear explainations plunker expected behavior animation display angular minimal reproduction problem instructions see plunker change version higher see difference animations motivation use case changing behavior make work please tell us environment maybe something issue regressions appeared time apparently thanks help nice day", "num": "17746", "d": "6/2017"}, {"title": "docsaio bug linkreactiveforms guide guidereactiveforms", "body": "submitting current behavior given component typescript code component template html hero detail formcontrol name angular complains nt property input interesting later template looks like html hero detail formcontrol formgroup name see first html template give error also nt match later html template expected behavior examples reactive forms guide work", "num": "17744", "d": "6/2017"}, {"title": "error throw router lazy load module secondary outlet", "body": "submitting current behavior trying implement code load module lazy loaded secondary outlet router throw error expected behavior load module secondary outlet motivation use case changing behavior implement navigate dialog box please tell us environment browser x chrome desktop version xx tooling issues node version platform linux", "num": "17743", "d": "6/2017"}, {"title": "angular route fails added parameter hyphen", "body": "using angular use hyphen parameters instead slash route work expected route expecting receive values separate params receiving also tried escape hyphen also work", "num": "17742", "d": "6/2017"}, {"title": "aio prefix webpage title", "body": "looks like string value showing api title api pages open look tab title", "num": "17739", "d": "6/2017"}, {"title": "listen dirtypristine state form control", "body": "posted question stackoverflow recently know custom form control marked pristine angular investigation managed get access custom form component ca nt find observable use actually listen dirtypristine state form control providing hooks task either possible watch dirtypristine state form control somehow must observable", "num": "17736", "d": "6/2017"}, {"title": "docs quickstart screenshot date", "body": "submitting current behavior quickstart nt correspond output latest cli says app greets message app works image box cli longer generates app works expected behavior message box welcome app please tell us environment", "num": "17735", "d": "6/2017"}, {"title": "aio consider http push navigationjson first content page json", "body": "", "num": "17733", "d": "6/2017"}, {"title": "docs tab title docs browser prefixed link", "body": "submitting current behavior document title title browsertab contains link prefix expected behavior actual section title minimal reproduction problem instructions open angulario click docs tab title correct motivation use case changing behavior read docs please tell us environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "17732", "d": "6/2017"}, {"title": "unable get property isdefaultchangedetectionstrategy undefined edge", "body": "submitting current behavior upgraded angular angular get error edge browser typeerror unable get property isdefaultchangedetectionstrategy undefined null based searching files isdefaultchangedetectionstrategy appears angular core microsoft edge problems browsers expected behavior errors edge browser minimal reproduction problem instructions upgraded angular project angular command npm install angularcommon latest angularcompiler latest angularcompilercli latest angularcore latest angularforms latest angular angularplatformbrowser latest angularplatformbrowserdynamic latest angularplatformserver latest angularrouter latest angularanimations latest typescript latest save packagejson shown also upgraded libraries see cause problem upgrading zonejs corejs change anything motivation use case changing behavior please tell us environment", "num": "17730", "d": "6/2017"}, {"title": "animations breaks auto style computation", "body": "submitting current behavior upgrade angular new animation features introduced auto style computation stopped working simple animation want animate possible fails error firefox exception animation underlying value yet supported chrome exception failed execute animate element partial keyframes supported simple animation works angular think could related also one interesting thing firefox enable domanimationsapicoreenabled firefox configuration starts working work default configuration expected behavior also work higher version minimal reproduction problem instructions working sample angular broken sample angular please tell us environment", "num": "17729", "d": "6/2017"}, {"title": "aot compilation fails empty route path static routes class", "body": "submitting versions angularcli node os darwin angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli current behavior routes class holds static routes strings used routes configuration angular router links using link routes setup breaks aot compilation angular cli ts import ngmodule angularcore import routermodule routes angularrouter import routespathregistry appmodulesroutes import foocomponent componentsfoocomponent import barcomponent componentsbarcomponent const approutes routes path routespathregistrybar component barcomponent path routespathregistryfoo component foocomponent pathmatch full ngmodule imports routermoduleforroot approutes exports routermodule export class approutingmodule error illegal state symbol without members expected got filepath srcappmodulesroutespathregistryts name routespathregistry members foo error srcmaints module found error ca nt resolve gendirappappmodulengfactory src srcmaints multi srcmaints expected behavior successful aot compilation", "num": "17728", "d": "6/2017"}, {"title": "hidden element doesnt trigger events", "body": "hi trigger event hidden elements tried kind line codes cant fire event element hidden display none someone help eg import controlvalueaccessor ngvalueaccessor angularforms import directive elementref renderer afterviewinit oninit output input eventemitter forwardref simplechanges hostlistener angularcore import choices choicesjs import jquery directive selector choices providers provide ngvalueaccessor useexisting forwardref gt choicesdirective multi true export class choicesdirective implements oninit afterviewinit controlvalueaccessor public choiceele public selected public choices choices constructor private ele elementref private renderer renderer ngoninit ngafterviewinit thischoices new choices thiselenativeelement placeholdervalue search removeitembutton true duplicateitems false nochoicestext itemselecttext searchfloor shouldsort false callbackonchange thiscallbackonchangebind ngonchanges changes simplechanges thischoicesconfig return thischoicessetchoices thischoicesconfig id label true hostlistener click event onclick thischoicestoggledropdown private callbackonchange thispropagatechange thischoiceelegetvalue thisonchangeemit thischoiceelegetvalue", "num": "17727", "d": "6/2017"}, {"title": "minified code breaks extending base class optional parameters calling super", "body": "submitting current behavior javascript code minified reflector searches parameters class inherits another class nt define constructor base class optional parameters returns parameter base class expected behavior reflector look base class since derived class takes parameters needs satisfy super call minimal reproduction problem instructions important compiled javascript code needs minified trigger code occur code minified motivation use case changing behavior application breaks minify code dev environment constructor class looks like release mode gets minified looks like angular code goes wrong starts like record defined like minified version gives match method returns null calling method checks constructor parent boolean parameter ca nt resolve returns normal version give match one space method goes call normal code results want please tell us environment", "num": "17726", "d": "6/2017"}, {"title": "feat core volatile decorator allow unstable properties change detection", "body": "submitting current behavior dev mode angular additional change detection make sure properties changed first change detection example getter call would throw since returns new time key export class app private map map constructor thismap new map b c get keys return thismapkeys live example could found expected behavior since know new iterator equal old one semantics tell angular ignore subproperties change adding decorator property key export class app private map map constructor thismap new map b c volatile get keys return thismapkeys error would thrown minimal reproduction problem instructions motivation use case changing behavior would help getterstyle implementations lowlevel operations relates alternatives introduce property component metadata disable secondtime checking component level please tell us environment", "num": "17725", "d": "6/2017"}, {"title": "expressionchangedafterithasbeencheckederror ngsubmit", "body": "submitting current behavior submitting form ngsubmit transitive controls error thrown iff form submitted pressing enter text box submitting button works fine error expressionchangedafterithasbeencheckederror boolean toggles submit function nt exactly know cause expected behavior expressionchangedafterithasbeencheckederror minimal reproduction problem instructions open demo open console submit button text box motivation use case changing behavior using transitive forms allows abstract behavior forms app showing loading animation submission show notification error guard confirm prompt please tell us environment", "num": "17724", "d": "6/2017"}, {"title": "injector tree take transclusion account", "body": "submitting current behavior assume following components services provide parentcomponent selector providers template childcomponent selector providers template grandchildcomponent selector injects consider following template actual component tree parentcomponent childcomponent grandchildcomponent due transclusion template parentcomponent expectation would grandchildcomponent inject service childservice however angular reports provider childservice expected behavior component grandchildcomponent able inject service childservice resolved dom looks like minimal reproduction problem instructions open click run inspect browser console motivation use case changing behavior useful composing higher level components components already use transclusion services communicate please tell us environment", "num": "17723", "d": "6/2017"}, {"title": "problem compatibility jquery", "body": "dev html pages need resizable div found effect jquery finally bug page wan na use jquery effect page loaded firstly could used page refreshed wan na kown reason caused thanks", "num": "17722", "d": "6/2017"}, {"title": "doc quickstart new copy code nt work properly", "body": "submitting current behavior documentation copycode nt work properly copies everything one single line expected behavior keep line breaks copying code currently clickanddrag copying code minimal reproduction problem instructions please go click copy icon code paste elsewhere motivation use case changing behavior work please tell us environment", "num": "17721", "d": "6/2017"}, {"title": "docs quickstart tutorial sync", "body": "submitting current behavior angularcli tutorial sync sync angularcli expected behavior walked tutorial months ago went fine life got way back learning angular scratch time setup section walked creating angular app via cli create blank app walked tutorial blank app worked fine http section walkthrough broke bit minimal reproduction problem instructions create new app via ng motivation use case changing behavior anyone creating app via angularcli strongly discouraged took two days even get back angular facing issue tried similar thing please see related please tell us environment n thanks reading looking", "num": "17720", "d": "6/2017"}, {"title": "angular app working wpf web browser", "body": "submitting current behavior setting source property wpf web browser script error displayed line char error expected idendtifier code url name virtual directory polyfillsbundlejs expected behavior would expect angular web page display minimal reproduction problem instructions followed quickstart guide install angular cli ran ng build command visual studio code created simple wpf application contained web browser control set web browser navigate indexhtml file motivation use case changing behavior would increase foot print places angular used please tell us environment", "num": "17719", "d": "6/2017"}, {"title": "aio api docs longer link source code", "body": "submitting current behavior old api docs links source code ca nt find anymore example expected behavior add links source really valuable actually links source let something make prominent", "num": "17718", "d": "6/2017"}, {"title": "aio documentation timebased releasing deprecation policy", "body": "submitting current behavior angular releasing strategy deprecation policy reliable documentation official blog post important information people using angular expected behavior releasing deprecation policy pages angulario sorry already discussed team cc wardbell", "num": "17717", "d": "6/2017"}, {"title": "share module external lib", "body": "good evening trying share ngmodule root project componensdts export libhelloworld componentsjs exportshelloworld require lib helloworld helloworld published private repository install normally npm install use helloword component directive try use hellowordmodule module directive problems img show things error used another angular project missing go wrong", "num": "17715", "d": "6/2017"}, {"title": "allow slicepipe work iterable objects symboliterator", "body": "submitting current behavior currently slicepipe others used arrays strings see desired behavior allow slicepipe arrayoperating pipes used objects implement would also allow direct use generators consistent fact work iterable objects minimal reproduction problem instructions motivation use case changing behavior standard way iterable object ecmascript going forward already supported builtin collections like seems natural able use angular templates without use helper function convert data array first", "num": "17711", "d": "6/2017"}, {"title": "docs testing guide bad markdown link", "body": "submitting current behavior link testing section component interaction guide appears unprocessed markdown ex text expected behavior link gets processed markdown ex text minimal reproduction problem instructions motivation use case changing behavior please tell us environment google chrome version fedora", "num": "17709", "d": "6/2017"}, {"title": "npm checksum error core", "body": "submitting current behavior npm package install fails expected behavior successful package install minimal reproduction problem instructions \u03bb npm install angularcore npm warn angular requires peer angularcore none installed npm warn angularplatformbrowser requires peer angularcore none installed npm warn optional skipping optional dependency npm nodemodulesnpm npm warn enoent skipping optional dependency enoent file directory utime c local npm err code eintegrity npm err integrity checksum failed using wanted got bytes \u03bb npm install angular npm warn optional skipping optional dependency npm nodemodulesnpm npm warn enoent skipping optional dependency enoent file directory open c local npm err code eintegrity npm err integrity checksum failed using wanted got bytes \u03bb npm install angularplatformbrowser npm warn angular requires peer angularplatformbrowser none installed npm warn optional skipping optional dependency progresskendoangularpopup nodemodules progresskendoangulardropdownsnodemodules progresskendoangularpopup npm warn enoent skipping optional dependency enoent file directory utime c local filesprojectnodemodulesstaging npm warn optional skipping optional dependency nodegyp nodemodulesnpmnodemodulesnodegyp npm warn enoent skipping optional dependency enoent file directory utime c local npm warn optional skipping optional dependency npm nodemodulesnpm npm warn optional skipping optional dependency eexist file already exists mkdir c local npm warn optional skipping optional dependency file exists c local npm err code eintegrity npm err integrity checksum failed using wanted got bytes motivation use case changing behavior please tell us environment", "num": "17708", "d": "6/2017"}, {"title": "factories module names canonical", "body": "submitting current behavior name factories modules compiler canonical causing simple file comparison identity fail causing pr fixed testing module name instead file name necessary", "num": "17705", "d": "6/2017"}, {"title": "incorrect info children activatedroute", "body": "submitting current behavior tryed check childrens get incorrect info console log console also log route object invoke property getter get correct value expected behavior correct value childrens minimal reproduction problem instructions open console navigate main named outlet see outputting exists children last value row open value invoke property getter see chdilrens please tell us environment", "num": "17704", "d": "6/2017"}, {"title": "change detection picking deeply nested route component changes initial load", "body": "submitting current behavior component rendered data next change detection happens redraws correctly expected behavior component render correctly minimal reproduction problem instructions use case complex yet able reproduce simple plnkr however code working long time rendering issue appears angular suspect cause deeply nested hierarchy components child component routed lazy loaded components use changedetectionstrategyonpush call changedetectorrefmarkforcheck whenever receive new data observables first time page loaded eg browser refresh lowest level component fails render showing initial data change detection cycle occurs component rendered correctly problem reoccur even route away different components back problem occurs first initial load browser similar happens code change component call changedetectorrefdetectchanges receives new data instead changedetectorrefmarkforcheck problem goes away however nt think never angular version changes made angular zone motivation use case changing behavior component render data used please tell us environment", "num": "17700", "d": "6/2017"}, {"title": "npm bug quickstart", "body": "submitting current behavior opened quickstart tutorial problem saved work closed terminal went home night morning opened terminal run npm start amp continue working tutorial met error get exit status npm run build fails system tried removing files system starting scratch thing happened expected behavior npm start open app chrome minimal reproduction problem instructions nt know recreate issue guess download package following tutorial directions work tutorial bit save quit turn computer try tin morning motivation use case changing behavior please tell us environment", "num": "17698", "d": "6/2017"}, {"title": "aio zipper provide aot stuff", "body": "example contain aot related stuff", "num": "17695", "d": "6/2017"}, {"title": "routerlink outlets command fail closure compiler", "body": "submitting current behavior routerlink command outlets property fails error root segment matrix parameters reason componentngfactory outlets term nt get renamed string whereas renamed closure compiler everywhere else property creating url manually using routercreateurltree works fine example expected behavior routerlink outlets work minimal reproduction problem instructions took official demo added routing module router link motivation use case changing behavior please tell us environment", "num": "17691", "d": "6/2017"}, {"title": "ngskip directive skipping change detection", "body": "submitting current behavior na expected behavior angular different ways control change detection large page might remove nodes tree using ngif suggest new built directive ngskip would leave nodes would check node child nodes true would still keep html rendered page want resume change detection change value true would allow rerender large sections page giving developer control paus change detection implement change behavior sure point minimal reproduction problem instructions na motivation use case changing behavior control helps large applications please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version xx x edge version xx", "num": "17689", "d": "6/2017"}, {"title": "email validator returns invalid empty fields", "body": "hello regexp makes emailregexptest gt false means contains validatorrequired automatically right want check email pattern contains letter", "num": "17688", "d": "6/2017"}, {"title": "error add", "body": "hello got error serve installed error package json", "num": "17686", "d": "6/2017"}, {"title": "instances custom control formcontrol nt get notified model change", "body": "submitting current behavior writevalue every instance custom control called upon change control value expected behavior writevalue called value control changes outside custom control minimal reproduction problem instructions create custom control implements controlvalueaccessor interface create reactive form group one control add several instances custom control attached reactive form control perform change one instances wait response writevalue method inside instances reproduction plnkr motivation use case changing behavior custom radio button control please tell us environment", "num": "17685", "d": "6/2017"}, {"title": "cheatsheet content clipped narrow screens", "body": "", "num": "17678", "d": "6/2017"}, {"title": "ngc working properly change path config file", "body": "submitting current behavior nt get right pathes use compiler way npm bin ngc p tsctsconfigclientaotjson expected behavior work correctly even put config file another dir minimal reproduction problem instructions motivation use case changing behavior want config tsc files one foler cleaner code please tell us environment", "num": "17670", "d": "6/2017"}, {"title": "docs aio public members left api class docs", "body": "submitting current behavior api docs classes seem stripping useful public members leading poor documentation difficulty understanding convertprivateclassestointerfaces expected behavior api documentation classes show public members types minimal reproduction problem instructions first look documentation class activatedroutesnapshot specifically interface members sections notice mention member look use section see use member mentioned anywhere page look code activatedroutesnapshot notice list members interface definition documentation matched perfectly declared methods look constructor list public injected members includes way represented api documentation believe doc generation use convertprivateclassestointerfaces appears totally stripping constructor useful documentation may provide motivation use case changing behavior makes documentation substantially less useful useful public members dropped way learned member stumbling random blog post access resolver data component going source figure really please tell us environment note documentation version docs time reporting", "num": "17669", "d": "6/2017"}, {"title": "aio highlight tabbing navbar nt work", "body": "tab navbar highlights nodes children ones without", "num": "17665", "d": "6/2017"}, {"title": "error error encountered resolving symbol values statically consolelog called forroot static method", "body": "originally posted ionic issue tracker suggest probably angular issue cross posting submitting current behavior ionic cordova build android prod generates following error expected behavior expected app build minimal reproduction problem instructions ionic start testbuild tabs create directory srcmodules create module testmodule srcmodulestestmodulets contents import ngmodule modulewithproviders angularcore export interface itestconfig value string export class testconfig implements itestconfig value string ngmodule declarations imports entrycomponents providers exports export class testmodule test set configuration static forroot config itestconfig modulewithproviders end testmodule include module test module srcappappmodulets import testmodule testconfig modulestestmodule let config testconfig value test imports browsermodule ionicmoduleforroot myapp testmoduleforroot config run build notice error remove consolelog call rerun build note builds would call consolelog cause build fail error motivation use case changing behavior please tell us environment", "num": "17663", "d": "6/2017"}, {"title": "aio links pictures page nt work firefox", "body": "submitting x bug report current behavior firefox click links appear pictures page expected behavior clicking link icons open link like chrome minimal reproduction problem instructions go firefox hover one pictures see link twitter icon link icon click bio shows instead opening link", "num": "17661", "d": "6/2017"}, {"title": "mockbackend resolves undefined", "body": "submitting current behavior mockbackend works intended starting specs fail due mockbackend resolving undefined anything change respect mockbackend took look could nt find anything obvious", "num": "17660", "d": "6/2017"}, {"title": "aio copy button nt work correctly examples", "body": "go guide copy first snippet pasted one line instead keeping file format", "num": "17659", "d": "6/2017"}, {"title": "make angular compatible moduleconcatenationplugin", "body": "submitting current behavior compiling angular project moduleconcatenationplugin logs errors optimize project expected behavior logs errors optimize final build minimal reproduction problem instructions add moduleconcatenationplugin plugins list webpack configuration add displayoptimizationbailout webpack command run webpack example project cli run npm run build motivation use case changing behavior reducing final bundle size cold run time angular projects please tell us environment", "num": "17657", "d": "6/2017"}, {"title": "docs missing url show gde page directly", "body": "submitting current behavior opening page docs land angular filter would nice link would possible land gde filter", "num": "17656", "d": "6/2017"}, {"title": "new promise object function error use promise resolve object", "body": "submitting current behavior function create new promise object use function compile error typescript let test new promise resolve reject gt let resp errormessage resolve resp testthen resp gt resperror compile error expected behavior expected error checked chrome browser ok minimal reproduction problem instructions motivation use case changing behavior please tell us environment testthen rep gt rep reperror compile error error workcaseangularairmediaairmediaamssrcspaairmediaamssrcappplaylistplaylistservicets property error exist type error workcaseangularairmediaairmediaamssrcspaairmediaamssrcappplaylistplaylistservicets property error exist type webpack failed compile", "num": "17655", "d": "6/2017"}, {"title": "intermittent router issue url different route matches", "body": "submitting current behavior opening following url following routes cases hooked using checking id resolver trigger one behaviors depending whether user creating new case opening existing one usually works fine url indeed hit path indeed every however angular would treat param route get said nothing changes part refreshing url debugging completely unrelated problem one forms expected behavior expect hit path every single time refresh minimal reproduction problem instructions ca nt reproduce issue plunker mimicked setup plunker screenshots show url recognized param time properly parsed optional param motivation use case changing behavior expect router always behave way certain scenario please tell us environment", "num": "17654", "d": "6/2017"}, {"title": "breaking change public compiler api", "body": "submitting current behavior reflector argument others optional default global reflector changed commit course compiler crashes insufficient parameters expected behavior still optional breaking change programs relying minimal reproduction problem instructions see problem clone try compile might know reproduce missing parameter smilecat motivation use case changing behavior problem stated commit message impossible compile multiple programs time nt understand problem give reflector default uses global one give one please tell us environment", "num": "17653", "d": "6/2017"}, {"title": "language service resolve custom paths", "body": "submitting current behavior project option tsconfigjson file ignored language service resulting spurious errors expected behavior respected minimal reproduction problem instructions project add following file modulets import component ngmodule angularcore component selector pathcomponent template export class mycomponent ngmodule declarations mycomponent export class module directory called sibling add following add template expected diagnostic received diagnostic known element", "num": "17651", "d": "6/2017"}, {"title": "feature language service completions classclassname binding", "body": "submitting current behavior completions provided class bindings example expected behavior provide completions classes mentioned relevant css resources original issue", "num": "17650", "d": "6/2017"}, {"title": "even get first part quickstart display ie blank screen app works look inside code described code way code sick dated tutorials longer work", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17649", "d": "6/2017"}, {"title": "docs quickstartcli bad html escape chars", "body": "submitting current behavior open page latest chrome table columns purpose file contains text never need add lt script gt lt link gt tags manually expected behavior insted contains text never need add tags manually minimal reproduction problem instructions open page latest chrome navigate table columns find row column read row text", "num": "17648", "d": "6/2017"}, {"title": "injector api docs show deprecated get method", "body": "submitting current behavior see documentation new get method documented twice old get method displayed marked deprecated source code looks good think issue documentation generator somewhere apologize nt time review closely expected behavior correctly display current deprecated get methods minimal reproduction problem instructions see selected api version motivation use case changing behavior accurate docs please tell us environment confirmed chrome firefox", "num": "17647", "d": "6/2017"}, {"title": "docs wrong steps sec amp follow angulario issue", "body": "submitting current behavior moved comments tutorial clear amp detailed steps snippets ambiguous unclear author previous issue cites part part ex section services one section particular says appcomponentts cut heroes array add uninitialized heroes property accurate cut heroes array outside class declaration need put new property inside class declaration code shown nt provide context amp says add correct file unclear location perhaps obvious instruction people new ooptypescript ex section routing begins configure routes create configuration file app routes define first route route heroes component saying create file indicates new file says afterward make router available exact work import add exact code imports array file supposed twice placesfiles configuring routes making router available clear written makes easy break things point outdated links section names urls inconsistent due changes tutorial structure links sec services still say links sec routes still say etc expected behavior least reword clarify uninitialized class property go inside class definition cut heroes array incorrect add context snippet unless goal learner figure reword clarify whichhow many file code goes functionality gets refactored shortly thereafter introduction routing rather confusing amp easily broken update links urls point correct section number mostly cosmetic since still work consistency people jumping restarting downloaded example also bit confusing motivation use case changing behavior per earlier angulario issue lack clarity accuracy amp detail certain code snippets makes difficult new learners follow along issues result putting code wrong place breaking app making difficult continue tutorial please tell us environment na documentation issue", "num": "17645", "d": "6/2017"}, {"title": "fix background color codeexample elements inside alerts subsections", "body": "submitting current behavior code snippets easily visible certain backgrounds contrast low expected behavior codeexample background color visible background colors update background color codeexample blocks within elements background color minimal reproduction problem instructions scroll blue code block inside motivation use case changing behavior uxui", "num": "17639", "d": "6/2017"}, {"title": "ie memory leaking browser reload", "body": "submitting current behavior reloading angular application via browser reload ie browser memory continually builds crashes expected behavior reload angular application ie browser memory build minimal reproduction problem instructions run demo plunker hit go memory tab start memory analyzer additionally open task manger windows watch memory usage click green reload button manually trigger refresh preview continue refresh watch memory increase every refresh motivation use case changing behavior building enterprise level application testing crashed times due memory build application building quite large steps listed getting jumps mb per reload application build memory reload browser wo nt crash please tell us environment", "num": "17637", "d": "6/2017"}, {"title": "aio need single source url redirects firebase amp sw", "body": "currently documentation url changes page including api urls update redirect configuration firebase serviceworker regex worse redirect adjustments serviceworker must made single regex nt obvious pr comment subsequent slack exchange brought issue fore need rational solution soon many redirects popping quickly slack exchange june wb point regex looks like something internal redirects know worry firebase redirects concern permalinks held external sources need redirects purpose inside significant disconnect maintenance issue gk serviceworker activated handle requests based regex route requests tell handle url let pass firebase firebase redirects useful long sw passes requests server wb going hell maintain worry serviceworker redirects kind url rename first many coming years still know request sw going handle happens make change recommend gk think sw route url remain document service try fetch fail could teach firebase return sure much maintainable b fact url remain incorrect bad wb whereas sw disabled reason link would go firebase properly redirected bigger problems unmaintainable easily maintain redirects two places url remains bad reach firebase redirect firebase returns right thought necessary redirect logic sw firebase need single source redirects way generate sw firebase configuration gk bigger problems unmaintainable easily maintain redirects two places serviceworker ai nt free stuckouttongue one source truth redirects possible wb apparently happy suggestion pr either feels wrong address promptly said make change requested get particular hump note problem tomorrow figure redirect lord help us change url let forget api url changes common also flow logic gk thrilled make suggestion either smiley fwiw exactly duplicating redirect rules telling sw ignore paths firebase knows redirect rules redirect totally agree better less manual way generate sw nt route paths list wb fact strategy sw slightly different argues even forcefully better way creating issue us", "num": "17636", "d": "6/2017"}, {"title": "animation query parameter work properly", "body": "submitting current behavior child transitions work expected behavior first transition works minimal reproduction problem instructions click button elements animate nt happen motivation use case changing behavior please tell us environment", "num": "17632", "d": "6/2017"}, {"title": "router animations working mdinput present enter component", "body": "submitting current behavior component mdinput try navigate animation work expected behavior router navigation work properly navigating component mdinput minimal reproduction problem instructions create empty component amp component mdinput create simple router animation navigate components animation navigating component gt component mdinput work please tell us environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "17631", "d": "6/2017"}, {"title": "docs missing link sources git", "body": "submitting current behavior links found docs point source github anymore talking expected behavior would like get links back sometimes easier determine something works source minimal reproduction problem instructions sample old docs sample new docs petebacondarwin told mention issue", "num": "17627", "d": "6/2017"}, {"title": "aot opens new tab navigating new route child route", "body": "submitting bug sure current behavior aot version app opens tabs application running recently started use aot since seeing strange behavior click link routing child routes open new tab load complete page new tab corresponding component route keep newly opened tab next click onwards route changes reflected new tab close newly opened tab next click route link open new tab short basically operates tabs could possible reason hope question clear thanks advance expected behavior open new tab minimal reproduction problem instructions routes routes path redirectto login pathmatch full path login component logincomponent candeactivate candeactivateguard path app component homecomponent children path redirectto message pathmatch full path xyz component xyzcomponent canactivate authguard path component canactivate authguard candeactivate candeactivateguard path component canactivate authguard candeactivate candeactivateguard path component canactivate authguard xyzdisplayname", "num": "17626", "d": "6/2017"}, {"title": "aot get error", "body": "submitting current behavior recently upgraded along aot mainly followed official guide angulario took work around errors app successfully compiles creates aot build ngfactory files src due nt think error problem build probably issue config files paths far aware though correct one sure bsconfig aotjson anyway call following two scripts compiles serves app build aot ngc p tsconfigaotjson amp amp rollup c rollupconfigjs serve aot liteserver c bsconfigaotjson creates following log command window note nt error command window however browser get following error get browser output unfortunately quite ambiguous error assume find indexhtml however paths seem correct anyway also one thing noticed indexhtml file get copied aot file default behaviour expected behavior app run successfully browser load indexhtml compiled successfully aot minimal reproduction problem instructions plunker unfortunately wo nt compile app quite complex removed certain files reproduced config files believe might home issue hoping plunker enough show aot config apologies please tell us environment always help would kindly appreciated stuck thank", "num": "17625", "d": "6/2017"}, {"title": "memory leak async pipe", "body": "submitting current behavior rather informational angular project due reactivexrxjs fact asyncpipe clean reference memory leaks might big subclasses contain dom detached elements previous view problem rxjs angular boundary lies passing closure rxjs closure held internally rxjs never released causes asyncpipe object released transitive dependencies changedetectorref expected behavior yet permanent fix yet limit memory leakage propose reset method minimal reproduction problem instructions see reactivexrxjs although angular code please tell us environment", "num": "17624", "d": "6/2017"}, {"title": "complex bloated usefull", "body": "ridiculously complex bloated basic sample site really development time greatly increased maintenance going nightmare happened simply adding js files solution even looked hard add angular existing project obscene submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17623", "d": "6/2017"}, {"title": "provide visual signal external links", "body": "current behavior currently inspecting target url way reader docs know clicking link take external resource time consuming often leads readers leaving angulario unintentionally expected behavior like see visual cue near external link would tell clicking link take external resource several pages solved via arrows pointing right following developersgooglecom opinion particular design heavy weight distracting something lightweight still able communicate information would much preferable", "num": "17620", "d": "6/2017"}, {"title": "docs formvalidation sample bug", "body": "sample code nt work nt remove ngif active maybe misunderstood smth hero form template name name required name must least characters long name characters long alter ego hero power p power required submit new hero", "num": "17618", "d": "6/2017"}, {"title": "routerlink adds tabindex even route undefined", "body": "submitting current behavior tabindex expected behavior tabindex minimal reproduction problem instructions motivation use case changing behavior routerlink supposed support nullundefined nullundefined nt impact element tab index allows user focus elements nt focus please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "17616", "d": "6/2017"}, {"title": "language service tslib external dependency", "body": "submitting current behavior added language service started requiring external dependency expected behavior rolled", "num": "17614", "d": "6/2017"}, {"title": "spurious diagnostics reported enumerating value type", "body": "submitting current behavior following component produce diagnostic says member type expected behavior diagnostics anyvalueany", "num": "17611", "d": "6/2017"}, {"title": "hostbinding always sets lowercase attribute names ignoring original case declaration", "body": "submitting current behavior usning attribute set notice lowercase l fxlayout expected behavior usning attribute sould set notice upercase l fxlayout minimal reproduction problem instructions reporduce issue include declare attribute app class uppercases name demo plunker motivation use case changing behavior trying use flexlayout noticed able get desired result setting row wrap noticed attibute set lower case app selector tag please tell us environment", "num": "17610", "d": "6/2017"}, {"title": "change queryparam detected", "body": "submitting current behavior changing value queryparam nt trigger event expected behavior change value queryparam like event triggered picking latest data minimal reproduction problem instructions already existing stackoverflow thread changeofqueryparamnotdetected basically subscribing get query url also filter options ever click filter lets say call give new navigate page new sticking filter would bring would like apply another filter criteria lets say orange get kind url unfortunately nothing happens seems picking change url stays like select filter let say end url value stored change detected motivation use case changing behavior filter functionality please tell us environment", "num": "17609", "d": "6/2017"}, {"title": "member variable component accessible inside custom validator function via", "body": "submitting current behavior except formgroup variable ie registerform per plnkr provided variables accessible inside custom validator function component making conditional check unexpected behavior avoided think handling via conditional statement shouldnt done expected behavior formgroup variable ie registerform per plnkr provided accessible without explicitly making conditional check via statement minimal reproduction problem instructions plnkr browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux", "num": "17608", "d": "6/2017"}, {"title": "moduleinitializer like appinitializer", "body": "submitting wondering like appinitializer moduleinitializer implemented scenario multiple lazy load modules exist module service injected constructor config type configa configa fetched server service injected several module components appinitializer since type configa used modules singleton created", "num": "17606", "d": "6/2017"}, {"title": "http module status code incorrectly propagated error", "body": "submitting current behavior send ifnonematch header etag returned http module treats error expected behavior return success empty response body let developer handle propagation response body applies user sends ifnonematch similar header otherwise browser would normally mask hence problem minimal reproduction problem instructions motivation use case changing behavior error caught please tell us environment using authhttp extend http jwt simply propagates error create", "num": "17605", "d": "6/2017"}, {"title": "template bug change log page", "body": "display google chrome", "num": "17604", "d": "6/2017"}, {"title": "child auxiliary routes matrix parameters work together", "body": "submitting current behavior navigating aux route child component erases matrix parameters vice versa expected behavior neither aux route matrix parameters removed minimal reproduction problem instructions plunker root component two router outlets component rendered main outlet also aux outlet routes aux route lives nicely matrix parameters starting url click top url click top url child component conflict starting url click box url click box url click box url motivation use case changing behavior bug please tell us environment", "num": "17603", "d": "6/2017"}, {"title": "click event bug", "body": "submitting current behavior component template separate html file forgot write something click event looked like nt render page solved error click something browser microsoft edge still displayed console error nt render page reopened windows powershell entered ng serve worked think angular bug expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17602", "d": "6/2017"}, {"title": "observable map nt perform types conversion", "body": "injectable export class mockservice constructor private http getmocks observable return gt rjson mockmodel component export class testcomponent implements oninit constructor private mockservice mockservice ngoninit thismockservicegetmocks subscribe r gt consolelog typeof r submitting current behavior object expected behavior mockmodel browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux", "num": "17600", "d": "6/2017"}, {"title": "assign services local variable using observables", "body": "summary trying cache http results local variable assigning variable result request wish filter results invoking function another component injects retrieves user subscribes event gets jobs means user state changes jobs array invokes set local variable later user types search box called empty array even though set publishes new set jobs subscribers note similar maps response object desired whilst handling logging errors code typescript injectable export class jobservice jobspublisher behaviorsubject environment angular cli angular rxjs browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "17599", "d": "6/2017"}, {"title": "aot add annotations metadata", "body": "please help use mymodule compiled aot jitcompiler submitting mymodule contains controls component metadata please tell us environment", "num": "17595", "d": "6/2017"}, {"title": "exported member edomanimationengine", "body": "hi using animation angular manually install package angularanimation got issue could point wrong solutions appreciate", "num": "17593", "d": "6/2017"}, {"title": "extend componentstyleurls support viewencapsulation styleurl", "body": "submitting current behavior angular loads stylesheets specified styleurls string using viewencapsulation set component level expected behavior using party libraries bootstrap may desirable portion styles component set viewencapsulationnone rest emulatednative extending componentstyleurls allow array allows encapsulation specified per stylesheet retaining component default easily possible override external styles without making stylesheets included component globallocal motivation use case changing behavior increases use emulatednative none avoiding problems one two css classes need override global style component rendered suddenly classes across styleurls become global viewencapsulationnone majority make sense remain scoped emulatednative please tell us environment", "num": "17591", "d": "6/2017"}, {"title": "getboundingclientrect delay", "body": "submitting current behavior code actually set expected behavior property set minimal reproduction problem instructions green div nt transition applied initially translating propper position since transition depends set setting property please tell us environment", "num": "17588", "d": "6/2017"}, {"title": "angulario rendered mobile safari ios", "body": "submitting current behavior angulario pages rendered error thrown points line problem likely caused way currently used polyfill library polyfillio polyfills iterators even polyfillio iterator polyfills added explicitly set error nt go away expected behavior page rendered normally necessary polyfills possible make angulario workable polyfill libraries namely corejs instead polyfillio minimal reproduction problem instructions loading angulario mobile safari ios likely correspondent version desktop safari motivation use case changing behavior please tell us environment", "num": "17587", "d": "6/2017"}, {"title": "ngcontent textarea compatibility issue", "body": "custom component following template test component try place text normal html element get empty without expected string inserted inside component idea could happening probably compatibility issue", "num": "17586", "d": "6/2017"}, {"title": "documentation broken firefox", "body": "submitting current behavior documentation broken older firefox versions pages nt rendered page styles wrong code snippets nt formatted error constantly thrown expected behavior page rendered normally higher firefox versions minimal reproduction problem instructions problem persists documentation pages rendered rendered correctly motivation use case changing behavior availability crucially important information framework angular official website modern browsers please tell us environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx others windows", "num": "17585", "d": "6/2017"}, {"title": "expressionchangedafterithasbeencheckederror nan passed async pipe", "body": "submitting current behavior observable emits passed async pipe get following error error expressionchangedafterithasbeencheckederror expression changed checked previous value object object current value nan expected behavior expressionchanged error minimal reproduction problem instructions motivation use case changing behavior honestly nt lot good reasons pass nan case thought casting number string number getting unexpected value nonetheless nan valid value think please tell us environment reproduced plunkr browser chrome browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "17584", "d": "6/2017"}, {"title": "routerlinkactive wrong url path subfolder path root", "body": "submitting x bug report current behavior url contains part path defined different routerlink wrongly sets routerlinkactive true expected behavior routerlinkactive false minimal reproduction problem instructions navigating aaabbb link set active motivation use case changing behavior defined paths approuteringmodulests work expected relative component called browser url set correctly routerlink routerlink works element using routerlinkactive url aaastats aaa aaastats set active error aaa active link route set active please tell us environment", "num": "17583", "d": "6/2017"}, {"title": "docs ajsquickreference brokenmissing example", "body": "submitting current behavior example box error message stating please tell us environment", "num": "17582", "d": "6/2017"}, {"title": "ngupgrade provider servicename angularjs module loaded dynamically", "body": "submitting current behavior angularjs application trying upgrade angular everything described upgrade official docs declared standard angularjs module inject heroservice controllers everything works fine use plus another angularjs module difference loaded dynamically via oclazyload module available beginning application bootstrapped weird behavior available within though add statically service gets injected without problems noticed angular calls method calls method generated return instance case angular module loaded dynamically via oclazyload returned expected behavior would expect injector would return regardless whether angular module loaded dynamically statically maybe way add angularjs modules angular app onthefly please tell us environment", "num": "17581", "d": "6/2017"}, {"title": "aio ctrlclick search results closes results panel", "body": "search results panel open might useful ctrlclick results open new tabs currently click result hides panel makes sense clicking open page happen ctrlcmd pressed", "num": "17580", "d": "6/2017"}, {"title": "unable bind attributes input textarea elements", "body": "submitting current behavior unable bind standard html attributes input textarea elements due nt known property error includes following attributes input maxlength minlength list inputmode form formtarget formnovalidate formmethod formenctype formcapture textarea maxlength minlength autocomplete form expected behavior able bind attributes since standard html except maxlength input per mozilla documentation attributes might supported browsers esp ieedge maxlength particular work minimal reproduction problem instructions template add input textarea element binding maxlength like run example check dev console see error motivation use case changing behavior able bind standard html attributes elements please tell us environment", "num": "17579", "d": "6/2017"}, {"title": "aio broken link universalangulario", "body": "submitting current behavior universalangulario points version since merged universal api angular version universalangulario link text bellow download install nodejs points broken make sure download install nodejs getting started expected behavior update documentation providing morebetter examples obviously links work expected", "num": "17578", "d": "6/2017"}, {"title": "datepipe nt support local dates safari", "body": "submitting lots issues floating around internationalization datepipe could nt find mention safari nt supposed need tried intl polyfill nt seem affect anything current behavior datepipe formats days one different depending timezone testing changing os timezone see far west timezones like pacific fine eastern hemisphere zones break every date central daylight zone issues certain dates expected behavior formatted date match input minimal reproduction problem instructions motivation use case changing behavior browser consistency please tell us environment", "num": "17576", "d": "6/2017"}, {"title": "datepipe error safari", "body": "submitting current behavior using angular datepipe format dates getting api call nt work safari works expected every browser error getting expected behavior expect transfrom string like feb happens without issues browsers minimal reproduction problem instructions set date variable try transform using datepipe using following example please tell us environment", "num": "17575", "d": "6/2017"}, {"title": "expressionchangedafterithasbeencheckederror expression changed checked ng", "body": "submitting current behavior using observable object template using async receiving error error expressionchangedafterithasbeencheckederror expression changed checked previous value current value something expected behavior please tell us environment browser x chrome desktop version version tooling issues node version platform mac", "num": "17572", "d": "6/2017"}, {"title": "router metadata routes", "body": "submitting use case oftentimes route definition want ability specify properties global listener observe instance route would nice ability metadata property could attach things like page title app component attach global route listener could observe route change set page title one place vs every page example route would specify property attach misc info like dashboardroutets app component could observe route changes act appropriately new metadata case setting page title appcomponentts javascript export class appcomponent constructor private titleservice title router router without feature manually set title every component variety use cases could benefit permissions might look something like global handler could validate permissions transition similar page title use case page title idea might optimal want set page title based property resolve instance example get dashboard resolver want set page title", "num": "17567", "d": "6/2017"}, {"title": "doc factory parameter", "body": "submitting current behavior guide show use factory parameter example work aot allow exported function arrow expected behavior example work aot motivation use case changing behavior help users aot showing exemple work please tell us environment", "num": "17566", "d": "6/2017"}, {"title": "animation style behave differently expect", "body": "submitting current behavior used style revert used styles animation back end state value behaved differently expect used animation rotate object clockwise used style object rotate rotated different direction counterclockwise live demo demonstrate issue expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17565", "d": "6/2017"}, {"title": "inject decorator factory injectiontoken parameters", "body": "submitting current behavior raise decorators valid minimal reproduction problem instructions export let labeltype new injectiontoken labeltype export function labelresolverfactory labelservice labelservice inject labeltype type string return new labelresolver labelservice type export class labelresolver implements resolve gt constructor private labelservice labelservice private type string resolve route activatedroutesnapshot return thislabelservicegetlabels thistype export let buildingprovider provider provide buildings usefactory labelresolverfactory deps labelservice provide labeltype usevalue buidling motivation use case changing behavior currentluy aot support arrow method things like allowed change inject annotation allow code reusage factory please tell us environment", "num": "17564", "d": "6/2017"}, {"title": "aio boilerplate remove aggresive", "body": "say working new guide create example like nt commited yet everything inside still unstaged run runs remove add boilerplate needed work example get exchange whole folder removed entirely fun", "num": "17563", "d": "6/2017"}, {"title": "aio missing unused icon", "body": "indexhtml references nonexisting icon based fact indexhtml since beginning never actually existed assume needed", "num": "17561", "d": "6/2017"}, {"title": "support generic simplechange use ngonchanges", "body": "submitting please tell us environment current behavior lifecycle hook method provides within property type provides uses type use generics type safety autocomplete etc lose benefits typescript working code operates inside expected behavior adding generics would offer developers chance define types inputs whilst falling back current behaviour otherwise example standard behaviour available import component input onchanges simplechanges simplechange angularcore component export class examplecomponent implements onchanges input foo string input bar number ngonchanges changes simplechanges void bad get autocomplete properties changes bad able access changesfoocurrentvalue dot syntax use changes foo currentvalue bad editor aware type changes foo currentvalue get type checking autocompletion example slight improvement adding extension simplechanges import component input onchanges simplechanges simplechange angularcore interface iexamplecomponentchanges extends simplechanges foo simplechange bar simplechange component export class examplecomponent implements onchanges input foo string input bar number ngonchanges changes iexamplecomponentchanges void good editor aware properties available changes good able access changesfoocurrentvalue dot syntax bad editor aware type changesfoocurrentvalue get type checking autocompletion example simplechange supported generics import component input onchanges simplechanges simplechange angularcore interface iexamplecomponentchanges extends simplechanges foo simplechange bar simplechange component export class examplecomponent implements onchanges input foo string input bar number ngonchanges changes iexamplecomponentchanges void good editor aware properties available changes good able access changesfoocurrentvalue dot syntax good editor aware type changesfoocurrentvalue get full type safety autocompletion way workaround project found way achieve adding definition using place simplechange would great possible part framework though thought might helpful share declare class simplechangegeneric extends simplechange previousvalue currentvalue firstchange boolean constructor previousvalue currentvalue firstchange boolean check whether new value first value assigned isfirstchange boolean export interface iexamplecomponentchanges extends simplechanges foo simplechangegeneric", "num": "17560", "d": "6/2017"}, {"title": "add list resources", "body": "submitting current behavior expected behavior listed section minimal reproduction problem instructions motivation use case changing behavior library updated active development also jquery library uses pure angular code please tell us environment", "num": "17559", "d": "6/2017"}, {"title": "always properly injected", "body": "submitting current behavior renderer injected instead expected behavior injected minimal reproduction problem instructions idea say issue case renderer object given component specify providers work browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "17558", "d": "6/2017"}, {"title": "sass removing support deep", "body": "submitting current behavior expected behavior see also sassdartsass nt know nodesass keep supporting sass version angular ts developers might use sure radar minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17557", "d": "6/2017"}, {"title": "touched bug", "body": "submitting current behavior control marked touched onchange event first blur event sure step focus input step blur step focus step change input lt control marked touched subsequently may different issue intended behavior sure touched bit reverts false activated like expected behavior control marked touched user triggered blur event minimal reproduction problem instructions adapted form validation plunk observe field name motivation use case changing behavior please tell us environment", "num": "17555", "d": "6/2017"}, {"title": "hero editor tutorial issue", "body": "learning angular confused terminology myapp considered css selector element css selector component decorator specifies element named element placeholder body indexhtml file", "num": "17554", "d": "6/2017"}, {"title": "layout bug official website", "body": "submitting current behavior layout problem official site page motivation use case changing behavior found problem following cssrule mdsidenavcontainer think turned aioshell viewsidenav mdsidenavcontainersidenavcontainer maxwidth none please tell us environment", "num": "17553", "d": "6/2017"}, {"title": "shortcircuit aio core specific ci builds", "body": "aio today nt use angular builds produced buildsh changes ca nt affect tests also true opposite direction change ca nt break unit tests propose speed ci reduce impact flakes circuiting build test ci scripts ca nt affected changes traviscommitrange detect impact pr using similar technique uses", "num": "17552", "d": "6/2017"}, {"title": "aio bunch dgeni warnings need fixing", "body": "", "num": "17549", "d": "6/2017"}, {"title": "feature request rename platform browser dynamic", "body": "call something else short perhaps mini naming competition list suggestions people vote thumbs issue post", "num": "17546", "d": "6/2017"}, {"title": "searching docs validator yields wrong result", "body": "submitting current behavior searching term validator upper right search bar yields incomplete result validatorfn expected behavior expecting api validatorfn validatorerrors c validators lt probably sought validator asyncvalidator checkboxrequiredvalidator k ngasyncvalidators guide less important accurate api results form validation forms reactive forms dynamic forms tutorial less important accurate api results hero editor minimal reproduction problem instructions visit type validator upper right search bar note incomplete results compare search term valid gives better results motivation use case changing behavior current search result presumably users validation related documentation easy find via search bar please tell us environment browser x chrome desktop version", "num": "17545", "d": "6/2017"}, {"title": "aio disconnected errors chrome karma jasmine", "body": "since upgrading chrome travis started seeing unit test failures due chrome getting disconnected karma worked around issue cause slight slowdown reference currently using karma jasmine looked bit since likely affect many people given setup jasminekarmachrome common believe happening karma server uses socketio among things get updates browser test results whenever browser reports test result refreshes nt hear browser considers disconnected whatever reason socketio uses xhrbased polling implementation instead problem would arise socket wants emit result hoops call method send message unless ie polling thingy currently writable causes writable calls sets creates callback setting back passes callback note callback called socket wo nt send anything karma server calls transportrequest xmlhttprequestsuccessonreadystatechangereadystate means socket sends message server wait xhr complete sending another message meantime jasmineland jasmine running tests using gone whole queue synchronously case call method continue running tests method passed nutshell based let tie everything together jasmine runs tests clears stack socket sends message inform karma server test result jasmine runs tests etc everything ran synchronously event listener polling socket nt get chance fire set order allow messages sent karma server tests run synchronously method turns uses task queue gets processed one xhr events use result jasmine keep running tests clearing stack running tests first xhr chance complete thus socket nonwritable time karma receive updates browser nt fail seems changes chrome wrt two seem related also kind old confused ie previously would use timer queue uses uses different queue processed timer queue consider following example js function test xhronload const xhr new xmlhttprequest xhropen get locationhref xhronload gt consolelog load xhrsend assume completes settimeout settimeout gt consolelog timeout requestanimationframe requestanimationframe gt consolelog raf messagechannel const ch new messagechannel const start datenow gt consolelog channelxhrreadystate xhrreadystate let lt datenow start lt bar run bar promise promiseresolve gt consolelog promise output chrome different chrome chrome chrome work argument callback takes async path called synchronously called set turn run rest queued callbacks giving xhr time complete", "num": "17543", "d": "6/2017"}, {"title": "google links doc might broken", "body": "submitting current behavior googlig etc give us old broken link expected behavior linking minimal reproduction problem instructions motivation use case changing behavior improved user experience", "num": "17542", "d": "6/2017"}, {"title": "languageservice recognize template reference", "body": "submitting one ways solve issue consistently loading external templates across different environments using webpack loader allows us write following code works well development production current behavior languageservice particular line code recognizes property template reference motivation use case changing behavior course presents several problems languageservice wo nt able recognize homehtml template reference problem severe using vscodenglanguageservice relies languageservice collect template references shown following issue angularvscodenglanguageservice would problem languageservice able detect recognize template reference inside require statement open pr change worth considering without valuable extensions like angularvscodenglanguageservice never able live project uses webpack require", "num": "17541", "d": "6/2017"}, {"title": "wrong date pipe visualization localeid", "body": "submitting bug date pipe date year month march june italian localeid current behavior try convert date date pipe date march june year get wrong conversion eg new date date ddmmyyyy returns expected behavior new date date ddmmyyyy return minimal reproduction problem instructions live demo", "num": "17540", "d": "6/2017"}, {"title": "improve service worker update behavior", "body": "current behavior whenever submit change angulario often multipletime per day generate new service worker manifest deployed along new build production servers next time user reloads angulario service worker picks manifest change fetches update stages activation ca nt activate new version app current version already running reloading app random times would result bad user experience avoiding instead use material snack bar show notification update available popup notifications easy people overlook annoying see proposed behavior remove snackbar notification add simple update notification footer version number eg version update available clicked active tabs currently active tab angulario reloaded staged update activated lastly update staged start listening windown unload event indicating tab closed reloaded time forcereload active angulario tabs activate new update activate staged update proposed behavior aiming remove annoyance notification cause ensure users use latest version app soon possible without sacrificing offline capabilities caching fast startup bring back refreshtoupdate behavior nonservice worker apps users expect work point kind update strategy going work every app apps nt full state persisted would lose data update eg unsubmitted form expanded menus scroll position etc angulario nt much userentered state tradeoff worth", "num": "17539", "d": "6/2017"}, {"title": "navigating component different params working", "body": "submitting current behavior first navigate component everything works navigate component different parameter get error confirm url valid params passing routerlink null undefined click link route changes id parameter split second goes back error thrown app also breaks ca nt navigate anywhere else error happens expected behavior able get new id passed route params observable error use id fetch data update component values accordingly minimal reproduction problem instructions component typescript import component oninit ondestroy angularcore import activatedroute angularrouter import subscription rxjssubscription component template export class oudetailcomponent implements oninit ondestroy private datasub subscription motivation use case changing behavior please tell us environment", "num": "17538", "d": "6/2017"}, {"title": "export requestargs http module index", "body": "submitting current behavior currently want import requestargs create new request need import expected behavior expect able import requestargs interface present exported please tell us environment", "num": "17537", "d": "6/2017"}, {"title": "hybrid app angular running angular performance issue nganimate", "body": "working app modules angular new modules angular using downgrade strategy bootstrapping worked fine recently upgraded system angular noticed performance degrade debugging found nganimate module angular side causing app tremendous performance remove nganimate module super fast attaching performance stack chrome browser submitting current behavior working app modules angular new modules angular using downgrade strategy bootstrapping worked fine recently upgraded system angular noticed performance degrade debugging found nganimate module angular side causing app tremendous performance remove nganimate module super fast expected behavior minimal reproduction problem instructions bootstrap angular anugalr downgrade strategy motivation use case changing behavior please tell us environment", "num": "17536", "d": "6/2017"}, {"title": "docs missing angularinmemorywebapi npm dependency", "body": "submitting update request tutorial docs current behavior following one tutorial workflows angular memory web api dependency missed user followed workflow visit complete steps notice packagejson missing angularinmemorywebapi entering tutorial workflow way read next step bottom page new angular continue tutorial skip setup step since already using angular cli setup skipped setup section tutorial still missing inmemorywebapi dependency completed tutorial http simulate web api error missing angularinmemorywebapi expected behavior tutorial let users know check npm dependency packagejson dependency minimal reproduction problem instructions see current behavior motivation use case changing behavior developers learning angular may get stuck issue please tell us environment", "num": "17535", "d": "6/2017"}, {"title": "docs improvements aheadoftime compilation", "body": "submitting current behavior currently jumping aot trying update application however documentation still quite confusing nt state prerequisites dependencies examples additional info would useful need install liteserver liteserver could also benefit explanation required bsconfigaotjson whatwhere guessing needed mentioned aot documentation needed aot serve script example packagejson includes appropriate scripts would also helpful manually add two following scripts even sure correct currently errors expected behavior complete thorough tutorial implement aot compilation minimal reproduction problem instructions read motivation use case changing behavior make transition update aot lot easier", "num": "17533", "d": "6/2017"}, {"title": "lazy routes recognized using array import", "body": "submitting current behavior angular recognize lazy routes imported like see motivation expected behavior lazy loaded routes recognized entire syntax angular supports including imports arrays minimal reproduction problem instructions plunkr work well issue created small ngcli repo clone npm install start clicking lazy link display error motivation use case changing behavior example contrived use case want define routes library module imported tried method return array imports broke lazy routes wanted library wrap routes common parent auth related functionality many examples array used eg class typescript also specify may used fields app started changed everything still work fine chunk already created nt seem issues running latter syntax recognizing lazy routes reason chunks wo nt created due finding lazy routes sure also issue using issue jit please tell us environment", "num": "17531", "d": "6/2017"}, {"title": "feature request allow parent component control child loaded", "body": "submitting current behavior seems way parent component control loading child components case would like delay loading child component parent loaded data hiding within condition causes error router outlet could found though used possible old router using resolve guard child route wait parent signal ready work either guard prevents navigating parent expected behavior possible solutions allow hidden exposes input property control whether load child component extra lifecycle hook guard allows parent return promiseobservable indicate child components loaded minimal reproduction problem instructions provide plunkr requested bug motivation use case changing behavior usecase parent component displays key information product name child component displays peripheral information products interest peripheral information display key information gives poor user experience child component displays animation suitable hide child via css things currently possible workarounds see tightly couple child parent via service child explicitly waits parent signal initialization use router control display child component instead parent explicitly display specific child component based url please tell us environment", "num": "17529", "d": "6/2017"}, {"title": "plunkr templates seem broken tslibts found", "body": "bug feature request proposal bug expected behavior suggested plunkr template work fine current behavior currently fails due steps reproduce plunker template", "num": "17526", "d": "6/2017"}, {"title": "bad ux annoying tool tips angulario website", "body": "submitting current behavior hovering mouse pointer menu item annoying useless many cases tool tip pops hiding menu item expected behavior tool tips removed minimal reproduction problem instructions hover forms tool tip pops shows angular forms hiding next menu item point forms chapter explain angular forms obvious really need tell see image bellow hover templates amp data binding tool tip pops show duplicate useless information hiding next menu see bellow image motivation use case changing behavior please tell us environment", "num": "17524", "d": "6/2017"}, {"title": "component inheritance controlvalueaccessor broken typescript", "body": "hello class inherits custom class implements interface allows isolate reuse common logic related input management single parent abstract class extended multiple concrete components approach worked flawlessly application however upgrading functionality broken getting somewhat cryptic error runtime compilation errors find complete error message providing minimal possible sample could reproduced checkboxcomponent typescript import component angularcore import ngvalueaccessor angularforms import formcomponent formcomponent component selector mycheckbox templateurl checkboxcomponenthtml providers provide ngvalueaccessor useexisting checkboxcomponent multi true export class checkboxcomponent extends formcomponent formcomponent remove metadata error gone words happens component extends something way registered previous version typescript works without hiccups find output yarn list command give idea environment error reproducible testing google chrome ideas could causing also use case correct thank", "num": "17522", "d": "6/2017"}, {"title": "scroll position updated url fragment changes clicking fragment anchor", "body": "steps repro edited doc added simple ensure anchor like somewhere doc render page click link expected behavior url address bar updated scroll position within viewport adjusted way clicking toc links active toc item updated reflect current scroll position actual behavior url address bar updated scroll position toc active item updated additional context currently nt many links like functional came across modifying dgeni templates api pages wanted interdocument links like implementing integrate existing navigation flow integrate petebacondarwin need consider affects link verification would work ideally fragment links would validated like links", "num": "17521", "d": "6/2017"}, {"title": "dgeni warning zonejs docs generation", "body": "results note warning related zonejs", "num": "17519", "d": "6/2017"}, {"title": "exported default function might break aot", "body": "submitting current behavior code fails error read property text undefined error srcmaints module found error ca nt resolve gendirappappmodulengfactory homedemoappsrc srcmaints multi srcmaints expected behavior code export default function const mainroutes name abstract true component main return mainroutes compile fine aot actually simple array removing unncessary variable work minimal reproduction problem instructions create file called somewhere source folder need imported insert code run motivation use case changing behavior please tell us environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac os x others might related different error message looks like works export default name abstract true component main however also default", "num": "17518", "d": "6/2017"}, {"title": "animation common scenario problem child route", "body": "submitting check one x current behavior animation triggered expected behavior animation triggered minimal reproduction problem instructions motivation use case changing behavior note matsko mlcmlapis already contributed issue follow closed shiny new animations simple transition pages guest ca nt find way create plunkr show struggle think issue using child route common scenario must way get work simply bug report could ignorance though let know ask around recommended log issue please tell us environment os linux angular version angularcli angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript xx node aot issues node", "num": "17517", "d": "6/2017"}, {"title": "ngc breaks run annotateforclosurecompiler flag latest ts", "body": "submitting current behavior updated ts latest release seems run compiler anymore tsickle text w typeerror nodegetfullstart function annotatorrewriterwritenode annotatorrewritervisit annotatormaybeprocessenum annotatormaybeprocess annotatorrewritervisit visiteachnode objectforeachchild annotatorrewriterwritenode annotatorrewritervisit compilation failed expected behavior able run compilation ts angular code minimal reproduction problem instructions share code due ip tell removing fixes problem nt fix problem least compiles successfully looks like motivation use case changing behavior please tell us environment", "num": "17516", "d": "6/2017"}, {"title": "read data inputs provided pipes angular", "body": "text inputs inputs provided pipe needed replace words inputs want write input different words store obj type first inputs smth like red green apple stores object red green apple code pipe pipe name replacer export class sanitizehtml implements pipetransform constructor private sanitizer domsanitizer transform data arg argforeach item gt data datareplace new regexp item g nt work component values abc ok score fvalue json providers dataservice export class implements oninit viewchildren prix inputs public itemssource string public abc string constructor public dataservice dataservice ngoninit thisabc thisitemssource use data dataservice example want able type words display object apples green brown please help", "num": "17515", "d": "6/2017"}, {"title": "read data inputs provided pipes angular", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17514", "d": "6/2017"}, {"title": "service worker causes site reached chrome corrupted content error firefox", "body": "angulario issue shows specific commit repro steps go angulario gt see screenshot bypass network cache via cmdshiftr gt site loads reload without bypass gt see screenshot repros firefox chrome different error screenshot chrome console info went wrong obviously actionable screenshot amp odd thing chrome dev tools claim service worker installed yet stack traces clear service worker causes error issues seem related screenshots screenshot screenshot screenshot screenshot", "num": "17513", "d": "6/2017"}, {"title": "docs lifecycle guide misaligned image", "body": "", "num": "17510", "d": "6/2017"}, {"title": "tutorial page displaying source code properly", "body": "submitting current behavior tutorial page left open long time several days code snippets appear metadata rather code example expected behavior user see something like clipped page reload minimal reproduction problem instructions look tutorial routing page refactor routes routing module update appmodule section chrome leave tab open several days sure steps necessary manifest issue motivation use case changing behavior please tell us environment", "num": "17509", "d": "6/2017"}, {"title": "translate looses references xliff xmb files", "body": "submitting current behavior translate looses references xliff xmb files following entries html file note use result xliff problem reference second block ca nt found block second translation unit immediately first one contains select message translate case joined translation see context references unit expected behavior add reference matching translation unit found minimal reproduction problem instructions see motivation use case changing behavior please tell us environment", "num": "17506", "d": "6/2017"}, {"title": "animation backgroundcolor params resets transition finishes", "body": "submitting current behavior delivering animated value backgroundcolor via params value gets reset transition finishes items animated using angular animation inactive yellow entry value fix inside animation active red one gets color passed via params yellow one keeps background color correct red one looses transition finishes issue expected behavior value set backgroundcolor stays transition finished minimal reproduction problem instructions markup parent component host two entries color active persons passed via input coloractive markup child component one single entry color active persons passed animation via params active bound input coloractive personname active personactive animation code backgroundcolor state activetrue coming params one activefalse fix component selector appchild templateurl childcomponenthtml styleurls childcomponentcss animations trigger active state true style transform scale backgroundcolor active state false style transform scale backgroundcolor yellow export class childcomponent input person person input coloractive red motivation use case changing behavior want pass values backgroundcolor component use different colors please tell us environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues angular cli node version platform macos x", "num": "17505", "d": "6/2017"}, {"title": "animation work properties specified state animation interupts new one", "body": "submitting current behavior one animation state contains property specified another state change states happens within transition time current state change properties nt get transitioned back correct state example animation works properly unless case specified happens expected behavior properties specified one state transition back initial values changes state within transition time minimal reproduction problem instructions reproduce create container children height put animation states height container set state nothing specified meaning height children put transition duration seconds change state hide container seconds try change state back motivation use case changing behavior case height would good save dynamic nature depends children properties like padding specified css classes changed state transition please tell us environment browser x chrome desktop version x firefox version tooling issues node version lts platform linux red hat", "num": "17503", "d": "6/2017"}, {"title": "validations behave different macchrome windowschrome html min html max attributes inputs", "body": "submitting current behavior use input html element type number min mac angular detects values less error adds error message reactive form control errors collectionarray however windows happen sure html rendering issue tested chrome windows mac issue guess mac uses rendering engine safari chrome etc consistently different windowschrome expected behavior would say desired behavior windows mac behave validations either min max html attributes ignored adhered behave differently platforms causes sorts headaches even bloat handle issue differently operating systems browser combinations minimal reproduction problem instructions reproduce add input field set min value attach validator backing reactive form control sit back watch behave differently windowschrome mac motivation use case changing behavior motivation deep rooted love angular need framework produce excellent products supporting good practices please tell us environment tested windowschrome macchromesafari effects", "num": "17502", "d": "6/2017"}, {"title": "router breaking changing url outside angular", "body": "submitting bug report current behavior running angular iframe browser navigation buttons break router executing parent window expected behavior able parent window without affecting router inside iframe minimal reproduction problem instructions open plunkr ie navigate children routes open developer tools run try click links navigate inside angular app router broken motivation use case changing behavior making widget angular script parent page communicated angular app api trying update parent window url without changing browser history running works fine chrome firefox browsers ie edge behaviour please tell us environment running angular angular router browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version x edge version", "num": "17501", "d": "6/2017"}, {"title": "way access ngmodel within component implementing controlvalueaccessor", "body": "submitting current behavior creating custom control wrapping tag component implements provider want display validation messages within component need get access get properties inject constructor get error instantiate cyclic dependency ngmodel get access component expected behavior able get component validity status ie access within component somehow angular version", "num": "17500", "d": "6/2017"}, {"title": "routeroutlet clearing immediately", "body": "problem router outlet nt seem clear new route component already begun load attempting access ngoninit componenta returns inaccurate height element fill entire routeroutlet due presence component componentb sharing routeroutlet firstly desired behaviour steps reproduce activate new route circumstances placed breakpoint ngoninit component activated within feature module potentially relevant hackaround", "num": "17499", "d": "6/2017"}, {"title": "typo error", "body": "search function herosearchservice called wrong api instead", "num": "17497", "d": "6/2017"}, {"title": "animation broken safari browserstack", "body": "submitting current behavior open app ipad animations goes wrong styles nt applied elements expected behavior everything works expected like desktop minimal reproduction problem instructions create animations open ipad animations template html console results ipad motivation use case changing behavior animations work ipad way please tell us environment browser x safari ios version", "num": "17496", "d": "6/2017"}, {"title": "required checkbox within custom component always set host invalid unchecked", "body": "submitting current behavior months ago issue related required checkbox validation fixed works expected see unfortunately issue still occurs placing checkbox input within custom component form template variable checkboxvalue boolean comes controller gt always ngvalid submit output myformvalid bad output always true component component selector mycheckbox template providers provide ngvalueaccessor useexisting forwardref gt mycheckbox multi true export class mycheckbox implements controlvalueaccessor input name name string input required required boolean private innervalue case validation state propagated properly host component thus enclosing form always remains valid even unchecking required checkbox like older issue setting ngmodel null would trigger correct propagation desired approach expected behavior required checkbox validation state ngvalid nginvalid propagated properly host component unchecking inner checkbox ngmodel false makes host component form invalid motivation use case changing behavior unchecking required checkbox within custom component prevent form submission please tell us environment angular version browser language", "num": "17495", "d": "6/2017"}, {"title": "renderer listener unsubscribing issues", "body": "submitting current behavior using grab bar like one mousedowning bar binds mousemove mouseup mousemove make stuff mouseup unbinds mouseup mousmove events bindedunbinded renderer see example works fine enough however sometimes get bug chrome bar grabbing fails keeps stucked grabbingmoving interface items like images stop cursor case mousedown event well fired sometimes couple mousemove nt matter nothing else happens release mouse button helas mouseup event self nt fired mousemove still binded try drag bar binding events moveup mousemove would triggered twice plus get mouseup event unsubscription mylistener seems unsubscribe one event types extrabindings forever face bug could binded thrice fourth expected behavior think two things going wrong mouseup event happens even bug would solve thing expect depends browser chrome angular directly events type target seems bindable many times nt know bug feature unbindable anymore tested copypasting binding many times minimal reproduction problem instructions code private mousemovelistener private mouseuplistener hostlistener mousedown event onmousedown event eventstoppropagation thismousemovelistener thisrendererlistenglobal document mousemove event gt stuff thismouseuplistener thisrendererlistenglobal document mouseup event gt thismousemovelistener thismouseuplistener facing trouble plunkring thing even sample provided int template seems try provided later motivation use case changing behavior everybody binding mousemove dynamically could face grab issue multiple bindingunbinding nt seems logicalintuitive please tell us environment", "num": "17494", "d": "6/2017"}, {"title": "", "body": "submitting part code strange behaviour current behavior chrome onpaste attached nothing happened expected behavior paste event call onpaste event obj browser ie version tooling issues platform windows", "num": "17493", "d": "6/2017"}, {"title": "upgrading version classes added markup prefix ngtnsc", "body": "submitting current behavior upgrading html markup classes added ngtnsc expected behavior markup remain clean minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows vs code", "num": "17492", "d": "6/2017"}, {"title": "regression caused minmax validators", "body": "submitting check one x current behavior version introduces min max validators issue arises custom component input property component implements registered validator custom validation logic requirements user wraps component default validators always triggered way instructing component properties meant validated behavior also true custom component implements input property matches builtin validator directives example custom component input properties min max minlength maxlength etc expected behavior way suppress angular validator directives properties required component author minimal reproduction problem instructions prior version validation errors version validation errors motivation use case changing behavior mechanism preventing angular validator directives input properties matches builtin validation directives input properties might bit different meaning component context angular version", "num": "17491", "d": "6/2017"}, {"title": "upgrademodule needs support hybrid apps w lazily loaded hybrid bundles using angularjs router", "body": "submitting current behavior able lazily load code angularjs app uses angularjs router using works add angular components main app well lazily loaded feature bundle angular components main app accessible downgraded used inside angularjs templates however angular components lazily loaded feature bundle able downgraded able used angularjs templates due largely fact method nt allow specify injector use access componentfactories lazily loaded components ca nt specify injector use uses main injector knowledge lazily loaded module components expected behavior able optionally specify injector want use resolve componentfactory minimal reproduction problem instructions create angularjs app uses angularjs router add webpack build project allow easily code split break lazily loaded features separate bundles add app use lazily load featuresection app add angular app create part main bundle add simple component module downgrade use angularjs template verify angular working inside angularjs app part step need bootstrap angular app first callback using bootstrap angularjs app add lazily loaded feature bundle add modules make sure downgrade component used angularjs pieces lazily loaded feature add downgraded component angularjs template refresh page point get error keep going create separate value add reference file containing run generate foomodulengfactoryfoomodulengfactoryand call following foobundlejs const appmoduleref getappmoduleref get access somehow const foomoduleref foomodulengfactorycreate appmodulerefinjector created instance lazily loaded module downgrade component module angular module angularjsmodule directive foocomponent downgradecomponent component foocomponent component factory found foocomponent add ngmoduleentrycomponents downgradecomponentfoocomponentfactoryappmodulefoomodulengfactorycreate hack angular source allow optionally pass injector method works fine like would expect would like see method could support optional injector passed hack made get work following foobundlejs const appmoduleref getappmoduleref const foomoduleref foomodulengfactorycreate appmodulerefinjector const directiveconfig downgradecomponent component foocomponent injector foomodulerefinjector angular module angularjsmodule directive foocomponent directiveconfig downgradecomponent function look like able get angular modules lazily loaded created without using angular router would nice method supported native spoke robwormald agreed valid usecase ngupgrade cover said may speak petebacondarwin see thoughts motivation use case changing behavior examples documentation assumption using angular router many apps large nt able switch router even angular components lazily loaded section code makes sense need continue using angularjs router please tell us environment", "num": "17490", "d": "6/2017"}, {"title": "aio angluar universal docs new aio", "body": "submitting current behavior angular universal docs new aio expected behavior angular universal docs minimal reproduction problem instructions connect angulario go docs motivation use case changing behavior none please tell us environment", "num": "17489", "d": "6/2017"}, {"title": "using forms observables mdspinner get uncaught error macrotask", "body": "submitting current behavior using shown observable returns value form call async service returns another observable promise eventually hide spinner within zone except calling ngform onsubmit event test pass stay infinite loop throwing following error seems like tests ok function called interval one comes mdspinner animations left active somehow expected behavior expected test pass without throwing errors jasmine completed tests least get error saying fault tell minimal reproduction problem instructions visit open browser console wait test passes suddenly console start spitting exception zonejs motivation use case changing behavior current behavior section may obscure actually pretty easy come issue highlight use case user shown component component calls service load data spinny shown service completes spinny hidden data updated component instance component shows form based data loaded service example pre filled values form submitted emits event listened parent component one spinner component show spinny call service save data form spinny hidden end please tell us environment", "num": "17486", "d": "6/2017"}, {"title": "feature request add delay option routerlink", "body": "submitting expected behavior clicked routerlink want delay transition like motivation use case changing behavior sidebar menu angular app ios safari swipe back feature using shows latest snapshot previous screen behavior really annoying menu looks like flickering want delay transition close menu first", "num": "17485", "d": "6/2017"}, {"title": "docs formcontrolname api documentation errors", "body": "submitting current behavior multiple inappropriate references documentation page set value set initial value control instantiating formcontrol set programmatically later using abstractcontrol abstractcontrol listen value want listen changes value control subscribe abstractcontrol event also listen abstractcontrol notified validation status recalculated expected behavior references appropriate referees presumably members minimal reproduction problem instructions visit scroll bottom use section observe errors motivation use case changing behavior logical easily understood documentation please tell us environment", "num": "17484", "d": "6/2017"}, {"title": "feature request compiler verification event binding names similar property binding", "body": "submitting current behavior parsing templates angular complain attempt bind property nt known property really helpful changing names existing components possible similar verification names cc tbosch", "num": "17483", "d": "6/2017"}, {"title": "date pipe add gmt hours formatted date safari", "body": "submitting check one x current behavior date pipe adding hours safari expected behavior display date without adding substract hours minimal reproduction problem instructions motivation use case changing behavior bug safari browser works great please tell us environment macos sierra angular version browser safari language typescript", "num": "17478", "d": "6/2017"}, {"title": "error message omitting host component testbedconfiguretestingmodule nt helpful", "body": "submitting check one x sure duplicate one nt seem like testspecific minimal reproduction problem instructions unit testing angular code one forgets place test component call later attempts instantiate component via resulting error message runtime nt helpful current behavior message currently says expected behavior message say something clearer like please tell us environment angular version head", "num": "17477", "d": "6/2017"}, {"title": "allow compiler shallow render", "body": "hello submitting feature request compiler able shallow rendering want different noerrorschema differences component used want able tell bound onto correctly nt want component load children mainly using testbed example component selector mycomp template transcluded stuff class mycomp component selector mycomptwo template class mycomptwo input somebinding moment using work around includes creating stubs using stubs test bed ultimately able use schema disables render second level rendered components uses error schema issues tell right away cases like componentdirectives template registering querying content child something like ngswitch another question mark transclusion submitting check one x expected behavior fully render first layer components shallow render rest layers motivation use case changing behavior able produce unit tests without load whole component tree benefits much easier way writing unit tests potentially large code bases nt want tests break small changes components even cases broken component nt want tests break tests component allows test component isolation module", "num": "17474", "d": "6/2017"}, {"title": "router events timing", "body": "submitting check one x current behavior since version broken works ngoninit components called router events already handled application contains components register router ngoninit till version used get events router ngoninit seems behavior changed also seems appmodule components get router events ngoninit lower level modules nt great deal us router event kind entry point entire module expected behavior get notified router events ngoninit called minimal reproduction problem instructions see sub module component router events doesnt get router events motivation use case changing behavior breaking change please tell us environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser language typescript", "num": "17473", "d": "6/2017"}, {"title": "aio toc container nt force content resize", "body": "submitting check one x current behavior aio content fills full width viewport nt respect toc container expected behavior toc force content resize viewport width minus width toc minimal reproduction problem instructions go docs page eg motivation use case changing behavior want docs legible accessible please tell us environment windows browser tested edge chrome firefox", "num": "17472", "d": "6/2017"}, {"title": "invalid json http error response", "body": "submitting check one x current behavior errorjson returns error syntaxerror unexpected token e json position objectparse responsebodyjson scenario testing backend api connection refused getting gateway timeout expecting error json parse identify data display generic message errors expected behavior errorjson parse correctly minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17471", "d": "6/2017"}, {"title": "property assignment via brackets error template binding", "body": "x bug report gt search github similar issue pr submitting current behavior binding object property exist declared template using square bracket notation binding succeeds creates property object expected behavior binding occur template per warning using dot properties bindings contain assignments minimal reproduction problem instructions template array objects iterate using ngfor assign new property object template binding like item count see compiles runs without error warning root app component import component ngmodule angularcore import browsermodule angularplatformbrowser component selector myapp template export class app name string obj name hello name hello constructor thisname ngmodule imports browsermodule declarations app bootstrap app export class appmodule change property access access template see error occur plunker reproducing issue discussion discovery bug motivation use case changing behavior using dot notation yields error assignments occur bindings please tell us environment plunker angular version browser tested expect chrome ie language typescript", "num": "17470", "d": "6/2017"}, {"title": "compile app multi locale", "body": "submitting check one x currently aot build one locale build app languages must run many build process dist app different locale many times app grows bigger waste much time storage request add multilocale aot build feature something like build one app indexhtml favicon assets polyfills non localerelated files multi mainbundlejs localerelated files", "num": "17468", "d": "6/2017"}, {"title": "animations nested groups aot lead error recursion supported", "body": "submitting check one x current behavior using nested groups aot compiler throws following error expected behavior nested groups pass aot compilation process minimal reproduction problem instructions start angular cli server workaround motivation use case changing behavior nested groups keep code cleaner please tell us environment windows webstorm angularcli node os angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli ngtoolswebpack angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview compile time error language typescript xx typescript node aot issues", "num": "17467", "d": "6/2017"}, {"title": "aio footer background nt work well high resolutions", "body": "", "num": "17465", "d": "6/2017"}, {"title": "aio links footer clickable firefox", "body": "submitting check one x current behavior version ff links clickable cursor change nt even happen nt recognise link expected behavior links clickable expected please tell us environment macos sierra browser firefox", "num": "17460", "d": "6/2017"}, {"title": "language switcher new angulario website", "body": "submitting check one x current behavior select chinese version website language switcher also translated chinese expected behavior language switcher written english english version chinese version website instead translated \u82f1\u6587\u7248 minimal reproduction problem instructions visit chinese version website take look language section footer please tell us environment centos browser tested chrome firefox", "num": "17457", "d": "6/2017"}, {"title": "aio mentioned importing topromise operator", "body": "submitting check one x current behavior http documentation operator used imported codes page rxjs beginners difficult bit know solve expected behavior add tip note cc wardbell", "num": "17454", "d": "6/2017"}, {"title": "aio consolelog every doc navigation production", "body": "submitting check one x current behavior navigating around new angulario docs navigation gets printed developer console expected behavior logged production guess minimal reproduction problem instructions go open developer console browser navigate pages motivation use case changing behavior looks like strange behavior production build please tell us environment windows aio version angulario build version browser chrome version internet explorer version firefox", "num": "17453", "d": "6/2017"}, {"title": "problem toclist new angulario website", "body": "submitting check one x current behavior select last element toclist page scrolls nt reach exact anchor position thus element highlighted expected behavior clicking element toclist page scroll related anchor position clicked element active highlighted minimal reproduction problem instructions take look issue clicking last element list exp please tell us environment centos browser chrome firefox", "num": "17452", "d": "6/2017"}, {"title": "aot compilation typeerror thiscompileranalyzemodulesasync function", "body": "submitting check one x current behavior trying implement aot compilation existing project based following guide installed comilercli platformserver also created new tsconfigaotjson try call returns following error c developmentappproject nodemodulesbinngc p tsconfigaotjson typeerror thiscompileranalyzemodulesasync function codegeneratorcodegen c developmentappprojectnodemodules angular codegen c developmentappprojectnodemodules angularcompilerclis objectmain c developmentappprojectnodemodules angularcompilerc linodemodules main c developmentappprojectnodemodules angularcompilerclisrc object c developmentappprojectnodemodules angularcom modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload compilation failed expected behavior aot compilation initiated create aot ngfactory files minimal reproduction problem instructions follow steps please tell us environment windows angular version browser na language typescript node aot issues", "num": "17451", "d": "6/2017"}, {"title": "buggy wildcard height animation", "body": "submitting check one x current behavior html element animation animates height fixed value wildcard value triggers click render correctly element clicked height animation finished expected behavior clicking html element animates open height closed height eg state stop animation animate back open state minimal reproduction problem instructions plunker illustrates issue state red square open height set square clicked state set closed height set however square clicked go state open closed user clicks square animates open height closed height state square appears closed height stateproperty reality open square clicked height square suddenly jumps animates correct state motivation use case changing behavior functionality working angular therefore preventing updating angular shown issue hoped would fix problem however seems still issue angular please tell us environment os windows ide visual studio code package manager yarn angular version browser chrome firefox ie edge language typescript node aot issues", "num": "17450", "d": "6/2017"}, {"title": "aio searched api pages showing iphone", "body": "submitting check one x api search always work iphone type comp search box pick compiler get loading indicator never page problem matching pages fine works fine mac", "num": "17449", "d": "6/2017"}, {"title": "aio get started learn buttons working ff", "body": "buttons home page nt work ff also noticed chrome specific region click nt", "num": "17448", "d": "6/2017"}, {"title": "bad failure mode missing module import router destination", "body": "problem routing component ngmodule imported application fails unexpected way fail expected way ultimately case bad error reporting reproduction clone repo visit click page link current behavior production see error provider missing injects never imported anyway even transitively expected behavior error message something like hey defined route component ngmodule imported overall strange thing even though component never imported anywhere bootstrapped module application currently work long missing providers quite unexpected versions", "num": "17446", "d": "6/2017"}, {"title": "bug emailvalidator conditional nt work display none", "body": "submitting check one x current behavior class gets applied inputs directive works great set ignores validator however thing inside directive fails grab whole form stays expected behavior would expect validator validate field directive binding set false even inside hidden container minimal reproduction problem instructions suffice html notificaci\u00f3n de error al correo correo ngifemailemail directive pass false value please note original html used primeng however issue validator combined checkbox may missbinded motivation use case changing behavior predictable behaviour directive please tell us environment node os macos sierra angular version browser chrome electron language typescript node aot issues node", "num": "17443", "d": "6/2017"}, {"title": "enter nodes collected non enter node", "body": "used finds elements given list first non enter node detected means nodes afterwards found go list nodes like html html query enter", "num": "17440", "d": "6/2017"}, {"title": "aio create staging environment cli", "body": "difference google analytics id", "num": "17435", "d": "6/2017"}, {"title": "checkenv aio fail checkenv main angular project fails", "body": "repro clone repo expected result dev server starts actual result dev server fails start fails failure nt install npm dependencies main project error however irrelevant trying dependencies required aio build work require", "num": "17434", "d": "6/2017"}, {"title": "provider heroservice error current tutorial", "body": "submitting check one x current behavior heroes tutorial part routing add heroes dashboard get heroes missing line code follow tutorial exactly receive js error expected behavior error demo works expected minimal reproduction problem instructions described current behavior fix add component definition motivation use case changing behavior complete tutorial without unexpected errors please tell us environment environments angular version versions browser language node aot issues na", "num": "17428", "d": "6/2017"}, {"title": "bind child component view rendered", "body": "bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see motivation use case changing behavior prevent redundant markup angular version angular able bind property parent component children components view rendered case gridheader component able forward grid object viewinited viewchildren contentchildren decorators use pass property child component many case afterviewinit lifecycle hook late example passed data object want use method child compont template gridheaderitem component markup", "num": "17427", "d": "6/2017"}, {"title": "optional skipself marked parameters used together null union type", "body": "submitting check one x current behavior fails error error encountered resolving symbol values statically expression form supported position original ts file resolving symbol logmodule expressionformnotsupportedsrcapplogmodulets error srcmaints module found error ca nt resolve gendirappappmodulengfactory expressionformnotsupportedsrc srcmaints multi srcmaints building aot expected behavior fail minimal reproduction problem instructions compile motivation use case changing behavior tslint type check rule finding needed conditions null added complains needed condition marking optional parameter correct definition decorator tells injects null instead undefined environment angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome language typescript", "num": "17426", "d": "6/2017"}, {"title": "synchronize release cadence angular angularcli whenever possible", "body": "submitting check one x current behavior currently angular angularcli different release cadences expected behavior angular angularcli released whenever possible time minimal reproduction problem instructions motivation use case changing behavior benefit would anytime command executed newest released editions angular referenced generated file realize may always possibledesirable whatever extent feasible would greatly appreciated least developer please tell us environment angular version angularcli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx na node aot issues", "num": "17425", "d": "6/2017"}, {"title": "formarray one disabled formcontrol nt keeps updated info template", "body": "submitting check one x current behavior directly binding template keeps input disabled expected behavior directly binding template keeps input enabled minimal reproduction problem instructions please tell us environment plunker angular version browser chrome sure language", "num": "17424", "d": "6/2017"}, {"title": "strictnullchecks still supported", "body": "submitting check one x current behavior viewchild en decorator amp contentchildr en decorator pass passed object decomposition error fixed abstractcontrol methods like fail expected behavior errors minimal reproduction problem instructions angular version language typescript node aot issues", "num": "17423", "d": "6/2017"}, {"title": "npm version metadata correct", "body": "submitting current behavior npm still reports angular version current version expected behavior since version left rc status expect npm reports line minimal reproduction problem instructions tacit motivation use case changing behavior particular case module report line available upgrade given installed please tell us environment angular version browser na language na node aot issues na", "num": "17421", "d": "6/2017"}, {"title": "async lifecycle hooks angular support await ngoninit hooks", "body": "submitting check one x hey would interested whether makes sense support adding front angular lifecycle hooks eg saw used recently immediately sounded alarm would prevent correct ordering lifecycle hooks imho see person used sure makes sense angular provide would make sense put warnings docs thanks", "num": "17420", "d": "6/2017"}, {"title": "applying stagger animation multiple containers throws error", "body": "submitting check one x current behavior one container apply stagger animation animate children throws error returned zero elements use expected behavior apply stagger animation containers children container independent one another nt minimal reproduction problem instructions angular version browser", "num": "17418", "d": "6/2017"}, {"title": "aio search gives inconsistent search results entering search query", "body": "submitting check one x current behavior searching docs results show start typing word stops showing typed part finally shows concrete example searching trackb result api docs shows result search query trackby result gone adding next letter trackbyf showing expected behavior result show long query string matches searching minimal reproduction problem instructions go type trackb search bar notice see trackbyfunction api docs result type trackby notice gone type trackbyf notice back motivation use case changing behavior users might miss search results please tell us environment windows aio version aiostaging build version browser chrome version internet explorer version firefox", "num": "17417", "d": "6/2017"}, {"title": "angular mathjax", "body": "submitting check one x current behavior run mathjax code component html file x get template parse errors unexpected character eof unescaped template use escape error ng appmoduleconcretedesigncomponenthtml invalid icu message missing try escaping single curly braces nt get math equations rendered expected behavior code x render latex equation browser minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17416", "d": "6/2017"}, {"title": "ngmodule two way binding radio input disable radio input incorrectly", "body": "submitting check one x current behavior ngmodule two way binding radio disable group radio inputs located one disabled attribute expected behavior disable input disabled attribute minimal reproduction problem instructions eg result input disabled rendering motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "17415", "d": "6/2017"}, {"title": "querylist lt gt interface iterable typescript", "body": "submitting check one x try iterate querylist eg contentchildren get error error think issue incorrectly closed problem still present even though targeting still ca nt use loop please fix note docs specifically mention implements iterable interface therefore used javascript var items loops well angular templates ngfor let mylist angular cli angular typescript vs code tsconfigjson compileonsave false compileroptions outdir distouttsc baseurl src sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types lib dom alwaysstrict true tsconfigappjson extends tsconfigjson compileroptions outdir outtscapp module baseurl types exclude testts spects", "num": "17414", "d": "6/2017"}, {"title": "initial style applied delay using stagger", "body": "submitting check one x current behavior using stagger initial style applied individual item stagger delay expected behavior initial style applied matching items stagger kicks minimal reproduction problem instructions please tell us environment angular version browser edit seems plnkr nt working anymore noticed yesterday june still broken example nt working anymore", "num": "17412", "d": "6/2017"}, {"title": "aio learn new angular docs", "body": "submitting check one x current behavior currently open docs pages see documentation angular angular newer version matter whether talking api docs guides anything else actually see updates documentation either means looked documetation animations lets say months ago know something new open today far see new features changelog animations animations introduce wave new animation features animations introduce routeable animation support going source code finding best way find new especially dont know original code love work looks like time documentation crucial common users dont want crawl code expected behavior would like see something like new similar typescript exactly tells new changelog good informative material know nothing know gives work developers use new features dont know anyway thanks", "num": "17409", "d": "6/2017"}, {"title": "router loadchildren working angular hybrid", "body": "submitting bug either logic ecosystem angular current behavior module lazy loaded rendered wants get injector never resolve injector root module fail expected behavior upgraded component works like root parent minimal reproduction problem instructions take look example created click checkout console angular version browser language typescript", "num": "17407", "d": "6/2017"}, {"title": "ca nt compile animations aot dynamic keys", "body": "submitting check one x current behavior compiling aot gives error shell error error encountered resolving symbol values statically expression form supported position original ts file resolving symbol slideinanimation slideanimationts resolving symbol testcomponent testcomponentts resolving symbol testcomponent testcomponentts error srcmaints module found error ca nt resolve gendirappappmodulengfactory src srcmaints multi webpackdevserverclient srcmaints webpack failed compile expected behavior compile minimal reproduction problem instructions use dynamic keys animationstylemetadata called component compile aot typescript import animationtriggermetadata trigger animate transition style angularanimations export function slideinanimation side left right top bottom left time numberstring easeout startpos numberstring endpos numberstring animationtriggermetadata return trigger slideinanimation transition enter style side startpos issue happens dynamic key animate time style side endpos issue happens dynamic key export function slideoutanimation side left right top bottom left time numberstring easeout startpos numberstring endpos numberstring animationtriggermetadata return trigger slideoutanimation transition leave style side startpos issue happens dynamic key animate time style side endpos issue happens dynamic key motivation use case changing behavior able dynamically change keys object without running compilation issue aot please tell us environment macbook pro retina macos sierra node installed via brew yarn installed via brew atom angular version browser language typescript node aot issues", "num": "17406", "d": "6/2017"}, {"title": "feature request ngbeforedestroy", "body": "submitting check one x current behavior ngondestroy called element already removed dom expected behavior ngondestroy removing dom ngbeforedestroy would get called motivation use case changing behavior list items currently focused one removed want focus next item however due element already dom know next item dom thank", "num": "17404", "d": "6/2017"}, {"title": "version constant exported router module", "body": "submitting check one x current behavior expected behavior actual version module motivation use case changing behavior using additional check make sure modules version angular version", "num": "17403", "d": "6/2017"}, {"title": "docs aio style guide proposal inputset", "body": "submitting check one x prelude back january open issue codelizer repo mgechevcodelyzer talking something like still thinking really mostly pattern however would like open issue presenting patter style guide proposal expected behavior made post devto inputset pattern widgets angular title widgets convention manage posts could also aplicable components minimal reproduction problem instructions motivation use case changing behavior separations concerns template aware properties ed properties concern component composability patterns allows component compose special properties template consume post would certainly find use cases examples please tell us environment windows cu vscode may update angular version browser language typescript", "num": "17402", "d": "6/2017"}, {"title": "promise provider work bad request services stored subfolder file name contains space", "body": "submitting x bug report gt search github similar issue pr submitting feature request support request current behavior service set subfolder file name contains space found provider section appmodulests tsc compile without errors error runtime uncaught promise error error provider service name expected behavior service found served without error changing name file replacing space uderscore correcting name appmodulets tin componentts use solve problem also works file root app folder minimal reproduction problem instructions plunker using srcservicesmyexampleservicets works using srcservicesmy exampleservicets work motivation use case changing behavior work also files contain space name please tell us environment local windows plunker latest angular angular version latest browser chrome latest maxthon language typescript node aot issues", "num": "17401", "d": "6/2017"}, {"title": "\u0275domanimationengine \u0275noopanimationengine module missing animations", "body": "submitting check one x current behavior upgrading get following error warning angularplatformbrowser export \u0275domanimationengine found angularanimationsbrowser warning angularplatformbrowser export \u0275noopanimationengine found angularanimationsbrowser error mypathnodemodules angularplatformbrowseranimationssrcprovidersdts module mypathnodemodules angularanimationsbrowser exported member \u0275domanimationengine expected behavior typescript errors minimal reproduction problem instructions create angular cli project versions angular packages run please tell us environment linux angular version language typescript xx typescript", "num": "17400", "d": "6/2017"}, {"title": "promise", "body": "deleted author submitted mistake completion", "num": "17398", "d": "6/2017"}, {"title": "aio remove focus outline search box", "body": "", "num": "17396", "d": "6/2017"}, {"title": "aio fix alignment api filters narrow view", "body": "", "num": "17395", "d": "6/2017"}, {"title": "aio remove gap topbarnarrow sidenav menus", "body": "", "num": "17394", "d": "6/2017"}, {"title": "angular package format bundled rollup", "body": "submitting check one x current behavior packages conform angular package format imported project bundled rollup file created angular material example attempts import causes error rollup since circular import expected behavior rollup able interpret ngfactory files already setup however circular import breaks build minimal reproduction problem instructions steps reproduce motivation use case changing behavior rollup able bundle packages conform spec cleanly without modification files please tell us environment macos sierra vs code npm express angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview problem build language typescript xx typescript node aot issues tried", "num": "17389", "d": "6/2017"}, {"title": "animations still work values without", "body": "submitting check one x current behavior animation nt work angular used expected behavior animation keep working perhaps print deprecation message something minimal reproduction problem instructions", "num": "17387", "d": "6/2017"}, {"title": "compiler ngc output changed", "body": "submitting check one x current behavior compiling module ngc using linking yarn link main app changes output compared following structure also creates summary file ts file eg indexngsummaryts expected behavior using results intended output like minimal reproduction problem instructions tsconfig file ngc reads looks like command compile packagejson motivation use case changing behavior confused compiler changed output behaviour read doc explains needs done instead tsconfig file already uses seems ignored otherwise interpreted please tell us environment os x phpstorm yarn angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "17381", "d": "6/2017"}, {"title": "upgrade angular causes ionic error find module angulartscwrappedsrctsc", "body": "submitting check one x current behavior updating angular ionic serve fails following message error find module angulartscwrappedsrctsc expected behavior ionic serve build run project diddoes angular previously minimal reproduction problem instructions install angular motivation use case changing behavior please tell us environment global packages ioniccliutils opted telemetry change run cordova telemetry ionic cli local packages ionicappscripts ioniccliplugincordova ionicclipluginionicangular cordova platforms opted telemetry change run cordova telemetry android ionic framework ionicangular system node os windows xcode installed iosdeploy installed iossim installed angular version", "num": "17380", "d": "6/2017"}, {"title": "jit using optional private causes wrong renderer injected", "body": "angular material seeing odd issue injection system using old renderer nt supposed mdchips component uses receives parent component also mdinputcontainer input containing ngmodel reproduce run angular material using branch found changes reproduced error found commit", "num": "17378", "d": "6/2017"}, {"title": "added style rules correct dom element", "body": "submitting check one x current behavior css rule applied component applied correct dom element expected behavior css rule apply div either attribute applied element css rule nt modified include attribute minimal reproduction problem instructions appcomponentts appcomponentless appcomponenthtml sidenav mainbundlejs style rule rendered dom apply rule tag nt work needs flex style please tell us environment angular version browser language typescript xx node aot issues might related", "num": "17377", "d": "6/2017"}, {"title": "bug animation startdone events unit tests", "body": "submitting check one x current behavior using trigger animation animation opposing states binding start done events works fine wanting execute something problem unit testing going triggers events following order reason going state triggers reverse order expected behavior would expect order events always regardless state triggered minimal reproduction problem instructions replicate need unit test animation opposite states like booleans something like motivation use case changing behavior behavior unit test different actual behavior please tell us environment happens env tried travis mac angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview unit testing chrome language typescript xx typescript", "num": "17375", "d": "6/2017"}, {"title": "aio add link source api pages", "body": "add link view andor edit source api pages possibly via icon button", "num": "17372", "d": "6/2017"}, {"title": "aio service worker duplicate updates", "body": "sequence logs two updates happened update notification displayed click update link page reloads update notification displayed second time click update link page reloads", "num": "17368", "d": "6/2017"}, {"title": "minlength validation templatedriven form working", "body": "submitting x bug report feature request support request current behavior minlength validation nt work please refer plunkr link details expected behavior input field invalid min length criteria valid red highlighting amp tooltip message appear showing input valid minimal reproduction problem instructions please tell us environment os windows enterprise angular version browser ie language typescript", "num": "17366", "d": "6/2017"}, {"title": "x", "body": "", "num": "17365", "d": "6/2017"}, {"title": "webpack guide need update", "body": "webpack introduction need update", "num": "17364", "d": "6/2017"}, {"title": "bug animation leave transition animate height height angular", "body": "submitting check one x current behavior angular transition animate height property starting however animate starting example code docs expected behavior according docs accept automatic property calculation minimal reproduction problem instructions motivation use case changing behavior fix regression bug used work angular please tell us environment angular version browser language typescript", "num": "17363", "d": "6/2017"}, {"title": "keep animation end state using input params make state aware params", "body": "submitting current behavior using input params something like animation code const zoomeffect animation animate easeout style transform scale scalefactor params scalefactor export const magnifyanimation trigger magnify transition default gt magnified useanimation zoomeffect params scalefactor lt lt lt also override component transition magnified gt default useanimation zoomeffect params scalefactor state default style transform scale state magnified style transform scale since use input params also able tell state input params far know way seems renders input params unusable expected behavior state know input params motivation use case changing behavior nt see use input params long state nt know params able keep animation end state except maybe temporary animations angular version", "num": "17362", "d": "6/2017"}, {"title": "error compiling webpack", "body": "using angular node npm compiling ts files using webpack get following error relative module found appappmodule resourcesassetsjsmaints module exists correct path also following warnings warning angularcore critical dependency request dependency expression warning angularcore critical dependency request dependency expression contents import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent componentsapp ngmodule imports browsermodule declarations appcomponent bootstrap appcomponent export class appmodule idea solve issue", "num": "17360", "d": "6/2017"}, {"title": "router canload route guard broken common use case", "body": "issue filed listed feature request think needs priotity submitting check one x current behavior angular app feature module lazy loaded canload guard needs deal use case caller yet authenticated needs get token guard determine request handled call uses call sts server used return back angular app token load access activate routernavigate data load fails get user route expected behavior canload navigate route available reasonable form canactivate access url pass sts server sts server passes back angular app everything works canload needs able work way router data final url need state object get way load state back router sts server returns user token app sts server case happens third party auth like google facebook microsoft twitter minimal reproduction problem instructions needs several items repro ca nt give sample right parts angular app feature module loaded unless user token grants access view inside feature module canload needs make call oidc manager mgr returns finish callback code like motivation use case changing behavior lazy loading feature module work using third party authentication server via oidc oauth please tell us environment windows server iis issue happen web server angular version current version week ago browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome happen browser language typescript xx typescript node aot issues", "num": "17359", "d": "6/2017"}, {"title": "better syntax checking index syntax ngfor", "body": "submitting current behavior silence expected behavior syntax error minimal reproduction problem instructions notice index index got errors sorts behavior elem leading nasty runtime bugs motivation use case changing behavior avoid spending hours stupid bugs like please tell us environment angular version latest officially released browser language typescript", "num": "17358", "d": "6/2017"}, {"title": "hostbinding working custom components", "body": "current behavior alert component exposes input type alert directive property trying use directive like getting error ca nt bind type since nt known property alert expected behavior decorator work custom components inputs", "num": "17357", "d": "6/2017"}, {"title": "tests changedetectorref differs component fixture", "body": "submitting check one x current behavior test looks like typescript import componentfixture testbed angularcoretesting import angularplatformbrowser import debugelement angularcore import fakehomecomponent fakehomecomponent describe bannercomponent inline template gt let comp fakehomecomponent let fixture componentfixture let de debugelement let el htmlelement component looks like typescript import component changedetectionstrategy changedetectorref angularcore component selector fakehome template title changedetection changedetectionstrategyonpush export class fakehomecomponent public methods implementation oninit change detector component instance instance change detector provided expected behavior instance able tests onpush otherwise usage used running inside component minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows npm visual studio code angular version browser chrome language typescript node aot issues", "num": "17356", "d": "6/2017"}, {"title": "aio sidenav positionheight moment scrolling mobile chrome", "body": "scrolling downup chrome mobile browser adress bar hidesappears changes viewport height viewport height updated scroll movement resulted address bar hiddenshown finished scroll sidenav heightposition depend viewport height updated sidenav jumps correct heightposition scrolling", "num": "17355", "d": "6/2017"}, {"title": "source map wrong path", "body": "submitting check one x current behavior loading compilerumdminjs source map trying retrieved usersjasonadenprojectsangulardistpackagesdistcompilerbundlescompilerumdminjsmap expected behavior source map relative source minimal reproduction problem instructions load file mentioned motivation use case changing behavior na please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues aot issue", "num": "17354", "d": "6/2017"}, {"title": "aio upgrade lighthouse", "body": "currently using", "num": "17351", "d": "6/2017"}, {"title": "animation common scenario problem", "body": "submitting check one x current behavior animation triggered expected behavior animation triggered minimal reproduction problem instructions motivation use case changing behavior shiny new animations simple transition pages guest ca nt find way create plunkr show struggle think issue using component routes common scenario must way get work simply bug report could ignorance though let know ask around recommended log issue please tell us environment os linux angular version angularcli angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript xx node aot issues node", "num": "17349", "d": "6/2017"}, {"title": "inconsistent vs interpolation expression behaviour former throws error", "body": "submitting check one x current behavior changing property object supplied within lifecycle hook throw error specific circumstances specifically error thrown component template expression whose value changes consequence update made method child component contrast replace component template interpolation expression error longer thrown expected behavior difference using interpolation expression template child component happens change object supplied within method ideally error would thrown thus allowing child component safely change properties object supplied within method minimal reproduction problem instructions see following plunker browser console window open click button labelled change observe error logged contrast see working example expressions replaced interpolation expression motivation use case changing behavior predicable consistent behaviour interpolation expression possible related issues maybe following issue related angular version browser chrome latest ie edge language", "num": "17347", "d": "6/2017"}, {"title": "feature request automatic injection browsermodule", "body": "looks browser module automatically injected container runtime browser", "num": "17346", "d": "6/2017"}, {"title": "add disp attribute xbm xliff", "body": "submitting current behavior run extract tool create xliff new neat feature saves variable experssion inside interpolation placeholder following source element created good without essential information eg variable name would lost disp localization tool show pattern way much descriptive screenshot localization tool case variable name coould read see pattern variable names pretty easy read understand however disp attribute localization tool get placeholder index project would look like see pattern index harder read undestand developer copensate adding commens seen screenshots would bit illogical instead variable name would use expected behavior implement feature currently xliff xbm xliff extractors minimal reproduction problem instructions extract interpolated string first xliff either xmb xliff motivation use case changing behavior make localization easier please tell us environment windows vs code angular version browser language node aot issues", "num": "17345", "d": "6/2017"}, {"title": "xliff file created extract tool misses equiv icu", "body": "submitting current behavior following element template run extract tool create xliff file get note ph element equiv icu attribute translate xliff compile get error equiv misisng manually add equiv icu like works expected behavior original source element extracted b extractor contain equiv icu attribute works xbm xliff minimal reproduction problem instructions create template extract xliff localize keeping xml structure target element source element motivation use case changing behavior make localization easier please tell us environment windows vs code angular version browser language node aot issues", "num": "17344", "d": "6/2017"}, {"title": "name outlets nt work lazy loaded modules", "body": "submitting x bug report current behavior lazy loaded modules visit child routes uses named outlets example abc list nt work heroes module lazy loaded expected behavior able visit abc list minimal reproduction problem instructions go download sample app zip file run npm install npm start motivation use case changing behavior lazy load module name outlets please tell us environment windows visual studio code chrome angular version browser chrome firefox language typescript xx typescript", "num": "17343", "d": "6/2017"}, {"title": "aio fix footer overlap smaller screen sizes", "body": "may need input igorminar whether issue might design preference believe acceptable solution mobile view submitting check one x current behavior expected behavior footer collapse seen fully without disrupting toc screen large enough fit content minimal reproduction problem instructions go scroll bottom resize window", "num": "17341", "d": "6/2017"}, {"title": "cdata gt respected curlybrace interpolation", "body": "submitting current behavior double curly braces inside cdata gt block template cause angular parser fail expression curly braces valid interpolated cdata expression valid simple expression nonexistantvariable fail silently continue parsing template expression valid refers field invalid variable nonexistantobjectnonexistantfield angular throw typeerrors saying read property definitelynonexistantfield undefined rest template parsed strange noninterpolated text well valid interpolation sort invalid interpolation expression everything including first set curly braces show confusing add nonexistantobjectdefinitelynonexistantfield line appts plunkr observe expected behavior would expect like property bindings interpolation would ignored within cdata blocks minimal reproduction problem instructions make template contains observe text blah appear page look plunkr complete example motivation use case changing behavior use case would inside cdata block please tell us environment angular cli webpack aot linux mint intellij idea npm angular version browser tested chrome firefox would assume browsers language typescript node aot issues", "num": "17339", "d": "6/2017"}, {"title": "basic test fails error typeerror null object", "body": "submitting check one x current behavior trying make tests working working tests isolated environment like services cant make tests work angular component created simple component exactly like one guide also first simple test using completely setup using webpack working karma webpack phantomjs without problem non angular tests run simple test typescript describe bannercomponent inline template gt let comp fakehomecomponent let fixture componentfixture let de debugelement let el htmlelement fails following error typeerror null object evaluating thisplatforminjector apppageshomehomecomponentspects line createcompilerandmodule initifneeded createcomponent createcomponent invoke oninvoke invoke run execute execute invoketask runtask drainmicrotaskqueue run flush typeerror undefined object evaluating fixturedetectchanges apppageshomehomecomponentspects line invoke oninvoke invoke run execute execute invoketask runtask drainmicrotaskqueue run imports typescript also tried import import import corejsclientshimjs import rxjsobservable import rxjsaddoperatormap import rxjsaddoperatordebouncetime import rxjsaddoperatortopromise import rxjsaddobservableempty import rxjsaddobservablefrompromise import rxjsaddobservablethrow import zonejsdistzone import zonejsdistlongstacktracezone import zonejsdistproxy import zonejsdistsynctest import zonejsdistjasminepatch import zonejsdistasynctest import zonejsdistfakeasynctest completely abandoned systemjs dont want go back missing something bug expected behavior hope work minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows npm visual studio code angular version browser chrome phantomjs language typescript node aot issues", "num": "17337", "d": "6/2017"}, {"title": "custom pipe inside ngfor async loop rendering issue", "body": "submitting think issue involving data inside custom pipe current behavior bug manifest applying custom pipe something inside loop loaded async scenario list using pipe loop completes data rendered without problems chattext using pipe loop seem complete errors throw undefined values etc template irregularily rendered console logs show different data items number list items incompletely rendered suggest chattext atob pipe simple possible import pipe pipetransform angularcore pipe name atob export class atob implements pipetransform transform text string return atob text please tell us environment using chrome safari firefox desktopmobile browser angular version angular ionic", "num": "17334", "d": "6/2017"}, {"title": "reattached components route one level deeper using routereusestrategy", "body": "submitting check one x current behavior routing breaks grandchildren reattached component reattached component root seems work ok circumstance least component hierarchy detaching reattaching root nt make sense expected behavior attached plunker reattached component tree able successfully route display component minimal reproduction problem instructions setup example problem basic route hierarchy routereusestrategy detaches adminsecondlevelcrisiscenter reproduce page load redirect automatically crisis center step enter text text field crisis center text field nt click page button yet step click heroes hyperlink top page step click crisis center hyperlink top page step note text entered step redisplayed successfully text field indicates successful detach reattach component route hierarchy step click page page component displayed step click page note page routing completes successfully however component displayed motivation use case changing behavior believe bug current attach process attempted dig debug seems outlet parentcontexts configured properly exactly happens nt able ascertain please tell us environment angular version running github builds browser chrome language typescript", "num": "17333", "d": "6/2017"}, {"title": "social websites showing updated meta tags share", "body": "submitting check one x current behavior using meta service meta tags update able update default tags meta service indexhtml able see updated tags inspect element console social sites showing default meta tags updated tags showing social websites sharing expected behavior updated meta tags indexhtml need show updated meta tags social share able succeed minimal reproduction problem instructions motivation use case changing behavior need show dynamic meta tags social sites like fb twitter etc please tell us environment operating system windows server apache server backend spring rest api angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues indexhtml default static meta tags angular app documentwrite loading component updated tags changing tags dynamically updating indexhtml added screenshots import component elementref oninit ondestroy input inject afterviewinit renderer angularcore import router activatedroute angularrouter import meta metadefinition angularplatformbrowser component selector appsharevideo templateurl sharevideocomponenthtml export sharevideocomponent implements ngoninit constructor private router router private metaservice meta ngoninit thismetaserviceupdatetag content new updated tags info propertyog title thismetaserviceupdatetag content embed videos property twitter card loading component two tags og title twitter card updating new content social share fb websites taking default meta tags indexhtml share url old tags updated new tags seeing inspect element console seeing new meta content scocial websites followed meta code show updated meta tags social websites default meta tags indexhtml updated meta tags indexhtml facebook taking default tags updated tags", "num": "17331", "d": "6/2017"}, {"title": "editing template using attribute receiving warning attribute allowed", "body": "submitting check one x current behavior editing template using attribute receiving warning attribute allowed working web storm idea version expected behavior warning appear translation feature angular minimal reproduction problem instructions please tell us environment working web storm idea version angular version language", "num": "17326", "d": "6/2017"}, {"title": "link navgating page please check update anchor link page thanks", "body": "submitting check one x link navgating page please check update anchor link page thanks ramanan bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17323", "d": "6/2017"}, {"title": "bug router importing modules indexts lazyloaded module fails unexpected value undefined imported module", "body": "submitting check one x current behavior lazyloading module imports modulea imports modulec modulecomponent display fails error error also occurs changing import although ca nt tested plunkr interestingly error occurs lazyloading module imports moduleb imports modulec error either occurs changing import also interesting fact problem occurs building aotmode jitmode error occurs expected behavior import modules fail cases described minimal reproduction problem instructions clicking lazy module works shows component component b component c clicking lazy module fails shows output although show component component component c motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "17322", "d": "6/2017"}, {"title": "docs missing copy files visual studio quickstart", "body": "section step copy quickstart files aspnet project folder list minimum files required contain items srcmaints srcsystemjsconfigjs srcsystemjsangularloaderjs", "num": "17320", "d": "6/2017"}, {"title": "decimalpipetransform formatting correctly", "body": "submitting current behavior using number pipe internally decimalpipe formats correctly using output decimalpipetransform misses million separator gets formated expected behavior gets always formated minimal reproduction problem instructions ie works well chrome motivation use case changing behavior need custom pipe reuses decimalpipe scale number wrong formatted please tell us environment windows angular version browser language typescript", "num": "17319", "d": "6/2017"}, {"title": "aio fix text color button features page", "body": "get started button bottom features page white background white color hover text invisible hover hover", "num": "17313", "d": "6/2017"}, {"title": "angularlanguageservice working", "body": "used extension angular language service vs code one day created new project angular versions angularcli added feature angularlanguageservice working crashed extension angular language service disabled extension due crash language service angularcli properly working use anybody know use", "num": "17309", "d": "6/2017"}, {"title": "aio retain previous scroll position", "body": "current scrolling return page seen app scrolls either top bookmark url means bounce two guides lose place example go quickstart scroll near bottom go cli quickstart go back quickstart notice top quickstart browser pages usually work browser typically remembers leaves see behavior commenting scrolling within propose implement behavior could achieve caching last url page well page navigate page url cache scroll url changed update cache scroll igorminar writes solution implemented via locationpushstate want go definitely build parallel history stack one already browser worth exploring get june agreed defer issue release", "num": "17308", "d": "6/2017"}, {"title": "app crash lazy routes path different modulename updating angular", "body": "submitting check one x current behavior impossible app path different differents routes module migrating example adminadminroutingmodulets useruserroutingmodulets navigating user error happens expected behavior working well angular migrating angular issue happens minimal reproduction problem instructions simple reproduce add routes configuration routing modules files matters appapproutingmodulets appuseruserroutingmodulets appadminadminroutingmodulets motivation use case changing behavior working version angular please tell us environment macosx vscodewebstorm yarn angular cli angular version browser language typescript node aot issues", "num": "17307", "d": "6/2017"}, {"title": "docs rethink image lifecycle guide", "body": "submitting check one x current behavior picture lifecycle page raise questions answers could find explanation colors mean certain ones indented raises questions answers expected behavior remove image add clarifications also components directives mentioned iirc hooks work places", "num": "17298", "d": "6/2017"}, {"title": "validatoremail may need rework new universal email validator required", "body": "submitting x feature request current behavior create new email validator validates fqdn routable sense well expected behavior email validator finds root localhost invalid page google invalid validates page googlecom minimal reproduction problem instructions create minimal form add validatoremail synchronous validator motivationuse case changing behavior root localhost valid email address usage cases may require fqdn email validated please tell us environment ng angularcli node os darwin browser chrome note hope request close links issues raised current email validator true root localhost valid question however current email validator unusable accommodate need emails root localhost send email page google see larry going get address found message nt delivered page google domain google could nt found check typos unnecessary spaces try problem need checked first current validator therefore make form valid submittable even though probability email invalid statistically speaking perhaps need another validator sees page google invalid wo nt allow users send email recipient found feature request new email validator developers choice developers use existing validatorsemail perhaps simply use new let say validatorsroutableemail thx", "num": "17296", "d": "6/2017"}, {"title": "aot compilation using factoryprovider fails", "body": "submitting check one x current behavior using provide error aot compiler minimal reproduction problem instructions examples simplified inlined brevity indexeddbcache simple service factory unique parameter generates independent service previous iterations used isolated exports separate file inlined error explicitly mentions allowing lamda exported functions also looked aot donts writing explicit functions inlining variables error persists believe issue aot compilation angular version language typescript node aot issues", "num": "17295", "d": "6/2017"}, {"title": "parents ngmodel reset using custom value accessors", "body": "submitting check one x current behavior take following multiple nested reusable components reusable component custom value accessor defined pass element input element changed example components receive correct flags three levels also called model di via decorator example none parents notified reset property model question suddenly example component class viewchild ngmodel myinputmodel ngmodel ngmodel input element child nestedcmp doreset void thismyinputmodelreset original value example reset ie input set back host parent remains dirty expected behavior parent components called restored states minimal reproduction problem instructions full reproduction comments thread motivation use case changing behavior creating custom components taking advantage twowaybinding without forms please tell us environment angular version browser chrome language typescript", "num": "17294", "d": "6/2017"}, {"title": "feature request component based router configuration", "body": "refactoring hero app move one component everything appcomponent shell performs routing sub components would nice able configure router within constructor appcomponent eliminating need another module file nt really need refactoring suggests moving routing dedicated routing module appcomponent shell feels based description like natural home would also complement approach suggested", "num": "17292", "d": "6/2017"}, {"title": "router service instances registered multiple times lazyloaded module different url", "body": "x bug report versions angularcli node os angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularanimations angularcli angularcompilercli node npm windows repro steps lazyloaded module multiple paths example instances example effects instanced times uniqueness identity module propably identified path desired functionality identity module injectables identified path comment need path module wo nt change behavior use multiple path lazyloaded module required especially module shoudl default path like example", "num": "17288", "d": "6/2017"}, {"title": "dynamically module loader", "body": "submitting check one x current behavior bug feature know possible right want include modulecomponent defined manually implement parent principal module normal expected behavior would like include modules like plugins would like angular scan one folder add modules dynamically know possible angular core npm module custom implementation minimal reproduction problem instructions motivation use case changing behavior would like feature modular powerful application please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17287", "d": "6/2017"}, {"title": "httpget working angular", "body": "http api request working angular checked api server things api triggered tried api angular working fine import component angularcore import http angular import rxjsaddoperatormap component moduleid moduleid selector app templateurl appcomponenthtml export class appcomponent constructor map res gt consolelog resjson subscribe res gt consolelog res", "num": "17286", "d": "6/2017"}, {"title": "routeroutlet inside root routed component host element svg", "body": "hi everybody first time reporting bug asking feature un github kind x bug report x feature request support request current behavior parent template defining root svg tag routed component template looks like routed component host define belonging svg namespace tried component selector property avail reference following nt work note using render properly expected since svg valid html namespace might useful others similar problem different requirements unfortunately nt cut need parent svg root svg routed component expected behavior ideally would nice able prefix component selector tried even better would property component decorator tell angular namespace host element supposed belong currently selector svg g myattrselector gets parsed rendered angular g tag completely cleaning prefix g tag svg element thus none content rendered minimal reproduction problem instructions simply drop routeroutlet inside svg tags route child component svg template work unless child component host svg motivation use case changing behaviour able use power angularrouter anywhere app seems pretty compelling details implementation requirements kind irrelevant let mention workarounds found messy inelegant overall create complexity code routeroutlet would much better please tell us environment mac osx el capitan angular version browser chrome latest language node aot issues", "num": "17285", "d": "6/2017"}, {"title": "html sanitize keep style attribute", "body": "html sanitize keep style attribute html content generated html rich editor contain inline style", "num": "17284", "d": "6/2017"}, {"title": "docs server misspelled visual studio quickstart", "body": "traverse mentioned location find server misspelled marked bold visual studio quickstart step build run app apps use routing likely get page found response serer address indexhtml", "num": "17283", "d": "6/2017"}, {"title": "angularclijson documentation poor", "body": "submitting check one x current behavior utilities provided angularclijson elaborated expected behavior expect everything angularclijson configured automatically widely documented currently minimal reproduction problem instructions check boilerplate project tour heroes observe angularclijson undocumented behavior motivation use case changing behavior please document share configurations happening using angularclijson please tell us environment windows angular version angular browser language typescript node aot issues", "num": "17277", "d": "6/2017"}, {"title": "ngclass conditions", "body": "submitting check one x current behavior using ngclass directive conditions seems similar class used removed first condition true consider following code display standard bootstrap alert server online offline expected behavior expected result result missing class alert ok minimal reproduction problem instructions pushing test far every similar class existing condition removed first condition true sake demonstration result class ok please tell us environment macosx angular version browser language typescript thank review arnaud", "num": "17274", "d": "6/2017"}, {"title": "ng test errors really", "body": "love diaspora cli tools use get something running tell angularclijson run everything works need add plugin suddenly plugins needed", "num": "17273", "d": "6/2017"}, {"title": "change name indexhtml", "body": "hi beginner angular using angular want change name indexhtml aadminhtml unfortunately get error get change file name angular thanks advance", "num": "17272", "d": "6/2017"}, {"title": "aio add toc resources", "body": "original dancing toc removed substantial part conflicted overall toc strategy resources page dynamically generated content evades standard toc generation want toc generate easily need work details stakeholder", "num": "17271", "d": "6/2017"}, {"title": "aio invisible toc page", "body": "invisible toc page get rid", "num": "17270", "d": "6/2017"}, {"title": "aio docs landing page need rewrite first box", "body": "first box change says opens quickstart plunker quite simple definitely experience angular", "num": "17269", "d": "6/2017"}, {"title": "aio home page link quickstart also tutorial", "body": "need make decision whether want keep remove one", "num": "17268", "d": "6/2017"}, {"title": "feature request recursive component discovery injection", "body": "right need import components module declarations array would great could substitute declaring component children directly component suppose creating delegates children creating iterating import child components either npm nodemodules relative location automatically discovered injected container meta data automatically generated within directly import file instead level eliminate declarations array think cascade requirements explicitly import things like inside component routing think good thing", "num": "17267", "d": "6/2017"}, {"title": "aio glossary definitions reformat", "body": "glossary definitions currently formatted subsections light blue box heavy left blue bar let pick something less distracting", "num": "17265", "d": "6/2017"}, {"title": "aio shrink oversized image security page", "body": "fix absurdly sized graphic", "num": "17263", "d": "6/2017"}, {"title": "aio update browser compat guide android nougat", "body": "see", "num": "17262", "d": "6/2017"}, {"title": "routing nt destroy components properly", "body": "submitting check one x current behavior navigating components nt get destroyed properly reference navigated component children still memory expected behavior components nt memory destroyed minimal reproduction problem instructions ppreview open plunker click launch preview separate window click button open devtools go memory tab take heap snapshot search see still references two mychild please tell us environment angular version browser language typescript", "num": "17261", "d": "6/2017"}, {"title": "aio fix ts js example tabs", "body": "code example tab javascript decorators abbreviated javascript widest screen widths either fix implementation code tabs shorten titles latter would easier two suggested tab title approaches retitle one tab change one tab decorators leave others alone retitle tabs follows typescript decorators", "num": "17260", "d": "6/2017"}, {"title": "aio upgrade guide titles confusing", "body": "two guides upgrading address angularjs angular valuable cover different aspects effort angularjs angular describes make conceptual connections two products someone knows angularjs better understand continuities learning angular upgrading angularjs ngupgrade features issue asks us create clearer titles docs make distinction purpose evident introductions guides step done release", "num": "17259", "d": "6/2017"}, {"title": "search results prioritized currently selected language", "body": "go docs go search box type notice first result version default end js docs case searching likely highly sought docs page land page says yet available javascript checking little appears js version always comes corresponding ts version ideally version language selected show add toggle switch also show versions sure ts version prioritized js version", "num": "17258", "d": "6/2017"}, {"title": "aio table border formats inconsistent", "body": "text table borders inconsistent header cells separating left border body cells preference would eliminate inner border headers", "num": "17256", "d": "6/2017"}, {"title": "aio odd formatting module info api page", "body": "text api pages left justified modulepackage info centered within outline box faint read many screens seems easy fix release could punt necessary", "num": "17254", "d": "6/2017"}, {"title": "aio sidenav headers close viewing api pages", "body": "currently select doc page app closes headers nonselected items consistency happen api pages seen snapshot", "num": "17253", "d": "6/2017"}, {"title": "aio sidenav text little contrast", "body": "doc items main culprit seen screen shot need consult sutton", "num": "17252", "d": "6/2017"}, {"title": "api results cols wide", "body": "display two columns results screen wide long items may overlap next column seen screen shots browser wide overlap issue also raised", "num": "17251", "d": "6/2017"}, {"title": "aio api list columns overlap", "body": "submitting check one x current behavior api list items lay expected behavior api items lay top legible minimal reproduction problem instructions", "num": "17250", "d": "6/2017"}, {"title": "aio docs homepage sidenav close nicely", "body": "submitting check one x current behavior going docs home open sidenav sidenav close nicely appears top toolbar transitions expected behavior smoother transition minimal reproduction problem instructions click click angular logo home link", "num": "17248", "d": "6/2017"}, {"title": "aio code copy button overlays code", "body": "example annoying nt block first release doc viewer imo", "num": "17247", "d": "6/2017"}, {"title": "aio fix code snippet colors ward", "body": "code snippet colors make sense worst problem real code colored comments comments colored gray small example", "num": "17246", "d": "6/2017"}, {"title": "aio sidenav menu groups close automatically wide display", "body": "submitting check one x current behavior sidenav menu group collapses user selects men u item outside selected sidenav group menu item expected behavior sidenav groups collapse unless user collapses menu item per igorminar minimal reproduction problem instructions wide mode sidenav click tutorial gt introduction sidenav click fundamentals gt animations", "num": "17245", "d": "6/2017"}, {"title": "aio remove anchors change headers divs spans contribute page", "body": "submitting check one x current behavior headers subsections display anchor icons hovered upon expected behavior icons upon hovering subsections elements minimal reproduction problem instructions", "num": "17244", "d": "6/2017"}, {"title": "use boolean naming convention environment property", "body": "submitting check one x current behavior default generated project environment variable named without common boolean convention prefixing current default generated code sample expected behavior prefixing like minimal reproduction problem instructions motivation use case changing behavior wellknown established naming convention aids identification proper use please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues na", "num": "17241", "d": "6/2017"}, {"title": "changing css dynamically without reloading page", "body": "side navigation bar wherein progress bar nav modular structure mainfile progressindicator progressindicatorhtml progressindicatorcomponentts mainhtml maincomponentts inside progressindicatorhtml code progressindicatorcomponentts successfully getting current page based current page want change width div class progressbar used ngstyle width getprogress takes effect page reloads spa nt happen help finding better way move getprogress takes effect changes style", "num": "17240", "d": "6/2017"}, {"title": "bug animations animating translation work ie edge percentages", "body": "submitting check one x current behavior ie edge using animations api translating element transition animated expected behavior translation animated smoothly minimal reproduction problem instructions please tell us environment windows angular version browser ie edge language typescript", "num": "17239", "d": "6/2017"}, {"title": "ngfor unable detect changes string array execution ngondestroy child component", "body": "nt know logs ie string array printing value destroy child list item string array prints correctly destroy child means value inserted array reason printing plz explain totally confused link example open link run appcomponentts childcomponentts output methods executed", "num": "17237", "d": "6/2017"}, {"title": "kairata", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17235", "d": "6/2017"}, {"title": "search results contain odd ellipses middle result list", "body": "", "num": "17233", "d": "6/2017"}, {"title": "contribute content incorrectly migrated contains code snippets instead html", "body": "", "num": "17232", "d": "6/2017"}, {"title": "presskit contribute similar headers events", "body": "similar", "num": "17231", "d": "6/2017"}, {"title": "homepage headline newsblurb needs updated", "body": "currently mentions release replace something newer juleskremer", "num": "17230", "d": "6/2017"}, {"title": "needs content refresh", "body": "current content outdated juleskremer collecting bio info team need get site juleskremer share instructions get updated content", "num": "17229", "d": "6/2017"}, {"title": "events needs content refresh", "body": "current content outdated", "num": "17228", "d": "6/2017"}, {"title": "docs landing page one action per box", "body": "middle get going angular box one action item quickstart styled clickable like two boxes", "num": "17227", "d": "6/2017"}, {"title": "clicking toc scroll way top", "body": "clicking nt scroll high enough right nt show header merged makes header sticky scroll high enough leave header", "num": "17226", "d": "6/2017"}, {"title": "aio features page header like marketing pages", "body": "", "num": "17225", "d": "6/2017"}, {"title": "exception message help find error exception uncaught promise error error caused read property operation undefined", "body": "bugreport environment angular installed seedsample build time node npm browsers edge chrome typescript using seedsample generate os windows simply redeployed app today got following message exception uncaught promise error error caused read property operation undefined idea appreciated thanks", "num": "17224", "d": "6/2017"}, {"title": "routing issue", "body": "submitting check one x current behavior lazyloading routing address behaving properlyfor example lazy loading module route admin component work base address admin childcomponent working also childcomponent expected behavior without bug childcomponent must work minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows vscode git angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "17223", "d": "6/2017"}, {"title": "aio update toc section divider line start initial bullet end final bullet", "body": "submitting check one x current behavior divider extends beyond first last bullets section divider expected behavior toc section divider start first bullet end last bullet minimal reproduction problem instructions example", "num": "17221", "d": "6/2017"}, {"title": "aio toc jumps items scroll fast provide cleaner transition", "body": "nice submitting check one x current behavior toc jumps items scroll fast page visual indicator sections passed user stops scrolling expected behavior provide smooth transition toc items user scrolls page sections minimal reproduction problem instructions example scroll fast stop", "num": "17220", "d": "6/2017"}, {"title": "aio toc active place highlight upon landing page", "body": "submitting check one x current behavior active table content item highlight scroll event occurs upon initial load page upon scroll expected behavior initial section highlighted visually immediately upon landing page minimal reproduction problem instructions example scroll see toc title header setup local development light upon scroll scroll see toc title header longer visually identified active", "num": "17219", "d": "6/2017"}, {"title": "aoi review revise contrast sidenav menu items accessibility", "body": "contrast may low meet minimum accessibility requirements reported wardbell expected behavior contrast meet minimum accessibility requirements minimal reproduction problem instructions go open sidenav drawer view font color sidenav menu items", "num": "17218", "d": "6/2017"}, {"title": "aoi tabbed code block style updates", "body": "submitting check one x current behavior tabs feel bare code blocks relative title code block sections expected behavior add defined visual styles match titled code block sections minimal reproduction problem instructions go scroll code files section", "num": "17217", "d": "6/2017"}, {"title": "aio topnav item focus active working properly", "body": "reference submitting check one x current behavior focus jumps docs navitem topnav toolbar instead active item happens click docs topnav item expected behavior focus stay relevant active item instead jumping back docs regardless page minimal reproduction problem instructions navigate add focus style navigate click docs menu item header click features menu item", "num": "17216", "d": "6/2017"}, {"title": "aio animate hamburger menu docs page", "body": "submitting check one x current behavior topnav menu changes hamburger menu displaying abrupt compared sidenav slide animation initial arrival docs page expected behavior add smoother transition hamburger icon minimal reproduction problem instructions motivation use case changing behavior home page go docs page see hamburger menu sidenav transition page", "num": "17215", "d": "6/2017"}, {"title": "aio revise learn button remove arrow", "body": "submitting check one x current behavior arrow hover learn button home page glitchy changes container size upon initial hover expected behavior remove arrow revise transition", "num": "17214", "d": "6/2017"}, {"title": "aio get started button home page centered", "body": "submitting check one x current behavior get started button home page centered expected behavior center button text vertically inside button", "num": "17213", "d": "6/2017"}, {"title": "import jqueryminjs using angular clijson", "body": "added minjs angular cli json file like styles stylescss nodemodulesfontawesomescssfontawesomescss see follow errors run ng serve command warning rawloader sourcemaploader srcassetspluginsmetismenumetismenuminjs find sourcemap metismenujsmap error ca nt resolve metismenujsmap c trainccportalclientsrcassetspluginsmetismenu scriptloader srcassetspluginsmetismenumetismenuminjs multi scriptloader srcassetsjscustomjs scriptloader scriptloader srcassetspluginschartjschartminjs scriptloader srcassetspluginsjqueryjqueryminjs scriptloader srcassetspluginsmetismenumetismenuminjs scriptloader srcassetspluginsbootstrapjsbootstrapminjs scriptloader srcassetspluginsslimscrolljqueryslimscrollminjs scriptloader jquerydistjqueryminjs scriptloader sortablejssortablejs scriptloader chartjsdistchartbundleminjs scriptloader easypiechartdisteasypiechartjs warning rawloader sourcemaploader srcassetspluginsjqueryjqueryminjs find sourcemap jqueryminmap error ca nt resolve jqueryminmap c trainccportalclientsrcassetspluginsjquery scriptloader srcassetspluginsjqueryjqueryminjs multi scriptloader srcassetsjscustomjs scriptloader scriptloader srcassetspluginschartjschartminjs scriptloader srcassetspluginsjqueryjqueryminjs scriptloader srcassetspluginsmetismenumetismenuminjs scriptloader srcassetspluginsbootstrapjsbootstrapminjs scriptloader srcassetspluginsslimscrolljqueryslimscrollminjs scriptloader jquerydistjqueryminjs scriptloader sortablejssortablejs scriptloader chartjsdistchartbundleminjs scriptloader easypiechartdisteasypiechartjs webpack compiled warnings fix", "num": "17208", "d": "6/2017"}, {"title": "docs docheck api documentation incorrect information", "body": "current behavior go read part says note directive implement docheck onchanges time ngonchanges would called directive implements docheck expected behavior onchanges oninit implemented angular call apis motivation use case changing behavior documentation match actual behavior angular please tell us environment linux chrome angular version browser language", "num": "17206", "d": "6/2017"}, {"title": "aio content container expand toc present", "body": "submitting check one x current behavior content container mdsidenavcontainersidenavcontainer expand beyond toc present creates extra unwanted white space expected behavior content container dynamically expand toc present", "num": "17205", "d": "6/2017"}, {"title": "aot build add option minify html templates building", "body": "submitting check one x hi would nice compiler minify html template generating factory files reduce app size current behavior generated factory file contains lot unnecessary content spaces n comments related", "num": "17204", "d": "6/2017"}, {"title": "min max directives accept decimal values integers", "body": "submitting check one x current behavior min max directives allowing validate input min max value accept integer value attribute value parsed int using expected behavior would expect accept number including decimal numbers imagine scientific mathoriented applications number lets say minimal reproduction problem instructions reproduction code source pretty clear motivation use case changing behavior sometimes decimal numbers must entered form decimal number properly validated min max value min max value must integers seems like unnecessary restriction please tell us environment angular version browser language", "num": "17203", "d": "6/2017"}, {"title": "provide way remove specific parameter query string", "body": "submitting check one x current behavior way remove parameters query string navigating motivation use case changing behavior imagine global filter affects content pages set eg start date filter query string changed reflect change remove corresponding parameter removed query string currently add new query parameter would helpful also could remove something like angular version", "num": "17202", "d": "6/2017"}, {"title": "date pipe work well costum format without day", "body": "submitting check one x current behavior date pipe format mmy mmyyyy part dates month display like ex expected behavior get right date minimal reproduction problem instructions date instead getting im getting instead im getting date example display well motivation use case changing behavior im using format alot please tell us environment http server angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "17200", "d": "6/2017"}, {"title": "error callback formgroupsetvalue", "body": "submitting check one x current behavior error call back expected behavior error call back minimal reproduction problem instructions strict check provided key value pairs fails setvalue throws error motivation use case changing behavior handling errors case strict check method fails failure case check fails expected conventional behaviour method angular version", "num": "17198", "d": "6/2017"}, {"title": "error messages rearly direct either cause way solve problem", "body": "submitting check one x current behavior following angularjs angular upgrade tutorial run mistakes made expect learning new technology error messages see devtools console far clearly explaining possible cause error might go solving error example forget declare angular component used angularjs section ngmodule unhandled promise rejection component phonelistcomponent part ngmodule module imported module zone task promisethen value error component phonelistcomponent part ngmodule module imported module jitcompilercreatecompiledhosttemplate eval arrayforeach native eval arrayforeach native jitcompilercompilecomponents createresult zonedelegateinvoke zonerun error component phonelistcomponent part ngmodule module imported module jitcompilercreatecompiledhosttemplate eval arrayforeach native eval arrayforeach native jitcompilercompilecomponents createresult zonedelegateinvoke zonerun apionunhandlederror handleunhandledrejection apimicrotaskdraindone drainmicrotaskqueue zonetaskinvoke example replace ngresource angular http covert observable return httpget promise rxjs naive upgrade leaving controller template used example replace ngresource angular http replace method result promise observable lots examples also unclear messages typescript compiler belong different issues different repository expected behavior would great error messages informative possible cause problem possible ways solve example instance direct possible issue ngmodule nt say anything adding link details online might good way help find possible solutions think looking elm error messages good direction work toward minimal reproduction problem instructions written several examples glad push complete repos required motivation use case changing behavior developers run errors time one hardest barrires entry framework working learn upgrade angularjs angular find develop strong intuition error messages actually means even get things working start try remove change things way assume happen see kind errors produces clear error messages help focus development instead guesswork around cause solution error angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade", "num": "17197", "d": "6/2017"}, {"title": "return value using keyword constructor", "body": "submitting check one x current behavior using formgroupget constructor returns value expected behavior return value constructor exist", "num": "17195", "d": "6/2017"}, {"title": "throw error infinite reusable animation loops encountered", "body": "get idea", "num": "17193", "d": "6/2017"}, {"title": "async test zone fixturewhenstable supports click onreadystatechange click onload", "body": "summary async test zone component triggers xmlhttprequest click fixturewhenstable works expected xmlhttprequest onreadystatechange event xmlhttprequest onload event notably means httpmodule nt work expected async test zones see plnkr current behavior onreadystatechange event indicating response received fired fixturewhenstable able make assertions based behavior event handler onload event indicating response received fired fixturewhenstable unable make assertions based behavior event handler obvious looking consolelog statements plnkr see click whenstable xhr event handler instead click xhr eventhandler whenstable expected behavior expect xmlhttprequest onload behavior onreadystatechange fixturewhenstable let make assertions around behavior event handler minimal reproduction problem instructions steps reproduce note apparently relevant xmlhttprequest triggered click xmlhttprequest fires part constructor correct behavior observed also produce correct behavior triggering click inside separate async test zone beforeeach nt know zonejs well enough know means anything motivation use case changing behavior want use httpmodule occasionally make real requests component testing please tell us environment tested mac using chrome angular version", "num": "17192", "d": "6/2017"}, {"title": "calling ngformresetform assigning values second time form fields remain blank", "body": "submitting check one x current behavior calling ngformresetform reset touched dirty form submitted properties assigning values modelbound properties values appear form fields immediately done second time form fields blanked expected behavior values appear form fields minimal reproduction problem instructions button form bound press button first time form touched dirty submitted properties reset firstname field shows john immediately press button second time firstname field blanked press load button twice first time successfully loads data form second time subsequent times form blanked motivation use case changing behavior designing form user selects record edit may middle editing one record decide abandon begin editing another record resetform clear validation errors update model record chosen please tell us environment angular version browser chrome ie edge language", "num": "17191", "d": "6/2017"}, {"title": "testing services imported complaining provided", "body": "submitting check one x current behavior component used inject service removed injection service longer component code however using test runner complains lack provision said service expected behavior services injected cause complaints testing service minimal reproduction problem instructions create component inject service remove service injection motivation use case changing behavior provide services consumed please tell us environment angularcli node npm os macos ide vs code angularanimations angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularcli angularcompilercli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "17190", "d": "6/2017"}, {"title": "feature request provide default constructor injection without configuration boilerplate", "body": "component injects service default angular bootstrapping di factory automatically create inject service singleton without configuration words nt tell angular needs create tododataservice singleton automatically based decorators finds application code designer needs override works spring currently", "num": "17188", "d": "6/2017"}, {"title": "sidenav material component library broken", "body": "submitting check one x current behavior example broken documentation expected behavior work minimal reproduction problem instructions motivation use case changing behavior please tell us environment chrome bit latest windows enterprise angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17187", "d": "6/2017"}, {"title": "router lazyloading loads unwanted code parent path nodes", "body": "submitting check one x current behavior imagine route configuration like user navigates directly foobarbaz router lazyload ui modules baz page actually view also lazyload ui modules foo becomes pathological number path segments grows cause performance issues unneeded code downloaded browser unused route resolves performed expected behavior case want able load code page actually view might make sense make behavior configurable particularly route resolves example one might want path resource resourceidsubpath able inherit resource resolver parent node minimal reproduction problem instructions download run npm start navigate observe teamlist code downloaded well motivation use case changing behavior performance", "num": "17183", "d": "6/2017"}, {"title": "providers necessary constructor dependency injection", "body": "going todo tutorial following iiuc declare array could angular di read metadata constructor correspondingly see component needs providers array seems redundant", "num": "17182", "d": "6/2017"}, {"title": "feat add bracket access safe navigation operator", "body": "submitting check one x safe navigation operator great would even better also supported bracket notation first mentioned nt get traction", "num": "17181", "d": "6/2017"}, {"title": "platformserver consolelog certain lifecycle hooks could cause infinite loop since results microtask nodejs ngafterviewchecked causes infinite loop", "body": "submitting check one x current behavior adding even blank component causes infinite loop serverrender timesout expected behavior let zone stabilize render application minimal reproduction problem instructions branch see addition motivation use case changing behavior lifecycle hooks fix please tell us environment happens nodeexpress also aspnet corenode angular version node aot issues version tested cc alxhub vikerman", "num": "17180", "d": "6/2017"}, {"title": "add line numbers file name error assign reference variable", "body": "submitting check one x current behavior getting error assign reference variable error consists line number file following error entire module failing resolved error occurs runtime instead giving stack trace points expected behavior getting error assign reference variable file line number associated error least including component name error would suffice case minimal reproduction problem instructions plunker link error shows console nt point source problem motivation use case changing behavior errors point towards thing caused error especially useful since pretty sure error many places please tell us environment angular version browser language typescript node aot issues", "num": "17179", "d": "6/2017"}, {"title": "patchvalue nested formbuilder", "body": "hello problem patchvalue nested form layout form thisaddaccform thisfbgroup accid validatorsrequired status cyc thisfbarray thisinitcyc initcyc return thisfbgroup cycid validatorsrequired name validatorsrequired description validatorsrequired status validatorsrequired det thisfbgroup dcycid validatorsrequired status validatorsrequired tried set value help need also change dcycid control idea perform", "num": "17178", "d": "6/2017"}, {"title": "insertbefore appendchild", "body": "submitting check one x current behavior something like platformserver server rendering script tag inserted end head script tags document expected behavior put script tag right top head section document minimal reproduction problem instructions open editor add script tag line head look html source see inline preboot javascript injected script tag head instead see insertbefore called motivation use case changing behavior general important works properly need injected inline javascript must run javascript tags head section document please tell us environment mac angular version browser chrome language typescript node aot issues", "num": "17177", "d": "6/2017"}, {"title": "bad", "body": "sorry", "num": "17175", "d": "6/2017"}, {"title": "nt load npm installed firebase", "body": "submitting check one x current behavior attempting use npm installed firebase app npm installed latest version firebase version checked installed correctly input following code import component oninit angularcore import initializeapp database firebase component selector dinstructapp styleurls appcomponentcss template export class appcomponent implements oninit title dinstruct config apikey authdomain databaseurl projectid storagebucket messagingsenderid ngoninit void initializeapp thisconfig database ref value snapshot gt consolelog snapshotval however attempt load app firebase code place fails errors expected behavior app load firebase code place minimal reproduction problem instructions see steps taken prior bug occurrence aware way recreate npm installs via plunker motivation use case changing behavior would like able use npm installed firebase app please tell us environment ubuntu atom npm ng serve angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "17174", "d": "6/2017"}, {"title": "dynamicallyprogrammatically add new named router outlets template", "body": "submitting check one x current behavior simple solution workaround add new named runtime motivation use case changing behavior use case need dinamically display modules needs router runtime clue many modules need added imagine something like pluggable framework found solution inject tag using issues attribute managed fix making directive good longterm solution need binding way programatically set name created would lovely maybe instead could something take string property instead string literal note sure duplicate need set created insted would imply binding would work", "num": "17173", "d": "6/2017"}, {"title": "component input trackby default array trackby", "body": "current behavior adding deleting array causes change component input expected behavior would expect child updated array changes content minimal reproduction problem instructions obvious motivation use case changing behavior user experience ease framework use animation purposes performance purposes desirable add remove array component input update rather copy whole array new array splice hack like input trackby modellength value model intuitive expect component input update content changing lead head scratching someone new framework also developer splice get input recognize change array content lead head scratchers animation issues performance loss ngfor loop templates reconstructed due whole array changing would suggest adding trackby feature components input addition checking input array type array type default trackby length array also default trackby would susceptible update every change detection since array length would assumed modified trackby feature component input useful arrays could nested objects imagine input objecta inputtrackby objectaobjectb angular version", "num": "17172", "d": "6/2017"}, {"title": "incorrect imports targeting using ngc ng", "body": "submitting check one x particular issue ramda believe could apply library provide typings add typings types current behavior setting target tsconfigappjson output code import statement ramda library incorrect import uniq ramdaindex expected behavior import statement output file import uniq ramda minimal reproduction problem instructions created new app using cli changing target tsconfigappjson file run npm run release buildappappcomponentjs file contains incorrect path ramda repo use easily reproduce issue motivation use case changing behavior creating library incorrect import statement would mean use library app fail tries resolve import please tell us environment macos sierra visual studio code npm angular version still issue browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser independent since build process language typescript xx typescript node aot issues", "num": "17171", "d": "6/2017"}, {"title": "animations animating current style state change regression", "body": "submitting current behavior changing animation state midflight another animation causes new animation play beginning current midflight style expected behavior state change animate currently applied stylesposition nt explicitly set starting style transition minimal reproduction problem instructions plunker instructions also see working behavior motivation use case changing behavior better user experience smoother animations restore behavior please tell us environment windows code yarn ng cli angular version browser tested chrome desktop ios safari language typescript node aot issues cc matsko", "num": "17170", "d": "6/2017"}, {"title": "underlying mechanism change detection ngzone", "body": "submitting check one x current behavior silly question exact way change detected angular tried check conflicting confusion response mixes change detection flow understanding change detection read places change detector object every component obj relays finished asynchronous actions onturndone event blog understanding change detection blog change detection explained b manual check viewstate currviewstate viewstatechecksenabled dirty checked listener blog change detection blog change detection angular understand tick applicationref triggered whats flow official document ngzone change detection related work understand might wrong place ask seems like option help welcome expected behavior na minimal reproduction problem instructions na motivation use case changing behavior understand right way change detection please tell us environment windows node angular angular version browser language typescript node aot issues v", "num": "17169", "d": "6/2017"}, {"title": "rootinjector append lazymodule entrycomponents feature request", "body": "submitting check one x bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior singleton service uses componentfactoryresolver provided app rootinjector dynamically create components wish create entrycomponent declared lazy module fail root injector know expected behavior actually expect behavior considering root injector know entrycomponents known child injector motivation use case changing behavior motivation leverage complexity create dynamic components though modular design angular correct angular version proposed solution even though goes modular design adopted angular think complexity provided create dynamic components could softened simply appending lazymodule entrycomponents rootinjector entrycomponents avoid flooding rootinjector whenever navigate destroys lazymodule previously injected entrycomponents would erased array simply talking page loaded rootinjector created issues navigation activates lazymodule childinjector created rootinjectorentrycomponentsappend childinjectorentrycomponents issues navigation somewhere else lazymodule longer necessary thus destroyed rootinjectorentrycomponentsdestroylastappendedentrycomponents hope could suggest something good thank", "num": "17168", "d": "6/2017"}, {"title": "change detection kicked times xmlhttprequest", "body": "angularcore zonejs fire change detection readystatechange events load event even listening load event looked seems something wrong xhr patch zonejs less likely ngzone issue repro angularhttp even plain xmlhttprequest object used follows switch using patched differently zonejs trigger one change detection", "num": "17167", "d": "6/2017"}, {"title": "build inline source maps", "body": "reported jasonaden could please take look cc filipesilva", "num": "17166", "d": "6/2017"}, {"title": "instantiating components programmatically nt instantiate possible matching directives", "body": "submitting x bug report feature request support request current behavior instantiating component viewcontainerrefcreatecomponent component selector also directives match component selector nt get instantiated expected behavior matching directives get instantiated along component instantiation minimal reproduction problem instructions plunk motivation use case changing behavior creating component template programmatically matter use case result outcome much possible although support explicitly applying custom set directives instantiated component working may complicated add support case component selector matches directives need handled specific use case encountered issue creating structural directive simply renders spinner condition true renders host element otherwise using mdprogressspinner component spinner stroke color applying theme related classes adding via directive exact selector component selector created simple plunk example please tell us environment related actually angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "17165", "d": "6/2017"}, {"title": "route animations query returns elements lazy loaded modules", "body": "submitting check one x current behavior try animate routes inside lazy loaded module query selector returns elements one problem leaving component killed early made workaround keeping components alive providing empty enter leave animations however query enter query leave still return elements query components names expected behavior query selector working properly lazy loaded modules query leave returns leaving component lazy loaded modules query enter return entering component lazy loaded modules minimal reproduction problem instructions motivation use case changing behavior keeping code clean please tell us environment windows webstorm angular angular cli angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome edge language typescript xx node aot issues", "num": "17164", "d": "6/2017"}, {"title": "codedrops double scroll feature jquery angular better way select elements dom events compared jquery", "body": "submitting check one x current behavior current behavior uses jquery since ported angular wondering better way select elements dom events example works wondering inherently something else make efficient design expected behavior one thing nt able set selected dom element variable would nt work confused case minimal reproduction problem instructions jquery example motivation use case changing behavior wanting know general good use cases element id selectors angular vs jquery angular version", "num": "17163", "d": "6/2017"}, {"title": "throws error", "body": "submitting check one x current behavior setting style child element native element error throw looking code writestyleattribute seem style value assign without checking field exists follow flow correctly usually added called thus maybe changing similar following sufficient addressing expected behavior able set style minimal reproduction problem instructions angular universal app create following component javascript import afterviewinit component elementref viewchild angularcore component selector approot template export class appcomponent implements afterviewinit viewchild container container elementref constructor private renderer ngafterviewinit void next line throw set property style undefined method thisrenderersetstyle thiscontainernativeelementchildren background red set property style undefined error raised thanks", "num": "17161", "d": "6/2017"}, {"title": "hammer gestures default prevent event propagation", "body": "submitting check one x current behavior binding gesture press pan etc default browser behaviour stopped regardless whether event propagation cancelled looking markup see touchaction css property set none causing issue expected behavior default browser behaviour continue event handler finished unless event cancelled ie eventpreventdefault means expect touchaction property set none unless eventpreventdefault called minimal reproduction problem instructions following plunker shows addition touchaction css property div swipe action means although expected function swipe called swipe hello angular text browser swipe scroll disabled motivation use case changing behavior current behaviour limits ability perform gestures conditionally ie variable set specific value browser default behaviour stopped please tell us environment windows npm package manager apache cordova environment running android device angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx running likely affects node aot issues node version", "num": "17159", "d": "6/2017"}, {"title": "docs dynamic component loading error loading adbannercomponentjs", "body": "submitting check one x current behavior tried run live example brakes downloaded archive ran localy issue error systemjs xhr error loading zonedelegateprototypeinvoketask zoneprototyperuntask zonetaskthisinvoke trace de la pile systemjs xhr error loading zonedelegateprototypeinvoketask zoneprototyperuntask zonetaskthisinvoke injected code angular project works partialy first ad displayed line update template data time expected behavior expect run display four adds minimal reproduction problem instructions check page url run live example downloadinstallrun motivation use case changing behavior please tell us environment windows wamp google crhome angular version check live example browser chrome language see live example", "num": "17158", "d": "6/2017"}, {"title": "angular google webcache", "body": "hi everyone issue website search console getting many soft links disappearing google results thinking maybe could reason happening stackoverflow idea abou could happening thanks advance best", "num": "17157", "d": "6/2017"}, {"title": "docs describe errorhandler guide api docs", "body": "submitting check one x current behavior single api spec page errorhandler expected behavior important topic probably either dedicated page tutorial entry cookbook angular version latest jun browser language node aot issues", "num": "17152", "d": "6/2017"}, {"title": "routing guard fire closing secondary route", "body": "submitting check one x current behavior guard fire closing secondary route opening secondary route correctly fires close route calling guard fire expected behavior would expect guard would fire closing route minimal reproduction problem instructions plunker steps reproduce motivation use case changing behavior need able hook secondary route closing please tell us environment macbook pro macos sierra vs code npm angular version browser language typescript node aot issues", "num": "17151", "d": "6/2017"}, {"body": "willseitz please take look fixed plunker nt need propagate change think always executed first time moment send null top model example", "d": "6/2017"}, {"body": "awesome code working thanks", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "closed", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "ericmartinezr per link provided also removed future think netanelbasal asking longterm solution", "d": "6/2017"}, {"body": "closing plan remove near future first deprecated time provide docs migration time later removed", "d": "6/2017"}, {"body": "specifically nt working getting error", "d": "6/2017"}, {"body": "case aot handle dynamic template based user privilege got thinking must resort using jit use better logic assigning template url partial view urlscshtml file const basepartialurl string urlaction findpartial apppartial findpartial map controller action aspnet mvc return partial view reference url component templateurl like const partialurl string basepartialurl id component selector xuicustomerviewwidget templateurl partialurl customertemplate export class customerviewwidget", "d": "6/2017"}, {"body": "typescripts stricter generic checks workaround disable adding tsconfigjson", "d": "6/2017"}, {"body": "incorrect issue title refer developers expect binding correct surprises use see perfect usecase generate dynamic classname runtime nt know class advance example attaching multiple classes everything else could solved within binding related issues found quickly", "d": "6/2017"}, {"body": "tytskyi updated typo title change ngclass everywhere shortly ngstyle thanks workarounds listed along bug report looked related issues listed top one closed mean already fixed wo nt fix top related issue mentions using ngclass class using ngclass repo think separate issue anyways precise case fails clearly bug debug code see adds class add remove list call ngclass", "d": "6/2017"}, {"body": "definitely bug iterable differ", "d": "6/2017"}, {"body": "vicb think right third item check took screen shot calls looks like record returning also used progress next record case causing record show added deleted could fix simple following record changed calls", "d": "6/2017"}, {"body": "updated repo show duplicated data using along output added removed list", "d": "6/2017"}, {"body": "thanks guys helping debugging issue really appreciated wizarrc fix probably along lines proposed double check tomorrow", "d": "6/2017"}, {"body": "vicb problem figure build system could test proposals submit prs best", "d": "6/2017"}, {"body": "probably looking", "d": "6/2017"}, {"body": "vicb pretty sure bash talk coming command prompt powershell scripts world nt suppose vanilla windows support building angular bash windows enabled default taking look right still kinda beta", "d": "6/2017"}, {"body": "getting topic like mention experience far build systems web include systemjs webpack appears angular entirely unique build system requires shell scripting missing something projects run npm run build npm run test example", "d": "6/2017"}, {"body": "agree current build system far ideal team working introducing bazel", "d": "6/2017"}, {"body": "vicb tried using bash shell comes installed part visual studio part git windows got weird errors prep instructions using windows tried npm install first bash client giving failed create symbolic link error script related error afterwards typed command supplied also gave errors update found instructions nt look docs folder might good idea link main page readmemd contributingmd file going give try", "d": "6/2017"}, {"body": "pr ready could please take look tell think", "d": "6/2017"}, {"body": "vicb lgtm think understand better differ works complicated data structure really break sometime need good puzzle", "d": "6/2017"}, {"body": "found workaround leads successful build ts export const mdtablabelbaseclass templateportaldirective used flag tab labels use portal directive directive selector mdtablabel mattablabel mdtablabel mattablabel export class mdtablabel extends mdtablabelbaseclass constructor templateref templateref viewcontainerref viewcontainerref super templateref viewcontainerref", "d": "6/2017"}, {"body": "issue include field considered flat module index causing compiler look symbols index include inherits directive inherits also directive even though file declare reason classes also reported fix artificially include field duplicates field similar fix needs", "d": "6/2017"}, {"body": "chuckjaz tried adding property metadata reexport file looks like export material read ngc link tries reexport individual material modules avoid kitchen sink modules also saw new metadata option called unfortunately able use option since support older ngc versions", "d": "6/2017"}, {"body": "devversion recommend avoid using redirect entirely intended used packages multiple entry points avoid directory way get want older version ngc intended solve issue", "d": "6/2017"}, {"body": "multiple entrypoints material eventually probably update regression blocking us suspect fixed", "d": "6/2017"}, {"body": "chuckjaz yeah would easier material follows structure every angular package unfortunately material ca nt another directory like like since would require us move lot files point asked iirc without extra directory would lot folders root release pretty dirty imo wish could actually use pattern directory apply solutions angular core applies upgrading recent version angular compiler cli amp tscwrapped would definitely beneficial", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "hello ericmartinezr reported angularissues described process working version dev mode", "d": "6/2017"}, {"body": "logo", "d": "6/2017"}, {"body": "angular logo inside example plunker sorry nt add details assigned nt forget", "d": "6/2017"}, {"body": "please take advantage markdown styling make request clearer code without code tag simply unreadable provide error server", "d": "6/2017"}, {"body": "also duplicate", "d": "6/2017"}, {"body": "error view source empty", "d": "6/2017"}, {"body": "ca nt see ssr local production router outlet empty", "d": "6/2017"}, {"body": "sorry mean see ssr local happening fails production", "d": "6/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "6/2017"}, {"body": "please refer", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "font used angulario roboto obviously problem sweatsmile font size fontweight normal font size styles looks fine", "d": "6/2017"}, {"body": "browser zoom turned", "d": "6/2017"}, {"body": "mohammed expecting answer like p well reporting like good samaritan whoever decide default zoom attaching screenshot looks faint hidpi well non hidpi screens idea weight light something image inline image thu jun pm oleksandr tytskyi wrote browser zoom turned receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "hi problem nt roboto font installed robotolight installed local machine problem needs fixed gets normal amp bold versions server nt installed best samir", "d": "6/2017"}, {"body": "wow would swear load roboto apparently nt definitely", "d": "6/2017"}, {"body": "maybe could ask question stackoverflow may see router options", "d": "6/2017"}, {"body": "thanks asked question stackoverflow nt solution link router var allroutes path home component dashboardcomponent path accounts loadchildren appcomponentsaccountaccountmodule accountmodule path component aboutcomponent path error component errorcomponent const routers path canactivatechild canactivatecustom children allroutes export const routing modulewithproviders routermoduleforroot routers", "d": "6/2017"}, {"body": "already defined path correctly anything take look make sure right template addressed open see error redirect also check compare code", "d": "6/2017"}, {"body": "yes want go router error occurs component class handle redirect page go another page nt error work although nt error data nt display work correctly reload page add set data homecomponent make work good idea component want another solution make component work used nt work solution thank much", "d": "6/2017"}, {"body": "problem even go directly browser mean open depends server settings press refresh see still get problem", "d": "6/2017"}, {"body": "yes always problem", "d": "6/2017"}, {"body": "error get console please let us see component", "d": "6/2017"}, {"body": "try getting wrong check whether working", "d": "6/2017"}, {"body": "sophianguyen solve problem might help easier see", "d": "6/2017"}, {"body": "actually problem go page error occurs app redirect page gt implementation myerrorhandler however go back another page data page nt show template show template without data whenever got error expect call myerrorhandler redirect error page back another pages home expected still works normal nt call detectchanges manual make work", "d": "6/2017"}, {"body": "sophianguyen okay please close issue solved", "d": "6/2017"}, {"body": "yet nt want call manual components expected work normal without call detectchanges whenever change data component please help", "d": "6/2017"}, {"body": "nt know help nt share codes need share code developers might able help", "d": "6/2017"}, {"body": "yes crreate one plunker share code", "d": "6/2017"}, {"body": "please view plunker flowing steps click home show dashboard text click error show error text gt work correctly click gt error occurs navigate error expected click home gt nt show dashboard text expected home page work normal show dashboard text", "d": "6/2017"}, {"body": "expected behavior xhr fetch ignore fragment part specific angular using fragment escaped stackoverflow question may help", "d": "6/2017"}, {"body": "manjureddys agree trotyl still believe angular problem try make xhr request using javascript something like jquery", "d": "6/2017"}, {"body": "agree nt aware thank trotyl help link", "d": "6/2017"}, {"body": "nt see behavior solved onpush simply make everything onpush scroll dose nt emit event makes ref change components cd run otherwise could also run scroll events outside angular zone bringing zone need angular run cd", "d": "6/2017"}, {"body": "toxicable two problems onpush library author ca nt force user wants use component use onpush still wants code perform great configuration change detection still occurs globally onpush benefit several shortcircuiting efforts example big user component parent handled event still needs entirely checked performance sensitive scroll event would otherwise bypassed child components might bypassed parent component might large user code may care performant controls happen share library component care library component scrolls buttery smooth especially older browsers dom manipulation expensive every cycle counts", "d": "6/2017"}, {"body": "toxicable feature request really library authors squeeze performance code hostile user environment ca nt control anyone using library listens events wo nt worry details wo nt know onpush still get high fps scrolling build components perform poorly point choose learn advanced platform features library author requires order use", "d": "6/2017"}, {"body": "otherwise could also run scroll events outside angular zone bringing zone need angular run cd toxicable problem running scroll event outside angular zone library author nt know changes made sideeffects needed get refreshed require make template invalidating changes need check changes want smart checking check far back sideeffects go back trigger event quick fix like getting parent component using injected component constructor wo nt good parent component also needs invalidated scanned changes way path might best approach make library author job require code smart instead work good possible given bad conditions", "d": "6/2017"}, {"body": "issue property htmlelement therefore treated property htmlelement giving one specific property specific microsyntax could cause confusion since property syntax inconsistent rest property bindings also situation go ahead argument allowing properties microsyntax aswell", "d": "6/2017"}, {"body": "record precision discussion seems property inherits element htmlelement another observation defined property returns event handler thus technically able use instead also situation go ahead argument allowing properties microsyntax aswell others would say simply worth trying promote special level unique multivalued nature property reason nt need special syntax id already use simple effective enough also one name used allows list values src effective enough something allows one value style used often anyway thus discouraging usage good property probably fall reason attributes allow single values different allows list values say dynamical property others also allows list classes believe would simplify lot inputting list classes based condition taking advantage building angular apps together proper css frameworks another advantageous scenario different sets classes easily done different conditions case would additive supposing truthy would major reason avoiding cluttering html trying simplify current syntaxes available class binding", "d": "6/2017"}, {"body": "provided stack overflow question large amount code show issue isolation also reproducible code could please provide minimal reproduction template get started", "d": "6/2017"}, {"body": "deploying app qa allowing reproduce live advisable would like try create sample app reproduce issue let know refactor chunk code isolate problem sorry delay", "d": "6/2017"}, {"body": "simple reproduce issue long time people tried inject kind things services getting error see time attempt allow things injected services ended nothing sadly", "d": "6/2017"}, {"body": "ericmartinezr thank answer current best practice sort thing angular", "d": "6/2017"}, {"body": "think passing reference service something like thing come saying best practice would like know pawel answer last comment issue would nice retake issue guess cc pkozlowskiopensource thought p", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "ericmartinezr definitely necessary polyfills installed close issue though found problem caused ngxcharts find issue ngxcharts github edit actually sure issue falls error coming containselement function angular animations seeing downgrading angular version fix issue", "d": "6/2017"}, {"body": "go stackoverflow gitter github issues nt right place ask sort question good luck finding answer", "d": "6/2017"}, {"body": "saying utility support converting noncli project using cli", "d": "6/2017"}, {"body": "yes looks like historically ng init command think learning angular used ng cli ng test rather npm test seems intuitive run commands ng test also seems far faster npm test would also add packagejson file test script karmaconfjs project never get project play ball even converted project use one instructions able load within chrome would nt work either whole section needs overhaul make beginner friendly", "d": "6/2017"}, {"body": "documentation really giving good enough explanation least actual purpose behavior would indeed nice know reasoning around", "d": "6/2017"}, {"body": "resolving path names nt gon na work another solution would document limitations aforementioned aot docs docs end user expected allow arbitrary placement output", "d": "6/2017"}, {"body": "issue reported someone else stackoverflow", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "dup", "d": "6/2017"}, {"body": "figured issue angularanimations upgradable angularcore removed angularanimations dependencies angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular", "d": "6/2017"}, {"body": "gotcha include polyfill support safari browser mac works like charm", "d": "6/2017"}, {"body": "included html header file load like normal js file sent android phone please excuse brevityon pm bankotigaurav notifications githubcom wrote code working n chrome even included webanimationsminjs polyfillts file receiving modified openclose statereply email directly view github mute thread", "d": "6/2017"}, {"body": "also check ur chrome browser developer tools file loaded beginning sent android phone please excuse brevityon pm bankotigaurav notifications githubcom wrote code working n chrome even included webanimationsminjs polyfillts file receiving modified openclose statereply email directly view github mute thread", "d": "6/2017"}, {"body": "yes seen file loading beginning written indexhtml animation still working", "d": "6/2017"}, {"body": "exact problem", "d": "6/2017"}, {"body": "started happening", "d": "6/2017"}, {"body": "problem", "d": "6/2017"}, {"body": "set typescript version typescript instead letting upgrade built successfully might work guys", "d": "6/2017"}, {"body": "typescript packagejson still throwig error", "d": "6/2017"}, {"body": "compiled aot successfully hour ago angular tried upgrade error happened reverted back since nothing seems working tried reinstalling npm node typescript webpack cleaning npm cache reinstalling global npm modules nothing", "d": "6/2017"}, {"body": "issue typescript version already set", "d": "6/2017"}, {"body": "make typescript version fixed errors", "d": "6/2017"}, {"body": "bad typescript version set changed straight works", "d": "6/2017"}, {"body": "setting version works make sure typescript module packagejson confirms version", "d": "6/2017"}, {"body": "thanks lot typescript set worked", "d": "6/2017"}, {"body": "yes reverting typescript allowed build complete us well", "d": "6/2017"}, {"body": "working thanks much keep open everyone knows typescript fixed", "d": "6/2017"}, {"body": "fyi rxjs issue filed tracking", "d": "6/2017"}, {"body": "using yarn npm make sure lock file nt entry typescript override manually installing older version", "d": "6/2017"}, {"body": "works", "d": "6/2017"}, {"body": "fyi typescript follow semver breaking changes almost every release", "d": "6/2017"}, {"body": "could possible typescript set worked", "d": "6/2017"}, {"body": "staying interim measure ca nt stay forever use subject call asks observable throws error solve need convert explicitly change wait rxjs fix rxjs add typescript dependency anyway think nothing angular", "d": "6/2017"}, {"body": "manually adjusting typescript typescript worked", "d": "6/2017"}, {"body": "found way keep typescript application still including rxjs rxjs issue mentioned also mentioned compiler option tested latest typescript works tsconfigjson much amenable get betterstricter type checking app code file issue project wait rxjs issue resolved removing option seems like best way imo ymmv nt directly use observables app code yet app compiler error rxjs library project code uses type compiler errors application code rxjs code fix work ca nt skip code type checking solution kind project go typescript", "d": "6/2017"}, {"body": "changed packagejson version rerun npm install worked thanks info", "d": "6/2017"}, {"body": "packagejson devdependencies changed typscript works got error building atlassian bamboo development environment got error", "d": "6/2017"}, {"body": "much better solution rolling back works perfectly fine", "d": "6/2017"}, {"body": "think would better uptodate typescript version almost comments suggest removing quote however fixing version worked smoothly merely change quote workarounds headaches cheers", "d": "6/2017"}, {"body": "nt able use like mentioned locking watch space developments rxjs patches etc", "d": "6/2017"}, {"body": "error watching updates", "d": "6/2017"}, {"body": "reported problem typescript github page skiplibcheck fix last night", "d": "6/2017"}, {"body": "stolen tsc option works think targeted add tsconfig compile options", "d": "6/2017"}, {"body": "rfuhrer tsc option nostrictgenericchecks works think targeted necessarily may focusedtargeted terms checking code instead ignoring libs losing new strict generic checks application code either way skipping lib check dropping strict generic check going lose value compiler much prefer drop value libraries care correctness code within domain application library author deal type errors", "d": "6/2017"}, {"body": "true currently nt generics project libraries works well fix pointing might effect people using generics code", "d": "6/2017"}, {"body": "agree rfuhrer cuz ca nt wait months npm package get fixed keep moving take fix get deployed npm packages", "d": "6/2017"}, {"body": "worked described make typescript version fixed error also deleting nodemodules dir clearing cache", "d": "6/2017"}, {"body": "yes prefer push instead sitting prefer even smaller change directly edit rxjssubjectdts align lift signature objectdts done", "d": "6/2017"}, {"body": "problem solved skiplibcheck true", "d": "6/2017"}, {"body": "solve issue rollback solved", "d": "6/2017"}, {"body": "rollback solved problem well", "d": "6/2017"}, {"body": "think problem related version downgraded version nt see error building application project used angular angularcli rxjs typescript", "d": "6/2017"}, {"body": "confirm experienced behavior work", "d": "6/2017"}, {"body": "ptagl previous comment related running ng build prod running ng serve saw next error think using ngbootstrap modal dialog affects showing error downgrade typescript version solved error", "d": "6/2017"}, {"body": "think confirmed death four different workarounds downgrade typescript try ymmv manually edit rxjs googling problem brings people see workarounds vote close issue problem rxjs issue already filed", "d": "6/2017"}, {"body": "reference link rxjs issue kim gentes worship team llc jun notifications githubcom wrote think confirmed death four different workarounds downgrade typescript try skiplibcheck ymmv nostrictgenericchecks manually edit rxjs subjectdts googling problem brings people see workarounds vote close issue problem rxjs issue already filed receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "kgentes also voting close issue rxjs related tracked issue", "d": "6/2017"}, {"body": "nt need closed posting disabled prevent posting cuz bugfix nt checked production npm yet", "d": "6/2017"}, {"body": "want put real solution potentially glazing problems better solution rxjs gets updated", "d": "6/2017"}, {"body": "hi temporary workaround use nostrictgenericchecks true tsconfig hope helps see stackoverflow", "d": "6/2017"}, {"body": "solution work yes prefer push instead sitting prefer even smaller change directly edit rxjssubjectdts align lift signature objectdts done lift operator operator observable lift operator operator observable", "d": "6/2017"}, {"body": "get following error find rxjssubjectdts error usershansdeschinkelatommaxnodemodulesrxjssubjectdts class subject incorrectly extends base class observable types property lift incompatible type operator operator gt observable assignable type operator operator gt observable type observable assignable type observable type assignable type r webpack failed compile", "d": "6/2017"}, {"body": "oh found thank", "d": "6/2017"}, {"body": "possible related", "d": "6/2017"}, {"body": "maxxt might related due bug web animations polyfill solution replace", "d": "6/2017"}, {"body": "macjohnny changing translatex fix animation play", "d": "6/2017"}, {"body": "maxxt try animating something else animations work eg", "d": "6/2017"}, {"body": "macjohnny exact animation different component div works fine nt think related polyfill", "d": "6/2017"}, {"body": "maxxt could include working example plunkr pointing differences problem might easier track", "d": "6/2017"}, {"body": "macjohnny everything px chrome works ie doesnt one component works nt", "d": "6/2017"}, {"body": "use stackoverflow supporthelp issue tracker meant purpose", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "example showing provide class module ready import another module makes difference coming npm read", "d": "6/2017"}, {"body": "seems like bug indeed normalizestylevalue still supposed convert unitless numbers pixel values add plunkr reproduce please", "d": "6/2017"}, {"body": "try reproduce time close issue", "d": "6/2017"}, {"body": "tag", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "small example showing upload files", "d": "6/2017"}, {"body": "thnx toxicable", "d": "6/2017"}, {"body": "mention preservequeryparameters routing navigation parameter deprecated favour queryparamshandling", "d": "6/2017"}, {"body": "please provide minimal plunker showing error simplest possible code triggering error thanks", "d": "6/2017"}, {"body": "found solution related missing module export statement type template selector attribute tag still investigate whether bug open another issue", "d": "6/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "6/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "6/2017"}, {"body": "sory problem already encountered please add possible using custom component compile aot jit compiller", "d": "6/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "6/2017"}, {"body": "universal lives inside angular", "d": "6/2017"}, {"body": "successful demo doc ok developer need seo impl universial", "d": "6/2017"}, {"body": "please keep github issues bug reports feature requests better avenues discussion questions stack overflow gitter mailing list etc", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "yes problem one help us please thanks advance attached sample image reference", "d": "6/2017"}, {"body": "due regression caused validator added since removed readded later time issues around regression solved see info", "d": "6/2017"}, {"body": "thank toxicable close issue keep eye related one", "d": "6/2017"}, {"body": "thanks creating issue wardbell although file exists one added boilerplate ignored dgeni matches rules design come across quickstart guide workaround decided upon create version file appropriate content guide name see error location actually accurate somewhat misleading line source file document begins case guides always line api docs line source file jsdoc comment begins future ought make clear", "d": "6/2017"}, {"body": "thanks case worth changing practice talking authors doc guide small audience fix pr files pita maintain history causing us problems worry another day fix reporting errant line source file would lovely", "d": "6/2017"}, {"body": "please add guidelines observe error repo", "d": "6/2017"}, {"body": "vicb run yarn install yarn run build yarn run serve see options pass outlet context would fail listed testcomponenthtml", "d": "6/2017"}, {"body": "see pr", "d": "6/2017"}, {"body": "excellent find proper fix", "d": "6/2017"}, {"body": "thanks expect released", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "ericmartinezr yes already done module reactiveformsmodule list specification version angular code supposed work think real question behind bug report guide always assume latest parts guide outdated little bit using angular upgraded seems work point releases backwards incompatible according semver minor version add functionality backwardscompatible manner", "d": "6/2017"}, {"body": "works imported reactiveformsmodule nt work reactiveformsmodule imported", "d": "6/2017"}, {"body": "yet decided mechanism versioning docs budget efforts moment docs reflect latest point releases commitment doc changes wo nt breaking angular code commitment ericmartinezr demonstrates code work current release angular close issue thanks paying attention", "d": "6/2017"}, {"body": "please provide minimal reproduction preferably plunkr template get started", "d": "6/2017"}, {"body": "use router parameter refer router toutorial", "d": "6/2017"}, {"body": "already using mentioned taking hyphen single parameter instead separate params", "d": "6/2017"}, {"body": "use following code component", "d": "6/2017"}, {"body": "consider using queryparams instead mentioned url", "d": "6/2017"}, {"body": "ideas also implement like splitting string later hyphen looking something genuine like allow use hyphen separator instead also useful visitors use shortestsimple possible link instead providing custom query parameters", "d": "6/2017"}, {"body": "look p", "d": "6/2017"}, {"body": "looking source code looks like markaspristine method simple nt emit anything alternative ways use listen control dirtypristine state also willing mark feature request think way listen changes component code without using bindings templates", "d": "6/2017"}, {"body": "listen eg", "d": "6/2017"}, {"body": "listen abstractcontrol statuschanges eg controlstatuschangesmap state gt state vlid something need use instead otherwise cold observable would nt emit anything least experience also documentation observable states actually tried subscribe observable emitting anything called said earlier looking source code looks like markaspristine method simple nt emit anything please look link think would possible watch changes ca nt find way actually access component inside component would really appreciate suggestions even works sure right way handle case nt better provide observable dirtypristine state extend interface looking like valid feature request", "d": "6/2017"}, {"body": "slavafomin sorry mistake reason thought talking validity need use subscribe instead map otherwise cold observable would nt emit anything least experience example hence wrote think would possible watch changes ngdocheck please nt could possibly casue application slow fast putting logic recommendataion would using something like give stream control dirty extend include properties required nope wont update field clicked triggers", "d": "6/2017"}, {"body": "toxicable think hurry days tried subscribe observable emitting anything called either could please give hint access associated custom form component inside using specifying control component using attribute", "d": "6/2017"}, {"body": "grab formcontrol object", "d": "6/2017"}, {"body": "nt think reasonable way getting dirtypristineetc look bit unless missing something nt believe case think would worthy feature request make pr next week see come", "d": "6/2017"}, {"body": "thanks think useful feature strangely first find missing considering example looking way access inside custom form component parent component let explain code typescript component selector mbsdateinput templateurl dateinputcomponenthtml providers provide ngvalueaccessor useexisting dateinputcomponent multi true export class dateinputcomponent implements controlvalueaccessor oninit ngoninit access externally associated component", "d": "6/2017"}, {"body": "mentions really looked properly till also generally people bind values view nt need pragmatically overly familiar understand cant access could wrong understanding formcontrol get valueaccessor injection setting case formcontrol available accessor wrap formcontrol instead", "d": "6/2017"}, {"body": "studied code directive inspired write following solution typescript component selector mbsdateinput templateurl dateinputcomponenthtml providers provide ngvalueaccessor useexisting dateinputcomponent multi true export class dateinputcomponent implements controlvalueaccessor oninit input formcontrolname string constructor optional host skipself private controlcontainer controlcontainer ngoninit const control thiscontrolcontainercontrolget thisformcontrolname injecting parent getting control using control name obtained binding think viable approach also think inability accessing instance directly custom form component limitation angular needs addressed would like file another issue", "d": "6/2017"}, {"body": "looks reasonable way retrieve formcontrol however nt feel right explained possible also think inability accessing formcontrol instance directly custom form component limitation angular needs addressed would like file another issue nt agree since defining defining control accesses value control things like set validity statuses etc", "d": "6/2017"}, {"body": "limitation solution must officially documented least articles answers regarding failed find anything related problem also solution provided also suboptimal work cases eg directive used order make work situations need add lot boilerplate code component nt framework solve problems developers think main reason create frameworks first place opinion angular consider valid feature request regard use case invalid case must documented alternative way", "d": "6/2017"}, {"body": "came two possible workarounds original issue monkeypatching typescript component selector mycustomformcomponent templateurl customformcomponenthtml providers provide ngvalueaccessor useexisting mycustomformcomponent multi true export class mycustomformcomponent implements controlvalueaccessor oninit private control abstractcontrol ngoninit const self const origfunc thiscontrolmarkaspristine thiscontrolmarkaspristine function origfuncapply arguments consolelog marked pristine watching changes typescript component selector mycustomformcomponent templateurl customformcomponenthtml providers provide ngvalueaccessor useexisting mycustomformcomponent multi true export class mycustomformcomponent implements controlvalueaccessor docheck private control abstractcontrol private pristine true ngdocheck void thispristine thiscontrolpristine thispristine thiscontrolpristine thispristine consolelog marked pristine also updated questions stackoveflow know custom form control marked pristine angular get access formcontrol custom form component angular", "d": "6/2017"}, {"body": "toxicable wait one make decisions refactoring forms use streams needs design nt implemented without prior discussion", "d": "6/2017"}, {"body": "kara sounds good let know goes", "d": "6/2017"}, {"body": "update quickstart latest version believe even different message", "d": "6/2017"}, {"body": "background reading", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "vs issue affect browsers", "d": "6/2017"}, {"body": "possible solutions docviewer use fallback available eg old firefox versions docviewer detect element manually ignore dgeni autolinkheadings postprocessor add simple processor hatever called stores original text content attribute docviewer use attribute retrieve text content petebacondarwin wdyt", "d": "6/2017"}, {"body": "like", "d": "6/2017"}, {"body": "yes tue jun ward bell notifications githubcom wrote like receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "issue", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "workaround convert iterator array seems angular compare arrays content reference edit solution would creating differ objects property collections could used directly", "d": "6/2017"}, {"body": "workaround convert iterator array arrayfrom thismapkeys would require setterstyle usage whenever change map array needs recalculated nt think userfriendly", "d": "6/2017"}, {"body": "solution would creating differ objects iterator property collections could used directly uses runtime functionally solve debugging problem even different providers production mode introduces lot extra complexity", "d": "6/2017"}, {"body": "trotyl setter needed", "d": "6/2017"}, {"body": "dawidgarus thanks work simple case comes inline map usage comment wo nt work html key mapget key must custom pipe achieve", "d": "6/2017"}, {"body": "trotyl ca nt apply decorator inline expression becomes moot custom pipe would nt bad idea could specify iterator wa nt use", "d": "6/2017"}, {"body": "dawidgarus marking subexpressions property point code already works dev amp prod modes people getting annoyed since errors actually considered warning still working fine raised dev mode angular nt force user change workingfine case another one ignore errorlike warning", "d": "6/2017"}, {"body": "simply issue", "d": "6/2017"}, {"body": "chinesepeanuts valid workaround workaround one came angular find many workarounds something addicted proposal get rid workarounds achieving something already works", "d": "6/2017"}, {"body": "trotyl understand post workaround might clear proper way indeed", "d": "6/2017"}, {"body": "think used work past however might changed silently created similar issue templates", "d": "6/2017"}, {"body": "working expected nodes projected moved different location everything else works relative source projection location", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "works fine went link clicked copy image shows pasted like", "d": "6/2017"}, {"body": "try see problem", "d": "6/2017"}, {"body": "happens code samples linenumber duplicate", "d": "6/2017"}, {"body": "okay put notification alert issue linked thanks", "d": "6/2017"}, {"body": "im confused actual issue recent new version angulario released lot docs updated use cli reproduction says create new app via ng new angulartourofheroes dose nt produce errors", "d": "6/2017"}, {"body": "tutorial meant used quickstart repo cli nt try yet cli nt think fail steps different", "d": "6/2017"}, {"body": "foxandxss yes know mentioned opening post expected behavior walked tutorial months ago went fine life got way back learning angular scratch time setup section walked creating angular app via cli create blank app walked tutorial blank app worked fine http section walkthrough broke bit yes created nt fail till http section said since http section uses api linked opening post fails however morning git cloned webapi simulator app folder created via cli replaced everything seemingly working check created project well thank", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "help find info links reading angularangularcli angularangularcli angularangularcli", "d": "6/2017"}, {"body": "see pr", "d": "6/2017"}, {"body": "ca nt reproduce npm npm yarn also issues packages maybe network proxy onpremisenpmcache maninthemiddle interfering download please try use vpn shield network interference reproduce issue machine cloud eg ci please file new issue provide additional information thanks", "d": "6/2017"}, {"body": "sorry without reproduction near unactionable understand project complex mentioned without specific case occurs difficulty guess could causing simply many variables play application", "d": "6/2017"}, {"body": "know kind hoping vicb see authored dont know cause suspect also participated working another issue presented way would able offer ideas whats happening maybe even realize needs change remove regression still try create small repo duplicating issue get chance", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "using cli suggest following error code means almost nothing try reading rest error see indicates towards cause since nothing wrong cli work find machine", "d": "6/2017"}, {"body": "already components onpush change detection strategy", "d": "6/2017"}, {"body": "probably reach decomposition taking large page first step case using strategy component wo nt rerendered till pass new ref", "d": "6/2017"}, {"body": "toxicable sec win", "d": "6/2017"}, {"body": "component onpush change back forth strategy regular one suggest toggle let say tab control want components tab use regular detection strategy active nt want included change detection active would suggestion achieve", "d": "6/2017"}, {"body": "suggestions would support however nt see good case specific function provide concrete reason wanting able dynamically changed one type changedetection another", "d": "6/2017"}, {"body": "large page nt want rerender nodes want keep nt want change detection run active paus resume different sections page", "d": "6/2017"}, {"body": "changedetectorref gives great control", "d": "6/2017"}, {"body": "notsonotso thanks look changedetectorref", "d": "6/2017"}, {"body": "notsonotso using changedetectorref still use changedetectionstrategyonpush would force child component also use onpush wrong", "d": "6/2017"}, {"body": "nt need use onpush use changedetectorref cdr however better using onpush cdr aside certain specific situations personally see reason needing flip cd anything use onpush want run cd push new data sub tree", "d": "6/2017"}, {"body": "wrong yes", "d": "6/2017"}, {"body": "toxicable want something like switching views nt want force everything view also use onpush would make sense", "d": "6/2017"}, {"body": "notsonotso thanks read works", "d": "6/2017"}, {"body": "notsonotso made working example directive checks element visible detaches changedetectorref hidden confuses place directive child component changedetectorref attached parent component example changedetectorref property viewcomponent parentcomponent would expect somechildcomponent parentcomponent maybe approprierat place ask question please let know case", "d": "6/2017"}, {"body": "dup", "d": "6/2017"}, {"body": "bad thx", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "optional workaround use inside custom control attach formcontrol hidden input viewtomodel changes done controlsetvalue", "d": "6/2017"}, {"body": "provide repo statement work correctly even put config file another dir however correct paths config file considered relative config file directory command invoked config file works one directory guaranteed work moved", "d": "6/2017"}, {"body": "good spot jonesetc sure stripping constructordoc actually blame members classinterface already extracted point suspect issue actually never extracting members defined via constructor params look part big refactor typescript dgenipackage working", "d": "6/2017"}, {"body": "thanks petebacondarwin speculating understanding doc generation hour long spiral went making sure nt crazy things missing appreciate speedy feedback hope goes smoothly", "d": "6/2017"}, {"body": "error states code function call highlighted static forroot config itestconfig modulewithproviders", "d": "6/2017"}, {"body": "thank would seem error message mention function call consolelog instead testmodule class confused", "d": "6/2017"}, {"body": "temporary workaround using copy paste contents box", "d": "6/2017"}, {"body": "yes course idea fix opened issue nt forget", "d": "6/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "6/2017"}, {"body": "please provide minimal reproduction plunkr get started", "d": "6/2017"}, {"body": "made plunker nearly setup part mediumscale project understandably ca nt replicate everything going various resolvers authguard full components etc normally problem happens inside shown screenshots url set nt seem able replicate behavior plunker path sure possibly wrong wondering could somehow related debugger breaks cycle nt think ever able reproduce issue without resolver edit take back happening without debugger", "d": "6/2017"}, {"body": "traced little machine since ca nt reproduce plunker life came following screenshots illustrate difference matches early stages triggering router notice difference path params", "d": "6/2017"}, {"body": "need step believe issue stems part code", "d": "6/2017"}, {"body": "confirm get back feeling marking optional params sometimes get urlencoded url parsing code probably fails detect hence treating entire bit url segment params", "d": "6/2017"}, {"body": "ok false alarm sorry guys apparently using calling function sufficient pass changed everything works fine", "d": "6/2017"}, {"body": "one intentional omission list angularcompiler currently considered low level api subject internal changes changes affect applications libraries using higherlevel apis command line interface jit compilation via angularplatformbrowserdynamic specific usecases require direct access compiler api mostly tooling integration ides linters etc working kind integration please reach us first never part public apis see publicapi information", "d": "6/2017"}, {"body": "ok nt know everything use public api expected least get mentioned changelog backward compatible solution change", "d": "6/2017"}, {"body": "mentioned trotyl compiler part public api provide support changes future consider opening api becomes stable", "d": "6/2017"}, {"body": "agree something changelog habe mentioned", "d": "6/2017"}, {"body": "seems related issue exactly duplicate", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "using ie npm nodejs sure would nice tutorials really worked found time nt really hoping one oh well", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "oh thank decided try using vs follow part directions actually added zonejs polyfills made big difference shawn marie austin applications data services ads washington state department health technology solutions town center west ms israel rd se tumwater wa phone success failure failure fatal courage continue counts winston churchill eric martinez mailto notifications githubcom sent tuesday june pm angularangular cc austin shawn doh state change subject angularangular even get first part quickstart display ie blank screen app works look inside code described code way code sick dated tutorials lon image receiving modified openclose state reply email directly view github mute thread", "d": "6/2017"}, {"body": "easy fix foxandxss", "d": "6/2017"}, {"body": "petebacondarwin foxandxss guys nt mind sent pr fix issue", "d": "6/2017"}, {"body": "thx reporting duplicate", "d": "6/2017"}, {"body": "also encountering issue", "d": "6/2017"}, {"body": "came across github issue also experiencing ie memory issues similar environment describe screenshot ie error see application ran plunk environment using ie screenshot memory diagnosis simple application hit refresh shown memory jumps jumped anyone encountered found fix", "d": "6/2017"}, {"body": "finally managed make workaround use animatechild another animation plunkr", "d": "6/2017"}, {"body": "believe fixes issue", "d": "6/2017"}, {"body": "sure yet get", "d": "6/2017"}, {"body": "feeling fix issue hard say demo report back test angularanimationsbuilds angularplatformbrowserbuilds npm targets", "d": "6/2017"}, {"body": "come patch released", "d": "6/2017"}, {"body": "please test using", "d": "6/2017"}, {"body": "matsko thank fixed", "d": "6/2017"}, {"body": "matsko nevermind fixes issue animations though animations still broken soon mdinput enter component", "d": "6/2017"}, {"body": "yes completely agree temporarily removed worked best positioning style links igorminar", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "yes tracked things workflows figure first todo list next couple days", "d": "6/2017"}, {"body": "minimal reproduction work isolation could please make minimal reproduction plunkr template get started", "d": "6/2017"}, {"body": "ok try dont know get aot version plunker issue occurs aot", "d": "6/2017"}, {"body": "aot issue please create minimal reproduction repo preferably using cli also please note part minimal complex less likely issue auctioned", "d": "6/2017"}, {"body": "hi got working issue anchor tag removed anchor tag made look like gt worked dont know issue posting may help one team look", "d": "6/2017"}, {"body": "nt mean sound rude since trying help without reason happening clear situation occur possible investigate", "d": "6/2017"}, {"body": "toxicable understand situation like happened used removed worked properly may info help someone sure bug angular aome isssue application researching post findings thank response", "d": "6/2017"}, {"body": "turns missing indexhtml file aot folder guessing something manually create would nt copy srcindexhtml getting following error though least bit helpful error error selector app match elements tselectrootelement tselectrootelement wn bn br objectdr createrootview ncreate ncreate nbootstrap update update body", "d": "6/2017"}, {"body": "indexhtml located localhost directs plunker setup indicates folder let localhost direct folder seems contain", "d": "6/2017"}, {"body": "ok great believe close issue also question bug report please address stackoverflow", "d": "6/2017"}, {"body": "guess think seriously joke", "d": "6/2017"}, {"body": "anyway distinguish angular cli angular", "d": "6/2017"}, {"body": "hi seems nodemodules size confused application size figure pointed size development environment node development environment pretty much par course webpack takes rxjs around unusual really unique android stuio example java note affect size application shipped users every file actually necessary build application support development process constantly track size ends browser angularcli new project time writing size application browser less nongzipped gets wire metric track far know nothing worry closing issue answered also issue angular cheers nota article besides months old misguided misleading states following imagine apple eating breakfast ingredients car drove work parts worried better analogy would imagine breakfast ingredients kitchen cooked parts bit reasonable nt think", "d": "6/2017"}, {"body": "nt seen many pages style external links differently internal links preferred method external links open new window internal stay window nt think enough come options", "d": "6/2017"}, {"body": "sjtrimble opening external links new window antipattern avoided user always control tabwindow management", "d": "6/2017"}, {"body": "article captures well also one info", "d": "6/2017"}, {"body": "gcp", "d": "6/2017"}, {"body": "html attribute casesensitive semantic afaik rather attribute layoutdirective wo nt affected attribute anyway", "d": "6/2017"}, {"body": "trotyl words wrong confused anyone would like poin right direction appreciate otherwise believe issue sould closed duplicate see comment", "d": "6/2017"}, {"body": "seems issue regarding underlying problem propted create issue flexlayout issue circles back issue angular", "d": "6/2017"}, {"body": "aaroncalderon flexlayout issue rather angular compiler issue see", "d": "6/2017"}, {"body": "seems like change could influence sure working back past yesterday realised nt anymore", "d": "6/2017"}, {"body": "calling instead updates view obviously url nt update means data somehow triggered picking", "d": "6/2017"}, {"body": "assigned yet function creates model calls method control internally", "d": "6/2017"}, {"body": "alexzuza since cant avoid think conditional checking way make run iam sure plnkr using setvalidators api", "d": "6/2017"}, {"body": "could please describe use case precisely lazy load module use router might want use resolver fetch data serve", "d": "6/2017"}, {"body": "hi please see sample code created implemented resolver working ngmodule providers stompserviceprovider configresolve export class featuremodule import http angular import overridestompservice servicesoverridestompservice import activatedroute angularrouter export let stompserviceprovider provide overridestompservice useclass overridestompservice import http angular import injectable angularcore import stompservice stompconfig injectable export class overridestompservice extends stompservice constructor stompconfig stompconfig super stompconfig import http response angular import injectable angularcore import resolve activatedroutesnapshot angularrouter import stompconfig import rxjsaddoperatormap injectable export class configresolve implements resolve constructor private http", "d": "6/2017"}, {"body": "appinitializer works load modules configurations rootmodule raises security isolation concerns feature module know config feature module b feature module know config feature module c", "d": "6/2017"}, {"body": "hmm plunker implements resolver code ca nt se use resolver service related route ca nt see route definition something like", "d": "6/2017"}, {"body": "yes forgot add code problem overridestompservice created resolver called", "d": "6/2017"}, {"body": "sure logical think using identification module inject value resolver service know module processed processed", "d": "6/2017"}, {"body": "dont like idea passing module id etc still think idea moduleinitializer clean also help scenarios cant think right", "d": "6/2017"}, {"body": "maybe yes cases actually nt nt seem someting like get support near future know something called angular replace actual question exactly implemented one hooks module level would usable even case good chance", "d": "6/2017"}, {"body": "mlcmlapis know doesnt seem get support near future opened ticket write suggestion would good lets wait ng team see reply", "d": "6/2017"}, {"body": "sure intention nt say anything guess", "d": "6/2017"}, {"body": "similar happens appear sidenav ie included", "d": "6/2017"}, {"body": "nt bug read error got states", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "case return basically type object defined mockmodel class create new instance using constructor method cast pojo type", "d": "6/2017"}, {"body": "able close", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "ok posted", "d": "6/2017"}, {"body": "add reproduction", "d": "6/2017"}, {"body": "reproduce myrepositary aotandjitl failure ng serve aottrue complete success ng serve aotfalse main code file import component oninit viewcontainerref viewchild componentref elementref componentfactoryresolver ngmodule angularcore import browsermodule angularplatformbrowser import commonmodule angularcommon import controlsmodule controlscontrolsmodule import reflectiveinjector componentfactory compiler angularcore import jitcompilerfactory angularcompiler export function customcomponent annotation return function target function var parenttarget annotationparent let metadata new component annotation component metadata target export function customngmodule annotation return function target function var parenttarget annotationparent let metadata new ngmodule annotation ngmodule metadata target export function appendmetadata obj metadata objannotations metadata export function createjitcompiler consolelog create jit compiller return new jitcompilerfactory usedebug false usejit true createcompiler class petitionedit itismaysuperpetitioncomponent true selectfrom dinmic petition dinamic petition component selector approot templateurl appcomponenthtml styleurls appcomponentcss providers provide compiler usefactory createjitcompiler deps export class appcomponent implements oninit", "d": "6/2017"}, {"body": "angularcli removes angular decorators aot mode want keep decorator use custom decorator like", "d": "6/2017"}, {"body": "custom decorator working aot customcomponent customngmodule working jit use custom decorator like customcomponent customngmodule controlsmodule errors error unexpected value controlsmodule homesosnovskikhworkspacesaotandjitsrcappcontrolscontrolsmodulets imported module appmodule homesosnovskikhworkspacesaotandjitsrcappappmodulets please add ngmodule annotation error srcmaints module found error ca nt resolve gendirappappmodulengfactory homesosnovskikhworkspacesaotandjitsrc srcmaints multi webpackdevserverclient srcmaints way make decorator work aotandjit angularcli", "d": "6/2017"}, {"body": "const metadata declarations declarations imports commonmodule exports declarations providers ngmodule metadata customngmodule metadata export class controlsmodule thing components used dynamic module", "d": "6/2017"}, {"body": "work error browser console", "d": "6/2017"}, {"body": "circular reference move custom decorator appcomponentts separated file would move dynamic module chunk built without aot", "d": "6/2017"}, {"body": "oh yes works solution complex hope easier rewrite project thank much", "d": "6/2017"}, {"body": "helo error update reproduce myrepositary aotandjitl failure ng serve aottrue complete success ng serve aotfalse", "d": "6/2017"}, {"body": "problem already encountered", "d": "6/2017"}, {"body": "hi could copypaste packagejson file please even better example demo github would really useful thanks", "d": "6/2017"}, {"body": "error occurs one dependency higherlower case sync likely outdated folder got updated know around anymore clear directory rerun", "d": "6/2017"}, {"body": "please reopen still issue", "d": "6/2017"}, {"body": "hi matthewerwin actually viewencapsulation property component stylesheet renderer renders dom differently nt affect styles whole component rendered differently possible feasible support multiple view encapsulation single component closing", "d": "6/2017"}, {"body": "angular updates view sees fit therefore rely handling actions one one probably want animations module", "d": "6/2017"}, {"body": "stevevanopstal would least expected work nt simply wrap like works issue component instantiates need programmatically set css property otherwise later animated hover example animated css property dynamic one might also need change offset property times move element without animating thus setting changing value renable transition applied order enabledisable css property use boolean probably want animations module ca nt use angular animations value dynamic although since angular input params nt see input params ca nt keep animation end state unless go callback set appropriate transform style property animation ends think solution hacky would gladly try ca nt think", "d": "6/2017"}, {"body": "sure completely get want want animate little css perform easily keep transform html tested", "d": "6/2017"}, {"body": "well defined soon mouseout element snaps back place instead smoothly translated back plus speed also becomes variable property would set inline wrote simple example illustrate issue real application addition shifting element mouse elements around also shifted create space computed transformations shifted back mouse leaves current element plus speed computed runtime writing css anywhere else except inline option tldr created simplest example illustrate think bug discovered component initialized least view init content init angular simply grab width host element order code written nt time managed angular animations first setting desired endstate transform property inline mouseenter change state input params animate start value end value key always specify start value ca nt use start animation since also setting transform inline animation ends since nt take input params hence ca nt states defined hopefully also take input params angular", "d": "6/2017"}, {"body": "angular simply grab width host element order code written nt think happens two examples one update two updates depending timing angular one happens", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "indeed using places available firefox said firefox even years old quite lot evergreen browser even fixed issues nt think dependencies including angular supports old browsers", "d": "6/2017"}, {"body": "gkalpak understand support stale evergreen browser versions priority featurewise ff ok compared nonevergreen supported browsers personally zero problems angular application development counting issue documentation available static ssr pages guess would good thing force breaking behaviour older browsers nt need much efforts get support case probably dropin replacement probably", "d": "6/2017"}, {"body": "bisubus check works firefox", "d": "6/2017"}, {"body": "gkalpak thanks indeed works expected solved guess", "d": "6/2017"}, {"body": "thanks checking let leave open merged automatically closed upon merging", "d": "6/2017"}, {"body": "oops duplicate issue", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "works many thanks", "d": "6/2017"}, {"body": "keep great work angular since checked ko ng ng world fully blossomed nice see", "d": "6/2017"}, {"body": "thanks fix", "d": "6/2017"}, {"body": "syntax template used html properties attributes need make dynamic attribute need use syntax attrcolspan", "d": "6/2017"}, {"body": "thanks works one question though several attributes specific input textarea elements work without attr prefix rows size step etc criteria html properties require attr prefix ones nt", "d": "6/2017"}, {"body": "look htmltextareaelement interface", "d": "6/2017"}, {"body": "completely sure page within repo part aio project sure", "d": "6/2017"}, {"body": "close issue universalangulario website updated issue anymore", "d": "6/2017"}, {"body": "still problem lack documentation link", "d": "6/2017"}, {"body": "document angular repo closing", "d": "6/2017"}, {"body": "note date called constructor one argument specifed arguments represent local time utc desired use new date dateutc arguments see documentation mozilla", "d": "6/2017"}, {"body": "datepipe meant support date objects utc values doc nt mention", "d": "6/2017"}, {"body": "third argument date pipe documented yet removed intl api use set timezone date example use set timezone otherwise date shown based timezone browser fix problem", "d": "6/2017"}, {"body": "ocombe remove intl api", "d": "6/2017"}, {"body": "lot issues fix inconsistencies browsers missing features missing api browsers means polyfill nt control either api immature used angular working replacing set data amp features right much like angularjs available finish time", "d": "6/2017"}, {"body": "thanks ocombe good news many problems mobile phones good luck work", "d": "6/2017"}, {"body": "ocombe ticketbranch track removingreplacing intl api personally would interested following work bring many changes one issue formatting large gt signed numbers", "d": "6/2017"}, {"body": "martinmcwhorter follow much see yet list issues fix replacement intl api ideas would like see fixed would place add", "d": "6/2017"}, {"body": "angular issue behavior different browsers use pattern work see link details", "d": "6/2017"}, {"body": "wkoza said use string instead date follow spec", "d": "6/2017"}, {"body": "issue using redux link issue posted repository angular errors angular get expression changed checked errors", "d": "6/2017"}, {"body": "problem appears components bumping reverting fixes problem something want keep forever could reproduce minimal project still trying figure fix maybe regression looks like dirty check enforced dev mode changelog clear tip welcome", "d": "6/2017"}, {"body": "get problem upgrading using settimeout fixes problem panictutilgetrequestobservable subscribe data gt thisrequesting data panictutilgetrequestobservable subscribe data gt settimeout gt thisrequesting data", "d": "6/2017"}, {"body": "jingglang could please try reproduce problem minimal code possible", "d": "6/2017"}, {"body": "getting issue upgraded hideshow logic broken accordionstyle logic visibility depends comparing current panel observable holds panel visible amongst things component uses select get observable bound async template worked like charm get expressionchangedafterithasbeencheckederror panels nt hide show first click second", "d": "6/2017"}, {"body": "get issue updated found workaround injection call function error point ts constructor private cdr changedetectionref onchange void thisval lt get error thiscdrdetectionchanges", "d": "6/2017"}, {"body": "think issue follow change made resolve issue content inside tag issue form inside tag errors contentchangedafter error", "d": "6/2017"}, {"body": "get issue updated higher attach little project reproduce bug apperrorzip", "d": "6/2017"}, {"body": "following downgraded advised error goes away whatever conflict specific nt got time put together plunkr week next seems related single action updating two separate observables store impact ui one ui updates happens causes exception", "d": "6/2017"}, {"body": "hmmm definitely rollback version solves issue also apply timeout shown jingglang", "d": "6/2017"}, {"body": "hi tytskyi made plunkr issue hope help workaround given jingglang works higher also changing emitting event child constructor nt raise error anymore", "d": "6/2017"}, {"body": "umens update parent component checked therefore nt keep unidirection data flow", "d": "6/2017"}, {"body": "alexzuza achieve always done way without error putting settimout nt raise error anymore updated plunkr doubt interfering lifecycle", "d": "6/2017"}, {"body": "hi umens thank time problem alexzuza says update parent component field checked code roughly equivalent notice removed service reduce code worked probably accident old version angular rxjs bug could please tell versions used even put working plunker putting settimout nt raise error anymore change field asynchronously respects oneway data flow lets consider opposite error raised first check change detection goes checks value bound template renders synchronously updates rendering done runs second dev mode check change detection ensure application state stable rendering child equal happens single turn cycle change detection", "d": "6/2017"}, {"body": "ok thank detailed answer could nt find informations child component lifecycle happens previous working version used angular except compilercli rxjs", "d": "6/2017"}, {"body": "umens reproduced error old versions mentioned throws probably party dependency affected behavior complete reproduction instruction", "d": "6/2017"}, {"body": "ca nt tell yarnlock interested going nt know different", "d": "6/2017"}, {"body": "seeing similar expressionchanged errors switching case two components interact via service service provided via main module created following syntax worked fine without errors componenta template componentb class modify template follows avoid expressionchanged error componenta template still trying figure become issue switch works", "d": "6/2017"}, {"body": "problem happens mostly using async pipe like use like osomeproperty error disappear sure lot people made mistake nt detected think bug introduced", "d": "6/2017"}, {"body": "problem issue looks like come angularrouter", "d": "6/2017"}, {"body": "also come conclusion related router tried post much yesterday looks like post failed investigated simplified code see could track error following code works perfectly ultimate source action click panel header fails expressionchanged error triggered via routing", "d": "6/2017"}, {"body": "helped solving problem explicitly trigger change parent", "d": "6/2017"}, {"body": "like acidghost could solve problem running parent component", "d": "6/2017"}, {"body": "plunkr repro willing check similar complains gitter always ended user problem ca nt sure bug introduced bug rather lack error lt got resolved", "d": "6/2017"}, {"body": "error expressionchangedafterithasbeencheckederror solution componentrefchangedetectorrefdetectchanges piece code dynamically generated components componentref viewcontainerrefcreatecomponent componentfactory component got created componentrefinstance data inputdata manually changing component data componentrefchangedetectorrefdetectchanges result change detection simple components google access componentref execute componentrefchangedetectorrefdetectchanges settingchanging component datamodel solution getting error opening dialog thisdialogopen dialogcomponent putting open dialog code inside function applying settimeout function solved issue ex opendialog let dialogref thisdialogopen dialogcomponent ngoninit void settimeout gt thisopendialog though seems like hack works", "d": "6/2017"}, {"body": "since problem solution workaround worked create component dynamically component factory ngafterviewinit method component uses directive field bind field static string seems field directive undefined view component build checked initialized static string staticcomponentts export class staticcomponent implements afterviewinit viewchild dynamiccontent read viewcontainerref dynamiccontent viewcontainerref constructor private componentfactoryresolver componentfactoryresolver ngafterviewinit void const componentfactory componentfactory thiscomponentfactoryresolverresolvecomponentfactory dynamiccomponent thisdynamiccontentcreatecomponent componentfactory testdirectivets dynamiccomponentts error error expressionchangedafterithasbeencheckederror expression changed checked previous value undefined current value test seems like view created parent children dirty checked created change detection hook", "d": "6/2017"}, {"body": "bit confused reading thread known bug resolved upcoming release expected behavior solution thank", "d": "6/2017"}, {"body": "idea related hate message passion shows unit testing box ng test command suppose could confused successfully mock simple service also surprised one else seen testing yet ca nt find anything test related watching topic search expressionchangedafterithasbeencheckederror unit testing", "d": "6/2017"}, {"body": "trying put together plnkr finding difficult reproduce error however extensive debugging think got bit closer seeing going wrong though deciding whether bug mistake part built small sample app using cut versions reducers combined order real app routerreducer last frustration error occur set breakpoints watched flow actions reducers found two apps dispatching actions reverse order ui reducer manages visibility source state change triggering error cutdown version reducer showing relevant actions export const userinterfacereducer state initialui action gt switch actiontype case ingredientactionslistingredients actionhidetypes return objectassign state visiblepanel visiblepanelingredients return state default return state run small test app works first listingredients action fires new state returned angularreduxrouter updatelocation action fires default case hit returning state run actual app order actions reversed angularreduxrouter updatelocation action fires first returning old state default listingredients fires returning new changed state error raised completely open idea done something dumb nt actual bug anyone else see done footnote checked version also fires redux reducers correct order location change fires list ingredients action presumably works version", "d": "6/2017"}, {"body": "looking exists property route config info merged resolved data", "d": "6/2017"}, {"body": "thanks vicb", "d": "6/2017"}, {"body": "guide actually meant dependencyinjection samples discussed", "d": "6/2017"}, {"body": "yes sorry found one", "d": "6/2017"}, {"body": "reason incorrect rotation occurs styles captured using called return transform matrix value transform style element scale translate rotate end normalizing transition back matrix value animated go current transform state back matrix value animation hands angular since browserlevel way around making fix framework hard coded transform value correct solution example using styles addition transform combine together", "d": "6/2017"}, {"body": "matsko thanks explanation", "d": "6/2017"}, {"body": "nt think going happen microsofttypescript", "d": "6/2017"}, {"body": "thanks actually already submitted pr nt hurt issue", "d": "6/2017"}, {"body": "closing pr keeps noise", "d": "6/2017"}, {"body": "related", "d": "6/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template plunker link steps reproduce would help diagnose issue", "d": "6/2017"}, {"body": "experience problem angular component needs used different places places everything works place renderer injected instead unfortunatelly could nt reproduce plunkr yet", "d": "6/2017"}, {"body": "labeling ones using sass repo thanks", "d": "6/2017"}, {"body": "hansl affects angular users use sass angular least use dartsass support removed sass implementations", "d": "6/2017"}, {"body": "see long takes nodesass catch sending issue devrel see anything thanks", "d": "6/2017"}, {"body": "references componentstyles page nt look table contents layout problem fixed ping wardbell hand doc", "d": "6/2017"}, {"body": "using app", "d": "6/2017"}, {"body": "hansl please also check links initial comment dart angular sass team agreed replacement", "d": "6/2017"}, {"body": "looking around replacement suggested angulardart team specific angulardart sass", "d": "6/2017"}, {"body": "would quite disasterous massive number third party modules go edit use alternative replacements", "d": "6/2017"}, {"body": "ketec created issue time react", "d": "6/2017"}, {"body": "nt think understand bug untouched step focus name untouched step blur focus something else nothing touched always touched seems usual intended behaviour unless safari bug", "d": "6/2017"}, {"body": "u try plunker chrome work expected please share browser version used chrome version official build", "d": "6/2017"}, {"body": "yes chrome il try see happens edit ok exactly chrome official build explain exactly follow steps exactly", "d": "6/2017"}, {"body": "described op look hope notice click outside field might look closely", "d": "6/2017"}, {"body": "ok think realise something control values checked valuechanges amp focus blur events verify close thats true", "d": "6/2017"}, {"body": "ok stupid thanks making look closely guess given logic reactive forms suitable generate errors field marked touched may find workaround", "d": "6/2017"}, {"body": "yes fact related issue trying make wrapper component seemed way bubble touched dirty event parent component found absolutely events emitted things happen event value change fires actual value changes reason write version forms stuff including toucheddirtymodelvalidation etc pain maybe could lucky enough talk kara next big forms release", "d": "6/2017"}, {"body": "nt write anything heres hack make work help someone use following input followed reactive form tutorial plunker op blur onvaluechanged event nt know side effects drawbacks use risk", "d": "6/2017"}, {"body": "searchingsoul ask nt seem like good solution obviously every time user clicks tabs control running value changed function even though value nt actually changed", "d": "6/2017"}, {"body": "trying show field errors right input field marked touched nt want field error soon got dirty wanted error touched happen correct everytime input blurred run value change function think thats easiest way detect field marked touched using onvaluechanged function designed angular team modified plunker control amp amp controltouched amp amp controlvalid control amp amp controldirty amp amp controlvalid line reactivecomponent", "d": "6/2017"}, {"body": "element named corresponding selector element former html latter typescript decorator", "d": "6/2017"}, {"body": "said generic html element component selector attribute element bunch concrete selectors css selectors syntax used css selectors syntax example testing access method stuff like bycss element bycss attribute bycss valid component selector well", "d": "6/2017"}, {"body": "reason reason redesigned nav bar took component styles document guide registered within nav bar get odd behavior let investigate", "d": "6/2017"}, {"body": "yeah guess intended guide listed sidenav reachable know url searching either need add navigationjson ie sidenav remove entirely reason nt need right", "d": "6/2017"}, {"body": "reference use technique deploypreviewsh determine whether certain areas touched speedup would nice indeed flakes flakes one thing keep mind changes may lead docs changes reason need deploy preview involves building probably still skip tests though docsspecific tests would catch dangling links etc run separate travis job", "d": "6/2017"}, {"body": "actually makes sense semantically platform angular sense browser dynamic ie jit counterpart renaming would confusing compelling reason", "d": "6/2017"}, {"body": "fixed jasminejasmine closing since actionable angular side anyway", "d": "6/2017"}, {"body": "turns enough fix serviceworker installed rewrite request never reach firebase redirect rules", "d": "6/2017"}, {"body": "unless missed something method grabbing template work aot", "d": "6/2017"}, {"body": "ca nt comment never used aot really", "d": "6/2017"}, {"body": "toxicable particular line suggests official webpack aot plugin actually exactly replaces", "d": "6/2017"}, {"body": "mrahhal used jit branch skipcodegeneration mode libs aot template compiled javascript code html template never loaded runtime", "d": "6/2017"}, {"body": "sure nt notice work usual rewrites building problem nt apply anymore detecting statement might still beneficial sure worth anymore", "d": "6/2017"}, {"body": "work aot either allowed autoswitching jit aot", "d": "6/2017"}, {"body": "ah thanks makes sense", "d": "6/2017"}, {"body": "angular language service intended used aot compliant applications several limitations beyond one issue would prevent language service working nonaotable jit application", "d": "6/2017"}, {"body": "hello tried plunkr chrome firefox edge show correct date likely depends locale browser using probably something different tell hour shows plunkr added plunkr nt think really bug probably something linked daylight saving time", "d": "6/2017"}, {"body": "hello tried plunkr get result wed may w europe daylight time current time zone utc amserdam berlin bern rome stockholm vienna change te time zone utc brussels copenhagen madrid paris result seem bug daylight saving time conversion", "d": "6/2017"}, {"body": "alxhub think proposal one standing question inactive tabs case user one tab open happens activate staged application seems currently get state keep running intercepted new service worker could result data consistency issues unlikely manifest angulario might real concern apps especially rely dynamic caching", "d": "6/2017"}, {"body": "played around thoughts since activating update asynchronous always complete time initiated events times requires two reloads show updated content fine navigating different page coming back activating sw update essentially update caches since open tabs share sw activating update one tab affect content served tabs might end situation tab show incompatible versions app vs content eg old file new file ok could well activate new content soon available would solve neither solution think ideal suggestionsideas welcome smiley", "d": "6/2017"}, {"body": "discussed new plan update available activate immediately reload tab notify open tabs update activated need reload appropriate moment every tab soon user navigates new document fullpage reload instead loading new doc benefits approach user always gets latest content reload avoiding race conditions app never serves incompatibleversionmismatchced content tab notifications distractions users gets latest content soon possible need way signal open tabs update activated let reload next navigation", "d": "6/2017"}, {"body": "ngserviceworker updates event type listen know need full reload next navigation event", "d": "6/2017"}, {"body": "lansana think attempting go one route nt link specifically rather", "d": "6/2017"}, {"body": "probably similar problem every sample app uses inmemwebapi confirm", "d": "6/2017"}, {"body": "problem workaround fixed", "d": "6/2017"}, {"body": "navigate project folder terminal install missing dependency npm", "d": "6/2017"}, {"body": "first think document mention cli first sentences tell users use switch aot second beginning compile aot consider current guide really like aot indepth guide think clear separated aot user guide end developers aot indepth guide advanced users personally like structure aot guide wdyt overview keep aheadoftime aot vs justintime jit keep aot compilation keep running aot angular cli write new aot best practices aot development guidelines write new including public bound properties typechecking template expressions one include featurestypechecking comes w code could nt find anything angulario probably aot indepth move content compile aot tour heroes compile aot workflow convenience script tour heroes", "d": "6/2017"}, {"body": "thanks dherges would excellent angularcli best way start new aot project documentation could also include clarification bsconfigaotjson would perfect confused needed included angularcli even mentioned aot documentation liteserver nt devdependencies", "d": "6/2017"}, {"body": "another thing would nice zip file example aot project", "d": "6/2017"}, {"body": "unfortunately feedback wrote guidelines example app ngaotguide davyf fyi enjoy", "d": "6/2017"}, {"body": "make good points reviewing aot guides nt foresee coming soon plan explaining constrained metadata syntax required aot within next weeks keep issue open", "d": "6/2017"}, {"body": "ok meantime people read story showing aot angular cli app think worthy input angulario let know", "d": "6/2017"}, {"body": "wardbell keep eyes peeled think review aot guides would beneficial though dherges good stuff worked around angularcli meantime point us going back appreciate work hopefully others make use one thing noticed aotdist folder contains ngfactory files whereas src folder copied aotsrc dist folder contains buildjs followed official guide still none wiser right wrong way following another ambiguous issue aot guide copydistfilesjs function copies files aot directory nt copied dist folder else called copydistfiles", "d": "6/2017"}, {"body": "thought could provide realistic usage scenario roughly trying shared library creating chromedshell app common header login auth etc provide following used create app like typescript const routes routes routes logged users ngmodule imports appchromelibrarymoduleforroot routes export class approutingmodule", "d": "6/2017"}, {"body": "tried reproduce plunkr bu far unsuccessful could verify done matches issue isolate problem cli", "d": "6/2017"}, {"body": "toxicable nt believe reproduced plunkr since use pipeline ngcli systemjs browser vs webpack devserver code returning empty object instead object lazypathmappings used part webpack plugin offending angular package", "d": "6/2017"}, {"body": "tl dr code detects lazy loaded routes angular creating webpack chunks seem fail routing placed inside array", "d": "6/2017"}, {"body": "issue lazy route detection part compiler used cli webpack plugin fixed repo redirecting proper team hopefully fix soon update issue", "d": "6/2017"}, {"body": "allow hidden work please provide plunker reproducing error", "d": "6/2017"}, {"body": "right fixed sure could nt get work thanks", "d": "6/2017"}, {"body": "see also solution seems work adapt configjs follows", "d": "6/2017"}, {"body": "ts lt see thanks figuring macjohnny", "d": "6/2017"}, {"body": "fixed thanks macjohnny", "d": "6/2017"}, {"body": "could bump ts right", "d": "6/2017"}, {"body": "also noticed next small issue ipad", "d": "6/2017"}, {"body": "alexzuza maybe angulario repository better place fill issues subject", "d": "6/2017"}, {"body": "repo closed look readme angulario documentation repository closed please add issues pull requests repo longer making changes documentation repository longer process new issues prs close automatically", "d": "6/2017"}, {"body": "also noted tool tip hell comes menus also source codes docs read codes may convenient move mouse pointer line read tool tip pops hides line read see image bellow", "d": "6/2017"}, {"body": "sorry closed mistake", "d": "6/2017"}, {"body": "found temporary solution using firefox", "d": "6/2017"}, {"body": "looks like bug typescript also see changelog angular nt support ts", "d": "6/2017"}, {"body": "dawidgarus thanks link typescript supported angular must reflected generated ng cli right defined version string allows upgrade past", "d": "6/2017"}, {"body": "slavafomin checked fresh ngcli allow upgrade", "d": "6/2017"}, {"body": "tytskyi nice hear thanks checking looks like changed generated project sadly ca nt make change working backward", "d": "6/2017"}, {"body": "dgeni get look page repro bare never worked dgeni convert links form actually work", "d": "6/2017"}, {"body": "generated links via dgeni templatehtml files anything special need surprised difference two url forms relative urls resolve absolute url wed jun pm ward bell notifications githubcom wrote dgeni get look page repro bare bookmark never worked dgeni convert links form actually work thepage bookmark receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "think supposed use id name thu jun igor minar notifications githubcom wrote generated links via dgeni templatehtml files anything special need surprised difference two url forms relative urls resolve absolute url wed jun pm ward bell notifications githubcom wrote dgeni get look page repro bare bookmark never worked dgeni convert links form actually work thepage bookmark receiving authored thread reply email directly view github receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "anchors name attribute", "d": "6/2017"}, {"body": "appears fixed", "d": "6/2017"}, {"body": "actually seems reappearing occasionally think might library name folder name logic assumes patterns files trying read folder file", "d": "6/2017"}, {"body": "issue seems cli issue please file repo angular framework thanks", "d": "6/2017"}, {"body": "hansl cli error full output running ngc tought compiler lies repo", "d": "6/2017"}, {"body": "referenced pr fix crash code still supported first nt support referencing default functions aot metadata working resolved sometime second function simple function require document describes limitations typescript syntax support metadata also lifting many restrictions simple macro function limitation still changing importing work must able determine value routes compile time support features javascript typescript evaluation continually improving significant improvements coming", "d": "6/2017"}, {"body": "well think matter supported least sane error message would help", "d": "6/2017"}, {"body": "problem seems getting recreated every time route changes due fact two routeroutlets always topmost containers inserted removed application case component inserted time topmost routeroutlet returning zero results child router thing causing animation work either reprogram code cause toplevel route change get inner child fire keep existing logic upper router call inner router animation code fire instantiated downside approach work already assigned parent element case component unfortunately another animation bug pr causing bug happen update plnkr goes", "d": "6/2017"}, {"body": "ok thank update looking forward best practice common scenario", "d": "6/2017"}, {"body": "understand share code problem work narrowing language construct causing tsickle crash", "d": "6/2017"}, {"body": "chuckjaz investigate week weekend post findings ok", "d": "6/2017"}, {"body": "rolandjitsu yes bug information say angular version tried angular might also try upgrading tsickle latest tsickle uses internals typescript needs undated typescript changes", "d": "6/2017"}, {"body": "oh sorry meant", "d": "6/2017"}, {"body": "angular also happening updating typescript ps changing false suggested solves compilation problem however nt know could lead side effects testing", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "generate html tags pipes pipes sanitized run need dynamic form generation done using components directives need support issue angular", "d": "6/2017"}, {"body": "ngswlog", "d": "6/2017"}, {"body": "issuei using work box", "d": "6/2017"}, {"body": "referring indented blocks blue actually part image value image called question issue rethink", "d": "6/2017"}, {"body": "issue previous version appcontent recently couple days ago released new version fixed think happened old version opened days reloaded got new fixed version closing feel free open new issue see", "d": "6/2017"}, {"body": "sounds good closing sounds fine jeff jun george kalpakas notifications githubcom wrote issue previous version appcontent recently couple days ago released new version fixed think happened old version opened days reloaded got new fixed version closing feel free open new issue see receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "ok follow logic references using id instead ids would logical yes reason vicb fix fixing bugs id generation", "d": "6/2017"}, {"body": "might option least would chance find reference using tested several translation tools one able work placeholders others simply seem ignore tags", "d": "6/2017"}, {"body": "design icu messages replaced placeholders inlined message ie icu message generates two messages message bundle icu message appears generate single message design icu translation reused generate messages explain behavior observe observing different bug edit may requesting thatwe set xid attribute placeholder", "d": "6/2017"}, {"body": "vicb yes understand problem following chance knowing icu message referenced according documentation icus placed right message could assume first message placeholdera references icu placeholderb references icu second placeholder merged first ones information one used", "d": "6/2017"}, {"body": "resolved using instead listening parent window instead making user click twice go back started", "d": "6/2017"}, {"body": "good idea get validation status directly custom control ways injecting", "d": "6/2017"}, {"body": "anyone", "d": "6/2017"}, {"body": "first make sure really go another solution typescript constructor private injector injector ngoninit const model thisinjectorget ngcontrol const control modelcontrol controlstatuschangessubscribe next status string gt consolelog status consolelog controlerrors please nt forget unsubscribe", "d": "6/2017"}, {"body": "inject directly set property directly control nt provide ngvalueaccessor want supports templatedriven forms reactive form directives like see example alternative setup angular material select", "d": "6/2017"}, {"body": "spielma please provide plunker showing issue use template", "d": "6/2017"}, {"body": "foxandxss gkalpak matsko wardbell issue closed", "d": "6/2017"}, {"body": "angular animations uses web animations api ios support need web animations polyfill work added", "d": "6/2017"}, {"body": "hotspurs browser using desktop animation code work safari desktop missing polyfill btaens suggested fact polyfill could provide plnkr code investigate", "d": "6/2017"}, {"body": "matsko desktop use chrome firefox safari others animation works great webanimations polyfill project ok provide plnkr little bit later", "d": "6/2017"}, {"body": "good writeup also experiencing issue angular version", "d": "6/2017"}, {"body": "kara vicb could get confirmation bug reintroduced angular please", "d": "6/2017"}, {"body": "please provide plunker requested issue template", "d": "6/2017"}, {"body": "boteklub please add plunkr plus try attach event listener directly input per fires event valid selection focused editable fields", "d": "6/2017"}, {"body": "hi sure please give time", "d": "6/2017"}, {"body": "unsuccessful run angular app plunker attached angularcli app please try paste something chrome tytskyi thanks found possible solution ie focused editable field pastetest project still working without also possible add atribute contenteditable true body sure working pastetestzip", "d": "6/2017"}, {"body": "boteklub issue template links angular template readytouse new button plunker also provides angular template would nt expect anybody download extract random zip file internet", "d": "6/2017"}, {"body": "issue caused application", "d": "6/2017"}, {"body": "toxicable directive detects clicks certain area page looks specific exact class name clicked target nt match added class name rewrite code split class name works expected new angulario site runs version markup clean something turn", "d": "6/2017"}, {"body": "looks related new animations released however appears namespacing id transitions see case guess essential could incorrect assumption cc matsko", "d": "6/2017"}, {"body": "toxicable yes absolutely correct thank think better solution would add attribute instead guys probably good reason cheers", "d": "6/2017"}, {"body": "good example features bundled core go separate package", "d": "6/2017"}, {"body": "seems every new would regression", "d": "6/2017"}, {"body": "generic problem override directives imagine happily using forms module want override validator one way create something angular could change selectors use elegant either", "d": "6/2017"}, {"body": "yep additional attributes turning behaviour looks friendly escalate mess quickly current solution propose remove exports directives asap mentions docs late hold code export within new solution directives scoping understand bit radical proposal separate things essential core least forms module scope directive named module like alternatively npm package since ngmodule true scope directives unlock override logic directives match names standard html attributes generally flexible directives shipped angular downside would frustration existing users used import formsmodule need import modules order use standard browser functionality rage rage rage etc related issues suffer limitation overriding directives email validator something developers expect regardless conforming spec feat request adding delay timeout nt look like good addition core would cool use different directive name", "d": "6/2017"}, {"body": "going remove exports minmax validator directives addition breaking change least wait add major version meantime discussion best solution going forward validator directives", "d": "6/2017"}, {"body": "agree sounds like scenario support first feeling approach looks good module lazily loaded angularjs expects component available everywhere since angularjs works issues implementation component available lazy loaded angular module injector", "d": "6/2017"}, {"body": "likely incorrect thoughts module lazily loaded main nonlazily loaded app wo nt idea components module nonll pieces depended anything bundle would import would mean pieces would nt anymore seems based nature components bundle need talk components parent sibling injectors wo nt need access components inside injector module even angularjs works pieces lazy loaded use pieces lazy loaded used would get error cause nt loaded yet thus nature lazy loaded pieces able use existing components existing components able use lazily loaded components say high level understanding angular moduleinjector hierarchy works bulk understanding coming concepts learned lling angularjs code thoughts", "d": "6/2017"}, {"body": "none moment working busy new site back docs", "d": "6/2017"}, {"body": "closing duplicates work progress", "d": "6/2017"}, {"body": "nt resolving state whenever animation finishes link docs tell case would note consider using animation frames rather timeout makes sure animation finish transition whereby timeout nt also removes need keeping value sync css", "d": "6/2017"}, {"body": "dblvs sorry nt make clear enough need use anchor tag like ca nt use routernavigate ts files code wrote expected behavior routerlink directive angularcore", "d": "6/2017"}, {"body": "nt matter enter state long done resolve work also routerlink angularrouter similar issue fixed check documentation resolve angulario", "d": "6/2017"}, {"body": "tag builds correct full url openinnewtab", "d": "6/2017"}, {"body": "pittan sounds like using like dblvs suggested would good solution add timeout side happens user changes router state url wo nt delay things look wrong want wait using work either case", "d": "6/2017"}, {"body": "thank reproduction instruction helped fix issue", "d": "6/2017"}, {"body": "note similar behaviour enzymeshallow", "d": "6/2017"}, {"body": "agree defiantly breaking change using ngoninit sub components routes case send child parent parent side menu router links changes active child render header action buttons via rxjs subject ngoninit worked fine updated broken requiring double click router link recognize child changed fire first time timing different stated clicking router link causes screen update accordingly seems issue order events get fired placing call constructor sub component fixes issue curious changed would like use ngoninit ngondestroy initialization destruction procedures", "d": "6/2017"}, {"body": "indeed breaking change sure done since already broken fixed reverting cause another breaking change events tricky router change order timing events", "d": "6/2017"}, {"body": "change made support animations understand could look like breaking change nt guarantee sequence router events interleaved component lifecycle hooks would nt caught documentation tests cover sequence said sounds like use cases need solve agree subscribing ideal would correct use said use case appears getting event subcomponent level assuming meant terms application state maybe another event published support use case common one", "d": "6/2017"}, {"body": "jasonaden using read data active route changing routes event navigationend menucomponent working anymore initial startup navigating working expected menucomponent", "d": "6/2017"}, {"body": "breaks things even subscribe constructor way change timing events without breaking existing code documented right change log breaking change reverted postponed", "d": "6/2017"}, {"body": "problem router fires event actually problems linked router event load indicator lazy module navigating page loaded yet kind loader youtube shows navigating videos videos need get navigationend hide ca nt anymore subscribe ngoninit kind angular wants us use lot rxjs observables wo nt work anymore operators like combinelatest waiting event fire late catch way kind replay subject anything like get events oninit parts app completely blocked", "d": "6/2017"}, {"body": "thanks feedback issue discussing would appreciate use cases looking would realworld use case could one multiples create another plunker demonstrates problem realworld scenario thanks", "d": "6/2017"}, {"body": "used component would change detected navigation navigation hook would called event triggered latest version called run extra change detection happens event triggered would miss navigation created component subsequent navigations breaks things even subscribe constructor called navigation still components created navigation provided stamped ie oustide plunker also see placing call constructor sub component fixes issue curious changed would like use ngoninit ngondestroy initialization destruction procedures question would subscribing useful pattern looking use cases previous comments component subscribing event assumes called navigation creates router outlet component inside case called condition becomes true event fired dahaupt probably something like ts ngoninit thisupdatetitle thisrouteroot updatetitle root francoisappliware could probably use something along lines previous ex one question though would responsibility child component hide loading indicator concrete use caserepro take look also document better", "d": "6/2017"}, {"body": "case even listening route events calling subjectnext rxjs ngoninit pass instance child parent parent read child title actions collection build buttons master header parent get updated longer click routerlink even though navigation happen parent updates accordingly try provide plunker soon busy weekend mentioned placing call constructor works recommended angular documentation says use ngoninit majority initialization routines", "d": "6/2017"}, {"body": "hello tl dr nt use routerevents anymore put sub constructor fine use case use kind masterpage component holds menu app menus one user one admin items menu come lazy loaded modules navigating menu item references lazy module show load indicator signal user navigation progress swithed subscription constructor follow typescript constructor private state applicationstate private loginservice loginservice private router router thisroutersub thisroutereventssubscribe event gt thisnavigationinterceptor event ngoninit void thisroutersub null thisroutersub thisroutereventssubscribe event gt thisnavigationinterceptor event ngondestroy void thisroutersub null thisroutersubunsubscribe thisroutersub null typescript private navigationinterceptor event routerevent void event instanceof navigationstart thisstatestartglobalwork event instanceof navigationend event instanceof navigationerror event instanceof navigationcancel thisstatestopglobalwork state holds observables used async pipe global indicator tested ngif startstop globalwork pushes either true false underlying subject used observable view master page used components nothing except master page menu links master page gets destroyed recreated swith home admin code seems work fine used use routerevents component navigation nt anymore instead use custom navigationservice subject getter observable call inside ngoninit child component way nt rely routerevents anymore", "d": "6/2017"}, {"body": "following structure app component router outlet main component router outlet created outlet app component menu component renders several menu items created outlet main component menu item directive subscribes router events constructor app component router outlet main component router outlet menu component application opened first time router directive constructor called navigation end event since directive constructor called navigation end event event missed create app navigation start route recognized create main create menu create menu item directives navigation end since create app navigation start route recognized create main create menu navigation end create menu item directives see rendering happens navigation end", "d": "6/2017"}, {"body": "fillmorejl thanks additional info yes plunker showing problem would really help case francoisappliware thanks code samples sounds like moved global loading indicator data indicator bind globalapplication level sounds like better implementation note said longer use router events means far concerned longer affected issue correct kemsky thanks explanation implementation looks like sequence events would able provide plunker demonstrates short could explain detail menu components subscribing router events using events", "d": "6/2017"}, {"body": "adding plunker first post immediately shows problem", "d": "6/2017"}, {"body": "jasonaden use routerevents master page component subscribes constructor checks ngoninit ngondestroy sure subscribed unsubsribe component gets destroyed explanation number previous post indicator app wide seem work expected make plunker okay explanation number end previous post use router anymore instead use custom service created basically subject rxjs service used fire event child gets ngoninit parent subscribe something use service could rely routerevents subscription yes concerned issue anymore still use interested seeing things evolve cheers", "d": "6/2017"}, {"body": "found preview build aio looks like got fixed somewhere along way", "d": "6/2017"}, {"body": "server returning json data seems text fail json parsing need either configure backend proxygateway properly return json data case try parse response json client fails consider response text verify mimetype response client know json closing issue angular issue", "d": "6/2017"}, {"body": "using webpack package might help ngteam provides solution", "d": "6/2017"}, {"body": "chuckjaz idea going", "d": "6/2017"}, {"body": "sort design cc sjtrimble high resolutions talking", "d": "6/2017"}, {"body": "wide", "d": "6/2017"}, {"body": "foxandxss afaict footer background accomodate source code enough vast majority usecases ca nt think easy way fix size top head sjtrimble ideas", "d": "6/2017"}, {"body": "idea", "d": "6/2017"}, {"body": "reported chinese repo", "d": "6/2017"}, {"body": "actually doc region rxjsimports tried add see pr", "d": "6/2017"}, {"body": "dherges thank making patch", "d": "6/2017"}, {"body": "solved thank", "d": "6/2017"}, {"body": "let remove", "d": "6/2017"}, {"body": "yeah fine let remove", "d": "6/2017"}, {"body": "hmm seems calling npm update fixed error", "d": "6/2017"}, {"body": "etallang could related", "d": "6/2017"}, {"body": "macjohnny yes may related since reproduced cancelling animation progress however bug also present chrome specifically wildcard property applied height html element", "d": "6/2017"}, {"body": "works android phone fwiw", "d": "6/2017"}, {"body": "retried iphone today regular incognito worked fine closing reproduce", "d": "6/2017"}, {"body": "problem tag nested html code invalid according mdn valid child button element phrasing content include interactive spec two options resolve remove need button element wrap button element anchor opposite require css changes going leave sjtrimble gkalpak handle", "d": "6/2017"}, {"body": "may well piggy back issue may similar using ff none footer links clickable either", "d": "6/2017"}, {"body": "fatters different issue open new bug report please", "d": "6/2017"}, {"body": "chatted w tbosch agrees actually compiler error since detected compiletime would need behind flag technically breaking change even though catching error state previously went ignored", "d": "6/2017"}, {"body": "probably need apply logic router components plan would raise warning routed component reachable raise error strict mode add flag optin strict mode default nonstrict", "d": "6/2017"}, {"body": "ok suspected change instead works issue maybe get removed get input binding case think default think nt even validate since input even shown page", "d": "6/2017"}, {"body": "angular nt run change detection equals", "d": "6/2017"}, {"body": "issue stays error starts false validator throw error form start passing false", "d": "6/2017"}, {"body": "activate parent deactivate works expected issue initial value", "d": "6/2017"}, {"body": "think fact start false thus nt even render thus value validator never passed case think takes like directive called alone value like empty string equivalent detects true validates", "d": "6/2017"}, {"body": "nothing initial value", "d": "6/2017"}, {"body": "right must lack change detection mentioned plunkr linked initial condition indeed issue toggle checkbox keeps form invalid however initial value behaviour reproduce app leads think maybe race condition email app triggers validation able remove dom stays start invalid specially since mine uses inputs instead ones sent description seems like best bet keep using binding", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "followed tutorial found lines create appcomponent add heroservice providers array appmodule need every view remove heroservice heroescomponent providers array since promoted even right section mentioned find section sharing heroservice read following statement earlier removed heroservice providers array heroescomponent added providers array appmodule move created singleton heroservice instance available components app angular injects heroservice use dashboardcomponent", "d": "6/2017"}, {"body": "embarrassing oversight part thanks jeff jun eric martinez notifications githubcom wrote followed tutorial found lines create appcomponent add heroservice providers array appmodule need every view remove heroservice heroescomponent providers array since promoted even right section mentioned find section sharing heroservice read following statement earlier removed heroservice providers array heroescomponent added providers array appmodule move created singleton heroservice instance available components app angular injects heroservice use dashboardcomponent receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "version used capable automatching latest version hardcoding", "d": "6/2017"}, {"body": "anytime ng new command executed newest released editions angular referenced generated packagejson file already case whenever always uses newest angular reports regressions related nt tag npm days later", "d": "6/2017"}, {"body": "perhaps reason lies somewhere around think bug", "d": "6/2017"}, {"body": "confirmed release fixed bug", "d": "6/2017"}, {"body": "problem works container inserted means everything inside could considered enter using query inside transition allowed need query selecting elements want using regular query instead meaning animation engine throw error happens", "d": "6/2017"}, {"body": "true", "d": "6/2017"}, {"body": "issue deployed staging version new angulario site angular team developing see", "d": "6/2017"}, {"body": "see thanks fredriklundin", "d": "6/2017"}, {"body": "appears feature lunr search index looking", "d": "6/2017"}, {"body": "indeed actual lunr search gives back wrong result", "d": "6/2017"}, {"body": "going upgrade latest lunr use fine grain query attach wildcards", "d": "6/2017"}, {"body": "noticed still problems search results looking test guide named testing found input test fails testi testing looking testing found te found tes found test found testin testing testing titleword guess hit open new issue keep petebacondarwin gkalpak", "d": "6/2017"}, {"body": "believe underlying issue petebacondarwin pr progress let track", "d": "6/2017"}, {"body": "please provide plunker allows reproduce issue requested issue template wrap code get properly formatted", "d": "6/2017"}, {"body": "sorry seems works fine plunker may occur library involved project", "d": "6/2017"}, {"body": "ok plunker reproduce", "d": "6/2017"}, {"body": "looks like bug plunker exactly code initial comment another element", "d": "6/2017"}, {"body": "yes move disabled last radio input two inputs last one disabled", "d": "6/2017"}, {"body": "nt think way make ts happy targeting browser angular supports support specifically find good please send pr meantime probably cast list ts class querylist function iter l querylist querylist amp iterable return l let ql querylist new querylist let item iter ql item number", "d": "6/2017"}, {"body": "using angular example also working expected tries getting stagger work items shown final position right start simply moved position via staggered animation expected behavior course would elements start ending state animated", "d": "6/2017"}, {"body": "maxschwarzmueller looking code demo managed make work something like seems also query setting initial style way using nt think matters clear case matsko light recent discovery think issue anymore rather docs need bit improvement edit sorry realized kind nt related code plnkr example got tangled things try lately new stuff animations package provides us also bit tired right going delete maybe scenario help others coming across", "d": "6/2017"}, {"body": "thank mrcroft fix", "d": "6/2017"}, {"body": "realized previous comment nt related issue got tangled things keep trying lately new stuff animations package provides us sorry maxschwarzmueller", "d": "6/2017"}, {"body": "mrcroft okay misunderstood still behavior seems unintended nt query element change style stagger opinion", "d": "6/2017"}, {"body": "maxschwarzmueller yes definitely seems fixed matias mentioned hopefully published next update", "d": "6/2017"}, {"body": "changed pr title missing documentation new features make clear issue asks way learn new specifically concerned lack documentation new features", "d": "6/2017"}, {"body": "well maybe one thing end start every page last date update version article valid think go along information new thank", "d": "6/2017"}, {"body": "issue quite similar think needed report", "d": "6/2017"}, {"body": "got error export function nt statement always occured details mentioned expected result statement must aot compiler return proper error handling simple reproducing clone npm install ng build prod aot details animationsts contain statement import trigger transition animate style state angularanimations export default page transition animation pagetrasition trigger routeanimation state style opacity transform translatex transition void gt style opacity transform translatey animate easein transition gt void animate easeout style opacity transform translatey import animations animations import component oninit hostbinding angularcore component selector apphome templateurl homecomponenthtml styleurls homecomponentcss animations animationspagetrasition export class homecomponent implements oninit hostbinding routeanimation get routeanimation return true constructor ngoninit angular version angular cli browser language typescript", "d": "6/2017"}, {"body": "thanks thoughts editor declining suggestion grounds might guideline personally disinclined opinionated subject angular style guide editors make choices made mine thanks", "d": "6/2017"}, {"body": "really glad take consideration thanks", "d": "6/2017"}, {"body": "service file sub directory space name cause bad request plunker fails file space name exists real environment error relative specific service file found using servicesmyexampleservicets file works using file renamed exampleservicets changing thew path accordingly appts mycomponentcomponentts make impossible find promise fail", "d": "6/2017"}, {"body": "hy cortopy man problem manage fix", "d": "6/2017"}, {"body": "dubedoy installed worked", "d": "6/2017"}, {"body": "new release fixed issue", "d": "6/2017"}, {"body": "cortopy new version nt fix issue parziphal version still works", "d": "6/2017"}, {"body": "parziphal worked thanks", "d": "6/2017"}, {"body": "new version nt work correctly worked correctly", "d": "6/2017"}, {"body": "angularanimations failing message issue resolved reverting angularanimations", "d": "6/2017"}, {"body": "surprised coworker built project blew scrambling fingerpointing ensued afraid might missing something semantic versioning anyone point opinionated best practices packagejson dependencies using carets tildes production nt think want lock versions bug fixes also btw first character missing exported member theta something would someone use character member name sure missing smart reason", "d": "6/2017"}, {"body": "seeing fail edit scratch funky npm caching happening", "d": "6/2017"}, {"body": "issue get error", "d": "6/2017"}, {"body": "getting issue dependency dump", "d": "6/2017"}, {"body": "working", "d": "6/2017"}, {"body": "using fixed issue sure use fixed version without", "d": "6/2017"}, {"body": "fixed error last night ran saw lot date ran fixed running iirc installing undo changes update drazik im sure tried without", "d": "6/2017"}, {"body": "indeed set version allow npm get latest version major version fix issue remove eg allow npm get version like issue", "d": "6/2017"}, {"body": "fixed version nt help ca nt run project hours compile log", "d": "6/2017"}, {"body": "try", "d": "6/2017"}, {"body": "expand drazik suggestion", "d": "6/2017"}, {"body": "thanks canadianengineer worked well nt change incrementing flags ie everything compiled fine fixed error last night ran npm outdated saw lot date ran npm update amp amp npm start fixed running npm update amp amp npm install amp amp npm start iirc installing undo changes update", "d": "6/2017"}, {"body": "done npm update npm start everything works fine angularplatformbrowserdynamic update angularplatformbrowserdynamic", "d": "6/2017"}, {"body": "yegorkh works thanks team project nt forget save option order keep date", "d": "6/2017"}, {"body": "combined angularmaterial angularmaterial solved issue", "d": "6/2017"}, {"body": "fixed running", "d": "6/2017"}, {"body": "installing angularanimations suggested parziphal worked", "d": "6/2017"}, {"body": "even worse machine see position search icon", "d": "6/2017"}, {"body": "node npm angular issue", "d": "6/2017"}, {"body": "also experiencing issue issue probably related angular presumed fixed angular reported cases angular used nglightning angularmaterial prevents performing aot compilation rollup", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "issue progress kendo modules", "d": "6/2017"}, {"body": "problem ngxbootstrap angular quite huge regression release affecting many people reported many projects issue", "d": "6/2017"}, {"body": "issue angular project uses", "d": "6/2017"}, {"body": "happens projects using huge regression please look asap", "d": "6/2017"}, {"body": "problem using use angular package format thus loaded using rollupplugincommonjs ngc p tsconfigaotjson amp amp rollup c module import tslint disable import angularcore import captchacomponentngfactory import angularforms import", "d": "6/2017"}, {"body": "project everything troublesome revert back angular version", "d": "6/2017"}, {"body": "chuckjaz reproduction setup steps file look like typescript fileoverview file generated angular template compiler edit suppress suspiciouscode uselesscode missingproperties missingoverride tslint disable import angularcore import captchacomponentngfactory import angularforms import import const stylesrecaptchacomponent export const rendertyperecaptchacomponent styles stylesrecaptchacomponent data export function l return l target null div null null null null null null null export function l return l null null recaptcha null null null null gt return null null null ck v gt ck null export const recaptchacomponentngfactory recaptcha sitekey sitekey theme theme type type size size tabindex tabindex badge badge language language captcharesponse captcharesponse captchaexpired captchaexpired sourcemappingurldata applicationjson notice import file ngfactory outputted", "d": "6/2017"}, {"body": "verified fixed", "d": "6/2017"}, {"body": "fixed latest update angularcompilercli version resolved dependencies angulartscwrapped minimist reflectmetadata angularcompiler version resolved dependencies tslib", "d": "6/2017"}, {"body": "verified new existing nonionic projects nt problem maybe nodemodules got corrupted upgrade suggest verify version angular core packages", "d": "6/2017"}, {"body": "clarify simplest reproduction looks like captured linked reproduction html ts constructor private elementref elementref private renderer optional self public ngcontrol ngcontrol optional private parentform ngform optional private parentformgroup formgroupdirective problem happens input applied chip element iterated changes injects best guess decorator private member somehow triggers code path corrupts injector view since chips siblingscousins input", "d": "6/2017"}, {"body": "started running issue library well however instance using decorators component attaches constructor simplest reproduction managed plunkr unfortunately incredibly vague happens nt far ca nt seem get definitive list requirements reproduction", "d": "6/2017"}, {"body": "got issue though reproduction plunker link slightly different html foo constructor results took get reproduction running lot conditions issue arises component must present form element must present validation component must present input must injected constructor must nt empty metadata element must template change one conditions suddenly correct injected private properties reproduction though use constructor arguments nt public properties", "d": "6/2017"}, {"body": "plunker issue clear flex layout believe must able apply style rule matsidenavcontent div", "d": "6/2017"}, {"body": "bug material component css encapsulation protects end user easy overriding fixed example please check article see", "d": "6/2017"}, {"body": "bug material sidenav encapsulation turned style rule still modified contain selector", "d": "6/2017"}, {"body": "right turn appcomponent work expected means appcomponent still prevents styles leaking direct children", "d": "6/2017"}, {"body": "style rule still modified contain selector see done sidebar project component via dynamic content sidebar wants style dynamic content must turn encapsulation", "d": "6/2017"}, {"body": "nt understand encapsulation mangle styles would exist way style app turn ever turn must somethinghave reason following solution take styles angular thus avoid mangling without risk changing default setting definitely ripple effects sidenav turns breaks things nt want responsible matsidenavcontainer component encapsulation viewencapsulationnone expect styles build note add style rules component nt know would know seems nt change things introduce breakage realize using cutting edge tool chain problems really hope guys find better solution", "d": "6/2017"}, {"body": "rgant sorry feel uncomfortable styles encapsulation try clarify quote angular documentation deep component styles normally apply html component template use selector force style child component tree child component views selector works depth nested components applies view children content children component says default encapsulation strategy allows style elements appear component template particular example want style elements belong belong component template absolute valid solution turn encapsulation component use selector external stylesheet chosen want style party component normally would sidenav component would go directly edit styles default viewencapsulation becomes useful write component style zero problem css styles component overlapoverride styles component world without css encapsulation number css methodologies like oocss acss bem smacss etc solve problem encapsulation may choose use still isolated styles components example write simple selectors etc styled inside particular component child component styled defined child", "d": "6/2017"}, {"body": "hooking events via helps", "d": "6/2017"}, {"body": "fixes releases since could retest code see issue still exists", "d": "6/2017"}, {"body": "suggestion igorminar", "d": "6/2017"}, {"body": "alxhub would fixed one", "d": "6/2017"}, {"body": "keyvhinng attribute supported ie see", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "z", "d": "6/2017"}, {"body": "fixed fix released soon", "d": "6/2017"}, {"body": "matsko looks like regression used work angular", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "issue fixed see updated plunkr", "d": "6/2017"}, {"body": "dup", "d": "6/2017"}, {"body": "ericmartinezr idea error relative module found appappmodule resourcesassetsjsmaints module exists correct path", "d": "6/2017"}, {"body": "ericmartinezr tried suggested solution resolve warning message still receiving", "d": "6/2017"}, {"body": "situation seams domain related narrow issue framework provide minimal reproduction otherwise actionable", "d": "6/2017"}, {"body": "load give target route gives target module name activate gives target route problem needed fix load interface", "d": "6/2017"}, {"body": "general statement problem canload decide load module logic needs route example module admin admin module view route called roles navigate route called adminmanageroles load know target manageroles sees admin module target also user enters full url like load use location url see target path call navigate myaccountorderslist load function see path route case user enters url load see route call navigate blinds load information cripples utility load application navigation activate suffer route blandness problem difference means application designed navigate feature needs load guard needs route", "d": "6/2017"}, {"body": "better explain point made plunkr", "d": "6/2017"}, {"body": "toxicable excellent thanks think bugs like angular offer something better code text strings", "d": "6/2017"}, {"body": "could please make minimal reproduction show issue plunkr would best template get started", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "bind angulars native dom ones currently believe discussion topic somewhere unsure exactly take look issues might find", "d": "6/2017"}, {"body": "working custom events created strange behavior", "d": "6/2017"}, {"body": "arielgueta use dependency injection achieve trying", "d": "6/2017"}, {"body": "thanks already knew expected hostbinding work", "d": "6/2017"}, {"body": "dup", "d": "6/2017"}, {"body": "closing dupe", "d": "6/2017"}, {"body": "fixed via", "d": "6/2017"}, {"body": "bretto think problem related route angular instantiates component related route actually component instantiated first turn following turn instance reused created reinitialization case subscribing observable running code change param ca nt use hook think case switching routes still route also animation transition two routes play still route", "d": "6/2017"}, {"body": "mlcmlapis matsko look one component hard coded url routes animation works imho think issue needs solution url params way hardcoding routes transition working", "d": "6/2017"}, {"body": "yes plunker hardcoded routes work expected used params new set annimation features hot topic nt enough time dive yet sure mathias aware case built solution already mathias look issue comment situation matsko thanks", "d": "6/2017"}, {"body": "additionally thinking way force new instantiation component thus force animation ca nt get work must missing secret sauce somewhere thank", "d": "6/2017"}, {"body": "updated plunkr issue", "d": "6/2017"}, {"body": "hmm think case subscribing bit different config used need wait mathias response", "d": "6/2017"}, {"body": "yes need help someone knowledgeable hot subject", "d": "6/2017"}, {"body": "two problems state route nt changing going value time easy work around since grab url value directly since route component component router automatically reuse vicb jasonaden bug nt destroyedcreated time unless custom reuse strategy used going route reused new view attached removed", "d": "6/2017"}, {"body": "matsko thanks update objective sliding transitions left right going previous next step component always need transition make look right btw thank work animation module becoming awesome", "d": "6/2017"}, {"body": "alright working plunkr app problem since route definition component different url router updated content page therefore make animate need create forces route always reloaded next thing animation configuration state value still going therefore component router state preparation function needs return unique value based url added plunkr way get ahold value return nothing wrong router animations need extra work get operational", "d": "6/2017"}, {"body": "matsko yeap custom key thought nt finished idea end thanks explanation would helpful certainly many others maybe would good idea add case explicitly docs suppose many similar questions future", "d": "6/2017"}, {"body": "matsko thanks time may still deeper issue added working example project nt work investigation think problem animation project root child component created plunkr illustate issue see components recreated animation configuaration reflecting current page lost transition still something wrong thank ongoing support open issue", "d": "6/2017"}, {"body": "works fine", "d": "6/2017"}, {"body": "hi toxicable changed plunker little bit example try changing new age click change button see error thrown", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "hi alexzuza deferred update next turn javascript yup workaround problem however resolve inconsistency behaviour interpolation expression running js turn problem reporting", "d": "6/2017"}, {"body": "hang moment maybe workaround resulting code run next turn yes course code running asynchronously maybe still js turn care comment", "d": "6/2017"}, {"body": "abide unidirectional data flow updating value child component change detection cycle parent view value checked", "d": "6/2017"}, {"body": "yes agree still nt explain inconsistent behavior reporting", "d": "6/2017"}, {"body": "alexzuza one point note keeping unidirectional dataflow afaict code running turn button click handler triggers method called basis ok make changes object supplied within without violating unidirectional dataflow principal seems supported following statement angular training material example trigger event handler example button click handler modify data application much want level component tree click handler code returns control yielded back angular framework", "d": "6/2017"}, {"body": "violating unidirectional dataflow principal changing value person change detection cd issue since child changing value person cd second round cd debugging comes rechecks expression got sees changed something throws error changing data parent directly child cd run", "d": "6/2017"}, {"body": "ok fair enough still leaves inconsistent behavior reporting bug", "d": "6/2017"}, {"body": "please fill feature request correctly angular dose nt know going use browser build time include browsermodule bundle", "d": "6/2017"}, {"body": "examples seen thus far see import primary module level post seen used import source anywhere else examples least seems need could something detected injected runtime", "d": "6/2017"}, {"body": "thanks add list compatible xmb xliff specs", "d": "6/2017"}, {"body": "thanks xliff could use equivtext attribute nt know xbm hard get information format", "d": "6/2017"}, {"body": "yeah spec xmb know asked", "d": "6/2017"}, {"body": "far know angular uses xmb never seen anybody else using xmb xml even without official dtd schema safe add extra attribute something like", "d": "6/2017"}, {"body": "actually xmbxtb developed google google available public google open source projects closure angular lack spec nt helping third party tools support", "d": "6/2017"}, {"body": "thanks important xliff works fine continue testing new features thank implementing seems really important missing piece source code ts string extraction happy angular official method js platforms end several party implementations hard developers hard localization tool vendors", "d": "6/2017"}, {"body": "yes working hard adding crucial missing features nice people like test new things report bugs well", "d": "6/2017"}, {"body": "related", "d": "6/2017"}, {"body": "fix issue", "d": "6/2017"}, {"body": "awesome saved day finaly go home one question understand correctly called tests thank much", "d": "6/2017"}, {"body": "could please make minimal reproduction plunkr would best template get started", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "looks like need server side rendering done angular universal see", "d": "6/2017"}, {"body": "thanks info toxicable following angular universal concept", "d": "6/2017"}, {"body": "seems like bug reported webstorm", "d": "6/2017"}, {"body": "yosigolan use angular language service", "d": "6/2017"}, {"body": "thank ocombe exactly opened bug angular repo since using angular language service understand direct webstorm warnings show vicb approve", "d": "6/2017"}, {"body": "confirm issue chuckjaz take look see problem language service webstorm", "d": "6/2017"}, {"body": "great thanks", "d": "6/2017"}, {"body": "link invalid find currently cookbook overview obsolete soon since cookbook overview new version docs released", "d": "6/2017"}, {"body": "using recommended try without", "d": "6/2017"}, {"body": "mlcmlapis error occur changing import ie work barrels", "d": "6/2017"}, {"body": "updated plunkr angular problem remains", "d": "6/2017"}, {"body": "plunker uses locale mistake using fixes issue updated plunker", "d": "6/2017"}, {"body": "hi skreborn mistake developing app uses locale locale received platform service strange works builtin pipe custom pipe transform", "d": "6/2017"}, {"body": "hello correct format number locale esus fixed pr replace intl api angular see", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "junimohano issue angular seems like project configured properly suggest post stack overflow support like ericmartinezr said", "d": "6/2017"}, {"body": "try separate files", "d": "6/2017"}, {"body": "hello tytskyi mean", "d": "6/2017"}, {"body": "tuizi far understand file modules defined exported try make files something similar", "d": "6/2017"}, {"body": "currently files solution", "d": "6/2017"}, {"body": "tytskyi nt worry already found workaround report issue changes made workaround minimal changes changing filenames appuseruserroutingmodulets appadminadminroutingmodulets summarize angular lazy routes path crash app module userrouting loadchildren dashboarddashboardmodule userdashboardmodule module adminrouting loadchildren dashboarddashboardmodule admindashboardmodule workaround renaming module file module userrouting loadchildren dashboarduserdashboardmodule userdashboardmodule module adminrouting loadchildren dashboardadmindashboardmodule admindashboardmodule", "d": "6/2017"}, {"body": "quick look seems like specify path root project could please try report thanks", "d": "6/2017"}, {"body": "vicb yes works put path root project module userrouting loadchildren appuserdashboarddashboardmodule userdashboardmodule module adminrouting loadchildren appadmindashboarddashboardmodule admindashboardmodule", "d": "6/2017"}, {"body": "thanks tuizi closing appears resolved", "d": "6/2017"}, {"body": "something shows steps recurring imagine faintly portrayed", "d": "6/2017"}, {"body": "would happy validator described goes separate package npm", "d": "6/2017"}, {"body": "tytskyi already use version within code space immediate need sake dry copying code future projects would great come single package something like angularcontrib good contributed others blessed angular team", "d": "6/2017"}, {"body": "could cool generally would like angular core extended features means bugs maintenance potentially would postpone releases core", "d": "6/2017"}, {"body": "tytskyi really neither direct postponement power angularcore either idea many packages amp frameworks also portion", "d": "6/2017"}, {"body": "meant add overhead implemented directly hands", "d": "6/2017"}, {"body": "looks like support request think least provide result get explicit functions required code supposed work github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "6/2017"}, {"body": "zoechi thanks reply created plunkr based recommended template relevant code post see however well versed enough systemjs webpack configure aot compilation also nt know get node logging plunkr maybe help set example far tell several aot issues since angular report highlight specific one look example error specifically says function calls supported yet relies parameter even placing provider separate file per angular styleguide original implementation exact error persists correct behavior compiler occurs aot compilation typescript export const testindexeddbcache new injectiontoken testindexeddbcache export let testindexeddbcacheprovider provider provide testindexeddbcache usefactory gt new indexeddbcache test position error", "d": "6/2017"}, {"body": "issue hope solution soon occurs use aot", "d": "6/2017"}, {"body": "please use support channels support requests", "d": "6/2017"}, {"body": "understand support question code works fine jit however switching aot many things break many threads switching production build require many code changes", "d": "6/2017"}, {"body": "darincardin see link aot donts initial comment", "d": "6/2017"}, {"body": "looked back issue appears combination following bugs funcinprovidersusefactory arrowfunctionexports currently situation typescript testapimodulets import ngmodule modulewithproviders angularcore import testindexeddbcacheprovider testindexeddbstoreprovider testapicache ngmodule imports declarations exports export class testapimodule static forroot modulewithproviders return ngmodule testapimodule providers testindexeddbcacheprovider testindexeddbstoreprovider typescript testapicachets import injectiontoken provider angularcore import indexeddbcache indexeddbcacheindexeddbcache import indexeddbstore indexeddbcacheindexeddbstore import testindexeddbcachefactory testindexeddbstorefactory testapicachefactory export const testindexeddbcache new injectiontoken testindexeddbcache export let testindexeddbcacheprovider provider provide testindexeddbcache usefactory testindexeddbcachefactory export const testindexeddbstore new injectiontoken testindexeddbstore export let testindexeddbstoreprovider provider provide testindexeddbstore deps testindexeddbcache usefactory testindexeddbstorefactory typescript testapicachefactoryts import indexeddbcache indexeddbcacheindexeddbcache import indexeddbstore indexeddbcacheindexeddbstore export function testindexeddbcachefactory return new indexeddbcache test export function testindexeddbstorefactory testindexeddbcache indexeddbcache return new indexeddbstore testindexeddbcache test typescript indexeddbcachets import injectable angularcore injectable export class indexeddbcache constructor protected databasename string typescript indexeddbstorets import injectable angularcore import indexeddbcache indexeddbcache injectable export class indexeddbstore constructor protected database indexeddbcache protected storename string still question factories physically separate file inconsistent jit behavior across compilers seen donts must bug intended behavior feedback helped resolve errors coming error string parameter constructor working one put issue stackoverflow since ca nt find solution", "d": "6/2017"}, {"body": "karasuni continually trying improve ergonomics using aot major focus specifically using lambda functions providers addressed technique referring metadata expression lowering requires typescript transform pipeline switching use said always things supported jit aot differences bugs limitations aot nt guarantee jit application aoted guarantee aot applications jited", "d": "6/2017"}, {"body": "think try get comfortable modules way works built reason unlikely change", "d": "6/2017"}, {"body": "probably noticed frameworks get comfortable die quickly developers want simplest efficient workflow get angular amazing job suggestions infeasible due real world technical constraint please give heads research", "d": "6/2017"}, {"body": "topic beating dead horse beaten death million times good reasons build way currently still way initially tried without modules later added building powerful framework weighing advantages disadvantages number people want something nt mean done without hurting areas framework", "d": "6/2017"}, {"body": "topic beating dead horse beaten death million times well polymer one million one times came good reasons build way reasons right sprinkling parts routing module parts component two approaches mutually exclusive one dry better user story building powerful framework weighing advantages disadvantages disadvantageous take three feature requests far put together eliminate lot boilerplate user error repetition goods things far pointed anything material drawback", "d": "6/2017"}, {"body": "understanding issue correctly think using redirect way could one pointing given module", "d": "6/2017"}, {"body": "saravanansarch getting error message provide plnkr reproduces problem", "d": "6/2017"}, {"body": "deebloo thanks reply nt get error messages every thing run fine single line triggered tried solutions internet finally switched angular working fine using angular modules time working sorry huge file source ca nt provide plnkr plz tell syntax correct face problem", "d": "6/2017"}, {"body": "map nt returning anything", "d": "6/2017"}, {"body": "deebloo thanks used jwt authentication project one creating issues created new project without jwt auth working fine experience strange mysteries thanks giving valuable time", "d": "6/2017"}, {"body": "good hear fixed kind questions belong stackoverflow thought", "d": "6/2017"}, {"body": "nt think possible problem svgtree xml nt support unknown elements means put svg tree render anymore put xhtml modifier node wrap node inside means whatever router puts html subspace svg render tree solution comes mind create router using svg native element really hope wrong idea intriguing works would enable nice tricks charting pops mind generative art fun exersizes become possible also", "d": "6/2017"}, {"body": "sanderelias thanks would idea start order create custom router really dislike way working around issue keen give go unfortunately reading angular source code extremely tedious btw anyone knows find docs going bit indepth regards happening hood angular would really love read meantime experiment extending routeroutlet attribute selector see", "d": "6/2017"}, {"body": "jorafali would start forking ngrouteroutlet start suspect might able use router custom outlet element", "d": "6/2017"}, {"body": "thanks first issue closing based discussion sanderelias", "d": "6/2017"}, {"body": "could follow template provide reproduction please thanks", "d": "6/2017"}, {"body": "use rich html editor edit html cms show end user set html style style attribute need keep style attribute", "d": "6/2017"}, {"body": "would like create pr fix file cheers", "d": "6/2017"}, {"body": "nt looking anyway repo angularcli", "d": "6/2017"}, {"body": "kind resubmit page nt describe karma plugins automatically configured bunch listed packagejson karmacli latest karmajasmine latest karmajasminehtmlreporter latest karmasourcemaploader latest karmawebpack latest karma settings configured based project settings pass path config karma command case would wonder better using script packagejson means instructions change include one line invent nuances thing tue jun pm eric martinez notifications githubcom wrote nt looking angularcliwikiangularcli anyway repo angularcli receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "found automatically loaded unless specify nt change fact least commands run karma nt make sense config files piled top karma great enough include angularcli call angularkarma tue jun pm brian cullinan megamindbrian gmailcom wrote kind resubmit page nt describe karma plugins automatically configured bunch listed packagejson karmacli latest karmajasmine latest karmajasminehtmlreporter latest karmasourcemaploader latest karmawebpack latest karma settings configured based project settings tue jun pm eric martinez notifications githubcom wrote nt looking ularcliwikiangularcli anyway repo angularcli receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "saw opened issue cli repo let continue", "d": "6/2017"}, {"body": "duplicate please check details", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "always nice reminded one cares think nt work consolidating build stacks instead closing tickets tue jun pm pawel kozlowski notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "nt sound worth effort", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "describe exactly stable angular", "d": "6/2017"}, {"body": "pretty amazing right sure keep getting better throwing thoughts move documentation related projects ngxcharts", "d": "6/2017"}, {"body": "tytskyi think devs also prefer use declarative visually straightforward approach wiring things order easier see things working way everything stable start improving developer efficiency removing boilerplate improving container design spring framework used massive xml configuration files almost boilerplate", "d": "6/2017"}, {"body": "think devs also prefer use declarative visually straightforward approach wiring things order happens using ngmodule less boilerplate looks easier wireup components directly build application scratch play well refactor existing application remove unused code copypaste code project another trying make modules small possible ideally small feature reused deleted completely", "d": "6/2017"}, {"body": "zero boilerplate zero repetition dry design doable look carefully still open issues issue log simpler angular gets smaller issue stack gets time spend building meaningful things", "d": "6/2017"}, {"body": "consider example module custom datepicker component contains component nothing use new project copy module connect shared module need connect every component want use recommend check one", "d": "6/2017"}, {"body": "still exactly saying eliminate boilerplate suggesting declare component uses date picker import date picker component nothing angular generates necessary meta data include date picker people wish declare date picker one place within app declare main app shell good go difference need finito go grab beer nt worry array angular got suppose also within application also uses imports version incompatible main angular read packagejson file inject date picker calendar component needs automated angular also generate nice dependency graph showing exactly ngmodule current provides use type feature warn things might silly less work productivity living la vida loca", "d": "6/2017"}, {"body": "benefit direct import needed refactoring data picker component import declaration top every file needs component mandatory file becomes self descriptive moved around possibly completely different project module easily", "d": "6/2017"}, {"body": "take look axes module ngxcharts js import ngmodule angularcore import axislabelcomponent axislabelcomponent import xaxiscomponent xaxiscomponent import xaxistickscomponent xaxistickscomponent import yaxiscomponent yaxiscomponent import yaxistickscomponent yaxistickscomponent import commonmodule angularcommon ngmodule imports commonmodule declarations axislabelcomponent xaxiscomponent xaxistickscomponent yaxiscomponent yaxistickscomponent exports axislabelcomponent xaxiscomponent xaxistickscomponent yaxiscomponent yaxistickscomponent export class axesmodule see boilerplate designers repeat name every single component times imagine components access common ones want move completely different project actually need something thrown sake development flow also nt think module format follows current recommendations angular one module per component", "d": "6/2017"}, {"body": "typescript import ngmodule angularcore import axislabelcomponent axislabelcomponent import xaxiscomponent xaxiscomponent import xaxistickscomponent xaxistickscomponent import yaxiscomponent yaxiscomponent import yaxistickscomponent yaxistickscomponent import commonmodule angularcommon const publicdeclarations axislabelcomponent xaxiscomponent xaxistickscomponent yaxiscomponent yaxistickscomponent ngmodule imports commonmodule declarations publicdeclarations exports publicdeclarations export class axesmodule needed declared components use built pipes modules app import normal situation think general want angular framework want complete development platform framework invent new platform language uses already exists maybe would like check angulardart propose api like modules routing defined per component plus dart complete development platform", "d": "6/2017"}, {"body": "commonmodule needed declared components use ngif ngfor built pipes modules app import commonmodule normal situation understand write ngxcharts library component set obviously intelligent people though yet see module authored even rewrite lot people would look go ok really gain maybe gained something could simpler also missing point one chart files depend common nt clear current module format therefore code easily refactored nt really want framework development platform saying someone looking certain label help reduce issue stack code simple easy read end result build easy maintain refactor trying show case atm complicated simple possible either focused whether made simple right telling chop carrots way chop one minute instead two telling want vegetable stew maybe consider restaurant", "d": "6/2017"}, {"body": "commonmodule needed declared components use ngif ngfor built pipes modules app import commonmodule normal situation one point right suspect explanation one many explanations ng module related explanations given clear commonmodule provides library explicity give us option get grasp going lead lot developers attempting follow along examples cut paste stuff flip side explicitly import use within component even directives within templates code becomes clearer easier follow suggestion would allow approaches example developer could turn tooling tells import common module wish follow explicit approach becomes obvious parts library component depends also alternate approach becomes easy leave ngmodule configuration dependencies longer needed intact nothing directly links module corresponding components tooling warning developed well never say never without explicit imports much complicated", "d": "6/2017"}, {"body": "another question suppose depend tree shake rest module since using directives", "d": "6/2017"}, {"body": "personally think remove styling al together reason content nt standalone", "d": "6/2017"}, {"body": "sebastianschenk thanks issue however looking plunker appears first time instantiating component nt appear longterm leak continue going page back page run garbage collection nt anything retained", "d": "6/2017"}, {"body": "jasonaden true however still expected behaviour component gets removed dom also removed memory big enterprise application many components still blow memory eventually would make sense keep components memory reused happens current future routes nt think issue closed still bug", "d": "6/2017"}, {"body": "sebastianschenk okay thanks clarification reopen take closer look", "d": "6/2017"}, {"body": "petebacondarwin igorminar fyi", "d": "6/2017"}, {"body": "obsolete new soontobereleased version app", "d": "6/2017"}, {"body": "wardbell intentional nt believe blocker igorminar thoughts", "d": "6/2017"}, {"body": "nt know like assume design decision would put separate lines left align", "d": "6/2017"}, {"body": "petebacondarwin design decision one item might look left aligned", "d": "6/2017"}, {"body": "remove link source code left align module name either gkalpak fix", "d": "6/2017"}, {"body": "rules collapse nonselected folder changed per issue issue issue resolved pr implementation fix issue relies decision enforced code prohibit headers attached docs node presumed either header doc never", "d": "6/2017"}, {"body": "wardbell dupe consolidate one", "d": "6/2017"}, {"body": "closed dup", "d": "6/2017"}, {"body": "wardbell also dupe", "d": "6/2017"}, {"body": "partial dup two cols issue separate retitled linked", "d": "6/2017"}, {"body": "due toc taking screen list items set take container work", "d": "6/2017"}, {"body": "issue fixed btw sufficient solve", "d": "6/2017"}, {"body": "gkalpak issue addresses columns item overlap issue separate one still think would nt fix", "d": "6/2017"}, {"body": "meant wo nt fix overlap issue although improve things sure twocols issue ca nt reproduce grin", "d": "6/2017"}, {"body": "gkalpak ok page one separate issue one related make mdsidenavcontainer width puts back columns bc space", "d": "6/2017"}, {"body": "since ca nt reproduce issue could confirm fixes", "d": "6/2017"}, {"body": "interpret confirmation fixed grin", "d": "6/2017"}, {"body": "gkalpak still two columns api filters page far tell", "d": "6/2017"}, {"body": "mentioned earlier reproduce still see feel free reopen issue smiley", "d": "6/2017"}, {"body": "added commit api filter page related pr fixes", "d": "6/2017"}, {"body": "btw true going nonsidenav page sidenav page eg home guidequickstart sidenav shows immediately new doc fetched background nt look nice", "d": "6/2017"}, {"body": "actually totally different issue", "d": "6/2017"}, {"body": "let talk gone back forth fact used work issue requests changed current original behavior closing user selects igorminar may recall participated decision", "d": "6/2017"}, {"body": "conclusion last discussion narrow displays keep current behavior collapse currently active container wide displays automatically collapse nonactive containers menu item selected", "d": "6/2017"}, {"body": "updated issue reflect", "d": "6/2017"}, {"body": "angular cli specific nothing angular framework could please file issue cli repo discussion thanks", "d": "6/2017"}, {"body": "correct way retrieve url may updated expect updated need something like bugfeature report please consider closing issue", "d": "6/2017"}, {"body": "closing per message use know url actually changed", "d": "6/2017"}, {"body": "matsko sorry bother could look one also important angular material eg tabs etc see", "d": "6/2017"}, {"body": "interestingly animation works doubleclicking togglebutton ie starting second animation first one completes means animation could work principle indeed issue bug work using transitions instead states either work using keyframes work using absolute pixel values instead percentages", "d": "6/2017"}, {"body": "seems related webanimationsjs polyfill see issue example", "d": "6/2017"}, {"body": "workaround using instead apparently fixes problem see example however think fixed webanimationsjs since translating works whereas translating", "d": "6/2017"}, {"body": "one problem still remains angular animations quickly toggling animation states clicking button box jumps translation respectively start subsequent animation whereas chrome firefox animation smoothly changes direction current position without jumping around believe solved angular animations api since following example also jumps around chrome ie work smoothly chrome jumps ie matsko could look", "d": "6/2017"}, {"body": "see safari also broken looking", "d": "6/2017"}, {"body": "matsko thanks quick response effort awesome observe safari hitting toggle button repeatedly animation eventually jump final target state chrome works like charm", "d": "6/2017"}, {"body": "seems remain issue", "d": "6/2017"}, {"body": "happens issue webanimations polyfill using matrix value together nonmatrix value causes issue going animation cancelled current value snapshotted element ends css transform matrix destination value regular css transform value ends final keyframe animation mix causes polyfill mess", "d": "6/2017"}, {"body": "use css matrix values state want get away cancellation transform styles working polyfill hopefully guys fix polyfill soon", "d": "6/2017"}, {"body": "matsko thanks lot look providing suitable solution left two open issues webanimationsjs webanimationswebanimationsjs webanimationswebanimationsjs close issue since angularrelated parts seem work fine", "d": "6/2017"}, {"body": "attach plunker link reproduce steps use plunker", "d": "6/2017"}, {"body": "separate top results alphabetic list change top results bold get rid ellipses", "d": "6/2017"}, {"body": "closed via", "d": "6/2017"}, {"body": "closed via", "d": "6/2017"}, {"body": "supposed fixed although still seems tiny offset probably require newdifferent fix new header layout", "d": "6/2017"}, {"body": "could please provide minimal reproduce scenario ca nt help based information provided ideally also updated latest released angular version check error still", "d": "6/2017"}, {"body": "add reproduction", "d": "6/2017"}, {"body": "closing missing repro reopen new issue repro available thanks", "d": "6/2017"}, {"body": "purpose currently sampling scroll events lower change detections triggered nt costly", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "reason highlighted active section grin based criteria set scroll directly section gets highlighted correctly issue scrolling top offsets would fixed demo header placing change fixing might needed smiley", "d": "6/2017"}, {"body": "reference underlying issue fixed master need wait released upgrade", "d": "6/2017"}, {"body": "temporarily remove focus styling new version material released", "d": "6/2017"}, {"body": "gkalpak originally done igorminar", "d": "6/2017"}, {"body": "decided temporarily remove focus style upgrade amterial version includes hopefully couple days", "d": "6/2017"}, {"body": "sjtrimble nt know kind animation would look nice hamburger start smiley", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "bit tricky since appcomponent longer knowledge whether toc take look see done", "d": "6/2017"}, {"body": "ooops working forgot assign pr almost ready", "d": "6/2017"}, {"body": "ok leave alone", "d": "6/2017"}, {"body": "related somehow", "d": "6/2017"}, {"body": "let close one", "d": "6/2017"}, {"body": "jnizet thank duplication fix pending pr however issue contains exact description problem", "d": "6/2017"}, {"body": "tytskyi oh sorry swear searched submitting", "d": "6/2017"}, {"body": "closing duplicate", "d": "6/2017"}, {"body": "could please provide reproduce scenario plunker really need one move forward", "d": "6/2017"}, {"body": "simple list dates objects date type chrome console look like im using pipe html im using format ddmmyyyy works well mmyyyy fromat problem reproduce still need reproduce plunker please tell", "d": "6/2017"}, {"body": "yes please lot issues treat take time make plunkr much faster us validate bug", "d": "6/2017"}, {"body": "reproduce using plunker seems timezone problem better specify timezone iso format", "d": "6/2017"}, {"body": "shows works ok seeing seems like time zone problem", "d": "6/2017"}, {"body": "im seeing timezone utc offset utc dst offset", "d": "6/2017"}, {"body": "something", "d": "6/2017"}, {"body": "yet pr replace intl api angular see add new option date pipe let specify timezone", "d": "6/2017"}, {"body": "turns impossible trigger", "d": "6/2017"}, {"body": "update people looking workaround uses onreadystatechange works expected probably already dependencies updated plnkr", "d": "6/2017"}, {"body": "good article related impact testing maintenance", "d": "6/2017"}, {"body": "going root module documentation says tell angular components belong appmodule listing module declarations array create components add declarations must declare every component ngmodule class use component without declaring see clear error message browser console obviously angular realizes developer made mistake reports console instead angular default behavior find wire dependency us take example tour imported directly angular could template markup realize needs dependency inject component right angular recommends component corresponding module also needs published also feels redundant since written typescript way compile needed meta data module boilerplate eliminated leaving us decorated component classes angular compiler scan wire dependency graph", "d": "6/2017"}, {"body": "issue issue tracker material repo opinion", "d": "6/2017"}, {"body": "please open", "d": "6/2017"}, {"body": "behaviour u change order paths example", "d": "6/2017"}, {"body": "please ask stackoverflow like see answer angularcontributingmd got question problem please open issues general support questions want keep github issues bug reports feature requests got much better chances getting question answered stackoverflow questions tagged tag angular", "d": "6/2017"}, {"body": "thanks heads posted spring made automatic", "d": "6/2017"}, {"body": "right right place kind questions short answer nt specify something higher injector chain already provides providing changes behavior eg creates new instance service components injector instead sharing instances created higher injector tree read angular dependency injection", "d": "6/2017"}, {"body": "seems like angular would simpler default behavior automatically constructor inject singletons way spring words allow configuration automatically perform developers likely time automatically angular already nt think place type question think ok keep issue open", "d": "6/2017"}, {"body": "sure understand talking think want strongly suggest reading dependency injection works angular since important part framework", "d": "6/2017"}, {"body": "right component needs somewhere angular configuration either component decorator provider array component module level declare providers array spring used well via autowired annotation main point realized time redundant eliminated spring sees constructor like nt tell spring anywhere needs create singleton automatically", "d": "6/2017"}, {"body": "make simplification happen make angular much friendlier", "d": "6/2017"}, {"body": "actually feature request service component defined component constructor injects service default angular service gets automatically injected without configuration necessary", "d": "6/2017"}, {"body": "recommend making new issue want feature request follow contributing guidelines issues using issue template", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "think main problem following line server side generates new microtask would write const resolvedpromise promiseresolve null component export class appcomponent ngafterviewchecked resolvedpromisethen gt try removing hook", "d": "6/2017"}, {"body": "try replacing microtask macrotask isstable logic", "d": "6/2017"}, {"body": "slamming head wall whole days finding issue due consolelog statement alter isstable logic", "d": "6/2017"}, {"body": "investigation alxhub found zone hooks stream hooks node basically stream results microtask hooks change detection call consolelog hence recursion investigating", "d": "6/2017"}, {"body": "zone issue rather change detection one task would call beginend zone hook would also cause infinite loop", "d": "6/2017"}, {"body": "noticed thing need anything else let know hansl", "d": "6/2017"}, {"body": "hansl markpieszak want use please write way javascript zonerootrun gt consolelog resolve loop issue", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "right sorry", "d": "6/2017"}, {"body": "nt expected behavior general mdn docs nodeinsertbefore say referencenode null newnode inserted end list child nodes", "d": "6/2017"}, {"body": "oh ha totally missed thanks", "d": "6/2017"}, {"body": "although adding script like necessarily guarantee run inlined scripts", "d": "6/2017"}, {"body": "gkalpak server side client side initial server view first script tag anything else run", "d": "6/2017"}, {"body": "ah sorry server side fine smiley", "d": "6/2017"}, {"body": "bug unrelated angular anyway css works specification correct behavior would like work consistently need wrap elements container issue closed", "d": "6/2017"}, {"body": "omrirz want custom css class last item ngfor output could use html item implicit local variable directive full list implicit variables find", "d": "6/2017"}, {"body": "issue appears caused using angular quickstart instead angularcli generate project", "d": "6/2017"}, {"body": "need tell systemjs find eg adding entry systemjs config property", "d": "6/2017"}, {"body": "feel like might useful either firebase angular documentation already caused head scratching though end happy moved app cli anyway specifically google products wondering would worth official connecting firebase angular guide", "d": "6/2017"}, {"body": "closing since nt fall bug report feature request category issue tracker suitable still ca nt make work future support requests please post issues stackoverflow using tag wondering nt resolve support issues via issue tracker check explanation", "d": "6/2017"}, {"body": "nt something specific angular firebase systemjs works would require similar handling new npm package want import without angular btw plan use firebase angular might want checkout project", "d": "6/2017"}, {"body": "yeah look present seems giving fairly worrying red errors install current version firebase told works fine looks really useful btw know section functional things really impressed framework coming along late issues jqueryui notwithstanding really happy moved ruby rails", "d": "6/2017"}, {"body": "create custom directive use class directly way suits edit added", "d": "6/2017"}, {"body": "dawidgarus thanks actually ended sure good ideea longterm", "d": "6/2017"}, {"body": "use detect changes array think ts export class mycomponent implements oninit docheck", "d": "6/2017"}, {"body": "goal update child component changes input array input never triggers patent updates array diff thisinput still return changes child inout array sent iphone jun dawidgarus notifications githubcom wrote use iterablediffer detect changes array think ngfor export class mycomponent implements oninit docheck input private input type private inputdiffer iterablediffer constructor private differs iterablediffers ngoninit thisinputdiffer thisdiffersfind thisinput create trackbyfunction ngdocheck const changes iterablechanges thisinputdifferdiff thisinput something changes receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "issue lodashes transpiling note transpile code instead get correct output problem", "d": "6/2017"}, {"body": "hammerjs iscroll ngxcharts", "d": "6/2017"}, {"body": "issue", "d": "6/2017"}, {"body": "get around issue forced let angular artifacts get far things working albeit tested aot builds creating reusable angular module library private npm registry building lib anything compilercli creating incorrect imports suffixed", "d": "6/2017"}, {"body": "issue still present latest release updated plunker cc matsko", "d": "6/2017"}, {"body": "updated plunker release", "d": "6/2017"}, {"body": "updated plunker release matsko", "d": "6/2017"}, {"body": "regression likely fixed soon prefer change large code base work around marked regression several releases since assumed regressions priority stable branch nt get wrong love angular new animations module understand bugs easily creep confidence turn around time fixes future production code worrisome management issue still present latest release updated plunker cc matsko", "d": "6/2017"}, {"body": "yes working towards way regressions landed think one lands may fix problem goes think tomorrow able use angular head see solves problem", "d": "6/2017"}, {"body": "got answer stackoverflow unclear tried check conflicting confusion response mixes conflicting", "d": "6/2017"}, {"body": "explanation change detection document says following stackoverflow mentions event triggers change dirty checking need understand whether view change values view change values dirty checking triggered initiated document identifying flow changedetection", "d": "6/2017"}, {"body": "need understand whether ngzones onturndone event gt dirty checking view change values actually event angular subscribes event notified triggers change detection applicationreftick method triggers detectchanges root view beyond mentioned thing called applicationref listens ngzones onturndone event whenever event fired executes tick function essentially performs change detection irrelevant change detection process described quote component angular represented view nodes hence application tree views angular performs change detection relevant node view dirty checking dirty checking triggered initiated dirty checking instantiated triggering root view form view specific component wrapped changedetectorref inject component constructor essentially reference underlying component view form", "d": "6/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "6/2017"}, {"body": "fair enough however actually request documentation need hopefully taken forward", "d": "6/2017"}, {"body": "issue reads like support request rephrase aio feature request", "d": "6/2017"}, {"body": "checked callback event could something really listen", "d": "6/2017"}, {"body": "would correct saying potential cause huge performance issues medium large apps particularly highly dynamic apps large number state changes", "d": "6/2017"}, {"body": "peterdavidcarter hard generalize apps categories like issue since example large app may use websockets exclusively assume would unaffected issue however applications use http extensively also large amount data bound templates causing long change detection runs yes definitely could effect applications performance", "d": "6/2017"}, {"body": "guess happens patched method adds listener", "d": "6/2017"}, {"body": "vicb nobody listening event george pointed coming listener registered within zone fri jun george kalpakas notifications githubcom wrote guess happens patched send method adds listener readystatechange receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "mean listener registered within zone listening event george pointed", "d": "6/2017"}, {"body": "without aot aot", "d": "6/2017"}, {"body": "reason add listener invoke task triggered times change internal patched use instead made pr fix one", "d": "6/2017"}, {"body": "btw know handled component instead directive much simpler declarative way trying learn play structural directives", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "akuzmanoski confirm works lazy load module", "d": "6/2017"}, {"body": "current project uses lazy loading modules try tomorrow", "d": "6/2017"}, {"body": "matsko sorry late response confirm return elements lazy loaded module non lazy loaded module problem timing remains component animations animation defined routinganimations leaving element destroyed animation finishes", "d": "6/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "6/2017"}, {"body": "rkonstantinov span text spaces target span certain target right element", "d": "6/2017"}, {"body": "behaves differently browser dom implementation code works expected browser also understood correctly children return elements setting attribute possible", "d": "6/2017"}, {"body": "indeed way designed library used platformserver nodechildren shorthand nodechildnodes used quite lot platformserver last two months almost fulltime job give advise less use directly nativeelement better understand nativeelement ssr dom element every time try use directly take risk use implemented exactly browser event implemented use viewchild use renderer true even dont use platformbrowser btw choice keep mind browser expect behave", "d": "6/2017"}, {"body": "looking markup see touchaction css property set none causing issue default hammer behavior able override providing custom hammergestureconfig", "d": "6/2017"}, {"body": "hi problem fixed disabling adblock chrome", "d": "6/2017"}, {"body": "actually mixed browsers actually happened ffox disabling adblock trick indeed angular project work would code need modified work angular", "d": "6/2017"}, {"body": "hello", "d": "6/2017"}, {"body": "take peek thanks", "d": "6/2017"}, {"body": "nt see issue see different one try locally", "d": "6/2017"}, {"body": "yes something changed viewchild becomes available way devmode changedetectionviolation checks work sure changes arrived probably early changed look viewchild ngafterviewinit ngoninit viewchild actually available nt wait moving latter logic removes first occurrence unfortunately clear guidance becomes available synchronous data changes component creation notice raised every time called nt happen happens look two lines first line creates dynamic component kind adds view via second line gives created ad component data two lines execute synchronously app actually works ad component displayed data assigned line appears change dynamically created component closed modification immediately instantiated placed subsequent update component data line disallowed devmode maybe along nt know seems lock occur end current javascript turn case way workaround wait tick provide data fix two ad components work brief moment data example adding null reference operator seems like much work distraction point example would better ad components got data perhaps simpler example simply hard coded data sure worth filing issue undocumented change angular behavior seems like water bridge think review guide determine giving guidance still like revise example conform way angular works let come better guidance", "d": "6/2017"}, {"body": "fixed bug earlier simply thisads loadcomponent moving init code oninit someone update example documentation least ngoninit thisloadcomponent thisgetads ngondestroy clearinterval thisinterval loadcomponent thisads thiscurrentaddindex thiscurrentaddindex thisadslength let aditem thisads thiscurrentaddindex", "d": "6/2017"}, {"body": "someone could enlight lazy load injected components mean like referenced route", "d": "6/2017"}, {"body": "able see site search console seeing problems stack overflow issue suspect different information would help", "d": "6/2017"}, {"body": "hi stephen test website fetch google appear perfectly rendered problem search console started showing soft existing pages idea could happening thing test fix webcache error removed google index ideas", "d": "6/2017"}, {"body": "heads webcache search index different things site rendering cache nt mean anything index sure getting soft errors", "d": "6/2017"}, {"body": "hi stephen thank response stop focusing fixing error running ideas idea please contact thank lot", "d": "6/2017"}, {"body": "could totally backwards need utilize candeactivate guard thought since sort routing back original component would trigger canactivate guard well", "d": "6/2017"}, {"body": "thought realize wrong closing secondary route nt routing new path therefore makes sense work candeactivate guard works fine wish nt spend much time convincing right first place", "d": "6/2017"}, {"body": "empty constructor works fine verified live example annotation constructor arguments sets properties nt need return constructors", "d": "6/2017"}, {"body": "thank explanation could nt find plnkr link yesterday", "d": "6/2017"}, {"body": "also confirm presence bug got work returning using promise per usually would", "d": "6/2017"}, {"body": "issue", "d": "6/2017"}, {"body": "alright thanks one question though consume evaluated value ie hardcoded value ie", "d": "6/2017"}, {"body": "nt understand trying anyway tested", "d": "6/2017"}, {"body": "vicb tried produce small reproduction repro found caused additional history entry redirect instead replace navigation sorry", "d": "6/2017"}, {"body": "problem", "d": "6/2017"}, {"body": "issue might seem serious break applications used run fine workarounds pretty either switch nounusedparameters potential backfiring whenever decide turn back add ahem unused parameters event handler declaration implementation also thing must remember remove point", "d": "6/2017"}, {"body": "also facing issue normal build works fine aot tons issues even node modules folder suggestions", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "closing issue angular docs app release new docs app angulario release angular", "d": "6/2017"}, {"body": "petebacondarwin ok thank sir eta", "d": "6/2017"}, {"body": "obsolete time least pages sidenav toc fixed header since", "d": "6/2017"}, {"body": "could nt figure causes extra whitespace bottom would nt surprized turns chrome bug", "d": "6/2017"}, {"body": "igorminar gkalpak still issue ca nt reproduce", "d": "6/2017"}, {"body": "still see bottom space start expanding menu entries", "d": "6/2017"}, {"body": "fwiw nt know intentional think good thing style indicate focus necessarily one", "d": "6/2017"}, {"body": "hey toxicable would validators help case idea set errors programatically words set error validators different thing", "d": "6/2017"}, {"body": "idea read end programmer want change errors object manually means maintain several properties control group also maintain validity parent group never things like breaks form work nt want nt use control validators selfresponsible plus handle validity properties control form group wrote put small plunker demonstrates statement observe error gets removed seconds control form remain invalid", "d": "6/2017"}, {"body": "hey tytskyi sorry issue nt clear however think nt understand proposing go currently method abstractcontrol right however method allows set errors instead appending existent maybe removing kind logic handle errors adding null removing get away verbosity suggesting creation method explained issue earlier also note talking reactiveforms templatedrivenforms", "d": "6/2017"}, {"body": "looks like still issue", "d": "6/2017"}, {"body": "seeing app nt call detach changedetectors might triggered things well", "d": "6/2017"}, {"body": "matsko vicb thanks fixing", "d": "6/2017"}, {"body": "robwormald stephenfluin done", "d": "6/2017"}, {"body": "ping directly twitter email want get branding right link", "d": "6/2017"}, {"body": "gkalpak wardbell matsko issue closed merged", "d": "6/2017"}, {"body": "thx dherges case nt know autoclose issues pr merged mentioning commit message list keywords trigger behavior note one close wink", "d": "6/2017"}, {"body": "gkalpak ah yes german say knapp daneben ist auch daneben de", "d": "6/2017"}, {"body": "workaround", "d": "6/2017"}, {"body": "news still unable query something based template variables way would great able query class names thanks work nice day edit finaly able query class names problem elsewhere still unable query template variables like exemple gave issue referenced fine css selector enough think issue may closed", "d": "6/2017"}, {"body": "fixed using custom select component", "d": "6/2017"}, {"body": "yes works jit mode aot need revisit rewrite dependency injection guides", "d": "6/2017"}, {"body": "general problem needs fixing see something work tonight tomorrow", "d": "6/2017"}, {"body": "cc alxhub need fixed new http api docs", "d": "6/2017"}, {"body": "trotyl chance feedback code based suggestions entirely sure implemented correctly said work desktop mobile ff code wrote might real issue", "d": "6/2017"}, {"body": "anyone", "d": "6/2017"}, {"body": "seems issue resolved later versions angularcli angular sure ca nt reproduce anymore closing thanks guess", "d": "6/2017"}, {"body": "problem updating anguar still existed", "d": "6/2017"}, {"body": "closing nt answered weeks still encountering please submit new issue plnkr reproduce error explain handson link cheers", "d": "6/2017"}, {"body": "currently determines kind service particular service service provided explained problem least situations today service provided tightly bound many instances service created even though makes sense want injector scopes many strictly related conceptual perspective di general consider nonsingleton services moment let say appwide service used almost every component injection target implemented way would shared singleton would cause injection targets maliciously affect since appwide service would like provide eg via root injector injector responsible particular target scope tell create separate instance injection target proposals found achieve add declaration injection target component one parent components impossible configure root level service implementation many instances create irritating whole point di decouple injection targets concrete implementations service interface service implementation causes service clients affect share instance might exist stateless implementations usable singleton knows point injection targets nt knowledge service get injected implemented instantiated thus nt require declaration get instance service take instance get work without knowledge whether another component might get instance different one interface author formulates interface contract implementor decide many instances created injection targets consequently either service implementation tell many instances create mscu injection token service interface mapped concrete implementation provider objects mscu", "d": "6/2017"}, {"body": "mhevery trying pester wanted check whether plunker adequately shows problem making sure since right stuck version gets resolved workaround found", "d": "6/2017"}, {"body": "issue another thing noticed errors happens application started first route example landing page loads ok user clicks button uses routerlink another page infine loop occur errorhandler called twice second time message uncaught promise original stacktrace use version good", "d": "6/2017"}, {"body": "mhevery anyone else spent hours tracking bug would nice get response thanks", "d": "6/2017"}, {"body": "mhevery chuckjaz estimate might addressed said earlier still suck using dealt thanks", "d": "6/2017"}, {"body": "using", "d": "6/2017"}, {"body": "mhevery chuckjaz updating issue title hope someone anyone might look respond way", "d": "6/2017"}, {"body": "thanks providing plunker looked seeing following click run nt move mouse preview window see error logged console move mouse preview window see errors logged console probably event browser fires expected angular performs change detection cycle event somebody listens event handler could changed data expected behavior clarify infinite loop problem event fired pretty often browser template parse error runtime error whenever angular tries evaluate template undefined prod mode ie calling angular never disabled change detection error even said restore old behavior disabling change detection components errors adding following code notes workaround works dev mode prod mode ie calling kind logic surprising users suddenly chunk application stops working see issues linked summarize works expected workaround restore special behavior debug mode", "d": "6/2017"}, {"body": "thanks aware workaround definitely something would figured try see helps since really modifying templates dev mode may deal problem well enough clear also seen cases angular literally go infinite loop errors regardless moving mouse probably going either angular party code triggering problem spent long tracking thought identifying listener problem would enough get someone right track since seemed capture least part problem even works expected still seems like problem totally get infinite loop might unavoidable something throws error error handler triggers change detection throws another error happening sure say properly seems like posterror change detection really become active initial component tree finishes initial rendering words something goes wrong page initially rendered stops parts app even created nt already way beyond idea user could keep using app case app nt even initially rendered continuing use app nt even option event see workaround gave enough bypass problem least dev mode report back tried", "d": "6/2017"}, {"body": "find way documentation somehow hit anyone using nonexisting variable template got right", "d": "6/2017"}, {"body": "bugs us daily dev forgets turn airbrake literally gets filled exceptions anyway even without still makes hard close browser usually must kill normal loop goes assertion works expected expectation wrong problem slows development thank chasing hard", "d": "6/2017"}, {"body": "swftvsn would agree added manual change detector detach workaround error handler indicated seems work dev mode really seems like issue thoroughly addressed would argue extremely difficult ideally impossible throw framework error loop error handler keeps getting called repeatedly yes workaround works dev mode live server using prod mode something trivial invalid property call template never able lock browser angular ca nt prevent developer writing bad code like infinite loop nothing error handler error handler handling error framework everything prevent freezing browser sure optimal solution would though posterror change detection initial component tree finished rendering error counter clears interval stops change detection many error handler calls made within short amount time", "d": "6/2017"}, {"body": "jelbourn tbosch caching nt resolve problem iframe embedded within tab check plunker updated tabs please suggest work around tabs", "d": "6/2017"}, {"body": "sure understand prerender html meant reused platformbrowser better user exp\u00e9rience course seo wrong", "d": "6/2017"}, {"body": "already roadmap think full client rehydration strategy reuses dom elementscss rendered server maybe duplicate", "d": "6/2017"}, {"body": "ok mistake actually works must specific redirect happening guard try reproduce", "d": "6/2017"}, {"body": "ok demonstrates issue component two navigate guard url component", "d": "6/2017"}, {"body": "js quickstart removed docs noncli quickstart never essential anyway closing", "d": "6/2017"}, {"body": "closing longer support javascript versions documentation", "d": "6/2017"}, {"body": "nt see saw plenty addressed pr", "d": "6/2017"}, {"body": "closing feel free reopen provide information requested", "d": "6/2017"}, {"body": "found regression midflight animation state changes created issue", "d": "6/2017"}, {"body": "think opened project card igorminar shed light blocker", "d": "6/2017"}, {"body": "ca nt stop collecting metrics transition ga metrics strong indicator well new site", "d": "6/2017"}, {"body": "igorminar confirm ga working expected production site", "d": "6/2017"}, {"body": "expierencing error resp", "d": "6/2017"}, {"body": "issue floating", "d": "6/2017"}, {"body": "smart minds may disagree decisions must made nothing persuades change closing", "d": "6/2017"}, {"body": "similar problem mine component super class want use inheritance error error typeerror read property instance undefined objectresolvedep injectorget modalconsolecomponentdynamicconsoleclass new modalconsolecomponent createclass createdirectiveinstance createviewnodes callviewaction execcomponentviewsaction createviewnodes super class looks like export class dynamicconsoleclass data console type data subclass looks like component moduleid moduleid selector modalconsole template providers dynamictypebuilder export class modalconsolecomponent extends dynamicconsoleclass implements oninit ondestroy dynamicconsoleinterface title string buttons add false save false ok false yes false false cancel true workaround thanks advance", "d": "6/2017"}, {"body": "could issue reopened please tbosch chuckjaz believe genuine bug mentioned previous comment relative paths used within node module get resolved example imported navcomponentts nodemodules directory navcomponenthtml file folder would usually expect following code work navcomponentts however angular looks navcomponenthtml following directory appcomponentsnavnavcomponenthtml really angular looking forrouting navcomponenthtml template nodemodulescustomlibrarycomponentsnavnavcomponenthtml issue cropped whilst reusing code within angular common library gets imported nodemodules future projectsreusability thank", "d": "6/2017"}, {"body": "issue", "d": "6/2017"}, {"body": "vijetah luck solving currently write full path nt ideal", "d": "6/2017"}, {"body": "answer nt use angular extremely bug prone especially advanced stuff nt even try configure aot know answer wanted trust answer wanted simply stable point", "d": "6/2017"}, {"body": "anyone know workaround issue using lazyloading nt able come way get hold component instance far", "d": "6/2017"}, {"body": "problem still", "d": "6/2017"}, {"body": "also experiencing issue angular", "d": "6/2017"}, {"body": "progress", "d": "6/2017"}, {"body": "core module import shared discussed page around closing", "d": "6/2017"}, {"body": "wardbell docs explain core module precisely components singletons provides shared module way around doc reason one way reason think separation modules import share module order keep size bare minimum import shared module core module nt aot take care", "d": "6/2017"}, {"body": "working thanks gregdeback lecture helped ts import routereusestrategy angularrouter import detachedroutehandle angularrouter import activatedroutesnapshot angularrouter basic implementation comes manfredsteyer extended add functionality described current issue export class customreusestrategy implements routereusestrategy tab string null handlers key string anydetachedroutehandle detach destroy true always shoulddetach route activatedroutesnapshot boolean detached store store route activatedroutesnapshot handle detachedroutehandle void reuse existing component avalaible shouldattach route activatedroutesnapshot boolean retrieve component parameters retrieve route activatedroutesnapshot detachedroutehandle sure part loadretrieve component path different todo routeconfig null say yes shouldreuseroute future activatedroutesnapshot curr activatedroutesnapshot boolean yes possible quire tiresome implement would great available option difference query params matrix params", "d": "6/2017"}, {"body": "ddamien angular docs basically idea matrix params per route query params site wide hard rule use way though also matrix params put url differently also would careful implementation nt take consideration lazily loaded routes make workaround", "d": "6/2017"}, {"body": "also solution close", "d": "6/2017"}, {"body": "angular docs need read part doc thoroughly scroll meant matrix params use classical query params backend requests although others may different use new feature option automatically surprised nt people interested soon came obvious need application development opinion might biased course otherwise close indeed", "d": "6/2017"}, {"body": "automatically include paramus automatically using navigation extras sun jun ddamien notifications githubcom wrote angular docs need read part doc thoroughly meant matrix params indeed use classical query params backend requests although others may different use new feature option automatically surprised nt people interested soon came obvious need application development opinion might biased course receiving commented reply email directly view github mute thread", "d": "6/2017"}, {"body": "hello pr replace intl api angular see short date format locale means get sure material datepicker uses angular date pipe date formatting though since date formats available externally well sure material team use instead intl api use right", "d": "6/2017"}, {"body": "shall start working yes please let know test fix", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "fixed", "d": "6/2017"}, {"body": "got exactly error module try hacky trick tomorrow", "d": "6/2017"}, {"body": "heidermatos others use angular di load declare time following work leads error component selector mycmp templateurl mycmphtml providers provide ngvalueaccessor useexisting mycmp multi true export class mycmp implements controlvalueaccessor constructor private ngcontrol ngcontrol controlvalueaccessor implemented methods writevalue registeronchange etc component selector mycmp templateurl mycmphtml export class mycmp implements controlvalueaccessor constructor private ngcontrol ngcontrol ngcontrolvalueaccessor controlvalueaccessor implemented methods writevalue registeronchange etc", "d": "6/2017"}, {"body": "smasala need inject component implements custom", "d": "6/2017"}, {"body": "tytskyi case custom component houses input component uses ngmodel directive custom component basically passes children want reset value component custom component notified remains hence need call host component well order need access better put", "d": "6/2017"}, {"body": "update angular di injects rather declared", "d": "6/2017"}, {"body": "duplicate later keeping one deeper discussion", "d": "6/2017"}, {"body": "feature request also fyi actually try use change property unfortunately nt work", "d": "6/2017"}, {"body": "according documentation appid prefixing css styles see happening also looking appendix inspecting generated css guess pmm app id case current angular would pmm missing nt appid part css prefix could multiple apps styles overlapped seems like bug looking documentation", "d": "6/2017"}, {"body": "workaround quick fix preventing multiple apps overlapping css replace occurrence nghost ngcontent nghostmyapp ngcontentmyapp generated aot seems work ok ideal solution need get app id class passed shimcontentattributeshimhostattribute along component id platformbrowsersrcdomdomrendererts line", "d": "6/2017"}, {"body": "bug fix pull request", "d": "6/2017"}, {"body": "looks like function updating early problem following functions called sideeffects handled ie event shown repo effected code never invalidated series events nt work fix function include dirty check triggered event handler event handler also determine called within function instead flag directive dirty function completes check dirty repeat check till longer dirty toxicable jasonaden ideas code might look like make changes thinking adding flag", "d": "6/2017"}, {"body": "want note swap order everything works confirms events later child never reevaluate properties set children components earlier view maybe title angular events handled child components update changed values child view crashing seems long better descriptive issue really", "d": "6/2017"}, {"body": "getting error well getting increasingly frustrating inhibits use strictnullchecks aot whenever special http configuration using requestoptions required provide assistance resolve issue", "d": "6/2017"}, {"body": "alxhub would possible post modified lines definition files line line", "d": "6/2017"}, {"body": "issue breaks whole aot build reproduce error workmyappnodemodules angular type responseoptionsargs undefined property body string index signature error workmyappnodemodules angular type responseoptionsargs undefined property status string index signature error workmyappnodemodules angular type responseoptionsargs undefined property headers string index signature error workmyappnodemodules angular type responseoptionsargs undefined property statustext string index signature error workmyappnodemodules angular type responseoptionsargs undefined property type string index signature error workmyappnodemodules angular type responseoptionsargs undefined property url string index signature error workmyappnodemodules angular type requestoptionsargs undefined property method string index signature error workmyappnodemodules angular type requestoptionsargs undefined property headers string index signature error workmyappnodemodules angular type requestoptionsargs undefined property body string index signature error workmyappnodemodules angular type requestoptionsargs undefined property url string index signature error workmyappnodemodules angular type requestoptionsargs undefined property search string index signature error workmyappnodemodules angular type requestoptionsargs undefined property params string index signature error workmyappnodemodules angular type requestoptionsargs undefined property withcredentials string index signature error workmyappnodemodules angular type requestoptionsargs undefined property responsetype string index signature", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "abstractcontrol angularforms", "d": "6/2017"}, {"body": "delagen please file separate bug bug closed almost never look", "d": "6/2017"}, {"body": "hi ocombe point relative path", "d": "6/2017"}, {"body": "mean status nothing yet", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "hello fixed pr replace intl api angular see", "d": "6/2017"}, {"body": "see behavior input string according angular docs expression iso string without time eg time zone offset applied formatted text day month year expression case see plunker example testing eastern time zone", "d": "6/2017"}, {"body": "observing possibly related offsets date formatting results curiously offset applied certain dates eg affected", "d": "6/2017"}, {"body": "turns related timezone handling specifically daylight saving times years daylight saving instance germany introduced dst abandon reintroduce somewhat without rolling back normal time lots twists yet abandon finally reintroduce perhaps would best moment history people realize mess time never introduce thing err moving angular formats date delegates construct date without time string input filter extracts year month day executes unless specified otherwise angular nt assumes runtime default time zone case germany creates date local time zone sounds fine fast one nasty gotcha lets roll back say remember dst taking current timezone account provides us date formatted according evaluates issue fact aware dst history given region needed provide us date code outsmarts leaves angular confused", "d": "6/2017"}, {"body": "pinpointing differences interestingly knows dst introduced incorrectly assumes present", "d": "6/2017"}, {"body": "add also affects safari firefox waterstraal update title reflect", "d": "6/2017"}, {"body": "trkoch version safari test", "d": "6/2017"}, {"body": "x safari macos x safari ios", "d": "6/2017"}, {"body": "looks like regex splitting words using javascript b word boundary identifier also going happen around accented characters", "d": "6/2017"}, {"body": "tell add import brevity often omit import statements code snippets example policy maybe great policy change change everywhere full download always available definitive clarification omissions sympathetic point view closing changing policy time", "d": "6/2017"}, {"body": "running issue well seems triggered use library includes aot code case hesitate post issue page yet since seems closely related compiler though one thing find interesting keys seem vary based libraries included key without key function interesting exported already sure would ever show anything else seems expecting since hardcoded aot code maybe somebody else would insight nt able successfully make minimal reproducible example yet post ever figure details", "d": "6/2017"}, {"body": "discovered issue case definitely encoding issue two quick work around options clientside solution add eagerlyloaded tags serverside solution add response header case using angular cli module lazyloading done webpack without external plugins interprets bundles default see relevant template code however script tags generated htmlwebpackplugin whose template nt include charset attribute means client use default client encoding server nt specify one see relevant template code causes eagerlyloaded scripts loaded default encoding guessing case lazilyloaded scripts loaded hence conflict put issue angular cli took way long figure glad finally done", "d": "6/2017"}, {"body": "dynamically load compiled angular file routing use component export class workspaceoutletcomponent find module", "d": "6/2017"}, {"body": "believe fixed", "d": "6/2017"}, {"body": "able disable animations element children would amazing easy way meantime released currently add extra transition element want disable animations resets back normal state", "d": "6/2017"}, {"body": "hey rjsteinert glad know one breaking change planned auto generation ids method change ids match anymore cli migration tool update translation files parameter use migrate ready", "d": "6/2017"}, {"body": "googled lot topic today wondering could simple solution like replacing call service instead translation current gt rendered idea gt rendered way real translation could done dynamically aot service could filled api file etc even switching locales would nt much loading new source text extraction would still work could leverage message ids generated anyways use index translation service current implementation would also still work flawlessly ngc could simply look flag otherwise compile one problem currently identify injection every component exist components context callable solvable one way another thoughts", "d": "6/2017"}, {"body": "one things considering yes still problem treat code blocks inside translations compiler nt available runtime aot would mean use angular componentsdirectivespipes inside translations", "d": "6/2017"}, {"body": "yes nt think currently developing pocworkaround inlines translations html build step webpack wrapping ngcontainers ngswitch using directive setting nativeelement translations also get rendered replace placeholders ugly works ca nt wait ng support natively publish poc later week maybe use conception", "d": "6/2017"}, {"body": "came solution suits needs implementation preloader renders html locales handing compiler works like charm far repo npm", "d": "6/2017"}, {"body": "possibly component could attribute tells system compiler needs service service takes id locale returns localized text markup localized text stored server resources service read component attribute locale runtime component call get localized data runtime compiler builds data files hooks service seems like good way handle common need applications require sites build maintain multiple copies app", "d": "6/2017"}, {"body": "idea problem translations contain bindings thus would open system code injection loading translation files external resources additionally compiler would needed resolve bindings dynamically depending translation imho valid solution could way implemented poc see comment inline translations compile time elegant integrated way problems mentioned would eliminated downside imagine possibly bundle size grow plain bundle translated htmlsize locales could lowered ing tagged html instead whole document still problem tags", "d": "6/2017"}, {"body": "well thing times limits practical stand point might better chunk text given multiple languages end story need data bound chunk ok inside internationalized text separate still use html css style format result ca nt embed combine every way think like say div p tag number spans one span text another span bound date text span bound locale service date bound date service two spans paragraph tag formats keep simple make work users first figure edge cases", "d": "6/2017"}, {"body": "nt see edge case business usual angular businessgrade framework many require bindings least pluralization selects inside texts would solve separated strings simple answer ca nt know rules target language every language follows format greeting gender name separating chunks would kill context translator would nt get meaning complete sentence merging chunks right order css nt possible specify rules every translation either cssguy needs know target languages translationguy needs know css neither acceptable core works angular expected usable businessgrade apps thing missing apparently aotcompatibility nt get standpoint powerful working system replaced something half capable requiring multiple times work get done", "d": "6/2017"}, {"body": "meeting tomorrow find solution problem", "d": "6/2017"}, {"body": "ocombe glad hear hope leads good stuff future release angular work really loving works development needs", "d": "6/2017"}, {"body": "ocombe possible change language without relaoding entire document explain page named change language redirected main entry page application", "d": "6/2017"}, {"body": "working also came across known bug external stylesheets eg angularmaterial residing nodemodules could resolved thus tool failed implemented ignore missing files hostcontext extraction tool also poc added pr linked main repo ocombe seem active topic would mind look pr giving feedback", "d": "6/2017"}, {"body": "thanks take look", "d": "6/2017"}, {"body": "hi issue seem resolved getting problem patch applied version angular", "d": "6/2017"}, {"body": "fdagosti use manual patch adrienverge", "d": "6/2017"}, {"body": "hi guys updated patch angular hope merge soon patch patch fix animations check keyframes adding previousstyleprops adaptation change renemoraales renemoralessanchez gmailcom waiting pull request merged diff naur nodemodules angularanimations nodemodules angularanimations nodemodules angularanimations nodemodules angularanimations thisinitialized true var type keyframes thiskeyframesmap function styles return copystyles styles false var type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength var type keyframes var type previousstylepropsforeach function prop diff naur nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs nodemodules angularanimations angularanimationsbrowserjs thisinitialized true const type keyframes thiskeyframesmap styles gt copystyles styles false const type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength let type startingkeyframe keyframes let type missingstyleprops previousstylepropsforeach prop gt diff naur nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs nodemodules angularanimationsbundlesanimationsbrowserumdjs thisinitialized true var type keyframes thiskeyframesmap function styles return copystyles styles false var type previousstyleprops objectkeys thispreviousstyles previousstylepropslength previousstylepropslength amp amp keyframeslength var type keyframes var type previousstylepropsforeach function prop diff naur nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs nodemodules angularanimationsbundlesanimationsbrowserumdminjs skippedplayersforeach function player playerparentplayer playerparentplayerondestroy function return playerdestroy playerdestroy var thisdriveranimate instructionelement keyframes instructionduration instructiondelay instructioneasing previousplayers new angularanimationsnoopanimationplayer transitionanimationengine transitionanimationplayerfunction function transitionanimationplayer namespaceid triggername element thisnamespaceidnamespaceid thistriggernametriggername thiselementelement thisplayernew angularanimationsnoopanimationplayer thiscontainsrealplayer thisqueuedcallbacks thisdestroyed thismarkedfordestroy return objectdefineproperty transitionanimationplayerprototype queued get function return enumerable configurable objectdefineproperty transitionanimationplayerprototype destroyed get function return thisdestroyed enumerable configurable transitionanimationplayerprototypesetrealplayerfunction player var thisthis thiscontainsrealplayer thisplayerplayer objectkeys thisqueuedcallbacks foreach function phase thisqueuedcallbacks phase foreach function callback return listenonplayer player phase void callback thisqueuedcallbacks thiscontainsrealplayer transitionanimationplayerprototypegetrealplayerfunction return thisplayer transitionanimationplayerprototypequeueeventfunction name callback getorsetasinmap thisqueuedcallbacks name push callback transitionanimationplayerprototypeondonefunction fn thisqueued amp amp thisqueueevent done fn thisplayerondone fn transitionanimationplayerprototypeonstartfunction fn thisqueued amp amp thisqueueevent start fn thisplayeronstart fn transitionanimationplayerprototypeondestroyfunction fn thisqueued amp amp thisqueueevent destroy fn thisplayerondestroy fn transitionanimationplayerprototypeinitfunction thisplayerinit transitionanimationplayerprototypehasstartedfunction return thisqueued amp amp thisplayerhasstarted transitionanimationplayerprototypeplayfunction thisqueued amp amp thisplayerplay transitionanimationplayerprototypepausefunction thisqueued amp amp thisplayerpause transitionanimationplayerprototyperestartfunction thisqueued amp amp thisplayerrestart transitionanimationplayerprototypefinishfunction thisplayerfinish transitionanimationplayerprototypedestroyfunction thisdestroyed thisplayerdestroy transitionanimationplayerprototyperesetfunction thisqueued amp amp thisplayerreset transitionanimationplayerprototypesetpositionfunction p thisqueuedthisplayersetposition p transitionanimationplayerprototypegetpositionfunction return thisqueued thisplayergetposition objectdefineproperty transitionanimationplayerprototype totaltime get function return thisplayertotaltime enumerable configurable transitionanimationplayer classescachekey classes animationenginefunction function animationengine driver normalizer var thisthis thistriggercache thisonremovalcompletefunction element context thistransitionenginenew transitionanimationengine driver normalizer thistimelineenginenew timelineanimationengine driver normalizer thistransitionengineonremovalcompletefunction element context thisonremovalcomplete element context return animationengineprototyperegistertriggerfunction componentid namespaceid hostelement name metadata var cachekeycomponentid name triggerthistriggercache cachekey trigger var errors astbuildanimationast metadata errors errorslength throw new error animation trigger name failed build due following errors n errorsjoin n triggerbuildtrigger name ast thistriggercache cachekey trigger thistransitionengineregistertrigger namespaceid name trigger animationengineprototyperegisterfunction namespaceid hostelement thistransitionengineregister namespaceid hostelement animationengineprototypedestroyfunction namespaceid context thistransitionenginedestroy namespaceid context animationengineprototypeoninsertfunction namespaceid element parent insertbefore thistransitionengineinsertnode namespaceid element parent insertbefore animationengineprototypeonremovefunction namespaceid element context thistransitionengineremovenode namespaceid element context animationengineprototypesetpropertyfunction namespaceid element property value propertycharat var aparsetimelinecommand property ida actiona argsvalue return thistimelineenginecommand id element action args return thistransitionenginetrigger namespaceid element property value animationengineprototypelistenfunction namespaceid element eventname eventphase callback eventnamecharat var aparsetimelinecommand eventname ida actiona return thistimelineenginelisten id element action callback return thistransitionenginelisten namespaceid element eventname eventphase callback animationengineprototypeflushfunction microtaskid void amp amp thistransitionengineflush microtaskid objectdefineproperty animationengineprototype players get function return thistransitionengineplayersconcat thistimelineengineplayers enumerable configurable animationengineprototypewhenrenderingdonefunction return thistransitionenginewhenrenderingdone animationengine webanimationsplayerfunction function webanimationsplayer element keyframes options previousplayers void amp amp previousplayers var thisthis thiselementelement thiskeyframeskeyframes thisoptionsoptions thispreviousplayerspreviousplayers thisondonefns thisonstartfns thisondestroyfns thisinitialized thisfinished thisstarted thisdestroyed thisparentplayernull thiscurrentsnapshot thisdurationoptionsduration thistimethisdurationthisdelay thispreviousstyles previousplayersforeach function player var stylesplayercurrentsnapshot objectkeys styles foreach function prop return thispreviousstyles prop styles prop return webanimationsplayerprototypeonfinishfunction thisfinished thisfinished thisondonefnsforeach function fn return fn thisondonefns webanimationsplayerprototypeinitfunction thisbuildplayer thisprepareplayerbeforestart webanimationsplayerprototypebuildplayerfunction var thisthis thisinitialized thisinitialized var keyframesthiskeyframesmap function styles return copystyles styles previousstylepropsobjectkeys thispreviousstyles previousstylepropslength var previousstylepropsforeach function prop prop prop prop thispreviousstyles prop var var kfkeyframes function prop kf prop computestyle prop thisdriveranimate instructionelement keyframes instructionduration instructiondelay instructioneasing previousplayers new angularanimationsnoopanimationplayer transitionanimationengine transitionanimationplayerfunction function transitionanimationplayer namespaceid triggername element thisnamespaceidnamespaceid thistriggernametriggername thiselementelement thisplayernew angularanimationsnoopanimationplayer thiscontainsrealplayer thisqueuedcallbacks thisdestroyed thismarkedfordestroy return objectdefineproperty transitionanimationplayerprototype queued get function return enumerable configurable objectdefineproperty transitionanimationplayerprototype destroyed get function return thisdestroyed enumerable configurable transitionanimationplayerprototypesetrealplayerfunction player var thisthis thiscontainsrealplayer thisplayerplayer objectkeys thisqueuedcallbacks foreach function phase thisqueuedcallbacks phase foreach function callback return listenonplayer player phase void callback thisqueuedcallbacks thiscontainsrealplayer transitionanimationplayerprototypegetrealplayerfunction return thisplayer transitionanimationplayerprototypequeueeventfunction name callback getorsetasinmap thisqueuedcallbacks name push callback transitionanimationplayerprototypeondonefunction fn thisqueued amp amp thisqueueevent done fn thisplayerondone fn transitionanimationplayerprototypeonstartfunction fn thisqueued amp amp thisqueueevent start fn thisplayeronstart fn transitionanimationplayerprototypeondestroyfunction fn thisqueued amp amp thisqueueevent destroy fn thisplayerondestroy fn transitionanimationplayerprototypeinitfunction thisplayerinit transitionanimationplayerprototypehasstartedfunction return thisqueued amp amp thisplayerhasstarted transitionanimationplayerprototypeplayfunction thisqueued amp amp thisplayerplay transitionanimationplayerprototypepausefunction thisqueued amp amp thisplayerpause transitionanimationplayerprototyperestartfunction thisqueued amp amp thisplayerrestart transitionanimationplayerprototypefinishfunction thisplayerfinish transitionanimationplayerprototypedestroyfunction thisdestroyed thisplayerdestroy transitionanimationplayerprototyperesetfunction thisqueued amp amp thisplayerreset transitionanimationplayerprototypesetpositionfunction p thisqueuedthisplayersetposition p transitionanimationplayerprototypegetpositionfunction return thisqueued thisplayergetposition objectdefineproperty transitionanimationplayerprototype totaltime get function return thisplayertotaltime enumerable configurable transitionanimationplayer classescachekey classes animationenginefunction function animationengine driver normalizer var thisthis thistriggercache thisonremovalcompletefunction element context thistransitionenginenew transitionanimationengine driver normalizer thistimelineenginenew timelineanimationengine driver normalizer thistransitionengineonremovalcompletefunction element context thisonremovalcomplete element context return animationengineprototyperegistertriggerfunction componentid namespaceid hostelement name metadata var cachekeycomponentid name triggerthistriggercache cachekey trigger var errors astbuildanimationast metadata errors errorslength throw new error animation trigger name failed build due following errors n errorsjoin n triggerbuildtrigger name ast thistriggercache cachekey trigger thistransitionengineregistertrigger namespaceid name trigger animationengineprototyperegisterfunction namespaceid hostelement thistransitionengineregister namespaceid hostelement animationengineprototypedestroyfunction namespaceid context thistransitionenginedestroy namespaceid context animationengineprototypeoninsertfunction namespaceid element parent insertbefore thistransitionengineinsertnode namespaceid element parent insertbefore animationengineprototypeonremovefunction namespaceid element context thistransitionengineremovenode namespaceid element context animationengineprototypesetpropertyfunction namespaceid element property value propertycharat var aparsetimelinecommand property ida actiona argsvalue return thistimelineenginecommand id element action args return thistransitionenginetrigger namespaceid element property value animationengineprototypelistenfunction namespaceid element eventname eventphase callback eventnamecharat var aparsetimelinecommand eventname ida actiona return thistimelineenginelisten id element action callback return thistransitionenginelisten namespaceid element eventname eventphase callback animationengineprototypeflushfunction microtaskid void amp amp thistransitionengineflush microtaskid objectdefineproperty animationengineprototype players get function return thistransitionengineplayersconcat thistimelineengineplayers enumerable configurable animationengineprototypewhenrenderingdonefunction return thistransitionenginewhenrenderingdone animationengine webanimationsplayerfunction function webanimationsplayer element keyframes options previousplayers void amp amp previousplayers var thisthis thiselementelement thiskeyframeskeyframes thisoptionsoptions thispreviousplayerspreviousplayers thisondonefns thisonstartfns thisondestroyfns thisinitialized thisfinished thisstarted thisdestroyed thisparentplayernull thiscurrentsnapshot thisdurationoptionsduration thistimethisdurationthisdelay thispreviousstyles previousplayersforeach function player var stylesplayercurrentsnapshot objectkeys styles foreach function prop return thispreviousstyles prop styles prop return webanimationsplayerprototypeonfinishfunction thisfinished thisfinished thisondonefnsforeach function fn return fn thisondonefns webanimationsplayerprototypeinitfunction thisbuildplayer thisprepareplayerbeforestart webanimationsplayerprototypebuildplayerfunction var thisthis thisinitialized thisinitialized var keyframesthiskeyframesmap function styles return copystyles styles previousstylepropsobjectkeys thispreviousstyles previousstylepropslength amp amp keyframeslength var previousstylepropsforeach function prop prop prop prop thispreviousstyles prop var var kfkeyframes function prop kf prop computestyle prop ithistime webanimationsplayerprototypegetpositionfunction return thisplayercurrenttimethistime objectdefineproperty webanimationsplayerprototype totaltime get function return thisdelaythisduration enumerable configurable webanimationsplayerprototypebeforedestroyfunction var thisthis styles thishasstarted amp amp objectkeys thisfinalkeyframe foreach function prop offset prop amp amp styles prop thisfinished thisfinalkeyframe prop computestyle thiselement prop thiscurrentsnapshotstyles webanimationsplayer webanimationsdriverfunction function webanimationsdriver return webanimationsdriverprototypematcheselementfunction element selector return matcheselement element selector webanimationsdriverprototypecontainselementfunction return containselement webanimationsdriverprototypequeryfunction element selector multi return invokequery element selector multi webanimationsdriverprototypecomputestylefunction element prop defaultvalue return windowgetcomputedstyle element prop webanimationsdriverprototypeanimatefunction element keyframes duration delay easing previousplayers void amp amp previousplayers var forwards playeroptions duration duration delay delay fill fill easing amp amp playeroptionseasingeasing var previouswebanimationplayerspreviousplayersfilter function player return player instanceof webanimationsplayer return new webanimationsplayer element keyframes playeroptions previouswebanimationplayers webanimationsdriver exportsanimationdriveranimationdriver exports\u0275animationanimation exports\u0275animationstylenormalizeranimationstylenormalizer exports\u0275noopanimationstylenormalizernoopanimationstylenormalizer exports\u0275webanimationsstylenormalizerwebanimationsstylenormalizer exports\u0275noopanimationdrivernoopanimationdriver exports\u0275animationengineanimationengine exports\u0275webanimationsdriverwebanimationsdriver exports\u0275supportswebanimationssupportswebanimations exports\u0275webanimationsplayerwebanimationsplayer objectdefineproperty exports esmodule value", "d": "6/2017"}, {"body": "matsko first thanks hard work animations angular date given immersed subject could please give brief indication support svg attributerelated animations considered added angular animations ballpark timeframe implementation onadded roadmap answer done short rationale would welcome fundamental question roadblock full separation concerns data visualization layout computation actual dom handling angular refactoring use also touch dom within components material different templates different data flowdata bindingchange detection different component code would love use dynamic datadriven animations directly angular done foreseeable future least know commit using handle everything inside data visualization components guidance appreciated", "d": "6/2017"}, {"body": "docs corrected since issue created closing", "d": "6/2017"}, {"body": "discussed decided something direction would suffice revisit later necessary", "d": "6/2017"}, {"body": "problem also think use similar tricky method modifying router config playing around named routeroutlet dynamically really cumbersome want load multiple components another module component view without depending router lazy loading dherges using sort apis add components dynamically view component must also declared module simple methods load component another module dynamically yet", "d": "6/2017"}, {"body": "onixie methods load component another module dynamically names samples", "d": "6/2017"}, {"body": "also loading module anytime de facto lazy loading way router without router", "d": "6/2017"}, {"body": "mlcmlapis great addition czechrepublic eu", "d": "6/2017"}, {"body": "dherges knew nt see way use loading component another module mean another ngmodule imported loadchildren current ngmodule read gist wonder resolvecomponentfactory call successfully create component declared entry containing ngmodule imported ngmodules would grateful show complete sample loading component module anytime de facto lazy loading mlcmlapis said", "d": "6/2017"}, {"body": "principle loading ngmodule following injecting di constructor using loader load module ondemand like processing syntax used angular router working demo bit different form see relevant angular source code", "d": "6/2017"}, {"body": "onixie question lazyloading module dynamically creating component posts talking dynamic component loading lazy loading afaik possible router time", "d": "6/2017"}, {"body": "mlcmlapis thank demo way used long period dynamic module loading angularcli becoming de facto tool create angular application might working angularcli since webpack adoption moreover nt think works well aot btw although angularcli builds chunks lazyloading modules still lacks way build chunks modules intended used lazyloading dynamicloading precisely route prewired parent module route intended added dynamically using method sort webpack module loader missing part", "d": "6/2017"}, {"body": "yes true part angular missing points would great something new would introduced angular aot possible go another thing create separate aot modules able load later want", "d": "6/2017"}, {"body": "ever find workaround", "d": "6/2017"}, {"body": "problem would appreciate fix", "d": "6/2017"}, {"body": "confirm still issue angular", "d": "6/2017"}, {"body": "repo anyone pull reproduce error case issue import testservice path base param tsconfig shown get error message shown comments replace import relative path commented error phpstorm eap although hope would nt make difference", "d": "6/2017"}, {"body": "case phpstorm issue also reported", "d": "6/2017"}, {"body": "sure related got issue using", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "feature added angular looking way input data components rendered ngcomponentoutlet way", "d": "6/2017"}, {"body": "broodjetom although ca nt specify single provider dynamic component specify injector get around injector provider needed", "d": "6/2017"}, {"body": "instantaphex show dynamically loaded component provider provider multiple components dynamically loaded duplicate different type data thus provider", "d": "6/2017"}, {"body": "get injector done something like component selector mycomponent templateurl mytemplatehtml export class mycomponent implements oninit public newinjector injector constructor public injector injector instantiating dynamic component give new injector created way new component instantiated using injector inherits providers current injector also added token provides object", "d": "6/2017"}, {"body": "instantaphex hey got injector working get object inside components need inject provider somehow", "d": "6/2017"}, {"body": "broodjetom example used string token injection token nt using class string token opaque token injection token etc need use inject angularcore dynamic component need make available dynamic component also keep mind use class provider like import myclass myclasscomponent component selector mycomponent templateurl mytemplatehtml export class mycomponent implements oninit public newinjector injector constructor public injector injector dynamic component nt need use inject import class use constructor like would injecting dependency", "d": "6/2017"}, {"body": "instantaphex god", "d": "6/2017"}, {"body": "encountered problem", "d": "6/2017"}, {"body": "expected behavior docs forms says check", "d": "6/2017"}, {"body": "altough change form array programmaticaly means pushpopremoveat functions user cases interacted ui way either clicked button addremove items tofrom array something else ui triggered modification array", "d": "6/2017"}, {"body": "understand form marked dirty form groups controls initialized first time changing form programmatically mark form dirty would annoying forms initially always dirty initialization code also agree ludevik suggestions differentiate calls come initialization code calls result user interactions", "d": "6/2017"}, {"body": "chuckjaz problem creating wrappercomponent mdinputcontainer ability insert prefix suffix elements via ngcontent mdinputcontainer contentchildren like contentchildren mdprefix prefixchildren querylist contentchildren mdsuffix suffixchildren querylist sees elements inserted via ngcontent example", "d": "6/2017"}, {"body": "consider changing template allowing injected parent recommended issue breaks encapsulation content way find disquieting template implements desired result retaining encapsulation retains control content placement expose implementation details could example future version change use input component without breaking clients see use cases lifted queries using expose implementation details component ie uses material layout primitives avoided", "d": "6/2017"}, {"body": "chuckjaz use case components first basic form element simply wraps form basically provides functionality prevent submitting also handling responses html second component extension first component simply adds layout styling make specific type form example see second component also sub components belong msform would like see controllers add also thought might enough", "d": "6/2017"}, {"body": "hello thank response updated reproduction repository new information gathered since posted issue original issue resolved commit specifically files mydemolibpackagejson mydemolibtsconfigjson basically compiling library error message maybe unrelated original one seems related thank time nice day", "d": "6/2017"}, {"body": "mhevery robwormald ping", "d": "6/2017"}, {"body": "plunkr seems work like documented subscriptions remain", "d": "6/2017"}, {"body": "observables insulated destroys routed component longer needed injected dies understanding source paramsdataetc observables garbage collected component injector gets garbage collected wording cleanup seems delayed still holds active reference timeout callback subscriber aware internals preventing garbage collection timeout fires real scenarios http returns dies anyway nt see memory leak rather specific case handled manually true well documented since http call also cancelled prevent side effects save resources someone confirm assumptions", "d": "6/2017"}, {"body": "think adequately addressed pr", "d": "6/2017"}, {"body": "xetys tbosch mmathys mlaval update issue close going production would love put sweet candy top make application go hummmmm", "d": "6/2017"}, {"body": "seems still present reported today jhipsters issue tracker", "d": "6/2017"}, {"body": "sorry compilercli package supposed minimal angular compiler features like scss support need build process first converts regular css files", "d": "6/2017"}, {"body": "eg create shell script first runs scss ngc", "d": "6/2017"}, {"body": "tbosch asking remove workflow webpack workflow process general user simply create component corresponding scss file continue working like nothing happened enterprise build moment main components every single one corresponding scss file would beg sass less treated like first class citizens ca nt imagine going put something would much effort really add", "d": "6/2017"}, {"body": "first angular app launched production able utilize aot configuration going last effort subject ask wonderful people reconsider decision tbosch igorminar jelbourn mmathys marypoppins dzmitryshylovich support css support using file scss would support basic functionality file asking file natively way thing css file import understanding consideration supporting really harm reason supporting difficult complex code nt think something else maintain perhaps open source project sure scores people would want functionality would happy maintain segment code type configuration exists cli native webpack configuration using cli seems counterproductive limiting reagent forcing everyone use angularcli issue using angular cli like said boxy configuration limiting perhaps changed configuration open tried time also miscommunication coming either guys nt understanding build process important understanding proposal alternative let fair alternative let propose work build process would look like fair feasible let document let exist need utilize fair feasible consider adding functionality end propose work together get issue resolved let linger willing anything help document final results issue little frustrating want tackle thanks consideration", "d": "6/2017"}, {"body": "think bit misunderstanding command line tool therefore proposal terms command line build processes using webpack calling using angular webpack plugin custom built webpack plugin pinging hansl angularcli team knows way webpack", "d": "6/2017"}, {"body": "hi guys agree tbosch lot misunderstanding different tools angular team provide cli subteam tool compiles code provide kind plugin parser perfect want precompile sass files use simpler pipeline tools work hermetic directories bazel broccoli come mind support compiling sass read files css even nt css extension tool generate manage project much opinionated hand holding end easiest use maintain webpack plugin distributed maintained cli team webpack made available people want use powerful webpack build configuration cli without walled way cli handles things want probably using webpack plugin loader webpack config support handling scss compiling manually checkout documentation partial release schedule webpack plugin cli", "d": "6/2017"}, {"body": "please note still working next generation cli able use noncli projects need eg build system able plug modify behaviour fit project instead way around", "d": "6/2017"}, {"body": "mmathys typed hans posted repeats lot says hopefully clarifies concept angular platform supports developers using sassscssless pure css writing applications support component level global styles include commands also support aot mode way angular compiler operates lower level depending entirely browser primitives apply styles tool offer use part angular cli perform ahead time compilation components modules etc way offer sassscssless support cli adding style compilation build pipeline prior invoking means run run style preprocessor collect metadata compile minify bundle giving nice clean output run browser want run need compile styles like cli misunderstanding use case", "d": "6/2017"}, {"body": "stephenfluin sets scss files compiled different ways pretty sure main stylesscss compiled manner saying perhaps reversed componentscss sheets go components ones referring styled saving per webpack configuration confusion lies configure style sheets act way want development opposingly prebuilt prod qa builds perhaps part escaping moment", "d": "6/2017"}, {"body": "issue seems fixed", "d": "6/2017"}, {"body": "also error running got typeerror read property tolowercase null extractorserialize c projektegitkwkportalappnodemodules c projektegitkwkportalappnodemodules processtickcallback modulerunmain run startup extraction failed", "d": "6/2017"}, {"body": "dgroh way passing option npm obvious npm nt know needed passing inner command see npmrunscript information", "d": "6/2017"}, {"body": "hi fix getting error", "d": "6/2017"}, {"body": "agyanttiwari need make sure bit code runs start running unit tests import gettestbed angularcoretesting import browserdynamictestingmodule platformbrowserdynamictesting angularplatformbrowserdynamictesting first initialize angular testing environment gettestbed inittestenvironment browserdynamictestingmodule platformbrowserdynamictesting", "d": "6/2017"}, {"body": "matthewerwin would handle usecase actually need cancel routing returned agree proposal would good modes could preserved somehow would nt eg quick idea return proceed find next suitable route routing cancelled", "d": "6/2017"}, {"body": "also resolves", "d": "6/2017"}, {"body": "excellent idea look thank", "d": "6/2017"}, {"body": "also facing issue chinese characters placeholder mdinput english characters looks fine characters becomes dirty instead pristine init waiting solution", "d": "6/2017"}, {"body": "igorminar could closed", "d": "6/2017"}, {"body": "cebor really installuninstall types every time compile true", "d": "6/2017"}, {"body": "one addition function another issue drops hash part url fix probably cc vicb mhevery jasonaden naomiblack", "d": "6/2017"}, {"body": "kkrisu yes looks like correct add well", "d": "6/2017"}, {"body": "router set handle events router level rendering level point running navigation events router actually know specific outlets reloaded andor rerendered example child route lazyloaded router even know router outlet tried render route late showing spinner think right place handle would routespecific events either observable subscribed route config add hooks route config probably two solutions would prefer keep api somewhat consistent observable available route config events could first published specific route apply routespecific events produce higherlevel observable", "d": "6/2017"}, {"body": "thanks catching closing issue cleaned part changes pr", "d": "6/2017"}, {"body": "angular", "d": "6/2017"}, {"body": "paulusklerk doubt angular bug angular uses intl extension internally test even github browser console notice enus encn locale need change angular locale tested trick comment describes well set app wide locale solve problem", "d": "6/2017"}, {"body": "thanks damian look thanks reply jun damian wr\u00f3blewski notifications githubcom wrote paulusklerk doubt angular bug angular uses intl extension internally test even github notice enus encn locale need change angular locale tested trick comment describes well set app wide locale receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "fixing archive help needed thanks offering", "d": "6/2017"}, {"body": "thanks lot even executing error error pathsrcuniserveraotts could find declaration file module ex press pathnodemodulesexpressindexjs implicitly type given line serveraotts got resolved running command installs typescript definitions express", "d": "6/2017"}, {"body": "hi update issue would like use dynamic aot well thanks", "d": "6/2017"}, {"body": "experiencing issue quite frequently frustrating debugging template errors occurs eta fixed alternatively workaround angular library code modify time thank", "d": "6/2017"}, {"body": "chuckjaz eta fix land visual studio code extension almost months since fix checking daily updates luck maybe missing obvious language service another usage without using extension thanks", "d": "6/2017"}, {"body": "land later week early next week waiting delivering new architecture dragging bit land one early necessary", "d": "6/2017"}, {"body": "chuckjaz thanks chuck much appriciated", "d": "6/2017"}, {"body": "florianwahl hint detected broken code causing exact issue change detection seems broken upgrading angular manually calling detectchanges seems work around recently become blocker since nt work referenced node modules need find solution thanks", "d": "6/2017"}, {"body": "exactly issue dev mode load app refresh browser check sourcemap analyse check loaded going homepage please note lazyloaded connected perfromance analyse cli reload file change browser refresh file change even char lol cc tbosch vicb thanks help", "d": "6/2017"}, {"body": "notforme problem solved thank", "d": "6/2017"}, {"body": "angular docs says experimental implement production project kukjevov", "d": "6/2017"}, {"body": "hi using modification production dont see problem", "d": "6/2017"}, {"body": "experimental means removed modify deprecated right", "d": "6/2017"}, {"body": "irowbin everything removed modified apis would deprecated state apis may changed directly see deprecation policy information", "d": "6/2017"}, {"body": "thanks trotyl", "d": "6/2017"}, {"body": "updates", "d": "6/2017"}, {"body": "solved replacing also need install dependency devdependecy", "d": "6/2017"}, {"body": "hello guys finally found problem case problem unused public webclientservice app component looked like could find long time works fine angular without notifications actually use declared angular caused unpredictable error would recommend check constructors unused accidentally public services hope help someone", "d": "6/2017"}, {"body": "ievhenikonnykov okay specifically cause error angular", "d": "6/2017"}, {"body": "wish knew causes error thing real cause case double checked really surprised happens", "d": "6/2017"}, {"body": "getting error error trail", "d": "6/2017"}, {"body": "getting error ng build prod ng build env prod throwing error working fine really afraid works perfect ng serve try ng build prod get error error unexpected value aceeditordirective c declared module codeuimodule c dpdtestpublicappcgencodeuimodulets please add pipe directive component annotation error publicmaints module found error ca nt resolve gendirappappmodulengfactory c dpdtestpublic publicmaints multi publicmaints", "d": "6/2017"}, {"body": "hi problem uncaught error unexpected value nmmainmodule imported module ngmainmodule please add ngmodule annotation code reproducing library code tsconfigjson packagejson rollupconfigjs javascript import noderesolve rolluppluginnoderesolveangular import commonjs rollupplugincommonjs import sourcemaps rolluppluginsourcemaps import typescript rollupplugintypescript import copy rollupplugincopy const globals angularcore ngcore angularcommon ngcommon angularforms ngforms angular ng angularplatformbrowser ngplatformbrowser rxjs rx corejsclientshimminjs corejs zonejsdistzonejs zone reflectmetadatareflectjs reflectmetadata export default entry distindexjs dest distbundlejs sourcemap true usestrict false modulename ndata format umd onwarn function warning warningcode thisisundefined return consolewarn warningmessage plugins copy sourcemaps noderesolve commonjs include typescript typescript require typescript external objectkeys globals globals globals indexts javascript import ngmodule component angularcore component selector nmacomponent template styles export class nmacomponent ngmodule imports declarations nmacomponent providers exports nmacomponent export class nmmainmodule application code ngmaints javascript import corejsclientshimminjs import zonejsdistzonejs import reflectmetadatareflectjs import angularcommon import angularcompiler import angularcore import angular import angularplatformbrowser import angularplatformbrowserdynamic import rxjs import platformbrowserdynamic angularplatformbrowserdynamic import ngmodule component angularcore import browsermodule angularplatformbrowser import nmmainmodule ndata component selector ngmaincomponent template styles export class ngmaincomponent ngmodule imports browsermodule nmmainmodule declarations ngmaincomponent providers bootstrap ngmaincomponent export class ngmainmodule platformbrowserdynamic bootstrapmodule ngmainmodule full code libapp", "d": "6/2017"}, {"body": "facing issue production mode even aot false working case getting another error like error error encountered resolving symbol values statically calling function makedecorator function calls supported consider replacing function lambda reference exported function please help somebody stuck", "d": "6/2017"}, {"body": "problem versions cli ago remember correctly workaround install latest version web pack local project however latest version cli nt problem version cli ng using", "d": "6/2017"}, {"body": "finally solved error repeated ngconf presentation sample ui library use unexpected value mycustommodule imported module appmodule full code code", "d": "6/2017"}, {"body": "case issue importing dependency uses reason must causing issue etc decorators issue resolved insert file", "d": "6/2017"}, {"body": "faced issue added constructor remove", "d": "6/2017"}, {"body": "try use declarations imports may solve issue", "d": "6/2017"}, {"body": "sometime angular breaks declare forget bind", "d": "6/2017"}, {"body": "issue reproduce add appmodule ngmodule basically following tour heroes routing approach stack trace versions edit well happens late night coding module added", "d": "6/2017"}, {"body": "ngtemplate known element error happening using angularcli versions packages angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli ideas could causing issue full error unhandled promise rejection template parse errors ca nt bind ngifelse since nt known property loginbtn ngif administrador else noadmin hello admin bye plantillascomponent property binding ngifelse used directive embedded template make sure property name spelled correctly directives listed ngmoduledeclarations loginbtn error hello admin bye plantillascomponent ngtemplate known element ngtemplate angular component verify part module ngtemplate web component add customelementsschema ngmoduleschemas component suppress message hello admin error bye plantillascomponent zone task promisethen value syntaxerror zonesymbolerror error template parse errors ca nt bind ngifelse since nt known property loginbtn ngif administrador else noadmin hello admin bye plantillascomponent property binding ngifelse used directive embedded template make sure property name spelled correctly directives listed ngmoduledeclarations loginbtn error hello admin bye plantillascomponent ngtemplate known element ngtemplate angular component verify part module ngtemplate web component add customelementsschema ngmoduleschemas component suppress message hello admin error bye plantillascomponent syntaxerrorzoneawareerror syntaxerrorbaseerror constructor new syntaxerror templateparserparse jitcompilercompiletemplate setforeach native jitcompilercompilecomponents createresult zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue consoleerror handleunhandledrejection drainmicrotaskqueue zoneawareerror zonesymbolerror error uncaught promise error template parse errors ca nt bind ngifelse since nt consoleerror handleunhandledrejection drainmicrotaskqueue", "d": "6/2017"}, {"body": "solution aot seems one problem another", "d": "6/2017"}, {"body": "solved jquery issue using import jquery jquery let jquery jquery default jquery try sun jun pm darin cardin notifications githubcom wrote solution aot seems one problem another receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "matsko vicb could look still issue see plunkr angular", "d": "6/2017"}, {"body": "alright turns ca nt fixed similar manner worked reason parent node angular always priority animation land inner animations exist parent ngif ngif animation always removed immediately inner animation skipped however way make work using new features working sure new features outlined make animation lot exciting", "d": "6/2017"}, {"body": "sorry change came abruptly something planned due complexities new features got pushed later fix got lost mix releases final lands animation guide comes contain clear info new stuff works thank guys keeping issue date", "d": "6/2017"}, {"body": "obsolete issue happen anymore", "d": "6/2017"}, {"body": "really unexpected critical bug popular library spent around hours trace issue stopped everything app console errors issue fixed latest version zonejs ie btw reason displaying errors console want know want make sure future update wo nt", "d": "6/2017"}, {"body": "hi exists roadmapplan documentservice topic", "d": "6/2017"}, {"body": "changed pr title make clear issue asks changes side nav item content aio concern doc content docs concern thus aio label rather docs label", "d": "6/2017"}, {"body": "workaround worked add inside file tsconfigappjson path angular nodemodules angular", "d": "6/2017"}, {"body": "dougludlow thanks issue well", "d": "6/2017"}, {"body": "etwillbefine checking confirm problem described however reinstall library error returns development environment use library path ie build artifacts placed application run previously worked fine modulewithproviders configuration broke angularcli fixed error seems fine get error worth linked library directory path outside tree unclear work around new problem restore simplicity using", "d": "6/2017"}, {"body": "confirm findings deleting nodemodules shared library works strange change version angular angularcli rather upgraded nodejs installation new relationship probably tsconfig moduleresolution combinations newer node angularcli installs lock shared library nodemodules directory makes run time confused automate deleting hiding local nodemodules directories real pita", "d": "6/2017"}, {"body": "seems difference npm install implemented changed npm node discovers relevant nodemodules folders previously npm install would copy local shared libraries dist folder consuming project nodemodules instead creates symlink inside consuming project nodemodules previously copied shared library dist folder node would run crawl tree looking nodemodules found immediately subfolder already consuming project nodemodules node runs crawls tree symlink discovers shared library nodemodule folder within shared library project folder little smart knowing symlink points rather symlink defined solution change shared libraries generate dist folders generate dist folder outside project folder beyond reach nodemodules reference external dist folder using npm link command npm install references file target link command node run angular application wo nt get confused finding irrelevant nodemodules folders fair like use symlinks instead copying nodemodules allows quicker local development shared library without reinstall every time want test change nt think problem need understand works work", "d": "6/2017"}, {"body": "think found even easier solution based comment vicb specify empty target target message empty think working expected however message part translation bundle xliff file original message used deleted lines file built app english locale since translation units missing used original english strings seems bit weird bother passing arguments building english least keeps build process languages", "d": "6/2017"}, {"body": "hello faced problem like sunild said removing source xlf file solves problem however wondering would great set flag generating xlf file way would nt need manually remove entries", "d": "6/2017"}, {"body": "confirmed bug still exists angular", "d": "6/2017"}, {"body": "confirmed bug still exists angular", "d": "6/2017"}, {"body": "workaround work components services wasnt able use solution service works component import import injector angularcore import request nguniversalexpressenginetokens initialize constructor constructor private injector injector access request req thisinjectorget request reqheaderscookie doyouroperation reqheaderscookie make sure things dont break client side use isplatformserver platformid thingy access request", "d": "6/2017"}, {"body": "pushpann error error uncaught promise error provider injectiontoken request error provider injectiontoken request solve", "d": "6/2017"}, {"body": "checking platform server trying access request accessible server side", "d": "6/2017"}, {"body": "dneeleman aot compile code runs server", "d": "6/2017"}, {"body": "yep news since angular change detection warnings precise issue arises much often think", "d": "6/2017"}, {"body": "wish lazy loaded component would flicker nt work trying load page route lazily loads module server nt generate html content page blank ok completely blank navigation example lazily loaded module nt render component contained lazily loaded module see terminal loading page route lazily load module angular version", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "mrcroft manage solve issue facing problem reproduce add lazy module server throws system defined", "d": "6/2017"}, {"body": "cankattwinkel nt found solution nt look one either gave time testing ssr bit fortunately nt need production app yet waiting see cli offer hopefully near future release p followed coursetro example sent samsung using fasthub", "d": "6/2017"}, {"body": "hi vikerman news", "d": "6/2017"}, {"body": "glebmachine issue solved flicker bug issues open separate issue think see little traction towards solution", "d": "6/2017"}, {"body": "thank", "d": "6/2017"}, {"body": "hi trying use example fix issue one tests simply sliding menu clicking toggle button using animations call clicking get error pretty sure related animations run", "d": "6/2017"}, {"body": "facing issue setting application state depend something similar happens however seems running gets called documentation specify wait intended behavior done", "d": "6/2017"}, {"body": "workarounds found inject parent guard child guard promisify one already returns promise call one finish child guard pros difficult implement cons parent calls guard well calling guard twice addition race condition failure causes redirect could bad get rid hierarchical guard structure example guard make new guard called hate solution maybe good workaround cases becomes unmaintainable increase number guards ultimately guards easy way signal finished run outcome", "d": "6/2017"}, {"body": "need add canactivatechild method guard nt work", "d": "6/2017"}, {"body": "fix dzmitryshylovich seems fix issue plans released movement months", "d": "6/2017"}, {"body": "solved using promises childs canactivate method waits parents guard promise resolve", "d": "6/2017"}, {"body": "waiting final resolution well child guards call parent guards suitable option surprise movement seems significant problem", "d": "6/2017"}, {"body": "hey jasonaden issue fixed", "d": "6/2017"}, {"body": "wonder put info people find setup nt talk", "d": "6/2017"}, {"body": "discussion reflection decided good candidate stack overflow nt document angular docs several reasons really angular per se general web issue standard across web angular apps nt tell people add samples cli seed nt tell people configure web server even add setup page almost one would find error message nt draw attention kind advice adds unfairly perceived complexity angular makes instructions warnings bigger nt enough value particular piece advice compensate like contradict slightly adding note page pr even though nt really think effective hope", "d": "6/2017"}, {"body": "strange behavior fix would really nice problem modal ngbootstrap useable", "d": "6/2017"}, {"body": "nt trick resolved promise solution", "d": "6/2017"}, {"body": "billcccheng changed docs long ago use moduleid anymore systemjs plugin still failing", "d": "6/2017"}, {"body": "problem discouraging people using absolute paths nt aot stopped even mentioning closing wo nt pursuing recommendation issue", "d": "6/2017"}, {"body": "issue work around use angular", "d": "6/2017"}, {"body": "use something like workaround", "d": "6/2017"}, {"body": "one another workaround export class basecomponent implements oninit constructor private injector injector component providers provide entity usevalue whocares export class inheritorcomponent implements oninit constructor private injector injector super thisinjector", "d": "6/2017"}, {"body": "workaround solution", "d": "6/2017"}, {"body": "longer problem", "d": "6/2017"}, {"body": "done see author style guide", "d": "6/2017"}, {"body": "hi wondering minimum version angular needed resolve bug application using angular hoping fix memory leak without needing upgrade app angular", "d": "6/2017"}, {"body": "sgrinich upgrading nt hard also lts release check angular update guide summary necessary changes", "d": "6/2017"}, {"body": "ok thanks tsvetomir", "d": "6/2017"}, {"body": "would also like report method ispropertyupdated angularforms also reachable anymore created bug trying create solution binding contenteditable twoway binding chance export methods angularforms use workaround nt support twoway binding", "d": "6/2017"}, {"body": "amostech need something exported open new issue consider export", "d": "6/2017"}, {"body": "fix live", "d": "6/2017"}, {"body": "also webpack", "d": "6/2017"}, {"body": "issue confirmed ng building prod issue confimerd ng building prod error src gendirappappmodulengfactoryts module found error ca nt resolve angular gendirapp src gendirappappmodulengfactoryts srcmaints multi srcmaints", "d": "6/2017"}, {"body": "please help use mymodule compiled aot jitcompiler mymodule contains controls component metadata", "d": "6/2017"}, {"body": "compiler aot enablesummariesforjit mean", "d": "6/2017"}, {"body": "well anyone know means", "d": "6/2017"}, {"body": "workaround getting", "d": "6/2017"}, {"body": "alexzuza angularcli removes angular decorators aot mode want keep decorator use custom decorator like customcomponent customngmodule see myrepositary aotandjitl used used simple component external styles work", "d": "6/2017"}, {"body": "alekcei tried getting", "d": "6/2017"}, {"body": "yes necessary add ngmodule example const metadata declarations declarations imports commonmodule exports declarations providers ngmodule metadata customngmodule metadata export class controlsmodule", "d": "6/2017"}, {"body": "gatimus resolved problem", "d": "6/2017"}, {"body": "insured decorated ngmodule well results ts private createcompoent template string private createmodule modules componenttype const metadata imports modules declarations componenttype public async render template string const compoent thiscreatecompoent template const module thiscreatemodule routermodule compoent const modulewithcomponentfactories await thiscompilercompilemoduleandallcomponentsasync module const compoentfactory modulewithcomponentfactoriescomponentfactories thisviewclear thisviewcreatecomponent compoentfactory", "d": "6/2017"}, {"body": "nsdcss yep seems work also means bug fixed entirely sure exclamation mark means though guess see release", "d": "6/2017"}, {"body": "shhhh supposed secret earth guys figure one", "d": "6/2017"}, {"body": "haha digging threw sources helped", "d": "6/2017"}, {"body": "nsdcss last remaining issue seems solved see also", "d": "6/2017"}, {"body": "seems appts file ngmodule annotation nt export module name", "d": "6/2017"}, {"body": "update", "d": "6/2017"}, {"body": "use solution universal gotchas import platformid component inject oninit angularcore import isplatformbrowser angularcommon import jquerytoken servicescommonindex component selector home templateurl homecomponenthtml styleurls homecomponentscss export class homecomponent implements oninit constructor inject platformid private platformid object inject jquerytoken private jquerystatic works well hope helps", "d": "6/2017"}, {"body": "experiencing related issue angular may well cause simple component test async function beforeeach block never resolves component tested contains large external javascript library excellike table created outside angular zone seems settimeout calls within library still increase pending task counts asynctestzonespec never reset least looks like first glance would better file issue zonejs", "d": "6/2017"}, {"body": "angular nt help parent router component animation causes error child route removed immediately parent component ca nt see", "d": "6/2017"}, {"body": "ok think found cause trying catch nested route outside root everything ok described able set nested route animation call animation via want thing inside root bind animation route host component via nt work nested route disappears immediately animation ca nt catch think main reason ca nt catch next route path inside say see article outside root get data routes example etc would inside root get data corresponding route example go page wo nt catch event route animation inconvenient forced make difficult animation queries outside root nested routes components difficult task set queries even nested route experienced difficult project blog outer routes nested route nested levels", "d": "6/2017"}, {"body": "get", "d": "6/2017"}, {"body": "error answers set", "d": "6/2017"}, {"body": "imports gamagesupunperera", "d": "6/2017"}, {"body": "chuckjaz nt think bug solved write something like see original post context matters type data still get aforementioned error using", "d": "6/2017"}, {"body": "bug fix cherrypicked available greater", "d": "6/2017"}, {"body": "chuckjaz ok thanks sorry confusion", "d": "6/2017"}, {"body": "problem please take look stackoverflow case open pkozlowskiopensource help", "d": "6/2017"}, {"body": "error find module angulartscwrappedsrctsc solve type error", "d": "6/2017"}, {"body": "someone found way dynamically loaded component ngcomponentoutlet someone please give example simple variable passed component trying provider since documentation says way nt seem work another issue already adresses got right inside every item tag factored component loaded container need data inside container one object need send nt know object two properties nothing special", "d": "6/2017"}, {"body": "dzmitryshylovich hello news pr merged", "d": "6/2017"}, {"body": "removed docs label angular owner issue explains whether bug document", "d": "6/2017"}, {"body": "people using ngxtranslate uses relative url get translation file ps solution work link broken used hheexx answer", "d": "6/2017"}, {"body": "hi issue yo solution please share us", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "caeruskaru one learn features", "d": "6/2017"}, {"body": "given best place found moment code diving hacking play projects info rangleio thoughtramio blog content well iirc", "d": "6/2017"}, {"body": "best way learn new features review matsko presentation ngconf year slides found navigate using space bar arrow keys comes links code used live demo two parts documentation look one api list found animations header animations guide yet updated include new features probably soon found update matsko wrote phenomenal guide new features blog found lot easier get slides uptodate", "d": "6/2017"}, {"body": "particularly relevant select dropdowns nature filledout default state initialize setvalue value happens match default valuechanges emitted giving worst worlds information original default value change event since value nt technically change strictly speaking unique dropdowns prone falling trap", "d": "6/2017"}, {"body": "local variales templates could still make sense avoiding multiple subscriptions could also done share operator observables", "d": "6/2017"}, {"body": "agree karlxol option company requirements much uis need dynamic configure worked fine angular migrate become terrible finally found dynamiccomponentloader use resolve problems performance acceptable along much customers complain recently made discussion company developers company think lot static controllable things limited developer work dynamic things like dynamic template dynamic change language etc personally think lost flexibility also strong recommend angular provide kind dynamic functionality easily approach", "d": "6/2017"}, {"body": "need different templates instead different components perhaps missing possible inherit components angular see example", "d": "6/2017"}, {"body": "thanks recommend solution want scenario view templates configured dynamically designer nondeveloper saved database logic fixed situation requirement want redesign layout addminus fields common behavior crmerp domain like odoo dragdrop fields generate difference form difference industries", "d": "6/2017"}, {"body": "ok problem compile user defined template described new component server course creates new module contains new component save flag configuration says details rendered new component demand load new module right moment", "d": "6/2017"}, {"body": "mlcmlapis read feature request thread carefully find better solution one proposing also avoid pain mess involved solution approach robertluoqing explained good common scenario need feature", "d": "6/2017"}, {"body": "karlxol know moment nt understand jit dynamic compilation custom templates already available today always formulations say feature missing clear ca nt use aot probably understand ca nt things table dynamic templates compilation jit mode right even without compatibilty aot mode", "d": "6/2017"}, {"body": "mlcmlapis need provide working maintenable solutions support business needs angular framework lays foundation providing sophisticated software technologies still using hand angular missing user friendliness supports common requirements one discussing example room improvements also exists error messages dev runtime uiframework etc able provide solutions import always taking aot static type checking tree shaking eg jit usually fast enough understand important course sometimes impression foregetting needed normal developers", "d": "6/2017"}, {"body": "ok understanding things priorities general opinions important different types projects hundreds possible cases", "d": "6/2017"}, {"body": "really like angular large apps aot still bigger jit update oor way address latest really nt like see doubles code", "d": "6/2017"}, {"body": "neither works would work first change", "d": "6/2017"}, {"body": "thank much thread getting similar error year old app started aot unwind bad practices app module providers section got rid bad provide fixed", "d": "6/2017"}, {"body": "dparish reproduce adding code existing application could reproduce", "d": "6/2017"}, {"body": "tried failed", "d": "6/2017"}, {"body": "dparish nt believe unable reproduce put together small example using making modifications would reproduce", "d": "6/2017"}, {"body": "installed still getting vs console", "d": "6/2017"}, {"body": "hint think mentioned including root testts gets back mapped exceptions check deeply side effects maybe helps already", "d": "6/2017"}, {"body": "nidin might interested assemblyscript", "d": "6/2017"}, {"body": "cedvdb already know project turboscript decided integrate typescript compiler hence assemblyscript typescript typechecker binaryen wasm compiler highly experimental looking forward", "d": "6/2017"}, {"body": "nt see anymore api docs igorminar close", "d": "6/2017"}, {"body": "error resolve problem thanks kukjevov nt know use replace document node thanks mikeryandev", "d": "6/2017"}, {"body": "billyqin figured long day search hope helps imports import ngmodule ngmodulefactory ngmodulefactoryloader ngzone angularcore import servermodule angularplatformserver import \u0275animationengine angularanimationsbrowser import noopanimationsmodule \u0275animationrendererfactory angularplatformbrowseranimations declarations export function instantiateserverrendererfactory renderer engine \u0275animationengine zone ngzone return new \u0275animationrendererfactory renderer engine zone const createrenderer function const result createrendererapply arguments const setproperty resultsetproperty resultsetproperty function try setpropertyapply arguments catch e emessageindexof found synthetic throw e return result export const serverrenderproviders provide usefactory instantiateserverrendererfactory deps \u0275animationengine ngzone module ref ngmodule imports servermodule noopanimationsmodule bootstrap providers provide useclass serverrenderproviders", "d": "6/2017"}, {"body": "thank fixed issue", "d": "6/2017"}, {"body": "work around besides using xhr fetch", "d": "6/2017"}, {"body": "agree behavior user navigate application changes locale want dates numbers correctly formatted new locale ajantsch found solution maybe related issue", "d": "6/2017"}, {"body": "dietergeerts reason disagree whole mantra angular unidirectional data earlier resolve could change based later resolve would spell bad news bears mantra level would make sense least say make one run last something", "d": "6/2017"}, {"body": "kenisteward well actual resolve change return observables rxjs resolves result observables part application state something happens example detail view updated list updated event thrown list observable picks view updated resolves changing data observables given resolves hope makes sense basically resolves build application state tree", "d": "6/2017"}, {"body": "hmmm another cenario need data activate route activate resolve fail", "d": "6/2017"}, {"body": "gkalpak created new angular cli project copy files plunker working im still facing injector problem calling super inside repo help really appreciate", "d": "6/2017"}, {"body": "agree would helpful spent quite bit time fighting error without much idea cause thankfully dhilgarth stackoverflow gave clue since using library causing issue", "d": "6/2017"}, {"body": "closing api docs longer link source code least could nt find links see issue", "d": "6/2017"}, {"body": "debugging afterviewchecked afterviewinit methods component inside template shows lifecycle change detection events component triggered component template defined component embedded view added expected reading issue proper solution also hook lifecycle change detection events components inside template lifecycle change detection events component embedded view added opinion puzzling even default behavior shows templates designed used near location defined bad docs templateref find excerpt typically new embedded views attached view container location advanced usecases view attached different container keeping databinding injection context original location current behavior line documentation", "d": "6/2017"}, {"body": "honestly know behavior chosen default perhaps team trying make simple turned pretty useless advanced case disappointing", "d": "6/2017"}, {"body": "problem angular later version uninstall angular version update npm uninstall g angularcli npm cache clean npm install g angularcli", "d": "6/2017"}, {"body": "nt", "d": "6/2017"}, {"body": "working", "d": "6/2017"}, {"body": "denisyilmaz hi sure issue might worth look case routerlink syntax nt behaving initially expected", "d": "6/2017"}, {"body": "actually changing routerlink adding en get auxiliary route work nt understand would necessary routerlink already active component pagecomponent showing correct path throw error would guess work changing like mentioned link works nt solutions work", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "denisvalcke could share full working code", "d": "6/2017"}, {"body": "get issue well changing trigger animation completes", "d": "6/2017"}, {"body": "get error also different situation one working one difference dont set default since div element default fails somehow", "d": "6/2017"}, {"body": "hi looks like bigger problem look quite simple demonstrates code first version working second version also demonstration problem yesterday trying new animation features home everything working nicely pushed changes try work got error mentioned bug web browsers work tried ff beta chrome edge none worked also tried ff worked today came home code worked yesterday work anymore even plunker provided well looks like changes browsers weird thing behaves randomly far found connected auto styles dont specify explicitly style value fail mentioned error please look matsko igorminar looks like completely breaks animations thank", "d": "6/2017"}, {"body": "list css properties cant used auto property computation looks like problem well another question sometimes working browsers sometimes", "d": "6/2017"}, {"body": "another interesting observation enabled domanimationsapicoreenabled setting using firefox animations working", "d": "6/2017"}, {"body": "similar issue suggested run change detection explicitly change works", "d": "6/2017"}, {"body": "aesopturtle ended similar solution slight issue change detection would fire force children afterinit fire got loop added boolean initialization fixed", "d": "6/2017"}, {"body": "hi thought give little update honestly nt done anything last update angular stopped noticed", "d": "6/2017"}, {"body": "still getting error even though called thischangerefdetectchanges end ngafterviewchecked ngdocheck error message error error expressionchangedafterithasbeencheckederror expression changed checked previous value true current value false viewdebugerror expressionchangedafterithasbeencheckederror checkbindingnochanges checknochangesnodeinline checknochangesnode debugchecknochangesnode debugcheckrendernodefn objecteval updaterenderer objectdebugupdaterenderer updaterenderer checknochangesview callviewaction container itemname ngafterviewchecked ngdocheck following update menu active status get error message every time menu status changed thiscontainerupdateactions name copy active true name delete active true thischangerefdetectchanges angular", "d": "6/2017"}, {"body": "appropriate place update ui menu avoid error", "d": "6/2017"}, {"body": "removed warnings using however wonder best solution issue", "d": "6/2017"}, {"body": "cindysliu believe playing wo nt solve problem nature error multiple happening object finishing rendering try instead preventing change detection triggered post sample component issue happening plunkr", "d": "6/2017"}, {"body": "inject call modified model work around error", "d": "6/2017"}, {"body": "minuz plunker url reproduce problem first plunker app nt know got error get download zip works fine files nt know plunker load files created app container contains dynamically loaded components component triggers menu status change container component ngafterviewchecked thischangerefdetectchanges enough put thischangerefdetectchanges container ngafterviewchecked prevent error found", "d": "6/2017"}, {"body": "hi cindysliu plunkr seems incomplete nothing running nav bar items content loaded opening console also see error apart maybe create git repo working version guess easier help updated created local repo added files fixed init app see happening questions case think pattern used interact components creating problem obviously nt know entire app see real requirement dynamically load components however way done serious headache maintain want load components tab click nt use routing instead much easier manage much simpler implement", "d": "6/2017"}, {"body": "outcome train operators ignore alarm true points possible error architectural issue easy fix need ignore", "d": "6/2017"}, {"body": "hope helps someone stumbles upon issue google getting quite frequently found caused things lifecycle hooks broken plnkr fix wrap", "d": "6/2017"}, {"body": "zoechi clearly thebolmanator saying easy fix thread see lot unanswered questions manage one good example seems error disappear play ngif order change way things interpreted pretty sure neither easy fix hard maintain architectural clear source errors fix yes cases problem clear need force change detection rest many cases async pipe makes problem appear reason whatsoever", "d": "6/2017"}, {"body": "victornoel comments without plunker demonstrates problem really helpful", "d": "6/2017"}, {"body": "thebolmanator please refrain making claims based limited angular knowledge complain angular without exact instructions reproduce problem imho safe treat comments spam", "d": "6/2017"}, {"body": "found solutions looking easy fixes moving ngafterviewinit ngaftercontentinit moving ngafterviewchecked combined changedetectorref suggested keep call changedetectorrefdetectchanges changes update ps updates related dom use changedectorrefdetectchanges ngoninit still zoechi explains stackoverflow", "d": "6/2017"}, {"body": "another strange one get check debugger previous value wrapped comes feel like value actually change way angular initialise things ngrx store call makes simple use fail problem multiple places type values trying make plunkr struggling bit", "d": "6/2017"}, {"body": "victornoel problem related", "d": "6/2017"}, {"body": "tytskyi yes actually going add comment", "d": "6/2017"}, {"body": "kept errors using solution thank much", "d": "6/2017"}, {"body": "thank solution", "d": "6/2017"}, {"body": "currently facing issue ericmackrodt needed work angular universal added ngxbootstrap project webpack throws error error encountered resolving symbol values statically calling function function calls supported consider replacing function lambda reference exported function resolving symbol appmodule", "d": "6/2017"}, {"body": "issue trying enable angularrouterloader", "d": "6/2017"}, {"body": "seems like blanket error thrown aot donts present application one see nt forroot really hoping better linting build errors pain triage", "d": "6/2017"}, {"body": "eldaromer toxicable fixed take look", "d": "6/2017"}, {"body": "fixed feel free make pr", "d": "6/2017"}, {"body": "toxicable pr place", "d": "6/2017"}, {"body": "issue adding solved thanks ericmartinezr", "d": "6/2017"}, {"body": "news feature", "d": "6/2017"}, {"body": "update request", "d": "6/2017"}, {"body": "right explicitly trigger value change using use make work", "d": "6/2017"}, {"body": "issue cause error known workarounds", "d": "6/2017"}, {"body": "berndwessels", "d": "6/2017"}, {"body": "issue translates instead", "d": "6/2017"}, {"body": "solves issue well sum need know want dynamically create component declared lazy module need actually use componentfactoryresolver component declared lazy module root injector contains root componentfactoryresolver know entrycomponents declared loaded lazymodule looks kinda weird angular designed makes sense actually creates extra complexity working framework imho angular team could leverage whenever route activated root injector append entrycomponents listed lazymodule automatically whenever route changed previously appended entrycomponents automatically destroyed would ensure less complexity avoid flooding root injector extra component factories submit feature request thank", "d": "6/2017"}, {"body": "many thanks jmcclanahan", "d": "6/2017"}, {"body": "jmcclanahan thanks lot renatoaraujoc submitted feature angular team", "d": "6/2017"}, {"body": "rraya submitted feature request regarding issue really issue think please see", "d": "6/2017"}, {"body": "add use case created modalmanagerservice appmodule open method parts app call open modal gets passed component opened modal also closeall method used modals need closed action user closing eg route change due session timeout", "d": "6/2017"}, {"body": "tbosch sorry annoying updates", "d": "6/2017"}, {"body": "reason change closing", "d": "6/2017"}, {"body": "updates issue properties passed ngtemlateotletcontext available try access ngtemplate workaround create context component class normal quote syntax compiled code ngtemplate context properties accessed dot syntax pass context ngtemplateoutlet rarely used passing variables template common", "d": "6/2017"}, {"body": "bug seems even worse actions seem always strip quotes creating defaults using quotes property names see property bindings generate calls takes array property names see captured property names compilation wo nt get renamed", "d": "6/2017"}, {"body": "idea solution change receive object literal use keys way closure compiler also minify property names already places view engine", "d": "6/2017"}, {"body": "boat marcidius", "d": "6/2017"}, {"body": "let give details problem occurs running visual studio latest angular template got multiple modules client server shared way got work envioronment import reactiveformsmodule directly component needed changing formgroup formgroup tested installing angularcli creating new project template worked normally expected would say problem visual studio template using way framed modules", "d": "6/2017"}, {"body": "update found problem spa template using correcting issue update work around import formsmodule reactiveformsmodue appmoduleclient appmoduleserver issue", "d": "6/2017"}, {"body": "changing formgroup formgroup changing property binding event binding changes purpose whole", "d": "6/2017"}, {"body": "update issue", "d": "6/2017"}, {"body": "issue following tutorial upgrade doesnt work switch angular route provider currently decided toe upgrade services first option upgrade service use inside angular component works using angularjs routing breaks switch using angular routing might try methode grbush using", "d": "6/2017"}, {"body": "hi right fix though underlying data structure angular used multiple projects better way set function pretty prints certain depth size plain old javascript objects", "d": "6/2017"}, {"body": "thank guys much writing unit tests hours knowing timing theres output dzmitryshylovich added maxprettyprintdepth suddenly got told test failing", "d": "6/2017"}, {"body": "pin router issue way upgrading plans fix problem open since feb several people confirmed already", "d": "6/2017"}, {"body": "problem implemented directive exactly described lazarljubenovic using regular addeventlistener would great change hostlistener", "d": "6/2017"}, {"body": "progress", "d": "6/2017"}, {"body": "faced exact similar problem exact solution worked ca nt implemented always ie creating new project toxicable yeah facing issue latest version edited removed maints file started working seems rollup ca nt correctly handle nonordinary imports like similar handle imports like", "d": "6/2017"}, {"body": "experiencing issue following typescript oidcclient", "d": "6/2017"}, {"body": "seems issue provide di work around wrap service less desired though", "d": "6/2017"}, {"body": "yes oidc client used service working oidcclient repo topic moving typescript discussed mentioned using library might improved lot users typescript based", "d": "6/2017"}, {"body": "hello fixed pr replace intl api angular see", "d": "6/2017"}, {"body": "struggled hours nothing worked except adding one line another way prompt user download file nt work", "d": "6/2017"}, {"body": "add information case error happens nested formgroups create entire new form time user changes field controls change one formgroup name change fromcontrols inside error happens able go around issue creating formarray instead formgroup something add nt happening versions", "d": "6/2017"}, {"body": "similar issue able solve using instead maybe usefull someone else", "d": "6/2017"}, {"body": "text file holds strings constants two languages used display something webpage eg select item welcome xxx website ect would like strings displayed never watched changes anguarjs double semicolon great feature question replaced component level option angular someone explain must explanation ca nt figure really want understand logic behind implementation eventually angular team change way works", "d": "6/2017"}, {"body": "create directive detaches usage", "d": "6/2017"}, {"body": "bbottema", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "updated plunkr still problem would nt problem animation failed dom elements left inconsistent state", "d": "6/2017"}, {"body": "thanks rasalshukla works", "d": "6/2017"}, {"body": "facing trying conditionally set internal external link ideas", "d": "6/2017"}, {"body": "zhuqingguang nt figured need add spec file", "d": "6/2017"}, {"body": "problem part scripts jquery routes angular scripts load first time changing route return route exsternal scripts nt work", "d": "6/2017"}, {"body": "update thanks", "d": "6/2017"}, {"body": "cristiancamiloperezlopez component part scripts required used ngoninit method write html file classic code export class devicescomponent constructor private elementref elementref ngoninit var documentcreateelement script stype textjavascript ssrc assetsglobalscriptsdatatablejs thiselementrefnativeelementappendchild var documentcreateelement script textjavascript assetspagesscriptstabledatatablesresponsiveminjs thiselementrefnativeelementappendchild var documentcreateelement script textjavascript assetsglobalpluginsdatatablespluginsbootstrapdatatablesbootstrapjs thiselementrefnativeelementappendchild var documentcreateelement script textjavascript ssrc assetsglobalpluginsdatatablesdatatablesminjs thiselementrefnativeelementappendchild doesnt work properly switching routes wait ms see html changing solution sorry bad enlgish", "d": "6/2017"}, {"body": "hello way reload scripts remove recreate element dom every time like export class appcomponent constructor documentgetelementbyid testscript remove var testscript documentcreateelement script testscriptsetattribute id testscript testscriptsetattribute src assetsjstestjs documentbodyappendchild testscript", "d": "6/2017"}, {"body": "nightwnvol sucks solution would think would easier reload script works though", "d": "6/2017"}, {"body": "ajsnyde right bad solution found way reload script already inserted html sent oneplus using fasthub", "d": "6/2017"}, {"body": "jacodv unable load json files folders", "d": "6/2017"}, {"body": "referencing", "d": "6/2017"}, {"body": "bug definitely pain worked around echoing media width element rebound initial render fixes ff ie ts html cleanest workaround least works", "d": "6/2017"}, {"body": "upgraded npm issue longer appears", "d": "6/2017"}, {"body": "please see browser support page covers requirements great nt please open new issue correction better yet pr suggesting correction", "d": "6/2017"}, {"body": "error solve like ng op srclanguage hope works also exclude test files tsconfig file", "d": "6/2017"}, {"body": "hi something look stopping us migrating angular components rely animations since business requirement able disable animations demand take pr requests matsko", "d": "6/2017"}, {"body": "removing docs label solution something intend put angular docs problem obscure general interest kind thing would better stack overflow", "d": "6/2017"}, {"body": "wardbell please explain problem obscure general interest", "d": "6/2017"}, {"body": "following wardbell comment guess question comes going moved forward ie moved stable common use cases use app uses child auxiliary routes documented", "d": "6/2017"}, {"body": "still seems problem router even docs team nt want add details workaround angular docs site agree christianacca would nice hear angular team plans experimental many people trying make use solve user pain points app plans move api stable improve deprecate", "d": "6/2017"}, {"body": "timvdalen thank put end many hours frustration make workaround less ugly reassigning actual setting want route events nt need flip dummy new object enough", "d": "6/2017"}, {"body": "even renaming rlao rlmao work wanted activate link test purpose event thisroutereventssubscribe event gt thisrlao exact false wrong hit whole site reloads current route browser trigger routerlink activated click", "d": "6/2017"}, {"body": "taking look pr fix issue hopefully get upcoming release", "d": "6/2017"}, {"body": "think nt way things supposed work far docs page explain need root component already downgraded", "d": "6/2017"}, {"body": "news front experienced memory leak code today occurs enableprodmode turned turned using changedetection onpush one components managed fix problem although seems really odd default change detection memory quickly went roof application became unresponsive minute memory usage using chrome could bug", "d": "6/2017"}, {"body": "nt work angular matter put reflectmetadata", "d": "6/2017"}, {"body": "wonder low tag issue due fact aot spectacular pain ass get working people nt even bothering bit unbelievable simple painful issue received essentially zero feedback core angular contributors anyways way excluding files nt specifically mentioned naming pattern eg create separate file aot use instead file use exclude files annoying work edit nt seem work classes inherit component yay", "d": "6/2017"}, {"body": "ran also damn frustratingwhen build aot common component ca nt shared app", "d": "6/2017"}, {"body": "common cases issue avoid add component services class", "d": "6/2017"}, {"body": "scenario injecting service service first blush seems like easy thing implement add component angular docs updated show solution complex services resolve issue removed component constructor service added", "d": "6/2017"}, {"body": "nt need add decorator service", "d": "6/2017"}, {"body": "fwiw extends app component used specs selector therefore imported valid usecase", "d": "6/2017"}, {"body": "alastairtodd sure understand mean use component component add decorator use component base inherit component nt use decorator inherit use decorator successor unittesting respond probably need create special testmodule unittesting moment", "d": "6/2017"}, {"body": "tytskyi understood decorator inheritance supported recently change usecase mock subcomponent need component directive pick selector yet generates op aot compile error point valid usecase case aot compile overzealous andor ignoring specs part project", "d": "6/2017"}, {"body": "still issue angular docs specifically mention using rollup example code surprised see closed problem angular clearly mentioned angulario guide", "d": "6/2017"}, {"body": "similar issue used azure ad authentication url authentication home page login button authenticating azure ad oauth login page canactivate guard checks using user authenticated returns true else false successful login returned back url instead causing canactivate guard return false routes level think angular context reloaded also able get correct authentication status even successful login", "d": "6/2017"}, {"body": "also rootselectorornode documented example use would nice", "d": "6/2017"}, {"body": "closing old please reinvestigate api docs current version angular create new issues needed", "d": "6/2017"}, {"body": "bump go ahead thumbsdown votereact jk aside think least sometimes engineers prioritize features amp projects help google revenue like feature amp project synergy angular firebase projectsteams encouraged apologies bothering core roadmap issues like one blocking way", "d": "6/2017"}, {"body": "anyone identified solution yet feel fairly certain take cause complete get called yet form formcontrol seem remain stuck pending edit using takeuntil thischanged workaround inability use debouncetime within async validator recommended lead problem hand original observable nt completed form still listed pending remove added complication form resolves suppose need find another workaround debouncetime", "d": "6/2017"}, {"body": "believe found bug assign result observable causing result always pending try first pr", "d": "6/2017"}, {"body": "dzmitryshylovich noticed gave thumbs using barrels discouraged use barrels", "d": "6/2017"}, {"body": "battmanz think suggested use time ago current guide says last sentence often achieve result using angular modules instead angular team member etc opinion understanding", "d": "6/2017"}, {"body": "update style guide ngmodules styleguide explains recommended conventions angular modules ngmodule barrels far less useful removed style guide remain valuable matter angular style", "d": "6/2017"}, {"body": "facing issue using angular trying run creating translation source file tool gives error removed gives error npm module file file annotation components npm modules angular annotation workaround generate translation source file", "d": "6/2017"}, {"body": "removing docs label concrete documentation proposal cover corner cases wild workarounds documentation confuse general audience something like stackoverflow good place", "d": "6/2017"}, {"body": "still problem solved way", "d": "6/2017"}, {"body": "time updated templateurl short url moduleid nt checked", "d": "6/2017"}, {"body": "ocombe still getting error use full path using moduleid giving error", "d": "6/2017"}, {"body": "yes removed closed flag", "d": "6/2017"}, {"body": "still seeing error angular using absolute links pretty annoying indeed", "d": "6/2017"}, {"body": "set describe comment namely one project fullstack app frontback side thus want front end output jit aot bundle etc etc one level folder aot compiler nt set references modulescomponents correctly emitted factories gon na see get small minimal working example demonstrate hopefully resolve wanted throw comment ppl issue although might another issue win nodejs npm", "d": "6/2017"}, {"body": "matsko tried code function docblock works ca nt wrap head around ie give queried children initial state state style trigger wo nt get propagate queried children query seems passed much later queried dom element result transition elemets blinking effect instead fadein concept missing animate lists using staggering without first showing item", "d": "6/2017"}, {"body": "johnnyqqqq need issue query actual animation takes place", "d": "6/2017"}, {"body": "johnnyclutch chuckjaz see issue latest angular router enabling disable preloading works expected", "d": "6/2017"}, {"body": "pgrm solution worked noticing doubledeclaring service guess need another bug raised blocker project fulltime lazy loading fine", "d": "6/2017"}, {"body": "documentation strategy guides yet", "d": "6/2017"}, {"body": "problem realized return promise changed observable fixed", "d": "6/2017"}, {"body": "issue want lazy load module path named outlet cant figure way get work", "d": "6/2017"}, {"body": "information issue know company temporary solution fixed think permanent solution need answer simple question planned angularrouter team roadmap", "d": "6/2017"}, {"body": "facing similar issue work around", "d": "6/2017"}, {"body": "see still fixed", "d": "6/2017"}, {"body": "kara really great solution found far working one", "d": "6/2017"}, {"body": "ide chrome prompts error changed solves problem really hate type tedious monster introduce like syntax two way data binding remove whole template driven form syntax really confusing", "d": "6/2017"}, {"body": "bump", "d": "6/2017"}, {"body": "hello issues fixed pr replace intl api angular see day part works according tests numbering system show support latin characters could support numbering systems data someone ask adds lot data timezones show cases want use note summerwinter times fix timezone new additional parameter pipe", "d": "6/2017"}, {"body": "version angularforms", "d": "6/2017"}, {"body": "angularforms", "d": "6/2017"}, {"body": "fixed merged master", "d": "6/2017"}, {"body": "closing believe corrected please reopen wrt new documentation infrastructure necessary", "d": "6/2017"}, {"body": "mackelito sorry long time ago sure thought wrapped code settimeout last", "d": "6/2017"}, {"body": "hi kara relatively straightforward api already exists please show could give focus invalid form control thanks", "d": "6/2017"}, {"body": "looking answer question surprise even unanswered question reading issue suspect mean using calling native element left answer details mentioned please feel free correct give different answer another relatively straightforward api tks", "d": "6/2017"}, {"body": "unfortunately requires declaring elementref form control case reactive forms dynamic form array wo nt work", "d": "6/2017"}, {"body": "zoechi appreciate work team mates put would like see side help feature implemented might approaching wrong following routes foo hello world page component foocomponent foo hello world component foocomponent case page basically pagination foocomponent world type though world changes component foocomponent remains gather use query params paginate solved problem however would like switching routes matching components rerender component think seo benifit unique pathsegments place query params might better still testing theory suggestions would great read resource however wanted add case illustration happens also number devs problem count regards dewald", "d": "6/2017"}, {"body": "dewwwald angular team individual contributor angular user avoid misunderstandings", "d": "6/2017"}, {"body": "zoechi sorry even independent contributor huge feat recommendations", "d": "6/2017"}, {"body": "nope never requirement fine keeping state service let angular recreate component", "d": "6/2017"}, {"body": "zoechi exactly however component subscribes get progress percentage based also initializing component service like oh new subscriber trying make highlevel discussion fun read css animation jumps component recreation matter solved query parameters", "d": "6/2017"}, {"body": "think also problem user view authenticated token anon user view needs send protected view module module canload see logged redir user get token canactivate works gets target route passes parameter token server pass back finish job seem find target route canload canload use canactivate", "d": "6/2017"}, {"body": "note something know app trying navigate user module routernavigate call target route figure went route needed module load think navigate call parameter saved passed load call code rest way", "d": "6/2017"}, {"body": "vsavkin feel core flaw router lazy load needs urgent priority early route process common case need know requested url also common several authentication cases may need redirection actions might reload app proceed example use identity server implicit flow requires app calls identity server redirect back app app reload works activate guard load guard sts handles user login ui keeps app knowing users password also used allow sign facebook google twitter microsoft accounts via oidc oauth kind router state whatever details may pass sts makes load non usable users type login method get user token workaround using activate means modules lazyload based security rules good situation basic library using identity server angular works activate perfectly app pass state object calling token returns return trip make navigate call router get back url user trying go start need different kind state object done need definition work", "d": "6/2017"}, {"body": "found using considerably slows mainly using example plunker component inputs takes times using", "d": "6/2017"}, {"body": "juliemr hey wanted feature request add schema shallow rendering shall keep stuff since ollwenjones wrote pretty much want create new issue basically able instantiate child components template bit complex sound still errors bound wrong property component unlike error schema moment creating stub components project create blank components implement interface make consistent inputs outputs makes easier users test template component becomes really difficult include stuff like contentchildren logic combined templateoutlet directive usage transclusion possible solution use normal schema ot component child components use noerrorschema", "d": "6/2017"}, {"body": "recently switched jest webpack gt karmaphantomchrome using great instructions tools thymikee speeds things bit pretest webpack build step removed least simplified setup tremendously overall angular testing still feels like struggle main reason configuring testing modules still pain results spotty certain things destined slow things like things included one simple test working still takes seconds thanks oferh plunk definitively demonstrating leads say dblvs think feature request think positive suggestion good design ideas probably better received core people negative slow opinion without tool nt empowered current tooling write unit tests tests deep component rendering dependencies tree provided testmodule injection etc integration tests integration tests harder write", "d": "6/2017"}, {"body": "helps anyone tried electron headless browser angular unit tests performs far better phantomjs", "d": "6/2017"}, {"body": "yes phantomjs really old latest version chrome also run headless browser fastest one", "d": "6/2017"}, {"body": "running problem last compiler would nice know happening guess ngfactory files nodemodule files could merged compiled modules map systemjs folder lot work", "d": "6/2017"}, {"body": "also seeing issue wanting use reactive forms large application complex nested forms consider blocking bug", "d": "6/2017"}, {"body": "also encountered bug tried disable field async validation process triggered endless flow valuechanges disableenable events", "d": "6/2017"}, {"body": "also error please need response", "d": "6/2017"}, {"body": "also seeing issue enablingdisabling nested form group emitevent false enablesdisables children without passing emitevent children application child controls nested form group subscribing valuechanges sibling controls parent form group enabled event emitted child control breaking enabledisable logic nt want form group child controls updateenabledisable enabled form group create separate issue details plunker", "d": "6/2017"}, {"body": "wonder emitevent passed children disable enable please anyone capable explain us normal one alledged reason issue thanks", "d": "6/2017"}, {"body": "exactly trying describe nt know intended behavior midst creating plunkr last night got caught work easy replicate though enable form group pass emitevent false log valuechanges statuschanges controls inside group", "d": "6/2017"}, {"body": "kylecannon real problem defect angular run testing test u put begining run push per test reason work", "d": "6/2017"}, {"body": "use clean solution example u r redirected external app activerouter params wo nt work case ex user coming app email activatereset password url say want extract access token u typescript getparameterbyname name let url windowlocationhref name namereplace g amp var regex new regexp amp name amp amp results regexexec url results return null results return return decodeuricomponent results replace g ngoninit let token thisgetparameterbyname accesstoken consolelog token", "d": "6/2017"}, {"body": "closing wo nt document narrow use case general angular docs would better stack overflow q amp", "d": "6/2017"}, {"body": "good static fabric method rxjs return behavioursubjectsubject instance default spent one hour static function appropriate signature", "d": "6/2017"}, {"body": "vsavkin chance implemented sometime soon", "d": "6/2017"}, {"body": "done", "d": "6/2017"}, {"body": "already approved", "d": "6/2017"}, {"body": "approved yes done", "d": "6/2017"}, {"body": "join team build", "d": "6/2017"}, {"body": "nt think help commenting design doc giving us ideas imagine work pr additional review beneficial", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "recently ran problem completely agree felyperennan private definitions reason abandoned foxandxss already stated oct typescript compiler editor complain try access private variable ca nt usefullness proven thinks nt support privateness aot provide way compile private declarations neatly mark error giving useful construct", "d": "6/2017"}, {"body": "using native javascript private property future wo nt work either jit aot way keep consistency make public would new inconsistency real javascript private property fake typescript private property", "d": "6/2017"}, {"body": "similar error injectable export class headerwithtoken option requestoptions use error", "d": "6/2017"}, {"body": "first use ngform onsubmit function definitely work print whole myform see options available use", "d": "6/2017"}, {"body": "samfrach thanks link followed steps available link still getting problem please suggest", "d": "6/2017"}, {"body": "followed methods getting problem urls except added file server tomcat location project deployed location htaccess file added code file apache modrewrite extension also enabled given base url path indexhtml like missing need add anything", "d": "6/2017"}, {"body": "everyone interpreting angular error message literally like nt escaped like also escape like still perfect managable", "d": "6/2017"}, {"body": "problem realized return promise changed observable fixed", "d": "6/2017"}, {"body": "fix put angularclijson", "d": "6/2017"}, {"body": "closing narrow use case angular documentation appropriate stack overflow", "d": "6/2017"}, {"body": "please update documentation days wasted time issue", "d": "6/2017"}, {"body": "leehyunggeun thanks lot", "d": "6/2017"}, {"body": "thank much adding outdir compileroptions fixes generated js map files src folders funny makes mention aot cookbook docs documentation aot extremely poor", "d": "6/2017"}, {"body": "still happening cli handles scss well works fine throw loop error comes back", "d": "6/2017"}, {"body": "robwormald share go till feature added angular team help save approximatly characters mainbundlejs file", "d": "6/2017"}, {"body": "issue still occurs version nt see messages another issue solution removes messages nt fix error", "d": "6/2017"}, {"body": "mohsenbzm breaks lazy loading ca nt figure fix", "d": "6/2017"}, {"body": "solution designed fairly large app many components use generic template stored common location works fine jit breaks aot redesign entire app use aot even moduleid mentioned requires us make change every component application nt understand aot behave jit", "d": "6/2017"}, {"body": "would also like know solution link componentrelativepaths longer exists", "d": "6/2017"}, {"body": "darincardin jasedwards use see changelog otherwise consult repo used starter template", "d": "6/2017"}, {"body": "closing old", "d": "6/2017"}, {"body": "closed old", "d": "6/2017"}, {"body": "changes create one locale file component means create chunks example instance default language", "d": "6/2017"}, {"body": "yet", "d": "6/2017"}, {"body": "dammage strict minimu due build time ocombe", "d": "6/2017"}, {"body": "hi exactly looking someone help understand use routesrecognized properties track routes use information help user navigate previous url tried logging routerecognized logging function named routesrecognized four properties id url urlafterredirects state thanks", "d": "6/2017"}, {"body": "dzmitryshylovich longer logging console plunker referenced component destroyed anything changed", "d": "6/2017"}, {"body": "maximusk change made providers instantiate lazily updated plunker", "d": "6/2017"}, {"body": "willshowell thanks understand called service destroyed destroyed component declared service providers gets destroyed mean services defined modules never destroyed", "d": "6/2017"}, {"body": "maximusk understand yes questions case wished service destroyed navigating away module routes required providing injecting service wrapper component", "d": "6/2017"}, {"body": "closing old probably longer relevant also clearly actionable", "d": "6/2017"}, {"body": "cschulz sounds hacky kara moment think template driven forms engineered lot hacky thinks get work bit cool standard forms hell standard forms buisness application expect contact formular searching since days easy method template driven forms validation custom components multiple inputs seems solution simple use case soultion find one control one component crap", "d": "6/2017"}, {"body": "show solution thanks", "d": "6/2017"}, {"body": "jlsuarezs pass string need pass escaped constructor otherwise put raw regexp component binding look implementation", "d": "6/2017"}, {"body": "pattern works", "d": "6/2017"}, {"body": "ran issue stackoverflow seem work fine loops ngmodel", "d": "6/2017"}, {"body": "nkjoep search urlsearchparams many examples stack exchange pass constructor shown otherwise use like normal ran rather obvious bug ten months without oneliner fix sad", "d": "6/2017"}, {"body": "well let move abstract generic components concrete components lol cheers", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "problem felipedrumond found code sid import component angularcore import router activatedroute params routesrecognized angularrouter export class appcomponent good job shall component route free route params subscription want use activatedroute", "d": "6/2017"}, {"body": "update issue", "d": "6/2017"}, {"body": "problem new information", "d": "6/2017"}, {"body": "nt documented guides yet short list coverage soon seems point noted api docs well", "d": "6/2017"}, {"body": "spent hours trying figure lazy loading modules even though nt want used brandonroberts amp solutions loadchildren gt mymodule got weird errors trying fix seems hacky leave hopefully elegant solution soon", "d": "6/2017"}, {"body": "ngc works need export function would biggest issue returning ngfactory aot end something like typescript export function gethomemodule let ngmodule homemodule aot ngfactory return require homehomemodule aot ngfactory ngmodule", "d": "6/2017"}, {"body": "vsavkin wondering adding proper feature route module going added", "d": "6/2017"}, {"body": "solved slightly different way works well problem restoring forwards popstate scroll position yahasa snippet also wanted scroll zero main menu nav clicks close detail page project method calls location return list page whether sensible yet decide either way triggers popstate done app component hook event listener adjust scroll position popstate everything else reset props constructor historyscrollrestoration manual locationonpopstate gt thiswaspop true thissubscriptionspush thisroutereventspairwise subscribe prevroute currroute gt historyscrollrestoration disables default browser behaviour remembering scroll position popstate timeout seems fix issue scroll firing page finished building", "d": "6/2017"}, {"body": "davidfrahm experiencing problem still even solution scrollable div holds major contents application similar search page however use scrollable div represent rather page able retrieve reuse previous component without problem however scrollable div resets everytime navigate back reuse component plnkr demonstrates behavior made heroes container yaxis scrollbar reproduce scroll heroes container somewhere go view come back see scrollbar reset top", "d": "6/2017"}, {"body": "news", "d": "6/2017"}, {"body": "nt look like fixed near future may ask kind important issue lots people nt use onpush form components components app use forms forget onpush use default strategy uses lot cpu bigger spas results constant massive lag", "d": "6/2017"}, {"body": "modify source code component implements workaround call eg plunker original poster using technique", "d": "6/2017"}, {"body": "strategy meant used component state component receives data outside form control internal state otherwise need work manually christianacca shows convenient way", "d": "6/2017"}, {"body": "worked", "d": "6/2017"}, {"body": "quick update decided replace intl api implementation working right", "d": "6/2017"}, {"body": "ocombe exactly mean mean various intl api browsers", "d": "6/2017"}, {"body": "currently angular uses intl api browsers format dates numbers pipes use many issues browsers different implementations means requires polyfill still lot features missing working extracting data cldr project updating pipes use data instead intl api breaking change formats might change intl lot things could nt control require extra provider define bootstrap means finish pr time", "d": "6/2017"}, {"body": "another suggestion number currency format large numbers json javascript numbers limited signed numbers precision needed numbers must transmitted strings intlnumberformat format constructormethods work unformulated string representations large numbers without first casting ideally whatever replacement would work string representations numbers without type cast currently desired", "d": "6/2017"}, {"body": "encounter issue angular found workaround similar beforeeach async gt let myservicemock init mock required testbedconfiguretestingmodule declarations mycomponent providers provide myservice usevalue myservicemock let myservice beforeeach inject myservice myservice gt myservice myservice trigger open gt mockspyetc myservice myservice instance test injected another servicecomponent", "d": "6/2017"}, {"body": "btinoco struggling able get unit tests working", "d": "6/2017"}, {"body": "bug", "d": "6/2017"}, {"body": "plans fix bug", "d": "6/2017"}, {"body": "problem goes away javascript export function exportmeetmodule return meetmodule ngmodule imports routermoduleforroot path redirectto meet pathmatch full path meet loadchildren exportmeetmodule usehash true exports routermodule export class approutingmodule getting another error repository github", "d": "6/2017"}, {"body": "every single component used two modules eg two pages create separate module awful arbitrary restriction requires us copypaste boilerplate create meaningless files disappointed combined lazy loading crash happens pages modules accessed application run case like month confusing", "d": "6/2017"}, {"body": "possible component without including module", "d": "6/2017"}, {"body": "component declared one ngmodule know reason wrote one nt see logic behind create boilerplate module component want accessible modules java world boilerplate worshiped feels like random utterly unpractical restriction", "d": "6/2017"}, {"body": "certainly others simplest one otherwise duplicate code pile problems treeshaking need rules component factory win identical ones", "d": "6/2017"}, {"body": "jpsfs found solution load components dynamically adding component declarations root application module also part angular angular migration project project large number components reused different application lazy loaded based application context per understanding angular add component dependencies root ngmodule declarations import platformbrowserdynamic angularplatformbrowserdynamic import component ngmodule angularcore ngmodule imports browsermodule import angular browsermodule bootstrap bootstrapcomp indicate bootstrap component declarations comp n register component module export class appmodule platformbrowserdynamic bootstrapmodule appmodule case nt wanted root ngmodule know component dependencies compile time rather wanted components loaded dynamically run time find good solutions bootstrap application without adding components root ngmodule declarations nt wanted one ngmodule component", "d": "6/2017"}, {"body": "feature request", "d": "6/2017"}, {"body": "problem persists", "d": "6/2017"}, {"body": "update issue serious problem using angular within electron app since least windows valid apart system path windowlocation uses", "d": "6/2017"}, {"body": "order allow parentheses url defined custom url serializer also see suggestion included customurlserializer providers array within appmodule", "d": "6/2017"}, {"body": "unsubscribing nt high hopes days issues actually addressed point", "d": "6/2017"}, {"body": "dirty workaround bypass object interface use array accessor jobformget tasks controls", "d": "6/2017"}, {"body": "add lifecycle guide changes afterviewchanges trigger exception mention settimeout workaround yes triggers new round change detection entire page bad", "d": "6/2017"}, {"body": "wardbell personally managed replace workarounds right way angular way stated documentation mention though hard understand error coming component actually need trigger change detection think place improvement error message thrown", "d": "6/2017"}, {"body": "meltedspark good idea unfortunately inconvenient implement since need inject every time used another approach components need trick put callbacks queue queue uses single execute pending callbacks effectively one change detection round triggered", "d": "6/2017"}, {"body": "kemsky nt get wrong totally fine execution perspective indeed workaround even though need inject proper way work working angular think stated official angular documentation", "d": "6/2017"}, {"body": "similar problem observabledelay jasmineclock tick found workaround replacing maybe avoiding observabledelay way workaround problem well", "d": "6/2017"}, {"body": "updates regarding bug", "d": "6/2017"}, {"body": "would also love know blocking issue", "d": "6/2017"}, {"body": "desfero workarond use component inheritance create components different class names override query use use one another like html modified original plunker show example", "d": "6/2017"}, {"body": "tytskyi also use nt need introduce additional components guess", "d": "6/2017"}, {"body": "rezss ever found way around similar issue example viewed", "d": "6/2017"}, {"body": "tytskyi asking sir", "d": "6/2017"}, {"body": "viralstegowl asked help problem ngsubmit fires twice please create new github issue follows issue template includes runnable code example plunker debugged current issue closed long time ago receive much attention", "d": "6/2017"}, {"body": "fayezmm eventually ditch directive approach bind animation like angularcli however animating reusable component difficult put together even illogical syntax structure philosophy point view get reusable collapsing working even prod mode js import component input hostbinding angularcore import trigger state style transition animate angularanimations component selector collapse template animations trigger collapseani state style height opacity state style height opacity transition gt animate easein transition gt animate easeout export class collapsecomponent hostbinding collapseani input collapse boolean constructor", "d": "6/2017"}, {"body": "fyi everyone angular working version query supports routable animations", "d": "6/2017"}, {"body": "great work really excited try feature however seams api changed one presented example animatechild takes params find code useanimation function please provide us api docs", "d": "6/2017"}, {"body": "akuzmanoski even though docs working example almost date", "d": "6/2017"}, {"body": "thank", "d": "6/2017"}, {"body": "akuzmanoski managed understand anything even make something work posted everywhere answer searched tried night documentation nothing looked repo linked ca nt make much animatechild work whenwhat use tell use certain animation nt take parameter anymore use use like like cli builds app fine errors build either ways get error browser console following piece code const fadein animation style opacity animate customtime style opacity params customtime const fadeout animation animate customtime style opacity params customtime case nt get case code nt anything jumps instantly states also demo simply instead get changed night seeing ngconf video almost still could nt make sense let alone actually make work wits end ps simply trying div like ngconf demo routing anything animatechild fadein customtimeuseanimation", "d": "6/2017"}, {"body": "mrcroft sorry difficulties facing features master syntax changes new features released either week next angulario updated api docs new features fully detailed blog post right team might make last minute changes api stable first thing first variables changed defined allows sub animation trigger inner element animated exact right time parent example back ngconf presentation thought would used feature well invoking animation created changed method called designed used animation created syntax work gone use instead soon lots nice learning material works", "d": "6/2017"}, {"body": "matsko thank detailed answer clears things expected released work great news", "d": "6/2017"}, {"body": "mrcroft allready works working version fadein animation animation code params default values defined second argument array triggerer code transition takes name animation animationoptions also animation options sent animation calling param taken transition options template code call animation trigerrer send value also params value defines state hope helpful", "d": "6/2017"}, {"body": "akuzmanoski nt even occur actually use data binding tried per demo binding duration value inside animation code works specify thank trying input duration component get provided timing value duration invalid thrown even though seems example", "d": "6/2017"}, {"body": "mrcroft make plunkr please fix tomorrow", "d": "6/2017"}, {"body": "matsko done akuzmanoski tried correction suggested code also still nt work error", "d": "6/2017"}, {"body": "mrcroft change input parameter name transitions customtime duration version export const fadeanimation trigger fade working version export const fadeanimation trigger fade", "d": "6/2017"}, {"body": "matsko problem animatechild routing leaving page nested animations dont run animated elements stay position entering page loads routing animations leaving page animation animation binded host element inner element animation workaround combine animations together page animation like works fine maybe fab button aware page leaving transition button fired report new issue", "d": "6/2017"}, {"body": "mrcroft accidently find dont send params code like finaly works const fadein animation style opacity animate duration style opacity params duration const fadeout animation animate duration style opacity params duration export const fadeanimation trigger fade aproach intuitive think", "d": "6/2017"}, {"body": "akuzmanoski hooray thank variable names say keys send component must match variable names use animation code reassigning like component well works sent component overrides defined animation component duration animation duration nt work probably never intend work component customtime animation duration customtime", "d": "6/2017"}, {"body": "sorry keep posting closed issue nt know following bug nt keep state animation finishes example zoom animation used following trigger code input params const zoomeffect animation animate easeout style transform scale scalefactor params scalefactor export const magnifyanimation trigger magnify transition default gt magnified useanimation zoomeffect params scalefactor transition magnified gt default useanimation zoomeffect params scalefactor state magnified style transform nt would hope keep whatever value transformation end animation", "d": "6/2017"}, {"body": "mrcroft values purposely accept input params hopefully something changed", "d": "6/2017"}, {"body": "matsko way keep end state property case takes input param", "d": "6/2017"}, {"body": "open new issue better trackingdiscoverability case users come across error wed jun pm marian stoica notifications githubcom wrote matsko way keep end state scale takes input param receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "davidalee done", "d": "6/2017"}, {"body": "quick question events new router animations like old one", "d": "6/2017"}, {"body": "using angular still issue behaviour xhrbackend mockbackend different", "d": "6/2017"}, {"body": "usecase quentinfchx understand removed seems way much radical solution", "d": "6/2017"}, {"body": "even new api following article written author still make work animationsutilts componentts componenthtml animation works uses time instead want know use data component input params animation wonder new version supports", "d": "6/2017"}, {"body": "try", "d": "6/2017"}, {"body": "amazing thanks", "d": "6/2017"}, {"body": "matsko thanks hard work animations features couple questions related answer possible update wonderful blogpost use current api wraps inputs similar manuelnaturalcycles found property used api documentation etc failed see data binding correct way persist end state animation driven input parameters get animation input parameters working per comment end persist seem support input parameters thanks advance", "d": "6/2017"}, {"body": "tomwanzek problem animation executes properly end state persisted element opacity value defined css animation take goes back undefined initial state", "d": "6/2017"}, {"body": "manuelnaturalcycles initial step playing using dom element animated achieves persistence first glance still allowing animation run side note build animation manually end style animation persisted without extra steps end catch test entire use case new features amounts testing dynamic animations old new input values component change detection corresponding lifecycle hooks underlying state space continuous may map synthetic discrete state space trigger transitions comment back chance go full cycle hopefully successful", "d": "6/2017"}, {"body": "manuelnaturalcycles created repo initial examples datadriven animations mind ngxanime live demo available based approach took far might otherbetter ones couple early observations given animation triggers currently work ip bindable state object since datadriven animations component inputs possible principle persistence achieved binding end state value relevant style property animated element using absence input parameters trigger configuration see question matsko possible manage trigger animations single state name varying input parameters continuously hood critical understand mutate animation state object treat immutable object mutate animation state object changing input parameter trigger animation affect otherwise newly triggered animation datadriven examples applies controlling surprise animation duration treat animation state object immutable object changes trigger animation examples changes related result lifting done component lifecyle hooks ie manage animation state object still investigation respect following two open matters exit animations apparently triggered using calculate starting value animation seem possible aforementioned approach seems necessary explicitly set start ie previous value end ie new current value animated property explicitly animation input parameter components hook hope helps starter illustration suggestions welcome edit updated open matters paragraph", "d": "6/2017"}, {"body": "also think annotation old updating would solve lot confusion pass input params animation", "d": "6/2017"}, {"body": "alobakov perfect wasting whole day saved thanks lot using angular", "d": "6/2017"}, {"body": "alobakov thank using reason nt working", "d": "6/2017"}, {"body": "feature really needed using controlvalueaccessor cumbersome say least please reopen issue", "d": "6/2017"}, {"body": "time solution explained least comfortable using imo", "d": "6/2017"}, {"body": "see closed solved solved different way trying use template driven forms seem simpler cant figure form component validation rolled form really hinders reuse across forms control couple forms someone point toward feature please solution devpreview suggests bzums suggestion looks using reactive forms", "d": "6/2017"}, {"body": "solution model controlvalueaccessor component hierarchy level comment points solution", "d": "6/2017"}, {"body": "still much broken", "d": "6/2017"}, {"body": "mobile firefox work", "d": "6/2017"}, {"body": "close old", "d": "6/2017"}, {"body": "really want write update possible work around", "d": "6/2017"}, {"body": "hello timezone option third argument date pipe added pr replace intl api angular see", "d": "6/2017"}, {"body": "kara multicontrol components mentioned astreate solution avaible", "d": "6/2017"}, {"body": "closing issue address angular docs", "d": "6/2017"}, {"body": "using angularcli project command npm install angularinmemorywebapi save still unable make work error compilation js console chrome answer http get know createdb function called added consoledebug top thing getheroes method service really nt know actual project without modules dir tltourofheroeszip", "d": "6/2017"}, {"body": "hi enter command ng project folder importprovide angularinmemorywebapi well silent error seems nt really use bet", "d": "6/2017"}, {"body": "appmodulets finished tutorial import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import approutingmodule approutingmodule imports loading amp configuring inmemory web api import inmemorywebapimodule angularinmemorywebapi import inmemorydataservice inmemorydataservice import appcomponent appcomponent import herodetailcomponent herodetailcomponent import heroescomponent heroescomponent import heroservice heroservice import dashboardcomponent dashboardcomponent import herosearchcomponent herosearchcomponent ngmodule declarations appcomponent heroescomponent herodetailcomponent dashboardcomponent herosearchcomponent imports browsermodule formsmodule httpmodule inmemorywebapimoduleforroot inmemorydataservice delay default delay approutingmodule providers heroservice bootstrap appcomponent export class appmodule", "d": "6/2017"}, {"body": "yes questions dependencies added packagejson appmodulets really really similar except delay argument", "d": "6/2017"}, {"body": "packagejson angularinmemorywebapi instead angularinmemorywebapi latest", "d": "6/2017"}, {"body": "yes something tried like", "d": "6/2017"}, {"body": "could please check installed module angularinmemorywebapi nodemodules folder", "d": "6/2017"}, {"body": "yes log error runtime", "d": "6/2017"}, {"body": "experimental package guess test behavior code later today keep touch", "d": "6/2017"}, {"body": "thanks", "d": "6/2017"}, {"body": "fed debug karma test angular material switched project cup tea guess got encapsulate new promise instead using promise provided get method getheroes promise getheroes promise maybe simple mistake copypaster cheers", "d": "6/2017"}, {"body": "forget found problem copied new code service ide intellij replace return return new promise", "d": "6/2017"}, {"body": "use visual studio code lol", "d": "6/2017"}, {"body": "tldr answer viewcontainerrefcreateembeddedview adds template sibling target according index viewcontainerrefcreatecomponent adds child target expected alone makes go wat see real workarounds described confusing behavior really workaround empty element inside want insert target uggh target always mean insert target add along side wanted insert along side set parent target sure someone bonehead things like trying insert hr element plain wrong true designing trying prevent people stupid things ended made things super confusing something expected prefer expected rather protecting wish feedback would taken seriously reconsider design createembeddedview follow principle least surprise think might late", "d": "6/2017"}, {"body": "chubbard way createcomponent also adds sibling look sibling template anchor added another two wrapping divs reference", "d": "6/2017"}, {"body": "yes close ide webstorm open project worked worked clear cachings restart", "d": "6/2017"}, {"body": "think use case imagine asynchronous model holds property array pictures pictures ed template javascript needs turn imageviewer carouselfancyboxslideshow firing event receiving asynchronous model early ensure loaded state images dom thought using event tags seems work however solution iterating dont load event solution doesnt require lines like know seen componentsolutions around web seem complex", "d": "6/2017"}, {"body": "pkozlowskiopensource thank much answer solved problem perfectly thank", "d": "6/2017"}, {"body": "pkozlowskiopensource updates think best get something right concerned fancy ways could identified able single way identify without specifying exportas seems little known property think simplest approach automatically add exportas default nonoverridden directives without defined ie selector default exportas anything else overkill point guess querylist index number burdensome difficult nonproductive added compiler autogenerate exportas properties null undefined set default string based mandatory selector property", "d": "6/2017"}, {"body": "old issue encountered weird behavior warning warning warning sanitizing unsafe style value scale last example give warning first nt ps way binding without getting warning without jump disable sanitizer hoops bind plain old css transform mean css transform rocket getting sent mars nt know anything hacking security issue could someone really hack writing example instead could someone actually inject save code serverside would rather bet transformation simply work nt think redirect executed", "d": "6/2017"}, {"body": "yeah also use planting tooltip directive potentially element obviously get element elementref fine special case attached one many different custom components different ones typescript land share interface course lost js compile could get generic reference host component null none could simply check specific variable present special behaviour case focus validation displaying errors nt really exist whole approach casting viewcontainerref messy would nice angular could give host component null none let want", "d": "6/2017"}, {"body": "see need create token represent interface add provider components implementing interface using token ts export const interfacetoken new injectiontoken myinterfacetoken component providers provide interfacetoken useexisting forwardref gt mycomponent export class mycomponent implements myinterface directive export class mydirective constructor inject interfacetoken self optional component myinterface", "d": "6/2017"}, {"body": "ghetolay thanks sounded interesting plunkr lot overhead example posted seems much compact could bother explanation going create injectiontoken previous example used opaquetoken assume older interface also missing new front injectiontoken provide token components adhere interface make reference component use interface members directive directive constructor pull component long adhere interface token also approach used get list viewchildren token", "d": "6/2017"}, {"body": "yep example may seems complicated handles approach interface base class separate got full explanation order inject need first provide angular automatically creates provider component probably something like inject using case enough want inject components based something else interface case need add provider provider must provide token also need token use nt want instantiate new component injection like would service rather get one already instantiated none done need inject directive constructor define token want inject implicitly done angular inject service component uses type token token type need something persist runtime interface vanish means must component level otherwise could inject component somewhere injector tree directive nt throw able inject meaning ok fail injection yes use injection way get children providing token", "d": "6/2017"}, {"body": "thanks ghetolay particularly matters ca nt get viewchildren method working yields error", "d": "6/2017"}, {"body": "may typing issue pretty sure worked according plunkr really seems like use token investigate", "d": "6/2017"}, {"body": "talking alxhub even experiments using token seems work docs typings correct meant supported nt could break anytime sorry miss leading", "d": "6/2017"}, {"body": "ah thanks ghetolay using injectiontokens pulling components using interfaces supposed supported ok use", "d": "6/2017"}, {"body": "hey still problem version dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularinmemorywebapi corejs devextreme devextremeangular rxjs systemjs zonejs devdependencies typesjasmine typesnode canonicalpath concurrently jasminecore karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter liteserver lodash protractor rimraf tslint typescript", "d": "6/2017"}, {"body": "issue cause found accidentally including debug stack tracing build probably irrelevant performance trace looks caused something else", "d": "6/2017"}, {"body": "seems like issues event binding related ngfor highlights performance issues case something triggering events killing thread", "d": "6/2017"}, {"body": "still issue scenario home page click profile link route profile view angular refresh profile view tabs google material design lite tabs mdltabs tabs anchor link href photospanel click redirecting home view refresh refresh profile view page working fine helps angular materialangulario also using meterial lite design css meterial angular properly working angular specially tabs", "d": "6/2017"}, {"body": "following code thisroutereventsfilter event gt event instanceof navigationend subscribe e navigationend gt documentbodyscrolltop", "d": "6/2017"}, {"body": "amongst things nt work properly notation pages etc needs fixed properly angular team root code per requirements", "d": "6/2017"}, {"body": "check helped", "d": "6/2017"}, {"body": "hello millisecond format option added pr replace intl api angular see", "d": "6/2017"}, {"body": "francescomussi create new ticket regarding exact problem thanks", "d": "6/2017"}, {"body": "sreckovic nt remember exactly probably error console whole view affected try check console see error", "d": "6/2017"}, {"body": "francescomussi yes console error cohero undefined logic behind point nt declared hero variable renamed heroes point quick start tutorial anyway happens written quick start tutorial continue quick start hopefully resolve point thanks reply", "d": "6/2017"}, {"body": "zoechi bitbay happen put readonly still working", "d": "6/2017"}, {"body": "checked example works field readwrite method approach short answer works like set html attribute element works present example blocks input writemode well meanwhile dom property happened historically attributes matching pair property update attribute matching dom property also updates vice versa value allowed property means browser hides process calculates valid value property try example output looks like nonsense works like observe effect typescript ngafterviewinit alert thiselementrefnativeelementvalue thiselementrefnativeelementsetattribute value blabla settimeout gt alert thiselementrefnativeelementvalue elementrefnativeelement blabla exclusively matching pairs known attributeproperty example", "d": "6/2017"}, {"body": "look specs referring subtle difference stated content attributes dom programming interface whatwgorg document content attributes aka node attributes property appears lowercase dom interface appears javascript listed camelcase nt matter use property javascript element use method still accessing content attribute dom elementnode hope clears cheers", "d": "6/2017"}, {"body": "newest status need validator blur well seems angular team interests big issue", "d": "6/2017"}, {"body": "taken care future versions angular", "d": "6/2017"}, {"body": "nguniversalfriendly method", "d": "6/2017"}, {"body": "anything blocking typescript supports option", "d": "6/2017"}, {"body": "ronalmog try worked", "d": "6/2017"}, {"body": "tried bezhermoso implementation leaving form formcontrol pending status believe original observable nt completed suggestions edit completeness added doesemailaddressexist method doesemailaddressexist emailaddress string observable const params urlsearchparams new urlsearchparams thisencoder paramsset emailaddress emailaddress", "d": "6/2017"}, {"body": "use following modification ts type validationresult validationerrors null type observablevalidatorfn control abstractcontrol gt observable export class asyncobservablevalidator public static create callback observablevalidatorfn debouncetime number asyncvalidatorfn const changed new subject async validators defined usage inside component", "d": "6/2017"}, {"body": "humberd thanks feedback since subscribe part rxjs sequence internally map call call resolves like promise unsubscribe unnecessary finite observable lot literature may helpful related specific concerns internal use mapcall executeasyncvalidators function angular validatorsts good commentary nature rxjs specific controllers angular also look internals rxjs angular see similar usecases essentially observables case resemble streampipeline promises situations unsubscribing necessary different one occurring rxjs", "d": "6/2017"}, {"body": "typed debouncing asynchronous validator ie producing static factory lines exluding line required another line factory type declaration typescript import observable observer subscription rxjsrx type asyncvalidatorfactory service value gt observable gt asyncvalidatorfn const asyncvalidatorfactory asyncvalidatorfactory service value gt observable asyncvalidatorfn gt let subscription subscription subscriptionempty return input abstractcontrol gt subscriptionunsubscribe return observablecreate observer observer gt subscription observabletimer flatmap gt service inputvalue subscribe observer return gt subscriptionunsubscribe typescript component selector yourcomponent template using componentsform export class yourcomponent assuming signature service ie typical backend calling service design exploits following facts returning instead must cold asyncly scheduled angular client design produces cold asyncly scheduled therefore user implemented backend calling service properties box service implementation validating property type need pass around reference duty subscribe let handle exceptionserrors use want hot multi value emitting implies value changes value example user copypasting value field debounce period validator reach backend even though value change user point view want save roundtrip backend case value changed value keeping internal cache latest validation result purpose could use slightly modified bit complex version called factory works simpler one however samples every input value compares previous value values serves cold async cache instead reaching backend two values differ reach backend cache result successful call backend fails invalidates cache implicitly hopefully help somebody used way previous one", "d": "6/2017"}, {"body": "need import rxjs operators import rxjsaddoperatordebouncetime import rxjsaddoperatorswitchmap", "d": "6/2017"}, {"body": "hello new option display either codesymbolnarrow symbol added pr replace intl api angular see countries multiple money symbols usually local symbol shorter official international symbol longer explicit ex canadian dollar default new narrow symbol case cop example official symbol cop indeed narrow symbol cover use cases", "d": "6/2017"}, {"body": "ocombe great means aware transactions made different currencies show long syntax right glad solutions coming shame vendors intl could help", "d": "6/2017"}, {"body": "issue anyone find solution", "d": "6/2017"}, {"body": "slavafomin comments closed issues least officially ignored would better create new issuefeature request", "d": "6/2017"}, {"body": "zoechi think would easier reopen one especially considering closed without real explanation", "d": "6/2017"}, {"body": "antitoine solution worked refined little code first prepare automatic scrolling ngafterviewchecked typescript import component oninit afterviewchecked angularcore import activatedroute angularrouter import subscription rxjs navigate sending hashtag typescript import component angularcore import router angularrouter", "d": "6/2017"}, {"body": "another workaround reference javierfuentes answer script import activatedroute angularrouter import subscription rxjssubscription export class links private scrollexecuted boolean false allows user directly scroll element user directly lands page hashtag url case subscribed route fragment gets called continuously per every nt allows user scroll back top called timeout millis view scrolled element additionally method defined scroll element user specifically clicks anchor tag update url querystrings anchor wont preserve querystrings tried following workaround constructor private route activatedroute private router router gotohashtag fragment string let url let urlwithsegments thisrouterurlsplit", "d": "6/2017"}, {"body": "participation ts import pipe pipetransform angularcore description repackages array subset new array reasoning change checker freaks ngfor array subset larger data structure usage pipe name derp export class derppipe implements pipetransform transform value args return arrayisarray value arrayfrom value value", "d": "6/2017"}, {"body": "case perfect need display key name use import pipe pipetransform angularcore description repackages array subset new array reasoning change checker freaks ngfor array subset larger data structure usage pipe name keys export class keyspipe implements pipetransform transform value args string let keys let key value keyspush key key value value key return keys", "d": "6/2017"}, {"body": "update please", "d": "6/2017"}, {"body": "update issue", "d": "6/2017"}, {"body": "angular final release routerprimarycomponent longer angularrouter brandonroberts update fix subscribing question", "d": "6/2017"}, {"body": "solution closed", "d": "6/2017"}, {"body": "clear cache every time", "d": "6/2017"}, {"body": "case replacing image stub image load put", "d": "6/2017"}, {"body": "intergleam tandu drewmoore robwormald pkozlowskiopensource pcroc zoechi stefankoru bennadel bryanforbes necroskillz drewlio elsewheregames zoechi eoz error facing developing production server working fine", "d": "6/2017"}, {"body": "smarthasmukh developmentmode error therefore surprise still fix", "d": "6/2017"}, {"body": "error happens likely break one direction data flow could something like changing data one component sibling changing data parent children lifecycle hooks maybe thing exception thrown error helper developer understand one direction data flow contract broken way fact works production accident review changing data parentchildren communication fix development mode", "d": "6/2017"}, {"body": "smarthasmukh used find uncomfortable also example hook navigation events emit event main component show loader component hide loader receive data server within subscription fine one component got data static source observable simply tried use ngoninit tell main component hide loader got error course even though case simple thing right way either take decision show loader first place component could get tricky components like also handle hiding loader data service instead component level ugly fix would wrap one specific case settimeout initial approach nt right one tldr sure proper way scenario well settimeout ugly fix sadly chosen moment simple scenario know going yet might change point future release could try stackoverflow specific case give details way", "d": "6/2017"}, {"body": "sure thanks mrcroft tytskyi mr zoechi know surprise letting know nothing else", "d": "6/2017"}, {"body": "tytskyi fact works production accident review cases response error yes know intended lot components apps loading something init receiving new values bound variables issue known ugliness angular nobody cares", "d": "6/2017"}, {"body": "eoz affecting somehow parent sibling state lifecycle hooks breaking one direction data flow make changes application state stabilized middle change detection tricks microtask settimeout etc", "d": "6/2017"}, {"body": "tytskyi calm making changes stabilization obvious read carefully http request load additional data obviously take time initial stabilization convince behaviour angular correct nt even try", "d": "6/2017"}, {"body": "eoz related http request http request response causes change detection wo nt get expression changed error please provide information", "d": "6/2017"}, {"body": "zoechi reason waste time nobody change nothing task closed", "d": "6/2017"}, {"body": "eoz issue closed year ago angular team quite different priorities back get release issue nt blocker back think valid case create new issue", "d": "6/2017"}, {"body": "zoechi think decide create new issue nt due respect nt like tone", "d": "6/2017"}, {"body": "eoz see comments vent frustration interesting getting solution please stop wasting peoples time useless comments", "d": "6/2017"}, {"body": "calling subscribe component add one two solutions solve problem", "d": "6/2017"}, {"body": "one big difference promises observables observables functions need subscribe get action done case promises understand power observables lacks promises got really confused sometimes need execute something return observable dont care output need job done dont need chain instructions using promises could cases http call executed using observables chain subscription absolutely observables functions http call never executed simple wo nt work need add blank subscription get http call executed way need case subscription one call subscription final instruction indigestible simple promise instruction think bad observables", "d": "6/2017"}, {"body": "pr progress", "d": "6/2017"}, {"body": "chrisworks also work objects often nt work guess problem input component somewhere", "d": "6/2017"}, {"body": "hi wmaurer thanks reply would able expand sample working version use config object simply cant get mine work sample git repo", "d": "6/2017"}, {"body": "chrisworks really work way nt differentiate string input object really old beta project made inputs different types strings eg", "d": "6/2017"}, {"body": "hey guys keep eye could use loggin many many use cases", "d": "6/2017"}, {"body": "update logging service angular", "d": "6/2017"}, {"body": "closing revisited many times since issue raised nt better new issueapproach created", "d": "6/2017"}, {"body": "feel like closed prematurely think plenty valid use cases", "d": "6/2017"}, {"body": "would great add another field service want know state one variable previous view without making url longer", "d": "6/2017"}, {"body": "reason know bug design clear children aux routes child lazy loaded components effect url changing code works looks like workaround", "d": "6/2017"}, {"body": "holy sht unlight daily hero im either missing something plainly bug change thisrouternavigate outlets popover null relativeto thisroute", "d": "6/2017"}, {"body": "still open", "d": "6/2017"}, {"body": "ran learning angular considering surprisefactor longevity bug highlighted docs fixed", "d": "6/2017"}, {"body": "solution provided evanplaice works replacing url nt change page want really navigate navigation method angular router", "d": "6/2017"}, {"body": "status currently hitting issue described according misko callbacks always run zone registered regardless scheduler running seem happening run angular zone run zone registered", "d": "6/2017"}, {"body": "facing exact issue resolver resolves first parameter info related second resolver param present update aware issue jusing locatstorage store data nt see approach following idea", "d": "6/2017"}, {"body": "sitll without resolution dont like attribute selectors", "d": "6/2017"}, {"body": "closing old", "d": "6/2017"}, {"body": "done closing", "d": "6/2017"}, {"body": "hello new locale parameter added pipes date number pr replace intl api angular see allow specify locale manually want use different locale", "d": "6/2017"}, {"body": "hi created angularformatterparser angularjs port directive implements formatter parser angular also customizeable like documentation available npm lib also present give try hope helps feedback appreciated best michael", "d": "6/2017"}, {"body": "mesoamerica thanks fix simply putting place found documentation option barely recommendation side note every javascript class metadata typescript compiler discards metadata default emitdecoratormetadata compiler option true tsconfigjson compiler adds metadata generated javascript every class least one decorator big red box needing parentheses big red box setting defaults false must explicitly set true otherwise simply mysteriously nt work runtime comparison forget parentheses get red squiggly telling wrong edit compile time thanks fix", "d": "6/2017"}, {"body": "according similar stuff planned new httpclient nt think public design doc yet guess something cooked internally google wo nt tell us ready \u30c4", "d": "6/2017"}, {"body": "see", "d": "6/2017"}, {"body": "think throw error also explanation subset selectors supported missing docs term css selector precise meaning web community people going assume subset css selectors going work docs say requires css selector identify html template associated directive almost sure lot developers getting bit issue specially parent child selector working throwing", "d": "6/2017"}, {"body": "update", "d": "6/2017"}, {"body": "nt think fits map keyspipe object ca nt iterate keys map", "d": "6/2017"}, {"body": "map method refer", "d": "6/2017"}, {"body": "dlinx ironically post proves thought output array keyspipe doest get place", "d": "6/2017"}, {"body": "ecloud output array iterator dlinx means need use pipe supported default proper javascript code", "d": "6/2017"}, {"body": "right sorry rudeness", "d": "6/2017"}, {"body": "would expect iterating throw map like working seeing list except expressionchangedafterithasbeencheckederror error similarly solved iterating throw object ngfor binding object component template guys think solution would expect bee faster pipe solution need bee verifyed", "d": "6/2017"}, {"title": "provide options merged mixins", "body": "version reproduction link steps reproduce define component uses mixins define properties eg define component b inside uses add properties expected available component b actually happening defined last mixin one available looks like standard options merging accounts update docs behavior expected", "num": "6008", "d": "6/2017"}, {"title": "vif render nt velse", "body": "problem feature solve using vif rendered fulfilled nt velse causes problems using properties like previoussibling nextsibling since counted elements dom proposed api look like without", "num": "6007", "d": "6/2017"}, {"title": "transition group dynamic name correctly applying transition", "body": "version reproduction link steps reproduce run fiddle uncheck checkbox click shuffle button check checkbox click shuffle button expected first shuffle click unchecked checkbox list items reordered transition animation second shuffle click checked checkbox list items reordered transition animation actually happening first shuffle click unchecked checkbox list items reordered transition animation second shuffle click checked checkbox list items still reordered transition animation found via question stackoverflow list shuffled initially unchecking checkbox everything works expected seeing list initially shuffled transition group set", "num": "6006", "d": "6/2017"}, {"title": "luosimao\u4eba\u673a\u9a8c\u8bc1 datacallback\u56de\u8c03 \u65e0\u6cd5\u89e6\u53d1 vcode callback method whick datacallback props div setted", "body": "version reproduction link steps reproduce \u524d\u53f0", "num": "6005", "d": "6/2017"}, {"title": "constant component data", "body": "problem feature solve ability define constant data accessible templatescode way data defined data moment constant data needs made available via data possible freeze objects looks ugly uses certain implementation may change future documentationreadabilitybetter communication intent allow performance optimizations maybe detect unintended changes vue implement way explicitly define constant data could implemented quick dirty simply mixing constants data without making fields reactivethis could also implemented via plugin think important enough part core proposed api look like vue file example", "num": "6004", "d": "6/2017"}, {"title": "improve documentation amp searchability von native modifier", "body": "problem feature solve tl dr makes understanding native event binding custom vue components accessible also reduces downstream issue load component libraries component libraries custom components become prevalent authors one two choice reemit allcommon events component educate users use native binding modifier personally think modifier become component lib standard usage pattern reduces code size mental overhead manually reemitting necessary events custom component contributor bootstrapvue component library know get decent amount issues around educate devs amazingly useful modifier ultimately burdened limited searchability current documentation proposed api look like documentation already sufficient prominent know modifier yet still hard time finding documentation google think common usecase would lead dev search something like listen event component von working vue component valuable results turn would big win dx", "num": "6003", "d": "6/2017"}, {"title": "window resize\u540e\u5bfc\u81f4click\u4e8b\u4ef6\u65e0\u6548", "body": "version reproduction link steps reproduce \u70b9\u51fbbutton\u4f1a\u5f39\u51fa\u4e00\u4e2apopup expected \u70b9\u51fbinput\u540eul\u4e2d\u7684li\u53ef\u4ee5\u8c03\u7528choosediet\u65b9\u6cd5 actually happening", "num": "6001", "d": "6/2017"}, {"title": "unexpected watch behavior object props", "body": "version reproduction link steps reproduce changing price parent component expected behavior vmodel updates object property picked child component updates happen immediately key change price form component watch update tabbing input expected watch behave value changed parent component actually happening watch fired tabbing input came across trying find best way pass props form components think maybe docs could clearer best way find elsewhere sort contrived examples watch behavior makes think things best vue way application developing pattern come crud type changes object representing database record fetch object server parent component issue action vuex sort irrelevant clone object child component contains form update object form passes client side validations emit updated cloned object parent parent saves server tried make crude diagram guess little simple issue watcher addition good example type record update lifecycle talking would really helpful gt database ajax requestresponse fetchdata clone dataobj lt gt gt dataobj vuex store parent formvalidation emit saved obj lt lt savedata", "num": "6000", "d": "6/2017"}, {"title": "click working safarie", "body": "version reproduction link steps reproduce select item dropdown expected dropdown title reflects selected item actually happening title change first jsfiddle issue may unrelated real code functionality works chrome user selected item main dropdown button changes display safari change made also safari click method log anything click method called referenced jsfiddle safari amp chrome console show log message button text change appreciate anyone may able tell going thanks", "num": "5999", "d": "6/2017"}, {"title": "undefined filters", "body": "version reproduction link steps reproduce open fiddle expected component actually happening undefined commonjs jsfiddle intentional component expect component good candidate first pr", "num": "5998", "d": "6/2017"}, {"title": "refs incorrect using vfor combining components elements", "body": "version reproduction link steps reproduce parent dynamic components referenced multiple one uses loading component child switch timeoutasync call expected equals displayed child components actually happening includes child component loading mechanism much edge case took figure solutions trivial solution wrap child template another afaik construct root template supported vue always single root element solutions provided reproduction link", "num": "5997", "d": "6/2017"}, {"title": "\u5173\u4e8eios safari\u548c\u5fae\u4fe1\u6d4f\u89c8\u5668\u540e\u9000\u51fa\u73b0\u7a7a\u767d\u906e\u76d6\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u73af\u5883 iphone cpu iphone os like mac os x khtml like gecko iphone cpu iphone os like mac os x khtml like gecko nettypewifi languagezhcn \u6b65\u9aa4 \u6253\u5f00 \u70b9\u51fb\u4efb\u610f\u94fe\u63a5\u8fdb\u5165\u7b2c\u4e8c\u9875 \u4f7f\u7528\u6d4f\u89c8\u5668\u81ea\u5e26\u8fd4\u56de\u6309\u94ae expected actually happening \u906e\u76d6\u8986\u76d6\u4e86\u539f\u6765\u7684\u9875\u9762 \u6f14\u793agit", "num": "5994", "d": "6/2017"}, {"title": "ssr unexpected hydration bailout tag", "body": "version reproduction happens reload key happens video looped steps reproduce add tag appvue demo foobar expected clientside serverside version tag actually happening client server side versions bailout tag content flickering", "num": "5992", "d": "6/2017"}, {"title": "child private state nt reset switch child component father component written jsx", "body": "version reproduction link steps reproduce clone demo branch install amp run default child shown click plus button increase count click switch child count nt reset expected count reset switch actually happening count count", "num": "5991", "d": "6/2017"}, {"title": "consi", "body": "problem feature solve building website code review platform need output file source code html highlight however encountered issue module relied module inside figured mime type file missing corresponding define fallback desired send pr mimetypes add configuration personally think good choice also suggest better one contributor needs source declaim mime type think better refer confirm best mime type declaim somewhere doc proposed api look like related", "num": "5990", "d": "6/2017"}, {"title": "got infinite update error passing jsx vnode childcomponent case", "body": "version reproduction link steps reproduce clone demo checkout branch install amp run click second toggle bar expected error console actually happening", "num": "5989", "d": "6/2017"}, {"title": "callback refs additional alternative named refs", "body": "problem feature solve currently want use refs elements dom elements vue components see attributeprop ref provide string ref attribute callback function ref attribute like react currently supported vue would great also callback functions could provided ref attributes especially bit advanced stuff using render function callback function called referred element created also disposed react example passes null latter case seems feature already implemented past reverted later know reasons changes reverted gt see wip support ref callback thank much proposed api look like please see line const myrefcallback ref remove remove boolean seems like better solution one used react remove case ref callback function called null", "num": "5987", "d": "6/2017"}, {"title": "children style updating custom render function", "body": "version reproduction link steps reproduce click dropdown toggle button expected parent class become visible display block actually happening parent class child node display style applied first render value kept child display none case done way bug something done maybe need fallback good old direct element style modification", "num": "5986", "d": "6/2017"}, {"title": "improved api ui components reducing boilerplate forwarding attributes events", "body": "problem feature solve many cases attributes passed vue component added root element rather subelement example ui component incredible amount props must used ensure attributes added element instead wrapper additionally often desirable expose event listeners form element parent also requires lot boilerplate currently element root case modifier solve problem proposed api look like edit start catch discussion currently default exposed element one arbitrary attributes added always root element new directive could used define different exposed element ideas name directive probably personal favorite probably clearer lengthier added element accept attributes passed component attributes longer passed root element features may nice directive defined multiple elements attributes duplicated across case subset attributes accepted element could accept string array strings eg case attributes would added element instead root element attributes would added root element element valueless", "num": "5983", "d": "6/2017"}, {"title": "computed property updating ssr", "body": "version reproduction link steps reproduce create item create computed property depends data item create hook following actions access computed value change data item anything else print computed value somewhere example expected computed prop value must changed actually happening computed prop value remains unchanged ssr created watcher value flag compare old computed value new one actions affecting computed prop see error ssr client side dom different debugging found computed property simply changing first call ssr may behavior normal nt remember something like documentation", "num": "5982", "d": "6/2017"}, {"title": "click modifiers versus click without modifiers", "body": "version reproduction link steps reproduce ctrl click element jsfiddle expected one event trigger actually happening events trigger believe distinction clicks modifiers without feel would redundancy without distinction yeah general cases nonissue distinction would least crunch definitions signifies click click modifiers", "num": "5980", "d": "6/2017"}, {"title": "error add class table tr data", "body": "version reproduction link steps reproduce execute button agregar fila expected help actually happening adding row data object also want add class new record link example see last added record class", "num": "5979", "d": "6/2017"}, {"title": "error add class table tr data", "body": "adding row data object also want add class new record link example see last added record class", "num": "5978", "d": "6/2017"}, {"title": "add none modifier keyboard", "body": "problem feature solve using modifiers greate ctrl alt meta shift modifier indicating key pressed without ctrl alt shift meta simultaneously proposed api look like keydownspacenone myeventwhenenterispressedalone keydownspace myeventwhenenterispressedwithorwithoutanymodifier", "num": "5976", "d": "6/2017"}, {"title": "memory leak vuejs serverside using computed", "body": "version vue reproduction link steps reproduce use vue server render rendertostring vm server computed define test function without return yes step incorrect throw error pause ok memory leak happend memory leak happend expected throw error pause actually happening vonde going run create destroyed exit heap snapshots found vue created almost look", "num": "5975", "d": "6/2017"}, {"title": "vuewatch", "body": "problem feature solve proposed api look like vuewatch", "num": "5974", "d": "6/2017"}, {"title": "consider giving name current default transition mode", "body": "problem feature solve current default name name current default logically called something like hard spell know currently seems name could documented quick reference talked developers easily remembered since nt really documented nt know handle following scenario switching transition modes programmatically case list valid transition modes looks like really weird think works tbh completely sure based experience nt happen often could imagine wanting eg certain routes dynamically think generally good practice provide list valid values parameters like explicitly point one default better global default common use cases little bit background ux designer fe dev worked lot delivering motion design devs multiple platforms using vue tons projects one things happy transition system makes regular work transition animations easy far pleasant experience js frameworks native platforms makes implementing satisfying level transitions getgo easy reusing named transitions noticed vast majority use cases practical development scenarios either conditionally rendering one element b switching two elements scenario b almost always desired mode needs explicitly set every time used seem affect scenario frustrating manually set time forgetting easily leads hardtocatch mistakes since default new developers learn intricacies transition modes effective scenario b transitions even though nt care mode scenario think could cover scenarios better default course desired mode always depends specific art style specific animations desired however even designer think much better default since transition specs generally speaking broken one element exit transition entry transition next one perspective would make sense default animations played succession dev add extra parameter make happen simultaneously since introduces considerations handle state elements dom time notes sure considered dev team also good reasons current default think best solution would able set default transition mode global configuration projecttoproject basis would nt mind configuring oneliner would let dev make conscious choice reflects design current project two individual requests think go together extent naming current default would needed order support configuration parameter guess clarify request proposed api look like vueconfigurationdefaulttransitionmode outin const modestotoggle simultaneous outin inout", "num": "5972", "d": "6/2017"}, {"title": "suggestion using plugin single project contains multi versions vue", "body": "problem feature solve project may contains different versions vue designing plugin system designed plugin would available one vue library matter many vue libs require javascript module project import vue vue maybe vue import myplugin myplugin vueuse myplugin vuedosomething yeah javascript module project import vue vue maybe vue import plugin myplugin vueuse myplugin nt work installed already set true vuedosomething boom undefined proposed api look like javascript module project import vue vue import myplugin myplugin vueuse myplugin vue dosomething yeah data properity hope", "num": "5970", "d": "6/2017"}, {"title": "keepalive component destory immediately use vuerouter", "body": "version reproduction link steps reproduce keepalive component foo nokeepalive component bar common parent content page foo click page bar change style gt height click page foo expected page foo height keep right css page bar height actually happening page foo height page bar height nothing happen tt solution thank much", "num": "5969", "d": "6/2017"}, {"title": "router params ca nt void string", "body": "version reproduction link steps reproduce javascript path couponsearch keyword name couponsearch component couponsearch routerpush name couponsearch params keyword keyword keyword void string router ca nt matched expected go couponsearch paramskeyword void string actually happening router ca nt matched", "num": "5968", "d": "6/2017"}, {"title": "router params ca nt void string", "body": "version reproduction link steps reproduce javascript path couponsearch keyword name couponsearch component couponsearch routerpush name couponsearch params keyword keyword keyword void string router ca nt matched expected go couponsearch paramskeyword void string actually happening router ca nt matched", "num": "5967", "d": "6/2017"}, {"title": "support duplex vmodel binding \u63d0\u4f9bvmodel\u7684\u53cc\u5411\u7ed1\u5b9a", "body": "problem feature solve \u8fd9\u79cd\u573a\u666f proposed api look like javascript export default model name value event input duplex true methods changevalue newvalue thisvalue newvalue", "num": "5966", "d": "6/2017"}, {"title": "recursively pass slots recursive component", "body": "problem feature solve currently pass slot recursive component effective first level would nice passed recursively proposed api look like jade myrecursivecomponent model nestedobj template recursivescope span client content myrecursivecomponent div div component content slot myrecursivecomponent vif modelhaschild model modelchild", "num": "5965", "d": "6/2017"}, {"title": "add shouldprefetch vueserverrenderer", "body": "problem feature solve using vue create static site like via every code split asset getting prefetched awesome feature thinking offline mode trying create site triple digit routes little concern offline browsing ie marketing site creating pretty beefy code overhead would great way get shouldprefetch vueserverrenderer similar shouldpreload proposed api look like exactly like shouldpreload prefetching would great", "num": "5964", "d": "6/2017"}, {"title": "vfor", "body": "problem feature solve var lt something thanks proposed api look like vfor", "num": "5962", "d": "6/2017"}, {"title": "vue component must top container", "body": "problem feature solve vue component must top container think much dom wasted affected page struct style example vuerouter single page app must container mount page vue component must top container time nt need two parent container another example vhtml use abstract element use must use real dom element sometime three parent dom wasted matter careful design dom component situation absoulty avoided think need improve thing know implement difficult rember version vue must top container proposed api look like example page main content area common navigation bar html hello world links vurrouter page finally html hello world links vhtml component like want result like muname component must terrible", "num": "5961", "d": "6/2017"}, {"title": "giving error add logical operators vmodel", "body": "version reproduction link steps reproduce run repro expected show first checkbox enabled second disabled actually happening referenceerror invalid lefthand side assignment console", "num": "5960", "d": "6/2017"}, {"title": "passing empty string boolean type prop result true", "body": "version reproduction link steps reproduce run repro expected false get warning actually happening true", "num": "5959", "d": "6/2017"}, {"title": "cant access fs functions", "body": "version reproduction link reproduceable jsfiddle steps reproduce make empty project vuecli add hellovue expected nothing happen actually happening error occurs says function exist im javascrip senior think bug please help trying use found bug", "num": "5955", "d": "6/2017"}, {"title": "load function upon page load", "body": "beginner vuejs programmer know trigger function using click method vuejs however want know trigger function page loads something like vinit angular thanks", "num": "5954", "d": "6/2017"}, {"title": "\u70ed\u66f4\u65b0\u672a\u77e5\u95ee\u9898", "body": "npm run dev \u4ee5\u540e net errincompletechunkedencoding", "num": "5953", "d": "6/2017"}, {"title": "use sweet alert standalone class vue js", "body": "hello use sweet alert standalone class vue js component variable form new form everywhere needed", "num": "5952", "d": "6/2017"}, {"title": "npm run build error error staticjsvendorjs uglifyjs", "body": "vue webpack webpackprodconfjs plugins new webpackdefineplugin processenv env new webpackoptimizeuglifyjsplugin compress warnings false comments false sourcemap false mangle true hash version webpack time asset size chunks chunk names kb emitted staticjsappjs kb emitted app staticjsvendorjs mb emitted big vendor staticjsmanifestjs kb emitted manifest staticcssappcss kb emitted app staticindexhtml bytes emitted error staticjsvendorjs uglifyjs unexpected token punc build complete tip built files meant served http server opening indexhtml file wo nt work webpackprodconfjs remove uglifyjsplugin plugins npm run build error compress like version webpack time asset size chunks chunk names kb emitted staticjsappjs kb emitted big app staticjsvendorjs mb emitted big vendor staticjsmanifestjs kb emitted manifest staticcssappcss kb emitted app staticindexhtml bytes emitted build complete tip built files meant served http server opening indexhtml file wo nt work fix error", "num": "5950", "d": "6/2017"}, {"title": "warn using incompatible precompiled templates", "body": "problem feature solve wasted hours debugging caused importing precompiled template compiled older version vue subtle differences simple warning objects passed nt look like expected would saved hours proposed api look like afaict least particular issue simply warn exists future may want include semver version number compiled templates morereliably check kind issue", "num": "5949", "d": "6/2017"}, {"title": "running vue development mode without virtual dom", "body": "problem feature solve hopefully would produce actual errors proposed api look like adopt framework without virtual dom actually render stuff using vue syntax", "num": "5948", "d": "6/2017"}, {"title": "webkitkeyframes hash working", "body": "version sassloade nodesass reproduction link steps reproduce npm run build expected actually happening", "num": "5946", "d": "6/2017"}, {"title": "\u7f16\u8bd1\u540e css webkitkeyframes \u90e8\u5206\u6ca1\u88ab hash", "body": "\u6211\u7528\u7684\u662fsass", "num": "5945", "d": "6/2017"}, {"title": "use vue ios communication", "body": "msg divchange divchange event got change event", "num": "5944", "d": "6/2017"}, {"title": "object props set object item default value", "body": "problem feature solve component many props want wrap props object time want props object default value proposed api look like", "num": "5942", "d": "6/2017"}, {"title": "read property ssrcontext undefined", "body": "version reproduction link steps reproduce git clone change srcutiltitlejs file like vue hn title change const title gettitle vue hn ssrcontext ssrcontexttitle title according functional robustness changed code ok normal thinking npm install amp npm run dev open browser enter expected condition statement ensured undefined trying set value shoud ok normal expected actually happening error trace console error browser internal server error suppose bug vueserverrenderer happened", "num": "5941", "d": "6/2017"}, {"title": "vtext nt support filter", "body": "problem feature solve ca nt use vtext dosomething filter args maybe pipeline operator proposed api look like vtext dosomething filter args", "num": "5939", "d": "6/2017"}, {"title": "vmodel breaks format applied input text fields", "body": "version reproduction link steps reproduce create two input text define vmodel one format input blur event remove format focus event expected loses format focused input typing actually happening format removed input text vmodel attribute plunker link direct explanation problem angular sample created show expected behavior", "num": "5938", "d": "6/2017"}, {"title": "add sync modifier vbind directive", "body": "problem feature solve currently syntax supported however want use modifier props ca nt use object destructuring syntax anymore proposed api look like", "num": "5937", "d": "6/2017"}, {"title": "make vfor syntax objects work arrays", "body": "problem feature solve one iteration object array know hand would usefull use properly populated proposed api look like using would value index element array template html key value key value js result firstname john lastname doe age b c", "num": "5936", "d": "6/2017"}, {"title": "proxy von modifier feature request", "body": "problem feature solve sometimes custom component emitting events deep component hierarchy want listen events somewhere top hierarchy consider simple click element instance native event would propagate vue events nt intermediate components event origin listening one may need ensure event propagation manually simply reemitting event something like code ugly verbose getting even uglier templates proposed api look like add modifier", "num": "5935", "d": "6/2017"}, {"title": "easiertouse hoc method", "body": "problem feature solve currently ca nt find anything official vue document create hoc closest thing find web post spreading properties seem verbose think popular way achieve composition vue component use mixins common problems minxins mixins introduce implicit dependencies mixins cause name clashes mixins cause snowballing complexity know vue handles conflicting pretty well personally think would developer fault using escape hatch finish complex composition still could problem next question vue promotes use mixin proposed api look like maybe something like", "num": "5934", "d": "6/2017"}, {"title": "ca nt tell component custom event came", "body": "problem feature solve adding event listener multiple components impossible tell component custom events came take following event handler passed object provided argument way knowing component came end working around passing index component passing back emitted event seems like bit hack proposed api look like honest idea solve one run issue pretty frequently though couple threads forums perhaps second argument", "num": "5933", "d": "6/2017"}, {"title": "warn bound nonexistent key", "body": "problem feature solve considering binding works fine example data null defined componentdata data defined nt work correctly created vmodel made reactive using vueset setting values would nt problem would make live easiert certain usecases proposed api look like visible change maintain actual behaviour could also implemented using modifier like set example would use vueset data instead simply generating", "num": "5932", "d": "6/2017"}, {"title": "canvas node nt reuse", "body": "version reproduction link steps reproduce like jsfiddle expected hope clean switch tab actually happening node reused get used guess template might compiled like javascript render h gt const child", "num": "5931", "d": "6/2017"}, {"title": "example chinese doc different english", "body": "steps reproduce according chinese doc see copy example test page console enter click show dialog box click u see error console example english doc ok last found different chinese english expected ps think create issues page friendly use markdown language paste image describe problem better detail actually happening", "num": "5930", "d": "6/2017"}, {"title": "prevent modifier work mousedown event", "body": "version reproduction link steps reproduce click tag left click mouse expected redirect href link actually happening jump href link", "num": "5929", "d": "6/2017"}, {"title": "onewaydataflow working", "body": "version reproduction link steps reproduce pass data child component prop save prop component data update data child object parent also updated expected saving updating data passed prop child component actually happening child components mutating parent state tt passing object component edited component cancel object edition saving expect onewaydataflow work", "num": "5928", "d": "6/2017"}, {"title": "changes detected vuejs using selenium ide works", "body": "version reproduction link steps reproduce save following html file open selectframe result type cssinput type text test open selenium ide firefox run expected show test hello underneath input text box actually happening displays text modify vuejs version changing script tag text updates correctly use fiddle enter text manually works fine well reason something changed makes tests selenium ide stop working encountered bug selenium ide testing upgrading code vuejs", "num": "5927", "d": "6/2017"}, {"title": "add support object destructuring von", "body": "problem feature solve declaring components sort repetitive syntax occurs lot feature would allow event declarations dry similar way vbind currently works proposed api look like", "num": "5926", "d": "6/2017"}, {"title": "looks like regression prop modifier components", "body": "version reproduction link steps reproduce create component pass props using vbind add prop modifier property values appear set component correctly undefined bad stuff occurs expected vue prop modifier nt observable effect eg fooprop bar would nt write html attribute foo nt prop component question actually happening vue prop bound prop modifier undefined accessing component go reading docs could nt find concrete definition vbind fooprop interplay components vue used prop would guarantee html would generated would nice either behaviour restored another modifier created say component doens nt prop called foo ignore binding eg", "num": "5925", "d": "6/2017"}, {"title": "using von iframes", "body": "version reproduction link steps reproduce use von click iframe element expected click handler invoked actually happening click handler invoked", "num": "5923", "d": "6/2017"}, {"title": "confirmed memory leak", "body": "version reproduction link steps reproduce stimulate garbage collection dump memory heap expected instances use garbage collected actually happening opposite heap dump file found", "num": "5922", "d": "6/2017"}, {"title": "filter trigger", "body": "version reproduction link steps reproduce let create list elements apply filter substitute time creation element let add one element expected filter function must called last element added actually happening filter function applied elements", "num": "5921", "d": "6/2017"}, {"title": "add one item list filter method trigger items", "body": "created render list filter trigger item elements add new item list filter trigger new old items", "num": "5920", "d": "6/2017"}, {"title": "setattribute function", "body": "version reproduction link steps reproduce nt able make reproduce environment vue ssr using rendertostream error occurs sometimes feels like race condition something error look source line breaks cause never nullchecked expected site render correctly actually happening getting clientside error breaks site", "num": "5919", "d": "6/2017"}, {"title": "safari\u6d4f\u89c8\u5668\u4e0b\u65e0\u6cd5\u89e6\u53d1form\u6807\u7b7e\u7684submit\u4e8b\u4ef6", "body": "version reproduction link steps reproduce \u95ee\u9898\u63cf\u8ff0 \u5728safari vue \u6e32\u67d3\u4e0b\u7684 form \u4f7f\u7528\u590d\u73b0\u9875\u9762 \u6253\u5f00\u63a7\u5236\u53f0 \u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u6587\u4ef6 \u4f1a\u770b\u5230\u63a7\u5236\u53f0\u63d0\u793apost\u51fa\u9519\u7684\u95ee\u9898 \u8fd9\u8bf4\u660esubmit\u4e8b\u4ef6\u662f\u89e6\u53d1\u4e86 \u540c\u6837\u64cd\u4f5c \u6539\u4e3a\u6b63\u5e38js\u4e8b\u4ef6\u7ed1\u5b9achange \u5e76\u63d0\u4ea4 expected safari\u80fd\u591f\u89e6\u53d1submit actually happening safari\u65e0\u4efb\u4f55\u53cd\u9988", "num": "5918", "d": "6/2017"}, {"title": "ca nt get child component clientwidth etc", "body": "version reproduction link steps reproduce ca nt get child component lot el propertyi use ref register javascript picture access dom child componenti get dom propertycode almost like picture expected want access child dom property root component actually happening get child dom property child component selfbut ca nt get property root component nt vue filethat oki nt know whyi think template element cause jsbin example really situation", "num": "5917", "d": "6/2017"}, {"title": "found parsing anomaly vue component data function defintion", "body": "found trying play around example vue tutorial laracast vue component defined using coding style nt work style works former gives following errors dev tools took figure sure going vue reproduce please use working example working example files", "num": "5916", "d": "6/2017"}, {"title": "support passive modifier render function", "body": "problem feature solve try use render function found support passive feature optionbut von directive supported passive modifieris way use passive modifier render function bind event proposed api look like", "num": "5915", "d": "6/2017"}, {"title": "allow use array syntax keepalive includeexclude", "body": "problem feature solve commadelimited string syntax intuitional actually splitting string array support array syntax directly proposed api look like", "num": "5914", "d": "6/2017"}, {"title": "injected objects reactive despite documentation saying opposite", "body": "version reproduction link steps reproduce provide parent component object preexisting key inject object child component either consolelog object see reactive modify value preexisting key see value also changes screen automatically expected according vue documentation injected objects reactive note provide inject bindings reactive value change screen seconds consolelog display word getter logging injected object actually happening injected object reactive message changes screen seconds consolelogging object shows reactive displays word getter use inject inject commonly used libraries objects like moment use templates display nicely formatted dates entire moment library object becomes reactive probably cause unnecessary performance hit browser using moment library", "num": "5913", "d": "6/2017"}, {"title": "updated function run async action chrome firefox", "body": "problem feature solve code messagevue expect fetched updated expected firefox run linux results chrome run linux updated fetched proposed api look like dont know", "num": "5911", "d": "6/2017"}, {"title": "\u62a5\u9519invalidcharactererror vueminjs", "body": "version reproduction link steps reproduce expected error actually happening \u62a5\u9519invalidcharactererror", "num": "5910", "d": "6/2017"}, {"title": "jsonstringify looseequal necessary keys order", "body": "see looseequal function using quarantines key order serializing see properties nonarray objects guaranteed stringified particular order rely ordering properties within object within stringification", "num": "5908", "d": "6/2017"}, {"title": "vue hydrate successfully", "body": "problem feature solve according ssr hydration docs development mode vue assert clientside generated virtual dom tree matches dom structure rendered server mismatch bail hydration discard existing dom render scratch production mode assertion disabled maximum performance would one know hydration succeededfailed assertion disabled production mean vue defaults discarding dom vue assume server sent proper markup would imagine failed hydration would something would nice capture eg via tracked fixed proposed api look like indeed hydration mode exposed global multiple modes vue run simultaneously booleanexception exposed let developer know hydration succeeded", "num": "5907", "d": "6/2017"}, {"title": "transition working chrome version", "body": "version reproduction link steps reproduce install chrome beta visit official vue transition documentation example jsfiddle link click toggle button expected hello message appears disappears use fade transition actually happening hello message appears disappears instantly", "num": "5906", "d": "6/2017"}, {"title": "bug render function img src used", "body": "version reproduction link steps reproduce steps src attribute included dom expected src attribute included vue logo visible actually happening src attribute included logo thus visible also happened widthheight attributes", "num": "5905", "d": "6/2017"}, {"title": "created mounted called component inside velse", "body": "version reproduction link steps reproduce tell seems caching components within blocks element structure mirrored eg following template issue present html structure works expected follow reproduction open console click toggle isactive button expected called within called within actually happening called within initial load set called set back nothing set back called", "num": "5903", "d": "6/2017"}, {"title": "inconsistent behavior vmodel sync ime composition", "body": "problem feature solve languages require ime chinese japanese korean etc notice vmodel get updated ime composition ok type search ok proposed api look like languages require ime chinese japanese korean etc vmodel type search get updated ime composition", "num": "5902", "d": "6/2017"}, {"title": "windowsonerror working", "body": "version reproduction link steps reproduce create global error handler something like windowonerror function e alert error caught inside function vue methods throw exception example throw hello expected alert box shown actually happening nothing seems vue silence error want use centralized error handling mechanism user generated errors", "num": "5901", "d": "6/2017"}, {"title": "transition mode honored conditionally rendered elements", "body": "version reproduction link steps reproduce create list elements conditionally rendered based current index within transition group set transitiongroup mode outin exercise transition see jsfiddle code compare dynamic component whose template changes based current index expected conditional list components honor outin mode transition currently active element finish transition next element begins behavior dynamic component case actually happening outin mode ignored conditional list elements transitions current next elements happen simultaneously however outin behaves expected dynamic component", "num": "5900", "d": "6/2017"}, {"title": "ref component list updated using splice swap elements", "body": "version reproduction link steps reproduce open run click swap components confirm ref updated expected ref updated key supplied components really swapped actually happening ref updated", "num": "5899", "d": "6/2017"}, {"title": "ssr directive access dom", "body": "problem feature solve want prerender text resources proposed api look like ssr directives textresource function vnode directivemeta", "num": "5898", "d": "6/2017"}, {"title": "koaviews\u652f\u6301vue", "body": "problem feature solve \u5728\u8fd9\u4e2a\u5e93\u4e2d\u652f\u6301vue proposed api look like", "num": "5897", "d": "6/2017"}, {"title": "error render function using dynamic require computed", "body": "version reproduction link steps reproduce ajax formdata nodejs users upload image nodejs save img disk send hash image component component dynamic require image computed method expected error actually happening vueesmjs error find module webpackcontextresolve eval webpackcontext eval vuecomponentimgsrc eval watcherget eval watcherevaluate eval vuecomponentcomputedgetter imgsrc eval objectget eval proxyrender eval vuecomponentvuerender eval vuecomponentupdatecomponent eval handleerror vueesmjs vuerender vueesmjs updatecomponent vueesmjs get vueesmjs run vueesmjs flushschedulerqueue vueesmjs anonymous vueesmjs nexttickhandler vueesmjs", "num": "5896", "d": "6/2017"}, {"title": "\u662f\u5426\u5b98\u65b9\u6765\u7ef4\u62a4", "body": "problem feature solve \u80fd\u83b7\u53d6\u6700\u65b0\u7684 dts proposed api look like", "num": "5894", "d": "6/2017"}, {"title": "vfor support arraylike objects", "body": "problem feature solve allow iterating smart arrays extendinherit array instance array something like arguments instance array proposed api look like change api", "num": "5893", "d": "6/2017"}, {"title": "keepalive work transitiongroup", "body": "version reproduction link steps reproduce jsfiddle created gentleman vue help forum complete replicate problem good starting point testing put something random cached keepalive card component wrap keepalive around card components directly components wo nt rendered wrap keepalive around card components directly key components wo nt rendered wrap keepalive around components rendered nothing gets cached specify name using nt help either expected rating status rating component kept cards correspondingly actually happening nothing kept card components rendered due vue needs items keyed nt quite make sense keepalive went ahead keyed keepalive anyway still luck stuck issue long enough think probably time reach help search interface displays results using vfor switched different view user click component inside called want rating info kept users switch thought obvious case documentation seems quite straight forward however matter wrap keep alive target name nt work help would appreciated thanks partial dom structure code code component look like", "num": "5892", "d": "6/2017"}, {"title": "vfor settimeout child component creates index issue", "body": "version reproduction link steps reproduce codepen consists container child component container owns array alerts displayed child component mount uses schedule event let parent know time remove container listens event removes item array codepen opens execute expected alerts close actually happening alert saying disappear seconds continues stay visible loads debugging one settimeout simply nt work onclick event works expected", "num": "5891", "d": "6/2017"}, {"title": "keepalive component abstract component ignores slot name", "body": "version reproduction link steps reproduce open reproduction link expected foocontent shown foo slot actually happening foocontent shown default slot specification ignored slot name stored lost line intentional behaviour", "num": "5888", "d": "6/2017"}, {"title": "expose uid public value vue instances", "body": "problem feature solve adding aria roles accessibility vue component requires setting unique attribute html element component template nt additional requirements aside unique page rather manage instance attributes higher level like component create render appropriate attributes good example collapsibleaccordionstyle ui template could look like proposed api look like using template method sets value nt like proposed solutions reference thisuid since private value subject change future instead like set value based upon publicly available identifier something like way multiple instances component page get unique attributes without needing first declare values parent application resorting complex means generating random strings", "num": "5886", "d": "6/2017"}, {"title": "render function ca nt correct rendering dom", "body": "version reproduction link steps reproduce run code expected rendered dom actually happening", "num": "5885", "d": "6/2017"}, {"title": "vueset api strange behavior path numerical string", "body": "version reproduction link steps reproduce vueset array indexinthearrayinstring value working expected compare vueset array indexinthearrayinnumericform value expected version working suppose actually happening watcher value triggered even value correctly changed model currently fixed code export function advvueset obj path value isnan path path path vueset obj path value", "num": "5884", "d": "6/2017"}, {"title": "way set current runtime server rely checking typeof window undefined", "body": "problem feature solve want try vue ssr custom node framework simulated global variable window runtime navigator property window error occurs requiring vue code vueruntimecommonjs line browser environment sniffing var inbrowser typeof window undefined var ua inbrowser amp amp windownavigatoruseragenttolowercase add code like windownavigator useragent workaround think vue runtime consider running browser many side effects ssr global config could set runtime environment skip checking typeof window undefined would great thanks proposed api look like maybe another way detect environment", "num": "5882", "d": "6/2017"}, {"title": "key attribute set ignored transitiongroup", "body": "version reproduction link steps reproduce click trigger button one list visible instead two expected according documentation expecting use vbind object notation set key attribute actually happening list rendered attribute directly present element aware special attribute may sort hen egg problem work rendering items transitiongroup behaviour intentional maybe space improvement documentation", "num": "5881", "d": "6/2017"}, {"title": "ca nt use template single file component", "body": "version reproduction link steps reproduce create projectname full remove blazetemplate reactivevar standardminifiercss add akryum vuecomponent statichtml juliancwirko postcss appvue notfoundvue importsuipages directory content found importsstartupclientroutesjs importsstartupclientindexjs run expected help actually happening got writing vue meteor app used akryum vuecomponent packagemy vue version meteor version", "num": "5880", "d": "6/2017"}, {"title": "please unreserve underscore allow user usage", "body": "version developer many years many others using underscorestarting variables functions convey special meaning somehow restricted temporary internal use real implementation one wrapper etc taking away ability unnecessary handicapping developers opens door bugs bitten vue handling properties long time ago googling many others done prompted submit issue created method given renaming method already used places combine edits rename outcome imagine long frustrating session debugging propose underscore cleared regular usage users could really simple like renaming internal stuff start instead namespacing everything something like presume would require serious code shuffling", "num": "5879", "d": "6/2017"}, {"title": "warn using arrow function", "body": "problem feature solve team sometimes forget instance must declared ordinary function arrow function described declaration causes unexpected behavior takes time debug proposed api look like api request simple warning browser console would helpful", "num": "5878", "d": "6/2017"}, {"title": "multiple selectors vue instance", "body": "problem feature solve would solve vuejs conflicts google maps recaptchasometimes ca nt vue container wrap whole site one div example plugins wordpress use tag script besides html template inside vue container vue nt allow proposed api look like proposal allow vue multiple islands webpage", "num": "5877", "d": "6/2017"}, {"title": "accessing props attributes html elements", "body": "version reproduction link steps reproduce run jsfiddle see output browser developer view expected expected output browser actually happening see examples vue use props attributes html elements set id greeting instead setting id something changed version vue version worked properly", "num": "5876", "d": "6/2017"}, {"title": "clickprevent also prevents child elements interactions", "body": "version reproduction link steps reproduce click link prevented try open input file prevented expected element prevented child elements default actions nt prevented actually happening element prevented child elements default actions prevented want use elements default actions inside parent element uses nt help either", "num": "5875", "d": "6/2017"}, {"title": "support transition classes normal classes", "body": "problem feature solve stuck one computed class would make code cleaner transition class syntax powerful normal class syntax mean array syntax object syntax direct javascript mix binded static classes proposed api look like html", "num": "5874", "d": "6/2017"}, {"title": "support transition classes normal classes", "body": "broken posting directly stuck one computed class would make code cleaner transition class syntax powerful normal class syntax mean array syntax object syntax direct javascript mix binded static classes html", "num": "5873", "d": "6/2017"}, {"title": "", "body": "problem feature solve proposed api look like javascript path login name login component login beforeenter next localstoragegetitem token next fromfullpath else next javascript routerbeforeeach next gt nprogressstart next routeraftereach gt nprogressdone", "num": "5872", "d": "6/2017"}, {"title": "validator prop change", "body": "problem feature solve props executed passedin props creation binding value prop updated bypass validation proposed api look like api change validation checks value change", "num": "5871", "d": "6/2017"}, {"title": "expose createtextvnode functionality api", "body": "problem feature solve vue component function normal way create vnode represents naked text would create needed want generate things like hello vue world proposed api look like propose change api one ways add behavior function given user function used creating text vnode document propose use null undefined first parameter expose function also somewhere inside vue", "num": "5870", "d": "6/2017"}, {"title": "npm run", "body": "problem feature solve npm run proposed api look like error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true", "num": "5869", "d": "6/2017"}, {"title": "npm run", "body": "problem feature solve npm run proposed api look like \u62a5\u9519\u4fe1\u606f info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true", "num": "5868", "d": "6/2017"}, {"title": "close cmd error", "body": "version reproduction link steps reproduce npm run expected \u5173\u6389\u540e\u4e0d\u62a5\u9519 actually happening info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true", "num": "5867", "d": "6/2017"}, {"title": "npm run", "body": "version reproduction link steps reproduce npm run expected \u5173\u6389\u540e\u4e0d\u62a5\u9519 actually happening info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev node builddevserverjs verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev node builddevserverjs error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true", "num": "5866", "d": "6/2017"}, {"title": "npm run", "body": "info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle client client silly lifecycle client script predev continuing info lifecycle client client verbose lifecycle client unsafeperm lifecycle true verbose lifecycle client path program filesnodejsnodemodulesnpmbinnodegypbin c userscatdesktopvueagrolotnodemodulesbin c c windows c c program program c program files windows performance toolkit c program filesmicrosoft sql program program filescurl program filesputty program filestortoisesvnbin c program program filesredis c userscatappdataroamingnpm program c programdatacomposersetupbin c program filesgitcmd program program program filesnodejs program filesyarnbin program filesmicrosoft vs codebin c userscatappdataroamingcomposervendorbin c userscatappdataroamingnpm c userscatappdatalocalyarnbin verbose lifecycle client cwd c userscatdesktopvueagrolot silly lifecycle client args c node builddevserverjs silly lifecycle client returned code signal null info lifecycle client failed exec dev script verbose stack error client dev verbose stack exit status verbose stack eventemitter program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid client verbose cwd c userscatdesktopvueagrolot error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error client dev error exit status error failed client dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem client package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs client error nt available get info via error npm owner ls client error likely additional logging output verbose exit true", "num": "5865", "d": "6/2017"}, {"title": "data binding slow update ui safari mobile desktop fine chrome", "body": "version reproduction link na steps reproduce try add cart safari try add cart chrome purple button expected safari normal behavior adding cart immediately however data binding areas code update immediately screen zoomed tab openedclosed seem force update actually happening nt add cart slow add cart tried ios slow assumed mobile issue trying safari desktop laggy issue persists", "num": "5864", "d": "6/2017"}, {"title": "array replacement smart heuristics working array wrapped object defined component data function", "body": "version reproduction link steps reproduce object includes array convenience methods case used store validation errors originally encountered issue using veevalidate reproduction vue code error bag object created child component data function convenience method remove error bag uses arrayprototypefilter create new array include values need removed assigns array back thiserrors inside error bag validation logic may cause remove called time means thiserrors array inside error bag replaced keystroke validation runs vue smart heuristics make sure entire dom nt rerendered array replacement seem fail entire dom rerendered key stroke normally might notice parent component also using vmodeltrim child component child rerendered course uses newly trimmed value prevents typing spaces using vmodeltrim child component text input textarea important issue occur errorbag created child component created callback remove method uses arrayprototypesplice instead order modify errors array inplace expected using object wrapped array use one array functions return new array causing array replaced dom completely rerender vue smart according documentation actually happening using object wrapped array array replacement heuristics make sure array replacement cause entire dom rerender code watches array inplace modification methods push splice etc seems work fine workaround replace array use inplace modification methods instead currently child component rerenders dom errors array replaced cause issues parent component using vmodeltrim prevents typing spaces using inplace modification vue realises dom rerender necessary example cleared alreadyempty errors array rerender dom everything works fine strangely enough creating errorbag wrapped array component created callback everything works expected creating errorbag component data function type spaces", "num": "5863", "d": "6/2017"}, {"title": "vmodel work slot", "body": "version reproduction link steps reproduce change showmodal true fill group name click save expected listname value actually happening listname empty js", "num": "5862", "d": "6/2017"}, {"title": "array replacement smart heuristics working injecting wrapped array component", "body": "version reproduction link steps reproduce object includes array convenience methods case used store validation errors originally encountered issue using veevalidate reproduction vue code error bag object injected parent child component may put errors remove errors convenience method remove error bag uses arrayprototypefilter create new array include values need removed assigns array back thiserrors inside error bag validation logic may cause remove called time means thiserrors array inside error bag replaced keystroke validation runs vue smart heuristics make sure entire dom nt rerendered array replacement seem fail entire dom rerendered key stroke normally might notice parent also using vmodeltrim child component child rerendered course uses newly trimmed value prevents typing spaces using vmodeltrim child component text input textarea important issue occur injection used remove method uses arrayprototypesplice instead order modify errors array inplace expected injecting object wrapped array array replacement heuristics prevent entire dom rerendered work injection used least limitation made really clear inplace modification methods working usual expectation array replacement works usual actually happening injecting object wrapped array array replacement heuristics work injection used code watches inplace modification methods push splice etc seems work fine workaround replace array use inplace modification methods instead currently child component rerenders dom errors array replaced cause issues parent component using vmodeltrim using inplace modification vue realises dom rerender necessary example cleared alreadyempty errors array rerender dom everything works fine", "num": "5861", "d": "6/2017"}, {"title": "boolean values custom data html attributes", "body": "problem feature solve html element custom data attribute like content content content issue solves problem types html attributes valid data attributes string value like false true proposed api look like propose custom data attributes could string value boolean logic apply rest html boolean attributes", "num": "5860", "d": "6/2017"}, {"title": "vuessrclientplugin \u5728client", "body": "version reproduction link steps reproduce \u6709assets ajs acss b \u6709assets bjs bcss client \u6253\u5305\u65f6 \u914d\u7f6e\u4e86vuessrclientplugin \u6240\u4ee5\u751f\u5b58\u4e86 maifestjson \u5728 ssr \u73b0\u5728 \u4e86\u4e00\u4e2aa \u4f46\u662fhtml \u91cc\u4f1a\u6709b entry \u4e0b\u7684\u6240\u6709\u8d44\u6e90 expected \u5e94\u8be5\u8981\u533a\u5206\u591a\u9875\u9762\u7684ssr \u7684\u60c5\u51b5 actually happening ssr", "num": "5859", "d": "6/2017"}, {"title": "style object update delay use el arg check update hook", "body": "version reproduction link steps reproduce wan na get newest style value el code like expected newest style object properties actually happening prev style object properties fix", "num": "5858", "d": "6/2017"}, {"title": "deleting element array used associative array", "body": "problem feature solve trying remove element sparse array arr arr arr try vuedelete arr offsets following elts one tried splice undefined undefined element array iterate objectvalues gathered across web seemed remove function previous versions ca nt find anymore currently forced use object instead sparse array incurs performance penalties proposed api look like think target exact match javascript specification behaviors arrays objects thank", "num": "5855", "d": "6/2017"}, {"title": "von attach event mobile touchstart touchend touchmove", "body": "attemp events mobile console tells event undefined", "num": "5854", "d": "6/2017"}, {"title": "dom exception chrome edge using applicationxhtml xml content type", "body": "version reproduction link data applicationxhtmlxml steps reproduce chrome edge load vuejs script document served applicationxhtml xml generate uncaught exception expected exception texthtml applicationxhtml xml documents actually happening uncaught domexception failed set innerhtml property element provided markup invalid xml therefore inserted xml document", "num": "5852", "d": "6/2017"}, {"title": "memory leak detached dom tree patching vnodes", "body": "version reproduction link steps reproduce identified vnod patchedreplaced dom eg vuerouter route update new vnode marked dom element reference refelm previous vnode case previous route causing detached dom tree memory leak steps reproduce open attached jsfiddle open chrome dev tools memory tab select home route make heap snapshot select foo route make heap snapshot select last snapshot use summary tab search box enter detached find detached tree retainer refelm hover red htmldivelement notice dom element home component see code reference vuejs patch method triggered trigger patchvnode replace existing root component root components children triggers updatechildren transitions new element created triggering createelm important createelm passed dom element reference oldstartvnodeelm old vnode previous route argument turn link old dom element new vnode refelm property creating detached binding causing leak expected would expect vuejs would conservative memory usage prevent detached dom nodes actually happening patching vdom replacing root node eg using vuerouter see dom element previous route indirectly linked new route causing detached dom tree leak limited impact normal devices reference last component patched large impact example embedded devices prevents browser garbage collect last route increasing overall memory needed run app clear components component component component component patched component vue keep detached dom component component patched component component also detached component case cleared elm reference transitions component component", "num": "5851", "d": "6/2017"}, {"title": "vuejs partial print", "body": "version reproduction link steps reproduce first want partial print want seconed recovery original code find function effective like print button printing expected function effective actually happening effective thing destroy observe model probably want open new window printing nt know close print window use ifream print beause wang use vuejs grammar generate html join", "num": "5850", "d": "6/2017"}, {"title": "execution sequence mixins", "body": "problem feature solve proposed api look like", "num": "5849", "d": "6/2017"}, {"title": "img load", "body": "trouble using framework materializecss slider vfor putting load put direct path load page works done vfor load", "num": "5848", "d": "6/2017"}, {"title": "vmodeltrim custom component trimmed value flow back component", "body": "version reproduction link steps reproduce originally textarea vmodeltrim worked great however added extra fancy controls textarea decided make custom component reuse share easily noticed two odd behaviours title says type unfocusfocus textarea custom component whitespace still trimmed old plain textarea unfocusfocus clears extreaneous whitespace parent component variable holds text trimmed correctly seems vmodeltrim custom component trim value comes input event within component trimmed value flow back child component value prop another strange behaviour type ab remove b extra whitespace instantly trimmed annoying typing using backspace make typo plain textarea behaviour using vmodeltrim expected implementing custom component containing textarea supports vmodel docs describe using vmodeltrim behaviour textarea match using vmodeltrim plain textarea actually happening textarea within custom component different behaviour plain textarea specifically trimmed value seen parent component uses vmodeltrim child component trimmed value flow back child component see unfocusfocus whitespace still plain textarea trimmed additionally type ab remove b remaining whitespace instantly removed annoying behaviour typing using backspace correct typo example original plain textarea behaviour", "num": "5847", "d": "6/2017"}, {"title": "vue binding overrides element attribute", "body": "version reproduction link steps reproduce create component template render component prop declared component html attribute gets overwritten source expected type text actually happening type foobar", "num": "5846", "d": "6/2017"}, {"title": "transitiongroup dom update lag using css frameworks", "body": "version reproduction link steps reproduce apply transition group vfor using popular css frameworks noticeable semanticui also apparent bootstrap example uses table rows issue also appears something simple unordered list expected transition group continues similar performance without css applied actually happening considerable amount update lag particularly changing vfor array using slice obviously walks line vuejs issue issue one involved frameworks opening case though honestly nt know anyone semanticui side things would able help example little complicated needed reproduce issue simply wanted show use case animating additions array used vfor otherwise transitions table also paginated sliced sorted nt want animate process example toggle using transitiongroup without transition group dom updates instantly expect turned even without transition active see toggling sliced full array slow update visible dom also sorry submitting three times new issue vue site something goofy chrome switch safari", "num": "5845", "d": "6/2017"}, {"title": "transitiongroup dom update lag using css frameworks", "body": "version reproduction link steps reproduce apply transition group vfor using popular css frameworks noticeable semanticui also apparent bootstrap example uses table rows issue also appears something simple unordered list expected transition group continues similar performance without css applied actually happening considerable amount update lag particularly changing array using vfor using slice obviously walks line vuejs issue issue one involved frameworks opening case though honestly nt know anyone semanticui side things would able help example little complicated needed reproduce issue simply wanted show use case animating additions array used vfor otherwise transitions table also paginated sliced sorted nt want animate process example toggle using transitiongroup without transition group dom updates instantly expect turned even without transition active see toggling sliced full array slow update visible dom", "num": "5844", "d": "6/2017"}, {"title": "transitiongroup dom update lag using css frameworks", "body": "", "num": "5843", "d": "6/2017"}, {"title": "vue router issue", "body": "hi got issue vue router error vue warn invalid prop type check failed prop expected string object got undefined found resourcesassetsjscomponentsmenuvue code menuvue", "num": "5842", "d": "6/2017"}, {"title": "possible template accept raw sink sources component becomes simple reactive circuit observables", "body": "problem feature solve cyclejs shows devtool chain observables circuit looks like shows dynamics vivid two immediate problems solves spotting bugs issues b understanding someone else code becomes much simpler vue given directly sink event become sources user intents component sources values either displayed used vif vfor classes come component model sinks viewchanging events operations streams done template whoever uses streams directly get nice separation logic presentation able view logic dynamically cyclelike devtool proposed api look like markdown editor example look follows template html javascript new vuestreams el editor domeventstreams inputsteam rxjssubject componentoutstreams compiledmarkdownstream inputsteam debounce map input gt marked thisinput sanitize true", "num": "5841", "d": "6/2017"}, {"title": "\u7f16\u7a0b\u5f0f\u8def\u7531\u6ca1\u6709\u6b63\u5e38\u6e32\u67d3\u5d4c\u5957\u89c6\u56fe", "body": "version reproduction link steps reproduce \u91cd\u590d\u70b9\u51fb userfoo \u5d4c\u5957\u8def\u7531\u5339\u914d\u89c6\u56fe\u6ca1\u6709\u663e\u793a expected \u91cd\u590d\u70b9\u51fb userfoo \u5d4c\u5957\u8def\u7531\u5339\u914d\u89c6\u56fe\u8981\u663e\u793a actually happening \u5d4c\u5957\u8def\u7531\u5339\u914d\u7684\u89c6\u56fe\u6ca1\u6709\u663e\u793a", "num": "5840", "d": "6/2017"}, {"title": "nt nodes listener removed switching route", "body": "version reproduction link steps reproduce destroy vue components dom method using vuerouter simple vif expected js heap memories nt increase destroying vue components actually happening js heap memories increase creating new vue components contributed topic vue official forum could nt obtain valid answer please let question vnodes listeners remain dom destroyed js heap memories increase information please access link posted sorry double contribution please reply know anything", "num": "5839", "d": "6/2017"}, {"title": "typeerror read property key undefined", "body": "version reproduction link steps reproduce click init click update times click add gt see error console expected update ui correctly actually happening typeerror read property key undefined samevnode unpkgcomvue updatechildren unpkgcomvue patchvnode unpkgcomvue updatechildren unpkgcomvue patchvnode unpkgcomvue updatechildren unpkgcomvue patchvnode unpkgcomvue vue patch unpkgcomvue vue unpkgcomvue vue unpkgcomvue", "num": "5838", "d": "6/2017"}, {"title": "provided props injected functional components", "body": "version reproduction link steps reproduce created minimal reproduction behavior trying test example needs jsx work expected properties passed parent show actually happening exists remains empty properties passed functional component context", "num": "5837", "d": "6/2017"}, {"title": "module found error ca nt resolve vueroter windows", "body": "version reproduction link steps reproduce got module found error windows nt happens centos steps init fresh webpacksimple project running ok npm install save vuerouter add import import vueroter vueroter mainjs gives error module found error ca nt resolve vueroter expected run smoothly actually happening error module found node", "num": "5836", "d": "6/2017"}, {"title": "new prop shorthand", "body": "problem feature solve passing props component following pattern common proposing prop name variable name passed following concise syntax applicable would mimic object property declaring shorthands like proposed api look like instead", "num": "5835", "d": "6/2017"}, {"title": "customizing vmodel prop working", "body": "version reproduction link steps reproduce create component customized configuration use component use prop component expected child component display value actually happening error thrown found suppose something wrong read docs figure nt working", "num": "5834", "d": "6/2017"}, {"title": "scopedslotsdefault function", "body": "typeerror scopedslotsdefault function", "num": "5833", "d": "6/2017"}, {"title": "extend debug mode help find subtle errors development", "body": "problem feature solve help developers get stuck hard catch non apparent bugs would neat debug mode could check data properties name method avoid confusing xxx method object loose reactivity property ie non gettersetter property managed objects appear probably helpers added well proposed api look like already api turn debug mode", "num": "5832", "d": "6/2017"}, {"title": "trouble put code android webview", "body": "npm run build send dist folder android programmer load indexhtml webview nothing dom load test app anyone experience", "num": "5831", "d": "6/2017"}, {"title": "inlinetemplate fails display without intermediate container", "body": "version reproduction link steps reproduce add content child component markup without surrounding intermediate container div html expected everything template render unacceptable error console message actually happening template simply render failing silently leaving developer little clue debug somewhere bug report feature request tripped us couple times wasted bunch debugging time know inlinetemplate preferred practice retrofitting vue legacy application works quite well", "num": "5830", "d": "6/2017"}, {"title": "event listeners still intact destroying blur", "body": "version reproduction link steps reproduce create vue component event listener focus element listener destroy vue component click away blur element see method get called expected event listener called minimal example expect vm listeners get garbage collected call expect explicit remove listeners fires stop calls ca nt focus blur expect kick things garbage collection mode nt seem affect result correct way clean listeners vue component destroying actually happening event listener gets called ran writing jasmine tests vue component focusing input jasmine hook another unrelated test something else focused causing blur npe thrown related issues", "num": "5829", "d": "6/2017"}, {"title": "\u65e0\u6cd5\u5728\u8868\u5355\u4e2d\u8f93\u5165\u5b57\u7b26", "body": "version reproduction link steps reproduce \u5f53\u67d0\u4e9b\u6570\u636e\u66f4\u65b0\u5f88\u5feb expected \u6b63\u5e38\u7684\u8f93\u5165\u5b57\u7b26 actually happening \u8868\u5355\u65e0\u6cd5\u8f93\u5165\u5b57\u7b26", "num": "5826", "d": "6/2017"}, {"title": "checkbox rendered render function ca nt work correctly", "body": "version reproduction link steps reproduce click button toggle checked status well change checkbox manually click button nt work checkbox ca nt reflect change checked expected checkbox reflect change data vm actually happening checkbox ca nt reflect change checked", "num": "5825", "d": "6/2017"}, {"title": "checkbox rendered render function ca nt work correctly", "body": "use render function render checkbox firstly click button toggle checked status well change checkbox manually click button nothing works checkbox ca nt reflect change checkedhere demo", "num": "5824", "d": "6/2017"}, {"title": "keepalivecomponent allow create multiple instance needed", "body": "problem feature solve googled problem found someone problem pages b b means jump b fine one page occurs multiple time single stack like b failed trying keep first b alive back use around first second share one component recreate first click back button things get worse without using recreate every page stack examples ordervue gt payvue gt successvue gt ordervue shoplistvue shopvue shop gt hotshopsvue gt shopvue shop proposed api look like ready yet thinking design api may someone else better idea", "num": "5823", "d": "6/2017"}, {"title": "phone bind keyup event input keyboard bounces", "body": "", "num": "5822", "d": "6/2017"}, {"title": "vue plugin component instance null", "body": "version reproduction link steps reproduce install following plugin calling newly added myaddedmethod vue componentinstance log instance reference console expected reference vue componentinstance actually happening instead null writting plugin needs add method instances method utilizes reference instance followed docs missing something thanks forward", "num": "5821", "d": "6/2017"}, {"title": "vue plugin component instance null", "body": "trying write vue plugin adds method component instances following docs wrote following problem refer component instance return missing something", "num": "5820", "d": "6/2017"}, {"title": "\u7528vue\u5f00\u53d1chrome app", "body": "version reproduction link chromeextention sdlfkjsdsdfdsfdsdf steps reproduce \u53ea\u80fd\u5728chrome app\u6253\u5305\u4e86\u672c\u5730\u8c03\u8bd5\u5462 expected debug\u67e5\u770bchrome\u5bf9\u8c61 actually happening \u76f4\u63a5\u6574\u4e2a\u5e94\u7528\u5d29\u6e83\u4e86", "num": "5819", "d": "6/2017"}, {"title": "provide method convert vdom stored variable html string dom", "body": "problem feature solve want create chatroom application chat window might potentially run many hours display messages feasible display messages vfor directive vdom huge application become slow instead would like use message template render function render incoming message html string ordinary dom object simply append plain js static content message log keep chatroom application snappy responsive almost forever generate renderer function using vuecompile msgtemplate calling renderer function binding component gives vdom js object html use would need transform js object ordinary html would nt futureproof maybe future versions vuejs structure vdom js object change plugin stop working need vuejs library transformation thank proposed api look like var res vuecompile msgtemplate var vdom resrendererbind var htmlstring vuetohtml vdom", "num": "5815", "d": "6/2017"}, {"title": "watchers handle arrays expected", "body": "version reproduction link steps reproduce reproduce steps please following click add cart button next items catalog review total items values expected expectation original value watched would value prior item added cart example expectation values items section match values total section actually happening original value array latest value seem correct working developer training course named vuejs getting started stumbled issue creating content course time updating course content work around issue however thought reported nt see anything similar listed github", "num": "5814", "d": "6/2017"}, {"title": "vue js dynamically loaded component name ajax", "body": "new vuejs want load component ajax response json response want draw dynamically components using json data", "num": "5812", "d": "6/2017"}, {"title": "boolean attributes nodes explicitly extracted props booleans functional components", "body": "version reproduction link steps reproduce set boolean attribute functional component expected actually happening empty string seems correct sure easily doable side might worth considering bug arrived situation messing around css js options expecting something like markup like also curious default units numbers certain properties passed react default units guess certain properties another issue", "num": "5811", "d": "6/2017"}, {"title": "help needed realworldio sample project", "body": "problem feature solve hello vue community searched issues could nt find anything related hope duplicate recently realworldio collecting real world example blogging app written different frameworks already projects react angular elm etc would nice vue community helped make vue example please take look proposed api look like full example creating blog using vuejs based spec realworldio", "num": "5810", "d": "6/2017"}, {"title": "scopedslots undefined", "body": "version reproduction link steps reproduce update dom empty used scopedslots scopedslots undefined attribute remove attribute scope props slot ok reset back every thing ok expected scopedslots executable actually happening scopedslots empty becase used runtimeesm version ca nt test online", "num": "5807", "d": "6/2017"}, {"title": "nodejs server side templating incompatible vuejs templating", "body": "version reproduction link steps reproduce hi using code avoid templating issues server side templating client side templating wanted perform using vuejs var myapp angularmodule scotch userrolectrl selectasynccontroller mystackedctrl contactchipdemoctrl mainapp appctrl switchbase fabctrl examplectrl slidenav function interpolateprovider interpolateproviderstartsymbol interpolateproviderendsymbol expected sort interpolateprovider lib tells vuejs use instead actually happening excatly issue hence nothing happening reproduction part required since rather issue incompatibility issue rendering client side also reference", "num": "5806", "d": "6/2017"}, {"title": "contenteditable receiving duplicate values", "body": "version reproduction link steps reproduce type something box click outside area blur watch appear double expected editable div keeps typed actually happening editable div adds typed assumedly part virtual dom update showing twice hunch issue virtual dom patches starts empty value change starting value demo actual value like issue nt happen related let know prefer keep conversation close issue", "num": "5805", "d": "6/2017"}, {"title": "use object vfor key clear input value", "body": "version reproduction link steps reproduce type person id input fields click button times expected every person id stay input fields actually happening person id cleared array starts items reproduce bug", "num": "5804", "d": "6/2017"}, {"title": "vue\u5b9e\u4f8b\u91cc\u7684data\u4e2d\u4e0b\u5212\u7ebf\u5f0f\u547d\u540d\u5c5e\u6027\u65e0\u6cd5\u6b63\u786e\u7ed1\u5b9a\u5230\u6a21\u677f", "body": "vue \u5b9e\u4f8b\u4e2ddata \u5982\u679c\u6709\u4e00\u4e2a\u5c5e\u6027\u662f\u4e0b\u5212\u7ebf\u5f00\u5934\u7684 \u6bd4\u5982\u4e0b\u9762\u4ee3\u7801 \u8fd9\u6837test\u5bf9\u8c61\u7684\u6539\u53d8\u65e0\u6cd5\u5b9e\u65f6\u53cd\u5e94\u5230\u6a21\u677f\u4e2d", "num": "5803", "d": "6/2017"}, {"title": "vue", "body": "", "num": "5802", "d": "6/2017"}, {"title": "render function nested children stops first level", "body": "version reproduction link steps reproduce create levels deep components structure using createelement within render function expected children hierarchy rendered actually happening rendering stops first hierarchy level subsequent children ignored design", "num": "5801", "d": "6/2017"}, {"title": "transition group classes properly deleted using vshow", "body": "version reproduction link steps reproduce set transition group automatically rotates list items shows one item time slider expected last item disappears new item appears specified intervals actually happening everything seems running perfectly fine leave window minute go new tab another window come back transition group becomes mess transition classes get added without removed items would get something like", "num": "5800", "d": "6/2017"}, {"title": "oneway data flow might broken", "body": "version reproduction link steps reproduce pass object regular string int property prop child component mutate properties object inside child component mutations also occur parent component check fiddle expected properties inside form object get mutated parent component get mutated child component oneway data flow actually happening contents inside parent object get mutated issue may intentional hope like twoway flexibility apologies reporting", "num": "5799", "d": "6/2017"}, {"title": "clarity docs vue following semver strictly", "body": "version reproduction link steps reproduce search docs versioning semver backward compatibility relevant answer given expected statement specify vue strictly semver actually happening info returned searching search box looking issues github seems might could nt find specific statement docs vue strictly semver therefore offer full backward compatibility missed stated anywhere", "num": "5798", "d": "6/2017"}, {"title": "unexpected data value resetting data binded change", "body": "version reproduction link steps reproduce select select selecting see second select showing click reset button gt second select nt thistest expected second select nt appear resetting button actually happening second select still dom undefined value", "num": "5797", "d": "6/2017"}, {"body": "would inconsistent removed would different number children different positions render please provide reproduction filing issues like difficult understand context furthermore sure need go deep dom api could use api many features", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow", "d": "6/2017"}, {"body": "think constantness variable would best conveyed defining data uppercase instead expanding api performance optimizations would allow realized using reactive getset", "d": "6/2017"}, {"body": "property define instance available template achieve desired result simple hook", "d": "6/2017"}, {"body": "would work imo still clear explicit way declaring uppercase could used coding style allows", "d": "6/2017"}, {"body": "proposed syntax shorter showed generally nt need nonreactive data template often think bit cleanness justifies new api try keep api slim possible new api need benefit beyond cosmetics imho", "d": "6/2017"}, {"body": "hm reasoning quote think better explicitly define data strcuture code component selfexplanatory feature clearly based reasoning need benefit beyond cosmetics think feature would useful addition api use right created simple plugin named vueconstants", "d": "6/2017"}, {"body": "also using create disadvantage already use constantdeclarations buried code go concept explicitly define data structures wrong way also write example object someoptions created every instance component memory cheap today still means wasting resources course pull declaring module local constant requires even code still think vue make live easier requiring unnecessary boilerplate code nt find optimal", "d": "6/2017"}, {"body": "thanks creating plugin nt want bloat api add code size vue features already achieved unless benefits worth cost pass also demonstrated achieved user land anyone wants syntax quite subjective personally even keep constants component different file js import foo constant export default created use foo need constants need add components way keep one place well use javascript", "d": "6/2017"}, {"body": "hm reasoning quote think better explicitly define data strcuture code component selfexplanatory feature clearly based reasoning need benefit beyond cosmetics still seem misunderstanding argument argued data used template initialized compoent never template current issue arguing component vs template arguing introducing new api component two different arguments wo nt mix think feature would useful addition api use right created simple plugin named vueconstants nt doubt useful well people surely fully respect however maintainers judge wether useful enough sufficiently large percentage users justify introduction codebase doubt judging personal experience kind questions answer day day forum discord places team members might agree issue still open discussion giving opinon also using create disadvantage already use constantdeclarations buried code go concept explicitly define data structures wrong way agree certain degree doubting use case constants prevalent enough warrant new api argument useful sufficiently useful compared solutions possible current api justify adding another api documented explained tested argued blog post use simple rules could possibly require breaking change future versions every new api introcuces bit technical debt adding one good use case case yes introducing constants created clean simply doubt required often enough justify new api argue accept tradeoff using instances required people rather want api use plugin publish plugins posva right declaring outside component prevent reinialization would reactive share across compoents specifically talking using data templates nt reactive would exist instance properties form", "d": "6/2017"}, {"body": "posva right declaring outside component prevent reinialization would reactive share across compoents specifically talking using data templates nt reactive would exist instance properties form imo nt need exist really want use thing use computed property well think also agree enough add code new api vue", "d": "6/2017"}, {"body": "discussion makes clear would fit better apis would promote standard way things instead people use data computed properties code created etc constant data important part every codebase still think vue support instead promoting various less readable idioms", "d": "6/2017"}, {"body": "personal opinion people think complicating things real benefit write javascript reality must really careful incrementing size vue new features adding property subjective choice possible userland plugin prefer leave way thanks suggestion thought", "d": "6/2017"}, {"body": "could move issue vuejsvuejsorg repository thanks", "d": "6/2017"}, {"body": "simple copy paste fine", "d": "6/2017"}, {"body": "sure", "d": "6/2017"}, {"body": "done", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "makes think caused vue fri jun pm wangbagang notifications githubcom wrote receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "props readonly modify instead emit event update vue props readonly use ps suggest primitive props string bool number", "d": "6/2017"}, {"body": "ah ok understand get second point vuejs way handling html form component easiest way reason pass object prop form input work property object obviously causing sort issues", "d": "6/2017"}, {"body": "read input components guess looking", "d": "6/2017"}, {"body": "replace method", "d": "6/2017"}, {"body": "yes issue jsfiddle nt know code uses though nt work safari working jsfiddle trouble trivial examples versus real code still defect", "d": "6/2017"}, {"body": "intentional filters pure functions dependent context need use computed property method eg", "d": "6/2017"}, {"body": "\u6d89\u53ca\u5177\u4f53\u5e93\u7684\u95ee\u9898\u8bf7\u4e0d\u8981\u968f\u4fbf\u6765\u8fd9\u91cc\u5f00", "d": "6/2017"}, {"body": "need component use constructor position rerenders vue reuse existing instance", "d": "6/2017"}, {"body": "ops forgot sorry", "d": "6/2017"}, {"body": "see", "d": "6/2017"}, {"body": "seems dom attribute element one blamed case needs deeper investigation", "d": "6/2017"}, {"body": "wait passing vnode prop component assignment would make whole vnode object reactive something like jsx hellovue childvue slotsdefault", "d": "6/2017"}, {"body": "jkzing thank reply mean different passing vnode props slots try tomorrow thank suggestion fine different vs simple", "d": "6/2017"}, {"body": "jkzing said use slots close still feel bug feel free open", "d": "6/2017"}, {"body": "chairuosen sure could say making vnode object reactively behavior would expectable", "d": "6/2017"}, {"body": "znck know solution avoid bug nt know reason nt know works fine also think usage code nt weird often pass vnode props react still think bug reopen button page lol could please reopen issue thank", "d": "6/2017"}, {"body": "chairuosen actually passing vnode prop made happen assigning property component working react simple react would make object reactive reflect changes", "d": "6/2017"}, {"body": "jkzing yeah guess blackbox view ca nt explain case", "d": "6/2017"}, {"body": "chairuosen case using reactive", "d": "6/2017"}, {"body": "jkzing using slot using slot vnode prop case case", "d": "6/2017"}, {"body": "observation nt know happening jsx attribute infinite look attributes hidden html causing rerender", "d": "6/2017"}, {"body": "fyi feature dropped time bug", "d": "6/2017"}, {"body": "problem lies first time element nt exist takes account additions data property reuses element ignoring everything add check vnode modify work vue prevent unnecessary renders nt think support rerendering pretty advanced stuff users wont adding layer observation slow everybody share team", "d": "6/2017"}, {"body": "big problem checks though probably would done something completely crazy nt mention sure use thanks sure keep open leave pleasure nothing comes", "d": "6/2017"}, {"body": "slot nodes reused child update parent update vdom diff two nodes identity considered skipped diffing means mutating vnodes passed parent really need make deep clone slot nodes child render function alternatively wrap slot nodes fresh vnodes created directly control dropdown using parent scope property parent template instead", "d": "6/2017"}, {"body": "hmm nt know components like think could use jsx spread props", "d": "6/2017"}, {"body": "us would great wrap inputs label styling ux purposes agree could drop jsx instead templates much easier everyone follow", "d": "6/2017"}, {"body": "austio unfortunately payback templates wait maybe could think way props vue templates", "d": "6/2017"}, {"body": "like feature personally seems break consistency vbind behavior like sometimes still need bind property root element use pair directives getter setter like inside component define anchor using vue", "d": "6/2017"}, {"body": "jkzing looks awesome looks like basic spread potential problems like would define", "d": "6/2017"}, {"body": "ca nt means keep modifiers like runtime part vuetemplatecompiler atm", "d": "6/2017"}, {"body": "nickmessing looks like basic spread thing talking bring something like spread template users von shortland nt means vbind", "d": "6/2017"}, {"body": "jkzing link description lot bindings", "d": "6/2017"}, {"body": "nickmessing um bindings another topic imo like event bubbling", "d": "6/2017"}, {"body": "jkzing whole concept afaik make properties go certain element component", "d": "6/2017"}, {"body": "nickmessing ca nt sure original proposal nt think event listener considered", "d": "6/2017"}, {"body": "jkzing probably considering common example gt different props want get yout inside custom component without ton code", "d": "6/2017"}, {"body": "personally use filter exclude props nt want apply way apply multiple props input indeed vexpose might useful wrapper components inputs specify html props cane reduced filteredprops might computed property", "d": "6/2017"}, {"body": "cristijora using problem solution excessive properties added html attributes would great could filter properties accepted component dynamic nt know props filter computed property although possible extract use", "d": "6/2017"}, {"body": "really feasible directive", "d": "6/2017"}, {"body": "posva nt think work directive per se part vue template engine something like spread internally event propagation", "d": "6/2017"}, {"body": "posva userbuilt directive nt think might using wrong language mean special attribute", "d": "6/2017"}, {"body": "chrisvfritz thoughts api would used specifying expose add child could see similar use provideinject concept", "d": "6/2017"}, {"body": "austio might understanding question provide thoughts api original post", "d": "6/2017"}, {"body": "hey chris meant additional thoughts using similar provide inject declare exposable parent using child", "d": "6/2017"}, {"body": "ah see sure need information already passed via props slots even private properties parent accessed though think best avoid pattern austio particular use case thinking", "d": "6/2017"}, {"body": "chrisvfritz would work render functions think maybe would better provide option disable autoinheritance attributes root node expose attributes example naming tbd use vbind add wherever like much like already showed would added benefit working practically identical jsxrender functions", "d": "6/2017"}, {"body": "linusborg like way think way much intuitive sidenote think api place next major version vue could even remove attribute autoinheritance altogether crosscomponent communication could remain explicit sides", "d": "6/2017"}, {"body": "would possible depreciate remove behaviour yes worth possibly required changes many components libs etc decided discussed community especially ui collection authors prob posed feature information already available functional components via feature would give basically identical functionality instance components", "d": "6/2017"}, {"body": "yes exactly main purpose mind make work simpler ui component authors internal currently lot cases something like necessary new property could shorten though suppose still nice way also exposing events maybe empty directive could forward event listeners parent element end multiple concerns want bundle might back something like turned broader discussion simplify building ui components rather specific feature request relabel issue", "d": "6/2017"}, {"body": "late topic thoughts well current solution amp disadvantages first already use love feature powerful example bootstrapvue internal link component gets used everywhere buttons navs dropdown lists etc component pivots becoming native anchor vs router link based vs amp presence quite lot properties conditionally pass components solution put props mixin use computed object works great still lot overhead adding mixin components using link component possibilities using personally like concept maybe could work like default slot named slots use modifiers access named attribute slots default attribute slot would always pass attributes component change named targets could specified component perhaps something like inside event proxying nt lot add except amazingly powerful modifier solved lot problems seems largely unknown vue devs though see good amount ui lib issues get solved exposing devs feature placed pr website add docs search support site potentially optimized google search", "d": "6/2017"}, {"body": "coming argument api surface another issue must repeat fan idea introduces another way things work nt work jsx without also implementing something special etc one thing respect react folks commitment slim api using language features much possible spirit reusing pattern already props attributes seems much better introducing another abstraction", "d": "6/2017"}, {"body": "ahh see saying like currently available would addition instead", "d": "6/2017"}, {"body": "rereading comments tracking", "d": "6/2017"}, {"body": "yes would addition also would need option turn current default behaviour applying attributes root element like html export default applycomponentattrstoroot false defaults true name tbd obviously data options stuff could become default setting vue decide resulting breaking change", "d": "6/2017"}, {"body": "linusborg thoughts dealing events side things follow strategy supposed could also add property might look like perhaps could accept object similar one issue foresee events since works slightly differently components elements also nt know want suppose available modifier might obsolete", "d": "6/2017"}, {"body": "also regarding option perhaps would good name set could disable automatically applied attributes event forwarding might also nice able disable entire application via well single component", "d": "6/2017"}, {"body": "recently similar idea also avaliable functional components via would end sounds fine also asking object syntax like used would fit right unsure native modifier make work component events native listeners api would end much complicated use questionable since native event listener applied root element would still catch desired event bubbling might mnot necessary assign specific element template", "d": "6/2017"}, {"body": "reproduction link obviously reproducing anything ssr jsfiddle", "d": "6/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "6/2017"}, {"body": "created branch repo reproduction code steps reproduce production mode open compare server browser consoles reproduction code component", "d": "6/2017"}, {"body": "sorry nt notice repo link also attached issue thought code services like jsfiddle permitted", "d": "6/2017"}, {"body": "reactivity ssr", "d": "6/2017"}, {"body": "expected behaviour want better control code executed key filtering inside event callback keep one single handler", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow could add property array elements use bind rows", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hmm sounds like good idea naming really intuitive think", "d": "6/2017"}, {"body": "tried poc works opened pr think need discuss naming anyway", "d": "6/2017"}, {"body": "like well think useful feature", "d": "6/2017"}, {"body": "also agree simple valid use cases", "d": "6/2017"}, {"body": "ah request exact thing almost exact reason would like add extended mouse clicks clickleftnone clicknone", "d": "6/2017"}, {"body": "truefusion expected behaviour mouse clicks", "d": "6/2017"}, {"body": "nickmessing click event plain event modifier trigger key modifier held would leave default click event available complex cases would conflict left middle right combined", "d": "6/2017"}, {"body": "truefusion actually way implemented already solves", "d": "6/2017"}, {"body": "hi cloned repository wrapping code statement incur memory error probably means nothing wrong library code note memory consumption snapshot fairly low work load server code reasonable reclaim memory provide information", "d": "6/2017"}, {"body": "tried use interval ms run server memory used increasing way small number happened production enviroment request almost per day fortuneately found reason made computed function correctly wonder happend way thanks help", "d": "6/2017"}, {"body": "please update code illustrate problem", "d": "6/2017"}, {"body": "alreay updated", "d": "6/2017"}, {"body": "ok reproduced commenting throw new error keep memory low", "d": "6/2017"}, {"body": "reproducible browser js var timer setinterval function const vm new vue computed test function throw erro happened try vmtest catch e", "d": "6/2017"}, {"body": "mon jun pm xltxlm notifications githubcom wrote problem feature solve proposed api look like vuewatch receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "value treated default already want", "d": "6/2017"}, {"body": "oh nvm yeah validations place honestly though nt think change current behavior value provides somewhat subjective introducing api churn", "d": "6/2017"}, {"body": "saying change default somehow nt think like stated understand somewhat subjective reasons mentioned think look common use cases consider changing default opened issue since noticed pattern repeat practically vue projects quite varying vast vast majority elements write using modes rare exceptions subjectivity also reason like see default configurable would love others pitch issue kept open nt really understand api churn point", "d": "6/2017"}, {"body": "changing default breaking change breaking change subjective reasons nogo fyi create higherorder transition component", "d": "6/2017"}, {"body": "proposing configuration parameter setting default projecttoproject basis exactly reason guess provide set wrapper components guys easily avoid common mistakes future gets us around actually deal mode parameter altogether", "d": "6/2017"}, {"body": "nt think default worth adding config option though hoc solution looks nice imo", "d": "6/2017"}, {"body": "use hook", "d": "6/2017"}, {"body": "jounqin thanks lot", "d": "6/2017"}, {"body": "maybe use vuerouter use pathtoregexp route matching", "d": "6/2017"}, {"body": "thanks lot try still ca nt void string enough", "d": "6/2017"}, {"body": "\u8fd9\u79cd\u505a\u6cd5\u5b9e\u9645\u4e0a\u662f\u8ba9\u5185\u90e8\u7684value\u770b\u8d77\u6765\u50cf\u662f\u53cc\u5411\u7ed1\u5b9a\u7684 understand description please explain", "d": "6/2017"}, {"body": "\u53ef\u80fd modifier", "d": "6/2017"}, {"body": "sure understand problem usually one way binding value listen changes coming eg event checkbox change value gets updated parent inner values consider computed setters", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests stated contributing guidelines thanks", "d": "6/2017"}, {"body": "fyi skip limitation functional components", "d": "6/2017"}, {"body": "something consider improving already roadmap however nt definitive date land", "d": "6/2017"}, {"body": "works syntactic sugar example essentially clearly wo nt work", "d": "6/2017"}, {"body": "seems intended found code background reason", "d": "6/2017"}, {"body": "kingwl jkzing see", "d": "6/2017"}, {"body": "gebilaoxiong found wrong commit delete", "d": "6/2017"}, {"body": "found docs well maybe make clear component section", "d": "6/2017"}, {"body": "welcome submit pr vue docs repo", "d": "6/2017"}, {"body": "asking window document need use vue lifecycle hook case mounted want", "d": "6/2017"}, {"body": "jkzing thank replying check method provided", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow issue jkzing said", "d": "6/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "6/2017"}, {"body": "desever \u611f\u89c9\u662f nodejs \u7684\u4e00\u4e2a bug nodejs webpack \u76f8\u5173\u7684", "d": "6/2017"}, {"body": "hello malinasab thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "thanks reporting open issue vueloader repository well feature would require work repositories like idea semver number", "d": "6/2017"}, {"body": "imagine also want make clear interfacing dom directly nogo however well goes development", "d": "6/2017"}, {"body": "use full build vue includes compiler build used services like jsfiddle codepen generates actual errors describe", "d": "6/2017"}, {"body": "hi chooin thanks reporting issue however valid runnable reproduction please provide one", "d": "6/2017"}, {"body": "linusborg webkitkeyframes hash empty", "d": "6/2017"}, {"body": "chooin provide github repo reproduce situation \u4f60\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2agithub", "d": "6/2017"}, {"body": "tested vueloader chooin said prefixed version nt scoped style non prefixed closing related vueloader postcss btw unless supporting safari nt need prefix keyframes", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "thanks suggestion nt pass object items props", "d": "6/2017"}, {"body": "really pass object prop like indexvue data return pageinfo totalpage currentpage onpageclick function currentpage pagesize evt consolelog currentpage pagesize evt hope pageinfo ca nt merge default valuebut get component", "d": "6/2017"}, {"body": "ha wanted expression jsx like", "d": "6/2017"}, {"body": "use directly another option situation", "d": "6/2017"}, {"body": "apart fact probably would require breaking change think would make props definition api unnecessarily complicated use computed property", "d": "6/2017"}, {"body": "jkzing linusborg said cn solve problems need type check better pass one one use jsx feature cause good enough effect cost achieving relatively large", "d": "6/2017"}, {"body": "many thanks", "d": "6/2017"}, {"body": "getter", "d": "6/2017"}, {"body": "jounqin thank giving information dispelled doubt changed code got ok kind code confusing debugging maintaining would know ssrcontext ready use even code safe source code optimized like", "d": "6/2017"}, {"body": "happens root component nt easy fix", "d": "6/2017"}, {"body": "use inline plain javascript otherwise", "d": "6/2017"}, {"body": "nickmessing registered filter vuefilter nt want repeat new vue", "d": "6/2017"}, {"body": "according docs vue filters used inside mustache interpolations vbind expressions latter supported since filters primarily designed text transformation purposes complex data transforms directives use computed properties instead considering want pass aditional arguments think filters good way go prefer html import mycoolfilter filtersjs export default computed dosomething mycomputed return mycoolfilter thisdosomething b filters pretty bad design decision imo anywhere simple text processing like", "d": "6/2017"}, {"body": "access filters component like could write", "d": "6/2017"}, {"body": "nirazul thanks", "d": "6/2017"}, {"body": "nirazul filters directives intentionally removed vue intense discussions sorry say wo nt bring back situation nt changed", "d": "6/2017"}, {"body": "linusborg ok think meant leupom", "d": "6/2017"}, {"body": "oh right thanks", "d": "6/2017"}, {"body": "alexandretperez expected behaviour vue built virtualdom vue source truth never mutate dom generated vue manually gets overwritten next vue tick", "d": "6/2017"}, {"body": "nickmessing said", "d": "6/2017"}, {"body": "nt think really needed though", "d": "6/2017"}, {"body": "notice example quite right template instead concerning example works developer must always think edge cases receiving object array remember deal unification would let api easier use cases array object would syntax", "d": "6/2017"}, {"body": "useful use indexes objects", "d": "6/2017"}, {"body": "think become little confused using collection value selectec collection array value one want access key object index array one use right unified syntax would inded one use iterate use template collection array variable empty point index object array index beeing populate object syntax make reusable one receive either object array array case value one need remenber index empty arrays empty objects", "d": "6/2017"}, {"body": "unified syntax would inded yes one use value key index iterate use index template collection array index variable empty question happen would rely index object loop really make sense use thought", "d": "6/2017"}, {"body": "syntax exists objects usefull point usefullnes consistence api bugs could arise one forgets index empty try use", "d": "6/2017"}, {"body": "value key index syntax exists objects usefull well wonder well third argument original collection", "d": "6/2017"}, {"body": "case think deprecated future version breaking changes added", "d": "6/2017"}, {"body": "present intentionally removed couples logic component hierarchy think arbitrary comp comp communication either user vuex use global event emitter bus creating empty instance docs manually bubbling events possible encourage people use one solutions mentioned instead", "d": "6/2017"}, {"body": "react using render functions regardless fully implementable userland nt need part core", "d": "6/2017"}, {"body": "thanks", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "lose arguments passed get one", "d": "6/2017"}, {"body": "use", "d": "6/2017"}, {"body": "regardless question closing favor forum discussion", "d": "6/2017"}, {"body": "array things passed see according docs instead see", "d": "6/2017"}, {"body": "nt know certainly works js vuecomponent examp template lt input input emit ex event hi gt new vue el app data methods handle event args consolelog event args ouput event istrusted true type input target input currenttarget input eventphase hi", "d": "6/2017"}, {"body": "intentional think better explicitly define data strcuture code component selfexplanatory data mutation preferably happen component code template vmodel create reactive properties dynamially would work vue actually proposed removed reason", "d": "6/2017"}, {"body": "understand intention also creates lots boilerplatecode forms used create data easy run stange behaviour backend sends undefined data removed jsonstringify leads loss reactivity also components create arrayforms forms adddeletebuttons create multiple rows data always require providing datainitializationcode often unnecessary undefined standard value maybe providung least option like using set modifier would give developer choice use", "d": "6/2017"}, {"body": "also bit inconsistent reactivify creation wanted providing vueset wrong exists use vmodel vue really wants enforce silently losing reactivity nt good thing imo case vmodel create code checks existence key first raises error key nt exits", "d": "6/2017"}, {"body": "also bit inconsistent reactivify creation wanted providing vueset wrong situations necessary necessary use behaviour plainly visible code instead abstracted away hidden template utility function providing different integrating hood one mostused features framework former enables users create reactive properties fact really latter accepts behaviour norm hides away want support patterns lead readable maintainable code even means bit boilerplate situations adding proposed behaviour would contribute goal opinion", "d": "6/2017"}, {"body": "least check vmodel nonexisting keys moment often leads invisible loss reactivity point field nt created happen quite easily setting value undefined try evaluate see problem use vue edit data provided rest service uses jsonstringify", "d": "6/2017"}, {"body": "also documentation updated instead due limitations modern javascript abandonment objectobserve vue detect property addition deletion since vue performs gettersetter conversion process instance initialization property must present data object order vue convert make reactive paragraph explaining limitations modern javascript fact intended behaviour", "d": "6/2017"}, {"body": "agree warning would helpful look something equally helpful however concerning example rest api leaves properties like describe elaves props nt bad api design book client api lib take care data normalized job ui add back propertiesdata missing datamodel taken care central place", "d": "6/2017"}, {"body": "writeback course normalized backend still necessary backend needs validation ca nt trust data gets frontend also sometimes useful distinguish null undefined values works vue use code like value undefined jsonstringify omits fields undefined values fact easy way initialize fields undefined receiving backend requires lot boilerplate code", "d": "6/2017"}, {"body": "also sometimes useful distinguish null undefined values agreed somethimes times initialize fields undefined receiving backend requires lot boilerplate code really generally oneliner lot boilerplate would deal objects lot kinds properties", "d": "6/2017"}, {"body": "also nt see frontendcode crucial datamodeling backend writing letting template define fields value via vmodel would less boilerplatey write posting value backend real datamodels live validation anyway nt see necessity vue forcing jumping hoop", "d": "6/2017"}, {"body": "even oneliners become lots boilerplate necessary lots places also dry", "d": "6/2017"}, {"body": "also documentation updated instead due limitations modern javascript abandonment objectobserve vue detect property addition deletion since vue performs gettersetter conversion process instance initialization property must present data object order vue convert make reactive paragraph explaining limitations modern javascript fact intended behaviour mxining two different things pararaph vmodel addition aproperty normal javascript means limitation technically ca nt detect new poperty created matter done developer ca nt make reactive exists choice nt use implementation independent fact detect properties added without make reactive automatically", "d": "6/2017"}, {"body": "also nt see frontendcode crucial datamodeling backend nt see trivial unimportant nt hink either concerns validation integrity predictability always added props missing visiting form could add prop without user anything little clicking input leaving depending concrete implementation would choose would keep mind property could exist exist various places app depending wether user prevously openened form might added could make code amp data much brittle inconsistent compared code would normalize data receives api basically meant earlier better code data integrity cost bit boilerplate necessary", "d": "6/2017"}, {"body": "vmodel always added props missing visiting form could add prop without anything little clicking input nt see problem clearly stated code writing vmodel look declarative point view using vmodel would sufficient also dry couse may argue template output nt contain code changes data vmodel would wrong anyway also always use longform template allowing vue already goes beyond simple template shows things concept assume concept vue pragmatism enforcing certain paradigms otherwise templates models much decoupled reactflux example also problem vmodel simply inherited behaviour described js limitation quoted paragraph docs also applies vmodel vue would detect field addition watched objects vmodel would also create new fields fact already nt makes reactive", "d": "6/2017"}, {"body": "bites times vote least generate warning case encounters case introduce boilerplate form content dynamic eg multiple instances created button example html inputs add new item often happened added new input template forgot add key method least warning would nice property better practice particular use case", "d": "6/2017"}, {"body": "forms like follow structure wherein define js empty set fields like want form allow multiple entries clone empty object still mildly inconvenient remember add field emptyfields object add corresponding input element form least documented code well creating variable called emptyfields conceivably contain form fields empty state linusborg points actually helps write better code however still agree least development warning emitted attempting assign nonreactive property", "d": "6/2017"}, {"body": "still think framework nt dictate code style much let developers decide least submitting warning would improvement otoh least prototyping using vueset would real timesaver would still prefer least ability use global option use example vmodelset activate behavior", "d": "6/2017"}, {"body": "data validation needs done backend malicious user could always post arbitrary data forcing developer specify data structures backend frontend unnecessary dry leads boilerplate useful frontendonly structures general forms frontend displays data posts back typical crud operations moment vue makes unnecessarily cumbersome also prefer use undefined value unspecified values nt work vue json omits fields undefined values use null instead problematic certain situations write code initializes data frontend receiving backend another example arraybased fields entry array creates new subform moment need solution like sirlancelot one instead seeing template specification data instead writing template also create maintain templateobject write createmethod bind method arrayeditcomponent bigger projects code adds without really making everything readable instead looking template see happening also check boilerplate conceptual point view vue template active bind mutations fact used place also js handles undefined fields similar fields value undefined many occasions nt think itt plausible draw quite arbitrary line allowing change datafields create", "d": "6/2017"}, {"body": "give one canvas prevent node reused", "d": "6/2017"}, {"body": "nice work add tip vue document", "d": "6/2017"}, {"body": "actually docs", "d": "6/2017"}, {"body": "welcome pr", "d": "6/2017"}, {"body": "would great could directly pr closing since issue chinese doc", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "see", "d": "6/2017"}, {"body": "bug want prevent navigation need click event sample vue compiles template see still properly adds", "d": "6/2017"}, {"body": "thanks sirlancelot", "d": "6/2017"}, {"body": "expected behaviour objects arrays passed reference explained documentation", "d": "6/2017"}, {"body": "sorry", "d": "6/2017"}, {"body": "problem hard feelings better one issue much one tend keep messages short save time", "d": "6/2017"}, {"body": "lot digging seems type command nt trigger input change events eventually realised sendkeys way go sure worked hypothesis probably dynamic compilation templates render functions", "d": "6/2017"}, {"body": "dup", "d": "6/2017"}, {"body": "posva although issue similar difference proposed api one significant issue reopened", "d": "6/2017"}, {"body": "see api different examples one using native events using custom events object syntax miss something keep one issue opened though feel free share thoughts issue", "d": "6/2017"}, {"body": "understanding correctly trying use modifier means want bind property component defined omit far know modifier designed bind property dom instance suppose current behavior correct", "d": "6/2017"}, {"body": "ok perhaps luck worked nt expect work would worth note docs saying using prop modifier binding incompatible components thanks david", "d": "6/2017"}, {"body": "jkzing said modifier meant bind dom properties documented would like know made think would work first place blog post advocating use incorrectly docs modifier page sent", "d": "6/2017"}, {"body": "read docs one thing nt clear target object set property using prop component component nt clear answer decided try found properties set component would seem set component perhaps something like go docs clear future people like bind dom property instead attribute tag component component el target object property set", "d": "6/2017"}, {"body": "sure pr docs welcome tue jun david hewitt notifications githubcom wrote read prop docs one thing nt clear target object set property using prop component component vm component el nt clear answer decided try found properties set component vm would seem set component vm el perhaps something like go docs clear future people like prop bind dom property instead attribute tag component component el target object receive property receiving modified openclose state reply email directly view github mute thread", "d": "6/2017"}, {"body": "thanks see", "d": "6/2017"}, {"body": "well nt possible plain javascript well expected iframe content origin outer inner frame ca nt interact", "d": "6/2017"}, {"body": "linusborg see browser issue electron app issues way implement via vuejs directives", "d": "6/2017"}, {"body": "would rather suggest wrapping iframe small component need help join us forums forumvuejsorg gh issues meant", "d": "6/2017"}, {"body": "hi thanks report explain changes made relate memory leak would helpful", "d": "6/2017"}, {"body": "see commit history global mixin plugin global component plugin tricky part unable find related leak plus leak turn", "d": "6/2017"}, {"body": "global mixins lead memory leaks use externalizing vue mixin registration code called every render vue externalized mixin gets registered careful using also recommend using instead alternatively make plugin autoprevents duplicate registration", "d": "6/2017"}, {"body": "made plugin registering global mixin see autoprevent duplicate registration using", "d": "6/2017"}, {"body": "bug expected behaviour filter create new state change format expected behaviour everytime dependency changes virtualdom whole component rerendered diffed", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "sorry ca nt help without reproduction please try make one also stack trace nonminified build would help", "d": "6/2017"}, {"body": "close switched back rendertotext everything works", "d": "6/2017"}, {"body": "fyi found problem following element problem cause vue trying run class code comment think cause invalid servercachekey items got cache key arent cause show ribbon", "d": "6/2017"}, {"body": "browsers nt fire event use case better call function guess also create event trigger form", "d": "6/2017"}, {"body": "posva close mean work safari use vueit worked use jsdom change vuele name know create event onsubmit also check eventmonitoring safari ca nt trigger submit", "d": "6/2017"}, {"body": "wo nt work chrome safari closed related vue misunderstand something", "d": "6/2017"}, {"body": "lazyhero rely event invoking submit method reproduction \u5728 chrome \u4e0b\u62a5\u7684\u662f\u7f3a\u5c11 onsubmit", "d": "6/2017"}, {"body": "posva related vue sure think nt understand reproductionyou open let others try solve chinese \u5728chrome\u4e0b \u6253\u5f00\u63a7\u5236\u53f0 \u8bb0\u4f4f devtoolsconsole \u8fd9\u662f\u6b63\u5e38\u7684\u53cd\u9988 \u6ca1\u6709\u8fdb\u5165onsubmit\u662f\u56e0\u4e3a\u5728\u53d1\u9001post\u524d \u800c\u5728 safari\u4e0b \u662f\u6ca1\u6709\u4efb\u4f55\u53cd\u9988\u7684 posva\u7684\u610f\u601d \u4ed6\u7684\u610f\u601d\u662f \u53ef\u80fd\u662f safari \u53ef\u4ee5\u89c2\u5bdf\u5230 \u4f1a\u53d1\u73b0 \u6709\u8fd9\u4e2a \u6211\u7591\u60d1\u7684\u662f \u4e3a\u4ec0\u4e48\u5728vue\u6e32\u67d3\u4e0b", "d": "6/2017"}, {"body": "yes even tried thing removing vue code put fiddle shared", "d": "6/2017"}, {"body": "crossjs reproduction \u7f3a\u5c11submit\u5bf9\u5e94\u65b9\u6cd5 \u8fd9\u4e2a\u6211\u53bb\u6389\u4e86 \u4e4b\u524d\u7684\u91cd\u73b0\u4ee3\u7801\u5197\u4f59 \u65b9\u6cd5\u7684", "d": "6/2017"}, {"body": "submit submit", "d": "6/2017"}, {"body": "worries definitely confusing", "d": "6/2017"}, {"body": "crossjs \u8fd9\u4e2a\u94fe\u63a5 \u6ca1\u6709\u7528vue", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "crossjs \u662f\u554a \u4f60\u53ea\u8981\u52a0\u4e0a\u4e00\u53e5new vue el \u5305\u8d77\u6765", "d": "6/2017"}, {"body": "crossjs safari\u4e0b\u4f9d\u7136ok", "d": "6/2017"}, {"body": "lazyhero", "d": "6/2017"}, {"body": "crossjs \u591a\u8c22 \u6211\u4e5f\u4f1a\u7422\u78e8\u4e0b \u8f9b\u82e6", "d": "6/2017"}, {"body": "guarantee element already document use make sure", "d": "6/2017"}, {"body": "vuejs javascript", "d": "6/2017"}, {"body": "yurovant elaborate bit aware afaik coding styles nt matter parser", "d": "6/2017"}, {"body": "hi laraveldeep please consider answer", "d": "6/2017"}, {"body": "vanilla js demo proof", "d": "6/2017"}, {"body": "thanks gotcha learned hard way", "d": "6/2017"}, {"body": "may help also see", "d": "6/2017"}, {"body": "merged", "d": "6/2017"}, {"body": "hm indeed thanks reporting seems introduced nt think intended think regression original intended behaviour would agree", "d": "6/2017"}, {"body": "thanks reporting linusborg actual introduced seems regression fault", "d": "6/2017"}, {"body": "glad found pulling hair happening look updating childobjmsg component also updates someobjmsg parent tt", "d": "6/2017"}, {"body": "darival use warning child component attempts mutate injection binding props imo nt mutate injection react context", "d": "6/2017"}, {"body": "personally considered change feature bug", "d": "6/2017"}, {"body": "rayrutjes injected properties left unreactive pretty much reason op provided inject arbitrary objects inlcuding complicated ones background left untouched need reactivity pass already reactive object best worlds", "d": "6/2017"}, {"body": "linusborg injected array changed even really reactive", "d": "6/2017"}, {"body": "linusborg think makes sense wondering affect existing code base", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow", "d": "6/2017"}, {"body": "think bug", "d": "6/2017"}, {"body": "time open issue question think bug need include proper boiled repro", "d": "6/2017"}, {"body": "thanks ask vue forum", "d": "6/2017"}, {"body": "\u76f8\u5173\u89e3\u7b54\u8bf7\u67e5\u770b vuejs \u4e0d\u652f\u6301 vuejs \u4f7f\u7528\u4e86 \u4e0d\u80fd\u6a21\u62df\u7684 ecmascript vuejs \u652f\u6301\u6240\u6709\u517c\u5bb9 ecmascript", "d": "6/2017"}, {"body": "\u5728 notifications githubcom closed receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "always attempt hydrate root node attribute dev mode failed hydrate warning nothing happens worked prod mode assumes markup correct", "d": "6/2017"}, {"body": "sorry reopen answer nt address primary concern thanks responding though happens prod mode vue hydrate app become static point", "d": "6/2017"}, {"body": "bjunc ca nt happen prod mode strips away warnings behavior logic remains exactly works dev work prod", "d": "6/2017"}, {"body": "believe good business case ssr wysiwyg content big reason pursuing ssr seo currently getting valuable usergenerated content ca nt trust works dev want make sure content admin nt brick app saving improper html production despite checks might put place nt want go offtopic better way address seo aspect dynamic content maybe moot topic", "d": "6/2017"}, {"body": "allowing users save arbitrary html worry could potential xss use display usergenerated content vue wo nt attempt diffhydrate anything inside node ca nt lead hydration failures otherwise pure vdombased hydration possibly fail bug vue finally hydration failures prod also cause vue throw away existing dom render afresh wo nt brick app", "d": "6/2017"}, {"body": "well take proactive measures also want reactive measures arbitrary html feel better redundancy checks server client really great hear though think ultimately addresses concern also good hear refresh although would defeat point seo figured catching exception could help us pinpoint pages issues think good knowing nt part diffhydration process thanks backandforth", "d": "6/2017"}, {"body": "tried version looks like normal", "d": "6/2017"}, {"body": "thanks reporting beta may contain bugs assure vue work unstable releases may want open ticket side though", "d": "6/2017"}, {"body": "nt", "d": "6/2017"}, {"body": "special toplevel treatment attrs needs nested donnysim pointed", "d": "6/2017"}, {"body": "exact position two toggled trees reused instead recreated want force remount give different keys", "d": "6/2017"}, {"body": "behavior intentional syncing composition often leads awkward ux use case", "d": "6/2017"}, {"body": "example expect type search work like type text", "d": "6/2017"}, {"body": "use case asking want incomposition string show", "d": "6/2017"}, {"body": "nt want incomposition string show using type search want want like type text", "d": "6/2017"}, {"body": "search \u8f93\u5165\u6846\u4f5c\u4e3a text", "d": "6/2017"}, {"body": "ok get", "d": "6/2017"}, {"body": "use", "d": "6/2017"}, {"body": "vueconfigerrorhandler nt work already tested stated docs handle catches errors render runtime error occurs component render passed global vueconfigerrorhandler config function set", "d": "6/2017"}, {"body": "fyi error captured vue always sent", "d": "6/2017"}, {"body": "thanks made work jsfiddle order seems important able make work project using components heavily spa nt work error comes components update post could pinpoint issue", "d": "6/2017"}, {"body": "fyi support prop", "d": "6/2017"}, {"body": "thanks elevate featurerequest general expect consistent behavior dynamic components including able wrap multiple conditionally rendered elements declared explicitly", "d": "6/2017"}, {"body": "already however unlikely happen anytime soon due complexity involved", "d": "6/2017"}, {"body": "good know thanks", "d": "6/2017"}, {"body": "refs guarantee order see", "d": "6/2017"}, {"body": "ssr directives perform vnode data manipulations way access dom nodes dom ever created need modifying", "d": "6/2017"}, {"body": "\u8fd9\u4e2a feature request", "d": "6/2017"}, {"body": "vue bug webpack related question", "d": "6/2017"}, {"body": "dynamic require works suitably img src updated see img browser error dynamic require work say webpack related question thx", "d": "6/2017"}, {"body": "error happens happen vue nt error comes vue vue executing piece code", "d": "6/2017"}, {"body": "\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5b89\u88c5 vue", "d": "6/2017"}, {"body": "sorry \u5176\u5b9e\u6211\u73b0\u5728\u5c31\u662f\u76f4\u63a5\u5b89\u88c5 vue \u611f\u89c9\u4e00\u81f4\u597d\u4e9b \u8fd9\u91cc \u53ef\u4ee5\u63d0\u793a \u65b9\u6cd5 \u4e5f\u8bd5\u8fc7\u53ef\u4ee5\u4e86 vue \u7684 dts \u7531\u4e8e\u6309\u6a21\u5757\u8f93\u51fa\u7684 vue \u7c7b\u4f3c \u6211\u4f7f\u7528\u7684\u662f \u8fd9\u6837\u4e00\u4e2a \u7279\u6b8a \u671f\u5f85\u7684\u573a\u666f \u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u76f8\u5bf9\u8def\u5f84\u7684\u6587\u4ef6", "d": "6/2017"}, {"body": "types alias", "d": "6/2017"}, {"body": "nt think support arbitrary arraylike objects line actual object vs arraylike blurry stick case support array subclasses also since subclassing array feature likely implement reimplement reactivity system proxies", "d": "6/2017"}, {"body": "offtopic seen discussion nt want switch proxies reactivity creates new object instead editing initial one changed", "d": "6/2017"}, {"body": "sounds good thanks btw seems necessary qualify interpreting object array logging square brackets seems numerical function", "d": "6/2017"}, {"body": "alternative could use iterator protocol works way iterable structures array arraylikes", "d": "6/2017"}, {"body": "nickmessing difference still introduce breaking changes also browser compatibility constraints means", "d": "6/2017"}, {"body": "offtopic already plan maybe nice idea discussion issue possible breakingbrowser compatibility changes", "d": "6/2017"}, {"body": "nickmessing currently planned change reactivity system browser compatibility dropping ie evergreen browsers breaking changes would minimal terms observed object equality api remain", "d": "6/2017"}, {"body": "using seen people asking support old browsers gone available everywhere ps solves issue", "d": "6/2017"}, {"body": "nickmessing yup also supported", "d": "6/2017"}, {"body": "clarify nt believe subclassing array feature inherit style function collection arrayapply collectionprototype objectcreate arrayprototype objectassign collectionprototype methods", "d": "6/2017"}, {"body": "true subclassing see details supports something like", "d": "6/2017"}, {"body": "fiddle nt really reproducing issue give vague feedback designed case one direct child component toggled ca nt work inside work wrap entire unless toggling transition group instead importantly nt think good idea using state preservation like especially involved inherently working lists instead single toggled child recommend thinking another angle hoist ratings state shared state object vuex store unaffected components lifecycles", "d": "6/2017"}, {"body": "ran issue well authored fiddle keepalive documentation indicates wrap multiple elements conditionally rendered reasonable expect behavior would hold multiple children declared instead explicit list apologize fiddle incomplete fiddle simply wraps observe issue need inspect dom see elements staying around obviously way show working", "d": "6/2017"}, {"body": "difference render multiple elements renders one", "d": "6/2017"}, {"body": "posva thanks insight good distinction keep mind compa compb kept alive one rendered time based predicate perhaps documentation could improved clarify multiple conditional children supported rendered mutuallyexclusively note uncommon mutuallyexclusive rendering using well example conditionally rendering based currentindex granted would difficult vue know used mode usagesyntax sugar perspective love able combine convenience optimizations offered currently implemented must unroll explicitly element wrapped removes incredible convenience also makes difficult maintain genericreusable dynamic components", "d": "6/2017"}, {"body": "instead using vfor vif use computed property filter array improvements docs always welcome", "d": "6/2017"}, {"body": "great suggestion thanks help submit doc pr thanks", "d": "6/2017"}, {"body": "need specify attribute specific case using works need find real id vue nt reuse nodes", "d": "6/2017"}, {"body": "posva understand tried index nt work eg bigger underlying issue event uses right index value inside nt appears scope inside parent due arrow function nt notified change prop wonder issue sure closed right away", "d": "6/2017"}, {"body": "need unique key try said see working check info", "d": "6/2017"}, {"body": "benjarwar hi like need expose public html let uid export default data uid return uid mycomponentlabel uid", "d": "6/2017"}, {"body": "vm reserved internal use important keep private rely user code keep flexibility change behavior potential future use cases userland use cases suggest generating uids write simple moduleservice generates uids import components want every component make global mixin", "d": "6/2017"}, {"body": "benjarwar needed uid exact reason creating uid fairly simple recommend using mixin sets variable component data object make uid observable necessary set one within hook closest lifecycle hook internal uid property set js let uuid export default beforecreate thisuuid uuidtostring uuid", "d": "6/2017"}, {"body": "thanks replies nirazul one aforementioned work still kinda wishing public id component outofthebox understand need keep value private", "d": "6/2017"}, {"body": "incorrect usage reuse vnodes alway create fresh vnodes render", "d": "6/2017"}, {"body": "think maybe improvement could access assign array item via string type index fact equal refer could check key try convert number type", "d": "6/2017"}, {"body": "probably check string integer index", "d": "6/2017"}, {"body": "thanks peterwf", "d": "6/2017"}, {"body": "technically think problematic framework using simulate providing necessary properties would break lot code expects run universally checking environments could share details detect browser environment intentional use simple check want use inbrowser behavior vue used inside node jsdom", "d": "6/2017"}, {"body": "hi thanks quick reply contacted owner custom framework today introduce framework depth explain reason use window object way several days later provide details", "d": "6/2017"}, {"body": "hi discussed guy custom framework team use framework server rendering web pages contain many window variables might problem left history order reuse old code runs browser simulate node framework also met problem trying use vue ssr solution modify code vue locally know strong reason fix point maybe accept solution give framework", "d": "6/2017"}, {"body": "yeah improve docs regarding special case key fact reserved attributes bound using object syntax cc chrisvfritz", "d": "6/2017"}, {"body": "fixing ping add error warn", "d": "6/2017"}, {"body": "gebilaoxiong ah realized indeed fixable check special keys", "d": "6/2017"}, {"body": "ok boss", "d": "6/2017"}, {"body": "vue ships variants runtimeonly runtime use build use instead ps please ask questions use forum gitter instead opening issues github", "d": "6/2017"}, {"body": "nickmessing thank try", "d": "6/2017"}, {"body": "import vue vuedistvueesmjs caused uncaught syntaxerror unexpected token export vueesmjs uses module export ca nt recoginized meteor even add poorvavyas package import vue vuedistvuejs works", "d": "6/2017"}, {"body": "properties prefixed historically used internally vue nt think enough reasoning change", "d": "6/2017"}, {"body": "nt think makes much sense define methods computed props etc components internal using underscore convention generally considered internal public api component defined props events access methods data component programmatically eg something rarely happening considered edge case", "d": "6/2017"}, {"body": "accessing methods happen trying hide properties user prepending illusion", "d": "6/2017"}, {"body": "yes used internally huge difference provides useful documented public api provides bugprone unexpected behaviour yes true unexpected part somewhat documented nobody tells really nt use underscores anything unless like pain argument simple frankly seems compelling newcomer bugprone people shoot foot due unexpected behaviour many issues tracker proving though think related experience worst yet seasoned developers love nt alienate unnecessary getting rid one simple search amp replace away", "d": "6/2017"}, {"body": "unlikely happen certainly break someone existing code gain arguable raise warnings users declare datapropscomputedmethods start open pr", "d": "6/2017"}, {"body": "using arrow function data actually good idea makes readable forces build state object therefore nt really want warn also note nt say bad use arrow functions docs", "d": "6/2017"}, {"body": "fyi detected runtime tell whether function authored arrow function done via static analysis probably rule wip official eslint plugin", "d": "6/2017"}, {"body": "unfortunately possible given way vue template compilation rendering works however mount multiple vue instances share data object", "d": "6/2017"}, {"body": "vue text interpolation use instead recommend read guide", "d": "6/2017"}, {"body": "try", "d": "6/2017"}, {"body": "add self prevent jounqin said", "d": "6/2017"}, {"body": "creating pr docs thanks feedback", "d": "6/2017"}, {"body": "transition represented one css class would need multiple classes applied transition fyi works already", "d": "6/2017"}, {"body": "see example sometimes need append two classes uikit example need append class reverse animation want swap multiple components need append class leaving entering component make position absolute another component animation", "d": "6/2017"}, {"body": "nt need add classes add direct classes modify behaviour transition even use array object syntax", "d": "6/2017"}, {"body": "html", "d": "6/2017"}, {"body": "nt need classes transition would nice feature stuck fine html", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "\u53d1\u73b0\u53ea\u8981", "d": "6/2017"}, {"body": "\u4f60\u53ef\u4ee5\u9605\u8bfb\u6587\u6863 acodercat", "d": "6/2017"}, {"body": "\u6587\u6863\u8bf4next \u6216\u8005 next path", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "really nt understand feature missing definitely vue rather vuerouter issue looks like usage question ask questions forum gitter stackoverflow", "d": "6/2017"}, {"body": "validators executed prop change please provide repro", "d": "6/2017"}, {"body": "ah mistake encountered case passing array prop manipulating element via validator prop enforces elements numbers learned issue reactivity must updated via component acknowledge change object properties declared datacreation reactive ca nt array indices", "d": "6/2017"}, {"body": "limitation converting array indices would lead big performance loss really worth", "d": "6/2017"}, {"body": "known hacky workarounds use nondocumented compiler method use poorlydocumented method behavior partial result", "d": "6/2017"}, {"body": "provide raw text", "d": "6/2017"}, {"body": "worked thank lot may want add information documentation currently text say children vnodes", "d": "6/2017"}, {"body": "greencoder would great could make pr", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "\u8fd9\u4e2a issue \u5e94\u8be5\u53d1\u5230\u4f60\u4f7f\u7528\u7684 cli \u6a21\u677f\u7684\u4ed3\u5e93 \u8d34\u9519\u8bef\u65e5\u5fd7\u7684\u65f6\u5019\u8bf7\u7528 markdown log \u91cd\u73b0\u7684\u94fe\u63a5\u8bf7\u4e0d\u8981\u968f\u4fbf\u4e71\u8d34\u4e00\u4e2a", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello sorry reproduction look reproduction boiled minimal code editable use base repro", "d": "6/2017"}, {"body": "posva issue happens binding data display inline element safari", "d": "6/2017"}, {"body": "thanks clarification please provide boiled repro take look mon jun kyle notifications githubcom wrote posva issue happens binding data display inline element safari receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "6/2017"}, {"body": "underneath really array replacement heuristics replace array indeed trigger update expected behavior real cause putting call directly inside handler means component validated updated every input even extra whitespace nt make trimmed text change instead trigger actually changes using watcher fixed fiddle", "d": "6/2017"}, {"body": "thanks response intentionally make code inefficient making revalidate input method also called every time even error bag empty reason veevalidate code something similar seems happening array replacement caused issue ca nt type spaces textarea component patched code use inplace array modification fixed know code work create errorbag callback behaviour difference inplace array modification component always supposed update array replacement even array may contain values expected design perhaps documentation suggest wary array replacement bit", "d": "6/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "6/2017"}, {"body": "sorry valid reproduction", "d": "6/2017"}, {"body": "discovered injection may related temporarily closing investigate", "d": "6/2017"}, {"body": "really want string value pass string instead boolean booleans toggle attribute element convenient cases", "d": "6/2017"}, {"body": "agree answer thank much", "d": "6/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue repro thanks", "d": "6/2017"}, {"body": "already follow issue guide ssrclientplugin work well multi entrys", "d": "6/2017"}, {"body": "please give message", "d": "6/2017"}, {"body": "sorry keep github issues bug reports feature requests ask questions forum gitter stackoverflow find really issue please open new issue repro", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow", "d": "6/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum gitter stackoverflow use splice without argument remove element", "d": "6/2017"}, {"body": "hi posva thanks quick response behavior splice without argument behaviour looking offsets following indices breaks associative array feel behaviour non intuitive inline javascript specification sparse arrays specifically requesting myarray remove feature seemed past allows remove element index array without disturbing indices without introducing undefined array iterate later", "d": "6/2017"}, {"body": "aah case use", "d": "6/2017"}, {"body": "sorry tried already offsets indices following elements nt mean bother think edge case currently elegantly solved currently associative array use object instead array vueset vuedelete work array vue implements method mimicking behaviour javascript defined delete array index probably cases like sparse array order keys matter using object wo nt trick see subtlety talking", "d": "6/2017"}, {"body": "tested adding template using gets updated twice corresponding value need help please use forums gitter post questions btw associative array object js complicating life", "d": "6/2017"}, {"body": "nt need help probably tested wrongly example remove try access id reporting consider either bug missing feature depending intent library designer wo nt bothering anymore already lost enough time semantics array vuejs implements different semantics javascript array probably wo nt cost much implement javascript specs delete user ask delete splice user ask splice btw associative array object js need able iterate key order care nonquadratic performance javascript array like std map javascript object like std unorderedmap nt get please get chain someone thank time", "d": "6/2017"}, {"body": "provide jsfiddle repro look", "d": "6/2017"}, {"body": "fyi little point using sparse arrays js ensure enumeration order need keep copy indices anyway iteration speed difference getset might think faster object always run benchmark instead making assumptions", "d": "6/2017"}, {"body": "hi sparse arrays guarantees order objects nt important distinct primitive sometimes need currently encountered problem agents simulation every timestep simulation agents agents born store sparse array incrementing id agents dies remove structure living agents sparse arrays operations log nremainingagents use objects lose information order agents created use dense arrays remove operations become n making simulation step quadratic insurmountable problem work sparse js array added data vue constructor vue nt get control keep vue copy sync via object mapping inelegant kind point using vue get sparse array probably feature developers wo nt use may useful simplify life new users breaking somewhat hard understand semantics javascript arrays probably could faithful javascript specs inexperienced users wo nt see difference advanced users get expected behaviour thank time", "d": "6/2017"}, {"body": "answer linked mdn article links already stated spec guarantee enumeration order sparse arrays engines part spec wrong rely proper way deal keeping extra array containing ordered keys use object also usually inaccurate reason js performance big notations much underlying engine decides implementoptimize different cases pretty sure sparse array leads deopt would nt performant think", "d": "6/2017"}, {"body": "answer linked tell foreach implemented almost everywhere proper way deal keeping extra array containing ordered keys nope middle modification would lead quadratic behaviour proper way use tree underlying data structure js array javascript specs written developer enjoy minimal useful primitives code efficiently tree maps hash maps two useful distinct beasts algorithmically different somewhat natural give access programmer decent browser engines implementation forced using right primitive otherwise would nt match specs would piss poor performance optimizations bigger numbers next guy javascript today bad part browser implementers decided respect underlying theory vuejs great please nt drag us mud removing constructs would allow us rise", "d": "6/2017"}, {"body": "slower manual loop direct key access object due additional checks per spec plus cost invoking iterator function item given care performance avoid using also defeats point using sparse array sparse arrays work properly used use raw loops iterate data empty item still render block unlikely us change behavior technically breaking lead performance regressions makes sense make behave like native arrays separate method indexmodifying behavior currently however breaking change far nt think use case argument behind strong enough warrant breaking change change want likely happen suggestion keep using object instead also strongly suggest actually benchmarking app assuming object slower sparse array may strong algorithmic intuitions js land benchmarking way find truth", "d": "6/2017"}, {"body": "ok problem thanks advices", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "getting vuebot notifications githubcom hello issue closed conform issue requirements please use issue helper create issue thank receiving subscribed thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "reproduction link data applicationxhtmlxml reproduction please provide minimum runnable code deomnstartes problem", "d": "6/2017"}, {"body": "linusborg copy paste data uri chrome edge browser look developer console", "d": "6/2017"}, {"body": "content data uri", "d": "6/2017"}, {"body": "would need use case", "d": "6/2017"}, {"body": "use case team serves web content applicationxhtmlxml successfully decade across desktop mobile embedded applications found extremely useful use strict html aggressive standards compliance mode eliminates historical idiosyncrasies html selfclosing vs tag capitalization cdata browser quirks prevents certain types xss attacks disallows harmful things like documentwrite ie conditional comments fails fast many types errors extra strictness xhtml syntax caught offending line patch technically invalid html html xml syntaxes valid html whatwg html specs xml representation deprecated discouraged considered outdated standards body aware browsers support xml formulation html documents natively since ie lot obsolete fud xhtml people understood difference content type doctype nt want serve polyglot documents ie lt also confusion relationship xhtml obsolete never finalized xhtml alive well nt help situation making content compatible content types syntaxes trivial tiny patches like one accepted google facebook akamai advertising networks several open source projects years often conversation like one given rest vue seems nearly compatible applicationxhtmlxml documents already hoping accept patch nt maintain fork backwards compatible single character change selfclosing slash really problem ideological reasons writing code would resolve issue totally standards compliant", "d": "6/2017"}, {"body": "dvdckl ha bit confused nt realize fix simple mean blizzard start using vue", "d": "6/2017"}, {"body": "created pr right start actually", "d": "6/2017"}, {"body": "yeah realized well totally missed", "d": "6/2017"}, {"body": "sorry nt see related pr earlier removed commit merged", "d": "6/2017"}, {"body": "wow", "d": "6/2017"}, {"body": "overwrite innerhtml like whenever set throws away dom nodes vue controlling previous html also string nt contain data", "d": "6/2017"}, {"body": "lzxb would need use computed properties initial data imo data schema component use data side rather put data side actually need", "d": "6/2017"}, {"body": "special cases need like", "d": "6/2017"}, {"body": "calculated attribute data dependent requirement accessible", "d": "6/2017"}, {"body": "nothing mixins order vs current behavior expected way often reasonable depend way around also change would breaking obvious gain", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "indeed special handling present native basic idea type whitespace parent value gets updated trimmed value triggers update parent child however textarea child still focus update blocked blur input update happens parent value already trimmed system thinks nothing changed easily simulate native behavior extra textarea custom component", "d": "6/2017"}, {"body": "thanks answer indeed fix issue whitespace still showing custom component part whitespace b remove b instantly trims whitespace remains happens still live", "d": "6/2017"}, {"body": "thing", "d": "6/2017"}, {"body": "expected behaviour looking guide realize nt properly documented far see ping chrisvfritz wrong", "d": "6/2017"}, {"body": "counter intuitive override value would nt something get merged overrides want explicitly ignore always use text value declare prop use", "d": "6/2017"}, {"body": "wostex one slightly controversial features seems little strange giving component undocumented api assuming parent component knows child component root element practice though found feature rarely causes problem long nt try use applications use enjoy though ymmv personally feel meant component library authors eg integrating bootstrapmdl reported finding helpful since difficult predict component might used example bootstrap plugins require adding new attributesclasses ability add arbitrary attributes means authors nt work hard accommodate edge cases docs linusborg right nt see anywhere docs thinking back wondering purposefully left personally consider antipattern application code include warnings escape hatches props events workflow use sparingly mostly serve escapehatch prefer using props events parentchild communication except implicit passing attributes possible violate workflow accidentally despite feelings many find useful want know acquiesce opened pr would love hear thoughts explanation linusborg posva wostex hopes dreams next major version vue might make another push behavior disabled default even altogether since functional components technically used explicitly pass arbitrary attributes root element element desirable even normal component custom props used powerful explicit attribute passing vue label pattern also allows inspecting arbitrary attributes provide warnings example set classes nt used together user trying use external plugins outdated conflict user trying add classesattributes deprecated", "d": "6/2017"}, {"body": "thanks explanation chrisvfritz thought bug seems line common vue concepts although people benefit using maybe feature documented update see already done pr", "d": "6/2017"}, {"body": "chrisvfritz really think kept removing would enforce using render function every component lib inapp specific ui component", "d": "6/2017"}, {"body": "posva wonder compromise new directive could added specify primary element one attributes added since may always root element think could mostly solve problem users know implementation details components example case simple component following template html people might surprised adding class css still nt work right component authors selectively forward attributes defining props specifying applied way could set sane default instead going much work trying imagine every possible scenario think", "d": "6/2017"}, {"body": "think want control attributes like class go better always use props would also work reuse class put different attributes different children needs prop must used multiple places class example bit weird imo using ui lib check actual html trying add classes probably end something like", "d": "6/2017"}, {"body": "posva cases like though tedios set lot props bindings able set different primary element would make element much simpler props could used anything attribute passed element make sense also writing sitting right next weird", "d": "6/2017"}, {"body": "indeed primary element component looks like something useful enough maybe referring main property adding short inperson discussion", "d": "6/2017"}, {"body": "seems chrome bug work fine firefox", "d": "6/2017"}, {"body": "still seeing firefox windows macos also tried chrome canary firefox beta channel really noticeable toggle transition group slice array using button", "d": "6/2017"}, {"body": "looking bit looks like dynamic transition greatly adding lag sensation setting improves lot looks like something editing inline styles many components one animated may wrong", "d": "6/2017"}, {"body": "figured dynamic name adding lag remove name completely setup style without transition applied still pretty noticeable pause becomes pronounced complicated vfor instance table app lot data functions generating table display lag pretty big bummer since actually interested animating entire list might try see way animate additions without wrapping vfor transition group", "d": "6/2017"}, {"body": "observation enables flip technique default however requires least one call source forces style recalculation layout reflow chart show usually cheap small style sheet full blown css framework recomputing styles expensive", "d": "6/2017"}, {"body": "nt think fixable vue framework though tried way optimize away call requires causes style recalculation well since transitiongroup designed flip technique little chance avoid least one style recalculation call fairly click event listener still respond even cpu slowdown seems acceptable css framework adds many rules well flip technique something might want avoid", "d": "6/2017"}, {"body": "thank investigating explanation makes sense even without specific classes applied obvious semanticui others making changes elements like body text etc directly thus causing recalculation load", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "may cleaner js code stream", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "thank looks perfect smile", "d": "6/2017"}, {"body": "vuerouter issue look console giving hint fix issue dup", "d": "6/2017"}, {"body": "think similar problem two pages b listen event event bus switch b vuerouter trigger event page also response event component destroyed switching router listener still", "d": "6/2017"}, {"body": "simonalia probably unrelated op problem likely forgot use unregister event bus listener component hook vue doesnt use event bus questions please ask forumvuejsorg issue focus op problem", "d": "6/2017"}, {"body": "yeah got thank linusborg", "d": "6/2017"}, {"body": "thanks looks like indeed memory leak going identified source working fix", "d": "6/2017"}, {"body": "thank much help", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "also happen actually use unique keys keys unique explained docs", "d": "6/2017"}, {"body": "yes updated fiddle sure", "d": "6/2017"}, {"body": "linked fiddle still duplicate keys edit also replace array items way vue track react thirdly method pushed string array contain objects like", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "yea sorry update link think code view model causes duplication replace array assign arraysplice works ok remove one tr template problem goes away updated code use arraysplice problem still tried detect duplicated items code var counts thisordiniforeach x gt counts xid counts xid consolelog counts thanks helping really driving crazy", "d": "6/2017"}, {"body": "first fiddle still duplicate keys last one nt use please take look version fiddle previous reply works without errors need support suggest open thread forumvuejsorg help well issue closed appearant bug", "d": "6/2017"}, {"body": "duplicate key means duplicate declaration template duplicate value array clear sorry found problem indeed duplicated key another template page thanks linusborg support", "d": "6/2017"}, {"body": "instead considered children maybe issue may need write btw fiddle using vue", "d": "6/2017"}, {"body": "lookup algorithm provide inject child looks provided attributes loops hierarchy search provided props root could nt get fiddle run ran fiddle parent undefined child component got lookup context least start issue rendering slots relationship components", "d": "6/2017"}, {"body": "looks like functional component rendered slots resolved", "d": "6/2017"}, {"body": "kingwl correct kind technical requirement", "d": "6/2017"}, {"body": "remember raised point getting crazy end looked normal functional components attached component rendered therefore used slot get attached outer component however case nonfunctional components container injects renders html edit alidcastano updated fiddle comment since nt even using vue", "d": "6/2017"}, {"body": "haha sorry using wrong vue version fiddle caught able configure jsx nt realize posva thanks fixing example issue functional component ca nt receive provided properties functional component rendered slot linusborg technical requirement mean workaround behavior intended container created serve passes props example design would change example seems unnecessarily bloated since essence parent component already entailed data needed provide child open discussion guys suggest", "d": "6/2017"}, {"body": "change anything slot rendered context", "d": "6/2017"}, {"body": "technical requirement mean workaround behavior intended behaviour result way functional components work consider set components pass functional component another component slot rendered befor passed child child component receive resulting vnodes slot content context example means moment component renders available parent outer component consequently injections available functional component available well current implementaiton virtualdom works functional components change would require quite changing quite lot internal mechanics", "d": "6/2017"}, {"body": "posva linusborg got thanks explaining due requirements way use provideinject functional components props provided context sure constraint clarified documentation please go ahead close issue nt anything else needs done clarified thanks", "d": "6/2017"}, {"body": "maybe find way improve functional component slot moment done like posva linusborg said", "d": "6/2017"}, {"body": "kingwl thanks keeping open finally time try incorporate vuemobiledoceditor plugin using advice one problem foresee component needs used instance difficult allow flexibility nested components used example export components already registered app instance export default vueextend render h return provide data needs injected functional components return msg hello components parentcomp childfunccomp understanding user using plugin would like template script import supercoolcomponent supercoolcomponent export default mounted mounted gt new supercoolcomponent mount somewhereinapp emit mounted implementation correct severely limits usage provideinject functional components since allowed individually import register components wish use", "d": "6/2017"}, {"body": "would use full components instead support provideinject", "d": "6/2017"}, {"body": "vs", "d": "6/2017"}, {"body": "actually go nodemodules directory see directory called like probably find something called something like work import vuerouter vuerouter vueuse vuerouter", "d": "6/2017"}, {"body": "shame", "d": "6/2017"}, {"body": "using already via webpack vueloader try", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "quoting evan took time respond really fan proposal nt immediately clear turned tried felt weird realize semantic implication html attributes values usually boolean attributes attribute value indicates presence attribute truthiness implicitly expanding binding overloads perception addition prop child component declared type presence attribute indicates true value would cause different meanings technically breaking change arguments issues evan raised would close feature request duplicate also sirlancelot mentioned nice workaround make something like possible current api", "d": "6/2017"}, {"body": "thank sirlancelot approach tried works great linusborg agree evan argument thank bringing close", "d": "6/2017"}, {"body": "still actuall define prop", "d": "6/2017"}, {"body": "thanks lot make pr docs regarding requirement", "d": "6/2017"}, {"body": "would helpful yes thanks", "d": "6/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "6/2017"}, {"body": "warnings default development mode way detect newly added nonreactive property", "d": "6/2017"}, {"body": "thanks reviewing feature request bad reactivity detection warning shadowing ie properties getters methods names", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "warning inlinetemplate components must exactly one child element", "d": "6/2017"}, {"body": "thanks reply sorry missed docs general point still stands sometimes best documentation occurs action code error andor console message would really help silent failure rarely best course action", "d": "6/2017"}, {"body": "open browser console", "d": "6/2017"}, {"body": "wow believe looked console multiple times saw nothing maybe accidentally console filtered see clear day plnkr example apologies perfect", "d": "6/2017"}, {"body": "explained previous issues expected behavior controls js side things related component guarantee made dom left behind hand attempt reuse dom leave document remove dom get properly garbage collected", "d": "6/2017"}, {"body": "remove event listeners perhaps works added listeners vs template bindings destroying dom element calls listener focus seems way focus element cleanup vue component listeners without causing vue called means test needs blur element cleaning make method less susceptible npe actual case", "d": "6/2017"}, {"body": "removes custom vue event listeners dom listeners yes blur cleaning", "d": "6/2017"}, {"body": "use works intended seems fires late timer may get fired input value change event firing", "d": "6/2017"}, {"body": "attribute controls initial state need use instead", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "designed type navigation need stacklike navigation library going part core", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "e first please write issue correctly people help solve problem quickly seems right", "d": "6/2017"}, {"body": "need use function make work fixed markup issue case want take look consider using forum gitter stackoverflow question get faster feedback", "d": "6/2017"}, {"body": "makes sense whatsoever want use method reaction click event", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "use virtual list solution renders visible something solves use case", "d": "6/2017"}, {"body": "really need convert string use vueserverrenderer really recommend use virtual scrolling list", "d": "6/2017"}, {"body": "posva use vueserverrenderer nt compile webpack works server check virtual scroller showed see good enough", "d": "6/2017"}, {"body": "virtual scroller requires element height order prevent display glitches case chat messages also vueserverrenderer wo nt work close ticket find idea interesting", "d": "6/2017"}, {"body": "want directly generate real dom nt see need even go vue rendering pipeline use plain html string concatenation would give control better performance possible implement virtual scrolling handle dynamic height currently solid vue implementation yet still consider problem dealt userland rather core", "d": "6/2017"}, {"body": "expected vue nt create copies data info", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "try async component dynamic import require", "d": "6/2017"}, {"body": "think expected behavior explicitly specify types prop casting would performed consistent stateful components declare prop implicit type", "d": "6/2017"}, {"body": "thanks raising however suggest posting forums gitter instead issue list reserved potentially actionable items vue", "d": "6/2017"}, {"body": "thanks vvpvvp need provide minimal reproduction us look could create github repo reproduce", "d": "6/2017"}, {"body": "link really nt helpful please try provide actual reproduction", "d": "6/2017"}, {"body": "got problem scoped slot ok works", "d": "6/2017"}, {"body": "sunslaven please provide reproduction scoped slots related specs passing ca nt really tell wrong without repro", "d": "6/2017"}, {"body": "sorry problems testi proved nothing version", "d": "6/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "6/2017"}, {"body": "think looking", "d": "6/2017"}, {"body": "use directive updated link", "d": "6/2017"}, {"body": "commented issue behaviour incosistent quite weird using fixes issue", "d": "6/2017"}, {"body": "type usage wontfix works wiping away preexisting content completely new nodes however use bindings vue attempt diff text nodes likely made sync browsers handlesplit text nodes completely unpredictable", "d": "6/2017"}, {"body": "confirmed trick thanks", "d": "6/2017"}, {"body": "autumnwoodberry updated fiddle use shuffle array bug still reproduce", "d": "6/2017"}, {"body": "wrong notice nt actually click button make happen original array starts items bug happen", "d": "6/2017"}, {"body": "autumnwoodberry thank point updated description fiddle", "d": "6/2017"}, {"body": "thanks case like use key could refer docs", "d": "6/2017"}, {"body": "although pr may solve problem better use string number type value key attributes using plain object implement map structure inside vue native object treat object type value key another object automatically convert string", "d": "6/2017"}, {"body": "recall correctly always literal thought added docs", "d": "6/2017"}, {"body": "defcc posva type restrict prop mentioned docs however nonprimitive necessary sometimes property object", "d": "6/2017"}, {"body": "reason nt support object keys performance diffing part code extremely perfsensitive extra memory allocation vs object key lookup negligible add warning nonprimitive keys probably using native map solve problem less perf hit would make vue behavior inconsistent depending browser support likely supported future version longer supported nt really seen case object keys absolutely necessary cases make sure objects ids create somewhat inconvenient nt think worth perf tradeoff", "d": "6/2017"}, {"body": "thank explanations documentation yet mention though", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "6/2017"}, {"body": "expected children overwritten", "d": "6/2017"}, {"body": "nt think dealing vue issue chromefirefox throttling timers inactive tabs simply reduce ramcpu usage ca nt rely settimeout running every x second want solution problem rather simple pause animation user leaves another tab restart comes back fixed example", "d": "6/2017"}, {"body": "makes sense thanks lot quick response still got ta ask anything checking transition classes already exsist change occurs regarldess whether transitionendanimationend fired", "d": "6/2017"}, {"body": "expected behaviour documented guide note objects arrays javascript passed reference prop array object mutating object array inside child affect parent state much intentional sense would want allow twoway flexibility inevitable otherwise would clone object passed prop would come host new problems like performance memory impacts", "d": "6/2017"}, {"body": "info yes vue follows semver stated anywhere personally consider default library open issue docs repo instead please thanks", "d": "6/2017"}, {"body": "allright thanks think good know since vue didnt cheers", "d": "6/2017"}, {"body": "looks like bin actually using update latest version odd change event firing nt", "d": "6/2017"}, {"body": "nt think change website reproduce vue vuetemplatecompiler dev actually found problem clicking reset button setting value empty quote since option value vmodel ca nt match option available dom set thistest undefined workaround put first select dirty works nt know really issue feel fre tell change way handle select", "d": "6/2017"}, {"body": "dup intended possible option exist variable set", "d": "6/2017"}, {"body": "sure solves async component transitions new vue likely bug code repo still exhibits transition outin bug incoming component nt wait fade complete note using named async component transition bug demo", "d": "6/2017"}, {"body": "indeed still failing repro transition starts right away clingor said", "d": "6/2017"}, {"body": "posva looks like version contain fix code", "d": "6/2017"}, {"body": "fix released yet closed issues patch lands branch might public release yet contains single fix memory leak higher priority", "d": "6/2017"}, {"body": "bad saw commit release thought strange would release notes anyway", "d": "6/2017"}, {"body": "sorry misunderstanding thank confirming issue", "d": "6/2017"}, {"body": "curious ca nt template contain multiple nodes become avoid nested single div reasoning pick element want root ca nt solved", "d": "6/2017"}, {"body": "larryu thanks sometimes want use wrapper elements posiblle", "d": "6/2017"}, {"body": "seems problem edge applying property elements open bug report tracker may limitation tables", "d": "6/2017"}, {"body": "address needs still interested concretedetailed usage example concrete mean problem solve project rainfore also provide examples kind plugins think written", "d": "6/2017"}, {"body": "cxhtml team planning create ide vue support editing single component ui library even webapp project simple demo final result following steps handling template necessary editing vue file compile template ast remove original events component add attributes events ast workspace nt want trigger original events modify ast easier modify template render function generate render function modified ast trigger hot reload update living component saving vue file get working ast restore events ast maybe user add remove events attributes regenerate template ast write file issue pr pushed really need api generate render function directly ast template maybe solution better thought hoping get advice btw according also need function like postcss", "d": "6/2017"}, {"body": "discussion find using plugin pattern expose ast nt address needs either reason simple time generate render function means compile method plugin options ast always generated parse method need modify ast object obtain compile method pass generate method get render func addition digging compilercodegen source code directly use ast api compilefromast proposed ast object modified like xxprocessed attributes added arrayshift method used generate method called means next time call generate method render function may generated expected wonder possible make generate method pure function matter many times call generate ast like parse method hmm also expose parseoptimizegenerate method plugin options rainfore mention", "d": "6/2017"}, {"body": "cxhtml mentioned pr nt address needs completely close pull request present", "d": "6/2017"}, {"body": "question though easiest way fork pull request yes", "d": "6/2017"}, {"body": "would like resolve first contribution project", "d": "6/2017"}, {"body": "ryzokuken already opened pr", "d": "6/2017"}, {"body": "okay look someplace else get acquainted source thanks thu jun pm jk notifications githubcom wrote ryzokuken already opened pr receiving mentioned reply email directly view github mute thread", "d": "6/2017"}, {"body": "import elcol elementuipackagescolsrccol \u548c components elcol \u5c31\u89e3\u51b3\u4e86", "d": "6/2017"}, {"body": "modifier parsed template compiling support modifier support parse modifier runtime imo good", "d": "6/2017"}, {"body": "tried create directive code link working sample jsfiddle link work fine native events described question p nt know add support vuecreated custom events though maybe someone point right direction", "d": "6/2017"}, {"body": "maybe try pug like vue", "d": "6/2017"}, {"body": "also interested specific case nt granular components however several pages need different layouts currently solving using appearanceonly components op states imports stuff like etc well nothing template composition done child components inside vuerouter configuration topdown approach major drawback though results god object router configuration defines entire composition application instead modular components could inherit certain aspects parents eg template imported components", "d": "6/2017"}, {"body": "hey folks wanted let know ran issue pulled hair hours trying figure test case using resolves odd use first place wonder might issue virtualdom implementation edit discovered switching ti breaks something else particular use case user starts typing update state activate mode order change ui via binding problem seems user starts typing enters edit mode discards typed beforehand assumedly nt updated cell state updated another piece state dom diff reset node current state replacing user typed nogo issue reopened post new one even simpler test case", "d": "6/2017"}, {"body": "kingwl sure working finally got around using component properties button component nested editor component receiving provided properties even verify props editor component yet showing functional component context", "d": "6/2017"}, {"body": "alidcastano working please open dedicated issue proper reproduction", "d": "6/2017"}, {"body": "\u5b57\u7b26\u4e32\u62fc\u63a5\u76f8\u6bd4 nuxt", "d": "6/2017"}, {"body": "ran similar issue sgehrman specifically receiving warning despite knowing sure component question mutating property adding issue experienced case anyone stumbles onto page similar problem may may root cause op issue using electron example solution project creating component publish npm added subdirectory host demo component github pages directory subproject scaffolded believe setup somehow resulted separate vue instances referred one component project root fix subproject instead installing vue dependency alias root component eg generated webpack template although solution specific nested scaffolded project general idea might apply widely perhaps ie nested installations probably bundlers like avoided replaced alias single suspected underlying cause investigating problem point prop mutation detected flag true point called false checks prop mutation inspecting call stack chrome devtools revealed separate sources used hence inconsistent issue rather sloppy setup hopefully helps someone else also thanks team hard work developing easily best fe framework ever", "d": "6/2017"}, {"body": "lucafraser found solution case issue", "d": "6/2017"}, {"body": "grimpa unfortunately", "d": "6/2017"}, {"body": "passing string number prop need bind pass number", "d": "6/2017"}, {"body": "lucafraser reading problem seems vue version version coerce removed use minutes seconds keep days hour solution data return mathtrunc new date gettime hope help cheers", "d": "6/2017"}, {"body": "problem could fix", "d": "6/2017"}, {"body": "antixrist dear antixrist think good idea component child component also component looks like want use props control parent", "d": "6/2017"}, {"body": "gebilaoxiong nope child component take prop control parent emit event parent component decides change state children aware state modal component example component data flow broken still manage transitions outside component although documentation says otherwise confirmed posva vue provides transition wrapper component allowing add enteringleaving transitions element component following contexts conditional rendering using vif conditional display using vshow dynamic components component root nodes", "d": "6/2017"}, {"body": "snapeuh issue os x works adding duration eg", "d": "6/2017"}, {"body": "surmonchina find tricky way use external vue component use nuxtjs serverside rendering already test follow nuxtjs doc modify project config use component js processbrowserbuild var swiper swiperslide require vueawesomeswiper components set swiper swiper swiperslide swiperslide get error clientside rendered virtual dom tree matching serverrendered content need use async component swiper gt promiseresolve swiper swiperslide gt promiseresolve swiperslide however always best choice improve component solution hack way usage", "d": "6/2017"}, {"body": "funkylover", "d": "6/2017"}, {"body": "surmonchina know already update say trick post make custom component fit ssr without modification component", "d": "6/2017"}, {"body": "would suggest adding modifier none well following idea capture keys pressed without ctrl shif alt meta pressed export default methods logonlyleftcmd consolelog left pressed logallleftcmd consolelog left pressed without modifiers", "d": "6/2017"}, {"body": "stumbled upon would follow behaviour right however documented well good enough maybe pr docs would suited", "d": "6/2017"}, {"body": "someone wrote article", "d": "6/2017"}, {"body": "fyi think issue simply usagesupport question possible duplicate visjs issue", "d": "6/2017"}, {"body": "wimrijnders looked issue analysis correct short recommended put complex objects prototypal inheritance vue option making reactive moving correct solution", "d": "6/2017"}, {"body": "thank much confirmation really really appreciate use close several issues running good understanding maintainers projects truly hope understanding til always cooperative maintainers made day little better good one", "d": "6/2017"}, {"body": "agree cybai flexible calculating style", "d": "6/2017"}, {"body": "thank responding presently longer bound old browser makes darn good experience framework keep good work smile", "d": "6/2017"}, {"body": "vue vuerouter div vue vue \u518d\u6bd4\u5982\u8fd9\u91cc\u7684 vhtml template", "d": "6/2017"}, {"body": "linusborg write want margintop paddingtop try paddingtop nt works please help", "d": "6/2017"}, {"body": "work see", "d": "6/2017"}, {"body": "akryum know status issue seems like limbo months anything help move along", "d": "6/2017"}, {"body": "ping blakenewman", "d": "6/2017"}, {"body": "using laravel mix dependency older somehow lock file nt consistent updated laravel mix lock file fixed error disappeared using laravel mix look another dependency try reinstall update", "d": "6/2017"}, {"body": "solved problem try reinstall", "d": "6/2017"}, {"body": "worked", "d": "6/2017"}, {"body": "another simple solution would use attributes reference element access template rendered template javascript note check compatibility otherwise use jquery library extract hope helps", "d": "6/2017"}, {"body": "using vue realized following use camelcase html prop work fine although documentation suggests kebabcase problem use webpack uglifyplugin minify bundle camelcase props lead errors bug pretty nasty think camelcase forbidden general htmlprops", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "custom modifiers simple radio input truefalse values evaluate strings need boolean computed properties smart case since need reimplement computed property every radio input eg radio inputs result computed properties", "d": "6/2017"}, {"body": "chrisvfritz meet problem simplify", "d": "6/2017"}, {"body": "solved problem wrapping logic changehandler always access updated values another solution could watcher property", "d": "6/2017"}, {"body": "block work days believe vue issue", "d": "6/2017"}, {"body": "took find correct use share html itemid itemname", "d": "6/2017"}, {"body": "deal custom defineradialgradient component template generating different svg gradients main component camel modifier work attributes case sensitive tags problem rendered browser lowercase like suggestion avoid error ps also added ignore vue components list", "d": "6/2017"}, {"body": "anyone script freeze latest version iphone siri browser pop execute urgent needed", "d": "6/2017"}, {"body": "suppose using arrayfrom inside computed function best friend disappointed", "d": "6/2017"}, {"body": "yeah think vue ca nt transformed use classes get left wayside within year two reading thread learning nt plans people contributing vue development think classes bad idea code base considering obvious direction javascript internet whole glad nt invested much time vue fact many frameworks created solve issues serious javascript development postjitc era js yet caught javascript evolving lot debate consideration dismiss strange looks like frameworks least trying keep react lot things mentioned props etc yet manages use classes happier react allow custom elements rather jsx eh guess ca nt everything maybe polymer real future hard say seems forward compatible", "d": "6/2017"}, {"body": "sjcalamia nothing classes per se others nt well far speak point currently lack two things good argument making public api internally already use classes many places available form class extend besides classes future javascript oop language wo nt become one pseudo classes one available options comes excapsulating objects behaviour simply doubt everyone turn everything class futureproof example arguably one biggest important libs ecosystem classbased sign becoming obsolete reason concerning vue nt seen arguments thread elsewhere arguing vue api class inherent advantages brings except indeed important point typing systems like typscript work better classes hence existance good proposal convert api vue something works classes nice syntax nt require es next features said nice syntax since api nt seem existbe feasible current js standard one vue goals work browser without buildsystem currently nt see realistic way make class api available however things one day along good arguments later major version vue might introduce class api totally possible since mentioned react class api without problems seen also discussed length also react smaller api surface since lacking reactivity system brings watchers computed props need declare props etc react nt run problems detailed previous replies anyway already seem made mind seen future us good luck framework choose react would great choice course", "d": "6/2017"}, {"body": "real issue class built discarded exchange proxy object could provide class sets watchers props etc constructor getters setters devs could simply extend class instead use protected data access actual thing built instead pseudothing provide instead", "d": "6/2017"}, {"body": "also js oop even prototyped instead derived classes js code deals literal objects methods properties supports polymorphism encapsulation inheritance albeit sugar syntax", "d": "6/2017"}, {"body": "sjcalamia case nt realize thread already years old since vue left wayside within year two nt use classes already irrelevant however vue seen exponential growth past years despite lack classes continuing get mindshare something must wrong world think class inheritance ui components oop ui components actually good idea probably also disappointed use react classbased api nt mean encourages even plays nice oop react functional composition core devs explicitly suggest class inheritance level deep experience building uis functional composition mixinstraits based systems much flexible suitable ui components oop trying shoehorn whole oop dogma onto ui components like trying hit screws hammer used hammer easier read matter familiarity practical benefit classbased apis friendly typechecking even argument soon moot vue enhanced type definitions ts contextual typing welcome disagree please constructive fashion actually giving concrete examples classes better future", "d": "6/2017"}, {"body": "keeping vue component definition asis reasons evan outlined right fit features component definition needs said wild idea need get case still someone radar component definition could look like javascript class myvuecomponent extends vue static functional false static el app static template message static components static mixins static model prop value event input render h return h div thismessage initialize component data data return message hello vuejs get computedproperty return thismessage lifecycle hooks beforecreate created beforemount mounted beforeupdate updated activated deactivated beforedestroy destroyed watchers set datamessage value previousvalue consolelog message changed previousvalue value methods somemethod param return new promise resolve gt settimeout resolve quite exotic idea huge fan littered throughout maybe someday someone somewhere could make webpack loader babel plugin convert notation proper vue component definition", "d": "6/2017"}, {"body": "even argument soon moot vue enhanced type definitions ooohh ooh ooh using flow explaining vueconf maybe anytime sooner scott", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "yes exploring quasar framework awesome", "d": "6/2017"}, {"body": "using quasar latest project lead developer committed project actively involved projects community worth mentioning next version days away many new features", "d": "6/2017"}, {"body": "sorry necro feel like better explanation error message thrown know happening spent hours today minutes duck debugging colleague find nt taking data view", "d": "6/2017"}, {"body": "hello want option achieve one sample getting bind dom function call vfor error oops data found checkifdeleted axiosget gt return resstatus", "d": "6/2017"}, {"body": "\u8bd5\u8bd5consoledir", "d": "6/2017"}, {"body": "still really unclear thisbest practices vue loading stripe js client inside component want accessible anywhere within component nt need available globally though would ok best option following code well numerous variations nt work", "d": "6/2017"}, {"body": "ended getting work sure better way though", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "got chrome still issue", "d": "6/2017"}, {"body": "nt still issue open issue repro take look", "d": "6/2017"}, {"body": "element nt", "d": "6/2017"}, {"body": "right linusborg thought getting error", "d": "6/2017"}, {"body": "sorry tag clearly spent much time writing js forgetting html", "d": "6/2017"}, {"body": "triggering specific animation demand feature like similar usecase element could simply supply class remove animation least nt control class lifetime strange vue goes great length support something like flip method implement custom triggers", "d": "6/2017"}, {"body": "problem knocking head desk hour implement workaround semanticui dropdown tomorrow suspect need trumbowyg ace use heavily application well semanticui form elements suspect underlying issue regardless input type onchange events happen response user actions setting value programmatically since thirdparty controls using store state nt manually trigger event nothing vue watch alas guess wait semanticui everyone else vue things", "d": "6/2017"}, {"body": "sent pr suggested addition documentation", "d": "6/2017"}, {"body": "input textbox would like new data event fired", "d": "6/2017"}, {"body": "debounce callback function", "d": "6/2017"}, {"body": "caution bind context using method may want apply context", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "current vuejs default webpack templates support css preloaders almost outofbox need relevant entries already wonder could done typescript one start writing typescriptbased components extra changes webpack config even letting typescriptbased components coexist babelbased ones quite close achieve objective experiments local project still need rename entry point changing loaded way configure webpack entry point could loaded individual typescriptbased files loaded", "d": "6/2017"}, {"body": "real troublesome find solution possible add notes documentation suggestion section example todo list list rendering", "d": "6/2017"}, {"body": "wondering went nightwatchjs tests currently looking alternatives main motivation around developmentspeed ca nt seem get anything done reasonable amount time things like repl missing hacks using development worth sharing", "d": "6/2017"}, {"title": "lodash support", "body": "since backbone supports lodash figure ask lodash supported points functions getting removed favor native approaches preemptive since roadmap gradually updates changes nt difficult make code base", "num": "4145", "d": "6/2017"}, {"title": "parameter builtin events means", "body": "hi last parameter builtin events means value passed via method mean method like passed parameter options parameter passed las parameter event handler think specified well thanks", "num": "4143", "d": "6/2017"}, {"title": "fast clicking two links freeze view render template", "body": "app links menu profile invoice link render view template click fast links one moment link wo nt react clicking freeze render function refreshhard page fix problem good solution ui problem inside backbone structure", "num": "4142", "d": "6/2017"}, {"body": "want submit pull request see required changes would look like", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "changing would support deal breaker browser support nt mentioned backbone page", "d": "6/2017"}, {"body": "believe unofficially dropped", "d": "6/2017"}, {"body": "yes sounds fine deal breaker would say keep support browsers gt global market share currently cool", "d": "6/2017"}, {"body": "change essentially primary goal backboneesnext remove dependence underscore possible previously commented issue good article peruse regarding native options vs underscore lodash assume mainline bb effort target native functions es effort backboneesnext targeting stage switching native functions suggestion ship bb already enough changes warrant release target include potential switch native functions perhaps changes glad help pr regard switch native options proof concept already removed underscore events functionality backboneesnextevents mainly switching though might changes ca nt recall offhand waiting least drop update tracks mainline bb continue work backboneesnext diverge bit", "d": "6/2017"}, {"body": "updates found need changes pr make different pr ci start working", "d": "6/2017"}, {"body": "rafde indeed good catch pretty straightforward mentioned changes lodash roadmap apply bb maintainers ship", "d": "6/2017"}, {"body": "far understand options passed function triggers event add model collection like triggered event collection parameter said think issue tracker issues probably better likely get replies post question stackoverflow", "d": "6/2017"}, {"body": "ok thanks", "d": "6/2017"}, {"body": "bug app", "d": "6/2017"}, {"body": "trofimenkoai might ask maybe try make jsfiddle least code sample", "d": "6/2017"}, {"body": "apparently removed jqxhrdeferred version", "d": "6/2017"}, {"body": "jquery returns function think still", "d": "6/2017"}, {"body": "jfbrennan still", "d": "6/2017"}, {"body": "sorry confusion jquery blog post makes sound like nonstandard promise methods removed jqxhr jquery stackoverflows one votes says removed thought consensus always equals truth", "d": "6/2017"}, {"body": "alxdev divide parsing code collectionspecific part modelspecific part nothing like doubleparsing write task create array objects server response breaking response going lower massaging objects future models every single object array supposed parsed later task create object attributes model interface expose use principle support responses rest apis getting collection objects nodes id nodes single object nodes id using option collection model essential feature backbone parsing would break code", "d": "6/2017"}, {"body": "myklemykle happen register handler callback twice work fairly big project using backbone problem usually local object registers handler unregistering usually happens scope object could register twice unless clear bug easily detected module", "d": "6/2017"}, {"body": "yep using old fine idea always go advanced need", "d": "6/2017"}, {"title": "reopen classes causing race condition", "body": "hi quick q regarding internals method block code looks like import b somelibrary import onewayinputcomponent emberonewaycontrolscomponentsonewayinput onewayinputcomponentreopen onewayinputcomponentreopen b seen loads correctly added functionality wo nt present page possible using twice row opposed would lead race condition", "num": "15433", "d": "6/2017"}, {"title": "css files fetched twice production mode", "body": "generated new project using ember cli order debug issue seeing production application css files fetched twice running production mode screenshot network tab chrome shows behavior nt see behavior nonember applications maintain curious causing behavior also see deployed application livereload running nt appear related help issue diagnose source duplicate css rendering would helpful thanks", "num": "15432", "d": "6/2017"}, {"title": "embercopy ignores graphql meta fields introspection fields", "body": "graphql return meta fields introspection fields prefixed hence copied embercopy right option implement copy function extract function could overwrite implementation ignore graphql specific fields", "num": "15431", "d": "6/2017"}, {"title": "return none promise routemodel hook cause linkto component active unexpected", "body": "tried create jsbin demo quite sure worked got simple demo replace resources template display none color black aactive color red application outlet ticketfilters model item linkto ticketfilterstickets itemid itemid linkto linkto ticketfilterstickets itemid queryparams itemid linkto linkto ticketfilterstickets itemid queryparams itemid linkto var app emberapplicationcreate rootelement app approutermap function thisroute ticketfilters function thisroute tickets path filterid appindexroute emberrouteextend actions didtransition function thisreplacewith ticketfilters appticketfiltersroute emberrouteextend model function return id id appticketfiltersindexroute emberrouteextend actions didtransition function thisreplacewith ticketfilterstickets appticketfiltersticketsroute emberrouteextend queryparams page refreshmodel true model function return slow resolve promise works fine thing want use cached objects sometime return appcontainerregistryregister template application emberhtmlbarscompile templateapplication html appcontainerregistryregister template ticketfilters emberhtmlbarscompile templateticketfilters html problem like linkto ticketfilterstickets linkto ticketfilterstickets got active behave url ca nt find happened find model hook return slow resolve promsie everything works fine", "num": "15422", "d": "6/2017"}, {"title": "addobserverforcontentkey performance", "body": "hi ran issue debug builds taking ages run using test data somewhat large arrays tracked believe already issue earlier problem content arrayproxy native array arraytostring blow things know fixed release builds able test app large datasets good", "num": "15421", "d": "6/2017"}, {"title": "api reference website page working", "body": "trying view methods class page click methods nothing appears presume content methods index panel", "num": "15405", "d": "6/2017"}, {"title": "reload route clicking active linkto helper", "body": "suppose particular route reached using linkto helper click button want route reload need using nested components within route modifies template want click linkto button refresh template basically reloading route one method setting preventdefaultfalse reloads whole page", "num": "15393", "d": "6/2017"}, {"title": "ember server start", "body": "ran quick start hangs warning prevents thing running also would nice either tell version node actually needs installed andor include recipe quick start makes sure right node version", "num": "15388", "d": "6/2017"}, {"title": "assertion failing staging environment build development modified twice single render issue", "body": "prerequisites using matters model hotel relationship many many receiving assertion error breaks staging environment nt affect us developing localhost via property computed property returns fetch main image hotel added logging method gets called find recompute main image never called computed method property looks similar const promiseobject ds const rsvp promise ember image embercomputed images function const id thishasmany images ids store get store id already loaded resolve promise storehasrecordforid image id return promiseobjectcreate promise promiseresolve storepeekrecord image id hotel imgincache else fetch return promiseobjectcreate promise storefindrecord image id catch gt noimages return image object return promiseobjectcreate promise promiseresolve noimages hotel noimgfound thing happens call hotelhoteloptionssomeproperty anything like computed property simply relationship assuming part breaking image issue happens first", "num": "15377", "d": "6/2017"}, {"title": "passing component class component helper", "body": "think feature request tried pass component class component helper hoping would work silently fails renders nothing thing possible hard would make work find weird something powerful component helper able easily generate input contextual component javascript side look compute function helper see expecting either string component definition component definition exactly importantly possible generate one component class without much effort ideally using public api thank", "num": "15370", "d": "6/2017"}, {"title": "lts tag npm", "body": "would possible add lts similar tag applicable releases npm particular usecase come working embertry would convenient able test thencurrent lts release instead manually keep lts semver string date scenario definition imagine could useful others well certainly enough justify slight administrative overhead", "num": "15363", "d": "6/2017"}, {"title": "input helper component longer accepts content input input crashes", "body": "upon upgrading builtin input component longer accepts content might reasonable crashes component cryptic console error rather failing build providing useful error entirely sure template prior versions lt built ran fine upon upgrading however simply pattern page crashes component error error input found catchall block handler nt handle objectdebugassert assert blockscompile compilerscompile inlineblocksplat inlineblockcompile vminvokeblock appendopcodesevaluate vmnext vmexecute vmresume tryopcodehandleexception updatingvmframehandleexception updatingvmthrow throw assertevaluate updatingvmexecute renderresultrerender rootstatethisrender objectrunintransaction interactiverendererrenderroots interactiverendererrenderrootstransaction interactiverendererrevalidate invokewithonerror queueflush deferredactionqueuesflush backburnerend backburnerrun objectrun actionstatehandler htmlanchorelement htmlbodyelementdispatch htmlbodyelementelemdatahandle would nice pattern caught build least notification somewhere pattern illegal", "num": "15361", "d": "6/2017"}, {"title": "loadingerror templates found catchall routes reproduction", "body": "catchall route uses promisehash return model catchall route also errorloading template showing still loading never get used twiddle show happening change route doesntexsist see timeout route show loading substate", "num": "15355", "d": "6/2017"}, {"title": "debug advanced debugging install ember inspector", "body": "upgraded morning environment seeing errors seems like small regression happening", "num": "15354", "d": "6/2017"}, {"title": "wrong depreciation url modelfactoryinjections removed", "body": "url changed quick pr emberjs something fixed docs ref", "num": "15352", "d": "6/2017"}, {"title": "module unification feature flag", "body": "basic support module unification already exists ember however two parts functionality require minor changes eventually want glimmerdi replace ember container however blocking module unification task seems unwise instead feature flag iterative step unblock progress even implementation nt exact final form want feature flag exist flag two pieces functionality local lookup still investigation may minor changes required properly support local lookup ember resolver api module unification namespaces aka support mu addons example invoking component adding service dependency supporting mu namespaces given component invoked like call today codepath blocked assertion assertion removed ember would call pretty much nonsense could parsed avoiding string parsing remangling avoided additionally adding special sigils syntax lookup strings desired especially since public api glimmerdi lands would ideal simply pass partial specifier example however goal feature flag continue using ember container exists today avoid adding public api avoid messing strings private api container proposed something like api whatever internal machinations required get namespaced string property lookup container let us move forward addon support module unification without adding public api serialized path passed resolver absolute specifier serialized requires knowledge ember module unification config temporary abstraction leak eventually plugged glimmerdi supporting partial specifiers lookups lastly whatever current assertions using component service names exist must moved main ember codebase existing resolvers ember default resolver emberresolver classic resolver may need assertions added regarding lack support namespaces", "num": "15350", "d": "6/2017"}, {"title": "internal routing service exposed global apps", "body": "apps without embercli least one internal service accessible userland demonstrates available", "num": "15344", "d": "6/2017"}, {"title": "depracation new ember application", "body": "deprecation newly created ember application", "num": "15343", "d": "6/2017"}, {"title": "inline svg template scaling according viewbox", "body": "description put inline svg element inside emberjs template file attribute svg normally causes content scaled size containing svg viewport seems ignored causing content displayed viewport coordinates rather user coordinates screenshot repo created linked reproduced issue minimal ember app code divs first row result code placed second row result placing code route template issue seen happen dealing template files environment embercli node os darwin repro steps create ember app structure using embercli create index route using embercli add following code run app expected circle svg drawn based viewbox coordinates viewbox scaled best fit containing svg element since viewbox element widthheight ratio viewbox scale completely cover svg area result circle radius units defaults pixels thus diameter equal height width containing svg actual circle takes half width height svg element radius units pixels would expected attribute declared since circle coordinates would drawn relation viewport coordinates ie element repo created steps also added examples better illustrate issue wrapped svgs easier visual comparison made elements width height note interesting note issue seems happen svg declared inline inside template repo linked also copied code changing border color containing viewbox correctly scaled case", "num": "15336", "d": "6/2017"}, {"title": "testing initializer injecting service", "body": "writing unit test controller expects service injected initializer every controller controller test failing service controller method twiddle demonstrates behavior ay duplicate ember changed lot since", "num": "15335", "d": "6/2017"}, {"title": "memory leak ember partials", "body": "rendering partial multiple times keeps adding entries glimmerenvironment cache causing memory leak eg click showhide button notice value keeps going", "num": "15334", "d": "6/2017"}, {"title": "input fields cursor jumps automatically end webpage served xhtml", "body": "bug emberjs helper using xhtml format cursor automatically jumps end keydown example generated app removed content rename plus changes links order opened inside dropbox open directly browser file textareas input field directly built html tags affect issue", "num": "15333", "d": "6/2017"}, {"title": "pods keeps components helpers found", "body": "appears issue resolver pods support steps reproduce embercli embercli ember cli sends analytics information default data completely anonymous times might want disable behavior disableanalytics false usepods true configenvironmentjs eslintenv node moduleexports function environment var env moduleprefix testapp podmoduleprefix testapppods environment environment rooturl locationtype auto emberenv features enable experimental features ember canary build eg withcontroller true extendprototypes prevent ember data overriding dateparse date false environment development envapplogresolver true envapplogactivegeneration true envapplogtransitions true envapplogtransitionsinternal true envapplogviewlookups true environment test testem prefers envlocationtype none environment production return env podsuserroutejs import ember ember export default emberrouteextend model return firstname steve podsusercontrollerjs import ember ember import validatepresence emberchangesetvalidationsvalidators export default embercontrollerextend validators name validatepresence true actions save changeset podsusertemplatehbs validatedform model changeset model validations onsubmit action save submitlabel save f finput label first name name firstname fsubmit label save validatedform expected result form element save button actual result", "num": "15331", "d": "6/2017"}, {"title": "improve computedsetdiff efficiency", "body": "application relies slowed considerably due current implementation quite inefficient lots entries many ember perform lot linear scans arrays could implementation refactored use set object supported major browsers ie offering support code fairly easy add something like js let seta thisget setaproperty let setb thisget setbproperty isarray seta return embera isarray setb return embera seta seta new set seta setb new set setb return setafilter x gt setbhas x", "num": "15329", "d": "6/2017"}, {"title": "error initial render causes nonglobals visit promise hang", "body": "preamble globals nonglobals mode nothing resolver instead refers applications autobooted amongst impacts globals applications set implies single running given app given test like following js import modulefor applicationtestcase autobootapplicationtestcase internaltesthelpers modulefor linkto helper class extends applicationtestcase test linkto helper throws useful error invoke wrong thisroutermap function thisroute post path post postid thisaddtemplate application following tests fail errors like application instance created call never destroyed way destruction supposed happen simple sets thisapplicationinstance test context successful transition teardown instance destroyed initial transition fails say exception raised model hook theory fine transition fails applicationvisit already takes care destroying instance test harness need know success cases however exceptions rendering cause initial promise fail schedules resolution visit promise afterrender exception rendering means nt run promise hangs instance destruction code never gets run nt happen globals mode apps globals mode apps set deprecatedinstance property render globals mode destroyed uses property destroy applicationinstance nonglobals applications nt set property similar instancetracking system fail destroy called application propose track instances creates array upon destruction destroy would permit applications fail initial rendering pass property torn references discovered porting test harness", "num": "15327", "d": "6/2017"}, {"title": "utilize sans addon", "body": "symmetrical question emberrouterscroll appears addon got folded ember core ca nt find documentation use within ember instructions per addon nt work fwiw emberjs", "num": "15324", "d": "6/2017"}, {"title": "defining property ember component named container causes exception production build ember", "body": "hi recently encountered issue upgrading ember nt see anything ember guides docs please correct missed seems add container property component get following error serving app production build ember documented would happy contribute seems could also handle exception informative message track source bug able track source help post put together demo repo ember reproduces bug reproduce run put dist folder running server run local node server like", "num": "15322", "d": "6/2017"}, {"title": "bug input focusout event missing", "body": "hi action called focusout receives current value event sent follow path inside sendaction value sent user action happens events call directly thissendaction use internal sendaction defined textsupport sends value think event always sent", "num": "15320", "d": "6/2017"}, {"title": "searchbar chinese support problem", "body": "type english worked fine changed chinese type result showed", "num": "15313", "d": "6/2017"}, {"body": "aware race scenario could provide reproducible example would love debug seeing", "d": "6/2017"}, {"body": "also see deployed application livereload running share built indexhtml", "d": "6/2017"}, {"body": "stefanpenner html cssember", "d": "6/2017"}, {"body": "stefanpenner default indexhtml edited steps reproduce issue network panel new project", "d": "6/2017"}, {"body": "interesting also seeing chrome firefox browser using", "d": "6/2017"}, {"body": "stefanpenner using google chrome version", "d": "6/2017"}, {"body": "stefanpenner saw post double css loading chrome css links generated ember app integrity attribute also tested firefox noticed double loading problem us well", "d": "6/2017"}, {"body": "ya suspect chrome bug integrity checks", "d": "6/2017"}, {"body": "may need disable default", "d": "6/2017"}, {"body": "stefanpenner way disable integrity attribute via build param disable chrome releases fix", "d": "6/2017"}, {"body": "brandonwtrility two ways remove loose integrity add tag avoids double load problem", "d": "6/2017"}, {"body": "stefanpenner removed emberclisri package checked problem resolved seems good temporary solution thanks suggestion", "d": "6/2017"}, {"body": "brandonwtrility recommendation updated add tag avoids double load problem also think may want change embercli blueprint default", "d": "6/2017"}, {"body": "stefanpenner excellent take suggestion cleaner cli upgrade path thanks help", "d": "6/2017"}, {"body": "brandonwtrility thanks reporting totally unaware issue", "d": "6/2017"}, {"body": "viniciussbs believe design changing would likely result breakage could see us changing symbols fully supported across target environment meantime may need rely alternatively copy function", "d": "6/2017"}, {"body": "thinking extracting current behavior function default implementation dev could overwrite new function implementation needed would change something like javascript function isgraphqlkey key let keys typename return keysindexof key function isemberinternalkey key return keysubstring amp amp isgraphqlkey key would rely instead checking implement copy function though", "d": "6/2017"}, {"body": "twiddle", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "hello krnbatta closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "6/2017"}, {"body": "hi thanks letting us know problem future reference likely go guides issue tracker asked one support channels since support question warning prevents thing running would say warning appropriate might work might also problems also would nice either tell version node actually needs installed andor include recipe quick start makes sure right node version error message say version install mostrecent active lts moment also install ember section links full installing ember guide details hope give ember another try ca nt switch node moment ember cli released upcoming days support node", "d": "6/2017"}, {"body": "update even happens relationships sideloaded include param json api says calling render twice looking hotel modelisloaded property", "d": "6/2017"}, {"body": "sorry keep adding ticket able fix issue adding check method component checking isloaded property relationship somehow fixes obviously desirable wanted keep ticket update code added component fixes issue nt even know begin debug", "d": "6/2017"}, {"body": "starting concern another completely separate app removed nodemodules folder fresh npm install places starting something change way gets handled nt previously happening relationships get loaded called template syntax somemodelrelationshipproperty", "d": "6/2017"}, {"body": "found due update emberdata changing emberdata version fixed issue", "d": "6/2017"}, {"body": "thank thorough reporting links issues let track problem ember data issues", "d": "6/2017"}, {"body": "mean pass component class", "d": "6/2017"}, {"body": "artificial exemple clarify", "d": "6/2017"}, {"body": "would feature request would need go rfc process described contributing guide input still easily generable using string somecomponent", "d": "6/2017"}, {"body": "thank serabe pointing however string cut lot situations would save day could pass partially instantiated component third party library component parameters possible htmlbars javascript", "d": "6/2017"}, {"body": "bad idea rwjblue chancancode think", "d": "6/2017"}, {"body": "ya seems reasonable", "d": "6/2017"}, {"body": "loading substate sibling template loaded switched route nested inside would show transitioning child routes cc alexspeller", "d": "6/2017"}, {"body": "would add loadinghbs application route seems like nt make sense edit clarity works routes actually defined catchall routes catchall issue", "d": "6/2017"}, {"body": "tsteuwer sample application catchall route top level meaning path catchall route route expected behaviour sure behaviour running unexpected", "d": "6/2017"}, {"body": "look twiddle added saying route work ca nt catchall without first creating another route index", "d": "6/2017"}, {"body": "tsteuwer think route needs called look guides page see lookup hierarchy loading routes", "d": "6/2017"}, {"body": "confirm seeing errors rather console log messages right", "d": "6/2017"}, {"body": "ah yes sorry clear anything critical causes logged rollbar every page load filling quota pretty quickly", "d": "6/2017"}, {"body": "confirm seem error app also", "d": "6/2017"}, {"body": "looking couple days simple projects something like shell npm install g embercli ember new project add route couple links reproduce please vladucu pedrokost share information projects thank", "d": "6/2017"}, {"body": "comment checks incognito mode ember extension enabled machine thanks", "d": "6/2017"}, {"body": "thanks trying replicate issue serabe today unable duplicate issue nt appeared production past days change time issue last present unrelated commit unable invest much time end week meantime attaching photo rollbar showing errors occurred also also find source code app specifically packagejson file", "d": "6/2017"}, {"body": "new build ember version changed access diff prod versions thanks", "d": "6/2017"}, {"body": "ember version never nt change seems issue started commit commit enabled sourcemaps upgraded changed realized another report rollbar showing issue much frequent previously thought unfortunately nt tag production deploys tend deploy regularly almost commit pinpoint exact commit", "d": "6/2017"}, {"body": "seem able replicate issue production app opening page incognito mode seems come file bodyclassjs emberbodyclass library", "d": "6/2017"}, {"body": "vladucu use rollbar well seems emberdebug returns reason", "d": "6/2017"}, {"body": "serabe yes use rollbar manually ignored errors new build ember version changed access diff prod versions really upgrade noticed", "d": "6/2017"}, {"body": "opened pr fix link", "d": "6/2017"}, {"body": "closed cc rwjblue", "d": "6/2017"}, {"body": "need remove line appjs related pull request sure released embercli version", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "solution issue anyone looking attribute actually capital b looks like chrome parsed element corrected badly named attribute made render properly hand inserted dom ember get treatment browser attribute simply ignored curse chrome trying help hiding dumb mistakes", "d": "6/2017"}, {"body": "thank sharing solution", "d": "6/2017"}, {"body": "based unit integration tests run initializers need unit test something like using explicitly generally better leads understandable code", "d": "6/2017"}, {"body": "thanks reporting including nice reproduction fwiw test canary uses pretty different architecture within glimmer slated ember issue nt exist", "d": "6/2017"}, {"body": "fixed lts", "d": "6/2017"}, {"body": "mention bug also affect", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "addonon using pods structure refactored use default structure resolved problem", "d": "6/2017"}, {"body": "supported ember currently supports ie im mistaken would polyfill added im sure would", "d": "6/2017"}, {"body": "could existing implementation used ie sucks performance wise work", "d": "6/2017"}, {"body": "ensure compatibility two different algorithms worth core team", "d": "6/2017"}, {"body": "would nt polyfill already present later script usage weakset", "d": "6/2017"}, {"body": "yes addon still needed rfc ember simply made addons job tad bit easier allowed rely public apis specifically believe step usage instructions readme longer needed ember since nt really bug ember going close issue lets continue discussion", "d": "6/2017"}, {"body": "awesome thank sat jun pm robert jackson notifications githubcom wrote yes addon still needed rfc ember simply made addons job tad bit easier allowed rely public apis specifically believe step usage instructions readme longer needed ember since nt really bug ember going close issue lets continue discussion dollarshaveclubemberrouterscroll receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "hit bug pretty frustrating hit good error message triggers error even didinsertelement way debug using standard console errors finally happens production build times long takes forever track addition strange occurs production actually kind scary difficult know else might going wrong production difference builds moved dev looked great production completely failing without reasonable way trace error essentially unbuild entire app multiple components issue completely unprecedented kind bug track", "d": "6/2017"}, {"body": "show code reproduce", "d": "6/2017"}, {"body": "homehtml \u804a\u804a item", "d": "6/2017"}, {"body": "sorry mean code implementation text box", "d": "6/2017"}, {"body": "homehtml", "d": "6/2017"}, {"body": "homets import component angularcore component templateurl homehtml export class homepage items constructor thisinitializeitems initializeitems thisitems amsterdam bogota buenos aires cairo dhaka \u4eba\u6c11 geneva genoa glasglow hanoi hong kong islamabad istanbul jakarta kiel kyoto le havre lebanon lhasa lima london los angeles madrid manila new york olympia oslo panama city peking philadelphia san francisco seoul taipeh tel aviv tokio uelzen washington getitems ev reset items back items thisinitializeitems", "d": "6/2017"}, {"body": "enough", "d": "6/2017"}, {"body": "well using emberjs suggest try googling problem file issue ionic angular necessary please close issue", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "closing thank yo cryrivers", "d": "6/2017"}, {"body": "yes switch methods tab thers nothing", "d": "6/2017"}, {"body": "known bug current implementation nt addressed transitioning emberapidocs check", "d": "6/2017"}, {"body": "locks shall close", "d": "6/2017"}, {"body": "confirm thanks reporting sorry confusion", "d": "6/2017"}, {"body": "reopening issue fully solved need way app blow still looking way without logging defaulting empty value", "d": "6/2017"}, {"body": "glad ember moving classes used react moved classes large improvement native classes get rid super problems entirely", "d": "6/2017"}, {"body": "fastfedora big blocker us decorators going push forward call day", "d": "6/2017"}, {"body": "question rwjblue occur master", "d": "6/2017"}, {"body": "believe longer use single shared object time freeze new object fine", "d": "6/2017"}, {"body": "see makes sense thanks looking", "d": "6/2017"}, {"body": "thanks empathy sides writing using platforms understand line needs walked understand actual behavior due implementation rfc may need created implement fix willing write rfc makes sense also limited time issue recognized bug wo nt waste time two issues actual behavior different expected behavior actual behavior breaks principle encapsulation expected behavior would every property bound template would operate fact one property behaves differently unexpected even makes sense implementation perspective mentioned actual behavior depends implementation computed property used implementations model updates template fine others nt update makes ember apps use computed properties model unpredictable need examine implementation determine update fragile changes implementation cause template updates silently break happy write rfc something recognized problem good chance addressed caveat project using ember another month long process wo nt around see meantime specific usecase created asynccomputed function allows properties updated template though right used objects arrays scalar values", "d": "6/2017"}, {"body": "hello borispetrov closing since emberjs bug please go help devrouter channel slack registered use slackin app thank", "d": "6/2017"}, {"body": "bumping bins shows issue", "d": "6/2017"}, {"body": "going released npm", "d": "6/2017"}, {"body": "yep released npm time bower roughly hours ago", "d": "6/2017"}, {"body": "rwjblue could please clarify packages need update fix console error created embercli app thanks", "d": "6/2017"}, {"body": "alexanderkapelyukhovskiy embersource atleast believe", "d": "6/2017"}, {"body": "confirm", "d": "6/2017"}, {"body": "nt embersource npm dependencies updated bower ember package looks like helped error however strange error left think nt connect subject issue one question issue due usage bower package fix remove bower project", "d": "6/2017"}, {"body": "alexanderkapelyukhovskiy upgraded time ago like noticed bower packages moved npm get list changes bowerjson packagejson like looks like embernewoutput yet basically", "d": "6/2017"}, {"body": "robishere alexanderkapelyukhovskiy ah forgot bower version ember bower also resolve issue", "d": "6/2017"}, {"body": "implement emberapplicationinstance emits useful information avoids circular reference", "d": "6/2017"}, {"body": "jamesdixon ping", "d": "6/2017"}, {"body": "left comment", "d": "6/2017"}, {"body": "work arounds getting issue code looks like appcontrollerswidgetinstancesjs javascript import ember ember const computed ember export default embercontrollerextend applicationcontroller emberinjectcontroller application widgetcontroller emberinjectcontroller widget shop computedreadonly applicationcontrollermodel widget computedreadonly widgetcontrollermodel instance computedalias model configurationslug computedreadonly widgetcontrollerconfigure testsunitcontrollerswidgetinstancestestjs javascript import modulefor test emberqunit modulefor controller widgetinstances unit controller widgetinstances specify units required test needs controller foo test exists function assert const controller thissubject assertok controller error", "d": "6/2017"}, {"body": "djones work around issue", "d": "6/2017"}, {"body": "locks thanks response fix error", "d": "6/2017"}, {"body": "even comment get indicates application controller specific seems work fine browser tests", "d": "6/2017"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "6/2017"}, {"body": "problem violation added nonpassive event listener scrollblocking mousewheel event consider marking event handler passive make page responsive", "d": "6/2017"}, {"body": "related question", "d": "6/2017"}, {"body": "remove events via app needs events use passive listeners mousewheel touchstart touchmove events block scroll via preventdefault matter passive listening add didinsertelement remove willdestroyelement component", "d": "6/2017"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "6/2017"}, {"body": "looks like fixed", "d": "6/2017"}, {"body": "confirm adamjmcgrath", "d": "6/2017"}, {"body": "sorry middle pacific back september", "d": "6/2017"}, {"body": "work adamjmcgrath check today", "d": "6/2017"}, {"body": "sorry delay confirm working twiddle behaves thanks letting us know", "d": "6/2017"}, {"body": "leooo yes ember though something fixed", "d": "6/2017"}, {"body": "long shot ran issue accidentally overriding native ember object class via something like causing model hook called fail reason exception thrown mentioned dynamic segments present think similar alvincrespo mentions comment", "d": "6/2017"}, {"body": "lrdiv yeah think happening", "d": "6/2017"}, {"body": "brunowego yeah error getting case seems misleading exception actual bug", "d": "6/2017"}, {"body": "workarounds implemented inside routes trying use determine users authenticated redirect login query parameters get back issue blocking", "d": "6/2017"}, {"body": "think something like would", "d": "6/2017"}, {"body": "alexspeller tried based suggestion query parameters still dropped", "d": "6/2017"}, {"body": "query param defined controller", "d": "6/2017"}, {"body": "nt use controllers nt use know deprecated", "d": "6/2017"}, {"body": "erichiggins incorrect ca nt use query params without controllers deprecated fact using autogenerated avoiding controllers ember point", "d": "6/2017"}, {"body": "alexspeller ok thanks heads could point documentation query params needing defined controllers order redirects pass along must missed", "d": "6/2017"}, {"body": "nothing redirects redirect thing probably red herring query params defined controllers work look guides section query params explains use", "d": "6/2017"}, {"body": "adding following controller route worked hopefully helps others worth documentation redirecting state query parameters must declared destination controller mentioned query parameter docs probably missed making explicit docs may help ember newbies like", "d": "6/2017"}, {"body": "anyone coming across search seems work attribute please check docs info", "d": "6/2017"}, {"body": "ksnyde disable app level using event delegation would breaking change events passive subset events prevent scroll preventdefault maybe event handling code plugin adding listener mousewheel touchstart etc common dragzoom code", "d": "6/2017"}, {"body": "would love see fix done currently updating app quit big passing fix deprecation warning run tests app gon na hard know refactoring done correctly", "d": "6/2017"}, {"body": "years changed legacy addon longer solution adding id application object results wrapping elements instead one mess child elements become grandchild elements breaking styling hierarchy element needing targeted generic extreme ember app wrap redundant justincase solution legacy sites yet lead ineverycase layout styling black hole every ember site since element foundation stone site hack workaround required achieve semantic styling desired leaves feeling like used microsoft frontpage build heart app styling methods see others employ achieve letterbox holy grail layout reminiscent decade ago even wellestablished styling options flexbox employed targeting via pseudoelement css selector index leaves site mercy addon dynamic element injection emberwormhole potentially hijacking site styling reason emberapplication class also fulfil needs wrap perhaps including emberview class edit workaround option anyone else adores handicap means fullpage region use flex fluid responsive layout caters browser issues would need scss emberapplication display flex minheight flexdirection column height width emberview firstchild display flex minheight flexdirection column height width", "d": "6/2017"}, {"body": "issue well tell null causing incorrect cache key set transitioning slow model loading template object undefined parent route setup method condition never fulfilled", "d": "6/2017"}, {"body": "still seems issue ember passing property helper cause helper recompute composition array changes eg add item remove item severe limitation workarounds pleasant", "d": "6/2017"}, {"body": "offtopic landed symptoms check problem mentioned faced situation model seems reloaded though setupcontroler fired see changed data conttroller strange could see changed data ember inspector really happened findall promise model event resolved immediatelly existing store data setupcontroller fired old data meantime store reloading api effect call refresh twice get data available controller solution add reload true findall params", "d": "6/2017"}, {"body": "pwfisher thanks would note scratched head looking code realized needed instead also helped", "d": "6/2017"}, {"body": "stumbled across still missing complementary would pr adding methods accepted", "d": "6/2017"}, {"body": "replaced never looked back set component helper route service need", "d": "6/2017"}, {"body": "rwjblue solution implemented yet somehow custom helpers still act arrays mutated without passing another property like array length ember", "d": "6/2017"}, {"body": "know issue old closed legitimate reasons like example like wrap functionality around component provided addon passed block allowing layoutname without error ignoring bit confusing using ember cli", "d": "6/2017"}, {"body": "kanderek yes came across behaviour though", "d": "6/2017"}, {"title": "create wiki page steps deprecation", "body": "important information repeated maintainers guiding people new contributing repo would good new contributors central place steps pitfalls deprecate existing method documented", "num": "3706", "d": "6/2017"}, {"title": "", "body": "description link test case", "num": "3705", "d": "6/2017"}, {"title": "fails maximum call stack size exceeded", "body": "open html file simple code fails documentqueryselectorall works expected", "num": "3704", "d": "6/2017"}, {"title": "jquery data cache may memory leak", "body": "description long run web app much event add removebut event remove use thiscache unlock end hundred thousand long cache array chrome profiler tool cache occupy lot memoryas time go situation worse link test case", "num": "3703", "d": "6/2017"}, {"title": "inconsistent behaviour using data elm elm data", "body": "description using data attributes see weird behaviour first time access element data via see dom dataattributes calling show correctly calling return object equal first object equal second tested jquery link test case", "num": "3701", "d": "6/2017"}, {"title": "incredible shrinking scrollboxes", "body": "worked everywhere except investigation traced root cause mishandling browser particularly combination specifically seems always report content box dimensions even borderbox elements lack accounting scrollbars means roundtrip set operations shrink elements", "num": "3699", "d": "6/2017"}, {"title": "outerheight differs chrome", "body": "description outerheight differs chrome test case height shows chrome link test case", "num": "3698", "d": "6/2017"}, {"title": "exception jqueryeventspecial handleobjorigtype mousescroll", "body": "eventjs jqueryeventspecial scroll event uncaught typeerror jqueryeventspecial handleobjorigtype intermediate value handle handleobjhandler apply function dispatch elemdatahandle", "num": "3697", "d": "6/2017"}, {"title": "exception jqueryeventspecial handleobjorigtype mousescroll", "body": "mouse scroll uncaught typeerror jqueryeventspecial handleobjorigtype intermediate value handle handleobjhandler apply function dispatch elemdatahandle insert jqueryeventspecial scroll", "num": "3696", "d": "6/2017"}, {"title": "jquery stop propagation native eventhandlers", "body": "description eventhandlers registered natively called even called used using native correctly stops propagation link test case following test case triggered page loaded cases event bubbling prevented still triggered eventhandler link stackoverflow discussion", "num": "3693", "d": "6/2017"}, {"title": "invalid pagex pagey properties returned nonmouse events firefox", "body": "description probably firefox issue jquery issue seems regesseion something jquery used handle longer latest version jquery finding invalid properties returned firefox events contain data issue manifests firefox chromium ie nt seem problem firefox include invalid data raw event causing bug one jquery plugins stevenbennerjquerypowertip link test case click input note output checks type value property event fired multiple versions jquery well raw dom event firefox windows addons firefox linux lots addons chromium internet explorer", "num": "3692", "d": "6/2017"}, {"title": "formprop action returns form gt input name action instead action attribute", "body": "description following consider form submit function consolelog prop action result string foobar returns object htmlinputelement link test case", "num": "3691", "d": "6/2017"}, {"title": "param key lt corrupts value", "body": "tested jquery version chrome firefox try console returns note instead", "num": "3690", "d": "6/2017"}, {"title": "chrome focusin triggert input field autocomplete", "body": "description user login credentials stored chrome browser autofills form focusin eventhandler triggered without jquery event triggert issue exists since last version chrome link test case open link fill form credentials save credentials chrome open showiframe chrome fills form iframe log see jquery triggerin focusin event native event listener event triggered", "num": "3689", "d": "6/2017"}, {"title": "function", "body": "", "num": "3687", "d": "6/2017"}, {"title": "synchronous xmlhttprequest", "body": "deprecation synchronous xmlhttprequest main thread deprecated detrimental effects end user experience help check line version hard warning", "num": "3686", "d": "6/2017"}, {"title": "feature request jquery group", "body": "hi folks feature already exists please close issue require access jquery internals jquery benefit feature yes avoid repetitive tasks like need already served plugin nt found plugin bad idea make plugin change existing api support best practice yes follows dry concept thinking codepen example regards", "num": "3685", "d": "6/2017"}, {"title": "done callback called order", "body": "description resolved deferred done callback immediatly invoked unlike callback wait scope end first argument done callback thought behavior would identical normal link test case", "num": "3684", "d": "6/2017"}, {"title": "different versions jquery different result element width", "body": "description element width use attr transform rotatey width ought change element width element width link test case", "num": "3683", "d": "6/2017"}, {"body": "timmywil im unable create new wiki page maybe stated pointers could go creating wiki page", "d": "6/2017"}, {"body": "created opened wiki editing might temporary depending whether get spam", "d": "6/2017"}, {"body": "documentqueryselectorall works expected however dies way chrome edge takes minutes seconds give answer return firefox runs almost instantaneously seems like issue independent jquery", "d": "6/2017"}, {"body": "jquery fail stack exceeded least function rewritten use recursion", "d": "6/2017"}, {"body": "look repro case gave fails chrome well jquery type console", "d": "6/2017"}, {"body": "however seems work let talk meeting", "d": "6/2017"}, {"body": "going try dropping use loop already sizzle ie lt fallback perf nt issue code end shorter", "d": "6/2017"}, {"body": "thanks opening issue however need issues test cases demonstrate reproduce problem work please provide test case reopen", "d": "6/2017"}, {"body": "working documented lowlevel method retrieve data attributes unless convenient data method already retrieved", "d": "6/2017"}, {"body": "look video looks different get confused step come back cant yet", "d": "6/2017"}, {"body": "thanks opening issue result correct border outer div inner div really", "d": "6/2017"}, {"body": "reopen issue test case bad issue slightly wrong bug provided better test case fixed title description bit", "d": "6/2017"}, {"body": "please work test case minimum removing css html elementsattributes nt affect result", "d": "6/2017"}, {"body": "done new test case needed reproduce issue", "d": "6/2017"}, {"body": "thanks updated test case confirm behavior ie changed jquery", "d": "6/2017"}, {"body": "see inspector notice assume coming default stylesheet add goes away guarantee browsers default stylesheet even possible measurements might different due things like font substitution", "d": "6/2017"}, {"body": "dmethvin biggest issue behavior ie changed jquery looks like unintended breaking change", "d": "6/2017"}, {"body": "please look programming help stack overflow", "d": "6/2017"}, {"body": "fix die", "d": "6/2017"}, {"body": "jquery never able guarantee full interoperability nativevsjquery event handlers best think jquery event subsystem layer top native events happening triggering fake jquery click associated native use track jquery whether propagation stopped default prevented although stopped end truncated bubbling call native dom event calls native handler", "d": "6/2017"}, {"body": "switched using native events triggering could handle scenario expense several serious breaking changes jquery event subsystem also simple lookup know events magically understood specially processed dom click versus custom mycustomevent constructor use etc since would breaking api anyway easiest thing would make caller construct event would nt need lookup", "d": "6/2017"}, {"body": "agree dmethvin bit surprising working designed see trigger documentation plain objects dom objects triggered event name matches name property object jquery attempt invoke property method event handler calls behavior desired use instead correctly prevents jquery running handlers ancestors prevent browser creating bubbling event invoke execute default action like would invoke submit form even propagation stopped since seems like nt want default action use instead invoke addition return listener calls behalf", "d": "6/2017"}, {"body": "yes says nt need stop propagation beyond event target want run jquery handlers without preventing default action use lot tracking systems google analytics facebook etc seem attach events document", "d": "6/2017"}, {"body": "dmethvin naive assumption tells something could done look following lines srceventtriggerjs could nt something like prevent retriggering event since already bubbled jqueryeventtriggered type eventispropagationstopped add native event handler stopspropagation elem type eventispropagationstopped remove event listener added jqueryeventtriggered undefined think makes sense could try work yes running tests find tests relating function", "d": "6/2017"}, {"body": "caillou something like might work determine stopspropagation would need remember element stopped", "d": "6/2017"}, {"body": "dmethvin loot ends line srceventtriggerjs need keep track last node executed upon something like use counter access last node iterated", "d": "6/2017"}, {"body": "dmethvin one problem nt seem find tests relating code additional test cases outside repository test code update figured run integration tests addition unit tests", "d": "6/2017"}, {"body": "tests try locally see work", "d": "6/2017"}, {"body": "dmethvin created branch test reproduce bug proposal bugfix would proceed create pr", "d": "6/2017"}, {"body": "stevenbenner pinged twitter webcompat account via see properly undefined focus event reason seeing jquery transparentlylazily return properties original event test case shows value firefox", "d": "6/2017"}, {"body": "thanks interested hear peoples thoughts based mdn docs suspect properties included firefox focusevent inherits uievent implementation includes uieventpagex note doc page warning nonstandard properties probably trustworthy coming mouseevent eg mouseeventpagex certainly looks like firefox spec one type thing jquery normalize fix fairly trivial implement hacky since value properties trusted workaround compare event type list events would expected include cursor position data ignore coordinate properties included events matched", "d": "6/2017"}, {"body": "browsers fast update cycle nowadays compat issue fixed firefox relatively quickly seems like obscure enough issue code sensitive able check since events occur high frequency jquery tries keep extra code path", "d": "6/2017"}, {"body": "denschub wisniewskit might idea stevenbenner start specific version firefox", "d": "6/2017"}, {"body": "recent change event remove pagexpagey fill event object ah also safari version safari tech preview release safari webkit return results firefox", "d": "6/2017"}, {"body": "nt want keep list appropriate event types even blacklist futureproof seems clear right thing even returning property value lazily meaning longer copy property ahead time step right direction possibly best course take since value nt reliable useful user high priority issue unlikely change anything", "d": "6/2017"}, {"body": "notice problem indicates something caused jquery see several years similar tickets years ago something jquery fix across browsers something easy document jquery level applies jquery apis see web developers need understand problem whether use jquery", "d": "6/2017"}, {"body": "nevermind javascript numbers bits floating point numbers means ca nt represent javascript java longs size mantissa bits means number ca nt exactly represented javascript number js crazyness", "d": "6/2017"}, {"body": "js crazyness", "d": "6/2017"}, {"body": "crazyness use floats default everything", "d": "6/2017"}, {"body": "ca nt reproduce running incognito ensure plugins interfering also added focus event", "d": "6/2017"}, {"body": "incognito mode browser nt autofill form screenshots chrome page see chrome jquery triggers focusin event reason focus event triggert without jquery cant reproduce issue", "d": "6/2017"}, {"body": "strange still ca nt reproduce extra event chrome windows anyone else", "d": "6/2017"}, {"body": "followed steps also reproduce chrome mac os closing worksforme", "d": "6/2017"}, {"body": "reopen bug timmywil dmethvin chrome autofill form step password nt stored correctly", "d": "6/2017"}, {"body": "tested bug completly new installation chrome reproduce issue external plugins installed", "d": "6/2017"}, {"body": "trust look like bug scripts rather jquery issue making noises b nobody able help unless provide enough context suggestion closing one switch portals eg stackoverflowcom", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "please look help stack overflow rhyw suggested also afaik none jquery maintainers speaks chinese reports incomprehensible us", "d": "6/2017"}, {"body": "\u8fd9\u91cc\u662f jquery issue \u90fd\u662f\u4e0e\u6539\u8fdb issue \u5c31\u662f\u672c\u9879\u76ee\u63d0\u4ea4 issue", "d": "6/2017"}, {"body": "btw thank rhyw techquery helping communicate chinese bug reporters appreciated", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "\u53ef\u4ee5\u52a0\u5165\u4ee5\u4e0b qq freecodecamp \u4e2d\u6587\u793e\u533a \u5b66\u5458 freecodecamp \u6210\u90fd\u793e\u533a", "d": "6/2017"}, {"body": "\u597d\u7684", "d": "6/2017"}, {"body": "\u8c22\u8c22", "d": "6/2017"}, {"body": "rhyw mgol lots jquery users web frontend coders china less confidence english fortunately many chinese programmers working improve capable international communication", "d": "6/2017"}, {"body": "warning generated browser jquery best avoid synchronous xhr", "d": "6/2017"}, {"body": "going find plugin literally reason still want support old browsers use nt want index first", "d": "6/2017"}, {"body": "ok main idea merge element variables one action example would class myclass", "d": "6/2017"}, {"body": "matter end result exactly also example existing method", "d": "6/2017"}, {"body": "scottgonzalez many thanks exactly meant", "d": "6/2017"}, {"body": "intended see", "d": "6/2017"}, {"body": "transforms taken account purpose see", "d": "6/2017"}, {"body": "docs height say dimensions may incorrect page zoomed user browsers expose api detect condition consistent experience", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat one thing point use case showed working failing stop users switching zoom levels breakage appears specifically chrome assuming something changed height calculated respect break occur zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases case issue fixed subtracting calculate padding top bottom calculated height based specific css", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know", "d": "6/2017"}, {"body": "fact used work broke matter concerned may inadvertently affect aspects dimensions zoom involved get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing", "d": "6/2017"}, {"body": "maybe need delve code try work code changed breaking way change breaks code way need find solution way seems avoid jquery dimension related code fear much code may broken kinda happy jquery sure change happened way broke things users case use chrome start testing zoomin browsers sure matters unsupported get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "doubt change math calculating dimensions possible change ifwhen fix land things like", "d": "6/2017"}, {"body": "raminfp responsible source content parse", "d": "6/2017"}, {"body": "infinite number script injection exploits use jquery jquery designed help inject scripts developer must aware filter input example js tell function tellme click function documentbody append name name val", "d": "6/2017"}, {"body": "thank opening issue likely make changes", "d": "6/2017"}, {"body": "thanks opening issue first releases repo anymore isolated separate repo see however releases nt returned github api repo either draft release notes github jquery blog regardless simply use instead", "d": "6/2017"}, {"body": "krinkle smack middle interface behavior odd crux promise actually resolved another promise counterintuitive interpretation dealing standard resolved distinct settled thenables never fulfillment values thus never provided onfulfilled callbacks resolution intercepts enqueues promiseresolvethenablejob instead fulfilling promise however jquery deferreds restriction ie allow fulfillment thenables therefore nt need concept fulfillment separate resolution backwards compatibility motivated us continue supporting even standards compliance requires brings us analogous unwraps values necessary short dangerous use andor thenablefulfilled deferreds either wrap thenables eg arrays nonthenable objects update callbacks handle nonthenable arguments eg instead team discussion also raised need improved documentation seems cover part thinking insufficient place text could appeared would clarified behavior", "d": "6/2017"}, {"body": "suppose nice andor clearly state result providing thenable resolve return value afaik returning passing thenable cases supported standardscompliant question tested using latest chrome js promiseresolve promise promisestatus resolved promisevalue b promiseresolve promise promisestatus resolved promisevalue c new promise function resolve resolve promise promisestatus resolved promisevalue promiseresolve gt return b promise promisestatus resolved promisevalue jquery behave b behaving differently kind makes sense backcompat also case knowingly promise one well use directly perhaps problem case happened c imho fair situation eg manually promisifying async process given back thenable value one internal async steps may even happen part upstream change eg something used sync becomes async via promise understand jquery internally b c say lot likely b happens wants backcompat nounwrapping situation c c feels likely happen calling code may return promise expected unwrapped js deferred resolve adone val gt consolelog val b deferred resolve bdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 c deferred function df dfresolve cdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 deferred resolve gt return ddone val gt consolelog val feel calling lot like returning inside chain callbacks provide next value may may also promise waited suppose could worked around using either way aside explicit documentation new comers jquery unwrapping would good also point jquery specifically nt unwrap promises perhaps deprecate fix breaking change jquery", "d": "6/2017"}, {"body": "thanks moved documentation needs guess keep issue open either always unwrap thenables decide make change", "d": "6/2017"}, {"body": "happy look pr actually see effects changes tests unlikely decide make changes frankly nt want spend much time general philosophy utility functions like obviously ca nt guard everything guard common cases case nt common anymore never common remove simplify best way convince code given inclined close issue reopen pr comes along probably worth noting many times utility function simplifications like get codebase fixing larger issue uses function", "d": "6/2017"}, {"body": "prs accepted like contribute", "d": "6/2017"}, {"body": "shashankanataraj absolutely", "d": "6/2017"}, {"body": "add support arrays multiple arguments multiple arguments one like classlist methods would vote", "d": "6/2017"}, {"body": "multiple arguments might conflict second boolean argument", "d": "6/2017"}, {"body": "seems like nt support multiple classes addremove support still vote nt support", "d": "6/2017"}, {"body": "jbedard discussed already present accepting positional parameters would require way code would align worse standard funkiness like discussion seen", "d": "6/2017"}, {"body": "long time ago info put ticket wanting pick", "d": "6/2017"}, {"body": "going revisited", "d": "6/2017"}, {"body": "issue similar usecase reenberg solve issue specific workaround", "d": "6/2017"}, {"body": "per blog post links change means longer option jquery going forward recommended way cancelling requests", "d": "6/2017"}, {"body": "jfbrennan ticket nt say anything", "d": "6/2017"}, {"body": "dmethvin per blog post links makes sound like removed along nonpromise methods sorry misunderstanding one upvotes says jquery ajax method returns promise without extra methods like abort", "d": "6/2017"}, {"body": "point url official jquery documentation says deprecated removed nt know nt assume stackoverflow answer correct", "d": "6/2017"}, {"body": "says removed specialcase deferred methods jqueryajax jqxhr object promise also extra methods like abort stop request made users increasingly embrace promise pattern asynchronous work like ajax idea special cases promise returned jqueryajax increasingly bad idea kind implies wasis chopping block votes says removed links blog post nt think one misunderstanding might good jquery team clarify although mentioned nt actually removed understand gospel truth seems somewhat widespread misunderstanding gone think blog post may cause", "d": "6/2017"}, {"body": "get original selector string used invoke plugin within plugin example would like return somediv called", "d": "6/2017"}, {"body": "closed ticket nt right place look support general string represents collection plugin receives eg", "d": "6/2017"}]