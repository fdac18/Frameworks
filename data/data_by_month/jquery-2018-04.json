[{"title": "typo report", "body": "description found typo corejs make pr link test case", "num": "4059", "d": "4/2018"}, {"title": "remove deprecated methods", "body": "description deprecated methods like remember remove looking good start apis remove link test case", "num": "4056", "d": "4/2018"}, {"title": "chrome edge reporting invalid certificate codejquerycom", "body": "description currently problems loading jquery cdn directly opening chrome results net errcertcommonnameinvalid subject sslhwcdnnet issuer comodo rsa domain validation secure server ca expires jan current date apr pem encoded chain begin certificate end certificate begin certificate end certificate begin certificate end certificate link test case", "num": "4050", "d": "4/2018"}, {"title": "ready longer executing synchronously", "body": "good day realized ready longer executing synchronously gather done handlers executed even one fails one handler would like execute synchronously want load execute handler ready done work around get described behavior", "num": "4048", "d": "4/2018"}, {"title": "rtagname wrong regular expression", "body": "description think regular expression srcmanipulationvarrtagnamejs problems return first html tag failed link test case", "num": "4047", "d": "4/2018"}, {"title": "object tag svg ignored contents", "body": "first thank much project work description regression could introduced commit returning longer possible access document content svg provided attribute example would stop working since version js var svgobject svgobject svgobjecton load function svgobjectcontents find svg test link test reproduce bug would need domain nt possible upload platforms provide test link however prepared pr fix test case provided following js qunittest contents function assert assertexpect", "num": "4045", "d": "4/2018"}, {"title": "wrong outerheight outerwidth position calculation ie", "body": "methods return different values chrome see values sample chrome outerheight positiontop ie outerheight positiontop html function text td first outerheight text td eq position top outerheight positiontop suppose issue related", "num": "4044", "d": "4/2018"}, {"title": "wrong outerheight outerwidth calculation textarea ie", "body": "starting jquery methods become returning wrong value ie checked ie see results method sample jquery ie chrome jquery chrome jquery ie html function output text textarea outerheight outerheight", "num": "4043", "d": "4/2018"}, {"title": "callback function parameters changes position map called", "body": "description may caused callbackcall elem elem may callbackcall elem elem make map function act called different method link test case", "num": "4042", "d": "4/2018"}, {"title": "strange behavior deferredthen chain jquery", "body": "using jquery executed following script console google chrome javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone arguments donehandler called fail function consoleerror afail arguments case b deferred resolve function return resolved done function consolelog bdone arguments fail function consoleerror bfail arguments failhandler called case b thought donehandler would called like case fact called failhandler argument rejected", "num": "4040", "d": "4/2018"}, {"title": "please add license github settings", "body": "please add license github settings repository currently github could identify project licence shown interface available via api also ref", "num": "4039", "d": "4/2018"}, {"title": "jquery breaks running window text iframe different doamin exist page", "body": "running text window cors iframes page throws exception str open page least one iframe different domain run window text expect happen return empty stringundefined actually happens throws exception corssecurity browsers affected webkitgecko based least minimal testcase happening seems sizzelgettext function assumes parameter sent nodetype property must array start iterating element indexes b adding iframes document reference also window object window n n number frames page sending window object iterates also inaccessible windows try access nodetype prop throws exception", "num": "4038", "d": "4/2018"}, {"title": "feature request warn selector returns zero matches", "body": "feature request jquery warn selector returns zero matches somehow ask mostly typically selector statement start chain statement ends noop element idelementid nt exist whatever reason document ready server didnt emit etc problem noop subtle difficult log test first breaks chain suppose could extend jquery particular implementation breaks chain perhaps switching implementation allows chaining requires inserting exists jquery code jqueryfnexists function thislength consolewarn jquery warning selector found zero items thisselector return elementid exists click function e consolelog click testing start empty dom check consolelog invoked jquery warning selector definitelynoclassdefined returns zero items feel like could easily plugged patch releases since breaking change edit started", "num": "4037", "d": "4/2018"}, {"title": "spa jquery", "body": "expect future version jquery allow develop single page apps using jquery syntax helpful lots jquery developers", "num": "4036", "d": "4/2018"}, {"title": "memory leak ie screens loaded iframe", "body": "description using jquery migration script per discussion microsoft support team guessing ie browser memory leak screens loaded iframe due circular reference ui elements jquery please find reference image url suspecting jquery holding handle orphan dom iframe window references link test case", "num": "4034", "d": "4/2018"}, {"title": "function", "body": "try run code like line code passes without exceptions click div error js console verry difficult diagnose uncaught typeerror jqueryeventspecial handleobjorigtype handle handleobjhandler apply function think jquery check typeof throw exception function", "num": "4033", "d": "4/2018"}, {"body": "pr", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "looking", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "seems resolved", "d": "4/2018"}, {"body": "yes work assuming attach event fires followups stackoverflow please since bug report", "d": "4/2018"}, {"body": "internal jquery code actual bug experiencing could provide test case js bin jsfiddle", "d": "4/2018"}, {"body": "actually may bug return correct value execute buildfragmentjs return return maybe tag one letter also needs warp future ca nt get", "d": "4/2018"}, {"body": "think issue related jquery demo switching jquery amp jquery show position calculation longer includes table position", "d": "4/2018"}, {"body": "yes jquery", "d": "4/2018"}, {"body": "see description api description translate items array object new array items description pass element current matched set function producing new jquery object containing return values", "d": "4/2018"}, {"body": "yep unfortunate documented inconsistency two apis way long change", "d": "4/2018"}, {"body": "thank ur explanation sry inconvenience caused", "d": "4/2018"}, {"body": "would agree behavior native js var rejected promisereject rejected resolved promiseresolve rejected promiseresolve function return resolved function consolelog bdone arguments catch function consoleerror bfail arguments", "d": "4/2018"}, {"body": "well seems strange behavior least unified cases b failed javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved function consolelog adone typeof arguments catch function consoleerror afail typeof arguments failhandler called case b promiseresolve function return resolved function consolelog bdone typeof arguments catch function consoleerror bfail typeof arguments failhandler called hand jquery jquery git used behave differently case case b done b failed javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone typeof arguments fail function consoleerror afail typeof arguments case b deferred resolve function return resolved done function consolelog bdone typeof arguments fail function consoleerror bfail typeof arguments behavior unified jquery addition jquery jquery used behavior unified b done", "d": "4/2018"}, {"body": "note equivalent promisea spec run synchronously nt swallow errors expect behave differently jquery behave like promisea spec", "d": "4/2018"}, {"body": "misunderstood specification native promise jquery deferredresolve take multiple arguments one argument promiseresolve therefore equivalent processing native promise think necessary follows b done javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved arguments gt consolelog adone typeof arguments catch arguments gt consoleerror afail typeof arguments case b promiseresolve function return resolved arguments gt consolelog bdone typeof arguments catch arguments gt consoleerror bfail typeof arguments", "d": "4/2018"}, {"body": "argument native promiseresolve special specification resolve x thenable attempts make promise adopt state x promisesa value thenable ie method returned promise follow thenable adopting eventual state promiseresolve javascript mdn think arguments jquery deferredresolve specification", "d": "4/2018"}, {"body": "supplement behavior occurs rejected promise passed first argument deferredresolve cases b done b failed occur first argument second argument exchanged cases b done javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise resolvedprime deferred resolve resolved rejected promise case resolved done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolved done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength case resolvedprime done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolvedprime done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength", "d": "4/2018"}, {"body": "sorry examples get longer complex getting harder understand problem reported part confusion results giving name deferrred rejected seems comes behavior consistent standard resolving using rejected also rejects", "d": "4/2018"}, {"body": "yes consistent standard resolve argument thenable follow thenable jquery supposed promisea spec fail sorry expected actually ok", "d": "4/2018"}, {"body": "also want pass one argument write like following code jquery however native promise got one argument following code wrong therefore make similar jquery seems following code appropriate", "d": "4/2018"}, {"body": "format following code ok jquery javascript native promise promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve deferred reject sorry done function consolelog ok arguments ok arguments deferredpromise fail e gt consolelog fail e", "d": "4/2018"}, {"body": "however time try use chain difference native promise jquery ok native promise fail sorry jquery javascript native promise promiseresolve gt return promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve gt return deferred resolve deferred reject sorry done function consolelog ok arguments fail e gt consolelog fail e fail sorry", "d": "4/2018"}, {"body": "finally set first argument resolve something deferredpromise ok returned time probably seems special interpretation done first argument", "d": "4/2018"}, {"body": "standard promisea uses one argument since jquerydeferred allowed still provide ability reporting bug close ticket feel documentation needs improved make suggestions request docs changes need specific especially given relatively obscure behaviors", "d": "4/2018"}, {"body": "yes reporting bug beginning think work follows insist compatibility native promise like think extend specification deferredresolvewith uses one argument args like promisea currently follows deferredresolvewith context args args type array optional array arguments passed donecallbacks deferredresolvewith extending specification follows args type array thenable ie deferredpromise", "d": "4/2018"}, {"body": "question simple javascript deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e deferred resolve gt deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e fact fail sorry bug isnt", "d": "4/2018"}, {"body": "ok good small case agree seems inconsistent promise thoughts surprised would nt promisea test intended behavior", "d": "4/2018"}, {"body": "examples highlight differences method including shorthand whose behavior specified promisesa ecmascript promise objects fundamental model jquery deferred objects predate terms ecmascript vocabulary jquery deferred objects fulfilled thenable objects ie objects method whereas promise objects resolution required enqueue invocation method inbound value observable effect standard promise resolution never supply thenable onfulfilled callback however jquery deferred behavior intended backwards compatibility surprising mixing models callbacks receive settlement values case means done onfulfilled callback gets rejected deferred object string multiple settlement values possible via callback explicit return deferred returned fulfilled therefore invoke callback first invokes onfulfilled callback returns deferred resolved result case deferred thenable unwrapped part handling reveal rejected thenable results return value also rejected state therefore ignoring onfulfilled callbacks introducing compatibility could instead done unwrapping input side would made implementation messier less backwards compatible ie unable receive multiple settlement values benefit nonstandard cases path opted avoid favor force output interpreted context standard behavior", "d": "4/2018"}, {"body": "thanks report license repository seems github nt like extension guess could remove extension repos seen nt use one use", "d": "4/2018"}, {"body": "packagejson also specifies fine removing changing", "d": "4/2018"}, {"body": "hi get answer github support team basically github uses automatic license detector installed locally get following results sections surrounded additions tool detected github confidence requirement changes github meeting threshold detect license project removes additions license detected properly course author community choice version license project use", "d": "4/2018"}, {"body": "fine making changes although bring kborchers specific changes licensetxt file sure legal issues see done eslint repo note packagejson file also clear license mit right", "d": "4/2018"}, {"body": "dmethvin much larger change one done eslint removed one minor eslint line beginning said opinion remove lines without issue team would like sure get us close enough github satisfied though last lines removed define things may fall mit license section referenced cla", "d": "4/2018"}, {"body": "thinking bit since jquery project defining content licensed differently nodemodules external directories may able remove need check legal get back asap", "d": "4/2018"}, {"body": "documentation says get combined text contents element set matched elements including descendants window object element situation code calling expecting result result expect", "d": "4/2018"}, {"body": "explain company develop third party tool communication reasons ass iframe website include snippet client created generic event handling function analytics purpse assume get text text execution context event aslong iframe different domain page window text dose throw exception wise throw undexpected point view essentially added iframe different origin page entire application failed", "d": "4/2018"}, {"body": "mean call valid application", "d": "4/2018"}, {"body": "application client following line every event executed jquery text application works fine integrate company code snippet adds iframe origin function break", "d": "4/2018"}, {"body": "think wierd something like adding iframe page change result unrelated function great add codition nodetype array return undefinedempty string always throw exception unhandled types", "d": "4/2018"}, {"body": "jquery nt validate user input expected supported method signatures used according returns behavior inputs undefined jquery would get much larger add input validation also slow library want input validated consider using typescript includes jquery type definitions package need tell client change invalid code", "d": "4/2018"}, {"body": "completely normal selection return nothing use advantage example chain operations selection may actually nicer noelements case since nt need extra logic handle need sure selection matched something check property people would definitely annoyed console message condition error could plugin like js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "dmethvin small correction js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty return nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "haha yes", "d": "4/2018"}, {"body": "people develop spas jquery time large spa usually needs structure jquery alone provide google search information", "d": "4/2018"}, {"body": "possible run screenshot debugger however screenshot looks like references coming code nt jquery core test case uses jquery core", "d": "4/2018"}, {"body": "reopened test case uses jquery core", "d": "4/2018"}, {"body": "jquery generally nt validate user input make library way bigger need use parameter types match api docs want parameter validation consider using typescript together typesjquery package", "d": "4/2018"}, {"body": "discussed meeting reason error thrown trycatch however still nt work words never selected text nt think anything ca nt force browser select hidden text want avoid catching errors much possible", "d": "4/2018"}, {"body": "migrate ticket ready closed nothing core deprecation codewise", "d": "4/2018"}, {"body": "problem even run jquery modified source stored server somehow wo nt actually execute javascripts properly way errors clues provided debugger left ability switch page page via ajax jqueryevalurl function url debugger return jqueryajax url url", "d": "4/2018"}, {"body": "working always since created warning coming browser jquery api guaranteeing attempted use loaded html line javascript would available request changed async request jquery longer guarantee loaded html available worse mechanism available via indicate html loaded want receive warning browser need rewrite call async call injects html document change minor version since breaking change even clear whether makes sense try fix api may simpler deprecateremove give people instructions rewrite calls injected html embedded tags stack trace probably case remove html inject scripts directly code scripts act injected html html loaded example html fragmenthtml html jquery main html file change something note cases synchronously injected html used far away point injected rewrite may obvious case seem really complicated andor working code nt understand plugin nt write code got stackoverflow ignore console warning keep existing code need help could check stackoverflow", "d": "4/2018"}, {"body": "dmethvin would potentially require lot rewriting app code jquery users entrypoint mess jqueryparsehtml use follows content loaded using simple ajax get php output data php output able solve problem site like share solution solution different approach require much rewriting app code jquery users turns already eval script content could add callback function parameter jqueryparsehtml add jqueryajax use case statement eval script content unlocks waiting variable defined jqueryparsehtml instead sascsettingscontentloaded calls new callback parameter jqueryparsehtml add callback functionality use cases pop jquery bugreports useful addition jquery donating jquery developers community jqueryevalurl function url debugger return jqueryajax url url samwaitforcondition usage example delete sascsettingscontentloaded sasc seductiveappssitecode load content asynchronously content accompanying js loaded eval ed sets sascsettingscontentloaded true samwaitforcondition content loaded function return sascsettingscontentloaded function point content accompanying js fully loaded whatever needed content samwaitforcondition definition waitforcondition function label condition callback frequency context used instance let page wait vividdialogs fully initialized showing site components see source demo var fncn samwaitforcondition typeof label string samlog error fncninvalid label return false typeof condition function samlog error fncninvalid condition return false typeof callback function samlog error fncninvalid callback return false typeof frequencyundefined frequency lt frequency prevents excess stress js engine labelstacktrace undefined try var adebug adebug else throw new error myerror catch ex var stacktrace samglobalslogdostacktracesforallcode samglobalslogdostacktracesforcodepath codepath samuserdeviceisfirefox exstacksplit n exstack stacktrace provided labelstacktrace stacktrace var r condition context var dbgmsg fncn label n condition condition r true false n callback callback var dbgdata startstacktrace labelstacktrace label label condition condition callback callback frequency frequency conditionastext condition callbackastext callback samlog dbgdata", "d": "4/2018"}, {"body": "hard read solution looks like changes minified file nt variable names mean anything fact names change time jquery rebuilt original source code repo would much clearer describe changes regards users call directly pretty much jquery api accepts html potentially tag reference external script must evaluated sync order work way compatible existing jquery code major version bump jquery could change without describing internal changes jquery show user would put code example gave order make synchronous code work asynchronously", "d": "4/2018"}, {"body": "behavior previously marked enhancement added see related tickets behavior previously documented suddenly disappears sounds like bug anyone else thinks rather normal api method may may return json body workaround quite simple application rather common occurrence wcf service calls nt normally return data return json object event fault", "d": "4/2018"}, {"body": "noting lands possible use option call force use script transport allows use attributes like tag perhaps little intuitive setting note things like meant simpler apis fewer options assumptions wanted new functionality wo nt exposed apis could use since accepts full options object personally stick", "d": "4/2018"}, {"body": "question dmethvin use defined nonce shall use instead thanks", "d": "4/2018"}, {"body": "lands would use add options options nonce expect ship", "d": "4/2018"}, {"body": "dmethvin perfect see commit already merged main branch wait next version thank", "d": "4/2018"}, {"body": "dmethvin lets say use thing", "d": "4/2018"}, {"body": "hey graingert since relevant ticket ask stackoverflow otherwise tickets become support forums random issues hard follow note html file include script tags else comes play example", "d": "4/2018"}, {"body": "dmethvin replying", "d": "4/2018"}, {"body": "gather never fixed might break existing implementations arraylike objects conclusion never use objects aka associative arrays someday object mine may happen member named length value exactly zero would treat like empty array hardtoexplain consequences", "d": "4/2018"}, {"body": "bobstein yes nt want object arraylikes treated arrays would need use different mechanism possible alternatives include drawbacks far properties enumerated browser support", "d": "4/2018"}, {"body": "years working jquery ran problem today working json data feed contains length field looper function linked bobstein works well maybe jquery think fixing fashion least documenting issue page", "d": "4/2018"}, {"body": "ryonlabaw documented mentioned ca nt fix without breaking documented behavior since plenty alternatives today nt make sense change since want arraylike iteration object example nodelist current behavior desired", "d": "4/2018"}, {"body": "hi issue jquery last version load jquery documentation suggests csp policy obviously add nonetheless nt want use due security issues could exception jquery file considering hash nonetheless csp documentation refers hash external files applies csp", "d": "4/2018"}, {"body": "somewhere code eg calling loadscript trying load base js file", "d": "4/2018"}, {"body": "hi thanks replying really base file load end html seems jquery code builtin violates csp rule mon apr mike kamermans notifications githubcom wrote somewhere code eg calling loadscript trying load base js file receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "jfoclpf page works correctly large file probably inline script hiding error message get provide error line set breakpoint see stack leads please nt continue debugging session ticket though related except involve csp message", "d": "4/2018"}, {"body": "long csp headers indicate includes able load plain tag without integrity crossorigin attributes", "d": "4/2018"}, {"body": "thank dmethvin pomax one question use lot jquery function getscript load external scripts hosted domain jquery function trigger perhaps csp violation", "d": "4/2018"}, {"body": "jfoclpf yes would cause see", "d": "4/2018"}, {"body": "hit error similar scenario workaround molipet may ask solve issue thanks", "d": "4/2018"}, {"body": "hi wowcut workaround avoid setting depending use case use hiding iframe", "d": "4/2018"}, {"body": "gabrielschulhof nt easy way get ahold uc browser gandharthakar still issue latest jquery amp latest uc browser version", "d": "4/2018"}, {"body": "mgol checked fiddle latest android uc browser latest version jquery works fine thank much", "d": "4/2018"}, {"body": "got similar error trying get value passed querystring url var parameterpage urlsearchparamsget page please help", "d": "4/2018"}, {"body": "good day want handlers execute synchronously async execution problem apply third part control ready handler latest version jquery normal select control shown control shown looks unpreofessional applcation", "d": "4/2018"}, {"body": "fixed seo runs google light house reverted due concerns wider effects", "d": "4/2018"}, {"body": "status", "d": "4/2018"}, {"body": "still planned pr refactor event system ready yet micha\u0142 go\u0142\u0119biowskiowczarek", "d": "4/2018"}, {"body": "tracking issue roadmap really like subscribe something inform availability modules thanks", "d": "4/2018"}]