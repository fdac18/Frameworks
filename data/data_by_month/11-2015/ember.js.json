[{"title": "controller replaceroute method appearing api documentation", "body": "link method api however method description exists even though description exists source code", "num": "12660", "d": "11/2015"}, {"title": "spread helper", "body": "component wraps currently supports one model supporting two model hard however nt see cheap obvious solution support dynamic number models hence helper proposition existing way achieve requirement feasible implementation spread helper intuitively feels like ember templating framework nt allow", "num": "12658", "d": "11/2015"}, {"title": "unexpected reserved word strict mode error yield android", "body": "line htmlbars causes error error android solution probably add yield", "num": "12657", "d": "11/2015"}, {"title": "application container csscontainers general", "body": "new ember trying use ember discovered viewscontrollers going away favor component based architecture sounds good already enabled pod based folder layout loving problem trying attach css styles application container however nt see without emberview furthermore think possible would flexible containers nt javascript responsibility rather markup became content inside divemberview might possible given ember long history points details container entirely config let htmlhtmlbars handle instead js config deprecated anyways case views know components config support disclaimer come background angularjs suggestion comes uirouter usage sure plenty architectural reasons ca nt happen feel free explain learn getting back topic could use jquery controller something select templates parent add css class would hack imagine route component extend component customize container looking workarounds without leaving latest stable release update like add tried adding following css success update works reason fan meets needs particular use case general questions still stand", "num": "12656", "d": "11/2015"}, {"title": "url changes model resolved", "body": "ember certain routes app url browser changes route model promise resolved results odd behaviour would expect url changed transition actually succeeds transitions log also nt make much sense says app transitioned statea whereas preparing transition stateb seems affect routes queryparams defined controller", "num": "12655", "d": "11/2015"}, {"title": "data binding ready", "body": "trying set properties hook component visible components template containing template see example matter trigger change outside ddau sendaction simply use binding curly components change always visible one templates problem goes app property array initially empty receives object visible least component long nothing gets rerendered component gets rendered binding suddenly overwrites set observer nothing changed arrays contents initial empty value updated binding ready finally binds property component", "num": "12654", "d": "11/2015"}, {"title": "model adapter called", "body": "adapter one models reason call ignored buildurl whole method goes regular get path ignored whole adapter fact non store methods called first noticed issue trying route already working previous call working rsvp one promise fails tried calling also tried create new model called route adapter luck also tried mock using mirage still ignoring model trying obtain route nt think necessary case driving crazy trying similar things help would great", "num": "12653", "d": "11/2015"}, {"title": "change font size one component another component", "body": "hello want change font size one component another component comonent heis chandefontsizehbs component component chandefontsize see html dom exampletext component ember generate dom dinamic documentready example need respect igor", "num": "12651", "d": "11/2015"}, {"title": "add assertion helper param", "body": "helper takes first positional parameter list iterate silently ignores additional positional parameters make harder beginners see mistakes suggest adding assertion helper", "num": "12650", "d": "11/2015"}, {"title": "handlebars thinks emberajax empty", "body": "hey everyone controller consolelog success handler loggin valid json object try use handlebars returning time empty workouts data dont get thanks", "num": "12649", "d": "11/2015"}, {"title": "add dsstore base delegate method adapter", "body": "wondering need extend class order add query method like example would possible current version need comes fact like backend api minor changes example custom route perform searches model none existing methods others help achieve functionality without overriding something really like buildin method works great want query specific model field using parameter looks multiple model fields find match best approach opinion would extend class add method example would allow automatically search records model", "num": "12645", "d": "11/2015"}, {"title": "set property array component hang everything", "body": "encounter weird problem try reproduce embertwiddle let explain first component hook need calculate dom related data expose nested components something like javascript export default embercomponentextend didrender let clientrect thiselementgetboundingclientrect let thresholdx clientrectright let thresholdy clientrectheight commented set array repeatedly throw deprecations crazily try use embertwiddle reproduce since hang browser ca nt save share ember", "num": "12644", "d": "11/2015"}, {"title": "rendering array query param url", "body": "sure behaviour intentional seems inconsistent arrays generally represented query string elsewhere given following javascript export default embercontrollerextend queryparams sort sort actions onsortchanged sort thisset sort sort sort name asc age desc would expect query string render array using syntax element renders formats appear work hand write url deliberate", "num": "12643", "d": "11/2015"}, {"title": "observe dom attribute changes", "body": "guys trying work ember polymer polymer element applicationhbs hbs myname input id emberinput type text valuemyname applicationjs js import ember ember embertextfieldreopen attributebindings value export default embercontrollerextend myname john smith page loaded text values change value changed change value changed question observe attribute changes makes ember data changed changes thanks", "num": "12642", "d": "11/2015"}, {"title": "prefixed dynamic segments", "body": "currently possible urls prefixed dynamic segments least nt know expect ember load route enter url like like medium mediumcom buschtoens something wrong really work alternative achieve behavior first thing could think catchall route redirects unhandled routes really like keep url structure though", "num": "12640", "d": "11/2015"}, {"title": "migrate application hosting", "body": "hello recently started studying emberjs installed ember stated manual began write using wrote small application example hello world run without tried copy folder myemberappdist test web server work", "num": "12639", "d": "11/2015"}, {"title": "component lifecycle hooks documentation missing", "body": "lifecycle hooksevents component listed api documentation components since seem missing", "num": "12637", "d": "11/2015"}, {"title": "delete put request failure post success", "body": "iis delete put get error visual studio debug success emberjs delete hacking", "num": "12635", "d": "11/2015"}, {"title": "factoryfor cache misses", "body": "noticing tons work discourse due way internally useabuse resolver internally tries hard cache name factory however cache information misses mean hit pathological case keep looking missing factories slow path hit missed cached internally ember cc eviltrout", "num": "12634", "d": "11/2015"}, {"title": "targetobject integration tests components", "body": "hey since version getting testsuite emberaddon run problem think lies nt get correct targetobject test environment verify steps added debug statement using inside emberdebugjs inside yields following results version version think something wrong right ca nt create twiddle needs testing environment normal usage nt get errors repo travis manifests cheers spruce", "num": "12633", "d": "11/2015"}, {"title": "action bubbling weirdness", "body": "seems setting action helper used template works specified target element parents see attached twiddle look applicationhbs intentional behavior bug intentional bit counterintuitive probably documentation around think", "num": "12632", "d": "11/2015"}, {"title": "object extensible", "body": "know using ember twiddle general nt work anyway", "num": "12631", "d": "11/2015"}, {"title": "positional params issue contextual components", "body": "assertion triggered attempting use positional params contextual components via hash helper imagine following js componentschildcomponentjs import ember ember const childcomponent embercomponentextend childcomponentreopenclass positionalparams params export default childcomponent attempt instantiate directly assertion triggered instantiate using component helper everything works expected see examples hbs working parentcomponent hash hashchildcomponent parentcomponent working parentcomponent hash component hashchildcomponent parentcomponent also created couple twiddles one showing error one showing working used component helper working working assertion thrown discovered issue although suspect issue could also affect", "num": "12625", "d": "11/2015"}, {"title": "thistransitionto error nothing reports nothing", "body": "want transition error route within routesapplicationjs try transition happens errors appear console etc almost like treats op example twiddle", "num": "12624", "d": "11/2015"}, {"title": "emberobject", "body": "seems canary undefined discovered loading following jsbin", "num": "12623", "d": "11/2015"}, {"title": "override value property bind values textfield", "body": "javascript embertextfieldextend value embercomputed get key return thisget dirtyvalue set key value return thisset dirtyvalue value changed", "num": "12621", "d": "11/2015"}, {"title": "component parentview null willdestroyelement willclearrender", "body": "sometimes makes sense nested components tell parent component destroyed however returns inside present though following codepen illustrates issue make present even destructive lifecycle callbacks", "num": "12620", "d": "11/2015"}, {"title": "memory acceptance tests ember", "body": "test repo upgrading app ember chrome crashes running acceptance tests following approach ran tests simple app compare different versions ember observations memory drops running unit tests ember memory allocated tests twice ember amp app memory allocation tends increase overtime acceptance tests questions expected thoughts debug memory comparison looking timeline seems like event listeners remain tests completed detached elements show heap profiles test repo", "num": "12618", "d": "11/2015"}, {"title": "add basic retry logic sauce tests", "body": "often experience intermittent sauce failures may good idea add small amount retry logic something like given sauce run failed previous ultimately succeeded retry current failure times previous failed current failed leave failed state move next cc seanpdoyle unsure interests cycles nice win", "num": "12615", "d": "11/2015"}, {"title": "attrs updating correctly contextual components", "body": "please see console twiddle edit sorry badly named issue sure actual problem yet", "num": "12613", "d": "11/2015"}, {"title": "remove ember references within internal modules", "body": "x packagesemberapplicationlibsystemresolverjs one depends embertemplates reboundreplaced tests place x packagesemberhtmlbarslibsystembootstrapjs one depends embertemplates reboundreplaced tests place x packagesemberhtmlbarslibutilsstringjs relies emberstrings also rebuildreplace x packagesembermetallibstreamsstreamjs packagesemberroutinglibsystemroutejs embertesting x emberisempty packagesemberruntimelibextfunctionjs emberextendprototypes packagesemberruntimelibextrsvpjs embertesting embertest amp amp embertestadapter likely embertesting augment rsvpext rather rsvp knowing embertest packagesemberruntimelibextstringjs emberextendprototypes x packagesemberruntimelibmixinsarrayjs x packagesemberruntimelibmixinsenumerablejs x embera cycle packagesemberruntimelibmixinstargetactionsupportjs emberlookup x packagesemberruntimelibsystemcoreobjectjs packagesemberruntimelibsystemlazyloadjs emberenvemberloadhooks basically legacy crap kill packagesemberruntimelibsystemnamespacejs emberbooted emberkeyname emberanyunprocessedmixins emberlookup file really years legacy behaviors multiple accomplish things also many performance hacks specific globals tostring world names derived resolver file phased packagesemberruntimelibsystemnativearrayjs emberextendprototypes packagesemberruntimelibsystemstringjs emberextendprototypes x packagesemberviewslibcomponentscomponentjs packagesemberviewslibsystemjqueryjs emberimports lt legacy emberenvforcejquery lt wat packagesemberviewslibviewscollectionviewjs emberenvenablelegacyviewsupport packagesemberviewslibviewscontainerviewjs x isempty emberenvenablelegacyviewsupport x packagesemberviewslibviewscoreviewjs packagesemberviewslibviewsviewjs emberenv deprecation hooks x embertemplates edit remove extra path info convert checkout stefanpenner", "num": "12611", "d": "11/2015"}, {"title": "performance issues replaceobserversandlisteners", "body": "replaceobserversandlisteners needs specialized per type update", "num": "12607", "d": "11/2015"}, {"title": "mixin shape problems", "body": "add guidkey null mixin constructor tostring remove private nativearrayactivate textsupportkeyevents", "num": "12606", "d": "11/2015"}, {"title": "view get data view controller", "body": "right use ember viewtest work appapplicationview embercomponentextend test helllo lt script type textxhandlebars gt viewtest lt script gt see ca nt fix", "num": "12605", "d": "11/2015"}, {"title": "factories injected templateonly components", "body": "using ember suppose want inject service components js appinitializersmythingjs export function initialize application applicationinject component mything service mything export default name mything initialize initialize place reference corresponding comes create component js file content except reference template starts working inconvenient since many components need injected reference would otherwise templateonly find strange corresponding controllerbased scenario works fine without index controller defined injecting service controllers sufficient make accessible template components work differently", "num": "12602", "d": "11/2015"}, {"title": "missing api documentation viewattributebindings", "body": "emberviewattributebindings documented property api view class preamble talks much help looking embercomponent", "num": "12601", "d": "11/2015"}, {"title": "checkbox always checked", "body": "setting checkbox property checkbox renders checked logincomponentjs import ember ember export default embercomponentextend remindme false expect remindme false checkbox render without check binding checked property render", "num": "12598", "d": "11/2015"}, {"title": "angle bracket components always return hasblock true", "body": "expecting return block shortclosed closing element apparently way angle bracket component use helper see reproduction", "num": "12597", "d": "11/2015"}, {"title": "hash computed macro", "body": "imminent arrival closurecomponents concept public api exposed yield using new hash helper think need hash computed macro", "num": "12595", "d": "11/2015"}, {"title": "component template context wrong wrapped layout", "body": "use case component uses layout template context inside template controller imo remain components context example modal component receipt component receipt component extends modal component uses template layout receipt component provides template layout template simply yields since layout template properties receipt component nt components context also nice day", "num": "12593", "d": "11/2015"}, {"title": "angle components ca nt rendered using component helper", "body": "experimenting porting components angle bracket style canary ended stumbling use ember errors suggests code path nt prepared angle components yet questions supposed work written first place higherlevel definition pending decide behavior expected behavior obvious one something someone new ember codebase though familiar ember js general could work go back using curly components wait update seems work alright use requires ing case sure intentional though nt able find explicit tests case", "num": "12590", "d": "11/2015"}, {"title": "autofocus route transition", "body": "autofocus input nt appear working transition new route works refreshing browser transition new route input wo nt focus gist example code shows issue one input route", "num": "12589", "d": "11/2015"}, {"title": "test controller action sends action route", "body": "basically controller action calls action handled route test used work upgrading probably updated test helpers nt work anymore jsbin reproduces issue issue seems trying look router somewhere set believe somewhere compiled output function error raised send function name context var edit version works uses different ember embermocha versions narrowing problem definitely seems appeared v embermocha", "num": "12588", "d": "11/2015"}, {"title": "speeding require ember", "body": "stefanpenner looking requireinternal ember seems like get perf preallocating array var reified var length depslength reified preallocated nt need push thoughts", "num": "12586", "d": "11/2015"}, {"title": "rubbish", "body": "npm install g embercli ember new knob cd knob ember serve port enoent file directory open clean install new app nothing extra amp rubbish", "num": "12585", "d": "11/2015"}, {"title": "action bubble controller", "body": "hello first thanks everyone great work playing actions controllers routes ran strange behaviour imo controller action sometimes required using one components require explicit save action controller error action named save found action bubble controller route javascript route actions save function consolelog route save questions specifying event type using handlebars value context require action controller find really consistent regarding standard behaviour another way pass parameter action inside using subexpression action bubbled controller route last case found explanation points guess least undocumented behaviour wrong point doc please find complete running example thx", "num": "12581", "d": "11/2015"}, {"title": "closure actions bubble", "body": "understanding closure actions nt bubble looks true actions attached nested html structure bug intended little twiddle demonstrates", "num": "12576", "d": "11/2015"}, {"title": "attempting install latest ember node package failling", "body": "following versions available npm", "num": "12573", "d": "11/2015"}, {"title": "feature emberapplicationvisit appears breaking build", "body": "revert master fixes revert restore someone chance fix visit cc chancancode", "num": "12572", "d": "11/2015"}, {"title": "warning attribute binding ember recommends incompatible solution", "body": "warnings links documentation recommends using nt work user use instead example mentioned issue already closed deprecation warning updated ember", "num": "12571", "d": "11/2015"}, {"title": "events fired twice type handlers", "body": "writing acceptance test something looks like html click bad news came realized triggering action twice first type second time shortly native digging helper first addon later discover cause jquery triggers jqueryevent first called event fires native event afterwards leading unexpected behaviour case toggling property twice therefore letting unchanged real life code works perfectly native events fired instead nt know kebab actions also receive native events affected solutions see fire real events instead would backwards incompatible guess dispatcher would catch turn jquery events regular events real life also mimics real behaviour better b accept second argument helpers clearly backwards compatible leaves us different paths firing events thoughts", "num": "12569", "d": "11/2015"}, {"title": "routename index undefined properties", "body": "hey trying set model route although returning simple array makes work calling findall modelname throws following error router looks like exactly", "num": "12568", "d": "11/2015"}, {"title": "bug rsvp different onerrordefault behaviour testing breaks tests", "body": "trying test error handling application route action found working fine development adapter error successfully handledsupressed tests always output handler reached short developmentproduction errors rsvp thrown normally handledsuppressed route actions inside testing errors rsvp output immediately leaving route hooks unable suppress error results failing tests tracked problem different behaviour test environment workaround rsvp test behaviour tests expecting adapter errors handled route actions disableenable rsvp error handling javascript copy onerrordefault describe acceptance authentication function beforeeach function emberrsvpoff error quite nonobvious behaviour would expect error handling flow tests development possibly related ember version ember data version", "num": "12567", "d": "11/2015"}, {"title": "windows xp blue screen adobe air browser", "body": "tried open emberjs official website using adobe air browser windows machine crashed right away blue screen death dump error dump file crash time pm bug check string resourcenotowned bug check code parameter parameter parameter parameter caused driver caused address file description product name company file version processor crash address stack address stack address stack address computer name full path e processors count major version minor version dump file size dump file time pm", "num": "12563", "d": "11/2015"}, {"title": "mistake documentation", "body": "hello thanks awesome framework reading documentation found mistake last topic page set method referred accessor mutator regards ozan m\u00fcyessero\u011flu", "num": "12560", "d": "11/2015"}, {"title": "regression ember ember component attributes updated initialization using thisset", "body": "jsbin demonstrating issue related issue updated component called like shown", "num": "12556", "d": "11/2015"}, {"title": "embercontainerinjectowner checklist", "body": "x implement concept discussed help ensure full access container possible complete valid set deprecations method property accessed primary scenario affects already deprecation factory instantiated x ensure embertesthelpers detects functions properly feature x document functions api docs x audit update guides details fairly sure discussion guides considered private api ever might want add prose dependency injection needs another pr explain usage x update emberdata ensure deprecations triggered x add deprecation guide entry deprecation added cross link deprecation url done x update liquidfire prevent deprecations x update", "num": "12555", "d": "11/2015"}, {"title": "tagless components issue beta canary", "body": "typeerror triggered attempting use tagless component although seems occur component js file creating js file component makes issue disappear issue seems introduced pr error twiddle showing error js file twiddle error includes js file", "num": "12554", "d": "11/2015"}, {"title": "issue ember", "body": "using loop javascript ember js returning methods attached prototype var consolelog returns super nextobject firstobject lastobject etc eliminate loop", "num": "12553", "d": "11/2015"}, {"title": "potential deopt reading", "body": "", "num": "12552", "d": "11/2015"}, {"title": "bug handling route error hook tests", "body": "hey appears change ember ember work regarding error hook older iterations ember error handled error hook nt treated failed assertion test environment version treated failed assertion based integration test appears throwing error application intent however change nt identified anywhere mentioned documentation bug brought issues appears causing confusion us intent testing error behaviours fact documentation states error actions bubble way applicationroute fire default error handler logs error specify global default error handler overriding error handler applicationroute source would lead believe error hook nt return true error nt bubble sent default error handler written really basic test app building circle ci two ember version branches showing differences test outcomes sure correct fix adjust documentation test added ensure error throw application error hook returns false attach pr proposed test fail given error thrown regardless error bubbling", "num": "12547", "d": "11/2015"}, {"body": "nt really bug using element space allowed use inline version element assignment attribute though using demo would look like value falsey means attribute removed", "d": "11/2015"}, {"body": "boolean helper would make bit cleaner", "d": "11/2015"}, {"body": "ok wordy assert would save tons time runtime compile time error nt care human readable thing", "d": "11/2015"}, {"body": "ended", "d": "11/2015"}, {"body": "ruz absolutely agree", "d": "11/2015"}, {"body": "talking splat similar primitive template layer accomplish something like early sketch nt assume saying means final form think mmun ideas fyi typically qa goes stackoverflow forum feature requests reported issue rfc repo", "d": "11/2015"}, {"body": "good use case", "d": "11/2015"}, {"body": "discussion like see params spreading hash spreading", "d": "11/2015"}, {"body": "link dynamic number models already possible ergonomic share jsbin shortly", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "im going close exploration likely rfcrfc issue", "d": "11/2015"}, {"body": "another example another project", "d": "11/2015"}, {"body": "dupe would fixed", "d": "11/2015"}, {"body": "getting saucelabs set ember data made notice glad fixed think need point release changes apply also concerned previous versions ember", "d": "11/2015"}, {"body": "ya need release updated version htmlbars ember versions kinda like lts release beta", "d": "11/2015"}, {"body": "confused babel handling", "d": "11/2015"}, {"body": "mmun nt believe old builds always used babel", "d": "11/2015"}, {"body": "fwiw thanks stefanpenner may simple bumping version rebuild", "d": "11/2015"}, {"body": "nothing simple older deps npm p", "d": "11/2015"}, {"body": "issue tracker intended questions like please see extensive list platforms including stack overflow official forum irc slack however starting points change apps root element easily since default document body probably nt want also define view component application root since routable components ready yet would create new view file use component inside likely give control looking create paste import ember ember export default embercomponentextend classnames something application view class named something tagname div height appropriate solution also since application one root view selector correct solution second update actually perfectly fine questions close ticket create tagged question stack overflow", "d": "11/2015"}, {"body": "thanks info sorry posting wrong place", "d": "11/2015"}, {"body": "provide demo use see seeing going hard help without one", "d": "11/2015"}, {"body": "unfortunately ca nt share actual code proprietary sensitive project try create snippet js bin nt know manage reproduce isolated setting removed queryparams controller nt run issue anymore", "d": "11/2015"}, {"body": "debug ember debug ember data debug jquery", "d": "11/2015"}, {"body": "ca nt believe typo closing", "d": "11/2015"}, {"body": "use issue tracker issues bugs ember questions like better suited stack overflow geared much better qa style please link back post issue future travelers come across issue see resolution", "d": "11/2015"}, {"body": "ya definitely assertion use syntax likely assertion check block param point folks guide page discussing demo", "d": "11/2015"}, {"body": "research problem ajax returned response handlebars data empty", "d": "11/2015"}, {"body": "orgertot seems nt return anything property mean like suggest set common headers globally nt explicitly set every time issue ajax call authentication done entering main app isolated business logic looks like use embersimpleauth need read doc carefully fetched route hook controller", "d": "11/2015"}, {"body": "use issue tracker issues bugs ember questions like better suited stack overflow geared much better qa style please link back post issue future travelers come across issue see resolution", "d": "11/2015"}, {"body": "emberdata resides typically encourage qa still issues opened stackoverflow forums", "d": "11/2015"}, {"body": "stefanpenner supposed like improvement rather qa thank pointing cheers", "d": "11/2015"}, {"body": "btw often see deprecations tell modify property hook ca nt find anything modifications two hooks example bug mentioned set property hook also warning making crazy components often need dom calculations depends actually rendered property needs recomputed dom changes like heightwidth position etc ca nt hook might misunderstand ignore something important hope someone help clear confusions", "d": "11/2015"}, {"body": "setting array property nt problem maybe observer somewhere also modifying property could post full code", "d": "11/2015"}, {"body": "ptgamr confirm one place set property reproduce demo embertwiddle write method like mentioned", "d": "11/2015"}, {"body": "ok see mangage put twiddle setting property amp access property template make infinite call example didrender update property view updated didrender hook", "d": "11/2015"}, {"body": "ptgamr understand explanation actually thinking way first later change part problem gone works still set property ies instead set one property array set two properties nt make sense", "d": "11/2015"}, {"body": "ptgamr inspiration made test javascript instead setproperties thissetproperties thresholdx thresholdy set individually thisset thresholdx thresholdx thisset thresholdy thresholdy works fine change array even contain one element infinite call pretty sure allowed currently busy finish project ca nt tracking code execution flow hope someone take look", "d": "11/2015"}, {"body": "guessing set property current value nt trigger change notifications set array even though contents triggers change notifications causes rerender sets value ends infinite loop primitives wo nt happen notice nt end rerendering time", "d": "11/2015"}, {"body": "url generated", "d": "11/2015"}, {"body": "polymer element needs event change use action helper make function update value event", "d": "11/2015"}, {"body": "unfortunately outside polymer use notify true setting need get handle element component route could add event listener didinsertelement", "d": "11/2015"}, {"body": "may missing docs topic although sort help typically different stackoverflow suspect core enough concern track relevant doc work", "d": "11/2015"}, {"body": "may actually something open", "d": "11/2015"}, {"body": "ultimately duplicate root cause added note end one point needs done", "d": "11/2015"}, {"body": "nt seem like bug report going close", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "sorry nt really understand reported seems like might x type question much better suited stack overflow andor community slack group", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "stack overflow site pretty nice help section think help figure post question", "d": "11/2015"}, {"body": "issue \u8fd9\u91cc\u662f\u62a5\u544a bug \u4ec0\u4e48\u8be5\u600e\u4e48\u529e \u7684\u95ee\u9898\u6700\u597d\u5230 stackoverflow", "d": "11/2015"}, {"body": "\u8fd9\u4e2a\u94fe\u63a5\u662fstackoverflow \u4f60\u53ef\u4ee5\u5728 stackoverflowcom \u5982 chenxsan", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "trick findingwiring eviction policy lazy loading", "d": "11/2015"}, {"body": "time took care one big pain spot totally follow lazy load issue", "d": "11/2015"}, {"body": "cache misses resolve checked early real work done agree stefanpenner cache miss eviction definitely problem likely expose api clearing caches actually make lazy loading story better", "d": "11/2015"}, {"body": "unless tested branch master discourse yall running ember cache misses", "d": "11/2015"}, {"body": "rwjblue great know really want discourse dual boot latest need find time make happen would totally move new ember faster", "d": "11/2015"}, {"body": "really want discourse dual boot latest yeah definitely would great get yall testing things earlier spot sorts issues ship version would totally move new ember faster indeed definitely working", "d": "11/2015"}, {"body": "going close since suggestion cache misses already implemented released", "d": "11/2015"}, {"body": "probs awesome improved latest sunday november robert jackson notifications githubcom wrote closed reply email directly view github", "d": "11/2015"}, {"body": "far know private undocumented think one point though made testing guides maybe embercli test generator certain maybe rwjblue shed light", "d": "11/2015"}, {"body": "change call thissendaction strange behaviour upgraded embercliqunit everything works like charm", "d": "11/2015"}, {"body": "believe valid hash argument closure style actions update docs ensure clear make work would need create wrapper helper call example", "d": "11/2015"}, {"body": "labeling documentation issue", "d": "11/2015"}, {"body": "okay thanks", "d": "11/2015"}, {"body": "duplicate load ember template compiler", "d": "11/2015"}, {"body": "think know happening right would quick fix dinner check later", "d": "11/2015"}, {"body": "feature exist would seems like related internal use definitely bug", "d": "11/2015"}, {"body": "feature exist would bugfix beta course mistake", "d": "11/2015"}, {"body": "something like works whether thistransitionto error also work work provide error warning behaving expected", "d": "11/2015"}, {"body": "adamknights think context eg error object intended behavior", "d": "11/2015"}, {"body": "pixelhandler agreed wanted think rather nothing single argument show warning error", "d": "11/2015"}, {"body": "adamknights well api docs say argument optional found either use routes error handing eg notfound servererror etc use error substate default behavior call transition error substate code seems special handing error substates obvious via guides api docs personally nt think good practice mix catching error transition default error substates portion ember codebase could use documentation guides andor improvements implementation eg using code", "d": "11/2015"}, {"body": "cc machty", "d": "11/2015"}, {"body": "caused line combination sealing inside", "d": "11/2015"}, {"body": "able reduce jsbin complexity bit still show issue", "d": "11/2015"}, {"body": "toying around issue load order modules working demo failing demo working failing", "d": "11/2015"}, {"body": "basically includes embermetal runtime loaded first modules loaded try add property", "d": "11/2015"}, {"body": "would nt affect embercli applications", "d": "11/2015"}, {"body": "rondalesc correct", "d": "11/2015"}, {"body": "interesting bug globals still work specified correct order close", "d": "11/2015"}, {"body": "rondalesc unsure definitely wonderful used work work", "d": "11/2015"}, {"body": "true sure get effect without order dependence", "d": "11/2015"}, {"body": "honestly think drop mixins rare ember cli world assign namespace", "d": "11/2015"}, {"body": "rwjblue strip use strict debug builds", "d": "11/2015"}, {"body": "understand going nt catch debugseal normally noop template compiler makes noop intended would caught error debug functions actually worked via module import", "d": "11/2015"}, {"body": "strip use strict small number modules think work around nasty ios bug", "d": "11/2015"}, {"body": "confirm works broken versions jsbin written sloppy though far able trace looks like problem legacy view bindings causing computed property watched properly thats guess time elegant workaround would wrapping textfield using component nt extend textfield add computed property turn uses textfield template another workaround would changing setter computed property set key value thisset dirtyvalue value thisnotifypropertychange value return value", "d": "11/2015"}, {"body": "seems like way workaround issue maybe different implementation need make computed added behaviors value bound property pass text input component sometimes creative bind value sometimes proxied property controller property apply value model later buffer changes jsbin example show overriding broken release channel ember likely bug curious may workaround well maybe better way achieve use case", "d": "11/2015"}, {"body": "duplicate believe", "d": "11/2015"}, {"body": "rwjblue could specifically caused way textfields value property gets bound thing regular components cps works fine", "d": "11/2015"}, {"body": "methods names imply called removal one would indeed expect parentview still available potentially issue addon developers", "d": "11/2015"}, {"body": "foxnewsnetwork private api best reply private api perhaps design need change maybe closure action used instead parent component call whatever pubic api needed clean", "d": "11/2015"}, {"body": "pixelhandler good point needed bunch properties parent component wound following templates components used bit reminiscent rails handles forms", "d": "11/2015"}, {"body": "foxnewsnetwork ember cases yielding much fewer instead use contextual components create closure private state want components share going close doubt get much traction adding particular hook strongly encourage explore new component stuff foxnewsnetwork please reopen missing anything", "d": "11/2015"}, {"body": "one seems related also similar issues app", "d": "11/2015"}, {"body": "also struggling idea would helpful timeline heap profile", "d": "11/2015"}, {"body": "lmcardle unfortunately helpful thing valuable actual examples demonstrating leaks", "d": "11/2015"}, {"body": "thoughts debug yes heap snapshot find retainers address", "d": "11/2015"}, {"body": "took look although may leaks believe found bug appears leaking due inlined function preserving context digging found seems indicate function nt close anything via compiled code related deopt info retaining resolver following stack appears inlined causing grief resolvenormalize thisregistrynormalizefullname thisapplicationregistrynormalizefullname registryprototyprnormalize pinged mraleph twitter recommended disabling inlining try manually preventing specific set functions inlining also prevents leak hacky patch container leak noticed went away cc dgeb x open issue x reasonable workaround spot fixes feel terribad scenario solve issue hacky patch basically move away shadowing methods instances rather using subclassing", "d": "11/2015"}, {"body": "fyi searching memory leaks examples create excessive noise creates distractions make finding source leak difficult key finding minimal setup required cause leak basically deleting parts example leak stops following process concise example remain deleting nearly everything leak still obvious made much easier time debugging ultimate leak appears bug several workarounds possible one workarounds full reinstating provided tests also longer leak containers", "d": "11/2015"}, {"body": "stefanpenner sounds interesting would live detect previous runs performed", "d": "11/2015"}, {"body": "detect previous runs performed unsure would live think cc fivetanley", "d": "11/2015"}, {"body": "nt dug exactly happening yet definitely bug", "d": "11/2015"}, {"body": "working also taking look since seem touch classes notice attrs different case rerender contains right value need see closure component relates rerender", "d": "11/2015"}, {"body": "think know happening check tonight morning", "d": "11/2015"}, {"body": "submitted pr fixing shortcat rerendering done soon preventing arguments closure component passed", "d": "11/2015"}, {"body": "serabe thanks work fix would able look updated twiddle tried clarify expecting behaviour actually see console essentially think firing correct value might expecting wrong thing", "d": "11/2015"}, {"body": "reopening review", "d": "11/2015"}, {"body": "think ember twiddle updates fix ok rwjblue know way test twiddle current master", "d": "11/2015"}, {"body": "seems working properly using correct sha ember canary confirm", "d": "11/2015"}, {"body": "confirm working thanks apologies miscommunication rwjblue slack", "d": "11/2015"}, {"body": "rfc suggests able send along additional attributes contextual components add attr contextual component twiddle additional attribute additional seems wipe closed attributes", "d": "11/2015"}, {"body": "please send updated tweedle seems work", "d": "11/2015"}, {"body": "serabe yup notice difference console add extra attribute myprop increment", "d": "11/2015"}, {"body": "see proper support glimmer components still making take account thank", "d": "11/2015"}, {"body": "ok thanks blocks feature need create select box component place track issue", "d": "11/2015"}, {"body": "pr referenced", "d": "11/2015"}, {"body": "thanks putting together list", "d": "11/2015"}, {"body": "im avoiding windows work take stab", "d": "11/2015"}, {"body": "making sublist good good maybe export var", "d": "11/2015"}, {"body": "also nt include templatecompiler feel like would nice use rollup", "d": "11/2015"}, {"body": "updated checkout outline remaining work also completed log hanging work source remaing global pains embertemplates support public api may want change someday could isolate internals something like late provides higher level api around global emberstrings support public api may want change someday could isolate internals something like late provides higher level api around global emberextendprototypes internal abstraction similar templates strings may unify emberimports emberlookup used quite bit according gh suspect isolate like suggestion", "d": "11/2015"}, {"body": "components template scope component instance case also since question bug probably question stackoverflow discuss", "d": "11/2015"}, {"body": "workmanw correct please feel free link back discuss andor stack overflow post", "d": "11/2015"}, {"body": "seems like bug", "d": "11/2015"}, {"body": "instantiate template components side effect decision work would either instantiate component figure injections would done container inject context template component would also figure deal things like type things also work today template components ensure initial render speed template components regress absolutely agree bug fix", "d": "11/2015"}, {"body": "rwjblue curious performance decision instantiate template components get issue sideeffect decision curious benefit decision eg maybe documentation issue using template components injections soup template components", "d": "11/2015"}, {"body": "curious performance decision instantiate embercomponent template components believe one factor performance sure others wycats tomdale would chime detailed reasoning", "d": "11/2015"}, {"body": "mikepost yeah mentioned right sufficient locks trek curious concepts need surfaced level api docs think", "d": "11/2015"}, {"body": "conversation slack emberviewemberattributebindingssupport mixin rwjblue saladfork docs go mixin update embercomponent whatever name", "d": "11/2015"}, {"body": "passed nonempty string never false perhaps meant", "d": "11/2015"}, {"body": "right closing", "d": "11/2015"}, {"body": "believe intended shortcut means technically block since one form expands wycats tomdale chancancode confirm", "d": "11/2015"}, {"body": "friendly pointright", "d": "11/2015"}, {"body": "yes intent moment", "d": "11/2015"}, {"body": "general think using hash helper template better solution number things ca nt take advantage jsland still would prefer js definition instead think addon providing functionality makes sense adding another computed macro core", "d": "11/2015"}, {"body": "agree hash helper template ca nt wait play around closurecomponents however nt see suitable candidate", "d": "11/2015"}, {"body": "olivierlesnicki closure components actions created templates thus hash macro js nt really provide benefit use cases would also prefer see addon perhaps would consider ember trying conservative add fewer macros thank olivierlesnicki", "d": "11/2015"}, {"body": "however nt see collect suitable candidate hash sure mean point would opposed almost new macros added giant grab bag mostly extremely difficult share utilities early ember timeframe longer true trivial make consume addon helpful macro", "d": "11/2015"}, {"body": "nt think follow please provide runnable demo shows mean", "d": "11/2015"}, {"body": "mvuckovic would definitely welcome example jsbin ember twiddle however believe behavior describe component template context component invocation correct template component equivalent part layout thus scope invocation restored going close please reopen provide information think regression otherwise misunderstood cheers", "d": "11/2015"}, {"body": "apologise bad explanation lack demo wanted components able extend modal component inherit functionality ui provide content inside demo understand happening works intended use partial templatename instead yield expected component would able wrap layout still access template", "d": "11/2015"}, {"body": "supposed work written first place work invoked glimmer component angles serabe going take peek spare time since angles behind ff nt huge rush yeah coordinating serabe helping would welcome seems work alright use haha insane work smile also vaguely related creating components closures ensuring work", "d": "11/2015"}, {"body": "mixonic great try whip pr next days seen nt look difficult", "d": "11/2015"}, {"body": "seems work alright use component haha insane work technically fine actually expected componentnodemanager want allow helper invoke either angle bracket curly bracket components need little thought removing assertion example using would mutable object autowrap helper curly bracket invocations", "d": "11/2015"}, {"body": "rwjblue thanks chiming want allow component helper invoke either angle bracket curly bracket components need little thought removing assertion nt thinking removing assertion instead intended investigate whether would possible make work passed see point mutability though assume falls needs higher level discussion maybe rfc category", "d": "11/2015"}, {"body": "nt thinking removing assertion instead intended investigate whether would possible make work passed component renatozannon ya nt trying suggest would take improper shortcut fix specific thing requiring folks use vs would make node manager understand three states curly angle nt matter really need nail mutability scenario tackling falls needs higher level discussion maybe rfc category nt really think needs rfc would like one angle bracket implementers chime choose path forward wycats tomdale chancancode thoughts angle brackets invoked allowed mutable object thoughts", "d": "11/2015"}, {"body": "believe consensus glimmercomponent could used automut would apply normal glimmer component semantics", "d": "11/2015"}, {"body": "believe consensus glimmercomponent could used automut would apply normal glimmer component semantics notes automut happens compilation step absolutely knowledge target iow nt know one invocation another runtime auto applied way currently know added automut infrastructure user template means make fix removing mutable object attrs could fixed adding flag automut", "d": "11/2015"}, {"body": "sorry delay tomorrow catching flight india b two weeks quite likely time address far like rwjblue idea marking automut unboxing fri nov robert jackson notifications githubcom wrote believe consensus glimmercomponent could used automut would apply normal glimmer component semantics notes automut happens compilation step absolutely knowledge target iow nt know one invocation component embercomponent another emberglimmercomponent runtime auto mut applied way currently know mut added automut infrastructure user template means make component component fix removing mutable object attrs could fixed adding flag mut automut reply email directly view github", "d": "11/2015"}, {"body": "similar issue search field uses autofocus parent route whenever child route gets rerendered due automatic search results search field loses focus child template even though child template autofocus fields", "d": "11/2015"}, {"body": "similar issue fixed little component javascript import textfield embercomponentstextfield import embereventedon text input autofocus class focusinput public export default textfieldextend focus element inserted dom return void becomefocused didinsertelement function focus", "d": "11/2015"}, {"body": "topaxi done well nt however", "d": "11/2015"}, {"body": "post link twiddle gist", "d": "11/2015"}, {"body": "pixelhandler feel free modify need", "d": "11/2015"}, {"body": "unfortunately nt something embers control least believe autofocus works browser detail automatically ember would likely result even poorer ux best solution tune manually similarly suggested", "d": "11/2015"}, {"body": "work around using latest version embermocha", "d": "11/2015"}, {"body": "need similar fix done controllers", "d": "11/2015"}, {"body": "also wonder somehow get rid recursion make way easier js engines optimize", "d": "11/2015"}, {"body": "preallocating sounds fine easy enough like see via benchmarks makes practical difference", "d": "11/2015"}, {"body": "samsaffron best way reduce cost less currently ember far much upfront internal requiring hits pretty hard invert make paygo pr demonstrates pretty substantial win needs someone cycles move idea forward", "d": "11/2015"}, {"body": "samsaffron yes reified shouldcould preallocated", "d": "11/2015"}, {"body": "samsaffron time would love get quick dirty benchmark suite loaderjs maybe using", "d": "11/2015"}, {"body": "patched embers heavily patched loader going update loaderjs proper realized already", "d": "11/2015"}, {"body": "ember nt use loader", "d": "11/2015"}, {"body": "begun life together embers loader hacked would nice reconverge point", "d": "11/2015"}, {"body": "information anywhere differences two context used", "d": "11/2015"}, {"body": "ember nt use loader begun life together beginning ember loader like different versions inlined various projects embercliloaderjs extracted made primary one information anywhere differences two diff", "d": "11/2015"}, {"body": "move addonify ember want app ember sure loader believe form unification must done", "d": "11/2015"}, {"body": "duplicate embercliembercli understand bugs frustrating please respectful people giving free time work stuff", "d": "11/2015"}, {"body": "plenty respect contribute means selfpublicising quality input little", "d": "11/2015"}, {"body": "nice contribution next time could submit pr fix problem", "d": "11/2015"}, {"body": "issue report unrelated ember internal development iswas issue dependency embercli tracked please follow issue developments", "d": "11/2015"}, {"body": "plenty respect indeed definitely comes well", "d": "11/2015"}, {"body": "helper works bit differently compared normal actions contexts affect behavior action helper attribute context handlebars value context contexts helper called closure action helper behavior simple passed function name read function actions property current context function read function passed create closure function arguments context action defined element space context template controller actions used way bubble routes controller implement specified action action hits route bubble route hierarchy context need defined bubble route", "d": "11/2015"}, {"body": "ok thanks lot response understand technical differences even comfortable lack consistency two behaviour imo two cases conceptually different admint difficulties understand different behaviour main point imo annoying one way pass parameters action inside helper found really really strange provide action controller handle additional parameter let imagine used able handle action route reason another deal action param understand change app add controller nothing explicit call sendaction route even possible action bubble even", "d": "11/2015"}, {"body": "bmeurant difference definitely painful one intended permanent work underway improve situation two rfcs land perhaps legacy element space actions deprecated suggest always use closure action example passing closure action instead string opt new world instead bubbling one need send action route often practice component controller deal models controllers deal transitioning routes controller using using techniques avoid bubbling inconsistency entirely action bubble even return true closure actions simply functions return value returned site invocation immensely powerful incompatible meaning action bubble general new actions take advantage lexical scoping matching behavior plain javascript transition bit bumpy new world far familiar new developers memorizing bubbling rules leave open deprecated elementspace actions though probably wo nt closed one pr", "d": "11/2015"}, {"body": "question related issue", "d": "11/2015"}, {"body": "mixonic sir really make clear simple answer really add documents", "d": "11/2015"}, {"body": "mixonic thx answer links rfcs read closely moving consistent solution good thing closure actions appear really powerfull indeed said sure understand consequences means element space actions deprecated required provide controller component action handler bubble anymore route nt totally comfortable point use handle many actions routes actions concerning retrieving model sending dealing api errors redirections etc imo routes best place handle beacause closely related routing manage cancellation rollback willtransition example even right model reached transitions called controllers components routable ones nt see operations responsibility controller component means ember amp force catch action controller rethrow want handle routes bother little think ember strength require us add boilerplate non value added code maybe missing something else", "d": "11/2015"}, {"body": "means ember amp force catch action controller rethrow want handle routes bother little think ember strength require us add boilerplate non value added code bmeurant routes controllers know soon routable components normal components replace info", "d": "11/2015"}, {"body": "means ember amp force catch action controller rethrow want handle routes well nothing forced even doubt deprecation want move things slowly deliberately yes bubbling gone longer discussion seems appropriate ticket discussed improved actions rfc elsewhere tl dr bubbling though well understood master still difficult use new developers even experienced developers given template calling basically need guess handler new actions system designed static predictable given know possibly defined current component controller know variable see came case passed attr cases block param confident system easier understand work bubbling solution addition get bonuses like actions really return value fantastic new curryingpartialapplication behavior using closure patterns boilerplate fear tremendously minimal passing action easy passing variable routable components route provide actions component", "d": "11/2015"}, {"body": "passing action easy passing variable routable components route provide actions component attrs sounds wonderful prefer business logic routes would wonderful able ability pass actions via mechanism firm idea passing actions routes work cf would pass function references property routes", "d": "11/2015"}, {"body": "timevans yeah details implementation obviously stuff rfc nt know exactly look like routable component provided route thus would also provided route component", "d": "11/2015"}, {"body": "thanks clarifying glad know gon na part routable components", "d": "11/2015"}, {"body": "mixonic thanks answering still dig little stuff routable components etc anyway right discussion long ticket take closer look previously pointed rfcs thanks", "d": "11/2015"}, {"body": "davidsteinberger twiddle working expected click event bubbles dom correctly meant actions bubbling closure action targeted controller never redirected router turn would check active routes defined action ie bubbling routes contrast nonclosure actions bubble routes action targeted controller action defined controller", "d": "11/2015"}, {"body": "mmun thanks explanation makes totally sense want prevent bubbling dom proper solution", "d": "11/2015"}, {"body": "davidsteinberger yes", "d": "11/2015"}, {"body": "none available versions actually working indexjs results version version", "d": "11/2015"}, {"body": "official package us ember historically shipped changing month sorry confusion", "d": "11/2015"}, {"body": "stefanpenner pr rfc follow", "d": "11/2015"}, {"body": "likely reserve ember package something else release ember package sentinel throws helpful message user tries use cc think mentioned anychance required cycles", "d": "11/2015"}, {"body": "stefanpenner thanks", "d": "11/2015"}, {"body": "referenced warning points solution described work properly see provided jsbin call example deprecation guide", "d": "11/2015"}, {"body": "rwjblue ah see thanks heart", "d": "11/2015"}, {"body": "quick update created async helper basically copy current one firing native mouseevents focus replaced every invocation test suite run without problem makes think firing native elements option retrocompatible", "d": "11/2015"}, {"body": "cibernox yes test helpers trigger via raw dom jquery level many cases users libraries use jquery triggering jquery world causes much grief solution like required believe originally supporting motivator unsure suspect might fine approach atleast things possible investigate compat hopefully dictate land improved handler", "d": "11/2015"}, {"body": "nt believe would take much time would translation jquery trigger native trigger remember inconsistencies browsers triggering keyboard events workarounds however also another task might want tackle first acceptance test helpers part ember core seems part embertesthelpers perhaps another addon see reason tie together people nt need wait ember get fixes like core team feel breaking apart", "d": "11/2015"}, {"body": "see reason tie together people nt need wait ember get fixes like think supplementary addon could created decide removeadd helpers reality added core lacked good addon system might something leaves core goes addon alternative set helpers could provided via addon", "d": "11/2015"}, {"body": "case rather attempt fix ember long backwards compatible proves possible create addon helpers", "d": "11/2015"}, {"body": "case rather attempt fix ember long backwards compatible much long backwards compat", "d": "11/2015"}, {"body": "native events like references real life", "d": "11/2015"}, {"body": "share various versions stuff atleast version ember", "d": "11/2015"}, {"body": "embercli node npm debug ember debug ember data debug jquery", "d": "11/2015"}, {"body": "mohamadatieh good idea create jsbin jsfiddle embertwiddle example code broken sometimes effort isolating error simple example show either mistake even expose bug worked", "d": "11/2015"}, {"body": "changing serializer jsonapiserializer made error disappear look code adapter extends restapi serializer extends jsonapi working understand", "d": "11/2015"}, {"body": "believe fix issue test", "d": "11/2015"}, {"body": "tested order changed action application route hit first still output breaks test", "d": "11/2015"}, {"body": "hmm error action return true", "d": "11/2015"}, {"body": "return handles error default keep bubbling per however returning either results issue", "d": "11/2015"}, {"body": "thought chance could related would thought people would running issue bug within ember especially referenced bugfix says lt ok", "d": "11/2015"}, {"body": "closing think tests hitting slightly different path thought", "d": "11/2015"}, {"body": "kk please ping want another set eyes", "d": "11/2015"}, {"body": "web control inside flex app actually official browser kind adobe provide additional references", "d": "11/2015"}, {"body": "quick google reveals web control kind flex may using old stale version webkit may also issues loadingrunning adobecom anyways might looking wrong tech information would great", "d": "11/2015"}, {"body": "gave try maybe meant osx seems load stuff correctly discussemberjscom even works correctly", "d": "11/2015"}, {"body": "stefanpenner thanks lot reply problem specific windows xp service pack wo nt able replicate osx installed browser xp able replicate blue screen issue well", "d": "11/2015"}, {"body": "need information browser actually suspect old broken webkit would like confirm writing wo nt fix ideally support anything reasonable need facts fact causing blue screen would indicate serious bug browser potentially even security concern", "d": "11/2015"}, {"body": "stefanpenner spent time investigate found root cause actually fontawesome angular js website also crashed xp machine remove library webpage loads issue could closed thanks help", "d": "11/2015"}, {"body": "could open issue guides repo", "d": "11/2015"}, {"body": "hello josemar sorry mistake happend reporting mistake opened issue guides regards ozan m\u00fcyessero\u011flu", "d": "11/2015"}, {"body": "maybe related", "d": "11/2015"}, {"body": "yes quaertym believe probably root issue", "d": "11/2015"}, {"body": "issue attrs proxy copying initial values called still within constructor think potential solution also mean small work reduction initial render try update next day", "d": "11/2015"}, {"body": "looks like functions properly beta canary branches", "d": "11/2015"}, {"body": "submitted ensure test would fail fails", "d": "11/2015"}, {"body": "working demos beta canary", "d": "11/2015"}, {"body": "thanks rwjblue found another use case similar work even canary worked fine let try add test", "d": "11/2015"}, {"body": "sorry submitted blindly ember dependencies compatible node version could run tests locally", "d": "11/2015"}, {"body": "looks complete thanks putting together list rwjblue", "d": "11/2015"}, {"body": "dgeb attempt docs stuff tonight guides review hope free tricky bits", "d": "11/2015"}, {"body": "mixonic thanks best ping questions new stuff", "d": "11/2015"}, {"body": "feature enabled default working embertesthelpers updates make sure handled properly", "d": "11/2015"}, {"body": "sounds good tackle", "d": "11/2015"}, {"body": "fwiw guides given cursory review though undertaken long prose dynamic lookup think may appbased use case cases around testing usually testing internals", "d": "11/2015"}, {"body": "thanks mixonic", "d": "11/2015"}, {"body": "published polyfill addons use pretty easily", "d": "11/2015"}, {"body": "timevans working updating embertesthelpers provide properly", "d": "11/2015"}, {"body": "emberqunit embermocha versions released take advantage new feature checking item checklist", "d": "11/2015"}, {"body": "took time update emberdata hoping changes make ember data ember data would perfectly fine", "d": "11/2015"}, {"body": "emberdata pr merged checked liquidfire pr submitted", "d": "11/2015"}, {"body": "dgeb begun work bullet point", "d": "11/2015"}, {"body": "rwjblue sorry delay try wrap tomorrow", "d": "11/2015"}, {"body": "added url deprecation deprecation guide", "d": "11/2015"}, {"body": "mixonic initial guide audit mentioned created track updating di page mentions checking item", "d": "11/2015"}, {"body": "updated", "d": "11/2015"}, {"body": "implemented fake container injection", "d": "11/2015"}, {"body": "thanks dgeb fix merged completing last item checklist closing please let know forgotten something", "d": "11/2015"}, {"body": "found well seems property nt set tests", "d": "11/2015"}, {"body": "tracked tests pass commit fail afterwards may needs update handle sure", "d": "11/2015"}, {"body": "see checklist feature", "d": "11/2015"}, {"body": "seems owner property renderenv nt set tests yes embertesthelpers definitely needs tweaks work canary issue affect beta branch also demonstrating issue", "d": "11/2015"}, {"body": "super anything help rwjblue", "d": "11/2015"}, {"body": "following configuration fix", "d": "11/2015"}, {"body": "ok closing", "d": "11/2015"}, {"body": "nt issue ember believe iterates enumerable properties object think looking something like following", "d": "11/2015"}, {"body": "setting extendprototypes false mitigate theory could define prop non enumerable comes perf issues believe pollution prototype bad move working move away please note enumerating array idiomatic via loop nt generally recommended way unless also want pollution mozilla docs even bring point addition run times nt correctly optimize path either hopefully soon wo nt true", "d": "11/2015"}, {"body": "thanks reply", "d": "11/2015"}, {"body": "going close mentioned future work planned continue move away polluting natives default", "d": "11/2015"}, {"body": "hi stefanpenner understand article allocate current code see allocation right vm materialize also aliasing think keep readability code think solution get rid allocation think work make pr javascript function buildinjections container var hash argumentslength gt var injections var injection return hash", "d": "11/2015"}, {"body": "proposal looks good also aliasing container think keep readability code think since never set end world alternatively could", "d": "11/2015"}, {"body": "stefanpenner allowed use babel inside babel use approach turns javascript use strict function getargs container var len argumentslength list array len gt len key key lt len key list key arguments key consolelog list getargs", "d": "11/2015"}, {"body": "pr referenced fails passes identifies differences behaviour around bubbling handled errors", "d": "11/2015"}, {"body": "performing git bisect ember looks like commit broke changed behaviour looks like time commit allowances made handled errors still leaves position currently impossible test operation performed error hook acceptance test", "d": "11/2015"}, {"body": "awesome thanks bisecting", "d": "11/2015"}, {"body": "modified example bit use action catch errors model hooks go elsewhere really sure nongraceful error handling errors application model hooks even look like time contains crucial boot startup logic really nt fail least existing hooks give opportunity catch bug report error notifying services restart page etc think", "d": "11/2015"}, {"body": "nathanhammond try applicationerrorhbs application controller since application route nt succeed think gets error", "d": "11/2015"}, {"body": "nathanhammond stefanpenner nt think bug though nt think thought pods cc wycats rwjblue example error template application", "d": "11/2015"}, {"body": "weird krisselden twiddle link nt open safari chrome", "d": "11/2015"}, {"body": "issue reported embertwiddle opening properly safari", "d": "11/2015"}, {"body": "krisselden works fine app code tried write acceptance test verify acceptanceerror route entered error encountered would work would application controller", "d": "11/2015"}, {"body": "nickiaconis agreed hidden piece code workaround decided make application implicit route name way define sibling needs address pods cc rwjblue wycats", "d": "11/2015"}, {"body": "could supply testdemo actually broken behaviour describe firefox consistent several ember versions extending models past never hit anything like firefox could missed though far tell way emberdata works eachcomputedproperty work intended", "d": "11/2015"}, {"body": "firstly thanks reading replying another jsbin jsbin getting issue firefox iterating attributes model created store skips property observer happening putting together demo shows specific context ran across bit timeconsuming may configure adapters forth think demonstrates issue pretty well way suddenly start skipping attributes happen observe child class code relies eachcomputedproperty broken least seems", "d": "11/2015"}, {"body": "oh think confirming one second jsbin gives much clearer example issue example confirm following firefox using ember inspector instance bar model lastname recognized attribute show look parent class foo persisting model using save payload contain lastname behavior ember potentially breaking emberdata implementations right problem goes much deeper seems definitely breaks eachcomputedproperty since also affects regular attributes level shown first jsbin knows else might work expected sure experienced enough ember debug although curious might even try mean time suggest rewording issue think removing nasty deep bug part would help taken seriously", "d": "11/2015"}, {"body": "glad nt going crazy quite worrying staggered first switched firefox realised half models longer existed haha thanks advice title suggestions making look bit serious experienced issue reporting", "d": "11/2015"}, {"body": "oh mentioned first post seems caused observer setup happens call suspect something way properties inherited added object produced produced possibly something relates kind strange check firefox automatically use loop object imagine firefox viewing observed property lower prototype chain therefore ignores speculation really might helpful", "d": "11/2015"}, {"body": "using docs provided dirty workaround require immediate fix firefox believe bug creation mandatory getters setters extend class computed property correctly recognized descriptor", "d": "11/2015"}, {"body": "ah good work thanks already refactor code obvious breaking places copy definitions childmost class could well missed good temporary hack cover situations way place used even workaround may subtle breakages throughout ember time today might look tomorrow hacking something fixes", "d": "11/2015"}, {"body": "today found time look issue checked master wrote test confused test succeeded firefox already fixed", "d": "11/2015"}, {"body": "ah well good thanks looking tried canary build jsbin still bit uncertain though first jsbin posted still fails clearly still something weird going however sure point affects public facing apis find anything open another issue", "d": "11/2015"}, {"body": "bryanaka make jsbin jsfiddle embertwiddle example behavior perhaps try versions ember release see behavior changed way sounds like bug returning boolean", "d": "11/2015"}, {"body": "bit roughsimple", "d": "11/2015"}, {"body": "pixelhandler believe breaking change introduced", "d": "11/2015"}, {"body": "nagits sounds like feature request see use rfc issues propose rough idea basically great place test waters", "d": "11/2015"}, {"body": "closing rfc likely better approach although doubtful happen rather library provide internationalized string helpers", "d": "11/2015"}, {"body": "kamalaknn perhaps create pull request guides project", "d": "11/2015"}, {"body": "alexanderalvarez sounds like feature request see use rfc issues propose rough idea basically great place test waters", "d": "11/2015"}, {"body": "would able create example using jsbin jsfiddle embertwiddle perhaps instead storefilter return promise content recordarray", "d": "11/2015"}, {"body": "actually might related since happened upgrading component control multiple active instances time related could try using addon embercomputedsortby", "d": "11/2015"}, {"body": "running issue ember trying reversed checked property checkbox like checkbox checked set property setter called checkbox checked unchecked", "d": "11/2015"}, {"body": "vincz nt returning setter basically flipping many times setter return thing getter would return set checkbox sets value means fine still want checkbox true return working example", "d": "11/2015"}, {"body": "update experience ember", "d": "11/2015"}, {"body": "working large emberjs application issue using ember cli called test first thought phantomjs problem happens also firefox phantomjs emberjs tests memory usage increases around mib tests emberjs grows mib currently ember phantomjs crashes around tests memory usage growing around gib advice debug", "d": "11/2015"}, {"body": "without reproduction work hard diagnose", "d": "11/2015"}, {"body": "tried steps julkiewicz lists results new container test chromium always case google chrome case taking memory snapshots one never resuming execution manually execution resumed manually number container objects falls back", "d": "11/2015"}, {"body": "going something similar app migrating ember ember made sure upgrade libs latests improvements qunit emberqunit etc following similar approach wrote something although sure demonstrates problem entirely even issue far hopefully stefanpenner take quick look suggest ideas debug", "d": "11/2015"}, {"body": "update issue still occurs ember", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "ameliadowns gcassie facing issue either found way get cp listening recompute", "d": "11/2015"}, {"body": "davidsteinberger reverted ember time problem seems isolated", "d": "11/2015"}, {"body": "stefanpenner anyone thread confirmed one prs mentioned caused issue try get soonish would help failing test pr anyone interested issue wants see addressed sooner", "d": "11/2015"}, {"body": "krisselden think failing test pr issue", "d": "11/2015"}, {"body": "davidsteinberger gcassie reverted ember", "d": "11/2015"}, {"body": "krisselden yet chance", "d": "11/2015"}, {"body": "seeing issue codebase got cp dependent key never updates even one records definitely becomes dirty suspect need revert ember well work around", "d": "11/2015"}, {"body": "gcassie took look test think fails ember sure shows issue", "d": "11/2015"}, {"body": "seen issue array observer possibly root cause triggering ember", "d": "11/2015"}, {"body": "earlier note per worked around using dependent key fortunately nt revert would still nice see fixed", "d": "11/2015"}, {"body": "tried ember today still see issues", "d": "11/2015"}, {"body": "rwjblue close one", "d": "11/2015"}, {"body": "someone please help write example emblem things tried get work nt get error last example one actually showed options examples empty select value get updated", "d": "11/2015"}, {"body": "using plain html without select tag think onselect action selectchanged selectchange receives function selectchanged event eventtargetvalue", "d": "11/2015"}, {"body": "thanks mxrguspxrt really wanted use mul thing", "d": "11/2015"}, {"body": "try mut thing instead mul thing make sure ember version supports", "d": "11/2015"}, {"body": "note typo mikepost comment", "d": "11/2015"}, {"body": "using dependencies never supported version ember covered test thing work without issue decompose multiple cps", "d": "11/2015"}, {"body": "argue since announced blog post de facto public safe using hooks", "d": "11/2015"}, {"body": "fixed latest", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "also running think quite bad bug always fire stated docs", "d": "11/2015"}, {"body": "bitten well add completely unrelated route js import ember ember export default emberrouteextend beforemodel function thistransitionto works query params seem get stripped get error using thanks", "d": "11/2015"}, {"body": "issue fixed guides think close issue point bratukham future want open issue guides repo love hear nt always catch issues", "d": "11/2015"}, {"body": "fiddles moved embertwiddle updated ember sticky query params working loading template added query params sticky", "d": "11/2015"}, {"body": "possible also related kind similar transition inside existing transition usually always results call though complicated ca nt say sure", "d": "11/2015"}, {"body": "researching looks like kuzirashi done lot great work moving along would love help move forward needs work closed kuzirashi work finished", "d": "11/2015"}, {"body": "kylemellander thanks research think closed", "d": "11/2015"}, {"body": "work around able get sortable table working calling prior changing index however worked property set helper", "d": "11/2015"}, {"body": "jarovdh nothing causing call helper sees obj", "d": "11/2015"}, {"body": "issue dumping ground complaints much actionable provided examples jsbinembertwiddle actually working designed misunderstanding helpers interior object mutations rest misc issues addon breakage please open issue addons", "d": "11/2015"}, {"body": "using js code used example classnamebindings", "d": "11/2015"}, {"body": "movement classifying issue documentation wrong minimum longer intention resetting namespaces", "d": "11/2015"}, {"body": "since never worked properly lets update documentation unfortunate believe intended work \u30c4", "d": "11/2015"}, {"body": "ran resources behavior understanding route replace resource worked resources broken routes seems like functionality lost deprecation", "d": "11/2015"}, {"body": "supposed work resources tested way back never worked correctly point rwjblue making docs reflect currently working", "d": "11/2015"}, {"body": "got thanks danmcclain", "d": "11/2015"}, {"body": "got bitten well although updating docs would prevent confusion work advertised would even cooler update talked alexspeller slack seems like ca nt work advertised think docs need updated thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "also experiencing give little detail particular case seems time called controller using remote pagination null sequence events far infer route receives model emberdatajqxhr route updates default values happening model fetching gets called controller method finishes calling property controller undefined error happens note using computed properties route using emberclipagination though bug occurs setting initial static value", "d": "11/2015"}, {"body": "rwjblue stefanpenner happening ember regression compared", "d": "11/2015"}, {"body": "orkon open new issue", "d": "11/2015"}, {"body": "rwjblue sure opened new one", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "hi facing problem addon using application implemented wayaround probably bit dirty works used hook documentation called rerender renamed overridden function addon buffer parameter overridden render receiving local buffer rendering tempate using tested solved problem could better solution works moment daniel", "d": "11/2015"}, {"body": "seems bring nice initial render speed improvement", "d": "11/2015"}, {"body": "thank", "d": "11/2015"}, {"body": "chancancode perhaps updated", "d": "11/2015"}, {"body": "case trying retry aborted transition identical results still working ember workaround", "d": "11/2015"}, {"body": "warning solved model working fine without warnings model import ds emberdata export default dsmodelextend procolor dsattr bgcolor embercomputed function var color thisget procolor return new emberhandlebarssafestring backgroundcolor color property procolor template lt div style modelbgcolor gt", "d": "11/2015"}, {"body": "realize rwjblue custom component workaround bug fixed non issue", "d": "11/2015"}, {"body": "bug cursor position embertextfield issue knowledge stable versions ember", "d": "11/2015"}, {"body": "estimated landing time ember fastboot", "d": "11/2015"}, {"body": "ember internal feature fastboot takes advantage new visit api enabled default canary builds planned ember allow emberclifastboot continue improve stability eventually graduate version", "d": "11/2015"}, {"body": "tomdale closing since emberapplicationvisit enabled please reopen update checklist additional items would like track issue", "d": "11/2015"}, {"body": "depending situation may able reverse using cp based query param case using pikaday needs js date want date url could probably avoid using moment helps native date timezone issues", "d": "11/2015"}, {"body": "ran problem well ember gt using emberclibootstrapdatepicker solution set query params actions property compute qps turned back date object initialization done route object contains qps hash nt documented ember guide", "d": "11/2015"}, {"body": "right track complete write simple example show various situations based solution", "d": "11/2015"}, {"body": "agree disagree nightire prefer implementation", "d": "11/2015"}, {"body": "seems got fixed happen ember embercli htmlbars chance crept back error message typeerror read property push undefined objectexportsdefaultwillrender handlekeyword objectkeyword exportsdefault handlekeyword handleredirect objectinline objecthtmlbarsutilobjectutilsmergecontent renderresultpopulatenodes renderresultrender", "d": "11/2015"}, {"body": "first thought components failing computed properties maybe clue one dead simple gets error import ember ember const computed observer run typeof ember jshint ignore line const embera jshint ignore line import layout templatescomponentsaddpageheader export default embercomponentextend layout layout classnames titleblock repo computedalias name npm computed name function const npm name thisgetproperties npm name return npm npm name title computedalias name repoowner default test failing generic renders test", "d": "11/2015"}, {"body": "ksnyde please open new issue reproduction jsbinembertwiddle", "d": "11/2015"}, {"body": "aexmachina think works feel free close issue feel resolved", "d": "11/2015"}, {"body": "tried nt appear work also mention event doc link sent using latest embercli componentsember canary send example project simple templatesapplicationhbs change works controllersapplicationjs import ember ember export default embercontrollerextend actions foo consolelogbind console things action seems receive last value instance indicated docs behaviour happens use component jsbin template used ember always used emberjsjsbincom past using ember", "d": "11/2015"}, {"body": "seeing behavior occurring production builds think fixed ideas would prodspecific though", "d": "11/2015"}, {"body": "yagni indeed removed pr addresses bug likely causing difference proddev retest case beta today stable tomorrow would helpful might wonkiness addressed", "d": "11/2015"}, {"body": "stefanpenner embarrassing amount debugging verify instead", "d": "11/2015"}, {"body": "confirm still issue well calling transition results url updated application getting broken state subsequent calls failed correctly update route workaround longer works nt methods", "d": "11/2015"}, {"body": "guide topic talks sendactions controller somebody add guide", "d": "11/2015"}, {"body": "yanzixiang nt sendactions components controller reference existed action attribute component name component action context bound called closure actions meantime recommended way use actions remember nt send actions try bind actions components possible", "d": "11/2015"}, {"body": "err messages seem fine firefox able click stack traces links big problem wish could use ffx instead chrome machine ffx pages load far faster", "d": "11/2015"}, {"body": "hi like first comment way propertiesobjectofpropertiestobindto trying use component helper dynamic properties thanks", "d": "11/2015"}, {"body": "think safe close issue favour rfc routing service ilovett feel free close issue nt solved rfc would right place continue discussion", "d": "11/2015"}, {"body": "embercli modules think safe close jayphelps totally feel resolved feel free close", "d": "11/2015"}, {"body": "confusing setter could return anything meaningful opinion ember needs cache value invoking setter value imediately returned getter otherwise unecessary confusing duplication responsability striving make component input display value particular formatted way typing input getter never gets invoked must better way duplicating getter logic inside setter javascript import ember ember import formatter servicesformatter export default embercomponentextend format normal value null displayvalue embercomputed get var value thisget value tried without volatile input helper inside component template wrong", "d": "11/2015"}, {"body": "confusing setter could return anything meaningful yes silly something wanted change time unfortunately nontrivial breaking change pushing decorators decorator variation drop support useful simple situations learned complex scenarios get confusing quick", "d": "11/2015"}, {"body": "someone good way refresh skrollr ember thanks sharing find surprisingly hard tried send action view application route use added action route actions still nt right height thinking using terribly hacky edit transition issue using transitionend callbacks helped fix", "d": "11/2015"}, {"body": "leooo heh comments suuuuuuper dated would nt go anything close approach anymore still trouble ping slack", "d": "11/2015"}, {"body": "kind new ember got pretty stuck exception occurring inside rsvppromise would maybe nice even stupider way make sure errors get consolelog like putting default emberonerror embercli generated appjs", "d": "11/2015"}, {"body": "rwjblue used trick starting new project function nt exists anymore working solution", "d": "11/2015"}, {"body": "bargs facing issue able resolve", "d": "11/2015"}, {"body": "believe work around saving variable first load could conditionally check avoid taking actions second load nt work application anymore though nt know fixed future versions", "d": "11/2015"}, {"body": "bargs thanks", "d": "11/2015"}, {"body": "boogie work javascript appmyfield embertextfieldextend keyup function event thissend mano", "d": "11/2015"}]