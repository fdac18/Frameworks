[{"title": "feat improve ergonomics search params", "body": "currently one construct hand like think improve ergonomics one write cc jeffbcross robwormald", "num": "5516", "d": "11/2015"}, {"title": "tests catch errors rejected promises automatically", "body": "javascript unit tests currently promise rejections caught promise returned like able catch globally see comments", "num": "5515", "d": "11/2015"}, {"title": "ca nt build angular fresh clone", "body": "cloned angular repo went steps developer docs build failing steps reproduce clone master install dart sdk install dartium set dart env variables running node running npm npm install looks good run nodemodulesbingulp build lintprotosdart errored ms error generated dart protobuf files date please run found modulesdarttransformlibsrctransformcommonmodelannotationmodelpbdart found modulesdarttransformlibsrctransformcommonmodelimportexportmodelpbdart found modulesdarttransformlibsrctransformcommonmodelparametermodelpbdart found modulesdarttransformlibsrctransformcommonmodelngdepsmodelpbdart found modulesdarttransformlibsrctransformcommonmodelreflectioninfomodelpbdart run nodemodulesbingulp genprotosdart dart sdk detected using gulpfile partyangulargulpfilejs starting genprotosdart genprotosdart errored ms error could detect protoc failed rebuild dart proto code objectmoduleexportsgenerate c usersgeneric gulp c usersgeneric moduleexports c usersgeneric gulporchestratorruntask c usersgeneric gulporchestratorrunstep c usersgeneric gulporchestratorstart c usersgeneric c usersgeneric processtickcallback functionmodulerunmain startup process general picky node npm versions right versions installed npm installed correctly ca nt build project machine running windows", "num": "5514", "d": "11/2015"}, {"title": "improve async pipe support rx", "body": "use check determine object observable change reason async pipe depend anything rx specific used observables implement protocol instance used different version rx create sync behaviorsubject bind template like see instead showing first value show null fix need change", "num": "5509", "d": "11/2015"}, {"title": "form number input valid", "body": "looks like numeric input fields nt accept valid value following markup reporting digits reporting digits required validation div shows form allowed submit", "num": "5507", "d": "11/2015"}, {"title": "feat router allow components nullundefined", "body": "currently working kind contacts app ran use case nt found satisfying solution yet thing basically holds display views one views view call combines list contacts detail view contact contact list always shown whereas details view either empty contact loaded show details contact list template looks like root component created route created following child routes thing want able load either filled would filled know contact display would empty otherwise empty expectation would still route would display list contacts way found achieve create empty template create route uses fill life expect expect create route either leaves component part sets vision would work sure makes sense real world app would probably sort dummy component displays text please click contact load anyways wonder strong reason prevents us showing components empty plunkr demonstrates problem", "num": "5505", "d": "11/2015"}, {"title": "proposal convention export providers angular libraries", "body": "consumer thirdparty angular libraries may immediately really clear providers load including library example installing thirdparty library like consumer library must know providers load without knowing inner workings library javascript must know import import translateservice specify required providers bootstrap appcomponent translateservice make easier proposal convention convention angular libraries export property includes providers need loaded default javascript simply import providers alias import providers load providers library author specified bootstrap appcomponent would help consumers immediately load providers without knowing inner workings library loss flexibility consumer still choose ignore default export specify individual providers needed prior art angular team already uses similar approach angular libraries javascript import routerproviders bootstrap appcomponent routerproviders next others feel add angular styleguide already one", "num": "5503", "d": "11/2015"}, {"title": "bug child routers root components path must throw pushstate error", "body": "rootrouter appts configured like path redirects child router child component case indexcomponent configured like links indexcomponent template always throw following error double slashes front hreflink router translates route rootroutercommit method automatically prefixes slash emitpath assumes emitpath possible already leading however path childcomponent actually possible emitpath defined stringifyinstructionpath method defined use case instructioncomponenturlpath empty stringifyaux instruction empty stringifyprimaryprefixed leading propose fix bug checking rootroutercommit method whether emitpath leading slash case adds another one", "num": "5502", "d": "11/2015"}, {"title": "component completely recreated using canreuse", "body": "might misunderstanding purpose canreuse noticing component recreated scratch navigating back route radio button retains value returning impression canreuse return value false would recreate entire component dom template typescript canreuse next componentinstruction prev componentinstruction return false code demo steps reproduce select gender navigate away different component navigate back observe selected gender step retained despite canreuse returning false", "num": "5500", "d": "11/2015"}, {"title": "whats reason behind frequent snapshot releases", "body": "almost three weeks ago yjbanov started frequently releasing snapshots question whats reason behind limited perception find annoying ca nt see directyl github current alpharelease severe problem still view packagejson look npmjscom reason behind flooding repo tagsreleases", "num": "5499", "d": "11/2015"}, {"title": "controlgroupcontrols returns abstractcontrol", "body": "currently working controlgroup control get control within controlgroup like get abstractcontrol problem ca nt use method abstractcontrol since method control class get error within ide compiling running code anyway work since runtime actually receives control abstractcontrol", "num": "5497", "d": "11/2015"}, {"title": "using rxjs functional way", "body": "posted sample code rxjs github shows integration rxjs http list view paging support guidelines using reactive principles components", "num": "5496", "d": "11/2015"}, {"title": "directive binding", "body": "trying create reusable textinput component set forms right able show data model textinput component ca nt make way binding change modelname whenever type plunker form component import component oninit coredirectives formdirectives import textinput widgetsformtextinput component selector formedit directives coredirectives formdirectives textinput template export class formeditcomponent public model id name abc textinput import component view input coredirectives component selector textinput view directives coredirectives template export class textinput input id string input label string input value string", "num": "5495", "d": "11/2015"}, {"title": "ngmodel example work windows edge", "body": "ngmodel plunker example work windows edge browser", "num": "5494", "d": "11/2015"}, {"title": "smart routes", "body": "hello want propose extend router urlparser angular make smarter big projects deal complex routes optional params want work one route also keep simple clean also nt want duplicated urls empty segments something like example pagination page access page via also nt want url like avoid kind problems made backend framework smarter routes resolve issues described happy implement standard angular router make community happier made way define parameter may optional default value restrict regex add symbol end make greedy example equal equal define optional part route would valid segment inside syntax goes recursively example example route syntax greedy required segment could symbol doest exists segment disappear greedy optional segment match set greedy also required segment default value could number starts valid via next urls call params get nt value default value call get call get call get get idea smart big plus seo cheers", "num": "5492", "d": "11/2015"}, {"title": "changedetection breaks component mutates input", "body": "component uses changedetectionstrategyonpush one inputs gets modified internally within component response event handler subsequent modification component inputs picked change detector plunker reproduce click set click set click set expected result progress bar set actual result progress bar set", "num": "5491", "d": "11/2015"}, {"title": "observable sequence click events using rxjs", "body": "using rxangularjs library click events turned observable sequence think library works achieve internal eventemitter integrate rxjs example rxangularjs library", "num": "5489", "d": "11/2015"}, {"title": "input output syntax consistent", "body": "dart file work use like work must would love annotations would handle html casing makes much easier copy paste propertiesevents component code html", "num": "5487", "d": "11/2015"}, {"title": "working files angular", "body": "hi guys working project support angular want upload images directly api could use angular similar job tried using ngmodel input type file get path look like", "num": "5482", "d": "11/2015"}, {"title": "dynamiccomponentloader ability load components w context hostlocation elementref", "body": "allow pass providers newly created component use works great however also useful could specify newly created component uses context hostlocation elementref new component going next possibly additinional arg methods functionality able automatically generate modaldialog service user creates new modal could use context user root component cc igorminar tbosch", "num": "5481", "d": "11/2015"}, {"title": "input property set decorator setter used", "body": "input property set annotation setter used getter setter present setter available everything ok also works use property annotation plunk", "num": "5477", "d": "11/2015"}, {"title": "action request sent using action attribute form", "body": "closed issue still reproductible code sample", "num": "5476", "d": "11/2015"}, {"title": "add support angularentrypoint functions methods implemented arrow functions", "body": "", "num": "5474", "d": "11/2015"}, {"title": "make public api webworker serializer", "body": "currently import serializer classes trying kill import paths file specifies serializer public api", "num": "5473", "d": "11/2015"}, {"title": "windows unable run js unit tests", "body": "fixes source maps introduces preprocessor longer possible run unit tests windows due many files opened ie running quick workaround unlock testing locally remove new preprocessor karma configuration following error raised every file folder", "num": "5471", "d": "11/2015"}, {"title": "public api test fails many browsers", "body": "passed chrome ieedge since browsers error raised cc vsavkin", "num": "5470", "d": "11/2015"}, {"title": "rangeerror maximum call stack size exceeded adding listener websocket chrome browser", "body": "loaded ca nt add event listener websocket without getting infinite loop zonejs course issue actual app however plunk simplified loading angular libraries angular script tag removed websocket works get error run example chrome firefox", "num": "5469", "d": "11/2015"}, {"title": "tests need way handle asynchronous behavior happens template", "body": "zones unit tests work completely see asynchronous tests need return promise run completion catch errors difficult asynchronous event comes template hard get hold promise example enter export class mycomponent pending promise terrible solution stored tests enter thispending getapromisesomehow dostuff current test would look like js stuff injectasync testcomponentbuilder tcb gt return tcbcreateasync mycomponent fixture gt fixturedetectchanges var compiled fixturedebugelementnativeelement cc rkirov", "num": "5468", "d": "11/2015"}, {"title": "implement observechildren similar api", "body": "previously discussed vsavkin jeffbcross background programmatically listening events propagated children difficult currently consider component n components accordionitem component might emit eventoutput used set currently active item currently best way achieve accordionitem component would inject parent accordion accordionitem register parent call method close others typescript component selector accordion class accordion items accordionitem register item accordionitem thisitemspush item toggleactive selecteditem accordionitem thisitemsforeach item gt item selecteditem itemactive false selecteditemactive true component selector accordionitem inputs active class accordionitem active boolean constructor private accordion accordion accordionregister setactive thisaccordiontoggleactive ideally child component would simply expose select event parent accordion currently easily get ahold children via whatever clean way listen events emitted children proposed syntax implement decorator similar would enable observation events emitted child components cc pkozlowskiopensource foxandxss", "num": "5467", "d": "11/2015"}, {"title": "move eventmanager", "body": "dom specific renderers platforms something similiar probably different way", "num": "5465", "d": "11/2015"}, {"title": "responsedata always converted string chrome", "body": "downloading word amp pdf docs via rest api responsedata always converted string extended characters decoded happens chrome firefox amp ie current work expected maybe xmlhttprequest problem also reported chrome var config responsetype arraybuffer", "num": "5463", "d": "11/2015"}, {"title": "unit testing ngupgrade applications", "body": "one write unit tests hybrid applications mixture angular angular components able run test suite tests achieved always mocking crossframework dependencies using angular components angular components nt see way test hybrid either two approaches minimal example app demonstrating issue see", "num": "5462", "d": "11/2015"}, {"title": "chore remove private imports http", "body": "parts http importing private paths import public barrels vsavkin enable automatic restriction module robwormald lump whenever get back http work", "num": "5460", "d": "11/2015"}, {"title": "type definition conflict jquery tsd", "body": "trying compile typescript file imports something also references tsd type definitions jquery get following error typescript compiler app doe refer protractor way types pulled angular internally seems use case running hybrid angular app upgrade angular type definitions tsd also pull jquery type definitions suspect commonly used upgrades minimal repo reproduces problem suggested fix nt include protractor type definitions unless user asks", "num": "5459", "d": "11/2015"}, {"title": "add log like functionality angular", "body": "directly writing statements throughout apps codebase bad nt possibility centrally deactivate plans integrating like feature even something bit advanced quickly seen diaryjs seems abandoned", "num": "5458", "d": "11/2015"}, {"title": "feat router expose observable public propertymethod", "body": "currently router uses observablewrapper allow subscribing url updates want access private subject property access observable directly use case using redux store manage application state allows us capture current url router navigation combined redux dev tools would allow router used navigate back previous urls states associated url point time sample code current workaround js const routerobservable gt router subject routerobservable filter url gt url thiscurrenturl subscribe url string gt url thislasturl statedispatch routenavigate url", "num": "5457", "d": "11/2015"}, {"title": "custom jasmine matchers", "body": "since angular needs wrap around jasmine custom stuff stuck bit extending jasmine let say want add custom matcher want use get guess needs way register new matchers perhaps party libraries needs extend custom matchers plan convention community spread one", "num": "5456", "d": "11/2015"}, {"title": "routeparamsparams nt decodeuricomponent", "body": "routeparam read browser uri encoded routeparams still returns uri encoded string think routeparams return decoded uri string otherwise think sort setting decode encode default example url route pattern looks like thus however decodeduri given browser", "num": "5455", "d": "11/2015"}, {"title": "complex forms", "body": "would nice able separate concerns large forms define reusable form components sections might used across multiple different forms sure best approach would mind something like class subformmodel somesubvalue string injectable class formmodel somevalue string constructor public submodel subformmodel component selector subform template directives formdirectives class subformcomponent constructor private submodel subformmodel component template directives formdirectives subformcomponent providers formmodel subformmodel class mainformcomponent constructor private model formmodel work current except validation state subform taken account parent form makes sense since subform component separate form object unfortunately ngcontrol directive subform throw injector error without form element component ca nt find controlcontainer provider also way reference subform parent eg", "num": "5454", "d": "11/2015"}, {"title": "enable long stack traces ngzone default", "body": "information always better especially beginning develop app", "num": "5453", "d": "11/2015"}, {"title": "aid debugging exceptionhandler messages tagged exceptionhandler", "body": "eg compiled dart app seeing following exception exception instance progressevent source stacktrace source null source examining source revealed message printed angular exceptionhandler however source obvious spent debugging time looking different exception handler instead printing exception would better exceptionhandler printed exception caught angular exceptionhandler instance progressevent", "num": "5450", "d": "11/2015"}, {"title": "documentation esnext wo typescript", "body": "correct ng team going provide documentation want write esnext ie without using typescript example would useful trying inject services services current solution seems rely either typescript parameter decorators ecmascript decorator proposal given presented proposed platform angular ngconnect seems like clear path want use platform also team says mean actual decorators esnext ie future unknown javascript would include decorators perhaps even parameter decorators", "num": "5449", "d": "11/2015"}, {"title": "attaching directive image prevents loaded interpolation", "body": "sorry long title code currently works correctly add directive grab image element interpolation nt work anymore image nt loaded nt work anymore remove interpolation write image name directly works guessing must something interpolation interpreted later time directive hijacking element behavior something like plnkr reproduce load show image image path correctly printed console expected behavior right asked gitter timezone makes everything difficult", "num": "5448", "d": "11/2015"}, {"title": "support labels angular expressions", "body": "chatting morning alxhub matsko yjbanov vsavkin agreed add labels angular expression language support end result allow us write something like transformed important bit expression parser accepts something like provides bit colon string transformed", "num": "5445", "d": "11/2015"}, {"title": "remove asynctestcompleter", "body": "asynctestcompleter already removed jsts public testing library remove external lib well blocked removing need internal dart tests see", "num": "5443", "d": "11/2015"}, {"title": "async pipe continuously reloads url used call url passed method", "body": "sure intentional seems counterintuitive people requesting invalid resource example one one request made process stops people requesting invalid resource request refired immediately error continues indefinitely plunkr see binding straight people cleaner imagine many people used things like peopleservicegetpeople think handling case better retrying request repeatedly supporting method calls also allows parameter passing", "num": "5442", "d": "11/2015"}, {"title": "ngselectoption writes objecttostring value instead object", "body": "tried use ngselectoption described doc unfortunately value filled city object expected citytostring guess since result string object object reproduce isolate created plunker", "num": "5441", "d": "11/2015"}, {"title": "querylist iterable", "body": "trying use loop typescript yields following compilation error usage example adding vsavkin reference", "num": "5437", "d": "11/2015"}, {"title": "eventemitter nt work inside ondestroy", "body": "component eventemitter annotated output events emitted never reach handlers adding vsavkin reference", "num": "5436", "d": "11/2015"}, {"title": "unable bind property element", "body": "creating reusable form control incorporating element want use attribute associate label control neither works fieldid automatically generated produces error browser exception template parse errors ca nt bind since nt known native property textfield gt div nthchild gt label nthchild fieldid exception template parse errors ca nt bind since nt known native property textfield gt div nthchild gt label nthchild fieldid", "num": "5435", "d": "11/2015"}, {"title": "ambient directives unit tests testcomponentbuilder", "body": "spotted teropa confirmed side directives bootstrap project see getting errors platform directives like ngfor using testcomponentbuilder seems like ambient unit tests like normal execution fix including coredirectives component seems backward ideas make available", "num": "5433", "d": "11/2015"}, {"title": "observing input changes", "body": "filterform filtering datagrid data need observe inputs change used change event working correctly also used objectobserve better way except nt want create component class inputs use hook", "num": "5430", "d": "11/2015"}, {"title": "refactor linker expose piperesolver public api", "body": "expose piperesolver affects mhevery", "num": "5429", "d": "11/2015"}, {"title": "library messaging disconnected components", "body": "future proofing project decide messaging frameworklibrary use looking pubsub mediator like eventemitter disconnected components subscribe publish messages local message bus looked flux rxjs redux etc use one something comes natively natively supported reactive library", "num": "5428", "d": "11/2015"}, {"title": "problem routeroutlet ngfor", "body": "hi packagejson indexts ts import reflectmetadata import bootstrap component coredirectives import routerproviders routerdirectives routeconfig component selector template export class foo routeconfig path name component foo component selector template directives coredirectives routerdirectives foo export class app bootstrap app routerproviders catch err gt consoleerror err indexhtml html sandbox open chrome expected b b b b b b actual b b b work ngfor inside routeroutlet correct", "num": "5427", "d": "11/2015"}, {"title": "possibly include systempolyfillsjs cdn", "body": "microsoft edge likely version ie requires systempolyfillsjs systemjs would nice included box poor people try use edgeie ca nt included please least note need install systemjs use dist viewing edgeie minute quickstart thanks", "num": "5426", "d": "11/2015"}, {"title": "ngupgrade fails instantiate routerproviders", "body": "trying add routerproviders angular application via ngupgrade var adapter upgradeadapter new upgradeadapter adapteraddprovider httpproviders adapteraddprovider routerproviders adapterbootstrap documentbody angularlegacy try use routing config anywhere fails following message", "num": "5423", "d": "11/2015"}, {"title": "unhelpful error message attempting inject class private constructor", "body": "getting error injecting class private constructor error message would helpful told us problem private constructor least tell us injected class problem internal bug", "num": "5421", "d": "11/2015"}, {"title": "angular tutorial dead link docs", "body": "link form chapter dead found following url", "num": "5420", "d": "11/2015"}, {"title": "imports", "body": "brings back transformed dart code resulting code size regressions could please ptal refactor avoid importing", "num": "5419", "d": "11/2015"}, {"title": "querymetadata example points plunker ngzone", "body": "example top leads plunker ngzones", "num": "5418", "d": "11/2015"}, {"title": "input output annotations carried subclasses", "body": "would nice annotations carried subclassed components currently nt work transformers looks local file guessing may need parse subclass directly might able look information saved parent", "num": "5415", "d": "11/2015"}, {"title": "angular work requirejs", "body": "created simple angular app pure javascript follows angular test hello world", "num": "5412", "d": "11/2015"}, {"title": "feature request pattern validator", "body": "hello team would like request support added form control validation based input pattern attribute mind similar required attribute builtin validator example use case believe would useful generalcase regular expression validator approach fits existing semantics implemented validator branch believe branch ready submitted pull request new github development workflow open source contributing general would appreciate direction appropriate next steps following guidelines contributingmd documentation signed cla agreement sure whether would considered minor major feature change since involves adding new public api also branch current commit one failing unit test publicapispects believe requires new validator added api list comment file said make modifications without approval nt want touch yet", "num": "5411", "d": "11/2015"}, {"title": "unit test campaigns fail", "body": "different reasons browser may silently freeze error reported dev tools karma browser may slow causing dozens hundreds tests fail error may raised due failing xhr reproducible sauce labs browserstack local simulator cases tests successful", "num": "5408", "d": "11/2015"}, {"title": "browserstack andor sauce labs required ci jobs", "body": "optional today get need made reliable currently running browsers sl bs monitoring output thanks landed yesterday green everything goes well nt happen often experiencing kind errors failure browser start disconnects fails slow campaign fully run flake test pass fails reaches timeout improve situation looked builds last days builds master presubmit jobs campaigns unit tests jobs failed due failures flakes bad failures come campaign nt work well simulator sl bs locally campaigns safari mobile freezes silently fails load resources xhr error slow flakes come unit tests randomly fail browser also interesting note trend shows sl better windows bs better mac applies failures flakes idea would split browsers among providers improve overall reliability next steps remove ci made reliable possible problem desktop version nt issue increase timeout identified flaky tests continue monitoring apply split trend confirmed", "num": "5407", "d": "11/2015"}, {"title": "throw error zone nested within another zone", "body": "possible zone running within another zone likely something wrong app code would similar error seen", "num": "5406", "d": "11/2015"}, {"title": "subscribing childrouter effect", "body": "thus subscribe method however navigate requests forwarded parent childrouter eventemitter never used subscribed methods remain uncalled case route change", "num": "5405", "d": "11/2015"}, {"title": "abstractcontrol generic", "body": "abstractcontrol generic value specific type", "num": "5404", "d": "11/2015"}, {"title": "html parser incorrectly assumes must inside", "body": "see reality may inside instead current version transforms html html makes sense", "num": "5403", "d": "11/2015"}, {"title": "declare private members private instead using internal comment", "body": "noticed many places code base private members underscore prefixed marked internal comment instead marked idiomatic typescript declaration reason possibly dart transformation documentation generation would pull request accepted clean", "num": "5402", "d": "11/2015"}, {"title": "checkboxes lose state initialized localstorage yet model remains correct", "body": "create value ls also tested nonprogrammatically editing chrome resources initialize controller grabbing true local storage nt check checkbox yet button based model visible console log true even tried using true false strings also adding ngchecked value model nt help makes value always checked want save checkbox values localstorage app remember boxes checked looks like going code unique creative solution broken boxes completely missing something nt fairly simple implement canwill fixed future", "num": "5400", "d": "11/2015"}, {"title": "use mocha write tests", "body": "use mocha testing framework getting error message necessary propagate angular jasmine typings", "num": "5395", "d": "11/2015"}, {"title": "crazy bootstrap phase error injecting rootscope assigning value service", "body": "sure ng issue maybe user error entire details preserved injecting scope rootscope assigning local reference property seems work fine controller service also notice import scope service perhaps angular team meant also prevent injecting rootscope neglected error baffling best conjecture artifact compilation deep bowels angular wherein instantiation service tries deep copy rootscope property instead shallow copy assigned property service object", "num": "5392", "d": "11/2015"}, {"title": "selectors host properly shimmed", "body": "css component host foo bar color red foo bar color green gets translated foo bar color red foo bar color green great missing feature indeed working intended first look seems like bug shim add shimmed attribute onto classes host", "num": "5390", "d": "11/2015"}, {"title": "custom validator", "body": "please look code input tag attribute work write two validation one element another question code password input validator code validator set markup still define control controlgroup way mix local template validators codeside validators remove definitions code made code long defining control input form input something like", "num": "5389", "d": "11/2015"}, {"title": "pipe used host attribute found unless registered parent component", "body": "use pipe context host attribute example found even register component results error seems pipe needs registered parent component suspect intended behavior simple plunker illustrate issue", "num": "5388", "d": "11/2015"}, {"title": "issue routerparentnavigate", "body": "hello guys trying navigate page using router used code click event typescript export class businessnamelookup value try click button drive page back main page note error browser console see question mark symbol url bar link look like back home page", "num": "5386", "d": "11/2015"}, {"title": "review componentfixture debugelement api", "body": "current method pretty wordy annoying work instance seems wordier issue review api cc rkirov", "num": "5385", "d": "11/2015"}, {"title": "di new provider foo gt work instead throws", "body": "following provider actually work dart const footoken const opaquetoken footoken injectorresolveandcreate new provider footoken usefactory gt bar instead works change signature default instead failing", "num": "5384", "d": "11/2015"}, {"title": "platformbootstrap failure create injector reports error proceeds along", "body": "following code seems buggy dart transpilation comments mine", "num": "5383", "d": "11/2015"}, {"title": "dartium required js tests", "body": "running requires dartdartium js test suite chatted igor agreed erroneously requiring dartium use local chrome install instead cc mlaval edit run karma correctly run local chrome install could incorrectly using test suite", "num": "5380", "d": "11/2015"}, {"title": "add option disable transformer debug mode", "body": "since transformer slows build considerably large codebases things work dartium mirrors would great switch enables transformers disable", "num": "5379", "d": "11/2015"}, {"title": "issue new lines templates web components", "body": "found odd issue related new lines used web components sure caused web components though two plunkrs working working load press add button second example shows empty items difference srcappts working working", "num": "5377", "d": "11/2015"}, {"title": "feat router need way handle lazy loading components without loading entire tree first load", "body": "currently splat syntax causes download everything front import profilecomponent turn imports overviewcomponent logindetailscomponent would really nice large application download feature sections application needed routeconfig path profile component profilecomponent profile class appcomponent routeconfig path component overviewcomponent overview path details component logindetailscomponent logindetails class profilecomponent tried stuff much luck", "num": "5373", "d": "11/2015"}, {"title": "feat router hashlocationstrategy support appbasehref", "body": "useful applications using hash routing want namespace hash route match existing constraints", "num": "5368", "d": "11/2015"}, {"title": "assetreader available part angular public api", "body": "using assetreader marked part private api plans make part public api also opened dartlangbarback think assetreader part barback package cc yjbanov igorminar", "num": "5366", "d": "11/2015"}, {"title": "using ngif element placing wrong ngcontent", "body": "component template looks like add element places element inside like removing places proper place something need improve cc igorminar adamdbradley", "num": "5363", "d": "11/2015"}, {"title": "possible add attribute element dynamically", "body": "ionic use lot attributes example say attribute called want added platform android something like element would added android ios want add ios add android cc igorminar adamdbradley", "num": "5361", "d": "11/2015"}, {"title": "third party controls like polymer amp value accessor error", "body": "hi see added value accessor ngcontroll well required also ngmodel twoway data binding fact polymer paperinput see error change line added end line error fixed cc alxhub", "num": "5360", "d": "11/2015"}, {"title": "router directive routelink case child navigation generates incorrect part url related parent route", "body": "gallery component updates route navigate list images click info button opens details image gallery instantiated though url browser correctly points another image example load gallery url navigate gallery click info button opens fix explicitly define id need workaround think bug directive typescript component selector stub template class stub component selector gallery templateurl componentsgallerygalleryhtml directives routerdirectives routeconfig bugfix path redirectto path component stub default path details component details details export class gallery implements canreuse onreuse constructor private router router private gs galleryservice params routeparams paramsget id thisgsselect paramsget id changeitem item iitem thisrouternavigate gallery id itemaccessionnumber canreuse return true onreuse next componentinstruction thisgsselect nextparams id html", "num": "5359", "d": "11/2015"}, {"title": "forms deciding input types", "body": "review code see means choose html tags would used words text oneline input never", "num": "5358", "d": "11/2015"}, {"title": "testcomponentbuilder overrideproviders fails providers nt exist component", "body": "repoed dart", "num": "5354", "d": "11/2015"}, {"title": "multiple event sent next", "body": "hello want apologize first someone ask lot searches nt find answer nt know issue post many events following issue listeners called times whereas send sure lot tests call next example call template call component function called twice one next note forced ugly timeout avoid times thing normal something wrong listener app called twice weird never heard probably issue app thank", "num": "5353", "d": "11/2015"}, {"title": "test injector work smoothly new bundles", "body": "new platform bundles import directly need different platforms however test injector currently hardwired work browser platform need smooth way writing unit tests injector different platform cc vsavkin", "num": "5351", "d": "11/2015"}, {"title": "npm install fails", "body": "error report says reactivexrxjs dependency published", "num": "5349", "d": "11/2015"}, {"title": "fix router incorrect type coercion value routeparam", "body": "query parameter value number eg resulting url returns instead cause appears coercion", "num": "5346", "d": "11/2015"}, {"title": "ca nt style component inserted routeroutlet viewencapsulationemulated", "body": "typescript component selector stub template stub class stub component selector home style template welcome home routeconfig path component stub export class home understand components added asynchronously nt get attribute assigned looks like bug", "num": "5345", "d": "11/2015"}, {"title": "api doc headings could consistent", "body": "quick review headings used api docs perhaps could define preset headings eg example improve consistency across multiple authors common themes could probably one standardised title exampleexamples api syntax usage use typical use see also also nt consistent terms encourage authors use style appropriately within div", "num": "5344", "d": "11/2015"}, {"title": "fresh system clone repo setup error find module fsextra", "body": "node toolsanalyticsbuildanalytics success install npminstallnet amp amp node toolsanalyticsbuildanalytics start install npmpostinstall amp amp node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config amp amp node toolsanalyticsbuildanalytics success install npmpostinstall amp amp node toolsanalyticsbuildanalytics success install npminstall throw err error find module fsextra functionmoduleresolvefilename functionmoduleload modulerequire require", "num": "5343", "d": "11/2015"}, {"title": "gettersetter ngcontrol", "body": "angular transform form data way plunk emails input comma delimited email list could implemented without moving transform logic method found classes nt know use single input", "num": "5342", "d": "11/2015"}, {"title": "feat router allow skiplocationchange using navigate method", "body": "right want navigate without changing url like able", "num": "5340", "d": "11/2015"}, {"title": "host decorator nt work", "body": "expected behavior api doc doc says works well current behavior works returns plunker steps reproduce open plunker look console logs", "num": "5339", "d": "11/2015"}, {"title": "basic question dts files", "body": "hi sorry basic question dts files anymore synchronized definitelytyped resolution mechanism uses node modules depends typings field packagejson field contains routerdts example thanks advance", "num": "5338", "d": "11/2015"}, {"title": "update typings seleniumwebdriver remove", "body": "install angular using see webdriver typescript definitions reason includes compiling application effectively prevents installing recent webdriver typings definitelytyped thus using newer features webdriver angular bundle typings protractorwebdriver depend modules remove know exclude locally already excluded whole directory please update believe users possibility choose preferred version modules", "num": "5337", "d": "11/2015"}, {"title": "add possiblilty ask router current route", "body": "moment possible get current via method working routing dsl would way useful check route active via dsl also eg want something like able implement isactive need current route also cases would useful access routedata current route moment possible access information within routed component via router class", "num": "5335", "d": "11/2015"}, {"title": "routerlinkactive working nested routes", "body": "working nested routes links routes common rootpath get routerlinkactive class eg two links like navigating taskslists results following dom task overview new task", "num": "5334", "d": "11/2015"}, {"title": "http nt work worker", "body": "pulling imports directly figure best avoid", "num": "5333", "d": "11/2015"}, {"title": "allow conditionally applying directive component", "body": "currently way conditionally apply directive component need apply ngformcontrol directive control present template ends looking like would nice directive nt applied null prevent duplicated code", "num": "5332", "d": "11/2015"}, {"title": "feat router provide child routes access parent route information", "body": "using nested routes would like set params top level able access params information child routes instead adding paramsdata child routes js routeconfig path users id component users users class app routeconfig path component profile profile path stats component stats stats class users constructor params routeparams need access users id route param thisid paramsparentget id plunk displays handled today", "num": "5330", "d": "11/2015"}, {"title": "form control pristine attribute updated properly", "body": "component uses forms api use attribute control check data changed looks like returns dirty second change example textbox blank spaces allowed right type one space validation control says pristine change control becomes dirty far validators concerned", "num": "5328", "d": "11/2015"}, {"title": "angular attempts subscribe event stream", "body": "simple component output follows error thrown bad state stream already listened hood component uses lazyeventemitter wrapper streamstream controller broadcast changing controller instantiate broadcast stream fixes able expect one subscription angular framework", "num": "5327", "d": "11/2015"}, {"title": "difference detached checked change detection strategy", "body": "documentation says component set remain set fall back checked guess process setting component state even possible happens automatically also depending answer question whats difference switching switching thanks time answer question happy make pull request extended documentation file help understand better", "num": "5326", "d": "11/2015"}, {"title": "component watch object properties", "body": "component injects simple object properties issue see change listeners onchange event never fired injected object property changes set interval get changed object properties question bug expected behavior expected make component listen object property changes component ts export class perksplannercomponent playermodel currentplayermodel setinterval gt thisiscurrentmodelchanged simple object ts injectable export class currentplayermodel somevalue string", "num": "5325", "d": "11/2015"}, {"title": "investigate using zones avoid need injectasync", "body": "always use zones remove need everything would", "num": "5322", "d": "11/2015"}, {"title": "form action request sent using action attribute", "body": "hello trying make simple login form works attribute issue request never sent copying pasting form html dom using dev tools make works working alpha moved alpha breaking sample guess angular catching request somewhere prevent default behavior form thing initially avoid use angular stuff ngform ngformcontrol ngformmodel build form issue workaround broken idea", "num": "5320", "d": "11/2015"}, {"title": "angular routerinjectables found", "body": "hello new angular trying create application support routing using aspnet base framework application attache setup files think need setup look like get debug error said build module c usersegytedocumentsvisual studio exported member routerinjectables code face error", "num": "5319", "d": "11/2015"}, {"title": "breadcrumb component", "body": "trying create component similar moment problem ca nt really access route name instruction ca nt really create links crumbs workaround duplicate name data ideal seems way moment check well", "num": "5318", "d": "11/2015"}, {"title": "missing dart", "body": "http library seems missing dart package", "num": "5317", "d": "11/2015"}, {"title": "async redirectto router", "body": "overview string would great could well example common scenario app two routes called async redirection home route could redirect items nt created yet could redirect first item asynchronously fetched items", "num": "5316", "d": "11/2015"}, {"title": "handle combinator", "body": "combinator effectively hide rewrite import remove mirrors", "num": "5315", "d": "11/2015"}, {"title": "dart add starting app size test", "body": "measure size minified minifiedgzipped hello world app make sure sizes meet targets lt gzipped lt minified response recent regression introduced nt notice code made customers", "num": "5314", "d": "11/2015"}, {"title": "track dart bundle size", "body": "see pointers", "num": "5312", "d": "11/2015"}, {"title": "dart ngfor ngif rendered twice", "body": "ngfor ngif ng directives rendered twice dart output version dart dart vm version amp nov commit nov commit modified dart playground hello ngif ngfor component selector helloapp viewproviders const greetingservice template class hellocmp bool show true list things abc def string greeting hellocmp greetingservice service thisgreeting servicegreeting void changegreeting thisgreeting howdy result chromium generated js output", "num": "5311", "d": "11/2015"}, {"title": "delayed ngmodel binding", "body": "hello small application angular routes form first page preselect values works fine machine reduce requests count use browserify bundling include additional modules made separate bootstrapbundledts file added imports import zonejs import import reflectmetadata import bootstrap add strange issues see preselected values forms focusing first input field also custom directives recognized onchanges method called short repro yet test code unfortunantly needs aspnet vnext need run run kestrel server cd wwwroot npm install cd npm install gulp install gulp scripts rebuild gulp styles rebuild", "num": "5310", "d": "11/2015"}, {"title": "httprequest forces requests get requests", "body": "writing authentication wrapper http passing methods since want access base options mergeoptions function passes requestmethodsget calls mergeoptions overwrites passed method post default method get base options passing get redundant arguments mergeoptions rearranged method optional", "num": "5309", "d": "11/2015"}, {"title": "router generates url null", "body": "following router configuration template see following screenshot status bar generates route like actually click shows right url browser redirects right controller generates correct data", "num": "5308", "d": "11/2015"}, {"title": "router navigatebyurl nt navigate relative url", "body": "documentation states following since method child router delegates root router relative part work far tested hand executed child router ca nt use instruction navigate delegates root router right seems generates instructions child root cc btford", "num": "5307", "d": "11/2015"}, {"title": "import reflectmetadata", "body": "tried add unit test controller test suite executed protractor protractor fails turned workaround nt actually understand going believe import somewhere angular people writing unit tests need angular requires us use class decorators please note understand protractor neither designed run unit tests supports angular believe issue related protractor wrong usage believe test runner use class decorators thus imports reflectmetadata report error simple reproducer follows typescript spects import controller controller describe gt gt let instance new controllercontroller typescript controllerts import ng ngcomponent export class controller", "num": "5306", "d": "11/2015"}, {"title": "getting zone defined enabling dev mode", "body": "getting error message attempting enable angular devmode application offending line causing exception ngzonets turns used line code undefined code run file missing import maybe offending line code refer lowercase instead given exposes globally name using jspmsystemjs load application typescript set output system modules module resolution node helps understanding cause error", "num": "5304", "d": "11/2015"}, {"title": "add quotemark gulptslint", "body": "hey guys found many files mixing singledouble quotes think good practice enforce using single quotes double quotes code style need add gulptslint replace invalid quotes thoughts", "num": "5301", "d": "11/2015"}, {"title": "possible applymodify classes conditionally host element", "body": "ca nt seem find way conditionally applymodify classes host element using something like etc template using web components without dependency injecting host element component class possible", "num": "5300", "d": "11/2015"}, {"title": "shrink worker render bundle", "body": "right worker render bundle nearly size worker app bundle unnecessary lot dead code slim removing much possible render thread", "num": "5298", "d": "11/2015"}, {"title": "controlgroup control nt work polymer iron paper elements", "body": "angular material elements ready yet also seem good ui widget library angular yet tried polymer dart basic property event bindings work could nt get controlgroup control work sure problem polymer angular since two libraries google nt users expect interoperate thanks", "num": "5297", "d": "11/2015"}, {"title": "ngfor behaves incorrect class nganimate added", "body": "using class nganimate ngforelement updating corresponding list updated items removed problem illustrated example example list b c displayed using ngfor seconds list replaced list e f g h expected behavior would list displayed using ngfor however items h shown without class nganimate problem nt occur", "num": "5296", "d": "11/2015"}, {"title": "lose one weird trick doctors hate", "body": "typescript emits helper well help extending classes currently shows dozen times codebase turning broccoli tree saves unminified minified existing system bundles option optimization rx saves submit pr well need include least course might best added proposed ngpolyfill along reflect cc igorminar", "num": "5293", "d": "11/2015"}, {"title": "amp app working", "body": "using angular app works fine mix added version trying use legacy code areas new ui described problem two questions stackoverflow module found error using system module compiles fine commonjs causes runtime error", "num": "5292", "d": "11/2015"}, {"title": "observable async subscribe observable circumstances", "body": "try commentinguncommenting magic line appts note difference behavior entered one character input box understanding since observable shared async pipe subscribes extra subscription effect well may something stupid missing", "num": "5291", "d": "11/2015"}, {"title": "child directive events swallowed destroyed directives using viewcontainerremove", "body": "came across behaviour using expect child directives removed using event produced prior removal swallowed conveyed parent directive created little example illustrates behaviour problem occur moved reordering data list shows however children get removed numbers exceed event swallowed guess reference problem children operating data parent time child directive updating data parent parent probably kick change detection removes element event captured however expect event sent prior removal using visible parent", "num": "5289", "d": "11/2015"}, {"title": "feat add class active nglink", "body": "add class nglink current active route", "num": "5286", "d": "11/2015"}, {"title": "select element valuechanges observable fires twice every time", "body": "version alpha ts trying learn various ways working forms ran odd issue select elements trigger change events twice change subscribed valuechanges observable function changes value model fires change event expected pretty short heres code simple select app component one two three change select model directives formdirectives export class app simpleselect control new control counter number constructor watch simple select thissimpleselectvaluechangessubscribe value gt consolelog simple select val value counter thiscounter thiscounter changeselect thissimpleselectupdatevalue plunker action thought maybe something simple interfacing formbuilder got results added text field see changes effect form work correctly fire plunker sure something incorrectly think expected behavior event fire experienced enough track back whats causing double bindings hoped could someone take look", "num": "5284", "d": "11/2015"}, {"title": "observable payload reduction plan", "body": "two goals reduce bytes core angular get back original observable goal relying functions prototypes composing observable operators ie proposed js function bind syntax tasks export rxjs include operators api docs guides show examples importing using advanced operators rxjs later consider things let users patch override observable provided angular nt need happen prebeta achieve reduction size rx dependency minified gzipped", "num": "5283", "d": "11/2015"}, {"title": "angular transformer adding extra lines dart files line number stack traces match source code", "body": "angular transformer component templates dart files string html causing line numbers reported stack traces incorrect steps reproduce pub serve test dartium open component dart file notice file numbers shifted suggested fix include html css strings end file reference strings component taking care alter line count", "num": "5281", "d": "11/2015"}, {"title": "angular tutorial broken link", "body": "link broken found", "num": "5279", "d": "11/2015"}, {"title": "programmatically prevent destruction components requested", "body": "would nice could tell angular destroy components navigate even next component different type could useful example building window management system users navigate different windows components without need recovering whole state existing canreuse hook useful use case since allows us reuse components previous next component type code example", "num": "5275", "d": "11/2015"}, {"title": "property json exist type", "body": "update get error http request property json exist type code looks like", "num": "5273", "d": "11/2015"}, {"title": "ngupgrade infinite loop initialising template bound object", "body": "edit seems first issue solved alpha see plunker playing module getting infinite loop initialising object bound template trying isolate issue using angular without ngupgrade got another error sure related put plunker issue infinite loop using ngupgrade initialising template bound object first import component view bootstrap input import dataservice dataservice component selector appcmp view template export default class namescomponent input data userdata constructor private dataservice dataservice thisuserdata put comment get infinite loop oninit calling service get data thisdataservicegetusernames thisdatalogin response gt thisuserdata responsedata remove following line constructor get infinite loop careful crash browser service used plunker removed call github api calling want make infinite loop calling github api issue error initialising object inside constructor happen initialised object declaration trying isolate first ngupgrade problem using example saw initialise object bound template constructor get javascript error initialise declaration error disappear see plunker full example code relevant part initialising object import component view eventemitter input import peopleservice peopleservice component selector myperson inputs name outputs hello view template export class person hello new eventemitter input data peopledata age uncommenting commenting constructor content error disappears constructor private peopleservice peopleservice peopledata age sayhello e thishellonext thisname oninit thispeopleservicegetpeopeldata subscribe people gt peoplefilter p gt thisdataid pid", "num": "5271", "d": "11/2015"}, {"title": "ngupgrade question angularbootstrap definition", "body": "definition angularbootstrap requires like example type extends get error", "num": "5270", "d": "11/2015"}, {"title": "invalid target element operation", "body": "invalid target element operation angular error happend code like search google get info innerhtml read tbody error happend say resolution thanks help", "num": "5268", "d": "11/2015"}, {"title": "forget injectable factory debugging torture", "body": "try bind something like completely unhelpful error message get uncaught unhandled exception null object method get nosuchmethoderror method found get receiver null arguments type class exceptionhandler dart corepatchobjectpatchdart objectnosuchmethod dart corepatchobjectpatchdart objectnosuchmethod package applicationrefbootstrap nothing remaining stack trace hints problem figure go read bunch code figure injector getting set guess line set breakpoint try run thisinjectorresolveandcreate debugger extract slightly meaningful stack trace mean slightly get type type type type still part stack trace tells problem involves type map recall recently bound map go nothing leaps wrong search people code see see quite people put injectable factories people nt put injectable broken answer probably nt know yet code nt exercised error message like injector could create instance injector key could find factory name perhaps forgot annotate factory injectable course knew factory name need put annotation obviously found maybe say injector could create instance injector key could find corresponding factory perhaps forgot annotate factory injectable point wonder found binding factory inside let suppose ca nt find binding ok heck find binding put injectable factory refers basically idea twisted things angular error message needs improvement better yet get rid seemingly senseless requirement add injectable every factory method boilerplate bad enough due forbidding anonymous factory methods", "num": "5266", "d": "11/2015"}, {"title": "typings longer included bundle", "body": "typings intentionally removed", "num": "5265", "d": "11/2015"}, {"title": "template interfering array displays", "body": "simple template using iterate array function removes everything array using entries still left array link plunker demonstrates", "num": "5258", "d": "11/2015"}, {"title": "improper show clause decoratorsts", "body": "", "num": "5255", "d": "11/2015"}, {"title": "setcookie http response seems ignored", "body": "http seems ignore setcookie http response headers making simple call service http module server responds setcookie header like setcookie ldapidkoen domainlocalhost expiressat gmt path setcookie domainlocalhost expiressat gmt path subsequent calls service host path seem ignore fact server set cookies domain relevant cookies show headers outgoing http requests according http trace seen browser network missing something", "num": "5254", "d": "11/2015"}, {"title": "", "body": "guide says link", "num": "5252", "d": "11/2015"}, {"title": "input output annotations work setters getters respectively", "body": "transformer works fields work setters getters using input output annotations", "num": "5251", "d": "11/2015"}, {"title": "local template variables requires event trigger change detection", "body": "order get example work add checkbox input expected behaviour valid currently following get example work would possible future get rid part would become", "num": "5250", "d": "11/2015"}, {"title": "typings files", "body": "appears http router typings files longer included npm package bundlestypings hosted somewhere else", "num": "5248", "d": "11/2015"}, {"title": "compiler check custom component tags closed", "body": "seen usages already spec says opening tag previous versions handled differently thus fails silently swallows following dom compiler probably warn throw possible", "num": "5247", "d": "11/2015"}, {"title": "expressionchangedafterithasbeencheckedexception contain binding used dart transformers", "body": "expressionchangedafterithasbeencheckedexception contain binding caused problem also contain component name template contains binding works js dynamicjit dart dynamic", "num": "5245", "d": "11/2015"}, {"title": "router min bundle distributed", "body": "see code angular minified bundle router using npm code angular ran latest master routerminjs created folder alone everything else tried tracking building process gulpfile got lost easily lol intentional", "num": "5244", "d": "11/2015"}, {"title": "method keys issue", "body": "internet explorer method keys nt supported object new exportsmap keys next", "num": "5243", "d": "11/2015"}, {"title": "nt allow arbitrary apis usage", "body": "right use eg code requires users include polyfill library like running angular avoid adding handwrite typings file describing apis use already typecheck gives us broad surface target runtime", "num": "5242", "d": "11/2015"}, {"title": "allow contentchildren filled subviews", "body": "contains sentence would like available grouped couple want decide parent element links however links built directly within component built dynamically separate components http request right remains empty nt observable changes cases typescript directive selector parentisrouteactive host classrouterlinkactive isrouteactive export class parentisrouteactive implements aftercontentchecked public isrouteactive boolean", "num": "5241", "d": "11/2015"}, {"title": "hostcontext viewencapsulationemulated translates invalid css", "body": "see component using property renders css like first selector invalid whole definition nt anything", "num": "5239", "d": "11/2015"}, {"title": "ngfor seems confused underlying array contains identical references", "body": "encountering issue ngfor array iterate contains multiple times object reference modified event raised subcomponent believe recreated scenario please try change selection first select point view seems happen ngfor somehow updating wrong subcomponent two elements iterable pointing object first one replaced point something else context alpha typescript", "num": "5238", "d": "11/2015"}, {"title": "http response include headers", "body": "maybe something wrong make request http see network tab chrome response include custom header called authorization used refresh jwt try access responseheaders prints empty console behaviour printing keys request headers hand print custom headers add request", "num": "5237", "d": "11/2015"}, {"title": "firefox nt fire oninit event route component navigating back history", "body": "using back button navigate browsers tested fire oninit method route component except firefox onactivate fire trouble getting plunker working latest alpha updated existing plunker illustrate based alpha problem reproducible alpha app select overview types routes see oninit onactivate alert boxes fire navigate using back button overview route oninit nt fire firefox found firefox little temperamental back button plunker times works others use delete button app frame navigate back", "num": "5234", "d": "11/2015"}, {"title": "change components position", "body": "method change components position container component use dom change components position aware change made continue add component container component added change position action happened reference post", "num": "5232", "d": "11/2015"}, {"title": "feat router allow child routes url alias", "body": "currently parentchild route url path constructed parentchild nt way parentchild represented child url would allow convenience nested outlets without construct long url paths order access routes", "num": "5231", "d": "11/2015"}, {"title": "node runs memory running builds", "body": "seen crash js bundle tasks hterkelsen reports crashing js sourcemaps workaround fix underlying issue remove heap config workaround", "num": "5229", "d": "11/2015"}, {"title": "testcomponentbuilder surface applicationreftick", "body": "applications need", "num": "5228", "d": "11/2015"}, {"title": "local variables templates nt accept uppercase characters", "body": "creating local variable template pound symbol works lowercase names example works example nt works note uppecase f plunker example", "num": "5224", "d": "11/2015"}, {"title": "bundles publication strategy", "body": "follow closed pr particular comments downside approach taken new proposal let produce umd bundles core rxjs core http router rxjs bundles umd usable via tag cjsbased tooling webpack etc bundles wo nt contain truly external dependencies zone reflectmetadata shims going publish separate file jeffbcross robwormald vsavkin feel free comment cc igorminar rkirov", "num": "5223", "d": "11/2015"}, {"title": "typescript error using request", "body": "implemented custom request pretty much example docs everything works running typescript error implementation js request method requestmethods url string body string return request method method url url body body get url string return thisrequest requestmethodsget url post url string body string return thisrequest requestmethodspost url body error got almost identical custom request another spot attaches noticed error message one says pass set error goes away error seems pop time thanks cc robwormald", "num": "5222", "d": "11/2015"}, {"title": "router securityerror failed execute pushstate", "body": "hello using pathlocationstrategy get error use hashlocationstrategy works fine working angular thanks", "num": "5218", "d": "11/2015"}, {"title": "router navigate route data", "body": "possible navigate url give json object best regards tiago braga", "num": "5217", "d": "11/2015"}, {"title": "update parent component", "body": "way trigger update parent component child one following code works skips digest reproduction click add button counter displayed one step behind", "num": "5216", "d": "11/2015"}, {"title": "children components id", "body": "hi possible access child view components id best regards tbragaf", "num": "5215", "d": "11/2015"}, {"title": "http request subscribe try catch finally clause", "body": "hi alpha subscribing http request try catch finally trigger finally clause error thrown example api correctly throws triggering catch clause finally clause trigger triggers successful subscription anyone help best regards tiago braga", "num": "5214", "d": "11/2015"}, {"title": "building testing locally", "body": "hello please someone add proper documentation building testing locally good documentation thanks vijay", "num": "5213", "d": "11/2015"}, {"title": "google map marker clicks properly propagated components", "body": "set google map marker click event let say map clicked pass message parent another component however rerendering component new data cause message button click result rendered see work around adding marker call back closure think subtle event handling difference", "num": "5212", "d": "11/2015"}, {"title": "improve http ergonomics json usage", "body": "developers using json time avoiding jsonstringify things manually adding appropriate contenttype headers sending json possibly adding operator like sugar", "num": "5211", "d": "11/2015"}, {"title": "benchmarks benchpress reports categories gctime scripttime etc dartium", "body": "think different tracing categories old versions chrome preventing us running benchmarks golem cc tbosch yjbanov", "num": "5210", "d": "11/2015"}, {"title": "viewcontainer operations fail move content elsewhere", "body": "occurs following case component moves content another floating div", "num": "5207", "d": "11/2015"}, {"title": "last item dropdown always initially selected edge", "body": "trying use bind value select dropdown menu form options generated via model bound variable like html selected selectedoption option chrome value set right value ui shows right value dropdown selected edge value becomes last value added via ui sometimes selects right value sometimes selects last one behavior yet attached event listener event item added change event fired updated whatever value last added plnkr repo loading everything say dropdowns selected texts set initial value chrome works expected edge selected texts say additionally edge bunch change events showing going selecting expected tried alpha versions", "num": "5206", "d": "11/2015"}, {"title": "invalidcharactererror adding multiple classes single condition ngclass", "body": "invalidcharactererror thrown constructs like following believe due space character adding multiple classes single condition like worked workaround separate two classes", "num": "5205", "d": "11/2015"}, {"title": "dart export class classdefinition", "body": "jsonly api causes compiler warnings dart", "num": "5202", "d": "11/2015"}, {"title": "router link child component go default child route child route name", "body": "many cases component display links child components parent nt know child routes nt know scenario example suppose hero employment agency matches hero employees crises parent shell links across top go child feature components dealing concern managing crises managing heroes ratsnest subcomponents routes assume right template link bar look something like silly worse obliges know least one route names child feature rather present raises complaint nonterminal route child component default route router would know keep working way toward terminal route think ways identify default route default property one allowed per configuration child route path constraint would default route parameters object would way specify could live corollary syntax seems unnecessary target component configured routes one default nt think big deal could omit would never know routes seems like win", "num": "5200", "d": "11/2015"}, {"title": "router params cut first amp", "body": "following deliberate routing load url comes american uirouter used get american amp finedining need", "num": "5199", "d": "11/2015"}, {"title": "bootstrap mobile painfully slow", "body": "numerous issues related bootstrap speed none mentions mobile performance desktop tests bootstrap kindaokish first post paint mobile story awful right easily reproducible examples seedtype almost empty apps oneplus one one pretty beefy phone snapdragon adreno ram software android latest chrome quick summary first real paint happen seconds mobilefirst result unfortunately systemjs webpack ps mithrilquickstart comparison", "num": "5198", "d": "11/2015"}, {"title": "explain builtcompiled", "body": "hi folks tried figure quite sure get right built typescript bundled js guess ts transpiled bundle howwhere explicitly indicate particular function class must available exported public api come use import component bootstrap path refer typescript figure look appts thanks help ludo", "num": "5197", "d": "11/2015"}, {"title": "slow bootstrap bundle generated system builder", "body": "plunker fork original angular plunker angular version updated latest unminifed fork based first one expect bundle generated system builder see reason later noticeably slower bootstrap former loading shown several seconds angular app bootstrap almost instantaneously first plunker bundles roughly size see issue local test app swapping system builder bundle constructed tracing imports distributed bundle saves several seconds load time cc guybedford created bundle using jspm helps laurent macbookpro app master jspm bundle reflectmetadata building bundle tree reflectmetadata ok built buildjs source maps unminified", "num": "5196", "d": "11/2015"}, {"title": "routerlink working root app component", "body": "seem get routerlink work root component debugging find changes parameter undefined using routerlink sub components almost seems issue directly related routerlink javascript set routeparams changes thisrouteparams changes thisnavigationinstruction thisroutergenerate thisrouteparams tried setting plunkr difficulty getting router work plunkr", "num": "5192", "d": "11/2015"}, {"title": "routerpathlocationstrategy doc mention base element option", "body": "current documentation says must supply also ok dev adds indexhtml eg see also error message", "num": "5191", "d": "11/2015"}, {"title": "routerecognizer bad alias message camelcase", "body": "message routerecognizer say route aliases titlecase like", "num": "5190", "d": "11/2015"}, {"title": "dynamiccomponentloader issue use plugin interactjs", "body": "hi building application drag components container display drop something container angular component load container also using interact support drag amp drop feature drop component container constructor component trigger trigger event component even events angular component trigger like click event container plnkr explain issue", "num": "5189", "d": "11/2015"}, {"title": "ngfor index amp input eventbinding messes ui", "body": "using ngfor loop create list input fields trying fill fields ui behaves quite strange plnkr press add tag button twice fill first field afterwards click second case value entered first field gets displayed second one model nevertheless correctly filled", "num": "5188", "d": "11/2015"}, {"title": "promise returned function causes endless loop used view asyncpipe", "body": "hi guys noticed returning promise function use function within view using run endless loop javascript import component component selector app template export class app asynctest new promise resolve gt resolve hey asynctestfn uncomment reproduce warning browser freeze return new promise resolve gt resolve hey", "num": "5187", "d": "11/2015"}, {"title": "implement ngcontrolarray template driven forms", "body": "currently controlarrays connected form via ngcontrolgroup directive works fine using modeldriven approach using templatedriven approach currently way create controlarrays declaratively possible create arrays values scenario", "num": "5185", "d": "11/2015"}, {"title": "embrace controlled components idea react", "body": "look react docs better understand controlled components actually thought already works exactly appears wrong let assume component element want prevent users entering white spaces wrote next lines code see plunk export class app content string oninput newcontent thiscontent newcontent replace sg removes right entering replace lg replaces right entering expected user enter whitespace character immediately removed nt work enter white spaces element removed enter nonwhite space character plunk reactjs implementation compare behaviors another example happen bind input value string literal example see plunk think case user nt ability enter anything already bound must always remain plunk reactjs implementation example compare behaviors vsavkin tbosch", "num": "5184", "d": "11/2015"}, {"title": "default values fields component", "body": "using throughout project component file name component file component file typescript import component component selector templateurl componentsaboutabouthtml styleurls componentsaboutaboutaboutcss export class make optional either field absent default value generated templatecss case file name exists ie fields optional save lot dummy typings make components code look clearer think", "num": "5183", "d": "11/2015"}, {"title": "would write routerlink route like users idmessages", "body": "examples seen far new component router parameter always end route like would need routerlink like access question would write routerlink parameter middle route format like manually type address bar successfully get page ca nt seem figure routerlink format thing wish use child route possible thanks smile using alpha", "num": "5181", "d": "11/2015"}, {"title": "router questionfr expose route name", "body": "tl dr way get property route complete info nt think would super awesome long boring story asked gitter chatroom brief brainstorm could nt get definitive answer asking use case create breadcrumb name route would extremely useful simple route want get property use dynamically property exposing info would nice could name make injectable totally came name nt steal anyone note one would something like workaround far little piece code good iterating something private one solution far shorter one would seems little redundant would repeat every route yes super lazy advice missing something obvious please nt say use property", "num": "5180", "d": "11/2015"}, {"title": "expression syntax iif nt work", "body": "doe nt wotk exception typeerror read property label null null", "num": "5178", "d": "11/2015"}, {"title": "angular lifecycle hook", "body": "hi component crud operations update mode data fetched using ajax component loaded got error view rendering typeerror read property undefined null data initialized view renderingbinding null used top component markup flag setting fetching data prevents view bindingrendering data ready solved problem problem nested component wondered better way solve problem took look lifecycle hooks hook like onbeforebindingonbeforerendering help issue suggestion", "num": "5177", "d": "11/2015"}, {"title": "img src relative component", "body": "would nice could bundle images components component separate directory images subdirectory right give full path move component directory breaks path way give path relative componentts file note applies styleurls", "num": "5176", "d": "11/2015"}, {"title": "routechangestart routechangesuccess routechangeerror", "body": "trying get equivalent events routechangestart routechangesuccess routechangeerror use onactivate ondeactivate events need add every component also tried implement routeroutlet ca nt access previous instruction activate deactivate events also could nt know handle route change error also routersubscribe gave name want get current next instruction objects change properties target show loading indicator start change page hide finish change page make transition animation rtl ltr current next instruction", "num": "5175", "d": "11/2015"}, {"title": "", "body": "", "num": "5173", "d": "11/2015"}, {"title": "fresh clone ending purge", "body": "fresh clone ending purge followed steps wondering missing osx yosemite node npm", "num": "5172", "d": "11/2015"}, {"title": "pipes break used ngswitchdefault", "body": "using custom pipe inside pipe breaks exception exception typeerror read property constructor undefined null typeerror read property constructor undefined objectimplementsondestroy functionchangedetectionutilcallpipeondestroy eval abstractchangedetectordehydrate appviewmanagerutilsdehydrateview appviewmanagerviewdehydraterecurse appviewmanagerdestroyviewincontainer appviewmanagerdestroyviewincontainer viewcontainerrefremove viewcontainerrefviewcontainerrefclear anonymous function anonymous function promise asap flush error context browserdomadapterlogerror anonymous function anonymous function promise asap flush plunker remove template nt get error using chrome mac", "num": "5169", "d": "11/2015"}, {"title": "keyboard events div fired", "body": "tried listen keyboard events component way html method never called way handle keyboard found add event listener typescript private handlekeybind constructor thishandlekeybind thishandlekeybind documentaddeventlistener keyup thishandlekeybind false private handlekey event keyboardevent switch eventkeycode case consolelog break left arrow ondestroy documentremoveeventlistener keyup thishandlekeybind false missing something official way handle keyboard events component", "num": "5168", "d": "11/2015"}, {"title": "feat http add url response object using xhr jsonp backends", "body": "currently making http request response object returned url property null would convenient url set request url response filtered use case checking response data format comes certain url intercepting responses reformat", "num": "5165", "d": "11/2015"}, {"title": "development docs template syntax typo", "body": "heading input output properties text template syntax section following stated events stream herodetaildeleted target property eventemitter toward receiver within template expression therefore herodetailhero output property perspective herodetail bolded typo believe read herodetaildeleted output", "num": "5163", "d": "11/2015"}, {"title": "feat component simple syntax dynamically creating child components", "body": "project need put component container component based application state aware dynamiccomponentloader syntax complex require additional services injected also problem bind values dynamically inserted component think would nice method allow us insert child components dynamically easy way something like something like reactdomrender", "num": "5162", "d": "11/2015"}, {"title": "unsubscribe service eventemitter observer component destroyed", "body": "please look plunk component subscribes events unsubscribes destroyed using callback constructor private data dataservice thisobserver thisdataon somedata gt consolelog ondata ondestroy thisobserverunsubscribe better way achieve result completely wrong way create service emits events could cancelling subscription logic moved automatically cancels component subscription something like class item constructor private data dataservice thisdataon somedata gt class dataservice next data string gt void let observer thiseventobserver next next", "num": "5160", "d": "11/2015"}, {"title": "add public api development mode", "body": "currently private api tracks development mode js dart move language facade devmodets devmodedart rename something like could getter dart plain field javascript", "num": "5157", "d": "11/2015"}, {"title": "changing variable nt update css class", "body": "small issue changing variable order set css class better explained using example demo idea clicking one words property controls css class updated reflect selected word buttonname couple objects array called want show different color element class set property problem alternate clicking several times eventually find recently clicked element nt change color however modifying something browser moving mouse elements page triggers appropriate change far tell happens chrome dev tested firefox chrome stable ubuntu believe problem nt occur although maybe repeating process enough times initially thought due digest cycle triggered immediately sure occurs occasionally browsers seem producing correct behavior ideas", "num": "5156", "d": "11/2015"}, {"title": "child extends parent dependecy working", "body": "parent injected http service ts import inject injectable component import http injectable export abstract class baseresource http child extends parent ts import injectable component import headers import baseresource baseresource component providers baseresource injectable export class carmodel extends baseresource postdata carid number http undefined please note child constructor suppose use parent dependencies actually parent dependencies initalized extends ok inject directly without extends", "num": "5155", "d": "11/2015"}, {"title": "initialization content children component", "body": "hi guys stumbled upon kind felt weird maybe explain behavior tell wrong given example class tab component selector tabs template directives tab class tabs contentchildren tab tabs aftercontentinit consolelog tabs thistabs component selector app template directives tabs class app expect work turns tab components never initialized tabs query list empty add also directives list example works components get initialized query list also contains component within tabs something wrong expect example work without needing add component directives list component expect content pulled gets compiled", "num": "5154", "d": "11/2015"}, {"title": "question null expressionsyntax", "body": "hi noticed shows error message binding expression tries use property object null instance xyz x null error way prevent error think many situations nullvalues time time bindings happens cases would great ignored error evaluated null think semantic well similar templateengines wishes manfred", "num": "5151", "d": "11/2015"}, {"title": "view updating new value emitted rxobservable", "body": "hi simple application like typescript import component bootstrap component selector mainroot template directives class rootcomponent test string constructor rxobservablejust delay subscribe gt consolelog yes thistest yes bootstrap rootcomponent observable emits new value update model test change reflected view bug related zonejs something like thanks plunker reproducing bug", "num": "5150", "d": "11/2015"}, {"title": "add mechanism generating obtaining unique ids nodes within component", "body": "using ids applications generally frowned upon certain cases avoided instance name require id element value forms written needed elements properties done way consider modal dialog component dijit exposes widget unique id property used widget templates generate unique element ids within widgets something similar could done using either property pipe could see either following syntaxes html html id used would also need object passed annotation also want make sure note two suggestions suggestions concerned ability get unique id node accomplished long convoluted", "num": "5145", "d": "11/2015"}, {"title": "google logo homepage old", "body": "", "num": "5143", "d": "11/2015"}, {"title": "ngmodel updating input type search clear button ie", "body": "using input type search field angularjs ie click search clear cancel button rendered inside field internet explorer model value reset undefined example html searchval searchval tested angular works fine chrome safari", "num": "5141", "d": "11/2015"}, {"title": "http still direct dependency reactivex", "body": "landed http longer imports rather uses one exported good since limits http dependency unfortunately still got place rx dependent upon directly mockbackendts mockbackend imports reexporting case current situation means need either bundle entire rxjs http approach external dependency neither ideal robwormald see quickwins", "num": "5137", "d": "11/2015"}, {"title": "input typeradio updating form value", "body": "could nt find open issue radio inputs said radios implemented others bug created plunker demonstrate", "num": "5133", "d": "11/2015"}, {"title": "mdgridlist tests break dev mode enabled", "body": "appears change propertiesbindings checked causes assertion errors dev mode enabled exception expression styleheight demoapp gt div nthchild gt mdgridlist nthchild gt mdgridtile nthchild changed checked previous value undefined current value calc styleheight demoapp gt div nthchild gt mdgridlist nthchild mdgridtile nthchild", "num": "5132", "d": "11/2015"}, {"title": "jsx like templates angular", "body": "would cool support jsx like templates angular jsx hold required information required generate dom run time following benefits come jsx angular type safety catch errors compile time better run time performance need parse template string run time dom info may ast serialized compile time typescript already supports jsx understands syntax intelligence easier refactoring support ides dealing templates possibility share component templates react", "num": "5131", "d": "11/2015"}, {"title": "xhr treat responses errors", "body": "server returns response text xhr backend route error observer instead calls success path porting service angular angular problem angular problem rxjsdom using meantime affected area rxjsdom think angular similarly", "num": "5130", "d": "11/2015"}, {"title": "feat test ability configure providers perspec basis", "body": "right way configure di tests use need ability configure providers perspec basis routing currently create extraneous blocks overcome limitation helper could extended include functionality instance", "num": "5128", "d": "11/2015"}, {"title": "didiscuss allow providers injected based final ngcontent transclusion point", "body": "problem nice discussion tbosch yjbanov assume following component say today following works however want build bigger composite widget use delegating case code fail transcluded finally knowledge way interact using interface hurts making composablereusable components cry suggestions yet third type bindingprovider supports transcluded content way republishing providers upwards alternative way allow interaction manner igorminar vsavkin", "num": "5126", "d": "11/2015"}, {"title": "router link parameters optional", "body": "using child routes passing parameters required pass value use case home cars main route going cars loads list cars sitecomcars pass id would load info car currently try go cars throws error pass filler value works plunker expected parameter optional note examples nt use route params components even throws error", "num": "5124", "d": "11/2015"}, {"title": "router requires redirectto child components root view", "body": "version alpha overview using component child components use redirectto let work correctly trying link root child route assumed using defining default component would work throwing error put redirectto works expected nt make sense required able define component example app home cars main set routes cars route three child routes default list detail appts currently works redirectto carsts plunker expected work throws error app component plunker sure something incorrectly able link cars load route default redirect different path", "num": "5123", "d": "11/2015"}, {"title": "ca nt find way remove auxiliary route window", "body": "auxiliary route opened remains window matter router links clicked really behaves independent route done named route remove window plunk auxroute chat related issue", "num": "5122", "d": "11/2015"}, {"title": "installing part package", "body": "using angular angular router assume router using angular currently copied file installed package install router package want use angular", "num": "5121", "d": "11/2015"}, {"title": "mode links", "body": "angular use locationprovider set causes internal links trigger full refresh instead change route angular nt find similar functionality angular currently know ways change url angular app route changes without full page reload attribute company working app gets content cms may contain links parts application ca nt use routerlink quickly tried create directive would help normal link supposed miss something directive selector routerlink properties href host click go event class adirective href string", "num": "5120", "d": "11/2015"}, {"title": "impact objectobserve removal standard", "body": "heavily invested objectobserve would roadmap removal feature standard", "num": "5119", "d": "11/2015"}, {"title": "multilevel object multiple ngfor working", "body": "php multilevel array keys values resembles object structure js use simple foreach loop thru subbranch multilevel array works perfectly easily give ngfor template object loops expected try use second ngfor inside first ngfor loop work built pipe convert object array order execute second ngfor bug missing feature something completely wrong intuitive use multiple ngfor object work could critical functionality especially falcor handles really large multilevel object data need iterate well stackexchange topic matter example", "num": "5115", "d": "11/2015"}, {"title": "massive delays template xhr mobile safari images", "body": "preface fact weird issue could affecting large number apps issue mobile safari latest version though could affecting versions template xhr calls nginclude somehow delayed significant time multiple images origin page rephrase nginclude directives use load html many seconds loaded alongside multiple images source mobile safari make worse behavior consistent happens sometimes times also sure many images needed issue occur noticed fewer like images see issue fairly sure server issue use nodejs put standard basic server able see server responding requests immediately dev console see html downloaded short amount time reason download process nt long time additionally browsers including mobile chrome desktop safari everything works normally leads think front end back end issue attempted replicate issue examples page bare bones example issue includes latest angularjs script bunch images origin one nginclude page takes moments load free heroku server needs spinup time remember said consistent may refresh times usually able replicate refreshes sometimes takes page except images loaded different origin note problem page matter many times refresh wwwovidlifecom main site also see issue also occurs note nav bar appear uses good seconds sorry unable make plunkr codepen show example issue related serving images origin may write simple server really able reproduce problem", "num": "5112", "d": "11/2015"}, {"title": "need smaller libraries importing annotations", "body": "dart would help code nt import view injectable similarly libraries also", "num": "5111", "d": "11/2015"}, {"title": "directives styleheightpx contentheight leaves value even contentheight nulled", "body": "assume following template html html html however transitions nonnull value nullundefined expected html actual html vsavkin possibly cd related workaround use manage string", "num": "5110", "d": "11/2015"}, {"title": "nov remove reflectpropertiesasattributes commonoptionsdart commonoptionsreaderdart", "body": "camelcased match transformer parameters parameter", "num": "5108", "d": "11/2015"}, {"title": "extra div using ngoutlet", "body": "page using aspect something like directive view instead extra start creating possible css conflict", "num": "5107", "d": "11/2015"}, {"title": "docs backfill changelogmd following breaking changes", "body": "rename make routing concepts easier understand routedata token removed replaced type routedata documentation following breaking changes missing constraint added route parameter camelcase gt gt gt", "num": "5105", "d": "11/2015"}, {"title": "customevent handler syntax nt trigger directive selector", "body": "trying add custom event elements using directive attribute wrapped parenthesis directive nt bound element example directive selector animationlistener events listener animationlistener host animationend triggeranimationended export class animationlistener listener eventemitter new eventemitter component selector demo view template directives animationlistener export class democomponent log void consolelog animation ended trying use animationlistener directive selector event binding log directive attaching modal element could use different selector event attribute nt elegant single event attribute", "num": "5104", "d": "11/2015"}, {"title": "render dom element", "body": "trying find solution anywhere render componentdirective jqueryselector import component view import dropdown commoncomponentsdropdown export class somecontroller constructor inserthere append dropdown understand use renderer somehow", "num": "5101", "d": "11/2015"}, {"title": "continuous delivery npm pub percommit publishing", "body": "order able test angular builds quickly providing hotfixes outside scheduled releases start publishing angular npm pub every green master build change release become blessing ceremony commit picked marked release notes drafted release order consumers install release builds via npmpub need adhere version scheme distinguishes nonblessed blessed builds propose use semver conventions already used angular convention follows green master build published blessed release build published also implement need least following store npmpub credentials encrypted secrets travis build update packagejson pubspecyaml percommit version string setups travis deploy script deploys artifacts npm setups travis deploy script deploys artifacts pub also consider automating releases angular use ciangularjsorg wonder could come way trigger release via travis travis receives authorized signal cut release", "num": "5100", "d": "11/2015"}, {"title": "potential bug url hash decoded tested angular amp", "body": "browsing code reading still sure intended behavior happening us one specific instance angular used component page party script sets windowlocationhash angular locationwatch picks url url decoded party js script grabs windowlocationhash value decoded third party script expects encoded still creates bug reason occurs case third party script splitting character procat se kohler side discharge gets encoded angular modifies put json send wire decoding hash breaks process example setting windowlocationhash notice gets decoded intended behavior could glean spec nt happen characters slash question mark allowed represent data within fragment identifier beware older erroneous implementations may handle data correctly used base uri relative references section", "num": "5099", "d": "11/2015"}, {"title": "get access view dependency", "body": "currently getting access dom element using elementref looks like right way go party plugin integration need get dom reference component think may able get dependency view component access dependency constructor", "num": "5095", "d": "11/2015"}, {"title": "datatarget attribute renamed target compiled", "body": "datatarget property renamed target bug output console", "num": "5092", "d": "11/2015"}, {"title": "bug ngrepeat ngmodel input typeemail", "body": "hello found weird bug use input instead inside binding becomes broken check fiddle slightly modified version jaime tried jsfiddle project thanks", "num": "5090", "d": "11/2015"}, {"title": "textarea ngmaxlength issues chrome", "body": "chrome made textarea character number limit showing text x characters left one linebreaks text counter wo nt reach zero type reach wo nt go linebreaks count issue existing chrome angular version chrome version", "num": "5088", "d": "11/2015"}, {"title": "controlgroup ngformmodel form always invalid childs input controls", "body": "two different examples pattern parent component inputs child component nt know form could return valid true", "num": "5087", "d": "11/2015"}, {"title": "compile html js", "body": "tried makes misstakes compiled browserify errors solve thanks", "num": "5085", "d": "11/2015"}, {"title": "add debugelement accessors roottestcomponent", "body": "local modification merge upstream dart code looks like", "num": "5081", "d": "11/2015"}, {"title": "router div wraps template content", "body": "angular component router adds wraps template content behaviour breaks css rules example angular material div added mandatory add attributes compiled div template", "num": "5078", "d": "11/2015"}, {"title": "dynamiccomponentloader movenodesaftersibling causing rendering issues", "body": "currently calls corresponding calls creating adding new component next existing component appviewmanager domrenderer issue first inserts new element target element shuffles around target element seems unnecessary know new element going come target element causes subtle issues browser example ionic push new component navigation stack first component reset see vanilla htmljs example causing reset scroll red area second timeout fires work around saving restoring also worry potential flickers issues method seems like solution would allow explicit using avoid element detachreattach subsequent issues", "num": "5077", "d": "11/2015"}, {"title": "using querylist query following docs articles working", "body": "process building library shared community via npm stumped always returns empty list items upon instantiation subscribing pseudo code follow read followed documentation docs realted query etc well read tried using well avail given directives similar following directive selector container class container items querylist constructor query item descendants true items querylist thisitems items thisitemschangestorx subscribe list gt list always empty thisitems also always empty directive selector item class item input item string constructor private el elementref markup like given bootstrapped component like component selector app template directives container item export class appcmp public items array items omitted example would full objects bootstrap appcmp sure using wrong bug", "num": "5073", "d": "11/2015"}, {"title": "public api test fails browsers", "body": "started last rxjs upgrade old browsers safari lt android lt", "num": "5072", "d": "11/2015"}, {"title": "router link child routes async route", "body": "far tell ca nt link child routes component loaded asynchronous route understand router ca nt see child component routes loaded generating link time hard deep link routes asynchronously loaded components see example try run get important code main route config appts main component link child route config lazyts", "num": "5071", "d": "11/2015"}, {"title": "unit tests failing browser nt support symboliterator", "body": "tests failing ie safari lt ios lt android lt root cause rxjs hardcodes systemiterator browsers token used changed year ago pr opened solve rxjs side available rxjs dependency updated workarounds removed cc blesh robwormald", "num": "5067", "d": "11/2015"}, {"title": "plnkr update forwardrefts", "body": "example live demo look like right link", "num": "5066", "d": "11/2015"}, {"title": "plnkr needs updated providerts", "body": "example live demo looks like right one plnkr link fixed", "num": "5065", "d": "11/2015"}, {"title": "style child component viewencapsulationemulated", "body": "change styles child component parent viewencapsulationemulated think common thing happens reusable component example mybutton component different background color parent component button component right nt work styles encapsulated affect components defined", "num": "5064", "d": "11/2015"}, {"title": "question app modularity", "body": "allows build flexible modular app structure ex part current project module contains directives services things ex react components also module indexjs file angular module declared directivesservices assigned module uses dependency another js smthmoduleindexjs var angular require angular var smthfactory require providersmthfactory var smthdirective require directivesmthdirective var smthmodule angularmodule smthmodule smthmodulefactory smthfactory smthfactory smthmoduledirective smth smthdirective moduleexports smthmodule appjs var angular require angular var smthmodule require smthmodule var app angularmodule app smthmodule declare module items module add dependency top level module use module directivesservices anywhere app bun thing tried build small side project ca nt find anything modular structure simple two modules want use chat component service main need import whole relative path component another module modules reallocated must fix import new relative path also service requires smth like http js import injectable import http injectable export class chat constructor private http necessary inject httpproviders services top level app component uses service depend components inheritance thing breaks modular structure componentsservices ona module knows path componentsservices modules must watch dependencies easily solves via modules system missed something thing plans cases nt see comfortable use current app structure anythere except small project without need modulaity thx", "num": "5063", "d": "11/2015"}, {"title": "question asyncpipe compatible rx observable", "body": "wondering asyncpipe compatible rx observable looks seems plunk illustrates trying use pipe keeps throwing exceptions", "num": "5062", "d": "11/2015"}, {"title": "referencing function service two location breaking di", "body": "spent last hours attempting figure problem life ca nt sure bug something nt understand short story attempting use dynamiccomponentloader create dynamic panel system working create remove panels long story services due previous success figured getting injected correctly components one holds reference component holds dynamiccomponentloaders subscriptionlist pure data main appcomponent call function panels created without flaw tried inject linkservice another component call vary function time subscriptionlist null undefined get wall errors happens call function either location reviewed linkservice logs definitely injected correctly components identical also note reference created component created first time recreated service reference would null comment function call one location nt matter begins work call still injecting services look constructor dynamicloader dynamiccomponentloader injector injector element elementref thisdynamicloader dynamicloader thisinjector injector thiselement element component extends class component selector contentcomponent template export class testcontrolcomponent extends basecontrolcomponent linkservice linkservice component holds call component failing link service import testcontrolcomponent contentcontroller export class linkservice testcontrol testcontrolcomponent like said sure bug familiar angular yet thanks", "num": "5061", "d": "11/2015"}, {"title": "proposal testing sugar", "body": "really common pattern angular testing wrap entire callback think sugarized bit also good solution abusive indentation coming show stars default injectasync testcomponentbuilder tcb gt return tcbcreateasync ngbrating fixture gt fixturedetectchanges martin suggested use wrapper like fond wrappers like codebase workaround formatter since angular desperately needs lot sugar around testing think good candidate check angularclangformat information cheers", "num": "5060", "d": "11/2015"}, {"title": "viewencapsulationnone styles bleed viewencapsulationnative components siblings", "body": "sibling components one viewencapsulationnative viewencapsulationnone styles component stylings appended shadow root one component set native plunker updated stackblitz component set native adopt rest css rules nonnative components screenshot rendered dom last three style elements appended end shadow root actually declared two components set none emulated modes three components set native rules applied local component mixed rules bleed native nt bleed native", "num": "5059", "d": "11/2015"}, {"title": "download links wrong", "body": "sure correct place issue seemed likely spot text sends user getting angular source link incorrect point repo got page following link navigation click link select row", "num": "5057", "d": "11/2015"}, {"title": "typeerror read property infakeasynczone undefined", "body": "trying use following test get following failure tracing error found offending line following seems defined anywhere wrong", "num": "5053", "d": "11/2015"}, {"title": "parent directive query child directives child parent injected constructor", "body": "see demo repo reproducing issue present parent directive several child directives present child try inject childs parent using directive selector parentdirective export class parentdirective childs constructor query childdirective childs querylist consolelog building parent directive childschangestorx subscribe gt array always size zero thischilds childstoarray childs list always empty childs trying parent injected using directive selector childdirective export class childdirective remove injection query returns several elements expected issue reproduced repo", "num": "5051", "d": "11/2015"}, {"title": "tell angular update component view updating array", "body": "using firebase realtime backend sample app seem keep hitting walls comes view updates change shape array example plunk illustrates talking using mimic latency delays app dependencies async wait create array basically happens view pickup changes made array already rendered made changes later point maybe make class depend something could use let angular know updates run checks views", "num": "5050", "d": "11/2015"}, {"body": "talked brandonroberts seems behavior design however illegal route component unfulfilled may see dummy pattern becoming thing angular think component different basically little boxes filled contextual info blocks weather box upcoming concerts blabla states three little boxes used order still able route component boxes empty nodes would fill dummy components", "d": "11/2015"}, {"body": "cburgdorf also multiple routes component avoid dummy routes", "d": "11/2015"}, {"body": "yep know speaking abstract terms means make leaf components dummyable optional reuse one existing components act dummy depending case may good thing may feel like abusing existing component", "d": "11/2015"}, {"body": "cburgdorf good point", "d": "11/2015"}, {"body": "always making things easier consumer entirely sure proposal really big win jvandemo stated platform already exposes providers however still need know providers exists order make code work nt really change providers exported would still need know exports make use cases importing predefined list providers nt even enough eg want use different location strategy router need set provider anyway case need know exported needed setup particular provider addition sure would cause problem land providers exported modules allow us import alias equivalent way also like add definitely need figure kind best practices comes things like building libraries never enforced maybe part global styleguide almost everyone agrees", "d": "11/2015"}, {"body": "thoughts everybody exporting named thing probably bad idea libraries might also export directives pipes typescript autocomplete solves problem nicely users going read docs regardless maybe good idea community know ocombe worked issues definitely needs consideration good design jvandemo definitely agree needs solved sure covers quite yet", "d": "11/2015"}, {"body": "think already autocomplete typescript get covered library well documented jsdoc even see documentation auto complete least case webstorm lib library seed good idea make repository definitely work good practices well would help", "d": "11/2015"}, {"body": "thank great feedback think usefulness shorthand property becomes clear multiple providers exported library suppose thirdparty library called exports providers without shorthand property javascript must know import could read party library docs import heroservice heroesservice swordservice knightservice weaponservice gameservice scoreservice superheroessuperheroes specify required providers bootstrap appcomponent heroservice heroesservice swordservice knightservice weaponservice gameservice scoreservice shorthand property javascript import providers superheroproviders superheroessuperheroes bootstrap appcomponent superheroproviders property name think actual name relevant long convenient way grab providers using one property name originally proposed easy short selfexplanatory could name library author chooses author could choose export instead javascript import superheroproviders superheroessuperheroes bootstrap appcomponent superheroproviders making alias obsolete collision collision another library still alias important aspect would shorthand key available called directives pipes similar convention could used directives pipes suppose library exports directives pipes library could export quickly get access component definition easier upgradability library features new services directives andor pipes newer releases consumer using shorthand properties would automatically access without update bootstrap code goal ultimately goal provide maximum convenience library consumers would great could establish best practice library authors start based experiences people already working libraries would make interface new libraries consistent good thing start whole new ecosystem angular libraries good thing explosion angular libraries inconsistent consume would indirectly make angular apps harder set maintain although may premature think angular still alpha think topic really important angular ecosystem probably start growing exponentially next couple months thanks great input really enlightening hear many different opinions", "d": "11/2015"}, {"body": "set stone yet follow similar convention ngbootstrap export providers proposed override strategies engines case pascalprecht said feel like libraries export package makes sense sure always early stage angular community need see things evolve like libraryseed idea seeds right plan write two mores angular libraries apps perhaps run workflow organization p", "d": "11/2015"}, {"body": "see part effort get latest builds available quicker nt fully complete yet", "d": "11/2015"}, {"body": "ah thanks info smile", "d": "11/2015"}, {"body": "controls map contain control instances nested controlgroup instances controlarray instances typescript compiler ide know type get back ask instance key case add cast control using course name controls bit misleading setting", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "varghesep based current http implementation code looks good nt think specific guidelines use reactive apis angular angular uses rx hood certain things like http forms contentview children able integrate rx apis seamlessly sure robwormald thoughts", "d": "11/2015"}, {"body": "waiting till release write book buy quick dirty version", "d": "11/2015"}, {"body": "component needs notify outside world value changed see working implementation", "d": "11/2015"}, {"body": "also longer need manually include coredirectives formdirectives included automatically", "d": "11/2015"}, {"body": "robwormald awesome thanks", "d": "11/2015"}, {"body": "add see", "d": "11/2015"}, {"body": "issue redirected pull request made include systempolyfills angular code cdn pull request side note may required edge", "d": "11/2015"}, {"body": "agree want note part optional routes duplicate removed another part similar routerlink works already", "d": "11/2015"}, {"body": "read documentation nt find support route segments described idea one route optional route parts optional parameters call get clean url without slashes end empty segments like", "d": "11/2015"}, {"body": "sorry misunderstanding removed reference", "d": "11/2015"}, {"body": "could reference dom node want add click event import observable give observablefromevent thisreferenceonclick try", "d": "11/2015"}, {"body": "posted question rxjs suggested may right approach", "d": "11/2015"}, {"body": "terms eventemitters however familiar rxsubject eventemitter similar could make whole thing easier click event fire next value eventemitter", "d": "11/2015"}, {"body": "eventemitter currently literally rxsubject easiest way accomplish currently maxdignan suggests long term may case would advisable simply use subject see also related proposal varghesep please try asking questions gitter channel opening issue try keep github issues actionable issues feature requests rather howto cheers", "d": "11/2015"}, {"body": "duplicate angular resolution functionality core angular better building directive achieve like plenty examples issue referenced", "d": "11/2015"}, {"body": "hmm interesting one also works define getter setter", "d": "11/2015"}, {"body": "sent use solves issue found", "d": "11/2015"}, {"body": "nt fail chrome os x also used websockets great success already perhaps could post sample code using context", "d": "11/2015"}, {"body": "using chrome version windows installed version plunk works problem must specific earlier versions chrome", "d": "11/2015"}, {"body": "proposed solution would async method asynctick test fixture would resolve microtasks queued angular zone", "d": "11/2015"}, {"body": "idea awesome problem current pattern lacks functionality say hey give children nice simplifies lot patterns like accordion carousel tabs problem bit useless access first item last item items subscribe get add removal children useful stuff way concrete stuff children angular children requires parent collaboration parent couple together stuff angular idea idea move responsibility parent children dumb component outputs changes really like idea currently robwormald pointed pare nt ca nt take responsibility nt know children need way observe children listen need trigger needed logic way simple components reusable children", "d": "11/2015"}, {"body": "msummersintrax repo want open issue close one", "d": "11/2015"}, {"body": "sorry robwormald thanks", "d": "11/2015"}, {"body": "ping juliemr", "d": "11/2015"}, {"body": "last checks htttp imports changed imports see facades", "d": "11/2015"}, {"body": "last discussion vsavkin imports facades allowed might much apart merging unless something changed", "d": "11/2015"}, {"body": "pkozlowskiopensource cool thanks think vsavkin actually process correcting one import pr working perhaps issue noop vsavkin true enable enforcement private imports", "d": "11/2015"}, {"body": "yes allow importing facades enable enforcement angulartoolsbroccolibroccolicheckimportsts probably want add something like", "d": "11/2015"}, {"body": "jeffbcross vsavkin opened enforce import checks http module level suspicious import mockbackendts sure get rid one", "d": "11/2015"}, {"body": "common theme", "d": "11/2015"}, {"body": "another issue related", "d": "11/2015"}, {"body": "typings fixes tsd replacement related state typescript packages", "d": "11/2015"}, {"body": "thanks links check indeed still room improvement ts typings land", "d": "11/2015"}, {"body": "tried install jquery using typings came today", "d": "11/2015"}, {"body": "episodeyang typings registry would like create contribute registry welcome seen message tried use", "d": "11/2015"}, {"body": "bad idea diary pretty simple lib still work bit tinkering might worth bringing main repo adding dart support igorminar", "d": "11/2015"}, {"body": "like idea subscribe get similar way thinking lot places probably going land beta think one thing look postbeta adding kind thing lot various places makes sense", "d": "11/2015"}, {"body": "great", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "pr adds shared platform function uri decoding supporting method could add decoding desired solve issue pr simply could open separate pr add support would recommend done pr lands cc btford", "d": "11/2015"}, {"body": "originally wanted enable long stack traces based dart option run checked mode get long stacks run prod mode get short stacks supports able tree shake based code size impact however recently changes specify dev mode need refresher status quo", "d": "11/2015"}, {"body": "cases think noneswhatever syntax anything typescript sugars away moment focused providing documentation want use angular without build tooling typescript defined feature set point say wo nt document syntax think good idea currently focus two well three dart hard us say well turn feature xyz transpiler choice example babel upgrade currently nt support decorators proposal reference javascript class someservice constructor consolelog helloo class app constructor service static get parameters return someservice static get annotations return new componentmetadata selector app template hello world providers someservice alternately appannotations new componentmetadata selector app template hello world providers someservice appparameters someservice bootstrap app define pure setup dependence decorators could adds support pseudodecorator totally making go warning js const decoratecomponent config gt ctor gt ctorannotations new componentmetadata config used like use syntax similar edit updated static attach options", "d": "11/2015"}, {"body": "important could use help concrete questions something ca nt figure angular want make road reasonable even nt resources right give track documentation may add personal note typescript awfully nice especially factor productivity benefits tooling support personally nt see benefit going transpile might well get productivity back effort talking angular team", "d": "11/2015"}, {"body": "fwiw additional potentially simpler approach relates marking parameters injected component typescript class mycomponent constructor myservice myservice inject foo foo babel without parameters decorators class mycomponent static parameters myservice new inject foo constructor myservice foo clearly things possible bit early know best guidelines apis due time friends", "d": "11/2015"}, {"body": "nt think actually works wardbell iirc nt static properties thing though babel transformer enable", "d": "11/2015"}, {"body": "angularconnect team panel video naomiblack talked docs nt think makes sense docs guide mapping typescript concepts withwithout decorators guide users able interpret typescript docs well enough", "d": "11/2015"}, {"body": "robwormald pretty sure static properties supported know post official scott allen rarely gets kind thing wrong find spec tough going link supports notion static method docs guide mapping typescript concepts withwithout decorators yet", "d": "11/2015"}, {"body": "wardbell static methods including getters setters static properties js class foo static somemethod return baz static get bar return baz foosomemethod baz foobar baz valid way attach static properties without getter fact nicely decorator brings thread full circle js const staticprops props gt ctor gt objectassign ctor props staticprops bar baz class foo matter instance properties declarable way believe latest proposal fix typescript following valid ts typescript class foo static class property static bar baz instance class property baz baz foobar baz let afoo new foo afoobaz baz", "d": "11/2015"}, {"body": "robwormald rofl nt make lecture difference field unmediated data value property woot access data via methods compiler sauce makes look like field joking aside distinction clarifying", "d": "11/2015"}, {"body": "ok nothing interpolation like told problem another one tricky one closing still little bit confused somebody canwants expand little bit subject appreciate reopening case anything", "d": "11/2015"}, {"body": "full code ericmartinezr also input name directive apparently hijacked assignment interpolated property native replacing resulted image visible", "d": "11/2015"}, {"body": "design see details", "d": "11/2015"}, {"body": "realize nt written much design seems new way suffers couple key problems first glance actually longer type old uses angular custom syntax people learn quirks dsl write tooling", "d": "11/2015"}, {"body": "ewinslow see discussion", "d": "11/2015"}, {"body": "read intended takeaway", "d": "11/2015"}, {"body": "ah points valid continue discussion issue", "d": "11/2015"}, {"body": "one problem proposal nt look like javascript know dsl dsl expression suppose write js also transformed part former better remember", "d": "11/2015"}, {"body": "problem syntax time change detection fires receiving new instance promise getpeople method must fired way detecting value changed therefore refiring request nothing pipe specifically behavior would fwiw avoided possible much less performant using normal values make sense", "d": "11/2015"}, {"body": "thanks makes sense imagine underlying thing avoid returning observable method called change detection cycle happy close", "d": "11/2015"}, {"body": "pcroc problem property native label element attribute need use", "d": "11/2015"}, {"body": "pascalprecht totally right mhevery one comes quite often maybe alias gt know would create special case since common", "d": "11/2015"}, {"body": "use form builder create control group", "d": "11/2015"}, {"body": "alternately use keyup input event change fire input blurs see please ask sorts questions gitter reserve github issues actual issues bug reports thanks", "d": "11/2015"}, {"body": "robwormald nt another way hate writing extra code example jquery even first version angular able write one callback handling thing think creating form builder extra code way think actual issue lack angular feature effects simplicity code", "d": "11/2015"}, {"body": "options use single callback keyup input individually create instances observe individual values observe entire group observe dead unlikely angular implement anything along lines gives option observe values time including validation minimum amount code something concise like see", "d": "11/2015"}, {"body": "uses rxjs supports observable implements es specification said js based pubsub system work", "d": "11/2015"}, {"body": "missing reflectmetadata example works plunk", "d": "11/2015"}, {"body": "uhoh overlooked thank advice", "d": "11/2015"}, {"body": "issue anymore could please close", "d": "11/2015"}, {"body": "seems reasonable tracking", "d": "11/2015"}, {"body": "thing systemjs try download polyffils things like promise etc really nt think wo nt things needed already available imo proper way solving include shim systemjs need ie anyway prevent systemjs firing xhr little thingy thus saving one roundtrip server deploying systempolyfillsjs wo nt hurt might put users suboptimal track would rather vote deploying shim", "d": "11/2015"}, {"body": "attempt later look appendix minute quick start tried include still required systempolyfills would fail load app sat nov pawel kozlowski notifications githubcom wrote thing systemjs try download polyffils things like promise etc really nt think wo nt things needed already available imo proper way solving include shim systemjs need ie anyway prevent systemjs firing xhr little thingy thus saving one roundtrip server deploying systempolyfillsjs wo nt hurt might put users suboptimal track would rather vote deploying shim reply email directly view github", "d": "11/2015"}, {"body": "ca nt bootstrap angular app using ngupgrade want use component router use angular version", "d": "11/2015"}, {"body": "brandonroberts bootstraping angular app thought registering providers angular components bootstrapping angular limitation using ngupgrade main one around routing", "d": "11/2015"}, {"body": "bootstrapping angular order use routerproviders must bootstrap angular component first nt using ngupgrade", "d": "11/2015"}, {"body": "nt using ngupgrade true ngupgrade bootstraps multiple angular components inside angular module providers angular world need downgraded order used modules however brandonroberts mentioned version component router used particular use case think however able use", "d": "11/2015"}, {"body": "also nt see component snippet used could also cause problems guess", "d": "11/2015"}, {"body": "thanks lot brandonroberts pascalprecht one question components currently components work fine intention able use directives within components ie foo directive inside appcomponent sure understand best way need downgrade components even never going required directives bootstrapping less like angularmodule angularlegacy angularmodule angularlegacy directive foo function return restrict eac require ngmodel link function scope element attrs controller var controlleroptions options elementtext foo var adapter upgradeadapter new upgradeadapter angularmodule angularlegacy directive app appcompnent adapteraddprovider httpproviders adapteraddprovider routerproviders adapterbootstrap documentbody angularlegacy appcomponent something like", "d": "11/2015"}, {"body": "everything inside appcomponent nt need downgrade components also example plunk component inside appcomponent downgraded thanks clarification pascalprecht", "d": "11/2015"}, {"body": "great thanks lot brandonroberts closing issue find new router", "d": "11/2015"}, {"body": "hey man issue open", "d": "11/2015"}, {"body": "brunobelarmino thanks reply", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "afaik decorations inherited extending classes decorated", "d": "11/2015"}, {"body": "pascalprecht think entirely true piece code proves decorated property inherited correctly alpha typescript import bootstrap component input output ngfor eventemitter abstract class datacomponent input data interface tododata todos todoentrydata interface todoentrydata content string component selector todoentry template directives class todoentrycomponent extends datacomponent input data inherited component selector todo template directives ngfor todoentrycomponent class todocomponent extends datacomponent data tododata todos content task content task bootstrap todocomponent however seem work consistently eg try mixing inherited decorated property directly defined property getting errors example adding decorated property class get error typescript import bootstrap component input output ngfor eventemitter abstract class datacomponent input data interface tododata todos todoentrydata interface todoentrydata content string component selector todoentry template directives class todoentrycomponent extends datacomponent component selector todo template directives ngfor todoentrycomponent class todocomponent extends datacomponent data tododata todos content task content task ondeleted event consolelog event bootstrap todocomponent get try run code seems happening property recognized thus data bind property parent component decorated property child class define explicitly seems working expected typescript class todoentrycomponent error also goes away move parent class would really nice could mix inherited explicitly defined decorated properties", "d": "11/2015"}, {"body": "based code snippet requirejs machinery except library particular code nt cause errors since nt even use requirejs could set plunk reproduces issue", "d": "11/2015"}, {"body": "sample project running server uncaught typeerror read property setasap undefined error would found navigate page note appjs compiled typescript", "d": "11/2015"}, {"body": "looks like missing", "d": "11/2015"}, {"body": "problem line var require promise requirejs loaded require would return empty object works requirejs loaded quite understand happening", "d": "11/2015"}, {"body": "try putting looks like overriding used bundle", "d": "11/2015"}, {"body": "ericmartinezr thanks reply solve original code snippet work bit complicate sample project", "d": "11/2015"}, {"body": "investigation found code requirejs loaded define function define amd object try call define passing function returns promise however callback executed late return promise calling setasap", "d": "11/2015"}, {"body": "systemjs loader recommended load amd files uses configuration syntax fwiw", "d": "11/2015"}, {"body": "facing issue wondering configuring typescript compile angular amd umd cover instead commonjs would solve issue well instead", "d": "11/2015"}, {"body": "robwormald tried systemjs got error reason need use requirejs able reuse existing code way make requirejs work angular", "d": "11/2015"}, {"body": "nothing prevent two working together unable run code codeenvy create plunker template closer look", "d": "11/2015"}, {"body": "also sfx bundles producing today great fit amd loaders wait till lands get released", "d": "11/2015"}, {"body": "robwormald plunker", "d": "11/2015"}, {"body": "sort backwards imho could conceivably transpiled amd typescript unlikely support systemjs loader universal meaning load amd cjs code loader would advise authoring new code amd use system loader allow load legacy amd code new application example see also basically works requirejs loader", "d": "11/2015"}, {"body": "going close works feel free carry discussion", "d": "11/2015"}, {"body": "robwormald thanks example finally get working loading systemjs angular requirejs order", "d": "11/2015"}, {"body": "mlaval angular bs amp sl test output available somewhere know bs amp sl failures ios safai mobile accurate reflection realuser experience environments", "d": "11/2015"}, {"body": "tests failures fact campaign starts correctly successful fast far know problem running application safari mobile", "d": "11/2015"}, {"body": "updates main flake solved campaign run edge monitoring builds idea split browsers bs sl confirmed prs integrated last round monitoring done making jobs required", "d": "11/2015"}, {"body": "adamdbradley could expand use case callback actually runs child zone zone called goes event handlers microtasks", "d": "11/2015"}, {"body": "maybe intended protected", "d": "11/2015"}, {"body": "see working solution also repo issues please open", "d": "11/2015"}, {"body": "would nice able choose mocha jasmine", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "hey vance repo looking one", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "rosendi perfect thank nt type attributes validated angular default manage another question added another validation rule emailvalidator show different messages two rules way write something like also prefer write another validator class solving issue possible", "d": "11/2015"}, {"body": "currently angular builtin validators yep implement custom validator email inputs regexbased inputs seems logical since email validation little bit tricky case small remark agree article one hand checking email format synchronous process uniqueness validator asynchronous implemented different way hand think much better avoid monolithic classes testing classes much complicated code looks overloaded well ps compose validators", "d": "11/2015"}, {"body": "rosendi thank clear helpful answer", "d": "11/2015"}, {"body": "egytechnology navigate function takes array also may need put full link dsl array", "d": "11/2015"}, {"body": "brandonroberts know navigate function takes array sorry seems forget put code meaning put full link dsl array function change url back home page way navigation views typescript code angular using", "d": "11/2015"}, {"body": "egytechnology ca nt tell based code snippet trying navigate say full link dsl navigating root component provide plunk example", "d": "11/2015"}, {"body": "brandonroberts cant create plunk example project based aspnet project could gave angular codes way using angular creating spa project switch views issue routing trying submit data angular using normal click event process end event must navigate user new page application sequence content router config showing data inside view called created aspnet first page appears attribute must navigate user event called appts file typescript import bootstrap component view bind inject import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet route locationstrategy hashlocationstrategy importing application components import businessnamelookup businessnamelookupbusinessnamelookupts import abn abnabnts import lookupdetails lookupdetailslookupdetailsts import businessnames businessnamesbusinessnamests import businesswebaddress businesswebaddressbusinesswebaddressts import businesscategory businesscategorybusinesscategoryts import contactinformations contactinformationscontactinformationsts import businesspurchaseaddress businesspurchaseaddressbusinesspurchaseaddressts import businessimages businessimagesbusinessimagests import surveyquery surveyquerysurveyqueryts importing application components import businessmodel datamodelsbusinessmodelts component selector app view template directives routeroutlet routerlink routeconfig new route path component businessnamelookup new route path abn component abn name abn new route path lookupdetails component lookupdetails name lookupdetails new route path businessnames component businessnames name businessnames new route path businesswebaddress component businesswebaddress name businesswebaddress new route path businesscategory component businesscategory name businesscategory new route path contactinformations component contactinformations name contactinformations new route path businesspurchaseaddress component businesspurchaseaddress name businesspurchaseaddress new route path businessimages component businessimages name businessimages new route path surveyquery component surveyquery name surveyquery class appcomponent bootstrap appcomponent routerbindings bind locationstrategy toclass hashlocationstrategy businessnamelookupts typescript import component view inject import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet router location import businessmodel datamodelsbusinessmodelts import singletonservice datamodelssingletonservicets let model new businessmodel component selector bnamelookup view templateurl homebusinesslookup export class businessnamelookup value abnts typescript import component view import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet router import businessmodel datamodelsbusinessmodelts import singletonservice datamodelssingletonservicets let model new businessmodel component selector bnamelookup view templateurl homeabncode export class abn values", "d": "11/2015"}, {"body": "egytechnology router delegates navigation root router nt need routerparentnavigate abn tried using putting slash front force router navigate root component instead component injected router alpha version using", "d": "11/2015"}, {"body": "using alpha using nothing change router still dive back first page call new page show symbol", "d": "11/2015"}, {"body": "think may take attention put line call function include line work put put function call template show error", "d": "11/2015"}, {"body": "finally solve issue using function frontend html", "d": "11/2015"}, {"body": "cc wardbell know thoughts well", "d": "11/2015"}, {"body": "note extended sure removed possible putting back could solve complaints", "d": "11/2015"}, {"body": "see discussion changed inherit", "d": "11/2015"}, {"body": "agree wordy unexpected think twice remember attach component element able find nt obvious extend either cool long ago change ca nt available directly tcb right would way much common sense ps nt care able get two places tcb happens places", "d": "11/2015"}, {"body": "simple proposal", "d": "11/2015"}, {"body": "juliemr actually used way several refactorings ended current state inheritance thing nt make sense exposing two properties directly via fixture fine", "d": "11/2015"}, {"body": "btw impact plan remove apis reexport via right", "d": "11/2015"}, {"body": "igorminar correct impact", "d": "11/2015"}, {"body": "simple proposal starting wonder debugelement useful public api", "d": "11/2015"}, {"body": "think debugelement useful authors components meant used one platform authors would care associated queries think authors want working one platform eg web enough interest go ahead make pr", "d": "11/2015"}, {"body": "dartonly problem right", "d": "11/2015"}, {"body": "closing duplicate", "d": "11/2015"}, {"body": "already flag inline templates disable transformer works well together build rules disable angular transformer used components well setup currently used tests", "d": "11/2015"}, {"body": "built lazy loading", "d": "11/2015"}, {"body": "possible dupe", "d": "11/2015"}, {"body": "yjbanov please determine angular public api bit suspicious happy hear arguments making public", "d": "11/2015"}, {"body": "yeah make public needed support custom code generators use pub transformers", "d": "11/2015"}, {"body": "brandyscarney version angular share plunker repro tbosch rkirov please help determine bug projection algorithm", "d": "11/2015"}, {"body": "angular version yep plunker tried make easy see visually smile", "d": "11/2015"}, {"body": "intended behavior far agree optimal content projection works right desugars angular uses simplified algorithm content projection called static content projection one restriction angular ca nt project parts template therefore angular applies css selector element content element one direct child eg understand case way add attributes implicitly created element angular also use information implicit template contains one child element however add additional semantics using user use either workaround could tell users want use inside use explicit element attribute also change select elements attribute eg leaving issue open need design proposal solve best way", "d": "11/2015"}, {"body": "dup think", "d": "11/2015"}, {"body": "quite dupe maybe solution could work attributes well nt see", "d": "11/2015"}, {"body": "kind possible today expression evaluates attribute removed afaik yeh maybe kind sugar boolean attributes", "d": "11/2015"}, {"body": "see well", "d": "11/2015"}, {"body": "may ask would nt better wait multiple write specific templates view android ios desktop etc wo nt check ios view android viceversa would save conditions", "d": "11/2015"}, {"body": "thank pkozlowskiopensource works hey ericmartinezr thanks tip certain cases want add attribute element without duplicating markup splitting multiple files", "d": "11/2015"}, {"body": "also way add attribute based expression value similar works class added element searched around could nt find anything sorry overlooked something", "d": "11/2015"}, {"body": "brandyscarney syntax could lowerlevel manipulation elementref probably good idea attributes explicit template", "d": "11/2015"}, {"body": "pkozlowskiopensource thanks quick reply", "d": "11/2015"}, {"body": "add directive work think real way handle may write value accessor polymer component though edit see comment", "d": "11/2015"}, {"body": "thanks zyzle works seen comment alxhub issue think intuitive reference close issue", "d": "11/2015"}, {"body": "review code see means choose html tags would used words text oneline input never dbarbour sorry clear concern try something nt work worried based reading mentioned blog post type html would like write think wo nt work", "d": "11/2015"}, {"body": "hey peekmo sure bet related seem like folks noticed similar behavior even though getting different ways", "d": "11/2015"}, {"body": "peekmo use either adding gets registered twice", "d": "11/2015"}, {"body": "ref", "d": "11/2015"}, {"body": "oh simple thank much sorry cause duplicate see", "d": "11/2015"}, {"body": "worries glad working", "d": "11/2015"}, {"body": "likely need update version npm need least version", "d": "11/2015"}, {"body": "robwormald think needs npm vetsion atm", "d": "11/2015"}, {"body": "derp gkalpak right", "d": "11/2015"}, {"body": "yes probably issue npm node version closing one seems npmrelated got way debugging troubleshooting one", "d": "11/2015"}, {"body": "using npm v nov pm rob wormald notifications githubcom wrote likely need update version npm need least version reply email directly view github", "d": "11/2015"}, {"body": "fix due bug node installer nt remove old npm installing new one results broken npm installation easiest way work around remove version installed node rm rf usrlocallibnodemodulesnpm reinstall node package", "d": "11/2015"}, {"body": "confirmed", "d": "11/2015"}, {"body": "reproduce tried unsuccessfully master", "d": "11/2015"}, {"body": "make sure got required node npm versions requirednpmversion lt requirednodeversion", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource node npm version correct guess uninstall install hmm", "d": "11/2015"}, {"body": "mentioned assume fine frustrating error", "d": "11/2015"}, {"body": "nathanwalker developer guide see prerequisite software nodejs version gt lt", "d": "11/2015"}, {"body": "thanks ericmartinezr installing turns also reason another version installed somewhere else ergh node sometimes", "d": "11/2015"}, {"body": "node move fsextra devdependencies dependencies makes error go away nt know causes behavior though", "d": "11/2015"}, {"body": "vsavkin comment", "d": "11/2015"}, {"body": "also interested app directives date input time input access ngmodel based blur tell user finished editing parse update ngmodel think way via defaultvalueaccessor requires", "d": "11/2015"}, {"body": "requesting shorter syntax new capability", "d": "11/2015"}, {"body": "requesting shorter syntax capability already exists exposed method", "d": "11/2015"}, {"body": "rlegrand see give want use npm style detailed", "d": "11/2015"}, {"body": "ok workaround cast particular functions loose benefits typescript", "d": "11/2015"}, {"body": "using ref imports typically long importing files tsc reference directly source", "d": "11/2015"}, {"body": "none angular docs examples plunkers julie far worked fine", "d": "11/2015"}, {"body": "router normally set routerlinkactive class active router links also check routerisactive method documentation", "d": "11/2015"}, {"body": "cghislai routerlinkactive class set link need information surrounding routerisactive needs instruction input nt see easy way get instruction route name", "d": "11/2015"}, {"body": "plnkr demonstrating behaviour", "d": "11/2015"}, {"body": "pulling imports directly figure best avoid imo part bigger questions share code core bundles one place public exports core http router others depend", "d": "11/2015"}, {"body": "process reworking import paths nothing imports code portable dom render core believe webworker safe take look try fix http imports", "d": "11/2015"}, {"body": "cool mostly fault importing directly assuming worker bundle includes sort", "d": "11/2015"}, {"body": "robwormald ah see yeah new worker bundle include", "d": "11/2015"}, {"body": "would nice directive nt applied control null prevent duplicated code would proposed syntax please keep ind trying know much possible directives active given template perf optimizations enable better tooling", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "think way plan support directive always applied becomes inactive secondary directive present specialized syntax", "d": "11/2015"}, {"body": "think may useful angularangular", "d": "11/2015"}, {"body": "thanks example could use store share data components", "d": "11/2015"}, {"body": "thanks example special case complex generic data store currently use yep temporary solution uses another helper service track app state", "d": "11/2015"}, {"body": "vsavkin rkirov fyi wrong order method calls mark dirty updating value", "d": "11/2015"}, {"body": "figured maybe worthwhile thing check framework output annotated output component annotation list ie outputs", "d": "11/2015"}, {"body": "typotter see", "d": "11/2015"}, {"body": "thanks ericmartinezr duplicate", "d": "11/2015"}, {"body": "component programmatically say let system know component dirty needs rendering", "d": "11/2015"}, {"body": "lifecycle hook called input properties component change arbitrary properties component lifecycle designed specifically address bindings also binding create view visible example binding need change value property within player model angular change detection using reference checks referencing complex object might want switch immutable way modifying data changing object references creating copies changes check example see angular react changes change object references", "d": "11/2015"}, {"body": "cajoy gionkunz pointed direct equivalent functionality observe anything hard provide proper solution since exposing functional usecase case general support questions directed appropriate support channel want keep github bug reports feature requests would suggest starting discussion", "d": "11/2015"}, {"body": "idea shared user information controllers different services user information may contain specific data might altered different components processed without view changes others implement features using simple event emitters listeners create component bootstrap file inject route like using hidden widgets workarounds compare simple watch observe implementation future going use gitter discussions", "d": "11/2015"}, {"body": "would really awesome thanks juliemr", "d": "11/2015"}, {"body": "juliemr nt think understand proposal could provide background", "d": "11/2015"}, {"body": "mhevery instead user specify return promise latter case could wrap test case zone declare complete asynchronous tasks done pr implements first version would public testing library moment", "d": "11/2015"}, {"body": "closed landed", "d": "11/2015"}, {"body": "yup", "d": "11/2015"}, {"body": "form prevent form submitting return", "d": "11/2015"}, {"body": "even without action request sent", "d": "11/2015"}, {"body": "mhevery sample illustrating issue", "d": "11/2015"}, {"body": "version angular using", "d": "11/2015"}, {"body": "use last version alpha", "d": "11/2015"}, {"body": "okay try", "d": "11/2015"}, {"body": "use last version alpha actually latest time writing alpha", "d": "11/2015"}, {"body": "egytechnology verify close", "d": "11/2015"}, {"body": "trying get error list say code use appts typescript import bootstrap component view bind import routerdirectives routerproviders routeconfig import homecomponent homehome component selector app directives routerdirectives routeconfig path home component homecomponent class appcomponent bootstrap appcomponent routerproviders homets typescript import component view bootstrap component selector home view template hello export class homecomponent bootstrap homecomponent files structure", "d": "11/2015"}, {"body": "egytechnology put angular related scripts systemjs typescript also remove traceur", "d": "11/2015"}, {"body": "ericmartinezr say get message home script", "d": "11/2015"}, {"body": "egytechnology think kind getting support questions original issue solved changes checkout ask kind questions close", "d": "11/2015"}, {"body": "hop upset mr pascalprecht new kind stuff want thank mr ericmartinezr help thanks", "d": "11/2015"}, {"body": "egytechnology oh hope nt give feeling", "d": "11/2015"}, {"body": "another problem need sort proxy component tree looks like users userslist usersdetail terminal able show breadcrumb looks like uibreadcrumbs wanted defining sort users route would require searching thru routes get one matches since way access whole route tree possible way came using breadcrumbsproxy looks like apparently return instruction rather child kinda useless would make easier would way search router something say perhaps javascript routergetinstructionbylinkparams users userslist returns instruction userslist route", "d": "11/2015"}, {"body": "another thing hard actually get instruction recreate link breadcrumb currently concatenating instruction tree manually composing array like gon na even worse manage get proxy working since keep two arrays instructions one real generating usersdetail one fake proxied userslist would really great could pass instruction router get back something like", "d": "11/2015"}, {"body": "yep something want nt gotten yet", "d": "11/2015"}, {"body": "looks like actually implemented docs wrong generate instruction instead url contrary docs reads", "d": "11/2015"}, {"body": "unfortunately thing return parent instruction instruction expect child sucks", "d": "11/2015"}, {"body": "design current http ts js apparently already solid widely used libraries dart", "d": "11/2015"}, {"body": "see also", "d": "11/2015"}, {"body": "sure allow use di", "d": "11/2015"}, {"body": "similar", "d": "11/2015"}, {"body": "fyi believe size currently initial limit need targets shrink improve", "d": "11/2015"}, {"body": "x replicate internal hello world project x run separate travis job x add analytics consider implementing follow pr mechanism would compare current payload size current master size fail build x require storing master payload size somewhere complicates matters maybe could use firebase", "d": "11/2015"}, {"body": "igorminar proposals think reasonable cap incremental increases still need absolute lt gzipped lt minified caps sla internal customers also without matter incremental percentage choose still exponential", "d": "11/2015"}, {"body": "duplicate output may related see issue js build level duplication generated js may impacting code size", "d": "11/2015"}, {"body": "note need store build size anywhere could checkout master branch previous commit build playground examples find outputs print gzipped size json branch version compare tiny nodejs script separate travis env", "d": "11/2015"}, {"body": "also broken commit date wed nov issue also reproduced running todo example adding single entry rendered twice", "d": "11/2015"}, {"body": "igorminar vsavkin tbosch looks weird ideas happening", "d": "11/2015"}, {"body": "maybe yjbanov could help tbosch ca nt look monday", "d": "11/2015"}, {"body": "victor look", "d": "11/2015"}, {"body": "work add import top strange nevertheless", "d": "11/2015"}, {"body": "sebastianstehle try bundle import shims zone reflect scripts kind crazy things might interfere module packagers loaders stick tag might concatenate files nt use bundlers btw going provide bundle party deps needed see closing one going bundles looking time ca nt investigate every setup every developer could", "d": "11/2015"}, {"body": "hi add happens pass url parameterif pass request makes use options passed create request instance", "d": "11/2015"}, {"body": "cajoy see could stick would add ofc prefer p", "d": "11/2015"}, {"body": "hasllocation way want go may wait fix thanks", "d": "11/2015"}, {"body": "oops mistake docs hand recognize executed child router ca nt use instruction navigate navigatebyinstruction delegates root router right seems recognize generates instructions child root yes instruction always includes full component hierarchy tried assumption looking code", "d": "11/2015"}, {"body": "root router returns full hierarchy see console output click links navigate absolute url also delegated root router", "d": "11/2015"}, {"body": "yep right problem", "d": "11/2015"}, {"body": "turned workaround import reflectmetadata reflectmetadata shim shim nt try import rather make sure corresponding file included browser test runner via tag otherwise mechanism shim need load soon possible import", "d": "11/2015"}, {"body": "pkozlowskiopensource nonbrowser test runners mean case test runner running browser guess mocha others nt well", "d": "11/2015"}, {"body": "nonbrowser test runners mean case test runner running browser guess mocha others nt well testing environment case adding reference reflect metadata nt differ adding js code shim angularspecific", "d": "11/2015"}, {"body": "pkozlowskiopensource use protractor commandline testing framework angular applications answer question nt see way include file importing files spec files", "d": "11/2015"}, {"body": "use protractor case reflectmetadata part application test right protractor tests app loaded browser saying need reflectmetadata protractor tests would strange got impression trying use protractor unittest runner job nt designed need example unittesting setup karma look", "d": "11/2015"}, {"body": "ok report back three days", "d": "11/2015"}, {"body": "case reflectmetadata part application test right protractor tests app loaded browser yes since angular requires use class decorators believe part angular thus transitively part application saying need reflectmetadata protractor tests would strange yes sorry clear workaround diff diff git aspects bspects index aspects bspects spects import reflectmetadata import controller srccontroller describe gt got impression trying use protractor unittest runner job nt designed need example unittesting setup karma look reproduce anyway tried another test runner mocha designed run unit tests right mocha able reproduce reproducer typescript srccontrollerts import ng ngcomponent export class controller typescript testspects import reflectmetadata import controller srccontroller describe gt gt let instance new controllercontroller patch represents workaround diff diff git apackagejson bpackagejson index apackagejson bpackagejson devdependencies mocha reflectmetadata typescript diff git atestspects btestspects index atestspects btestspects import reflectmetadata import controller srccontroller describe gt guess issue deserves reopening think pkozlowskiopensource", "d": "11/2015"}, {"body": "zonejs must loaded first systemjs using simple script tag", "d": "11/2015"}, {"body": "sure", "d": "11/2015"}, {"body": "better explain expected behavior vs actually happens clear seeing instead", "d": "11/2015"}, {"body": "updated description include expected behavior actual result", "d": "11/2015"}, {"body": "nt leak helpers outside bundles otherwise could run conflicts people instead include helpers within bundle imo done post beta nt change api surface someone really wants implement beta going stand way", "d": "11/2015"}, {"body": "robwormald measure things mingzip assuming gzip actual gains terms size would much smaller biggest pb ts nt give us file helpers produce nt equivalent traceurruntime", "d": "11/2015"}, {"body": "even nt much smaller savings js parse time still good", "d": "11/2015"}, {"body": "reactivexrxjs installed bug angular router build injectable function nt return function used decorator want manually edit angular router build file update following code file", "d": "11/2015"}, {"body": "please see attached image screen shot windows explorer reactivexrxjs installed see issue resolved made change suggested", "d": "11/2015"}, {"body": "jeffbcross vsavkin comment", "d": "11/2015"}, {"body": "dug bit think upstream rx bunch change share multicast etc semantics week flyingmutant pull latest version rxjs try replace http call mock observable returning array similar", "d": "11/2015"}, {"body": "played bit believe actually angular issue bug still present without look console message entering first symbol means nobody tried subscribe observable yet instances async pipe already component related way works maybe please see updated plunker", "d": "11/2015"}, {"body": "also noticed sometimes always plunkr starts working changing active tabwindow kick mechanism change detection forces everything work", "d": "11/2015"}, {"body": "dig deeper definitely feels bit wonky said think overall pattern great idea lot subscriptions constantly torn rather trying match two async actions together view idiomatic reactive way would something like async work leveraging rx good combinators keeping view relatively logicless thoughts cc jeffbcross", "d": "11/2015"}, {"body": "extra subscription nothing one callback added existing observable ca nt imagine bottleneck unless dealing lots idiomatic reactive way expert rx feel code direct declarative code variants trade imperative block whose purpose massage data arbitrary viewspecific way declarative one day", "d": "11/2015"}, {"body": "could better explain use plnkr click expected behavior rather actual behavior", "d": "11/2015"}, {"body": "try clicking components increment buttons reach number removed parent meet conditions live longer within view parent child components emit event clicked increment value imperative data structure data within parent affected directly action child components parent removing components reach number event children emitted never reach parent component hope makes sense", "d": "11/2015"}, {"body": "gionkunz thanks detailed explanation yes bug use rx cc vsavkin jeffbcross blesh issue calling asynchronous means subscriber get called change detection executed allowed destroy view calling subscriber change detection late fix make sure calls synchronous delivery inter component communication", "d": "11/2015"}, {"body": "also eventemitternext renamed eventemitteremit", "d": "11/2015"}, {"body": "rx subjects next synchronously dovetail observables saying", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "related", "d": "11/2015"}, {"body": "naa active link class already added angular version", "d": "11/2015"}, {"body": "relatedduplicated", "d": "11/2015"}, {"body": "rxjs output things need vs currently export optimization current rxjs dist new lite rxjs dist change none basic uglify uglifygzip note numbers rxjs size inside angular angular method use browserify get numbers current distribution run browserify file created test new distribution case wondering size without operators min gzip cc igorminar", "d": "11/2015"}, {"body": "fantastic", "d": "11/2015"}, {"body": "implemented initial step delta operators \u03b4 \u03b4 follow separate pr add operators track changes weight note likely cause initial confusion rxjs includes interfaces observable expose autocompletion operators actually included bare implementation imho consider basic parity dart stream api also needs included", "d": "11/2015"}, {"body": "added pr \u03b4 \u03b4", "d": "11/2015"}, {"body": "comparison matching operators dart api may couple mismatched vsavkin probably knows better ones marked spec core observable therefore included default ones marked star imho necessary inclusion either likely commonly used difficult compose generally lead poor user experience without dart stream gt rx observable static methods gt gt gt star gt gt star instance methods gt gt think star gt gt gt star gt gt gt equivalent far tell gt gt gt rx expand like recurse gt gt star gt spec gt star gt exact equivalent gt gt spec gt star gt sort subscribe observer similar gt star gt gt gt gt gt gt gt gt none yet gt closest tell gt star star operators dart use case forms topromise operators saying good idea fyi \u03b4 \u03b4 star operators \u03b4 \u03b4", "d": "11/2015"}, {"body": "ooo hunt continues get unminified free simply turning emitted helpers see", "d": "11/2015"}, {"body": "nt eat whole pizza", "d": "11/2015"}, {"body": "favor everyone else keeping angular core size small concern direction perhaps worth minutes thought appears observables manipulations thereof going end pervasive angular applications stripping many features save bytes might delay reduce extent angular developers embrace future strip care", "d": "11/2015"}, {"body": "kylecordes thanks note working determining best shortterm midterm longterm solutions good handle best worlds small payload composable chainable operators add notes issue", "d": "11/2015"}, {"body": "cyclejs ui framework based around rxjs moved rx internal peer dependency sure reasoning makes sense might able bug andre staltz info part rxjs team rxjs trying become modular think would great user choose import minimal full featured rx fit needs", "d": "11/2015"}, {"body": "due testonly feature implemented inlinerfortesttransformerdart jbdeboer suggested fix good idea nt time make change atm", "d": "11/2015"}, {"body": "good catch wardbell status linking chapters docs hard link ts version template helper", "d": "11/2015"}, {"body": "sadly help even would nt helped time know doc someone pr", "d": "11/2015"}, {"body": "wardbell", "d": "11/2015"}, {"body": "wardbell send one hold horses", "d": "11/2015"}, {"body": "ah brandonroberts way faster haha pr trick", "d": "11/2015"}, {"body": "yeah thanks", "d": "11/2015"}, {"body": "somewhere complete code heros example please docs reference things currently available tutorial", "d": "11/2015"}, {"body": "daslicht code samples chapter yet put actual examples yet working", "d": "11/2015"}, {"body": "thank angular ts looks amazing excited try find much info stuck router atm", "d": "11/2015"}, {"body": "daslicht think docs seem moving good direction great product becoming stable assuming lot developers interested angular moves beta release beyond mentioned lack documentation comes router sure great docs soon get comprehensive official documentation take look poc work also common router scenarios using alpha hopefully least get started", "d": "11/2015"}, {"body": "ca nt store state higher level component get destroyed", "d": "11/2015"}, {"body": "hi misko thanks answer actually done works fine take suggestion may lot state must stored complex windows error prone painful would nice angular possibility", "d": "11/2015"}, {"body": "agree cangosta think could useful feature certain scenarios however nt know something could easily added framework would costly terms development andor computational resources someone please weigh interested seeing discussed somewhat technical fashion", "d": "11/2015"}, {"body": "agree said picture scenario need navigate various routes save state higher level component likely save model state view imagine one view tab component tab selected getting back want tab selected longer model concern save anyway multiple tab components save save everything ad hoc", "d": "11/2015"}, {"body": "think already hide component property opt change detection using changedetectionstrategy closing since nt think anything specific", "d": "11/2015"}, {"body": "mhevery good ideia components bound router actual use case router one managing", "d": "11/2015"}, {"body": "btford idea one think would reasonable keep viewref around disable change detection need thinking", "d": "11/2015"}, {"body": "order make explicit intended somehow inform angular nt want destroy view navigate recover view navigate path afaik mhevery suggestion hiding components would work fine easy way explicitly instantiate view component render", "d": "11/2015"}, {"body": "interesting problem one think far reaching implications terms developer burden user experience explain mean couple scenarios imagine using angular mobile application consider something like facebook app sort tabbed arrangement main component switch content different tabs way angular works fine data never discarded change detection however imagine case complex type application something meant commercialenterprise environment run serious issues let consider scenario actually viable desktop mobile imagine application allows user manage business activities shop trying issue document invoice instance met new client going add database adding client mean navigating away component issuing invoice fills form saves comes back screen registering sale voil\u00e0 data previously input gone would even serious loss productivity working document affects inventorystock possible tens thousands rows document would get lost consider scenario client actually working mobile device like table problem gets even compounded computational resources far inferior connectivity usually flakier either client risks losing work need checks set motion prevent performing certain operations certain times overhead imposed development programmers come means storing restoring state across application components also computational costs may likely exceed solutionmechanism integrated framework", "d": "11/2015"}, {"body": "problem problem found apply directives form inputs directives manipulate dom add behavior multiselect maksed inputs time come back view html cached directives run constructor lifecycle hooks manipulate dom would nice strategy keep state component maybe reuse instance class sure difficult possible thank", "d": "11/2015"}, {"body": "solution moment create destroy method directive cleans autogenerated html cleans attached events also directive rerun maybe would helpful tell router strategy follow cache cache views developer asume freely risks strategy", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "import http response map res response gt resjson", "d": "11/2015"}, {"body": "todoubaba dawidmyslak pointed add type annotation closed", "d": "11/2015"}, {"body": "yes working", "d": "11/2015"}, {"body": "regards issue probably use constructor", "d": "11/2015"}, {"body": "yep mistake closing issue major one fixed alpha second one mistake", "d": "11/2015"}, {"body": "sclausen provide plunk demonstrates error", "d": "11/2015"}, {"body": "pascalprecht severe difficulties set typescript plunkr unfortunately every plunkr could found either outdated jssetup besides might really messed project setup work around modified nt complain incompatible future bugs would great working plunkr basic know resources", "d": "11/2015"}, {"body": "wrong repo guess repo angular", "d": "11/2015"}, {"body": "sorry closed", "d": "11/2015"}, {"body": "could try required bind factory suspect real issue deps specified di try get using reflection info present error message needs updated anyways", "d": "11/2015"}, {"body": "hey rpark see", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "jgenchik problem approach reproduce behavior using plain javascript see fiddle solution latter would reset starts remove item related anyway clear array super easily", "d": "11/2015"}, {"body": "nt want break reference array another way clear array", "d": "11/2015"}, {"body": "another popular alternative also retaining reference", "d": "11/2015"}, {"body": "ok hopefully gives jgenchik ways clearing array", "d": "11/2015"}, {"body": "cc kevmoo reason dart analyzer nt surfacing known issue nonissue", "d": "11/2015"}, {"body": "yup worth reopening think", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "driak browser work create cookie header received angular ca nt create cookie file client device", "d": "11/2015"}, {"body": "driak thanks reporting eoz says browser handles setting valid bug currently ignoring would use saved cookie already got open issue going close duplicate track one", "d": "11/2015"}, {"body": "ok thanks clarifying try couple configurations managing security tokens using cookies worked well somehow missed also explains behavior running great job way ca nt wait reach release status even current beta stage tempting start using production projects", "d": "11/2015"}, {"body": "hey repo report issue one webiste", "d": "11/2015"}, {"body": "thanks reported peter ericmartinezr notifications githubcom hey repo report issue one webiste image reply email directly view github", "d": "11/2015"}, {"body": "looks easy fix need add logic directivemetadatareaderdart visit method declarations look relevant settergetter put together pull request tomorrow", "d": "11/2015"}, {"body": "cc vsavkin", "d": "11/2015"}, {"body": "put together pull request tomorrow tedsander awsome please assign reviewer review asap", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "would possible future get rid null part nope probably also make error problem approach trying read dom properties change detection slow angularlike supposed work model dom one possible solution would another option simply use", "d": "11/2015"}, {"body": "appears dts files reside top level npm package happily visual studio code appears find fine sure documentation somewhere explaining following unfortunately know unclear sifting mpm packages typing go think files talking typings angular dependencies typings angular pointed", "d": "11/2015"}, {"body": "thelgevold purpose longer distribute bundled typings rather allow ts discover nodemodules typings located next source files see info", "d": "11/2015"}, {"body": "heads visual studio vscode users default classic resolution wont work must set find type definitions means forced set project use cjs use relative paths modules", "d": "11/2015"}, {"body": "nt use npm msbuild environment visual studio used bundled dts file using node mandatory unfortunately nt fit build chain currently check typings file js file somewhere thirdparty part source code tree huge build step thirdparty files copied output folder visual studio project made link typings file build folder link ensures us things typings work project postbuild step js bundle belonging typings file included web archive clue without typings file feel bit reluctant check entire nodemodules folder need typings file corresponding js file build previously bundled dts file pkozlowskiopensource", "d": "11/2015"}, {"body": "thanks think change makes sense aware think still keep current workflow since cherry pick typings files need node module add third party folder create single typings file references individual file see sample get mine node module put files wherever want", "d": "11/2015"}, {"body": "using npm getting hands distribution exactly pretty much tooling focused npm given nt ship definitions definitelytyped upload prebundled code codeangularjsorg say wo nt nt think story yet could non npm types describe little expected normal workflows", "d": "11/2015"}, {"body": "ok robwormald let explain bit first let say hard describe build workflow without giving much detail violating nda software designer canon responsible user interfaces several product lines digital production printers current product variety different user interfaces java swing based java struts based angular based future ui webbased work kinds devices screen sizes want use obviously since working large codebase lot engineers want use typescript integrate current build enviroment work visual studio msbuild msbuild environment relatively strict since allow custom build scripts ant grunt etc run want add custom build step say example add js minification extra option added tab vs project properties enable trigger tool minification postbuild step thirdparty dependencies entire platform reside separate solution ui subsystem dependency subsystem course need build step thirdparty subsystem make sure dependencies ui subsystem needs place current setup put specific version library need typings file version control ui project reference typings file link also build system knows pack eventually web archive create example link knows include web archive providing link dts file vs project makes msbuild able typescriptcompile ts files nt want engineers able define dependencies linking typings files somewhere else tree also nt want download nodemodules folder nt need build servers every engineers pc add tfignore course else probably get checked day another option automatically copy source code intermediate folder npm install seems like real hassle every single time also like said needed want dependent specific version software yes know specified source control controlled upgrade needed last least still nt help visual studio course need link dts file bit lost plan large applications build workflows example adwords currently stay solution oh answer question npm installed locally put contents bundles folder source control course", "d": "11/2015"}, {"body": "thanks detailed explanation preferred option angular distribution going forward going npm reasons primarily used vast majority js ecosystem already said could certainly gross though real actual question though typings complex thing typescript introduced new way handling typings working rather ambient style modules look like typescript dts files mirror source files effectively version files snip http module typescript import requestoptionsargs connectionbackend interfaces import request staticrequest import requestoptions baserequestoptions export declare class http protected backend connectionbackend protected defaultoptions requestoptions constructor backend connectionbackend defaultoptions requestoptions request url string request options requestoptionsargs first incredibly great thing enables developers mess references developer starting simply everything pretty much works works typescript new module resolution algorithm works nodejs npm distribution looks like algorithm currently assumes vendor code folder start shifting things around resolution probably fail ts aware js users prefer jspm issue issue tracking progress would allow reconfigure mapping pleased biggest change instead monolithic single file one file per source file mirrors direction modern javascript ecosystem moving away shipping monolithic bundled blobs code towards distributing proper modular code something much normal modern webdev today likely way future changes build strategy mentioned compile everything foo much intelligent way building file like typescript maints import bootstrap npm import someotherdep myawesomedep npm import mycomponent componentsmycomponent local bootstrap mycomponent rather saying concat minify stuff vendor concat stuff simply say build application starting importexport syntax understood tooling tools trace dependency tree pull referenced code produce final bundle far efficient eg use http module dont need code two leaders bit tooling currently webpack jspm typescript bundling roadmap accomplish goal continue distribute bundled js code certainly preferred method consuming nt great solution us rebundling files generated typescript previous alpha pretty hacky manual process caused us lot trouble keep stable date third party tools beginning show bundles exist today primarily users making plunkers demos easier get online recommended solution eventual production usage would strongly suggest moving towards modern way working javascript modules realize easy say less flip switch trying forwardlooking concentrate efforts hope explains confuses definitely want enable variety use cases happy continue discussing questions ps use npm love", "d": "11/2015"}, {"body": "pps sort constrained environment submit request use third party dependency npm option maintaining internal registry number free open source hosted nonfree solutions see example great option large orgs especially begin towards using modern javascript general thought", "d": "11/2015"}, {"body": "rob following various machinations trying various alternative tools around everything wrote way excellent summary widely distributed following would also helpful possible cases helpful distribute modest pile files things work even typescript already even something like plunkr using jspm couple files overhead angular bundle two typescript compiler one file etc legacy typings also conveniently supplied single dts file libraries used available angular recent division numerous small dts files described would helpful angular distribution could somehow also include make available otherwise singlefile dts get good typescript development experience cases would like get running files pointless production useful introducing people angular", "d": "11/2015"}, {"body": "kylecordes thanks js modules bundling less consumed last year life practiced speech times work take point inside nothing worked process using previously using documentation generator build bundle dropping big relief ditto goes distributing js bundles consumes enormous amount brain cycles something notpreferred way things current process shortest path proper type completion got without explaining steps documentation short term reorganizing bundling strategy slightly see might possible build file align finalized wo nt make promises shortly moving percommit distribution path solution ca nt fully reliably automated troublesome whats nice current typescript npm method got bright ideas listening medium term command line going easy onboarding strategy like handle shenanigans wrt bundling deployment", "d": "11/2015"}, {"body": "also wrt jspm specifically huge fan btw allow work nicely without need manual references follow roughly configuration", "d": "11/2015"}, {"body": "robwormald agree kylecordes publish summary blog post somewhere leave nice summary buried p personally still putting hopes jspm though wondering webpack nt best solution bundling nt time play yet lack jspmresolution mode ts typings makes annoying duplicate dependencies npm get ts compiler happy anyhow seen light way ever get back manually adding third party code projects add script tags manually using references felt sooooo hacky amp unstable difficult part js community convince everyone bundle typings forget definitelytyped find good measure example discussed firebase guys nt seem enthusiastic real shame although easy add project published npm", "d": "11/2015"}, {"body": "dsebastien heavy heart currently use webpack demos kidding really webpack pretty awesome reevaluate resolution configurable ts got sample project workshop little back simple setup livereload especially like fact webpack dumps typescript errors terminal lots pretty colors screw feel free check", "d": "11/2015"}, {"body": "yeah work still exploring options far pretty happy gulpbased monstrosity mon nov rob wormald notifications githubcom wrote dsebastien heavy heart currently use webpack demos kidding really webpack pretty awesome reevaluate resolution configurable ts got sample project workshop little back simple setup livereload especially like fact webpack dumps typescript errors terminal lots pretty colors screw feel free check reply email directly view github", "d": "11/2015"}, {"body": "robwormald would recommend currently nt really want constantly switch back forth go comfortable jspm systemjs really like like others alpha running issues related typing files loading duplicate dependency jspm npm think going webpack would better choice going forwards", "d": "11/2015"}, {"body": "moment using webpack till typescript configurable said probably three new tools next month javascript hard make concrete recommendation", "d": "11/2015"}, {"body": "robwormald might try webpack go route thinking first everything within systemjs manually concerned amount configuration might", "d": "11/2015"}, {"body": "robwormald weeks ago saw read added tsconfig file got rid nasty relative paths imports ca nt compile anymore invoking tsc arguments tsconfig containing folder tsconfig changed seems compiler classic resolution mode nt understand new dts format understand path mapping solve issue allowing local paths starting question nt currently way use import paths relative tsconfig containing folder compiled classic module resolution mode tsconfig file used splintercode heads visual studio vscode users default classic resolution wont work moduleresolution node must set find type definitions means forced set project use cjs use relative paths modules mean vscode problem", "d": "11/2015"}, {"body": "hristokostov use nt even need tripleslash references anymore npm packages embed typings", "d": "11/2015"}, {"body": "dsebastien thank quick reply know nt need tripleslash references use problem nt like paths like find harder follow switched classic mode could use example mode compiler look find module folder could nt changed right tried use new typings classic mode trippleslash references seems nt work decided first ask converting back import paths ones starting", "d": "11/2015"}, {"body": "oh okay good thinking also nt like navigate folder structure able import modules indeed ability define path substitutions within tsconfigjson help us clean code good news ts team busy implementing", "d": "11/2015"}, {"body": "ca nt current compiler works dom time compiler kicks html example transformed browser done anything side new textbased compiler able handle though either accepting selfclosing tags warning people closing duplicate", "d": "11/2015"}, {"body": "tbosch mismatch change detectors configured ts vs dart ts always third parameter dart always set", "d": "11/2015"}, {"body": "whoops silly nonnamed parameters looks like set languages certain working returns true still failing please provide repro instructions investigate", "d": "11/2015"}, {"body": "yeh side effect reorganization bundlecreation logic sent pr fix", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "hey selten must include project see", "d": "11/2015"}, {"body": "ericmartinezr right future going better monitor usage apis see", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "feature usage monitored implications users etc agreed support custom dts would allow us track easily", "d": "11/2015"}, {"body": "hand would nt penalize newer browsers would include unrequired polyfillsfacades", "d": "11/2015"}, {"body": "vicb comment need functionality might well provide shim", "d": "11/2015"}, {"body": "user targets runtime apis available bring typings angular usage apis forces users target environments shim behavior think rado knows better nt bundle angular thu nov pm evan winslow notifications githubcom wrote vicb comment need functionality might well provide shim reply email directly view github", "d": "11/2015"}, {"body": "using features angular user always decide force", "d": "11/2015"}, {"body": "guess clear alternative provide custom implementations nt bloat source size much shimming", "d": "11/2015"}, {"body": "nt use new apis note use syntax typescript desugars things require runtime shims evan particular api think using sun nov pm evan winslow notifications githubcom wrote guess clear alternative provide custom implementations nt bloat source size much shimming reply email directly view github", "d": "11/2015"}, {"body": "ok whatever long nt bloat source size folks nt need old browser support", "d": "11/2015"}, {"body": "design since view implementation one component opaque nt want leak inner implementation outside world would also performance penalty asking could chose different mechanism achieving goal initial thought nt want support", "d": "11/2015"}, {"body": "right slightly enlarged scope inner component include outer collecting element way use expected means nt split components thought would make sense nt want know implementation detail inner component known reflecting mere existence anywhere tree nt mean implementation detail exposed example would nt want know component exactly used directive twoweek journey yet could nt di used intercept creation child components replace proxy registersderegisters existence constructiondestruction root", "d": "11/2015"}, {"body": "still issue", "d": "11/2015"}, {"body": "yes work right selector contains element name however work selector contains attributes class names see eg", "d": "11/2015"}, {"body": "updater plunker longer crash firefox", "d": "11/2015"}, {"body": "hey guys found problem changed get need httpdevjs line aprox added basic snipet var arrayoflines xhrgetallresponseheaders match rn g var headers new var lt arrayoflineslength var line arrayoflines var name linesubstr lineindexof trim var val linesubstr lineindexof trim sorry typescript lazy recompile also course add headers dependencies array required hope helps edit release came location changed still xhrconnection httpdevjs changed line xhrbackendts xhrconnection class line thanks", "d": "11/2015"}, {"body": "hi issue ca nt access response header information supposed present headers map response example localhostapiproducts method requestmethodsget res gt ca nt access headers response resheaders empty error gt gt check network traffic browser dev tools response headers present", "d": "11/2015"}, {"body": "see edit workaround issue untill fix hope helps", "d": "11/2015"}, {"body": "hi brunoquintanilha thanks suggestion diving code realize response headers present invoke xhrgetallresponseheaders actually couple present follow real response headers result xhrgetallresponseheaders contentlanguage ptpt contenttype applicationjson suggested workaround", "d": "11/2015"}, {"body": "hi try access directly custom header xhrgetresponseheader xtotalcount maybe checking exists tell able access response headers previous sugestion still value really needs header cant send response custom http class extend encapsulate intercept response separate value real response hope helps", "d": "11/2015"}, {"body": "btw aqui da ilha da madeira cangosta", "d": "11/2015"}, {"body": "old version firefox", "d": "11/2015"}, {"body": "solved using solution", "d": "11/2015"}, {"body": "would awesome", "d": "11/2015"}, {"body": "especially useful way navigate child want unique url", "d": "11/2015"}, {"body": "please forgive trying understand use case url would like knows use manage component saying want declare url manage goes child component cars manage component", "d": "11/2015"}, {"body": "dennisroam want use nested outlets group set routes want option child route urls shorter lets say account component child routes registration settings etc want url registration using would settings would would like account registration route represented", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "decoupling componentrender hierarchy url structure", "d": "11/2015"}, {"body": "cc igorminar", "d": "11/2015"}, {"body": "merged one yesterday try mitigate jssource map end without getting invasive seemed help somewhat might need bit work see also likely reorging", "d": "11/2015"}, {"body": "happy run bundling parallel yeh gives trouble build infrastructure easily reshape things sequentially provided sure root cause course", "d": "11/2015"}, {"body": "might enough refactor code bundle sequentially instead using", "d": "11/2015"}, {"body": "pending pr new system builder allows separation tracing step writing disk step definitely much faster lighter weight coming soon fri nov igor minar notifications githubcom wrote might enough refactor code bundle sequentially instead using qall reply email directly view github", "d": "11/2015"}, {"body": "sorry discussed offline week ago realized nt know motivation rkirov happen know", "d": "11/2015"}, {"body": "one extra feature detectchanges protection recursive calls think initially talked mistaken like resolving scheduled microtasks api existing issue", "d": "11/2015"}, {"body": "discussed offline nt really describe issue opened fresh clean issue", "d": "11/2015"}, {"body": "see closing duplicate", "d": "11/2015"}, {"body": "sorry nt see others", "d": "11/2015"}, {"body": "confirm work systemjs current bundles eg html indexhtml systemimport myapp js myappjs import component etc illl totally defer knowledge gained struggle seems strange going populate system registry", "d": "11/2015"}, {"body": "confirm work systemjs current bundles meant work systemjs way would pulled systemjs html indexhtml systemimport myapp might require additional systemjs configuration depending file name exported names megabundle nt think kill systemjs bundles point least would invalidate lot plunkers doc examples mind would keep current systemjs bundles till figure whole story time would kill sfx bundles publishing", "d": "11/2015"}, {"body": "ah groovy ok", "d": "11/2015"}, {"body": "testing webworkers webworkers see experimental nt like decided drop testing bundles umd usable via tag cjsbased tooling webpack etc would rx work case completely internal everything reexported angular wrappers like eventemitter bundle exports thus possible reuse lib client code", "d": "11/2015"}, {"body": "currently observable subject reexported facade user import observable nov pm rado kirov notifications githubcom wrote testing webworkers webworkers see experimental nt like decided drop testing bundles umd usable via", "d": "11/2015"}, {"body": "pkozlowskiopensource time streamline systemjs bundles match building moment could probably cut match suggestion", "d": "11/2015"}, {"body": "robwormald nt pb bundles systemregister format nt duplicate code nt want touch existing bundles working issue would probably break tons docs examples get", "d": "11/2015"}, {"body": "necessary rx bundled angular reason user stuck version rx angular way ahead rx version would win advisable two different versions loaded probably version bundled angular might closure unless angular longer uses bundling indicates still would lead extra bytes opinion", "d": "11/2015"}, {"body": "reason user stuck version rx angular way ahead rx version would win advisable two different versions loaded rolandjitsu always concern party deps chooses use could flip back question rxjs version user stuck nt work given user wants use hard pbs perfect answers browser world kind want multiple versions nt pay price bytes got impression discussion partly rxjs quite heavy right robwormald ideas right rob probably version bundled angular might systemregister closure issue cjs umd bundles discussion wo nt impact existing bundles least", "d": "11/2015"}, {"body": "documentation see type method requestmethodsget requestmethods", "d": "11/2015"}, {"body": "sorry provided code context updated snippet passing specific requestmethods individual get post etc methods", "d": "11/2015"}, {"body": "chenkie think right require actual instance ca nt accept object shaped like request options done part refactor add dart support fix since longer supports dart meantime could actually create instance pass", "d": "11/2015"}, {"body": "perfect works thanks jeffbcross", "d": "11/2015"}, {"body": "jvbianchi sounds like missing something url trying create relative path specify tag least looks like needs showing us code would super useful", "d": "11/2015"}, {"body": "take look code saw nt specify base href like said sorry thanks", "d": "11/2015"}, {"body": "supported exactly would expect happen", "d": "11/2015"}, {"body": "need navigate component send data dynamically ca nt use routeconfig right change routedata dynamically", "d": "11/2015"}, {"body": "btford help", "d": "11/2015"}, {"body": "definitivelly nt want circular change detection checks said pb solved much simpler without keeping intermediate state coupling directives generally nt think good idea maintain type children counters list dynamic example children removed ngif would hard time keeping internal counter upto date children list ui", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource see point avoiding circular change detection know works initially also use outside parent component works expected works number people count class listcomp count component selector myperson properties name template class person constructor host list listcomp listcount component selector myapp template class app people id name brad id name jules id name jeff add thispeoplepush id thispeoplelength name foo nt number people count class listcomp data count contentchild templateref rowtemplate templateref component selector myperson properties name template class person constructor host list listcomp listcount component selector myapp view template class app people id name brad id name jules id name jeff add thispeoplepush id thispeoplelength name foo difference first example uses ngfor externally second uses internally gives", "d": "11/2015"}, {"body": "cause new cd scheduling microtask using promise best practice", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "mhevery help problem access view child children given set children access specific one", "d": "11/2015"}, {"body": "see documentation lacking work", "d": "11/2015"}, {"body": "mhevery may missed something trying get back work thank much", "d": "11/2015"}, {"body": "believe currently note vs", "d": "11/2015"}, {"body": "mhevery flyingmutant thank help work viewchild someid", "d": "11/2015"}, {"body": "think kind unintuitive would expect work reasons case change thu nov tbragaf notifications githubcom wrote mhevery flyingmutant thank help work viewchild image reply email directly view github", "d": "11/2015"}, {"body": "see examples dits", "d": "11/2015"}, {"body": "yeap thanks eric still cases decorators work element names think intuitive need use finding elements id thu nov pm ericmartinezr notifications githubcom wrote see examples dits reply email directly view github", "d": "11/2015"}, {"body": "trycatchfinally idiom synchronous code thus wo nt work async code interface observable observables either error complete never", "d": "11/2015"}, {"body": "robwormald thank help heads", "d": "11/2015"}, {"body": "robwormald counter indication using following", "d": "11/2015"}, {"body": "go", "d": "11/2015"}, {"body": "thank exactly looking believe googled went angulario could nt find link thanks", "d": "11/2015"}, {"body": "jeffbcross thoughts making json focused injectable sugars away separate service low level things", "d": "11/2015"}, {"body": "time json", "d": "11/2015"}, {"body": "sure", "d": "11/2015"}, {"body": "nt think dartium supports items sure way make work", "d": "11/2015"}, {"body": "sorry forgot close bug fixed", "d": "11/2015"}, {"body": "clarify implementation looks something like", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "agree issues well assumed enough currently isnt sort default child components figured works though bit hack javascript link cars config path redirectto path default component carsdefault plunker hit redirect pulls next value super hacky works without throwing error", "d": "11/2015"}, {"body": "clever lets hope nt name maneuver", "d": "11/2015"}, {"body": "using stub component typescript component selector template class stub component routeconfig path component stub path gallery id component gallery gallery export class home", "d": "11/2015"}, {"body": "believe addressed satisfactorily version router coming soon", "d": "11/2015"}, {"body": "yes soon", "d": "11/2015"}, {"body": "change remove need use syntax nested routes example routeconfig path heroes heroes component heroescomp export class appcomp routeconfig path heroes component herolistcomp path id herodetail component herodetailcomp export class heroescomp becomes routeconfig path heroes heroes component heroescomp export class appcomp routeconfig path heroes useasdefault true component herolistcomp path id herodetail component herodetailcomp export class heroescomp", "d": "11/2015"}, {"body": "jimulle nope necessary indicate route children otherwise terminal route changed way call routerlink previous change became redirects automatically default route", "d": "11/2015"}, {"body": "question meant read expecting use param think url encode amp otherwise looks like malformed url", "d": "11/2015"}, {"body": "take string split use terms", "d": "11/2015"}, {"body": "specific reason way support legacy url scheme control", "d": "11/2015"}, {"body": "legacy worked uirouter produced thought nice enough urls happens main seo interest really pages one parameter url ie needed switched time", "d": "11/2015"}, {"body": "right semantically think using like problematic happy support way recognize routes used way think way redirects canonical url instance used instead think would bad router producing urls like", "d": "11/2015"}, {"body": "flyingmutant curiosity first time seen anybody using oneplus one wild would perhaps run wholly unrelated angular benchmark mentioned thoroughly depressing article wholly unscientific point reference like get similar suite running mobile start tracking across whole android ecosystem hopefully noticeable improvement offline template compilation compile templates ondevice also generally shipping less bytes parsed bootup", "d": "11/2015"}, {"body": "numerous issues related bootstrap speed none mentions mobile performance mention mobile performance minified code offline template compilation serviceworker server rendering would help lot initial file always problem mobile issues talking tree shaking typescript already feature dart also made mistake dom manipulation dom ready purposely providing production build", "d": "11/2015"}, {"body": "opinion really say anything startuptimes production build setup major issue case speed mobile device many http requests device make bootstrap application patrick mentioned packing everything files compressing stuff caching device appcache serviceworkers speed things really going issue nt think able tell meaningful difference different js frameworks matters time rendering", "d": "11/2015"}, {"body": "please dismiss issue speculate random improvements test already pack everything one file number requests minimal tests performed local network zero latency packet loss caching change anything also nothing soimportant first visit compressingminifying also help lot tried also difference startup times mobile huge eg angular mithril see graphs posted try reproduce results mobile device notice immediately waiting several seconds blank screen vs waiting hm ca nt see anything wrong bootstrapts looks quite idiomatic missing something robwormald got mean speed error looks like jit warmed results really poor things speed error thing looks crazy results consistent across reruns", "d": "11/2015"}, {"body": "flyingmutant okay good baseline thanks line rest commentary thread regarding android device performance flame graphs interesting webpack obviously smoother whereas systemjs phases strange another issue popped week systemjs bootup order magnitude slower devtools open wat investigating one curious appears faster devtools closed things note using bundles reallllllly super notoptimized production use exist mainly purpose making plunkers easy use explains think twophase thing seeing timeline entire huge angular bundle loads reads syncblocking application code kicks obviously ideal issue webpack build clear delineation two sets source code better rapid development iteration rebuilding source bundle every time change app file suspect production scenario going better build single build least interweave smarter way think core initial component render single bundle fair number bytes munged stuff wo nt ship production app like compiler take nice chunk sheer volume code currently parsed startup one interesting project githubcomrolluprollup sort tooling eventually give us best performance scenarios currently opting easeofonboarding bundles focus shift move closer beta tl dr nt panic", "d": "11/2015"}, {"body": "robwormald panic want bring attention important thing currently missing angular mobile story notice difference devtools openedclosed alas opened machine page open phone posted flamegraph app content bundled together systemjsbuilder everything minified gzipped network tab common thing tests far evaluate script start sooner ms probably due parsing evaluate script takes second lower webpack higher systemjs conclude angular must send much less code clients like ton less bundling rethough overhead compatible old justconcatenatethefiles way high hopes rollup well", "d": "11/2015"}, {"body": "see wide linkdynamicmodule blocks systemjs module resolution churning lots room optimization nov gregory petrosyan notifications githubcom wrote robwormald panic want bring attention important thing currently missing angular mobile story notice difference devtools openedclosed alas opened machine page open phone posted flamegraph app content bundled together systemjsbuilder everything minified gzipped network tab common thing tests far evaluate script start sooner ms probably due parsing evaluate script takes second lower webpack higher systemjs conclude angular must send much less code clients like ton less bundling rethough overhead compatible old justconcatenatethefiles way high hopes rollup well reply email directly view github", "d": "11/2015"}, {"body": "sure even webpack module loading anywhere near faster maybe needs order first paint mobile", "d": "11/2015"}, {"body": "flyingmutant robwormald think whatever trick play webpack rollup removing compiler bits crux issue pulling way much code know needs diet simply nt focus yet", "d": "11/2015"}, {"body": "public api reexported entry point files ex bundles built using entry points bundling story still work progress information could share right probably outdated matter days", "d": "11/2015"}, {"body": "ok thanks ts files transpiled tool bundling afterwards look gulp config file clear", "d": "11/2015"}, {"body": "today using bundling said bundling story work progress might change near future look gulp config file clear much movement repo bundling area need prepared dive code need detailed info point", "d": "11/2015"}, {"body": "okay going sound crazy testing trying look timeline realized happens chrome devtools opened grabbed screencast issue reproduce using previous plunkers chrome stable canary even worse trying capture timeline fixes issue visible lag system builder bundle", "d": "11/2015"}, {"body": "laurentgoudet currently way many tools workflows create bundles modules unfortunately ca nt investigate possible combinations quirks approach least go outside recommended territory meed prepared debug troubleshoot things said want make sure major workflows supported spot anything preventing favorite workflow please let us know need ready investigate end", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource yeah seen angular connect talk subject great one way tests locally async debugging enabled devtools makes issue way worse without bundle still consistently slower commonjs one vs fully loaded devtools opened js source maps disabled first guess would due circular reference correctness overhead however ca nt explain seeing devtools enabled maybe format lead deeper call stacks makes js instrumentation costly anyway closing issue since nt seem angular specific created new one systemjs tracker", "d": "11/2015"}, {"body": "works use typescript rootcomponent productdetailcomponent", "d": "11/2015"}, {"body": "building latest problems believe closed", "d": "11/2015"}, {"body": "originally option actually makes things complicated tie app base base href fix update error message", "d": "11/2015"}, {"body": "ah break tour heroes tell john", "d": "11/2015"}, {"body": "reason ca nt default base url eg people nt get thing lived nt learn early making learn right away minute want use router default instant fail first crank router another paper cuts piss people problem people learning want different url understand nt base url router work outofthebox nt think", "d": "11/2015"}, {"body": "probably could weary hiding intrinsic complexity users igorminar thoughts", "d": "11/2015"}, {"body": "get instant failure first use seems harsh wrong base url anyway nt common default would change teaching options due time also great defaults beginning people chance experience joy learn reasonable pace", "d": "11/2015"}, {"body": "make pr fix", "d": "11/2015"}, {"body": "fyi maintains spaces words correct term source wikipedia camelcase", "d": "11/2015"}, {"body": "true wanderings people understand really mean say titlecase say correct pascalcase leaving closing comment thanks feedback though keep coming", "d": "11/2015"}, {"body": "hi find fix issue code inside interact angular scope use ngzone send custom event application works constructor loaded component trigger", "d": "11/2015"}, {"body": "close", "d": "11/2015"}, {"body": "choeller plunk kind massive could please update strip absolute minimum notably need party deps reproduce problem really hard see going code right", "d": "11/2015"}, {"body": "pkozlowskiopensource oops sorry reused plnkr lying around strip show problem", "d": "11/2015"}, {"body": "make little obvious add three inputs type test first input click outside element one console open one see dom node one equal implies change event fired input middle position incorrect turns always inputs index greater input one entered text", "d": "11/2015"}, {"body": "think problem updating string position steal identity current ngfor element used iteration original attempt simulate twoway databinding plain stringlists another way achieve behaviour still pretty confusing", "d": "11/2015"}, {"body": "suspicion happening input index gets updated change detection reuses nodes shuffles node one position right update bindings would make bindings correct dom node incorrect currently observed would also imply algorithm shuffling dom elements incorrect culprit would either ngfor directive defaultiterablediffer reason suspect happening wrote test current behavior observing still passes believe bindings remain correct dom nodes problem", "d": "11/2015"}, {"body": "little digging consolelog able find defaultiterablediffer function culprit returning incorrect diffs nt bad fix", "d": "11/2015"}, {"body": "issue change detection issue reuse dom moving ngfor children around box stateful since noone binds value old value shown two empty input boxes foo input value foo input value change detection kicks tells ngfor remove index insert index correspondingly tells renderer pop first input insert new copy end however optimization reuse dom nodes removed reinserted repopulate bindings general efficient good idea however stateful nt get cleaned removal insertion tbosch turn view pooling get around issue", "d": "11/2015"}, {"body": "bind value note viewpool probably go away soon fri nov pm rado kirov notifications githubcom wrote issue change detection issue reuse dom moving ngfor children around box stateful since noone binds value old value shown two empty input boxes foo input value foo input value change detection kicks tells ngfor remove index insert index correspondingly tells renderer pop first input insert new copy end however optimization reuse dom nodes removed reinserted repopulate bindings general efficient good idea however stateful nt get cleaned removal insertion tbosch turn view pooling get around issue reply email directly view github", "d": "11/2015"}, {"body": "angular change diff promise value promise resolving", "d": "11/2015"}, {"body": "use case function modifying async data using promise chains course new promise every time function called expect angular smart enough handle use case javascript import component const data function providedataasync return new promise resolve gt resolve data function minvalue min return value gt value gt min component selector app template export class app asyncdata providedataasync synctest min return datafilter minvalue min asynctest min uncomment reproduce warning freeze browser return thisasyncdatathen values gt valuesfilter minvalue min", "d": "11/2015"}, {"body": "questioning async object even considered within change detection consider exchange async container change would nt sufficient enough consider something changed compare references primitives resolved values", "d": "11/2015"}, {"body": "gionkunz see example file referenced using observables latest master refactored nt think work promises anymore could give another try latest master", "d": "11/2015"}, {"body": "promises observables supported async pipe said totally clear use case specific example usage looks like bad idea every time function runs going return new instance promise going resubscribe async pipe resolves going trigger change detection call function return new instance promise resubscribe trigger change detection etc typically change detection produce side effects code side effects time cycle runs going get new promise bad news bears extended plunker different ways thinking could explain trying happy look", "d": "11/2015"}, {"body": "far change async container goes back basic fact promises ever resolve thus reference check safe fast way knowing new value arriving ca nt get new value without new promise", "d": "11/2015"}, {"body": "robwormald totally right returning new promise every time function called probably bad idea however somehow expecting angular would manage change detection resolved value rather async container reference thanks example case think go observable generate new values cheers gion", "d": "11/2015"}, {"body": "good stuff one neat pattern observables many ways kind thing effect two streams one current max value one current dataset run combine fn whenever either changes", "d": "11/2015"}, {"body": "cool nice example pipe land master soon current pipe support rx observables", "d": "11/2015"}, {"body": "rx pipe workaround next release async pipe functional observables tue nov gion kunz notifications githubcom wrote cool nice example rx pipe land master soon current async pipe support rx observables reply email directly view github", "d": "11/2015"}, {"body": "cool keep great work cheers", "d": "11/2015"}, {"body": "hmm thinking little realized easy templatedriven approach controls created automatically ngcontrolgroup ngcontrol directives template could work controlarrays see clean way adding control controlarray via template mean templatedriven approach making sense using ngmodel driver rendering controls array would cool hear opinions", "d": "11/2015"}, {"body": "assuming removing whitespace cancels change change detection nt see change original value sure cleanest solution maybe could concept ngmodel options baked ngmodel syntactic sugar otherwise thinking would manually use keydown events returning false order cancel undesired input maybe could implemented behavioral directive element", "d": "11/2015"}, {"body": "thelgevold react simple thing element mounted creates handler called every change see handler update element value bound see result single source truth bound value value rendered element always reflect bound value playing value full control ui like something like though nt know good fit change detection maybe good solution nt think core", "d": "11/2015"}, {"body": "well consider absolutely normal change primitive value exact value change detection trigger way angular detect change therefore property binding trigger would also negative performance impact mechanism would allow trigger could create small class work object references change detection javascript import component class stringwrapper constructor value thisvalue value tostring return thisvalue component selector app template export class app wrapper new stringwrapper oninput newcontent thiswrapper new stringwrapper newcontent replace sg replace lg", "d": "11/2015"}, {"body": "gionkunz even easier already string wrapper javascript issue problem nt think controlled components really cool idea like see", "d": "11/2015"}, {"body": "gionkunz simple naive implementation controlled input see plunk problem input caret position ts directive selector input host input null class inputdirective implements docheck input value string constructor public renderer renderer public elementref elementref docheck thisrenderersetelementproperty thiselementref value thisvalue optimized running change detection entire application every user input", "d": "11/2015"}, {"body": "would implement method extra request probably fail", "d": "11/2015"}, {"body": "check file existence compilation stage requests time example related abstract explain idea", "d": "11/2015"}, {"body": "tandu beware blackmagic situation please use snippets code every editor feature easy use nt need extra effort core framework", "d": "11/2015"}, {"body": "think better put code lines explanations bottom post nt know internals angular ca nt quickly produce pr explain idea think using default values fields black magic think lot things hide complexity way named black magic everyone happy write simpler code", "d": "11/2015"}, {"body": "sorry tandu nt want upset bro could make relax nt read code bottom post response general proposal angular guess type template using angular meant browser could also write native universal apps nt always use html templates defaulting html based templates could make things unpredictable", "d": "11/2015"}, {"body": "manekinekko since tandu asking compile time ca nt configuration file specifics system project use compile properly specified configuration file", "d": "11/2015"}, {"body": "zamamohammed could give example explaining idea", "d": "11/2015"}, {"body": "understand angular read config file something like able correctly handle defaults web development", "d": "11/2015"}, {"body": "tandu like idea stripping boilerplate annotation introduced new component router angular also showed mechanism would pass component name template url automatically calculated case offered possiblilty register templatelocation strategy overwrite default behaviour imo something like could fit make idea clear snippet found new router never used sure actually working would general idea also similar issue would need solved first guess currently component idea location filesystem issue", "d": "11/2015"}, {"body": "nt know alpha using format generate", "d": "11/2015"}, {"body": "hi brandon thanks reply mistaken routerlink proposed would work case messages child route user router parser would first check user continue messages fill parameter trying get route working without using child route messages page route child users must way construct routerlink way multiple parameters sprinkled within route without using child route smile", "d": "11/2015"}, {"body": "using standard href syntax works spa app try advantage using routerlink", "d": "11/2015"}, {"body": "behzadeshan without routerlink page reloaded using mode", "d": "11/2015"}, {"body": "eoz reloading even caches server rendered views", "d": "11/2015"}, {"body": "zorthgo sorry bad explanation earlier trying say main route path parentchild route specific case nt nest route order generate correct router link plunk demonstrating think trying accomplish", "d": "11/2015"}, {"body": "brandonroberts thanks plunker exactly looking example made many things click new component router thanks lot help", "d": "11/2015"}, {"body": "behzadeshan thanks reply understand routerlink correctly little bit better main advantage see using routerlink refactor link would need make changes one place routeconfig use regular href make change structure link would modify places used href opinion nice step towards decoupled application smiley", "d": "11/2015"}, {"body": "zorthgo good point thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "way think use document object accessing current route app spa simply return need otherwise shoud use", "d": "11/2015"}, {"body": "behzadeshan seems like another good idea trying retrieve name url user write anything safe besides getting path name also getting route info think getting route would safer keep mind suggestion thanks stick property since user ca nt modify", "d": "11/2015"}, {"body": "object object contain property called try using elvis operator", "d": "11/2015"}, {"body": "trying use ternary operator elvis operator", "d": "11/2015"}, {"body": "elvis operator works intended behavior feeling elvis necessary case", "d": "11/2015"}, {"body": "feeling elvis necessary case right nt necessary case bug prevented working correctly already fixed master released yet part next release closing already fixed master", "d": "11/2015"}, {"body": "working nested properties objects may exist yet work", "d": "11/2015"}, {"body": "thanks rob working nested object parent one seems angular expects everything exist rendering", "d": "11/2015"}, {"body": "replicate plunker please helps troubleshoot", "d": "11/2015"}, {"body": "well familiar plunker published sample preview launch debugger see page errors code", "d": "11/2015"}, {"body": "well familiar plunker published sample seems require signin makes nogo reproducing issues even familiar plunker open one ex plunker kind tool like jsfiddle codepen jsbin etc familiar one tools use well", "d": "11/2015"}, {"body": "thanks pawel plunker example forked example changed demonstrate problem steps click errors occurred click click errors occurred click errors occurred click errors occurred", "d": "11/2015"}, {"body": "behzadeshan thnx plunk makes things clear remarks start like really ancient right toons changes robwormald right using elvis operator needs newer version", "d": "11/2015"}, {"body": "fyi code propery named meber may suggest initiate ca nt problem crudbasecontroller base class crud controllers inherit even nt know property initiate hand initiate properties update mode value passed means angular render view twice initiating values real values think flag like method like enable explicitly tell angular render view cases", "d": "11/2015"}, {"body": "using newest version production code problem", "d": "11/2015"}, {"body": "fyi code propery named meber may suggest initiate suggesting suggestion explicit might null elvis operator", "d": "11/2015"}, {"body": "hmm actually wo nt work would throw parser error operator used assignment column member name event app gt div nthchild gt input nthchild ngmodel member name", "d": "11/2015"}, {"body": "behzadeshan", "d": "11/2015"}, {"body": "pkozlowskiopensource even works change lot assignments markup use single flag single method code imagine enterprise project developers forget use markup also force care logic find properties lazy loaded means ui designers know developers code", "d": "11/2015"}, {"body": "pkozlowskiopensource elvis operator working directive look code disabled entity subentity length gt use two mark looks weird solution prefer use way calling method latest lazy loaded property using flag top component markup set true bind method", "d": "11/2015"}, {"body": "behzadeshan hear say elvis operator personally still fence comes usage vs know going leave issue open chimein express opinion elvis vs forgiving evaluation expressions known", "d": "11/2015"}, {"body": "pkozlowskiopensource thanks ok forgiving evaluation either silent failures hides think third way explicitly tell angular properties nullable markup code example annotation property may used one place markup want mention nullablity elvis operator markup change one place hand mentioning property nullablity code save view changes code changes setting removing nullablity property", "d": "11/2015"}, {"body": "pkozlowskiopensource way support elvis oprator ngmodel well", "d": "11/2015"}, {"body": "first reaction simple tried think reasons expressions parser contain trycatch blocks significantly improve performance trycatch often gives negative impact nt know real reason existence assumptions correct ready sacrifice symbols performance", "d": "11/2015"}, {"body": "eoz performance also explicit hard debug issues angular expression result expected output parser forgiving angular get detailed error expression ca nt evaluated explicitly tell angular forgiving", "d": "11/2015"}, {"body": "think issue looking", "d": "11/2015"}, {"body": "router exposes navigating property use check routing starts finishes nt currently way produces type indication route change error", "d": "11/2015"}, {"body": "wrong repo apologies", "d": "11/2015"}, {"body": "changes npm comes node issue disappointed see", "d": "11/2015"}, {"body": "gkalpak thanks info renamed ran manually", "d": "11/2015"}, {"body": "nt mean imply closed btw think issue addressed", "d": "11/2015"}, {"body": "looking found one thing ca nt listen key events div default must set make selectablefocusable see answer one work problems see shortcuts using key events solution worked listening document template listening div", "d": "11/2015"}, {"body": "ericmartinezr right wo nt fire key events without ericmartinezr thnx much helping issues much appreciated", "d": "11/2015"}, {"body": "seems like reasonable idea", "d": "11/2015"}, {"body": "oops think put wrong repo", "d": "11/2015"}, {"body": "instead string input would inclined suggest config object properties like template templateurl inputoutput bindings etc", "d": "11/2015"}, {"body": "miss compile", "d": "11/2015"}, {"body": "webteckie one looks really weird unintuitive would rather syntax like first second params dclloadintolocation somecmp inputs templateurl elementref anchor array var cmp somecmp data dclloadintolocation cmp elementref anchor someway create inline component var cmp componentcreate data componentcompile dclloadintolocation cmp elementref anchor", "d": "11/2015"}, {"body": "pretty good use case pipe assuming going rendering something view custom pipe something similar automatically clean subscriptions component destroyed note eventemitter observer method disappear next release stick closer observable semantics js class mydataservice event new eventemitter class mycomponent constructor dataservice mydataservice thisevent dataserviceevent html event async", "d": "11/2015"}, {"body": "robwormald thank refactored data service found pr", "d": "11/2015"}, {"body": "repo want thanks", "d": "11/2015"}, {"body": "oh sorry way migrate copy paste edit looks like need copy issue", "d": "11/2015"}, {"body": "think typescript add super child constructor setup proper inheritance export class carmodel extends baseresource constructor super postdata carid number http undefined", "d": "11/2015"}, {"body": "yes case need inject http also makes sense anyway parent constructor calls successfully without injection nov pm torgeir helgevold notifications githubcom wrote think typescript add super child constructor export class carmodel extends baseresource constructor super postdata carid number http undefined reply email directly view github", "d": "11/2015"}, {"body": "cajoy try javascript class foo constructor public bar class extendsfoo extends foo constructor see valid ts hand transpile basically calls super constructor arguments undefined hope see need redefine reinject constructor arguments child class", "d": "11/2015"}, {"body": "yes case makes sense e tended class need redefine constructor parameters picked automatically works fine native ts works di issue di ts nov pawel kozlowski notifications githubcom wrote cajoy try class foo constructor public bar class extendsfoo extends foo constructor see valid ts hand class extendsfoo extends foo transpile var extendsfoo function super extends extendsfoo super function extendsfoo superapply arguments return extendsfoo foo basically calls super constructor arguments undefined hope see need redefine reinject constructor arguments child class reply email directly view github", "d": "11/2015"}, {"body": "yes case makes sense e tended class need redefine constructor parameters think issue expect let take example happen would still expect di kick issue di ts issue see ts nt report errors case might want open ticket since imo javascript class foo constructor public bar class extendsfoo extends foo constructor", "d": "11/2015"}, {"body": "let assume following class ts import http import config config export abstract class baseresource config config http config base ts class injected without issues use methods properties http angular di injection class use component without proper injection issue see selfsustained component use standalone looks like components coupled way inject http parent class without touching child", "d": "11/2015"}, {"body": "angular di presence constructor arguments extend class constructor arguments need something call appropriate arguments requirement programming language know without angular di seem expect ng di system would violate basic principle going class hierarchy magically invoke child constructors nt think reasonable expectations looks like components coupled nothing angular one class extends another coupled", "d": "11/2015"}, {"body": "probably nt enough skills please help injectinstantiate http class parent component easily use kind restfuljs inject constructor use without issue would like use native http component", "d": "11/2015"}, {"body": "use injector yourseld instead letting angular", "d": "11/2015"}, {"body": "please help injectinstantiate http class parent component export class carmodel extends baseresource", "d": "11/2015"}, {"body": "pkozlowskiopensource like said want avoid declaring http component parent", "d": "11/2015"}, {"body": "like said want avoid declaring http component parent option drop di child component ts import http export abstract class baseresource http new http aware voids benefits di", "d": "11/2015"}, {"body": "ts import http import config config import injector export abstract class baseresource config config http gives exception", "d": "11/2015"}, {"body": "cajoy", "d": "11/2015"}, {"body": "todoubaba thanks lot resolved issues", "d": "11/2015"}, {"body": "resolved issues nt think got fancy way benefits di gone warned", "d": "11/2015"}, {"body": "yes let assume models complicated application couple levels inheritance change constructor added new serviceprovider need update constructors declaring constructor need anything use new functionality", "d": "11/2015"}, {"body": "good explanation issue looks like solution like parentdependecies decorator would good part core", "d": "11/2015"}, {"body": "try think may something also think must specify querylist", "d": "11/2015"}, {"body": "well children get created content children think used components template contains direct child directives think nt need specify type annotations optional", "d": "11/2015"}, {"body": "gionkunz could please send plunk minimal reproduction scenario lack context ex version used", "d": "11/2015"}, {"body": "oh see crux pb add tab also app directives list example works components get initialized query list also contains tab component within tabs aftercontentinit something wrong expect example work without needing add tab component directives list app component expect content pulled tabs gets compiled nope current system need list directives used template used app template said agree pain neck got issue already gionkunz going close dupe let move discussion", "d": "11/2015"}, {"body": "cool good know guys track already thanks looking", "d": "11/2015"}, {"body": "try elvis operator x yz elvis operator null property paths", "d": "11/2015"}, {"body": "thnx otodockal", "d": "11/2015"}, {"body": "thx fast reply", "d": "11/2015"}, {"body": "could try rxjs uses version installable via npm though installed default see unless something specific need best use new library api changed eg features like pipes http use new api definitely outstanding issues wrt zones observables simple case work", "d": "11/2015"}, {"body": "thanks robwormald used version suggested works well going stick thanks lot", "d": "11/2015"}, {"body": "wrong repo guess looking one", "d": "11/2015"}, {"body": "pkozlowskiopensource indeed see easy confuse two though", "d": "11/2015"}, {"body": "meh even solve pb still duplicate facades every bundle since dependency rxjs pulling anyway afraid rx needs external dependency", "d": "11/2015"}, {"body": "mock backend nt imported anywhere far tell nt built bundle thursday november pawel kozlowski notifications githubcom wrote landed http longer imports observable reactivex rather uses one exported good since limits http dependency unfortunately still got place rx dependent upon directly mockbackendts mockbackend imports subject replaysubject reexporting subject case replaysubject current situation means need either bundle entire rxjs http approach external dependency neither ideal robwormald see quickwins reply email directly view github", "d": "11/2015"}, {"body": "yeh probably side effect rx imported async facade mock backend move http anyway soooo seems like facades blame turns means rx either needs external dependency reexport core", "d": "11/2015"}, {"body": "ok robwormald right rx pulled mock backend rather async facade since duplicate facades duplicate rx well way solving think marking rx external dependency going pr cjs bundles", "d": "11/2015"}, {"body": "problem another plunkr example demonstrate", "d": "11/2015"}, {"body": "agree might nice folks like jsx external contributor works rather core team opinion rather benefits thoughts amp work fine angular templates already demonstrated start webstorm coming ides soon angular likely performs better jsx compilation happens build step landing soon yes could nice could work well folks using flux style data flow likely soon components native angular however sure actual benefit ecosystem general like htmlspec compliant template tools work designers easier time interacting", "d": "11/2015"}, {"body": "bradlygreen malekpour would argue degree today using typescript seamlessly bridge two technologies end javascript example integrate fluxreact based component angular component details", "d": "11/2015"}, {"body": "bradlygreen agree almost points nt mean change anything current angular design removing run time template parsing big fan clarify mean please compare two components onkey first template double quoted string inside another multi line string jsx template identifier makes sense also compiler would generate something similar strongly doubt parser perform better run time parameters tagdirective name attributes children aware plan mentioned comment number even better angular support compiled templates jsx compiler output nt forget great attraction react community members contribute migrate", "d": "11/2015"}, {"body": "funny randomly copied component snippet page tried compile jsx template realized element line closed mistake repeated page least times documentation team kind mistakes common type safe template support helps lot", "d": "11/2015"}, {"body": "malekpour may want look design documentation template compiler outputs code unlike jsx said could certainly implement party render plugin fact reactnative renderer might get started thelgevold super cool demos way components page great", "d": "11/2015"}, {"body": "thanks robwormald appreciate", "d": "11/2015"}, {"body": "never liked idea xml javascript benefit see static analysis template html strings possible write static analyzers lint html strings though either mark template strings tag function like somehow use typescript type system hint string html", "d": "11/2015"}, {"body": "agreed thought already issue hard search mobile", "d": "11/2015"}, {"body": "though disagreed behavior fetch errors network errors", "d": "11/2015"}, {"body": "thinking filed issue promise would success error http codes consider success since subscribe analogous success codes realistically anything error rather expecting needs special handling sort handling network error", "d": "11/2015"}, {"body": "depends really want stick semantics fetch specification mostly agreement though perhaps configurableinjectable option proposed handler github fetch polyfill", "d": "11/2015"}, {"body": "really awful especially case error ca nt read error status please please fix", "d": "11/2015"}, {"body": "syntax proposal thoughts partial option providers come first explicit", "d": "11/2015"}, {"body": "also like option", "d": "11/2015"}, {"body": "additional thing think eventually ts supports like able sure nice way fit perspec providers", "d": "11/2015"}, {"body": "think several ways add providers none stick particularly nice", "d": "11/2015"}, {"body": "jelbourn possibly run problem maybe", "d": "11/2015"}, {"body": "assigning vsavkin provide comments yet form opinion one hand simply browsers support native shadow dom case conceptually projected dom physically move visually hand seems like totally legit usecase perhaps could implement two orthogonal features one visual reprojection one di reprojection", "d": "11/2015"}, {"body": "angular thrown native shadow dom anyway nt feel strongly keeping browser contracts innocent", "d": "11/2015"}, {"body": "thrown away disabled default thu nov matan lurey notifications githubcom wrote angular thrown native shadow dom anyway nt feel strongly keeping browser contracts image innocent reply email directly view github", "d": "11/2015"}, {"body": "working expected probably want remove parameter route move route within component alternatively break apart hierarchy three components case could create separate routes without params toplevel component open issue optional params", "d": "11/2015"}, {"body": "thank brian got confused path routerlink bit one thing nt able route without alias use router link anyone wants see updated plunker", "d": "11/2015"}, {"body": "reference seeing fix error reported changed little bit since see ie error message slightly different", "d": "11/2015"}, {"body": "would work second sure intended way makes sense default route could recognized automatically", "d": "11/2015"}, {"body": "thank necroskillz nt know nt try workaround working temporary work around agree think pass go default instead", "d": "11/2015"}, {"body": "ok worked get work right struggling hopefully help newbs like get plunker working tldr got confused url route names bound child routes require names seen people examples without field none plunkers code let fly maybe something wrong full issue even though within routelink bound url path brain understand reading examplestutorialsguides always used naming convention two bound consider child component config pets component browser could go would fine could go would also fine work technically name route bananas correct routerlink felt stupid realized confusion issue ultimately called brain saw resolving router told expect children route goes cars component looking children assumed url path would tell router main item nt look path looks alias nt pass child route load threw error needed name pass two take aways closeness pathaliasrouterlink bit confusing point would bonus use like reads path value first alias seen code written way never works least consider name changes clear actually happening change name alias change clarify referencing url string config change path url actually effecting like uirouter expert maybe understanding spent ton time messing nt get", "d": "11/2015"}, {"body": "didnt mean close id like open discussion", "d": "11/2015"}, {"body": "dennisroam thanks feedback sorry frustration bit part problem documentation around route links work still poor improving shortly try address suggestions change name alias agree already implemented change master important keep concept distinct path one segment suggestion defaulting value empty work existing thread planned improvements linking dsl may interest nt think name suggestions better think url even misleading since nested components part path rather full url nt see suggests nonurl value way works also going change see", "d": "11/2015"}, {"body": "hey brian thank reply bit frustrated wrote ton appreciate hard work thanks even looking", "d": "11/2015"}, {"body": "see angularangularjs", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "nt understand used click link like", "d": "11/2015"}, {"body": "ah sorry misunderstood add feature event delegation injecting calling functionality commonly needed talk adding core suspect subtle differences requirements apps want", "d": "11/2015"}, {"body": "heavily invested objectobserve saying angular never used oo change detection algorithm infrastructure could point source claim would roadmap removal feature standard roadmap impact decision design codebase equal zero nt use never used oo", "d": "11/2015"}, {"body": "confused observables objectobserve", "d": "11/2015"}, {"body": "nt supposed make angular super fast promise resolving end", "d": "11/2015"}, {"body": "bug missing feature something completely wrong impossible say based info provided send plunk reproduce scenario otherwise actionable", "d": "11/2015"}, {"body": "ok problem create post link", "d": "11/2015"}, {"body": "know made well link goto appts look defined object two ngfor", "d": "11/2015"}, {"body": "kalinicm second trying iterate object properties nt wo nt supported knows iterate arrays", "d": "11/2015"}, {"body": "ok made pipe works thank fast response clear information", "d": "11/2015"}, {"body": "ok glad clarified", "d": "11/2015"}, {"body": "pkozlowskiopensource please explain support objects one iterate keyvalue pairs map", "d": "11/2015"}, {"body": "would like see ngfor handle arrays objects matter second thing would ngfor keys values pass php use much missing something foreach array gt print key foreach gt print key value", "d": "11/2015"}, {"body": "wrong repo guess looking said looks like hitting limit parallel downloads given server browsers limit would surprised turns angularjs issue tried reproduce pb vanilla html js xhr would expect pb occur", "d": "11/2015"}, {"body": "apologies thanks tip", "d": "11/2015"}, {"body": "looks like also occurs actually without magical sugar option make string workaround today", "d": "11/2015"}, {"body": "matanlurey tbosch sent pr please review", "d": "11/2015"}, {"body": "lgtm marked pr merge wed nov pawel kozlowski notifications githubcom wrote matanlurey tbosch sent pr please review reply email directly view github", "d": "11/2015"}, {"body": "pkozlowskiopensource wow thanks fast change appreciate", "d": "11/2015"}, {"body": "pkozlowskiopensource issue removed exp export class myapp string c string null string bootstrap myapp generated html html", "d": "11/2015"}, {"body": "todoubaba sth entirely different comparable syntax would afaik works correctly raising binding property equivalent produces least chrome angular really browser type casting conversion feel free open separate issue disputable fixing", "d": "11/2015"}, {"body": "pkozlowskiopensource think different assigned boolean value user provide dynamic class name syntax btw exp array behaviour seems inconsistent array element evaluated nothing typescript amp generated html amp", "d": "11/2015"}, {"body": "todoubaba point continuing discussion closed issue discussing different code path related issue believe sth fix please open new issue", "d": "11/2015"}, {"body": "also duplicate guess", "d": "11/2015"}, {"body": "indeed duplicate thnx", "d": "11/2015"}, {"body": "pkozlowskiopensource closed instead bug since description better one already tagged brian", "d": "11/2015"}, {"body": "plunker issue one works fine", "d": "11/2015"}, {"body": "tried", "d": "11/2015"}, {"body": "drop component know selector transparent reusable may include whenever want sent iphone nov pm ericmartinezr notifications githubcom wrote tried export class dropdown constructor elementref elementref inserthere append elementrefnativeelement reply email directly view github", "d": "11/2015"}, {"body": "use dynamiccomponentloader", "d": "11/2015"}, {"body": "think ericmartinezr solution makes sense tweak using jquery angular typically made call oninit instead constructor import component view elementref oninit declare var jquery component selector jqueryintegration templateurl componentsjqueryintegrationjqueryintegrationhtml export class jqueryintegration implements oninit elementref elementref constructor elementref elementref thiselementref elementref oninit jquery someselector append thiselementrefnativeelement said would recommend avoiding jquery rendering components better rely objects databinding compose angular ui", "d": "11/2015"}, {"body": "munificent kevmoo could please sanity check proposal wrt pub interested knowing whether something like pub philosophy general whether might difficulties implementation plan eg authentication travis cap number published versions per day top head see one issue pub lists versions linear fashion example means start publishing every sha versions tab become useless contain lot noise igorminar could provide details rationale sure status quo prevents us testing angular builds quickly provide hotfixes examples", "d": "11/2015"}, {"body": "another option create angulardartcompiled org github repos packages push repo release tag dependent package pointing correct version friends also get nice benefit able easily see dart code deltas builds without creating pile turds pub site", "d": "11/2015"}, {"body": "yjbanov wrt rationale order verify published artifacts work correctly want able tests install angular via package managers might important npm pub npm deliver build artifacts also typings transitive dependencies good way test without proper package additional reasons setting bisecting angular looking culprit commit become trivial use channel make hot fixes available outside regular release schedule get feedbackbug reports external users regular release occurs making canary channel kevmoo brought interesting alternative publishing npmpub npmpub support pulling packages github could setup two repos js dart push build artifacts nice benefit see diffs github slight downside git dependencies usually slower install might significant", "d": "11/2015"}, {"body": "kevmoo discussed idea decided try first thanks plan create two new repos green full travis build commit ts dart code respective build repo toplevel file contain sha angularangular repo build artifacts produced support pubnpm git dependencies repo contain one package continute publishing straight npmpub", "d": "11/2015"}, {"body": "yjbanov cool idea bit aggressive create new github org many repos package good start smile", "d": "11/2015"}, {"body": "kevmoo one package might", "d": "11/2015"}, {"body": "yjbanov another thought rather creating new repos could reuse create orphan branches one js one dart way dependency going point back right repo since tags already contain name obvious build artifacts orphan branches prevent people pulling stuff casually cloning repo additional benefit someone creates custom build want share use setup precedence eg", "d": "11/2015"}, {"body": "igorminar using main repo makes worried several things operating main repository risks ruining halting development increased size repository would lead longer es git wo nt able reuse objects discoverability takes knowledge steps get code fact branch contains completely different things master contains leading crosspollution switching branches mean dependency going point back right repo would wrong repo", "d": "11/2015"}, {"body": "publishing using git technical limitations pubdartlangorg prohibiting likely slow constraint solver package thousands versions want able put packages small set users consume putting side git seems like right choice still straightforward users depend avoids cluttering user experience users pile versions nt care", "d": "11/2015"}, {"body": "landed problem tag commit fetched pubnpm using humanfriendly reference tags leak orphan branch make commits participate git clonefetchetc looked briefly could nt come way around git hacky way would use branches rather tags humanfriendly reference sure consequences tens thousands branches repo", "d": "11/2015"}, {"body": "igorminar technically tags branches pointers difference branch moves head checked surely know nt think make difference least technically semantically tags would surely better since static", "d": "11/2015"}, {"body": "pascalprecht tags would better leaky solution branches would rely branching new commit", "d": "11/2015"}, {"body": "additional info also seem hitting line code else reloadlocation needed browsers nt allow read new locationhref reload happened replacement workaround return reloadlocation locationhrefreplace", "d": "11/2015"}, {"body": "repo sure goes asking afaik router works viceversa", "d": "11/2015"}, {"body": "yah sorry wrong repo guess dizzyface", "d": "11/2015"}, {"body": "hahaha fine repo", "d": "11/2015"}, {"body": "cajoy sure follow component whereas corresponding dom element", "d": "11/2015"}, {"body": "design wan bind data store attribute use", "d": "11/2015"}, {"body": "remember manipulates properties attributes default", "d": "11/2015"}, {"body": "wrong repo one angular try", "d": "11/2015"}, {"body": "repository angular probably looking", "d": "11/2015"}, {"body": "think possible yet discussed says furthermore typescript question one", "d": "11/2015"}, {"body": "thanks idea solve problem", "d": "11/2015"}, {"body": "statement specified importing js code trying import html wo nt work might loader specific hooks future enable mean load transformation something might happen future today one use property export template string import use inside property future going offline template compilation story thought going close one nothing actionable issue also please try cross post gitter saw got already identical answers question need duplicate questions efforts answer thnx", "d": "11/2015"}, {"body": "able patch angular fix issue created new uses going try putting ng proper running suite starters code transpiled", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "maybe without dominsertafter use dom methods insertbeforeappendchild directly", "d": "11/2015"}, {"body": "tbosch estimate effort issue determine would require breaking change important get done beta", "d": "11/2015"}, {"body": "tbosch get fixed beta", "d": "11/2015"}, {"body": "going put list might slip", "d": "11/2015"}, {"body": "mlynch guys send pr", "d": "11/2015"}, {"body": "ah yea incoming week", "d": "11/2015"}, {"body": "current code looks like missing see defined basically work fine opened issue time ago although removed", "d": "11/2015"}, {"body": "ericmartinezr thank precisely", "d": "11/2015"}, {"body": "well look sauce lab results see main page repo", "d": "11/2015"}, {"body": "findings problems token used rxjs define browser nt support see class exported match spec suggestion ignore inconsistent api checking sent pr entries missing static methods parent class reason correctly inherited browsers", "d": "11/2015"}, {"body": "second problem happens support objectsetprototypeof used babel class inheritance rxjs uses babel transpile cjs use run unit tests seems known limitation", "d": "11/2015"}, {"body": "fyi changed rx fully transpile ts cjs probably solve babel specific behavior", "d": "11/2015"}, {"body": "mlaval looks like removed public api solves problem guess symbol issue yet resolved though", "d": "11/2015"}, {"body": "correct left error safari lt android lt sent avoid sure get cleaner fix", "d": "11/2015"}, {"body": "closed fixes", "d": "11/2015"}, {"body": "mean guess could use normal url like instead routerlink", "d": "11/2015"}, {"body": "matsko talking refactor would start address", "d": "11/2015"}, {"body": "tried", "d": "11/2015"}, {"body": "thank pointing actually styles work without shadow well example simple let say button try either nt work", "d": "11/2015"}, {"body": "code example somewhere view looking similar things trying understand styles rendered different encapsulation modes would useful see working example", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "seems like bug way selectors rendered anytime try multiple selectors applies custom attribute appears incorrect nt work attribute nt exist children template nt matter write selector angular adds wrong attribute css spits markup renders span given different attribute markup style selector uses attribute root element text host span color red export class mybutton component selector myapp view template styles directives mybutton export class app", "d": "11/2015"}, {"body": "intended behavior css encapsulation enabled isolate css styles component defined way set child component styles parent otherwise hard reuse component another application another place application requires look differently", "d": "11/2015"}, {"body": "using systemjs map alias particular componentdirectory directory tree lets say want add aliases configjs imports would alternatively could configjs imports would addition install component external repositorypackagemanager via jspm aliases automatically mapped correct location within jspmpackages folder", "d": "11/2015"}, {"body": "evanplaice answer final part artaommahe question necessary inject httpproviders services top level app bootstrapjs component uses service depend components inheritance thing breaks modular structure componentsservices ona module knows path componentsservices modules must watch dependencies easily solves via modules system also problem running immediately comes fact everything within bootstrap function tests even using providers subcomponents creates new instance specific injectable class also becomes really annoying want share packages lets say build module module services nested one something person grabs package include every one classes within import app base component add bootstrap function well want even use modules please correct wrong change breaks way used work saw service singleton used throughout controllers services even sometimes project specific directives still possible would forced specify services within bootstrap method make available application wide", "d": "11/2015"}, {"body": "schippie create files modules export public providers import providers main file use function basically almost exactly like js smthmoduleindexjs import smthfactory smthfactory import smthservice smthservice export const smthmodule smthfactory smthservice appjs import smthmodule smthmodule imports bootstrap appcomponent smthmodule providers", "d": "11/2015"}, {"body": "alexpods okay got answer stackoverflow core directives example guess adjust new way writing similar dealing polymer components guess good way deal make base file directory model utils components specify thank", "d": "11/2015"}, {"body": "schippie imho think better one base file module file single public interface module js smthmoduleindexjs import smthfactory smthfactory import smthservice smthservice import smthcomponent smthcomponent import smthdirective smthdirective export smthdirective export const smthmoduleproviders smthfactory smthservice export const smthmoduledirectives smthcomponent smthdirective appcomponentjs import component import smthdirective smthmodule import smthmoduledirectives smthmodule component directives smthdirective directives smthmoduledirectives template export class appcomponent appjs import smthmoduleproviders smthmodule import appcomponent appcomponentjs bootstrap appcomponent smthmoduleproviders providers", "d": "11/2015"}, {"body": "alexpods oh situation describing end subdirectories fact within single project could run large file base well point since purely project non public would way would handle modules anybody would write single file correct way prevent confusion", "d": "11/2015"}, {"body": "yet afaik works promises refactored work observables see matter time next release pinging robwormald since implemented custom rxpipe ca nt find", "d": "11/2015"}, {"body": "works master see working next release interim rx pipe use instead", "d": "11/2015"}, {"body": "reading di seemed missed important detail seperate files problem solved moving classes seperate locations", "d": "11/2015"}, {"body": "right angular user mix match components different viewencapsulations nt using component viewencapsulationnone emulated inside component viewencapsulationnative would work correctly regarding styling shadow roots blocks styles document head sun nov pm jeremy wilken notifications githubcom wrote sibling components one viewencapsulationnative viewencapsulationnone styles component stylings appended shadow root one component set native plunker image screen shot pm component set native adopt rest css rules nonnative components screenshot rendered dom last three style elements appended end shadow root actually declared two components set none emulated modes reply email directly view github", "d": "11/2015"}, {"body": "interesting counterpoint would nt also potentially cause issues native mode using third party component none uses css selector would get injected component certainly nt expect sibling style rules get injected shadow root native mode component least see case granular control occurs perhaps strictnative mode also since styles inside emulated components given unique attributes wo nt ever apply another component reason inject", "d": "11/2015"}, {"body": "see generated html code going close one ca nt reproduce keep seeing pb make sure browser cache cleared report eventual problems docs website resides", "d": "11/2015"}, {"body": "seems zonejs nt loaded tests run everything works", "d": "11/2015"}, {"body": "try waiting callback trigger first check modified plunk", "d": "11/2015"}, {"body": "rpark problem time array may change firebase side class handles internally nt show plunk concept using reflectsync changes using promise solution", "d": "11/2015"}, {"body": "hard time going way using everything created simplified version connects firebase call correctly updating expected plunker sure using service inject ref array extension calling seems like lot work guess app needs something similar also check firebase pipe used may help bit", "d": "11/2015"}, {"body": "example using data firebase info moved service using observers trigger view updating note added delay simulate long call", "d": "11/2015"}, {"body": "dennisroam need use service url firebase reference composed base data returned service also create class extends array syncs changes matter side firebaselocally check use array simply iterate values view need wait order create firebase ref made service array anyway plunks created exactly looking perhaps using pipe would work actually considered service observable use pipe latest release seem support rx observables point", "d": "11/2015"}, {"body": "dekamerron tutorial lives believe error reporting fixed via believe still items fixed please report doc live thnx", "d": "11/2015"}, {"body": "dup", "d": "11/2015"}, {"body": "closing dupe", "d": "11/2015"}, {"body": "appreciated", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "longer issue closing", "d": "11/2015"}, {"body": "please provide reproduction via plnkrco saves us lot time thanks", "d": "11/2015"}, {"body": "btford sorry forget close issue bean solved firends giiterim help solve anwser import zonejs", "d": "11/2015"}, {"body": "pkozlowskiopensource u r quickly", "d": "11/2015"}, {"body": "canonical place ie", "d": "11/2015"}, {"body": "mhevery saying add property decorator lifecycle hook would value string name method called hook symbolbased approach proposed alexpods good thought downsides would nt necessarily make good experience dart users would add complexity framework support targets would one language feature users would need understand order use angular experience would force user either staticallyassign symbol names prototype dot notation use square brackets assign instance methods inside component constructor component prototype think move forward method decorator approach originally proposed igorminar migration plan proposed vicb", "d": "11/2015"}, {"body": "jeffbcross let dismiss symbols quickly aim best possible api particular language symbols use otherwise api mediocre thought symbols past dismissed like alexpods example clearly shows much elegant api could let spend bit time thinking would take make thing", "d": "11/2015"}, {"body": "jeffbcross thanks clarification nt think point good argument nt decorators workaround needed anyway first two points pretty solid igorminar actually thinking also incline use decorators points already uses decorators pretty actively api consistent continue use add parameters decorators useful cases future example nt like restrict use decorators one method class likely repeat name decorator method name looks stupid think ericmartinezr proposal multiple decorators pretty good order think guarantee order use multiple decorators use absolutely independent tasks order nt matter otherwise use functional composition maybe better give users opportunity decide use multiple decorators single one", "d": "11/2015"}, {"body": "nt think point good argument nt decorators workaround needed anyway alexpods valid point provide api sugar make component decoration easier users could case yet clear head right design would think igorminar persuasion going quick chat internally today talk could make good experience dart tsjs edit oops missed igor recent comment", "d": "11/2015"}, {"body": "jeffbcross component oninit oninit yes something like", "d": "11/2015"}, {"body": "alexpods difference current use property decorators proposed use lifecycle hooks lifecycle hooks properties predefined type signature hook called arguments certain type one property hook lastly name property insignificant long framework identify none true current use property decorators symbols two big advantages property decorators concise need duplicate name two times create bogus property name typesafe along symbols also provide interfaces describe hook signature biggest question mark reconcile implementation uses symbols implementations used dart", "d": "11/2015"}, {"body": "vsavkin yjbanov talked came following conclusions symbols provide ergonomic api slight concern perceived api style inconsistency believe benefits symbols uniqueness typesafety extensibility party hooks outweigh concern another concern hooks expressed via symbols could nt parameterized unlike property decorators however see achieved either providing several symbols decorating properties defined via symbols considered implement dart came conclusion dart could stick using interfaces retained runtime unlike ts interfaces dart give us type safety namecollision prevention well api style conciseness path forward would keep declaring lifecycle hooks via interfaces dart use symbols tsjs reasons like proceed using symbols tsjs interfaces dart four remaining concerns need investigate committing symbols ts support type checking tooling well transpilation current status polyfilling symbols verify perf penalties using symbols eg hook perf sensitive api none prove problematic proceed using symbols tsjs", "d": "11/2015"}, {"body": "would nt mind original decoratorannotationbased proposal due advantage would simplify documentation", "d": "11/2015"}, {"body": "get researching blockers", "d": "11/2015"}, {"body": "ts support type checking tooling well transpilation turns ca nt use interfaces conjunction symbols except builtin symbols ca nt statically verified dynamic move forward without good interface support typescript", "d": "11/2015"}, {"body": "verify perf penalties using symbols eg docheck hook perf sensitive created jsperf benchmark compare performance computed method names static method names computed properties get transpiled results pretty much identical one benchmark also tests using real property slower still fast", "d": "11/2015"}, {"body": "current status polyfilling symbols nt provide polyfill symbol nt currently include polyfill bundle create symbol object use internally function project looks reasonable minified gzipped mit licensed bytes bear perhaps good first step use string object could transparently change later", "d": "11/2015"}, {"body": "igorminar interfaces dart symbols looks reasonable nt see work go path also discussdesign solution easy use ie symbols easy use", "d": "11/2015"}, {"body": "question required beta could always introduce symbol support later since support interfaces dart would vote delaying beta nt see advantages solving beta", "d": "11/2015"}, {"body": "api comparison api vs cc mhevery igorminar", "d": "11/2015"}, {"body": "mhevery breaking change impacts docs usage done beta never", "d": "11/2015"}, {"body": "jeffbcross actually declare since support interfaces could stick current model later introduces alternative way interfaces go away dart breaking change rather additional way", "d": "11/2015"}, {"body": "mhevery let igorminar work nt mind less work users could technically use current api nice separate discussion nt think still support declaring prototype outofband ie could take object function", "d": "11/2015"}, {"body": "mhevery could also reintroduce property decorator", "d": "11/2015"}, {"body": "separate discussion nt think still support declaring prototype outofband ie class could take object function provide example", "d": "11/2015"}, {"body": "mhevery", "d": "11/2015"}, {"body": "since support interfaces could stick current model nt solve problem current model user could accidentally name method way collides lifecycle hooks would get called angular unexpectedly", "d": "11/2015"}, {"body": "offer reactstyle dsl declaring components lighter syntax wed nov pm jeff cross notifications githubcom wrote since support interfaces could stick current model nt solve problem current model user could accidentally name method way collides lifecycle hooks would get called angular unexpectedly reply email directly view github", "d": "11/2015"}, {"body": "mhevery interfaces nt work jsts retained runtime currently check well method name present class prototype call error prone result major headaches introduce lifecycle hooks ionic similar solutions top angular introduce custom hooks already need custom hooks router expect control dsl say properties special already property example say dsl properties starting turned lifecycle hooks", "d": "11/2015"}, {"body": "work symbols decorators renamed name cons little bit verbose likely names lifecycle hooks repeated igorminar oninit function turned hood ca nt turn nt work thirdparty library yjbanov offer reactstyle dsl declaring components lighter syntax mean", "d": "11/2015"}, {"body": "jeffbcross yes could support would awkward whole point make streamline breaks", "d": "11/2015"}, {"body": "current status polyfilling symbols researching potential polyfills could test supported browsers question required beta hate leave comments feedback like personally would love address pressing pbs beta personal opinion", "d": "11/2015"}, {"body": "note running issues symbols coming rxjs might blocker aware mlaval might input", "d": "11/2015"}, {"body": "mhevery interfaces nt work jsts retained runtime depends mean retained dart interfaces retained nominally js structural work intended common js say something like structural typing work intended btw difference symbols symbols guessed hence prevent collision could achieve prefixing unique prefix concern three ways declaring call back dart use interfaces would use symbols would use prefix good situation top pay gzip already large codebase creates lot problems solves also explain symbols developers confuse situation top proposal breaks type safety tooling example let say would like compile jscompiler way express types way js compiler understands current stand create consistent experience across languages fragment leaves us options use interfaces downside could name collision could solve prefixing methods also extensibility clear use annotationdecorators downside bit verbose consistent across languages mostly dart typescript would strongly advised clause proper type safety dart typescript given clause good idea type safety perspective think stick yes problems collision mostly theoretical easily detected tools since method signatures likely match", "d": "11/2015"}, {"body": "worth mhevery got already nice amount new concepts things contribute size code base imo symbolbased api nt pays price", "d": "11/2015"}, {"body": "counter proposal done thinking think provide counter proposal satisfy constraints first let agree dart problem interfaces provide right level type safety nominal prevent name collision form accidentally implementing interface easy third parties router interfaces solution fix js types structural nominal would work third parties third party declare interface class onactivete must class runtime representation onactivate component implements onactivate class mycomponent implements onactivate onactivate works expected provide method notes would js ie dart would need", "d": "11/2015"}, {"body": "found issue reading first time oninit siblings like new thing tried submit issue idea simplify declaration collisions mentioned igor idea use dependency injection think", "d": "11/2015"}, {"body": "eoz nt work must ability check existence lifecycle hooks type instance mentioning performance penalties approach", "d": "11/2015"}, {"body": "mhevery latest proposal works kind duplicates info imo constant source confusion hay implemented interface lifecycle hook still nt work really huge problems mean practice decorators", "d": "11/2015"}, {"body": "mhevery nominal instanceof prevent name collision form accidentally implementing interface nt prevent users declare methods reserved lifecycle hooks future versions angular alexpods thanks nt know well better ideas", "d": "11/2015"}, {"body": "mhevery pkozlowskiopensource conterproposal even verbose using property decorators adds confusion nt new benefits missing something", "d": "11/2015"}, {"body": "seem like whole lot work complexity solve problem far easier solved documentation imo react currently far aware vast majority community fine add benefits nt see value", "d": "11/2015"}, {"body": "looking react docs longer method names seem like prevent collisions etc", "d": "11/2015"}, {"body": "robwormald convention docs sufficient need extensible mechanism used parties keep mind apps building millions lines code ca nt rely documentation prevent name collisions", "d": "11/2015"}, {"body": "eoz nominal instanceof prevent name collision form accidentally implementing interface nt prevent users declare methods reserved lifecycle hooks future versions angular since declare method mine go implement interface forced rename method point ca nt accidentally declare method framework would call", "d": "11/2015"}, {"body": "mhevery pkozlowskiopensource conterproposal even verbose using property decorators adds confusion nt new benefits missing something new benefit problem accidental name collision user declares new method framework choses take future collision since nt decoration user method framework user choses implement adding resolve name collision accidental explicit declare nt type information part option hence required personally think point overkill somehow explicitly disambiguate user framework namespace several ways decorator b annotation c prefix using symbol already mentioned symbols good idea", "d": "11/2015"}, {"body": "prop decorator sufficient prevent name collisions need pseudointerface", "d": "11/2015"}, {"body": "words prevents implenting interface method name already exists drawbacks user refactoring rename existing method user receive error messages adding implements oninit ide runtime ca nt say elegant solution ca nt propose better", "d": "11/2015"}, {"body": "adding decorator class explicit developer action opinion optin lifecycle methods also means existing code namespace collision changedfixed writing either wrapper class changing original code adding additional boilerplate annotations common scenario prevented possible", "d": "11/2015"}, {"body": "cents sounds like best compromise overly verbose explicit consistent dev experience avoids lame strings component property though probably put property well", "d": "11/2015"}, {"body": "building custom components evening possibly rx time feels like mismatch use observableeventemitter notify outside component something changed inverse discussion use regular callback methods something like typescript class mycomponent oninit init observable onchange didchange observable constructor thisinitsubscribe gt consolelog intialized thisdidchangesubscribe changes gt stuff changes enables stuff like thisdidchangefilter change gt changefield foo subscribe thisdidchangedebouncetime subscribe makes sense", "d": "11/2015"}, {"body": "robwormald pointed thread since question currently catching updates input properties working ngbootstrap currently way know watch input change via lifecycle hook however becomes problematic soon one watch updates one attribute would like syntax supports watching attribute would give consumer ability observe multiple attributes", "d": "11/2015"}, {"body": "wesleycho funny bring idea initially thinking even one point bugging robwormald questions thought inputs would observables default kind makes sense since values change outputs observables inputs heard angular going bake rx really thought meant really bake seems sort live api like wesleycho suggestion however could see someone wanting even shorterhand way declaring observable input maybe ignore name however nt great whole point making observable perform methods eg map reduce etc still class method somewhere could constructor introduce new variable store results subscription next values ts component class mycomponent rxinput observable constructor either set subscribe creating new annoying val store results reduce subscribe val val sum problem want declare input observable changes put changes view little work possible ideas wesleycho could show steps take get next values onto view assume still need run observable rx operators", "d": "11/2015"}, {"body": "idea originally something like use case thinking actually ended much better way design component using querylist", "d": "11/2015"}, {"body": "idea observables lifecycle hooks looks attractive", "d": "11/2015"}, {"body": "new api decided much debate mhevery igorminar prefix method names ie contrary proposal using shorter unique names lifecycle methods like got ta pick battles implementing prefix fix joke prefix decision real", "d": "11/2015"}, {"body": "vsavkin amp igorminar think prefix pipe consistency agreedisagree", "d": "11/2015"}, {"body": "jeffbcross prefix", "d": "11/2015"}, {"body": "eoz consistent lifecycle hooks like", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "talked vsavkin made point directives implement would consistent pipes implement angular lifecycle interface change pipe instances implement rename method", "d": "11/2015"}, {"body": "update decided wait little bit land change since lot work merge internally", "d": "11/2015"}, {"body": "coming library nt also single interface already pointed", "d": "11/2015"}, {"body": "mhevery think saying consistent last comment matter right", "d": "11/2015"}, {"body": "yes agreeing jeffbcross", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "got pr one already", "d": "11/2015"}, {"body": "ah nt realized nt landed yet thought left missed mon nov pawel kozlowski notifications githubcom wrote got pr one already reply email directly view github", "d": "11/2015"}, {"body": "given blocked sent remove gulptraceur already gone dependencies published packagejson", "d": "11/2015"}, {"body": "word fix", "d": "11/2015"}, {"body": "time fix weekend submit pr", "d": "11/2015"}, {"body": "nt know anything wrong happens hashlocationstrategy using transpilation occurs application runtime", "d": "11/2015"}, {"body": "kucharskimaciej let know need jump since experiencing problem probably help fix", "d": "11/2015"}, {"body": "info delayed upgrading alpha app affected issue urgency moment though", "d": "11/2015"}, {"body": "thanks fixing issue try soon", "d": "11/2015"}, {"body": "yfain using aux route plunk nt exist alpha also nt way generate links aux routes yet updated plunk non routerlink href works", "d": "11/2015"}, {"body": "thank brandonroberts", "d": "11/2015"}, {"body": "code sample brandonroberts navigates aux route dev tools console shows typeerror read property component undefined back button browser nt work plunk", "d": "11/2015"}, {"body": "yfain believe bug already fixed wo nt next release", "d": "11/2015"}, {"body": "hey dgreif started working trouble making failing test case wrote test case think capture behavior describing still passing pretty new working angular though anyone suggestion looking neat diff diff git index export function main iit push history change currentlocationnewlocation inject asynctestcompleter async gt var outlet makedummyoutlet routerregisterprimaryoutlet outlet gt routerconfig new route path b component dummycomponent gt routernavigatebyurl b false gt routernavigatebyurl b false gt expect locationurlchanges toequal b asyncdone navigate configured inject asynctestcompleter async gt var outlet makedummyoutlet", "d": "11/2015"}, {"body": "estsauver may able capture test better emulates using actual browser look folder", "d": "11/2015"}, {"body": "robwormald thanks suggestion look", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "thank guys", "d": "11/2015"}, {"body": "addressed", "d": "11/2015"}, {"body": "okay thanks works running including indexhtml maybe worth adding quickstart guide", "d": "11/2015"}, {"body": "browser using shame testing chrome", "d": "11/2015"}, {"body": "using newest stable chrome release", "d": "11/2015"}, {"body": "nt work either danijar assumed developers new angular supposed know nt included quickstart guide", "d": "11/2015"}, {"body": "sure seems agnostic file path like intended", "d": "11/2015"}, {"body": "yes valid bug right thanks reporting sun nov pm nonamesheep notifications githubcom wrote sure seems agnostic file path like intended reply email directly view github", "d": "11/2015"}, {"body": "bit unfortunate absolute paths work templateurls found bug problem navigate away indexhtml refresh page good way load style imports relative current url navigate refresh styleurl requested turns userappcomponentsuserusercss instead appcomponentsuserusercss", "d": "11/2015"}, {"body": "problem using version", "d": "11/2015"}, {"body": "renderergetnativeelementsync method requires location object purpose injecting elementref use location api call way create location object type renderelementref elementref may one aware usually need root elementref component use constructorinjected parameter maybe use viewquery renderergetnativeelementsync method returns object returned elementrefnativeelement use renderergetnativeelementsync method get object easily elementrefnativeelement probably much difference previous alphas renderers could define element refs meant could get object nt property seems like less likely change course could wrong understand comment move code directive nonhtml users opt please elaborate afair general recommendation writing platformspecific code move directives way users nt need ca nt use say running nonhtml renderer easily disable templates", "d": "11/2015"}, {"body": "auxiliary routes anyway", "d": "11/2015"}, {"body": "auxiliary routes independent routes loaded alongside primary route think similar named views uirouter urls route parameters also though", "d": "11/2015"}, {"body": "really like make headway need get taken care first good news refactor tests work make writing tests parity much easier mean add transpilation side tests", "d": "11/2015"}, {"body": "currently working need attention future", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "clarify write myprop template identifiers would expected component selector input property", "d": "11/2015"}, {"body": "according commit inputs defined html look like html bit confusing reason events still parsed camelcase someevent someevent events dashes ignored", "d": "11/2015"}, {"body": "vsavkin currently deprecated please move issue", "d": "11/2015"}, {"body": "seems fixed latest", "d": "11/2015"}, {"body": "works well", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "work around fixed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "workaround moment hoping close next week though however since typescript still produces output even typing errors nt actually block development creates verbose compilation step fri nov pm laicos lee notifications githubcom wrote reply email directly view github", "d": "11/2015"}, {"body": "issue nt still seem fixed version update please", "d": "11/2015"}, {"body": "reworking webworker bootstrap import paths see result removing webworker specific import paths favor importing directly etc finish typings longer problem webworkers using dts files regular angular bundle minus browser platform files adding webworker platform files", "d": "11/2015"}, {"body": "thanks look forward", "d": "11/2015"}, {"body": "input fake element include styles", "d": "11/2015"}, {"body": "todoubaba hi sorry ask component constructor need init variables init variables use dynamicloader seems component nt run constructor", "d": "11/2015"}, {"body": "get component instance", "d": "11/2015"}, {"body": "deps provided set null following two lines equivalent framework basically current default means use reflection using empty list default makes sense functions without parameters example assigning empty list following factory really strange const binding myclass tofactory inject initnumber x gt x use default get function arity requires using mirrors use mirrors would need specify dependencies default works way works could change api make null similar empty list would still explicitly pass null one would still mean use reflection think might even confusing", "d": "11/2015"}, {"body": "sorry change give sort useful error message right error message nt make clear fails missing factory function", "d": "11/2015"}, {"body": "bumping priority prevents us executing tests using mirrors makes binary big run", "d": "11/2015"}, {"body": "workaround add manual calls file", "d": "11/2015"}, {"body": "earlier comment wrong inserting multiple calls entrypoint need call call dependencies methods", "d": "11/2015"}, {"body": "fyi refactor eventemitter generic", "d": "11/2015"}, {"body": "nice thank", "d": "11/2015"}, {"body": "news", "d": "11/2015"}, {"body": "sure issue workaround issue doesnt work ie im see loading message nothing also tried initial example plunker ts based none work ie none work mean tag rendered remains dom", "d": "11/2015"}, {"body": "yaroslavya present tries load object declared see docs", "d": "11/2015"}, {"body": "folder fails value creation collectionts provided ie", "d": "11/2015"}, {"body": "mexx must add well make sure put lib first place", "d": "11/2015"}, {"body": "ericcarraway thought nt manage dependencies", "d": "11/2015"}, {"body": "thought nt manage dependencies might make easier might produce bundle deps concatenated developer responsible including required polyfills polyfills needed depends set browsers one needs support closing one nt think got anything actionable covered issues already", "d": "11/2015"}, {"body": "pkozlowskiopensource shims place originally reported error still present would vote reopen", "d": "11/2015"}, {"body": "mexx pkozlowskiopensource thanks info guys im sure fix backed example plunker lot people looking info opening plunker choosing ts project doesnt work ie seems work box someone update probably someone contact plunker team", "d": "11/2015"}, {"body": "reopen compiler refactor misko mentioning landed master pretty positive fixed", "d": "11/2015"}, {"body": "yaroslavya regarding polyfills default discuss folks charge documentation", "d": "11/2015"}, {"body": "heres corresponding issue plunker ggoodman could update plunker template needed issue resolved", "d": "11/2015"}, {"body": "might issue", "d": "11/2015"}, {"body": "btford maybe", "d": "11/2015"}, {"body": "clarification currently ability set additional attributes script template anchor situation need able retain functionality converting comment seems like right answer", "d": "11/2015"}, {"body": "would able make", "d": "11/2015"}, {"body": "tbosch take look determine shouldcan beta", "d": "11/2015"}, {"body": "yes", "d": "11/2015"}, {"body": "reopening since commit reverted though hopefully pr land soon", "d": "11/2015"}, {"body": "fixed introduced allow users implement", "d": "11/2015"}, {"body": "yegor bomb", "d": "11/2015"}, {"body": "believe one fixed master via", "d": "11/2015"}, {"body": "naomiblack issue fixed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "closing issue mistake binding list component class listrow", "d": "11/2015"}, {"body": "new cases found", "d": "11/2015"}, {"body": "gkalpak strongly disagree practice used mostly frontend devs nt necessarily skillsknowledge setup backend embrace opportunity improve toolchain lower barrierofentry newcomers spa development usecase lets say separate frontend backend development teams working parallel build mvp backend responsible routes eventually map angular routes api backend microservice api manage persistent datastore frontend responsible defining clientside routing fetching data api dynamically via angularajax assumption clientside routes constant flux frontend devs add additional features scheme every time frontend team adds new clientside route wo nt able test backend maps route serverside issues backend team interrupted every time frontend team adds new route frontend team stalled wait backend map route ideal scenario teams able work independently routing structure established frontendbackend integrated solution frontend devs use testing server configured redirect requests since testing server mentioned angulario docs forked added feature specifying flag ie temporaryno cache redirects requests root prepended hash example waiting see project dev willing accept merge ref tapioliveserver two questions work redirect prepend", "d": "11/2015"}, {"body": "evanplaice sure part disagree nt say improving tools fact said think defaulting would lower barrier entry especially newcomers matter much tools improved always easier use default course switching whatever called days grin indeed pretty easy people know way around use either strategy minimal configurationboilerplate tbh nt feel big difference choose one default", "d": "11/2015"}, {"body": "gkalpak think may misinterpreted last statement may saying thing different ways either still need backend tweaked properly reroute incoming requests concerning clientside think perfectly acceptable make default necessary concession released prior norm relying seems like kludge anything imho keep around legacy support reflect current state technology make default concerning serverside vs irrelevant serverside inbound requests anything root restructured work angular redirected root mentioned already extension ready need little clarification ensure work inbound request redirected root server detect hash url follow hashed path bootstrapping url format use single hash hashbang hashed path includes anchor link handled anchor need encoded redirect", "d": "11/2015"}, {"body": "hashlocationstragety vs pathlocationstrategy irrelevant serverside server configured way redirects entry point indexhtml requests crux issue imo nt force people mess serverside config try clientside framework glad people got extensions favourite little petserver please nt force things everyone", "d": "11/2015"}, {"body": "hashlocationstragety vs pathlocationstrategy irrelevant serverside inbound requests anything root restructured work angular redirected root case nt clear pkozlowskiopensource said usually nt require serverside config since servers ignore hash url hand require serverside config undesirable imo", "d": "11/2015"}, {"body": "another good use case closed duplicate one imo need warning start set collaborating directives obvious users see needs imported listed", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "btford eta bug", "d": "11/2015"}, {"body": "issue message occurs different reasons", "d": "11/2015"}, {"body": "fix works hoping land week issue occurs whenever one reuse component followed case component reused including cases new child created", "d": "11/2015"}, {"body": "hack basvandenheuvel said", "d": "11/2015"}, {"body": "currently working", "d": "11/2015"}, {"body": "naomiblack point docs tests currently running travis", "d": "11/2015"}, {"body": "pointers fix html files get copied dist travis know run protractor tests tell protractor tests", "d": "11/2015"}, {"body": "yes makes sense please keep mind implement deprecation work remove later time", "d": "11/2015"}, {"body": "technically directive represents insertion point instead wrapper mhevery noted semantically name like would good choice computer interfaces insertion points often represented cursor would also make good semantic name however developer experience would probably lot better sounds much familiar current terminology catch may surprise developers content rendered within directive next", "d": "11/2015"}, {"body": "zyzle vicb tbosch close issue fixed next zone version tested commit works fine", "d": "11/2015"}, {"body": "thanks reporting", "d": "11/2015"}, {"body": "landed already closing issue", "d": "11/2015"}, {"body": "made tests ondeactivate either nt work templateurl important bug prevents using router angular application plan fix bug thanks", "d": "11/2015"}, {"body": "vguede fancy sending pr least failing test maybe sort things together", "d": "11/2015"}, {"body": "pascalprecht nt pr helps plunker", "d": "11/2015"}, {"body": "vguede correct let make pr", "d": "11/2015"}, {"body": "vguede using npm build built file", "d": "11/2015"}, {"body": "brandonroberts use built file try npm build", "d": "11/2015"}, {"body": "updated plunkr npm build bug", "d": "11/2015"}, {"body": "vguede nt suggesting use npm build gon na suggest temporary fix need verify work", "d": "11/2015"}, {"body": "brandonroberts fix help lot", "d": "11/2015"}, {"body": "vguede suggestion based already templates loaded using templatecache basically wrap section checks onactivate timeout blaming digest cycle using timeout force another cycle timeout change starts line build working plunk includes change angular router file", "d": "11/2015"}, {"body": "brandonroberts works fine indeed templates already loaded templatecache many thanks fix", "d": "11/2015"}, {"body": "brandonroberts nt issue fix implement redirect canactivate hook see", "d": "11/2015"}, {"body": "vguede use di canactivate hook updated plunk example admin route", "d": "11/2015"}, {"body": "brandonroberts forked plunkr using promises canactivate know nt work", "d": "11/2015"}, {"body": "vguede always return boolean whether truefalse promise resolves truefalse nt reject lifecycle hooks change", "d": "11/2015"}, {"body": "brandonroberts works fine many thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "danicomas commented gitter probably people may interested well looks like removed spec see mailing list", "d": "11/2015"}, {"body": "thanks information ericmartinezr confused able use use something like", "d": "11/2015"}, {"body": "case promises contract violated mea culpa wrote nt realize definition promises nt follow spec promises behavior complaining apparently intended behavior promises angular issue", "d": "11/2015"}, {"body": "lmfinney nt understand aspects promises referring state specs differ promise implementations currently shipping stable chrome firefox behave though compatible spec least usecases encountered trying browser fresh page logs console expected", "d": "11/2015"}, {"body": "markbuer discussing issue someone else said chose different implementation standard spec unfortunately sure parse parse spec see sure debate implementation final", "d": "11/2015"}, {"body": "lmfinney points link nt appear relevance discussion regarding exception thrown within handler", "d": "11/2015"}, {"body": "markbuer right tried node repl think original point stands", "d": "11/2015"}, {"body": "hit try typescript import component bootstrap function test string void promiseresolve gt throw new error gt alert fulfilled gt alert rejected component selector myapp template export class app constructor test inside work test outside works fine bootstrap app catch err gt consoleerror err plunk prefer see two alerts outside rejected inside fulfilled ftr current workaround diff diff git asrcappts bsrcappts index asrcappts bsrcappts import component bootstrap function test string void promiseresolve gt throw new error gt promisereject new error gt alert fulfilled gt alert rejected", "d": "11/2015"}, {"body": "marked closed catch windows build nt understand working testunitjs testunitjsci", "d": "11/2015"}, {"body": "annoying cost hair also loses capitalization", "d": "11/2015"}, {"body": "svg attributes rendered correctly yay however svg element names still converted lowercase seeing svg elements referencing rendered firefox nt show filter edge", "d": "11/2015"}, {"body": "also seeing error bound properties eg height svgs edit use attrheight bad", "d": "11/2015"}, {"body": "reported working yay", "d": "11/2015"}, {"body": "short update http uses facades rx direct dependency rxjs go away merging router uses facades makedecorator reflector dom web worker bundles nt use proper bundle arithmetic duplicate entire core sfx bundles nt use proper bundle arithmetic duplicate entire core", "d": "11/2015"}, {"body": "status update items need work remove code duplication use proper arithmetic web worker bundles decide sfx bundles vs umd bundles", "d": "11/2015"}, {"body": "update routes without leading slash landed", "d": "11/2015"}, {"body": "angular faced error suggestions debug casing issue", "d": "11/2015"}, {"body": "working docs atm please reassign needed pete", "d": "11/2015"}, {"body": "jeffbcross want use typealias rather interface anyway typescript language specification discourages type aliases interfaces used instead interface types many similarities type aliases object type literals since interface types offer capabilities generally preferred type aliases means following capabilities lost interface named extends implements clause type alias object type literal interface multiple merged declarations type alias object type literal interface type parameters type alias object type literal", "d": "11/2015"}, {"body": "applied naive patch angulario dgeni package ensure typealiases nt crash jade proper job describing type properly involved job", "d": "11/2015"}, {"body": "petebacondarwin sure originally changed interfaces types mhevery originally made change", "d": "11/2015"}, {"body": "thought difference mistaken think go back interfaces close issue", "d": "11/2015"}, {"body": "vsavkin yjbanov igorminar chatted implement take changes works implement routing yjbanov please explain approach", "d": "11/2015"}, {"body": "would work currently element shows source route output bug", "d": "11/2015"}, {"body": "goal would like pass data also would like unaware contract parent child single responsibility principle finally would like child component unaware type parent component perhaps child component reusable therefore different types parents problem sits router instantiates dynamically element template bind parent data child typesafe fashion one way could deal problem parent publish data via di child inject instead data binding several problems usually router would instantiate one several types child components otherwise use router child requires one piece data another one requires different piece data proactively publishing possible data would wasteful prevent eager loading via indirection requires much boilerplate di happens data changes time child component would need destroyed recreated pass new values di bit verbose parent bind addition setting actual data child inject via constructor proposal directive takes callback instantiates child run change detection child call callback passing reference child component callback child component concern entirely child type appear example directives routerdirectives routeconfig path component childcmp class parentcmp constructor params routeparams thisparentparams params passparams child childcmp void childparentparams thisparentparams implementation simple usecase one imagine advanced usecases perhaps could host multiple types child components parent would need supply different values different types note alternative callback use parent react limitation event flows callback could called synchronously entire sequence route change child instantiation passing values ui update happens single change detection pass", "d": "11/2015"}, {"body": "think api bit stands using propertybinding event binding set function gets called specific time weird also param example would nt able since could component would forcing user switch type typecast overall nt seem like less work setting query component setting data existing feature covers usecase suggest sticking immediate goals exploring nicer api exploring different api idea want express something like component containing router outlets component x loaded one outlets need give data think something like captures pretty well directives routerdirectives routeconfig path component childcmp class parentcmp constructor params routeparams thisparentparams params naming notwithstanding concept childrouteinit childcmp optionalspecificoutletidentifier passparams child childcmp void childparentparams thisparentparams similar today hostlistener click handleclick obviously would also need nondecorator syntax well", "d": "11/2015"}, {"body": "cc yjbanov vsavkin igorminar thoughts whether enough b second api", "d": "11/2015"}, {"body": "jelbourn idea", "d": "11/2015"}, {"body": "something along lines pass data routed components", "d": "11/2015"}, {"body": "couple ideas one approach created state decorator passing state data via state input state params resolved datas like another new idea declarative approach perhaps nest routed components inside routeroutlet used like configuration envision needing access local convenience vars like params like js component selector child class childcmp input name component selector foo class foocmp input bar component selector parent template routeconfig path child name component childcmp path foo id component foocmp class parentcmp", "d": "11/2015"}, {"body": "think closed might worth revisiting later pattern jelbourn showed used accomplish originally described suspect want add better syntax sugar later think wait bit better idea application needs", "d": "11/2015"}, {"body": "btford clear talking specifically pattern overall nt seem like less work setting viewchild query component setting data afterviewinit", "d": "11/2015"}, {"body": "personally totally even using pascalcase elements reasoning already naming classes using pascalcase import component looks like also inject using pascalcase use inside template shocking refer like seems bit jarring clear simply using feel another benefit becomes really easy quickly pick custom element mention nice would one happens rename component one could find replace instances component name instead first updating instances also seems one would longer even need inside component decorator therefore simplifying boilerplate needed define component", "d": "11/2015"}, {"body": "used pascalcase component element names get rid selector nt lose component directives bound view attributes", "d": "11/2015"}, {"body": "ronnross keeping names consistent potentially ditching selector property keeping optional case want different name class directives would probably need remain lowercase dashed nt restriction could technically set selector preference eg html could make component default selector directive default selector", "d": "11/2015"}, {"body": "updates", "d": "11/2015"}, {"body": "think makes sense pkozlowskiopensource point", "d": "11/2015"}, {"body": "think superseded anyway better", "d": "11/2015"}, {"body": "agreed tentatively close", "d": "11/2015"}, {"body": "work done part thnx petebacondarwin imo remains figuring best way hiding irrelevant details private variables methods used internally component class template constructors real question target docs directive users stick template also people extending directives calling methods somehow directive class combination directive directive controller separate pieces doc different usage patterns need decide best approach", "d": "11/2015"}, {"body": "petebacondarwin would best way hiding private vars methods would marking ts trick need doc annotation", "d": "11/2015"}, {"body": "currently nt think docs hide members marked typescript probably hide members start probably stop traceur thing", "d": "11/2015"}, {"body": "petebacondarwin ok see understand correctly way go today would add doc annotation right", "d": "11/2015"}, {"body": "right ignore tag though hide members marked tag perhaps way go", "d": "11/2015"}, {"body": "alexeagle action needed", "d": "11/2015"}, {"body": "obsolete longer need converts class interface", "d": "11/2015"}, {"body": "obsolete alpha started distributing nonbundled dts files via npm", "d": "11/2015"}, {"body": "closing issue proposed plan create sfxumd bundle containing core common create sfxumd bundle containing core common htttp router bundles used system webpack", "d": "11/2015"}, {"body": "topic tracked", "d": "11/2015"}, {"body": "naomiblack implemented deployed yet current angulario nt issue resolved", "d": "11/2015"}, {"body": "think yet deployed also pr fix problem adding links headings", "d": "11/2015"}, {"body": "autoclosed github merged pr description contains fixes xxxx partially fixes reopened also site latest fixes pete correct merged redeployed yet", "d": "11/2015"}, {"body": "igorminar link currently dead", "d": "11/2015"}, {"body": "jeffbcross could please help easy checking value attribute cancelling event", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "bit unclear thread withcredentials going supported please", "d": "11/2015"}, {"body": "vladimirivanov right future set withcredentials moment work js libraries http requests best way make", "d": "11/2015"}, {"body": "yay mr robwormald something workings", "d": "11/2015"}, {"body": "aim please", "d": "11/2015"}, {"body": "pleased succesfully done thank", "d": "11/2015"}, {"body": "also facing issue intermittently filed issue wrong place details issue", "d": "11/2015"}, {"body": "anyone quick fix bug", "d": "11/2015"}, {"body": "also came across issue case tabs component nt work optimally routing made example found issue might well add switch content visible change happens fairly simple component uses render items displayed items also use set timeout adding tabs constructor also works example", "d": "11/2015"}, {"body": "hi robwormald improve plunk point documentation bind data dynamically loaded widgets ideally want twoway binding container dynamically loaded child thank advance", "d": "11/2015"}, {"body": "confirm indeed fixed", "d": "11/2015"}, {"body": "activity regarding issue would like inject router instance canactivate hook component root loginprotected app user authenticated redirected login page think essential protecting application way accomplish behavior", "d": "11/2015"}, {"body": "frederikschubert simple workaround store application injector use inject dependencies inside canactivate function", "d": "11/2015"}, {"body": "ok see thanks still getting used new di system", "d": "11/2015"}, {"body": "still workaround works nov frederik schubert notifications githubcom wrote ok see thanks still getting used new di system reply email directly view github", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "brandonroberts implemented workaround worked discovered problems evaluation whether user logged depends promises observables content component protected hook visible fraction second user redirected login component know prevented janneromell also tried implementing use case user gets redirected initial requested url successfully logged possible hook receives annotated component implement behavior would necessary pass full hook btford planned implement", "d": "11/2015"}, {"body": "frederikschubert reproduce component showing plunk understand component behind canactivate nt loaded promisevalue returned true", "d": "11/2015"}, {"body": "brandonroberts found problem hook returned subscription turn returned whether user authenticated via subscription undefined evaluated true content shown observable returned false however user redirected login page think happen quiet often could easily prevented checking outcome hook exactly true type safe snippet plunk canactivate gt causes intended behavior return isloggedin true causes problems return isloggedin fix problem would following diff", "d": "11/2015"}, {"body": "would nice also use hypothetical translate use observe values feel natural currently clutters template well", "d": "11/2015"}, {"body": "aside nt amusing things move onclickstyle attach things right dom jquerystyle attach things fact using selectors onclickstyle reborn etc jquerystyle reborn", "d": "11/2015"}, {"body": "love jeffbcross vsavkin proposal thanks robwormald bringing ericmartinezr site note think nt really fit outputs describe goes component pattern however describes listensubscribe something inside component part component view really output sure going find nice name naming sooo easy", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "closing vsavkin working part separate efforts", "d": "11/2015"}, {"body": "abhilashsajeev location note better use router service trigger route changes use location need interact create normalized urls outside routing guess supposed use routernavigate offtopic", "d": "11/2015"}, {"body": "running exact issue alpha navigation component outside router outlet course since want every page inject location routeparams figure nicer way around stick nav every page", "d": "11/2015"}, {"body": "merged master time ago", "d": "11/2015"}, {"body": "know issue closed currently trying use material design lite combination w angular small project mine anyone know way hook custom logic angular right new dom nodes created template elements right added dom able call dom nodes created angular hence made js effects work explained documentation mdl could custom dom renderer solution pointer implement one wire suppose take issue different angle listen dom changes note app really small performance nt issue", "d": "11/2015"}, {"body": "ok ai nt efficient thing world job bootstrap app success gt consolelog bootstrap successful var mdlupgradedom false setinterval function mdlupgradedom componenthandlerupgradedom mdlupgradedom false source", "d": "11/2015"}, {"body": "dsebastien might also try component level lifecycle hook", "d": "11/2015"}, {"body": "yep also tried custom directive feels cumbersome though probably much efficient register components need instead going though whole dom", "d": "11/2015"}, {"body": "filed make default two issues orthogonal though maybe two implementations ngzone ngzonewithshorttraces ngzonewithlongtraces", "d": "11/2015"}, {"body": "igorminar macbook pro late ghz intel core gb mhz intel hd graphics mb disk toshiba capacity gb bytes model toshiba revision serial number native command queuing yes queue depth removable media detachable drive bsd name rotational rate medium type rotational partition map type gpt guid partition table smart status verified volumes efi capacity mb bytes bsd name content efi volume uuid capacity gb bytes bsd name content applecorestorage recovery hd capacity mb bytes bsd name content appleboot volume uuid", "d": "11/2015"}, {"body": "complete since maybe earlier", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "code deleted", "d": "11/2015"}, {"body": "updated mmrath plnkr solved yet mhevery", "d": "11/2015"}, {"body": "opened new issue update valid field true form", "d": "11/2015"}, {"body": "considering breaking change documented changelog", "d": "11/2015"}, {"body": "brandonroberts code repo directory get latest version final version release tried building repo hard", "d": "11/2015"}, {"body": "get pretty recent build npm", "d": "11/2015"}, {"body": "brandonroberts nt angular router", "d": "11/2015"}, {"body": "build router angular", "d": "11/2015"}, {"body": "brandonroberts please point right package npm able find npm sorry thanks help", "d": "11/2015"}, {"body": "sorry got done", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "pkozlowskiopensource actually agree desirable feature hack indicates event meaningful component even component code run event think forcing pattern people write empty function component hack note work currently", "d": "11/2015"}, {"body": "alxhub indicates event meaningful component even component code run event would meaningful component code executed response usecase pattern would elegant solution usecases seen far involved repeated reading dom nt think want encourage note work currently saying throw personally nt mind support afraid promoting pattern involves reading dom time", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "thee differences compared latest proposal think stale closed least one issue bundling strategy beta", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "means need put variables url example position pagination opened tab search query need declare similar routes well ca nt say dry enough please reconsider priority task", "d": "11/2015"}, {"body": "conflict already optional arguments way compose url without mentioning page argument want point tab url angularjs uirouter handy syntax optional arguments aka query parameters please think router could use advantage something similar", "d": "11/2015"}, {"body": "future readers temporary hope workaround use code get set url params", "d": "11/2015"}, {"body": "sorry bumping issue found behavior alpha works fine check plnkr see prints correctly prints nothing uncomment timeout constructor work edit plnkr updated", "d": "11/2015"}, {"body": "bumping priority saw briefly debugging app wrong insertion order triggered nonidempotent expression bound making idempotent fixed issue however nt even nonidempotent expressions still render list correctly cc naomiblack coordination", "d": "11/2015"}, {"body": "two things conflated issue objects ngfor array moved corresponding mutations dom question efficiency captures issue lot better suggest continue discussion reports actual bugs ngfor implementation bertrandg repro case quite involved bertrandg simplify bit think minimal repro involves ngfor wrapping ngif ngfor syntax bug disappears btw ported skybrian demo plunker future reference", "d": "11/2015"}, {"body": "rkirov simpler demo happens ngif inside ngfor template tag syntax", "d": "11/2015"}, {"body": "closing obsolete mhevery implemented custom public api tracking solution", "d": "11/2015"}, {"body": "might nice work null currently even null separate checks cause exceptions require side note might nice well would consistent languages ie c", "d": "11/2015"}, {"body": "still problem us new array created slice giving us error looks like sublist dart always creates new list", "d": "11/2015"}, {"body": "closing since reworking docs startup sequence change errors stem including dts file gotten tsd step well nt see explicit tsd step quickstart page surprising following page step step still nt seem working", "d": "11/2015"}, {"body": "cjolif typings held need tsd", "d": "11/2015"}, {"body": "issue closed though", "d": "11/2015"}, {"body": "mhevery lot time commits since opened issue could provide current status think ngformmodel related model useful", "d": "11/2015"}, {"body": "relate janneromell would liked approach better define whether predefined role activate component redirect replicating nt even hard ca nt really hook prevent route change far know subscribe route change ca nt prevent correct wrong handle since uh canactivate even problem ca nt", "d": "11/2015"}, {"body": "looks like good one first contribution wink still planning add take", "d": "11/2015"}, {"body": "curious whether dsl truly necessary routerlink directive could permissive inputs ie string wrap array continue seems make simplest case much simpler without much extra effort routerlink index shorthand routerlink index template semantics would take care use case motivated ticket use cases think dsl would best solution", "d": "11/2015"}, {"body": "must say ewinslow big fan introducing custom dsl opinion cost need learn additional code etc nt pay benefits nicer syntax", "d": "11/2015"}, {"body": "first nt nicer syntax shorter links addressing real usability problem majority early users encountered typically inventing dsls funsies seems appropriate approach nt think dsl optional honestly syntax sugar dsl agree wrap single string array simple case one issue dsl sugar tries fix newcomers find surprising nt work quote suppose also handle fiddle quotesbraces soon add params ideally uniform system short simple case nt require remember change quotes addremove dsl accomplishes yes avoid dsl understand angular semantics users nt going boat dsl also helps avoid lexical illusions difficult distinguish editorscolor schemes make matching braces within html attribute easy", "d": "11/2015"}, {"body": "jeffbcross ok think answer question would use something like root component tree override http wrapper use case mentioned thus covered wrapper approach", "d": "11/2015"}, {"body": "mkretz yep totally fine override binding like universal stuff like logging though backendspecific logic like redirecting login page auth errors probably better create backendspecific service inject service every place want communicate backend approach helps simplify backendspecific logic instead conditional requestbased logic single global interceptor also reducing side effects thirdparty components application make requests injected still lot work document stuff", "d": "11/2015"}, {"body": "really frustrating bug simple warning console job temporarily zonejs missing application able detect data change automatically something like", "d": "11/2015"}, {"body": "local variable assignment could also useful combination firebase implemented lva works plunk nt play nicely directive understand nt pass block executes nt know view cleared directive recreates question could done without wrapping parent container viz refactor data data data data another point use together element evaluates expression view creation real example would send another network request custom works like", "d": "11/2015"}, {"body": "sure angular right place solve nt module system responsible", "d": "11/2015"}, {"body": "ewinslow probably use another module loader happens", "d": "11/2015"}, {"body": "nt understand question", "d": "11/2015"}, {"body": "wondering systemjs responsible since everyone uses guess happen loaders", "d": "11/2015"}, {"body": "done beta hard imagine codebase using", "d": "11/2015"}, {"body": "right ordering array hand example export default class bookrating books array constructor thisbooks add title comment var newbook new book titlevalue commentvalue thisbookspush newbook reorderbooks book book thisbookssort b gt brating arating event triggered value change works happy full example", "d": "11/2015"}, {"body": "seems sake consistency principle least surprise default position would support bubbling custom event make behavior consistent native dom events seeing drawbacks example name collision problem mentioned bduffany occurs opt using custom event bubbling first place using syntax solved sending reference originating element along event thirdparty components namespace events attributes anyway eg mhevery say event bubbling makes sense input events sure agree leaving aside want create custom input event", "d": "11/2015"}, {"body": "allowing custom events bubble something may consider post beta", "d": "11/2015"}, {"body": "mhelvens principle least surprise comment able bubble custom events surprised building first angular prototype working deep component hierarchies able fire events let whoever cares handle fairly big constraint alexpods example passthrough helpful smaller hierarchies imagine would get tedious restrictive something deeper complicated nt know whether default behavior least option", "d": "11/2015"}, {"body": "whenever mutate component change value one properties angular change detection able detect changes component tree want learn changedetection post victor savkin sure sideeffect happens jit", "d": "11/2015"}, {"body": "supporting mistake often case nt care order need indexes object direct access display value view mode show options select", "d": "11/2015"}, {"body": "problem occurs", "d": "11/2015"}, {"body": "handled using format code comparisons", "d": "11/2015"}, {"body": "mhevery please tell method enabling dynamic mode current version angular", "d": "11/2015"}, {"body": "vsavkin answer wardbell documentation", "d": "11/2015"}, {"body": "building app works fine laptop chrome works fine ios safari crashes ios chrome template content generated stops way seeing console output ioschrome testing help determine issue like log documentbody instead console understanding issue correctly way tried windowonerror dice", "d": "11/2015"}, {"body": "number available shows weight distribution across different components", "d": "11/2015"}, {"body": "topic agenda ever ever implemented", "d": "11/2015"}, {"body": "think issue still relevant leads wayward developer install dart needlessly", "d": "11/2015"}, {"body": "possible partial support least render time script time", "d": "11/2015"}]