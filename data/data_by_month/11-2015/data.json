[{"title": "react component got lost attached html node angular uirouter changed state", "body": "first time angular uirouter runs default uiview react component working fine state changed react component lost dom clues greatly appreciated", "num": "5572", "d": "11/2015"}, {"title": "replace scry less fancy word", "body": "think scryrendereddomcomponentswithclass methods starting scry deprecated favor obvious names like findrendereddomcomponentswithclass", "num": "5571", "d": "11/2015"}, {"title": "reactnative bundle server process multi request got errors create reactpackager step", "body": "created reactpackager error error error unable find file path null fastfsreadfile moduleread cacheget modulegetdependencies collect trycallone flush see logs socketclienthandlemessage bunserbuf emitone bunserbufemit bunserbufprocess processtickcallback slove", "num": "5566", "d": "11/2015"}, {"title": "arrow function event callback invoked target element removed", "body": "results invariant violation example app lines reproduces issue reproduce start app select user radio button list call stack time invariant violation looks like react batching click events guess time batch processed target element removed dom click handler arrow function removed event processing queue tried testing variations example setting state using bound method instead arrow function define event handler cases invariant violation occur", "num": "5563", "d": "11/2015"}, {"title": "way error props passed nt proptypes", "body": "found accidentally specifying components props nt used components would nice way runtime check reactproptypes nt allow additional props passed", "num": "5562", "d": "11/2015"}, {"title": "serverside rendering style attribute always causes invalid checksum", "body": "working serverside rendering react app using nashorn going ok got basic skeleton app running however getting warning lot warning react attempted reuse markup container checksum invalid find strange cases problem seems revolve around attribute instead figure markup generated different client server client scrollspacerbefore style da server scrollspacerbefore datareactid fragment missing serverrendered piece remove setting style prop issue always resolved gives warning fixes notice commented two style props intended behavior", "num": "5560", "d": "11/2015"}, {"title": "singleton react component", "body": "hey guys application writing component called help section basically box shows predefined texts component user messing want able tell help section component component show help using flux actions store nt bad works quite nicely however quite large setup files defined specifically cause also number issues experienced help section actions dispatching actions raises dispatch middle dispatch error however could define help section singleton could done since get instance help section expose method sets properties want change call know breaks react unidirectional data flow component changing another component maybe worth sometimes way think sort combination store actions component one object lot components get instantiated run time maybe quite useful cases could nt find reference web jsfiddle seems work nicely bit unclear imo good way quite novice javascript react might missing obvious points hopefully think thanks reading ps sorry ambiguousness english native language smile", "num": "5558", "d": "11/2015"}, {"title": "testutilsfindrenderedcomponentwithtype nt work functional stateless component", "body": "changed component one tests failing ca nt find instance component one line code gives error guessing function importing test file ie one used create component actual code place imports function gets instance means types never match according testutils must worked classes unique somehow always import thing expected behaviour using functional components something missing", "num": "5555", "d": "11/2015"}, {"title": "inputs deselected firing callback onchange", "body": "issue text based inputs react react dom event fired input input deselected looks like ui example jsbin components toplevel component describes fields form component also holds state form component extends field form child child form also one component clicked fire function state form exception components stateless functional components components controlled get value top level form component state properly updated top level event would expect things typically work controlled form state passed via props input trying figure could possibly cause weird deselection issue nt made progress ideas thanks", "num": "5554", "d": "11/2015"}, {"title": "extract addons real remove warning", "body": "upgrading react comes warning among others says addons requires reactaddons instead required package first would like point think good change put addons separate packages however also noticed addons fact really put separate packages link implementation still existing within react package brings trouble build browserify addon currently using transition group bundle include react causes error running app alternative us import gets rid error leaves us red warnings consider non option think important leave number warningserrors mentioned think step right direction extract addons also think wrong require user update import change actually made could reconsidered", "num": "5553", "d": "11/2015"}, {"title": "component tag span text without tag tag within span", "body": "", "num": "5552", "d": "11/2015"}, {"title": "component test test child component already functionbind prop", "body": "hi guys got case class pagination extends reactcomponent onpageselect event selectedevent test let shallowrenderer testutilscreaterenderer result instance expect bootstrappaginationpropsonselect toequal instanceonpageselect using thisonpageselectbind ca nt expect true react automatically bind render nt need use bind", "num": "5551", "d": "11/2015"}, {"title": "hard catch errors", "body": "related essentially wrap render call try catch works first time seems like called second time update case work seems async updating existing component tree may missing something seems like leaves way developers catch errors rendering children components jsbin demoing issue", "num": "5549", "d": "11/2015"}, {"title": "reactdefaultperfprintwasted nt work", "body": "calling results page internally facebook assume fairly recent react version", "num": "5548", "d": "11/2015"}, {"title": "disable specific warning", "body": "explain issue briefly instead extending reactcomponent class gets state getinitialstate function exists using component looks like triggers warning react warning getinitialstate defined somecomponent plain javascript class supported classes created using reactcreateclass mean define state property instead question way disable warning happening cheers", "num": "5545", "d": "11/2015"}, {"title": "change state always fire function render", "body": "example use page var applist var reactrender containera second update found values inputs ca nt change according state pass second time also want know ui operation happened two calls render possible react reserve users refresh whole component according state", "num": "5544", "d": "11/2015"}, {"title": "react updates dom diff ignore state detail change", "body": "came across problem using react change state array nt change dom based array component nt updates suggest dom diff algrithom way update details dom", "num": "5542", "d": "11/2015"}, {"title": "reactchildrentoarray changes elementkey", "body": "reactchildrentoarray changing childrens key property ex sometimes dont know exactly event without got even weirder keys parsing children ex foo gt foo foo nt found mention things yet documented somewhere get original key somehow", "num": "5541", "d": "11/2015"}, {"title": "missing css pointer events", "body": "pointerevents working", "num": "5540", "d": "11/2015"}, {"title": "uncaught error invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details", "body": "talked answer nt run two copies react got thing running two copies react building react component npm module installed larger project within module including react peer dependency marked external webpackconfigjs actually working fine time one exception components refs gone far use documentqueryselector yikes get rid error message better way opening issue though want use reactwidgets package uses refs breaking project ca nt react smart enough associate refs running copy react missing something thanks ben", "num": "5538", "d": "11/2015"}, {"title": "infinite loop number input", "body": "internal thread debugging issue ie react could go infinite loop thus hanging main thread observed ie chrome firefox minimal reproducible fiddle ie press back space number input override current number anything else select press key observe ie main thread hangs immediately issue seems caused setting nan type number input nt fully figured avoiding setting nonnumeric string value mitigate issue speculation due ie raises propertychange event whenever input value set js set nonnumerical value number input value reset empty string upon retrieval enter loop retrieving empty string parseint setting nan propertychange retrieving empty string setting nan nan", "num": "5537", "d": "11/2015"}, {"title": "checksum invalid entity", "body": "using react render server client client getting error message besides checksum present server rendered html rendered html exactly client server visual issue rendering still rendered server client react doco says html entities literal text work fine removing html entity makes checksum error message go away something wrong bug using react rendered express viewed chrome", "num": "5535", "d": "11/2015"}, {"title": "autofocus attribute triggered render", "body": "hello autofocus attribute triggered render therefor impossible change focus attribute multiple fields currently way change focus give input ref change componentdidupdate componentdidupdate thispropsisautofocus true thisrefs input thispropsline focus autofocus attribute work initial render", "num": "5534", "d": "11/2015"}, {"title": "componentdidmount ca nt throw error", "body": "type code componentdidmount defined ca nt see error throw use try catch like componentdidmount console printed", "num": "5532", "d": "11/2015"}, {"title": "onmouseup triggered right click context menu", "body": "explanation codepen click link counter increment onmousedown onmousedown onmouseup event logged try clicking right mouse button open context menu link onmousedown triggered counter incremented onmouseup skipped entirely found old webkit bug resolved helps", "num": "5531", "d": "11/2015"}, {"title": "reactproptypesnode accept stateless component function", "body": "replaced react components defined using classes getting warnings react stateless component fuction reactnode validating components using need use seems bit long say anything rendered component supposed cover right doc maybe added reason nt handle well", "num": "5527", "d": "11/2015"}, {"title": "react functional components", "body": "hello possible use reacts lifecycle methods reacts new functional components", "num": "5525", "d": "11/2015"}, {"title": "allow use class style string", "body": "nt like fact react nt allow use asinlinestring attributes fork hard modify react support reason nt like manually rename without inline styles string ca nt use webstorm feature really nice developing new styles", "num": "5522", "d": "11/2015"}, {"title": "creating new element key null creates element key null", "body": "sure intentional run resulting inner div set resulting dom string remove key result used key result latter", "num": "5519", "d": "11/2015"}, {"title": "reactchildisnull ability check component rendered null", "body": "suppose want component concatenates children together using separator prop javascript import react react import lodash class concatenate extends reactcomponent render var children reactchildrentoarray thispropschildren var separated childrenreduce previous current index gt previouspush current index childrenlength previouspush thispropsseparator index return previous concatenatedefaultprops separator key gt return export default concatenate would like choose render separator corresponding child decides render null possible reactchildisnull functionality", "num": "5517", "d": "11/2015"}, {"title": "separate website release", "body": "working issue react native found react also issue website mkonicek people often send pull requests update code docs makes sense however pr merged docs go live immediately code released weeks means docs inconsistent apis cli commands people get using react native", "num": "5516", "d": "11/2015"}, {"title": "randering large amount elements slowly", "body": "recently using react project rendering elements list always elements becomes sluggish ca nt find solution help", "num": "5515", "d": "11/2015"}, {"title": "input defaultvalue always evaluated", "body": "rerender two similar views contain input regardless type defaultvalue evaluated happens element tree structure samesimilar input even inputs two different types see simple example new old views inputs inside div", "num": "5509", "d": "11/2015"}, {"title": "thispropschildren nt always inherit context parent", "body": "assumed would always inherit context parent always case works expected change parent use context transferred children anymore also created simple jsfiddle demonstrate would assume inside parent inherit context meant way change context second example would also work", "num": "5507", "d": "11/2015"}, {"title": "validatedomnesting generates warnings components return null inside tbody", "body": "according doc render ok components return nothing needs rendered causes warning used inside tbody javascript var component reactcreateclass render function return null var table reactcreateclass render function return reactdomrender documentgetelementbyid container gives us following warning", "num": "5506", "d": "11/2015"}, {"title": "htmlaudioelement partially supported confusing", "body": "attempting render tag element rendered attribute understand correctly pr introduced lots different attributes rejected however presently react violates principle least surprise agreeing render rendering attributes included work planned media tags react willing render part attributes would nt better drop support completely", "num": "5505", "d": "11/2015"}, {"title": "reactcsstransitiongroup throws error using timeout element removed", "body": "using react render method exception thrown becomes elapsed exception occurs tries find component empty guessing exit early components gone", "num": "5499", "d": "11/2015"}, {"title": "transform jsx browser", "body": "babel removed react documentation using babelcore plan supporting jsx transformer browser deprecated thanks", "num": "5497", "d": "11/2015"}, {"title": "dom elements switched order", "body": "component among many things includes two components following order thispropsowner boolean problem react prints componentsnewlistbox element componentslistsmenu dom see dom looks div class newlist printed ul class lists reactids show order way around change thispropsowner true print element expected position dom missing something basic pretty weird issue", "num": "5494", "d": "11/2015"}, {"title": "way create pure stateless components", "body": "discovered stateless components nt pure works well long parent component rerendered often enough think publishing unpure stateless components lost good opportunity teach community write fast pure components many talks mentioned cool powerful principles immutable data must say dissapointed keep adding functionality react allows people write think sloppy code looks like stateless components still undocumented feature official place find infromation release article blog could possible change behaviour stateless components make pure later release would really like another way write pure stateless functions probably something like", "num": "5492", "d": "11/2015"}, {"title": "npm install peerdependencies fail update fails reactdom", "body": "updated react latest build order use library hard dependency get errors versioning seems though pass corresponding versioning logic uninstalled reinstalled nodemodules make sure latest versions nothing working npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer marty wants react npm err peerinvalid peer reactleaflet wants react npm err peerinvalid peer reactsparklines wants react gt npm err peerinvalid peer reactdom wants react", "num": "5491", "d": "11/2015"}, {"title": "reactdomserver available globals", "body": "recently code moved react reactdom get idea behind move server side rendering use neatly available global object use problem afaik object available global scope nt access function problematic serverside code nashorn currently still working upgrade newest react version scoured whole internet react source code found way gain access without possible function available maybe add property get global object", "num": "5490", "d": "11/2015"}, {"title": "issue simulateclick invoking function spying", "body": "lots trouble testing whether clicking rendered button element invoking onclick handler code component tested use strict library dependencies const react require react const categoryclearbutton reactcreateclass render return clearallselectedcategories thispropshandleclick moduleexports categoryclearbutton test case using jasmine use strict const react require react const reactdom require reactdom const testutils require reactaddonstestutils const categoryclearbutton require categoryclearbuttonjsx const actions require actionsdashboardactions let element describe categoryclearbutton gt beforeeach gt element testutilsrenderintodocument call clearallselectedcategories method clicked gt let renderedbutton testutilsfindrendereddomcomponentwithtag element button spyon element clearallselectedcategories testutilssimulateclick renderedbutton expect elementclearallselectedcategories tohavebeencalled error message getting console phantomjs mac os x categoryclearbutton call clearallselectedcategories method clicked failed typeerror undefined funtion phantomjs mac os x executed failed secs secs pretty sure issue simulate click event firing make test pass following leads believe spy job anybuddy give newbie guidance thanks andrew", "num": "5487", "d": "11/2015"}, {"title": "warn tag rendered component", "body": "example warn rendered good reason edit server rendering react seems cause click handlers placed inside fauxbody get called", "num": "5484", "d": "11/2015"}, {"title": "shouldcomponentupdate child components", "body": "couple wrapper components dynamically calculate size position need normally works performs great soon add children inside components longer use method return false wrapper needing update children never get updated example jsx good way around idea add new method shouldupdatechildren like question detailed", "num": "5483", "d": "11/2015"}, {"title": "recursion dispatchevent", "body": "using dispatchevent trigger react event handler causes recursion created repository code checkboxes event handlers attached clicking select trigger mentioned causes recursion javascript javascript const boxname testname var cb reactcreateclass oncheckclick function el consolelog clicked el var nav reactcreateclass handlecheckclick function consolelog select reactdomrender documentgetelementbyid container", "num": "5482", "d": "11/2015"}, {"title": "dangerouslysetinnerhtml reconciling p tags likely due nested p tags", "body": "noticed trying use dangerouslysetinnerhtml p tag tutorial app building weird behaviour content changed able get desired behaviour using div span instead using react might similar view check branch steps repro run app add post click edit icon next new post edit text hit update post see old post text still displayed along newly updated text", "num": "5479", "d": "11/2015"}, {"title": "potential inconsistency docs regarding", "body": "docs dispatcher example note absence callback elsewhere docs note specified implementation dispatcher includes cb promise return could made consistent single canonical example dispatcher dependency work", "num": "5478", "d": "11/2015"}, {"title": "reactdomserverrendertostring presence onclick handler causes errors async update", "body": "code javascript class comp extends reactcomponent componentwillmount settimeout gt thissetstate render return reactdomserverrendertostring produces errors warning react ca nt find root component node datareactid value seeing message probably means loaded two copies react page time single copy react loaded time uncaught typeerror read property firstchild undefined remove handler errors go away see demo", "num": "5473", "d": "11/2015"}, {"title": "include flow type definitions", "body": "per comments samwgoldman following issue flow builtin react type definitions lagging behind recommendation definitions included maintained react repo flow maintainers excellent job implementing new js syntaxfeatures would great also need maintain file one could course also relegate definition yet another repo", "num": "5472", "d": "11/2015"}, {"title": "ondoubleclick event invalid set onmousedown event", "body": "help", "num": "5471", "d": "11/2015"}, {"title": "component getting rendered name nt get started capital letter", "body": "hi small react code var newprop reactcreateclass render function return hello reactrender documentgetelementbyid container works expected moment changes change variable name refresh page nothing get displayed dom warnings console change name places code looks like var newprop reactcreateclass render function return hello reactrender documentgetelementbyid container expect display however nt show anything error message console tested code even master branch thanks", "num": "5469", "d": "11/2015"}, {"title": "validate proptype definitions sooner", "body": "right validate proptype definitions nt surface issue component class consumed instead validate warnings class created means call results immediate warning logged relatively contained bit code would good candidate somebody looking start contributing react", "num": "5468", "d": "11/2015"}, {"title": "keymirror exposed", "body": "keymirror utils could exposed reactutilskeymirror way want many people include package separated could optimized", "num": "5467", "d": "11/2015"}, {"title": "react rewrite dom component changes", "body": "hard search wondering intended behavior root component call nt change anything render yet chrome seems flicker dom node get break subtree changes intended something strange", "num": "5466", "d": "11/2015"}, {"title": "deprecate", "body": "already unavailable classes already warning saying might remove nt actually github issue deprecate per discussions today basically agreed going start moving away deprecate still need figure good stories around promises related use cases issue track progress toward goal background please read", "num": "5465", "d": "11/2015"}, {"title": "available default", "body": "happy move question elsewhere point right direction get error nt call initial render error goes away simply call empty object nt part core react component api would nt present default", "num": "5464", "d": "11/2015"}, {"title": "componentdidmount fired ismounted false release mouse button released", "body": "context drag drop tree components dragging siblings items example works fine avoiding bugs need access dragged item dimensions offsetwidthheight works mounted works fine items parent dragging item one container list one element gets successively removed list added root component added list even see componentdidmount fired console ismounted returns false continuing drag list strange switching still works less userfriendly releasing drag dragging inside list work well ismounted true point ondragend fired parent drag changes code nothing particular could explain sudddenly works releasing button simply sets dragged component global state everything happens", "num": "5463", "d": "11/2015"}, {"title": "please add source url reactaddons npm packages", "body": "please add repository property react addons like reactaddonsperf required import jars webjarsorg", "num": "5461", "d": "11/2015"}, {"title": "exceptionally deep react stack traces", "body": "looking cpu profile react app chrome get layers deep react without ever reaching code every layer lose little bit performance deep call stacks also make difficult debug parts code need work expected behavior debug build react nt see anything different production version call stacks deep names functions mangled possible inline function calls production react ca nt say whether genuinely performance issue certainly makes debugging performance issues unpleasant react", "num": "5460", "d": "11/2015"}, {"title": "setstate passed component state provided callback", "body": "apologize discussed however unable dig anything proposing following javascript var parent reactcreateclass onupdate state state passed function called setstate component consolelog state clicked true render return var child reactcreateclass onclick thissetstate clicked true thispropsonupdate render return concrete example came following pr reactrouter prop passed router component invoke ever updates new route state instead forwarding along state callback provided must intentionally provided like happy firm investigated see would look like add react seems like part trouble nt great way enqueued callbacks specific parameters queue callbacks managed component property may totally wrong still learning quite bit queued updates happen rate thought might good conversation around", "num": "5459", "d": "11/2015"}, {"title": "inline style interferes reactcsstransitiongroup css", "body": "", "num": "5457", "d": "11/2015"}, {"title": "reactdomrender returns null pure functions", "body": "thrown behavior figured warranted issue js function component return var result reactdomrender el result null attempting result", "num": "5455", "d": "11/2015"}, {"title": "testutilrenderintodocument issue refs", "body": "quite unsure error coming using coffeescript tests written coffeescript tried jsx error matter anyways component ref test using jasmine karma phantomjs coffee testutils require reactaddonstestutils dollarinput reactcreatefactory require userportalsrcscriptsuidollarinput describe react dollar input gt dollarinput testutilsrenderintodocument dollarinput ideas error comes trouble shooting says maybe may two instances react loaded well using bower adding proper files karma configuration nt believe includes another version react wouldnt imagine karma loading react either nt believe adding ref outside component render function either remove ref dont get error component wont work properly", "num": "5453", "d": "11/2015"}, {"title": "expose component functions", "body": "running issue react regards exposing component functions perhaps something wrong unless stale piece documentation earlier version react react component exposes piece state function eg coffeescript selectionscontroller reactcreateclass proptypes values array getinitialstate selections getselections stateselections render rendervalue value handlechangecurry value checked gt checked setstate selections union stateselections value else setstate selections without stateselections value create instance component later try fetch selections via coffeescript controller reactcreateelement selectionscontroller values one two three user event handler consolelog controllergetselections console log line results error uncaught typeerror controllergetselections function something wrong", "num": "5452", "d": "11/2015"}, {"title": "undocumented change instances components rerendered anymore", "body": "noticed undocumented change least nt find react react nt rerender component exactly instance ie save variable look react react even using reactrender components nt state neither props try rerender instance forceupdate setstate example rendering skipped look react react could nt find react update changelog maybe falls clear work components instantiates new children render method like react", "num": "5450", "d": "11/2015"}, {"title": "react invariant violation findcomponentroot state update", "body": "code works first load state updated following error console remove reference inside prop works normally sure actual issue react could understand first time works second time fails help appreciated", "num": "5448", "d": "11/2015"}, {"title": "componentdidupdate fires references triggered associated", "body": "feel like componentdidupdate references executing wrong order background working situation list input fields blank row fields bottom press enter field moves focus next one talking register keeps track fields positions shiftenter goes reverse well press enter final field kicks flux like action results next blank field rendered want move focus row set callback fire next componentdidupdate knowing happens access new field registers componentwillmount works fine access component fine however want use method direct focus dom element within early make use references references yet bound even though componentdidmountupdate stage lifecycle seems indicate reference binding happens synchronously could easily get around using reactdomfinddomnode using queryselector find target nt clean way go solving issue believe based know api references boundexecuted componentdidupdatemount fires occur design mistake incompatibility goals", "num": "5447", "d": "11/2015"}, {"title": "adapting docs reactrb", "body": "apologize best place ask getting ready document ruby reactjs adapter reactrb would like take current reactjs docs starting point change examples etc use ruby dsl syntax believe within docs creativecommons license correct", "num": "5446", "d": "11/2015"}, {"title": "use controlled components tutorial", "body": "based discussions outside github going move away use refs tutorial use controlled components instead reacty way done tutorial avoids escape hatch refs", "num": "5443", "d": "11/2015"}, {"title": "warn duplicate copy react", "body": "looks like lost duplicatereact warning due merging contained", "num": "5441", "d": "11/2015"}, {"title": "input element focus edit", "body": "hi guys get problem write react component render virtual selector body bootstrap modal edit input focus online example", "num": "5440", "d": "11/2015"}, {"title": "reactdom apple tv", "body": "playing lately getting react work building clientserver apps new apple tv opening thread start conversation around issue case people also looking unfamiliar subject sdk new apple tv lets build javascript applications get loaded server evaluated js context device building interfaces came dom implementation flavour xml called tvml bridges native ui components apis much like react native way also small javascript api called tvjs creating documents making http calls etc way building apps alternative traditional ios development also apple tv swiftobjc uikit frameworks interesting thing default apple tv apps like music tv shows etc built js clientserver apps browserify handlebars templates first try react kind works platform might need shim available start getting details realise limitations atv dom model example noticed idl attributes working might problem elements conflicting html elements name issue property names conclusion think custom react renderer apple tv would solution strange thing would still dom renderer like configured atv elements attributes patched dom implementation quirks guys think feasible", "num": "5439", "d": "11/2015"}, {"title": "onchange text input placeholder fires without modifications internet explorer", "body": "using ie one component attribute handler onchange handler called clicking input without typing anything clicking made reproducible case codepen one opens ie look console clicks input placeholder see event handler seems known issue microsoft unwilling fix however one react goals normalize onchange event documentation implies needs workaround one possible solution would check input triggered event focused moment", "num": "5438", "d": "11/2015"}, {"title": "issues autocorrect attribute set property", "body": "hey far see attribute set html property give issues input elements check chrome documentcreateelement input false safari documentcreateelement input false mobile safari ios simulator documentcreateelement input true identical issues browsers well tested ios", "num": "5436", "d": "11/2015"}, {"title": "react testutils phantomjs error invariant violation valid reactcomponent must returned", "body": "use chrome driver everything works use phantomjs get error error invariant violation userverificationrender valid reactcomponent must returned may returned undefined array invalid object lt lt reactcompositecomponentrendervalidatedcomponent lt lt reactcompositecomponentmountcomponent lt lt lt reactcompositecomponentmountcomponent lt lt mountcomponentintonode lt lt batchedmountcomponentintonode lt lt lt batchedupdates lt lt reactmountrendernewrootcomponent lt lt lt reactrender lt lt lt test js let showerror clearerror oncomplete uv renderer beforeeach function showerror jasminecreatespy showerror clearerror jasminecreatespy clearerror oncomplete jasminecreatespy oncomplete initiateverification type function testutilssimulatechange testutilsfindrendereddomcomponentwithtag uv select target value license expect apiinitiateverification tohavebeencalledwith license", "num": "5435", "d": "11/2015"}, {"title": "allow attribute scriptstyle tags", "body": "nonce attribute helpful increasing coverage pages content security policy allowing script tags evaluated inline without enabling entire page right believe way create script tag nonce attribute use parent element", "num": "5432", "d": "11/2015"}, {"title": "force react update dom class renders", "body": "problem using reactrouter going rerendering trees use external lib api produces video mark totally hands modify dom problem comes routing changes rerenders tree wipes custom dom put third party api tried things like returning false always using blank string hoping react would internally diff nothing seems work anything stop", "num": "5429", "d": "11/2015"}, {"title": "test child props without triggering access props dom node", "body": "component whose job add certain properties child javascript const parent reactcreateclass dostuff render const child reactcloneelement thispropschildren dostuff thisdostuff return child could test like way testing ps test behavior elsewhere also need ensure given child gets reference method", "num": "5428", "d": "11/2015"}, {"title": "update tutorial use callback refs", "body": "page refs components documentation stated react also supports using string instead callback ref prop component although approach mostly legacy point yet tutorial uses stringbased refs comment box inputs since tutorial aimed newcomers may good idea explain stringbased refs considered legacy andor b use another approach", "num": "5427", "d": "11/2015"}, {"title": "license file included react reactdom npm packages", "body": "please add files full license text npm distribution packages unfortunately legal standpoint simply specifying name license enough unclear get exact legally binding text license major roadblock way using module seriously thanks lot great code thanks advance fixing blocker", "num": "5426", "d": "11/2015"}, {"title": "calling class instance argument thisstate became plain object", "body": "react component getinitialstate method returns class instance everything works fine thisstate render mthod right type call class instance argument thisstate becomes plain object javascript class state constructor text thistext text get value return thistext var main reactcreateclass getinitialstate return new state handleclick var state new state react thissetstate state bad case emerged render consolelog return thisstatevalue reactdomrender documentgetelementbyid reactwrap react gulpbabel", "num": "5425", "d": "11/2015"}, {"title": "change element css loop result", "body": "recently developed using react found ca nt change element css value certain fields class name loop result example js const data thisprops map data result index gt resultname x want remove element via change class name like change produce animation effects way help solve expecting answer", "num": "5423", "d": "11/2015"}, {"title": "links docs changelog working", "body": "especially bad links concerning migrate example changelog page breaking changes link helper points exist link section suffers fate possibly others", "num": "5421", "d": "11/2015"}, {"title": "jsx add", "body": "currently jsx supports following syntax works analogously proposing extend syntax write shorthand think analogous syntax jsx would handy shorthand also furthermore allowing following would even better shorthand", "num": "5419", "d": "11/2015"}, {"title": "onupdateonchangeoninput working input type range ie windows", "body": "onchange working chrome though following working chrome ie react version react", "num": "5415", "d": "11/2015"}, {"title": "add jsx support reversed attribute", "body": "wanted used attribute tags seems like jsx compiler nt support could supported use would make easier creating list numbers thanks", "num": "5414", "d": "11/2015"}, {"title": "reactdom separate file cdn", "body": "loading react cdn need include two separate files html given primary use react via cdn browsers nt bundle together would ever load via cdn without loading", "num": "5413", "d": "11/2015"}, {"title": "trigger eventlistener registered outside react component", "body": "trigger eventlistener registered outside react component", "num": "5410", "d": "11/2015"}, {"title": "nt exist", "body": "page mentions run installing new version reactnative says option upgrade unrecognized usage reactnative commands start starts webserver install installs npm react components bundle builds javascript bundle offline use newlibrary generates native library bridge android generates android project app confused", "num": "5409", "d": "11/2015"}, {"title": "internet explorer import syntax returns invalid component", "body": "hey broke keyboard two bug seems using babel syntax declare app way js import component react class app extends component render return app ie throws whereas instead previous works using react loaded page shimmed browserify could come well know bugfeature causing world pain inside app pretty big app lot components higher order components thanks", "num": "5407", "d": "11/2015"}, {"title": "nicer docs site", "body": "using react awhile loving front end developer would like contribute back react community would like ask react core team guys open simple reskinning prettifying docs page ideas mind make sidebar items collapsible mobile friendly vibrant color theme changes drastic mostly playing css example past work skinning site let know thoughts make pr address issues smile", "num": "5404", "d": "11/2015"}, {"title": "api reference useful", "body": "due lot text explicit explanation way search stuff api makes library extremely hard use hard someone read much rather stuff done", "num": "5402", "d": "11/2015"}, {"title": "inconsistent error messages test utilities functions", "body": "noticed returns error message find exactly one match found class classname returns error message find exactly one match tag tagname would preferrable consistent errror messages would personally prefer first format number matches reported parantheses", "num": "5401", "d": "11/2015"}, {"title": "client side usage api", "body": "hi process migrating codebase react encountered problem fact client side uses render react components passing results around strings know ideal given codebase previously sadly needed us cases however given understanding structural changes packages tell supposed simply call api accessible package use webpack yet moment using appropriate supported way calling browser using prebuilt packages", "num": "5400", "d": "11/2015"}, {"title": "document context stateless functional components", "body": "set functional component second argument function parent context undocumented unsupported unstable behavior missing documentation far tell", "num": "5399", "d": "11/2015"}, {"title": "use instead setting css properties individually", "body": "based discussion currently diff css properties imperatively set individual properties value differs previous render long claimed performance reason benchmarks nt seem support claim instance consider ben perf test realistically cases one technique faster vice versa probably wash using several advantages current approach notably solves correctness issues related various css shorthand properties noted also cleanly solves vendor prefixing variety edge cases plus added bonus means react core less work therefore simplercleanermoremaintainable", "num": "5397", "d": "11/2015"}, {"title": "changelog", "body": "npm says see sign github changelog would help understand whether upgrade later", "num": "5393", "d": "11/2015"}, {"title": "reactaddonstestutils generates warning warning", "body": "specified documentation however following warning generated due fact module exports", "num": "5392", "d": "11/2015"}, {"title": "add addons", "body": "followup reactaddons packages entry files", "num": "5388", "d": "11/2015"}, {"title": "async value updates inputs reset cursor position", "body": "hello strikes bug certainly annoying difficult workaround control input set value asynchronously say settimeout example cursor position reset end input jsfiddle try typing middle input text cursor reset end line addendum see native inputs exhibit behavior say use jquery setinterval tho still behavior want since controlled input scenario know value actually changing", "num": "5386", "d": "11/2015"}, {"title": "requestupdate setstate use deep merge", "body": "currently think common case deferred rendering way render period time see renders immediately issue lets say wanted update two css properties render course could use however since uses shallow merging updating states would cause overwriting previous state example next render render resolved state would order solve could circumvent object create second object contains computed styles render requests could happen call function like course ignoring state using another object manage style would create side effect state contained two objects nice end deep merge state would best however obviously huge change may create large performance drawbacks", "num": "5384", "d": "11/2015"}, {"title": "serverside rendertostring component claims ismounted", "body": "keep reference lifecycle method component rendered later documentation however claims serverside components nt really mounted since never called think behavior changed react might wrong", "num": "5383", "d": "11/2015"}, {"title": "componentwillreceiveprops nt detect object prop mutated", "body": "passing object owner child like nt detect change looks like taking reference passed object works nt tried using non object react intended behavior", "num": "5382", "d": "11/2015"}, {"title": "support attribute tag", "body": "implementing solution allows label act behalf checkbox ca nt add jsx", "num": "5380", "d": "11/2015"}, {"title": "docs changing rendering backend", "body": "reactfamous worked creating invisible dom structure using componentdidmount related lifecycle methods create famous scene graph another tree structure mirroring structure hidden dom bit unnecessary extra dom read somewhere alternate rendering backends place read make alternate rendering backend would completely ignore dom case scene graph example suppose like make scene graph threejs purely webgl dom wo nt come play", "num": "5379", "d": "11/2015"}, {"title": "documentation issues reactaddonsshallowcompare package", "body": "previously using method reactlib implementation used following way updating migrated using npm package reactaddonsshallowcompare assumed shallowcompare worked way anything passed shallowcompare returning true low level testing even following returning true using chrome dev tools able discover method signature expected think need better document method somewhere either npm package page addons page help others wanting make transition", "num": "5378", "d": "11/2015"}, {"title": "examplebasicjsxprecompile babel examplejs outdirbuild failed", "body": "babel version babelcore", "num": "5377", "d": "11/2015"}, {"title": "react freezing chrome task manager reports cpu tab memory increase per second", "body": "sorry vauge description ca nt think provide except source trace stack rather flummoxed edited source convey gist issue originates w onclick handler inside jsx import react component proptypes react import radium radium let row storename deals dateselected isopen toggleopen updatedateselected gt daysmap day gt row radium row import connect reactredux import updatedateselected actionsconfigactions connect null updatedateselected export default class rowcontainer extends component static proptypes updatedateselected proptypesfunc constructor super thisstate isopen false toggleopen thissetstate isopen thisstateisopen render return triggering page immediately freezes statement allows investigation calls redux reducer manages middleware called component contains rerendered w correctly updated props jsx import react component proptypes react import row viewsconfigconfigdealsrow const configdeals deals stores daterangestart dateselected gt storesmap store gt import connect reactredux connect state gt dateselected stateconfigdealsdateselected deals statecollectionsdealsentities stores statemetastores export default class configdealscontainer extends component static proptypes deals proptypesarray stores proptypesarray dateselected proptypesnumber render const deals stores dateselected thisprops return point expect react stop stuff keeps going stepping forwards w debugger yields trace stack particular function call seems trip everything comment seemed pertinent unsure large ammounts computationmutation could", "num": "5375", "d": "11/2015"}, {"title": "react objects invalid children", "body": "functions children objects react router multiple route components cases instead get makes building abstractions much easier always know find components functions objects", "num": "5371", "d": "11/2015"}, {"title": "proptypes nesting", "body": "hey using redux putting actions thispropsactions unfortunately makes hard use proptypes lacking ability nest proptypes something like solution feature upcoming", "num": "5365", "d": "11/2015"}, {"title": "onclick tag working update", "body": "none onclick handlers working development mode updating using reverting code changed reacterrorutilsjs get onclick handler working", "num": "5364", "d": "11/2015"}, {"title": "event handlers amp shadow dom", "body": "hello react currently trying make events work react components rendered within shadow dom find putting back commented lines work way enable outside library right using kind injection ones performed reactdom instance", "num": "5363", "d": "11/2015"}, {"title": "reactnative init error", "body": "use reactnative init problem githubcom errnooperation timed node version ping githubcom successful installing reactnative package npm npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit cloning bare repository npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit fatal unable connect githubcom npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit githubcom errnooperation timed npm err darwin npm err argv install save reactnative npm err node npm err npm npm err code npm err command failed git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit npm err cloning bare repository npm err fatal unable connect githubcom npm err githubcom errnooperation timed npm err npm err npm err npm err need help may report error npm err npm err please include following file support request npm err usersguodsprojecttestreactnpmdebuglog ping githubcom ping githubcom data bytes bytes ms bytes ms bytes ms", "num": "5359", "d": "11/2015"}, {"title": "reason stateless function return null", "body": "return null stateless function receive error message would like know reason stateless function return null sample code thank", "num": "5355", "d": "11/2015"}, {"title": "syntaxerror trying compile mainjs described tutorial", "body": "read sudo npm install g browserify npm install save react reactdom npm install save babelify touch mainjs mainjs var react require react var reactdom require reactdom reactdomrender hello world documentgetelementbyid example next call browserify babelify mainjs bundlejs got syntaxerror nik fedora tut browserify babelify mainjs bundlejs syntaxerror unexpected token reactdomrender hello world documentgetelementbyid example parserppraise parserppunexpected parserppparseexpratom parserppparseexprsubscripts parserppparsemaybeunary parserppparseexprops parserppparsemaybeconditional parserppparsemaybeassign parserppparseexprlistitem parserppparsecallexpressionarguments", "num": "5354", "d": "11/2015"}, {"body": "looks like first second snippets resulting parse errors least drop react component babel repl nt tested anything else perhaps babel behaves slightly differently though nt think supposed maybe using something else parse unfortunately one areas jsx gets weird since bit made edge cases behavior maybe define things bit better walk though try explain parse errors last one works parse errors reason boils knowing piece jsx put comments inside braces point parser nt switched treating block jsx nt encountered something believes opening tag thinks object parsed stepping past see jsx nt matter ultimately looks like going parse error extension except empty objects one opening indicates parser start treating something besides objects drop expression blocks removed decided would make sense introduced comments drop literal instead sorry hit one cases jsx breaks hopefully clears nt much really nt really tooling anymore unfortunately since building top js parse sees something indicate jsx assume still js", "d": "11/2015"}, {"body": "try keep github reserved bug tracking much possible please use places eg stack overflow usage questions reopen diagnose think uncovered bug react", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "please file react native issues repo", "d": "11/2015"}, {"body": "come times going point towards canonical issue close", "d": "11/2015"}, {"body": "see discussions best guess hitting enumeration order issue think supported warning message see beginning going close point followup discussions sure great resolution yet might need ensure polyfills date might need make change code", "d": "11/2015"}, {"body": "zpao ok see lot discussion construct see code sample using fact never able render attribute serverside spit anything add component immediately get warning looking code reactdomserver difficulty find relevant bits sure separate issue mentioned serverside rendering java nashorn scripting engine chance somewhere reactdom reactdomserver dependency node causes best guess hitting enumeration order issue think supported warning message see beginning datareactid using anything depends enumeration order last normal right end looks like nashorn style always skipped somehow", "d": "11/2015"}, {"body": "debugging nt see attribute markup rendered serverside order attributes missing attibute", "d": "11/2015"}, {"body": "created minimal app attempts render single div attribute work also double checked whether ordering problem real app attribute rendered using root node looks like jsx using spread still nt get could related style attribute swallowed suspicious tips look debugging bit lost honest", "d": "11/2015"}, {"body": "debugging nt see attribute markup rendered serverside well sounds like problem created minimal app attempts render single div attribute work working far less inclined blame react really nt enough go going say maybe something initial state results nashorn treating value differently said adding component results warning except minimal app makes want blame app way something else app code would something like radium inline styles library missing client never seen something like reported really hesitant blame react possible would suggest taking things stop seeing trying build reduced test case repro share otherwise sure much go", "d": "11/2015"}, {"body": "working far less inclined blame react yes problem probably react reactrouter trying create small app reproduces problem far able reproduce issue reactrouter mix said adding style component results warning may jumped gun seems add components still nt see pattern pretty sure something reactrouter react wo nt bug anymore", "d": "11/2015"}, {"body": "alright well let us know regardless curious amp ee like knowledge tricky diagnose issues even nt react react router wildly popular likely get crosscutting issues like", "d": "11/2015"}, {"body": "zpao ok weirdest bug ever reactrouter either nashorn lack understanding nashorn created sample project demonstrates issue think know work around issue tomorrow gist callback passed react router function accepts three arguments bundled together single object returned method inspect java side property set indicates valid route call render passing however somewhere roundtrip nashorn java nashorn object changes shape way triggers issue js code routing rendering added simpler variation well found note logging object returning passed render java code calls script functions first render two steps determine route valid render single step hardcoded render route logging output get combined logging java js code loading script reactjs loading script reactdomjs loading script reactdomserverjs loading script historyjs loading script reactrouterjs loading script bundlejs got twosteprenderer object object object determining route path props routes object object object object props params object object props location object object props components function app classcallcheck app props history object object determinined route path props object object render props routes object array props params object object props location object object props components object array props history object object serverside generated markup using twosteprenderer style rendered simple render match result errornull redirectnull props object object serverside generated markup using simplerenderer style rendered notice difference two props objects nt dug much changing shape dramatically must something wrong little docs nashorn yet idea wrong able work around good thank interest sorry bothered would thought could get kind weird differences rendering", "d": "11/2015"}, {"body": "hmm guess never posted initial theory nashorn amp somehow getting null undefined mixed since would nt render anything nt make sense styles nt say maybe something like actually happening though reference javaland losing state casting odd either way glad sort figured though good luck", "d": "11/2015"}, {"body": "looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow regards question personal recommendation avoid singletons", "d": "11/2015"}, {"body": "thanks reply already way create react components singletons aware trust jsfiddle evaluated one seniors please share could nt find anything docs communicate components doc page communication two components nt parentchild relationship set global event system flux pattern one possible ways arrange see singletons nt mentioned stackoverflow link gave lot people actually said using singletons useful cases second answer singletons solve one one problem resource contention resource single instance need manage single instance need singleton sounds like usecase quite react world believe still relevant issue github seems like relevant way use components think docs contain reference", "d": "11/2015"}, {"body": "react component instances internal state needed know inside tree instance ca nt instance rendered multiple places therefore idea singleton instances nt make sense react world shown fiddle really would call singleton mostly single instance argument like module state instance rendered uses enclosed really global state cheating storing reference mounted instance global state forcing update mounted instance nothing actually stopping rendering would result first one updated could easily something similar support rendering us making reference docs wo nt lots patterns could achieved react going talk", "d": "11/2015"}, {"body": "thanks taking time reply james firstly completely understand points appreciate fact taken look jsfiddle let make final statement meant singleton instance react component renders throughout app starting point therefore problem mentioned first one updated rendering relevant know contaminating global namespace frowned upon codingapproach place usages using flux sort thing problematic variety reasons struggled good day even solution came good component chooses props store using singleton way described make lot easier think benefits outweigh cons know regard docs using react months secret docs lacking severely points learning use react hard confusing docs currently contain sentences communication components family relationship understand variety patterns available sort thing obvious encountered flux far beginners rely heavily docs maybe listing possible patterns available solve sorts problems exact thing learn patterns indepth learning tool right task hard part want make things hard easier think matter lines could help beginners future always end writing huge comments thanks sticking reading smile", "d": "11/2015"}, {"body": "causes every render different random value key different react reuse old component lose focus input got replaced", "d": "11/2015"}, {"body": "ah right would make sense bad mistake thanks", "d": "11/2015"}, {"body": "addons removed package eventually reason separate packages currently requires able support ways separated could elaborate separate addon packages requiring causes trouble", "d": "11/2015"}, {"body": "could nt find notes docs explains react wraps floating text nodes span tag sure limitation still around", "d": "11/2015"}, {"body": "answer still holds true", "d": "11/2015"}, {"body": "nt check function binded instead test behavior instance javascript bootstrappaginationpropsonselect result shallowrenderergetrenderoutput expect result toequal", "d": "11/2015"}, {"body": "yeah laskos solution probably best", "d": "11/2015"}, {"body": "workaround use different name like get initial state reserved function name emits warning order avoid confusion component lifecycle function defined react classes looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "using defaultvalue set value input first time subsequent changes default value value input wo nt updated directly use prop instead read controlled noncontrolled inputs", "d": "11/2015"}, {"body": "well said seekshiva", "d": "11/2015"}, {"body": "think better ask stack overflow matters like nt seem bug please provide code repro bug", "d": "11/2015"}, {"body": "nt want use one ref val datavar val", "d": "11/2015"}, {"body": "thanks answer liesislukas nt looking workarounds one question forgot elementkey react internal nt even read", "d": "11/2015"}, {"body": "yes key used signal react identity object reactchildrentoarray changes key identity semantics preserved example jsx itemsmap item gt item okay wo nt mixed first element keys scoped array flatten item gets key prefixed preserve behavior want read key back unchanged read within component please use another property name", "d": "11/2015"}, {"body": "okay thanks spicyj", "d": "11/2015"}, {"body": "works fine version using", "d": "11/2015"}, {"body": "maybe old version works", "d": "11/2015"}, {"body": "update issue gone away sure solved problem think may thanks upgrading npm node andor using npm link", "d": "11/2015"}, {"body": "ok let close ever find went wrong provide steps reproduce reinvestigate", "d": "11/2015"}, {"body": "fairly certain problem though trouble producing one two modules experiencing error may compounding factors related outdated nodenpm versions consider module relies peerdependency uses refs project requires installed via error displayed tested moment ago run inside install remote git repository error goes away", "d": "11/2015"}, {"body": "jimfb confirm definitely issue git installation worked fine older versions npmnode eta maybe maybe related issue fixed may also fault react", "d": "11/2015"}, {"body": "reproduce nt set charset document unfortunately page actually decent still reproduce done", "d": "11/2015"}, {"body": "doh thanks jsx converting entity unicode character", "d": "11/2015"}, {"body": "kept reading methods displaying entities dynamically right sorry disappointed", "d": "11/2015"}, {"body": "omuryolcu past something else page stealing focus questions like stackoverflow etc functionality likely broken", "d": "11/2015"}, {"body": "yaycmyk hey evan well question bug report imho nt work could make work like guys would prove wrong would delighted however strongly convinced bug would unfair report", "d": "11/2015"}, {"body": "know sorry misread initial post intended behavior move focus first render consistent html spec bug workaround one possibilities want remain constantly focused", "d": "11/2015"}, {"body": "hey evan yaycmyk problem maybe react something also move focus render maybe would eliminate use ref nt know struggled much give maybe use somebody thank", "d": "11/2015"}, {"body": "mentioned seems like line spec may inconsistencies think fake focus one things really tricky declaratively part shared global state unrelated components declare focused single render pass right give hooks manage state wo nt sorry cause troubles", "d": "11/2015"}, {"body": "hey paul zpao ok wanted mention case something wrong btw last one activating focus would good choice react could complain warning user thank much attention", "d": "11/2015"}, {"body": "found maybe reactrouter cause problem", "d": "11/2015"}, {"body": "works demonstrated pen open console look", "d": "11/2015"}, {"body": "appears working expected", "d": "11/2015"}, {"body": "expected behaviour vanilla dom version behaves", "d": "11/2015"}, {"body": "doublechecked works fine firefox fine chrome seems like purely chromerelated issue maybe reasonable workaround makes sense mention gotcha docs", "d": "11/2015"}, {"body": "looks like behaves way safari maybe see open issue tracking", "d": "11/2015"}, {"body": "adding new proptype validator something like component would form something similar opinion quite dangerous let people pass functions sure make better validation reading seems like gigantic hack would work minification option aware", "d": "11/2015"}, {"body": "show using nt think component classes valid either supposed accept anything rendered classes ca nt rendered directly would pass element type set", "d": "11/2015"}, {"body": "oh god right feel stupid guess validating something bad way sorry noise", "d": "11/2015"}, {"body": "believe lifecycle methods require instance function components", "d": "11/2015"}, {"body": "could use lifecycle hooks smart parent component use functional component dump component whose responsibility render answer question", "d": "11/2015"}, {"body": "okay thank much feedback berkeleytrue iamdustan", "d": "11/2015"}, {"body": "iamdustan berkeleytrue could create functions within stateless component calls smart components function", "d": "11/2015"}, {"body": "nt currently plans change welcome maintain fork would like", "d": "11/2015"}, {"body": "intentional intentional value whereas lack specified value", "d": "11/2015"}, {"body": "zpao case imho escape properly treated equally react trivial translating whatever although personally sure ever makes sense key warning", "d": "11/2015"}, {"body": "unfortunately wo nt possible proptypes done early elements nt access rendered result", "d": "11/2015"}, {"body": "worries appreciate courteous reply thanks react", "d": "11/2015"}, {"body": "publish latest branch documentation changes land cherrypick stable branch built avoids docs code changes since get cherrypick code change stable release care less longlived docs version nt well set sure enough value thanks cherrypicking last published markdown always available version eg wanted see api docs easily personally think pretty good process cherrypicking annoying allows docs pretty stable still receive updates", "d": "11/2015"}, {"body": "great question stack overflow try keep github focused bugs issues react keep usage questions elsewhere said may gain insights", "d": "11/2015"}, {"body": "feel like expected behavior albeit perhaps slightly confusing class parents changing attribute instance nt change would evaluated change ancestor component class eg instance thrown away new input instance created thus gets evaluated expected behavior given way react keys work cc spicyj zpao", "d": "11/2015"}, {"body": "yes work around changing attribute input gets recreated", "d": "11/2015"}, {"body": "think react diffingreconciling engine thing changed type end user developer much type technically thing changing whole new input use case developer end user standpoint says want keep exact input change type essentially person consider behavior expected guy wrote reconciliation algorithm", "d": "11/2015"}, {"body": "designbyonyx yeah argument could made whole ton things changing one attribute eg video component could imply attributes eg component playscrubber position also changereset someone could make argument one changes rules result wackamole game become complicated anyone understand better simple set rules change tag type results new instance attribute changes honored everywhere fwiw keep mind problems evaporate use controlled components reacty way", "d": "11/2015"}, {"body": "thanks quick responses makes sense behaving way wat moment morning coffee switching controlled components seems like better solution using keys", "d": "11/2015"}, {"body": "jimfb get point although video src example best kind like saying every time change tv channel someone might expect new tv appear place new channel set brightness hue set back however type tv changes crt plasma completely reasonable expect new tv place get point nonetheless overall issue developer completely different views happens implement tree structure arbitrary random imo input gets reused despite fact intent trying think another case would expect attribute change completely reset element ca nt inputtype scenario seems pretty unique deserving scrupulous investigation another thing consider fact defaultvalue property value attribute follow example paste console", "d": "11/2015"}, {"body": "closing updated react worked expected find issue upgrade react", "d": "11/2015"}, {"body": "well spotted", "d": "11/2015"}, {"body": "looks like going make actually render comment nodes become nonissue future", "d": "11/2015"}, {"body": "electricmonk attribute far tell edit property exists controlled javascript control manually using node", "d": "11/2015"}, {"body": "wonder makes sense react expose attribute also seems reasonable suggest since ca nt think reason nt attribute", "d": "11/2015"}, {"body": "jimfb usercontrolled best initial value user last developers arbitrary judgement would think", "d": "11/2015"}, {"body": "ah yeah unless developer intends providing volume control yeah makes sense sounds like close issue unless someone sees reason keep open", "d": "11/2015"}, {"body": "hmm stand corrected", "d": "11/2015"}, {"body": "ah yeah unless developer intends providing volume control yeah makes sense jimfb react deals attributes inpart serverrendering would say personally think best react stays things anyway trivially implemented userland via wrapper component", "d": "11/2015"}, {"body": "encountering similar issue error getting simple solution would check existence exit mentioned op", "d": "11/2015"}, {"body": "andersekdahl jimfb tried debug problem find already fixed pull request relevant anymore", "d": "11/2015"}, {"body": "yup seems like thanks", "d": "11/2015"}, {"body": "guess could reinstate jsxtransformer nt really want sebmck whyyyyyyyyyyyyyy", "d": "11/2015"}, {"body": "zpao something want support", "d": "11/2015"}, {"body": "sebmck missing something obvious inbrowser transformation fairly critical new users getting started used sample code give people first taste jsx used fiddles debuggingtestingdemoing used lot places even used reactjs homepage seems like fairly critical feature", "d": "11/2015"}, {"body": "sebmck feel free point elsewhere discussion main reason want keep simple starting react load script use typetextbabel work nice story eases people need serverside transformation would also pretty bad require build pipeline hello world want people focus react initially tooling could compile get story yep though maybe wo nt ship anywhere time site examples jsfiddle nice say owning p", "d": "11/2015"}, {"body": "way could reduce runnable test case gut cases like usually something keys nt necessary", "d": "11/2015"}, {"body": "also version react using", "d": "11/2015"}, {"body": "react", "d": "11/2015"}, {"body": "sure make runnable test case issue branch clone see maybe need dummy items db see ul falls div though le know help help", "d": "11/2015"}, {"body": "okay list steps reproduce including clone repo items add take look", "d": "11/2015"}, {"body": "git clone branch joan dunno get branch git checkout joan npm install create mysql database called listlogs hmm maybe give email send dump import schema npm run server start api npm run dev start webpack dev server sign whatever want left second icon says add new list add one new item appear menu item appear new list error reproduces appear maybe use irc skype fb something case find issue setting", "d": "11/2015"}, {"body": "nt mysql possible make smaller example try deleting parts code nt necessary make issue appear nt require database", "d": "11/2015"}, {"body": "hmm let think go", "d": "11/2015"}, {"body": "problem condition ternary expression ruins behaviour actually checking user logged change let say true works", "d": "11/2015"}, {"body": "funnily value thispropsowner true", "d": "11/2015"}, {"body": "ok cuttlas created branch nt require backend steps npm install npm run dev start webpack dev server log whatever want signin menu dummy lists left second appears however refresh page second goes two lists hope helps", "d": "11/2015"}, {"body": "sure reproducing correctly see warning change menujsx use inside listlogslogo inside link instead think error goes away confirm could made clearer see error see ignore", "d": "11/2015"}, {"body": "warning validatedomnesting appear descendant see menu gt link gt gt gt changing nested anchor anything else seems fix problem react ca nt help create invalid markup browser moves nodes around", "d": "11/2015"}, {"body": "well embarrassing work thanks bunch warnings solving evening left one later thinking absolutely relation sure make clearer guess fact worked value true confused us bit thanks though cheers", "d": "11/2015"}, {"body": "propose force purity impure language", "d": "11/2015"}, {"body": "going close point initial pr functional components good discussion around ideas make pure", "d": "11/2015"}, {"body": "stateless component almost equal would really prefer work like give enormous performance boost cases since rerender props changed see performance optimization done stateless components nt know since nt behave like components enabled still possible gain performance personal opinion behaviour purerendermixin default components well long nt implement another behaviour method might wrong think forces write reasonable performant code", "d": "11/2015"}, {"body": "thanks zpao tried search similar issues nt search pull requests apparently months late", "d": "11/2015"}, {"body": "always find confusing hell announcing compatible react probably source problem", "d": "11/2015"}, {"body": "thanks responding looks like issue though see release", "d": "11/2015"}, {"body": "trying install though possibly locked dependency", "d": "11/2015"}, {"body": "syranide good spot strange given caret maybe solve one errors installing reactdom separate npm package also helped resolve reactdom error", "d": "11/2015"}, {"body": "special", "d": "11/2015"}, {"body": "closing since react issue feel free continue working", "d": "11/2015"}, {"body": "zpao keeps coming come legit solution go buildpackage", "d": "11/2015"}, {"body": "going close since mentioned nashorn point another issue topic perhaps something", "d": "11/2015"}, {"body": "sorry nt want whine anything explain closing react reactdom support use globals point nashorn specific topic nt issue platforms support effect platforms node js guys planning expose reactdomserver via path global case expose react reactdom honest ran issue thought oversight seems conscious design decision currently fixing calling still works reachable global undoubtedly removed next release sounds like walking deadend street", "d": "11/2015"}, {"body": "also closed see quitte people issues one line code solve end end implement polyfill commonjs module loader target platform get access reactdomserver object need make difficult call bug prebuilt bundle contains code effectively unreachable available would use prebuilt bundle see nt want pollute global scope would exposing via already global scope", "d": "11/2015"}, {"body": "sure going exactly issue probably going issue references using spyon reference original function even spying replace property new function beyond pretty hard tell perhaps standlone test repo gist could ed", "d": "11/2015"}, {"body": "andrewheppner spying private function kind weird using jasmine kind thing team maybe fix problem function rendercategoryclearbutton const clearallselectedcategoriesspy jasminecreatespy clearallselectedcategoriesspy const output testutilsrenderintodocument return output clearallselectedcategoriesspy call clearallselectedcategories clicked gt const output clearallselectedcategoriesspy rendercategoryclearbutton const renderedbutton testutilsfindrendereddomcomponentwithtag output button testutilssimulateclick renderedbutton expect clearallselectedcategoriesspy tohavebeencalled", "d": "11/2015"}, {"body": "thanks jadekler give shot reason using spy thought test whether click button successfully calling clearallselectedcategories function use underscore infront function names signify custom function one react lifecycle functions component ie componentwillupdate etc better way test whether button click calls function", "d": "11/2015"}, {"body": "per think supported ssr fpr maybe could warn ever happens via createelement path", "d": "11/2015"}, {"body": "looks like usage question rather bug react core usage questions better answered sites like discussreactjsorg stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move one previously mentioned sites", "d": "11/2015"}, {"body": "came across similar issues profiling react based app component way rerendered lot thing passed element render visible prop named overlay element anchors around propschilren recommended way compare previous next children hopefully even overlay prop find whether component props therefore render necessary", "d": "11/2015"}, {"body": "seems problem affecting dev build react well recursion caused", "d": "11/2015"}, {"body": "simple solution trigger events different event loop eg settimeout loop even better communicate differently achieved state triggering events said clear triggers much recursion though", "d": "11/2015"}, {"body": "thanks zpao wrapping loop settimeout trick functionality simple component like nav simplest way trigger open reactish solution", "d": "11/2015"}, {"body": "followed repro steps could see bug wired maybe bug fixed one npm packages could try deleting nodemodules folder get fresh install", "d": "11/2015"}, {"body": "tried different machine also deleting nodemodules running npm install still seeing behaviour screenshot describing adding post content test post editing say test post updated seeing thing chrome firefox win win machine sure checked right branch bugbrokeneditwithmarkedandptag got working master using div instead p tag", "d": "11/2015"}, {"body": "thinking result using marked inner html wrapping content p tags resulting nested p tags according nt standards compliant close issue doubt react strives handle noncompliant markup", "d": "11/2015"}, {"body": "right used wrong branch see problem guess react ca nt help browser alters html make valid react ca nt even warn properly since used", "d": "11/2015"}, {"body": "yes thoughts well fine thanks looking", "d": "11/2015"}, {"body": "assuming filed", "d": "11/2015"}, {"body": "line tries get node mounted", "d": "11/2015"}, {"body": "cc spicyj syranide events actually calling setstate ssr might legalvalid", "d": "11/2015"}, {"body": "yeah suppose setstate warn nothing expect would happen though", "d": "11/2015"}, {"body": "triggers error example also produces expect asynchronous updates ignored warning components rendered using", "d": "11/2015"}, {"body": "flow open source find something wrong date sure would appriciate pr fix feel free submit one flow repository intuition file remain repositorydirectory least along flow libs changing location file wo nt fundamentally change anything maintaining file still require exactly amount work ran nearly identical issue typescript ultimately concluding request change would need come directly project maintainers along appropriate update testing infrastructure per", "d": "11/2015"}, {"body": "thanks jimfb sorry comment came official position definitely nt insight factors inform decisions definitely things flow side make versioning less top head granular flowlib control imports would help nodebrowser split well", "d": "11/2015"}, {"body": "think ultimately one belong react repo gone back forth big difference typescript primary contributors fb using flow extensively far greater chance know something compatible typedefs better move flow long term libraries included core node dom etc fine nt libraries going reopen since whole flow issue definitely issue cutting across multiple projects cc sebmarkbage since thinking bunch lately", "d": "11/2015"}, {"body": "context flow team sits one desk react team facebook report resource allocation seamless repo nt make break collaboration flow team build prioritize features based requirements react api core frameworks feature able maintain add new features deploy lot context typed configured currently looking flow types deployed npm packages point might make sense react definitions deployed react release ultimately nt maintainability deploys releases made", "d": "11/2015"}, {"body": "thank comments seems though plenty thought given issue meantime uptodate type definition file react use fb would mind sharing", "d": "11/2015"}, {"body": "tested jsfiddle least test case seems work maybe make minimal repro bug jsfiddle jsbin", "d": "11/2015"}, {"body": "per cody jsfiddle appear work create simple jsfiddle demonstrates issue", "d": "11/2015"}, {"body": "yeah fault per cody jsfiddle appear workin masking div changed show state mousedown event dblclick handler nt", "d": "11/2015"}, {"body": "render react component create local variable starts uppercase letter", "d": "11/2015"}, {"body": "beginner would like warnings console", "d": "11/2015"}, {"body": "warnings tracked", "d": "11/2015"}, {"body": "bit clarity want warnings console jsx compile time want file whatever using transform probably babel", "d": "11/2015"}, {"body": "zpao warning would require transform support want file babel instead react", "d": "11/2015"}, {"body": "yes said exception would something would want write additional babel plugin", "d": "11/2015"}, {"body": "zpao correct already done right already checking mode pointing actually calls function nt quite get issue probably nt get words properly text nt surface issue component class consumed", "d": "11/2015"}, {"body": "antoaravinth code linked validates proptypes element creation assuming test case like want warn right away written invalid proptype must take array current behavior instead wo nt know component defined proptypes improperly mean class consumed poor phrasing part", "d": "11/2015"}, {"body": "zpao got meant anyways looks like rppc given pr thanks reply", "d": "11/2015"}, {"body": "code intended internal react part publicsupported api implementation detail reserve right make changes time considered unstable thus reason nt export duplicate", "d": "11/2015"}, {"body": "fyi key mirror shipped fbjs react facebook projects consume available top level apis require fbjslibkeymirror package rest jim said holds", "d": "11/2015"}, {"body": "little surprised seeing flicker nothing changing nt happen guess something changing way without simple example demonstrates issue nt much investigate going close issue actionable current state guess bug somewhere code rather bug react core create simple example jsfiddle demonstrates bug react core happy reopen investigate", "d": "11/2015"}, {"body": "let keep open close ca nt get test case together find nothing nt enough info confidently close", "d": "11/2015"}, {"body": "zpao thanks actually nt certain maybe special case root node perhaps calling setstate outside element somehow triggered ca nt extract simple test case part bigger system may step venture getting bad state quickly good one least set breakpoint see could move stack find state point see trying render", "d": "11/2015"}, {"body": "able set breakpoint inside render component see calling setstate outside element nt think matters gut reaction nt expose method calls setstate maybe recommendation really consider state private", "d": "11/2015"}, {"body": "nt run today going close almost certainly bug run set break changes see find", "d": "11/2015"}, {"body": "nt agree promises particular reliably cancelled removing way check component mounted setstate another action opening way lot hard trace async bugs", "d": "11/2015"}, {"body": "yaycmyk thus line still need figure good stories around promises related use cases please read background issues listed particular", "d": "11/2015"}, {"body": "read comments find issues intractable", "d": "11/2015"}, {"body": "promises cant reliable cancelled sourcesproofsexamples monday november evan jacobs notifications githubcom wrote nt agree promises particular reliably cancelled componentwillunmount removing way check component mounted setstate another action opening way lot hard trace async bugs", "d": "11/2015"}, {"body": "nvartolomei look promise spec", "d": "11/2015"}, {"body": "longer term goal something happening immediately want track planning discussions single place across comments every issue comes aware problem promises currently uncancellable major reason nt already done", "d": "11/2015"}, {"body": "yaycmyk oversimplify complex issue comments saying using avoid unmounted components nt actually solve problem warning trying indicate fact hides problem also calling result promise bit antipattern anyway since cause race conditions wo nt necessarily show testing thus want get rid figure best practice recommendation using promises react agree issues bit inscrutable largely complex issue still figuring nt yet canned response", "d": "11/2015"}, {"body": "calling setstate result promise bit antipattern anyway since cause race conditions wo nt necessarily show testing agree disagree one times content fetched asynchronously nt want go fullscale rerender pop content resolved use specifically infinite table view implementation full virtual rerender would unnecessary", "d": "11/2015"}, {"body": "might able cancel promise make dereference component unmount like javascript const somecomponent reactcreateclass componentdidmount thisprotect protectfromunmount important distinction called callbacks get dereferenced meaning component gets dereferenced promise completes calls noop prevent memory leaks related promises references unmounted components source protectfromunmount", "d": "11/2015"}, {"body": "simple method used add cancel promise javascript const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val promisecatch error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true edit updated correctnesscompleteness use javascript const somepromise new promise r gt settimeout r const cancelable makecancelable somepromise cancelable promise gt consolelog resolved catch iscanceled error gt consolelog iscanceled iscanceled cancel promise cancelablecancel", "d": "11/2015"}, {"body": "listing ways supup promises make cancellable besides point intent provide solution works spec rather trying work around spec", "d": "11/2015"}, {"body": "agree instead simply checking component still mounted receive promise result resort kinds magic unbind promise component supposed set result clearly fighting way promises designed feels like overengineering solution simple test easiest way take care", "d": "11/2015"}, {"body": "keep simple checking javascript reactcreateclass function componentdidmount function thisismounted true handleresponse function response thisismounted return protection componentwillunmount function thisismounted false", "d": "11/2015"}, {"body": "course opinion seems async data loading promise inside react component common scenario covered react instead write boilerplate code", "d": "11/2015"}, {"body": "problem fallow true mount state must add listener react finish dom mount process component attach componentdidmount defined affect perf nt need fallow everywhere component dont listen dom mount ready default since componentdidmount undefined", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "thanks fkling closing favor also see somewhat related discussion colllin future reference usage questions best addressed stackoverflow know somewhat bug like nt bad place something consider try keep github tracking bugs core", "d": "11/2015"}, {"body": "thank fkling", "d": "11/2015"}, {"body": "already done next publish update currently way update npm metadata without new version timeline looks like things put perhaps soon", "d": "11/2015"}, {"body": "ok good unsure repository facebookreact sufficient prefixed github", "d": "11/2015"}, {"body": "npm treats github", "d": "11/2015"}, {"body": "would definitely nice heard someone rxjs team say last month managed refactor less allocations shorter stack traces saw huge performance improvements linearly reduced allocations version sure problems nt exactly least example similar problem fixed worth look", "d": "11/2015"}, {"body": "danvk exclude react stuff via blackboxing chrome dev tools help lot", "d": "11/2015"}, {"body": "gon na try put words thoughts around wish luck function listed like cousin state mean called get new props function called get new state parallel react calls receive props way get info find parent state changed essentially case state parent nt actually able manipulate state method feels unnecessary besides unnecessary style programming actually lead kinds unpredictable behavior method essentially observing component state running arbitrary code response state change unless extremely careful situation end sorts problems including cascading updates race conditions see pretty clearly ember observable docs list several major caveats observables implementation obvious going happen anymore change state sorry bit vague programming paradigm learned avoid router specifically supposed get state changes new props route components hook get router state feels like opens possibility users harm good", "d": "11/2015"}, {"body": "thank fantastic response makes lot sense", "d": "11/2015"}, {"body": "thanks mjackson agree fantastic answer going close issue answered feel free continue discussion thread guys desire reopen thinking topic changes dramatically find anything actionable react end", "d": "11/2015"}, {"body": "nt think agree lifecyclewise parallel lot parallel something like except invoked update triggered operation certainly possible shoot oneself foot using get situations infinite loops nevertheless quite lot easy write without using something like hooks including checking centralized way updates actually happened going back updating dom well one place imagine general reading state callback operation might something like seems legitimate since nt necessarily know value set new element said nt see beneficial prescriptive signature update hook way data already available via seems easier use proxy", "d": "11/2015"}, {"body": "thanks posting stackoverflow much better place usage questions original question able reduce simplified test case demonstrates bug react core please let us know", "d": "11/2015"}, {"body": "documented several places render reactelement dom supplied container return reference component returns null stateless components well mentioned big red boxes note stateless functions nt backing instance ca nt attach ref stateless function component normally nt issue since stateless functions provide imperative api without imperative api nt much could instance anyway however user wants find dom node stateless function component must wrap component stateful component eg class component attach ref stateful wrapper component duplicate", "d": "11/2015"}, {"body": "lot code might helpful try simplify example asking provide simplified example demonstrates bug react core reinvestigate also nt already nt forget check looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "done create element rendered instance component elements lightweight objects react uses render basically looks like order instance work need render returned value instance docs linked nt need updated working refs another way access rendered components within another component", "d": "11/2015"}, {"body": "ahh gotcha working middleman component extracts away rendering actually gets instantiated thanks", "d": "11/2015"}, {"body": "first example gave expected one small performance updates know force update sounds like bug", "d": "11/2015"}, {"body": "cc sebmarkbage spicyj sounds like something came long ago nt recall resolution root element gets passed one previously rendered presumably made decision skip fine things pure confusing breaking using nondeterministic method calls render", "d": "11/2015"}, {"body": "mentioned changelog sorry call forceupdate component rerender method returns false nt think plan make changes hope hard update code", "d": "11/2015"}, {"body": "spicyj hard time find change cause", "d": "11/2015"}, {"body": "allows text node child putting becomes rendered text node thus found react must instead caution either current due react internals ps really familiar parts html tags even valid inside body cc spicyj update validatedomnesting", "d": "11/2015"}, {"body": "thanks help familiar well believe valid inside inline svgs", "d": "11/2015"}, {"body": "well works fine inside svg inside div check fiddle anyways nt think using construction confused cases works cases", "d": "11/2015"}, {"body": "initial render currently innerhtml tag body document actually results child node text regardless markup nt actually node react tries find node datareactid assigned ca nt find thus error syranide explained though leaving initial render part important explain first render worked without warning inside svg valid child works differently html seems valid child nodes even ignored", "d": "11/2015"}, {"body": "upon thinking may fact mismatch occurs trying access components maybe expecting react lifecycle reconcile quickly case seems events yet bound component either leave open discussion would nt mind clarification isis nt meant done time componentdidmountupdate fires perhaps ordering issue set stone", "d": "11/2015"}, {"body": "remember spicyj sebmarkbage lot thinkingdiscussing topic nt remember details recall decision pretty intentional reason going label question regarding reasoning", "d": "11/2015"}, {"body": "refs child components resolved parent componentdidmountdidupdate happens refs parent resolved example child mount ref child resolved child b mount ref child b resolved parent mount ref parent resolved order ensures component fully initialized receive ref use children initialization avoid accessing siblings ancestors componentdidmount often mounted yet", "d": "11/2015"}, {"body": "ah yes thanks spicyj", "d": "11/2015"}, {"body": "yep makes sense cheers", "d": "11/2015"}, {"body": "legal reasons official answer questions like could come lawyer lawyer question best posed company legal team know ask nt much team nonlawyers contribute discussion going close issue cc jamesgpearce may able give authoritative answer", "d": "11/2015"}, {"body": "cc allows modification redistribution documentation licensed give license read make sure comply also looking using design sure falls scope things happy check legal team clarify needed", "d": "11/2015"}, {"body": "zpao yeah get things rolling also people could easily cross compare really react ruby syntax planning keeping close current design different logo might change color scheme", "d": "11/2015"}, {"body": "attempt rewriting using controlled components sure good idea wanted save separate methods field approach fine make pr update tutorial code repository suggestions jimfb zpao", "d": "11/2015"}, {"body": "agree think might try avoid bind purposes tutorial explicit handlers", "d": "11/2015"}, {"body": "great make pr smile", "d": "11/2015"}, {"body": "awesome going require code change want make sure concept adequately explained well looking forward", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "great thanks", "d": "11/2015"}, {"body": "yes warning triggered case null never codepath gone ca nt throw errors new codepath problematic feel free add new warning", "d": "11/2015"}, {"body": "spicyj still code paths right events listeners instance", "d": "11/2015"}, {"body": "know cause problems feasible react detect please add warnings nt know exist", "d": "11/2015"}, {"body": "suspect cases suppose create new issue one pops", "d": "11/2015"}, {"body": "copy static html code work use react render component work focus edit bug", "d": "11/2015"}, {"body": "entirely sure question asking sounds like usage question nt see actionable bug moment suspect bug react core please provide simplified case demonstrates issue reinvestigate since looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "sorry english good", "d": "11/2015"}, {"body": "yes totally feasible reason split reactdom reactcore allow custom renderers like written easily best approach probably fork reactdom build top description sounds like would good place start making changes sounds like usage question rather bug react core going close since use github issues track bugs react core usage questions better addressed sites like stackoverflow feel free continue discussion thread", "d": "11/2015"}, {"body": "thanks jimfb started working fork good starting point looking looks like lot code related html tags css attributes browser differences etc wo nt needed fork probably would good remove parts think cause problems later pulling changes upstream", "d": "11/2015"}, {"body": "nickdima recommendation always remain close original possible forking project always push changes make sense upstream otherwise likely fall behind said ultimately need make whatever changes required rendering target", "d": "11/2015"}, {"body": "think would make sense part mean target still dom implementation end looking best solution sure renderer could useful", "d": "11/2015"}, {"body": "nt know enough differences opinion suspect bunch issues may solved actually might solve nearly everything nt enough context make educated statement tvml", "d": "11/2015"}, {"body": "nickdima seen reacttvml", "d": "11/2015"}, {"body": "yeah saw couple days ago implementing less thing unfortunately possible solution elegant lot code reactdom needs replicated could difficult keeping synced original code", "d": "11/2015"}, {"body": "spicyj syranide know intentionally dontca nt normalize everything something care normalizing", "d": "11/2015"}, {"body": "jimfb think makes sense normalize unless solve problems seems kind fruitless last checked solving entirely event system nt seem realistic leaves solving inside wrappercomponent trivial would leave dom bubbling relying bad idea imho people trivial safe implement wrappercomponent nt seem high priority seems like least", "d": "11/2015"}, {"body": "ok sounds like probably wo nt invest time solving moment edmellum wants file pull request would considered", "d": "11/2015"}, {"body": "fixed react", "d": "11/2015"}, {"body": "yeah dropped support phantomjs ago see phantomjs old real browser even shims", "d": "11/2015"}, {"body": "adding attribute would helpful reasons", "d": "11/2015"}, {"body": "link spec something attribute nt see referenced", "d": "11/2015"}, {"body": "oh whoops looks like nt hash attribute browser checks block see hash matches provided match", "d": "11/2015"}, {"body": "related", "d": "11/2015"}, {"body": "rpominov nt think related blainekasten think want render function produce empty div set html callback ref following untested roughly idea looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "jimfb nt think related right maybe thought component incapsulates custom dom manipulations want reparent instance component preserving custom dom created state", "d": "11/2015"}, {"body": "rpominov ah right problem comes routing changes rerenders tree wipes custom dom put third party api look like reparenting request duplicate thanks", "d": "11/2015"}, {"body": "think reparenting request work arounds pulling reparenting jimfb tried approach seems happen rerenders ref function argument null seems weird really working hack around dive react internal instance get dom node set innerhtml working either", "d": "11/2015"}, {"body": "trying reparent markup nt generated react think going need manually using javascript probably remove child node tree save somewhere flux store whatever reinsert node empty div new component renders positive would work think approach try next", "d": "11/2015"}, {"body": "instead using span child could create child component expects prop set child renders fails test prop nt set properly usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "jimfb thank quick response aware issue bug maybe shows documentation could improved posted copy regarding suggestion yes could create custom component component could test function see way test function expect", "d": "11/2015"}, {"body": "looks like already pulling get function expect make sure parentelement defined current scope prior defining child class using testing", "d": "11/2015"}, {"body": "jimfb thank help put right direction record works unit test javascript const testchild gt const testcontainer reactcreateclass getparent return thisrefsparent getchild return thisrefstestchild render return const renderintodocument findrendereddomcomponentwithclass testutils const testcontainer renderintodocument const parent testcontainergetparent const child testcontainergetchild expect childpropsdostuff toequal parentdostuff custom component otherwise returns dom node instead component instance", "d": "11/2015"}, {"body": "use callback refs tutorial", "d": "11/2015"}, {"body": "thinking going keep tutorial use string refs nt deprecated yet one less thing learn right away improve wording refs page though make current support status clearer string refs still valuable much easier use cases especially context forms", "d": "11/2015"}, {"body": "follow issue discussion resulted decision instead", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "takes object shallow merge properties object completely replace current state state pass see docs looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "11/2015"}, {"body": "seems like need dynamic elements use classnames module handle easily", "d": "11/2015"}, {"body": "yangshun thought nt know monitor change state data read props call external api local state easily data dynamic", "d": "11/2015"}, {"body": "yes willing try anything thank", "d": "11/2015"}, {"body": "joveyzheng transitiongroup react component made sort thing nonbugs really kept stackoverflow though", "d": "11/2015"}, {"body": "yaycmyk discussion best stack overflow", "d": "11/2015"}, {"body": "thx note", "d": "11/2015"}, {"body": "probably best submitted discussed", "d": "11/2015"}, {"body": "sorry looks like dup", "d": "11/2015"}, {"body": "version date please update retry older version possibly related updating still believe bug react core please provide simple testcase demonstrates issue reinvestigate", "d": "11/2015"}, {"body": "likely related", "d": "11/2015"}, {"body": "looked events input typerange msdn using onmousemove works expected fixed issue", "d": "11/2015"}, {"body": "wanted keep usage similar node possible package npm package nontrivial number people global replacement builds webpack replaces actually good idea keep objects aligned also works towards eventual goal able swap renderers may quite yet somebody wanted build alternate renderer would drop use", "d": "11/2015"}, {"body": "nontrivial number people global replacement builds webpack replaces var whatever require react var whatever react actually good idea keep objects aligned sure providing two globals nt mean need two totally separate javascript files since loading common case right would nt beneficial provide one js file say reactfulljs something like", "d": "11/2015"}, {"body": "trigger eventlistener registered outside react component sure question asking sounds like usage question better addressed sites use github issues track bugs react core since bug going close feel free continue discussion", "d": "11/2015"}, {"body": "try", "d": "11/2015"}, {"body": "first thought ran still got problem returns", "d": "11/2015"}, {"body": "oops realized opened bad", "d": "11/2015"}, {"body": "surface seems like code nt running anywhere jsx desugars reactcreateelement becomes generally need scope nt get react scope issue fine everywhere else version babel might helpful gist minimal repro config multiplefile gists good npm install repro locally honestly seems like mostly likely somewhere combination babel browserify shims maybe combination something making worse", "d": "11/2015"}, {"body": "zpao thank solving dumb problem fact scope problem react included scope therefore jsx desugared reactcreateelement thrown error wasnt throwing react global scope ps working every browsers reasons closing issue problem exotic browserify setup react", "d": "11/2015"}, {"body": "joecritch also interested want keep least semblance similarity different facebook project sites concerned improving content organization docs color scheme also nt think much value making sidebar collapsible mobile styles would probably okay", "d": "11/2015"}, {"body": "also stuff unclear like put event listeners", "d": "11/2015"}, {"body": "also allow use string encapsulation render function clear", "d": "11/2015"}, {"body": "rest documentation written way provides context api reference reference tutorial good thing start teach lot core concepts need know use react also allow use string encapsulation render function clear nt know mean clarify", "d": "11/2015"}, {"body": "use example render like quotes encapsulate html", "d": "11/2015"}, {"body": "call nt want use jsx", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "seems like duplicate", "d": "11/2015"}, {"body": "gaearon less yes find crude search opening issue thanks finding close", "d": "11/2015"}, {"body": "probably overlooked writing context docs add note context page", "d": "11/2015"}, {"body": "realized accepts third argument defined think nt documented documented", "d": "11/2015"}, {"body": "yes probably", "d": "11/2015"}, {"body": "fixed via", "d": "11/2015"}, {"body": "gut feeling going wrong direction makes sense serialize css reparsed browser moving innerhtml createelement become even true css values become structured dom plans really seems better really opposed think least people relying fact nt reset inline styles nt specify react eg animations", "d": "11/2015"}, {"body": "change log copy master branch", "d": "11/2015"}, {"body": "synced date", "d": "11/2015"}, {"body": "bad", "d": "11/2015"}, {"body": "unsolvable problem without explicitly setting selection setting value asynchronously practically equivalent setting arbitrary value string selection information generic transformation selection makes sense behavior unavoidable option manage set selection something want also beware setting asynchronously implies multiple timeouts may scheduled simultaneously unintended results", "d": "11/2015"}, {"body": "general case seems fine specific nt react sort sometimes throw asynchrony setstate parent may async rendering new subtree well something special cases react handles correctly others problem general reactdominput handle restoring selection flushed value changes handled app", "d": "11/2015"}, {"body": "general case seems fine specific nt react sort sometimes throw asynchrony setstate parent may async rendering new subtree well something special cases react handles correctly others loosely speaking asynchronous within current transaction still executed react surrenders execution back dom still appears synchronous input loosely speaking problem general reactdominput handle restoring selection flushed value changes handled app react surrenders execution back browser longer meaningful string implicitly associated selection would say could still done really stretching definition sane mentioned starts becoming really muddledfragile multiple events occur simultaneously even would possible deferring user input degrades user experience opens worms personally would argue even current way selection implicitly tied new string hack simplifies vast majority usecases makes practical sense wanted write component exposes selection nt entirely gotten around yet makes sense", "d": "11/2015"}, {"body": "entirely sure asking following solve deep merging multiple batchedqueued called event achieve behavior outside events wrapping however nt generally needed design components single call setstate end deep merge state would best however obviously huge change may create large performance drawbacks might make sense special usecases definitely desirable default behavior managing like needs done", "d": "11/2015"}, {"body": "hmmm ran simple test nt seem batched queued issue lets say want transfer props component styles instance lets say prop could set x likely would two functions look like function parsex var newstyle merge thisstatestyle newstyleleft thispropx thissetstate style newstyle function parsey var newstyle merge thisstatestyle newstyletop thispropy thissetstate style newstyle case merging way suggested however one execution frame functions would run would end shallow merging end", "d": "11/2015"}, {"body": "lets say want transfer props component styles instance lets say prop could set x likely would two functions look like definitely arguable certainly depends context would generally recommend different approach way perform batching may also find benefits anyway somewhat irrelevant problem may still called multiple times various reasons case merging way suggested however one execution frame functions would run setstate would end shallow merging end need use callbackmethod showed receives current state object mutated last multiple pending safe", "d": "11/2015"}, {"body": "yeah def hard issue solve react people easily continue wrong without proper education maybe solvable react point thanks input", "d": "11/2015"}, {"body": "mikkoh nt misunderstanding callback solve problems still want avoid multiple calls batch performance reasons affect behavior", "d": "11/2015"}, {"body": "closing since nt think anything actionable react setstate function style give control need", "d": "11/2015"}, {"body": "little curious ran yeah looks like bug", "d": "11/2015"}, {"body": "noticed working reacttransmit universal components started spit warnings serverside rendering components call setstate clientside started server since upgrading react traced behavior found ismounted returns true server", "d": "11/2015"}, {"body": "note componentdidmount still called current workaround keep track mounted state manually", "d": "11/2015"}, {"body": "unlikely good first bug", "d": "11/2015"}, {"body": "start fixing nt understand something allow call return false cleanest way mark component unmounted simply unmount call options custom mount mark component mounted call simply unmount component render call best way imo another hack break previous tests", "d": "11/2015"}, {"body": "spicyj", "d": "11/2015"}, {"body": "laskos called server therefore component never really mounted server big difference two distinct lifecycle methods spicyj referring suggested fixes change behavior invoked lifecycle method calls would mean breaking existing components example calling andor components attempt run clientside code specifically put skippedontheserver lifecycle methods imho nt indepth knowledge react core worth fix small regression like overhauling component lifecycle affecting examples tests documentation et cetera", "d": "11/2015"}, {"body": "rickwong correct certainly nt want call server lifecycle component mount component yet mounted false server side", "d": "11/2015"}, {"body": "yes intended yes react nt deep copy props every component would prohibitively slow want behavior copy simply mutate first place", "d": "11/2015"}, {"body": "please use mention documentation", "d": "11/2015"}, {"body": "babel supports configuration jsx pragma", "d": "11/2015"}, {"body": "adrianrossouw cool want replace react entirely react bunch stuff built already like diffing abilities would nt want rewrite basically things like hey data changed let see objects need destroy create already modify tree based lifecycle methods think really powerful reimplementing something like far question right time wise interestwise someone wants infamous project open think react binding data tree structure good enough long nt rely animating values transforms since sloooow rely determining structure scene graph", "d": "11/2015"}, {"body": "trusktr sounds like looking explainer design pattern integration points interested well", "d": "11/2015"}, {"body": "guess", "d": "11/2015"}, {"body": "nt supported way yet look reactnative reactart apis still frequently changing nt support nt documented stabilized sure publicize broadly", "d": "11/2015"}, {"body": "would interested writing documentation website let reference previous existence since never part public api", "d": "11/2015"}, {"body": "sure would start", "d": "11/2015"}, {"body": "awesome documentation website live repo bulk docs pages addons docs want make new markdown file around readme root docs describing running server jekyll test changes locally", "d": "11/2015"}, {"body": "vim babelrc plugins syntaxjsx npm install babelpluginsyntaxjsx", "d": "11/2015"}, {"body": "little difficult follow everything going create simple jsfiddle demonstrates issue", "d": "11/2015"}, {"body": "nt actionable us asis going close post repro case happy take look seeing infinite loop first guess would inside code causing infinite rerenders nt heard reports similar least widespread problem", "d": "11/2015"}, {"body": "isolated amp fixed issue accidentally attempting render component every day instead days actually selected", "d": "11/2015"}, {"body": "could react create warning trying render array w components aid debugging", "d": "11/2015"}, {"body": "ashtonwar treat warnings errors little hard know draw line terms render limit easy imagine component syntax highlighting bunch source code token source file would component needs different colorstyle would mean rendering potentially tens thousands components obviously would perfectly legitimate use case suppose could print useful information little red flags eg large arrays slow render functinos etc cases renders took greater x seconds logic could start get complicated would still setting pretty arbitrary thresholds seems like would better could provide good devtools provide insight going react umbrella issue new devtools api open path better tooling", "d": "11/2015"}, {"body": "sure mean post code sample", "d": "11/2015"}, {"body": "ryanflorence possible pass objects like javascript var parent reactcreateclass render function return foo bar var child reactcreateclass componentdidmount function consolelog thispropschildrenfoo bar render return", "d": "11/2015"}, {"body": "closing unless hear back", "d": "11/2015"}, {"body": "shape", "d": "11/2015"}, {"body": "thanks answer jimbolla", "d": "11/2015"}, {"body": "aha thank", "d": "11/2015"}, {"body": "issue exemple wokrs well chrome nothing append since ok", "d": "11/2015"}, {"body": "likely duplicate fixed shipped react", "d": "11/2015"}, {"body": "ok sorry tried search nt find one", "d": "11/2015"}, {"body": "thumbsup worries", "d": "11/2015"}, {"body": "nt support currently spec still flux nt much demand", "d": "11/2015"}, {"body": "thanks answer spicyj", "d": "11/2015"}, {"body": "provide context using shadow dom enable css encapsulation aim build interface enabling user easily prototype react components need use stylecss encapsulated would spill given interface", "d": "11/2015"}, {"body": "reproduce may want file issue reactnative directly involved process", "d": "11/2015"}, {"body": "think table remove support inheritless classes enables null return values plain functions", "d": "11/2015"}, {"body": "awesome return thanks", "d": "11/2015"}, {"body": "hnordt react currently uses return", "d": "11/2015"}, {"body": "yeah currently limitation react constructs every class return nonobject get instance class back instead added requirement every class extend reactcomponent solve issue deprecates old behavior nt change outright solve sure another tracking issue though use one", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "sudo npm install g babel babelpresetreact nik fedora tut babel presets react watch src outdir lib cli moved package npm install g babelcli nik fedora tut babelcli presets react watch src outdir lib bash babelcli command found nik fedora tut sudo npm install g babelcli npm warn optional dep failed continuing fsevents npm err refusing delete usrbinbabel usrlibnodemodulesbabelcli file exists usrbinbabel move away try npm err system linux npm err command usrbinnode binnpm install g babelcli npm err cwd npm err node v npm err npm v npm err path usrbinbabel npm err code eexist npm err error rolling back error refusing delete usrbinbabel usrlibnodemodulesbabelcli npm err error rolling back clobberfail npm err error rolling back next npm err error rolling back npm err error rolling back objectoncomplete evalmachine npm err error rolling back error refusing delete usrbinbabel usrlibnodemodulesbabelcli code eexist path usrbinbabel npm err ok code nik fedora tut", "d": "11/2015"}, {"body": "see moved contain executable file package depends", "d": "11/2015"}, {"body": "thanks already done error thought something wrong sudo npm uninstall g babel sudo npm install g babelcli babelpresetreact", "d": "11/2015"}, {"body": "also experiencing precise issue", "d": "11/2015"}, {"body": "nikitcpp maybe wrong need review code detail msmicker could u pls show", "d": "11/2015"}, {"body": "babel came docs need updated reflect finish getting updated today minimal bits need assuming code needs transformed anybody specific issues using babel right place file issues likely issue need bring project", "d": "11/2015"}, {"body": "thanks helped man", "d": "11/2015"}, {"body": "zpao thanks help fixed issues however shoehorn browserify equation require statements top code need pass browserify order resolve dependencies appears nt working ideas", "d": "11/2015"}, {"body": "wpcarro idea browserify supposed solve", "d": "11/2015"}, {"body": "shot dark since nt know errors getting try", "d": "11/2015"}, {"body": "zpao trying follow facebook documentation work nt know insights thank response nonetheless ggalansmithee seems throws error encounters js syntax errors flow think begin babel filter browserify future users wrote simple shell script quickly automate transpiling browserifying", "d": "11/2015"}, {"body": "installed npm install savedev babelify following command began work browserify mainjs bundlejs babelify presets react", "d": "11/2015"}, {"body": "finally commands place sudo npm install g babelcli sudo npm install g browserify npm install react reactdom babelify babelpresetreact browserify srcmainjs bundlejs babelify presets react", "d": "11/2015"}, {"body": "mentioned browser bundle uses umd work multiple environments would recommend either bundling version react build npm detecting environment page wo nt changing build works", "d": "11/2015"}, {"body": "keep mind community currently uses fairly sparingly largely aggressively made comments feature unsupportedunstable facebook use react pretty heavily terms number components number programmers number users also use features like context long rolled public release publicly documented sometimes see usabilityscalability issues outside world say confidence context difficult reason props least part reason decided make contexttypes required usability nt advantage contexttypes allowing core make optimizations based knowledge component use also key factor decision anyway trying explain reasoning making context types required thinking matter changes substantially future large number people agree confusinginconsistent always reconsider", "d": "11/2015"}, {"body": "jimfb thanks reply understand reasoning appreciate elaborating internal use personally think small scale apps makes sense allow contexttypes optional leave open see public opinion favour thanks", "d": "11/2015"}, {"body": "see also current api nt fixed stone", "d": "11/2015"}, {"body": "gotten around extending implementing method perhaps thing could done core implementation", "d": "11/2015"}, {"body": "yaycmyk use componentwillmount else different", "d": "11/2015"}, {"body": "sebmarkbage ergonomics point view way seems better retains continuity stuff done side things", "d": "11/2015"}, {"body": "confused calling possible side things", "d": "11/2015"}, {"body": "sebmarkbage implemented function call within constructor extended basically emulating happens", "d": "11/2015"}, {"body": "zpao jimfb seems general issue chrome open url send file check example fails open google page fine related problem stackoverflow", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "makes app difficult test windows confirm switching production mode resolve us", "d": "11/2015"}, {"body": "yea sorry issues shipping tomorrow fixed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "related anchor tags elements well seen applying onclick div elements well anchors", "d": "11/2015"}, {"body": "elements", "d": "11/2015"}, {"body": "believe closed", "d": "11/2015"}, {"body": "thanks tip write fixes commit message issue gets closed automatically pr merged", "d": "11/2015"}, {"body": "polyfill nashorn module loader something like jvmnpm", "d": "11/2015"}, {"body": "browser use browserify create bundle nashorn understand", "d": "11/2015"}, {"body": "polyfill nashorn module loader easier build bundle compile time browser use browserify create bundle nashorn understand think approach taking reactjsnet currently still using ignoring deprecation error super janky", "d": "11/2015"}, {"body": "anything actionable left sounds like design debug code detect bad environments could updated check existence required globals", "d": "11/2015"}, {"body": "jarail sure mean nothing actionable", "d": "11/2015"}, {"body": "mean guard make misconfigure easier debug thanks ben", "d": "11/2015"}, {"body": "react nt use require internally nt think would make much sense hopeful people write call immediately see nt work realize need module loader", "d": "11/2015"}, {"body": "would proposed solution handling nashorn java environment", "d": "11/2015"}, {"body": "use module bundler like browserify make single bundle load much like people using react npm sending result browser sounds like something like jvmnpm might work", "d": "11/2015"}, {"body": "polyfill nashorn module loader theory jvmnpm project aims however tried failed getting work easier build bundle compile time maybe depends loading react reactdom cdn bundle js contain makes bundle changes every couple minutes development every week production lot smaller faster update including react reactdom bundle nashorn get work server well used work via approach going stop working option disappears hard time following reasoning guys take problem simple adding right place reactdom code turn user library polyfill commonjs modules target platform get reference mean grab bundled version reactdom reactdomserver already exposed silly actually nt bundle contains code never used hoping guys able come elegant solution us java devs", "d": "11/2015"}, {"body": "download nt knowledge address everything said directly two things jump nt using cdn serverside code worst downloaded cdn deploy applicationservice relying caching would poor way justify really want put react webpack along everything else serverside bundle browser absolutely fine use cdn little surprised caused issues dev builds nashorn nt hot reloading get webpackdevserver watchbuild still pretty quick even write extra mb js watch build keeps memory takes fraction second write mb disk also even nt include react bundle still want available bundler perform much static analysis really nt javanashorn dev vs browsernode dev issue lot longterm thinking goes modules broken lot code gets included backwards compatibility removed future nt think reactdom contain everything required reactdomserver future huge fan nashorn project long way go also invested seeing succeed also great see new js engine built unique perspective lot potential nt exist node said new lightly supported nashorn community needs accept certain extent lot existing patterns still need followed want support node modules", "d": "11/2015"}, {"body": "specific nashorn exact advice applicable javascript engine lot uses nt nodejs php c ruby etc requires type thinking since javascript engine nt support commonjs requires outofthebox perhaps one day get point modules supported natively js engines could load", "d": "11/2015"}, {"body": "people using react targeting browser also nt support natively highly recommend using commonjs system like browserifywebpacketc manage assets regardless platform targeting mean grab bundled version reactdom reactdomserver already exposed silly actually nt bundle contains code never used true current release true future versions", "d": "11/2015"}, {"body": "nt using cdn serverside code using cdn browser bundle contain react reactdom build extra bundle specifically server extra work nashorn community needs accept certain extent lot existing patterns still need followed want support node modules since react node module must used get api new till previous release everthing reachable global still interested hearing simply adding right place reactdom code would solve require nashorn users polyfill commonjs modules believe guys want build best possible system nashorn nt important target react still surely good reason make us jump hoops", "d": "11/2015"}, {"body": "mmmm love see seems guys going address thank", "d": "11/2015"}, {"body": "probably refer issue gaearon also want events know something bad happen display big fat red message developers fix bug usually nt look much console ship softwares consoleerror messages", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "enough nt need", "d": "11/2015"}, {"body": "fair enough though somewhat beside point original question related handling keyediterables ideas", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "biggest gripe w react community nodecentric cjsfirst instead build frontend apps everybody using frontend apps wink react first came module system nt clientside js bundlers like webpack browserify supported commonjs react examples currently use nt anything node per se", "d": "11/2015"}, {"body": "anuragramdasan dude gave update saying bad needed pull correct dependency good", "d": "11/2015"}, {"body": "gaearon fault sounded like scumbag troll totally venting experiences w react honest last month experience totally different stated good", "d": "11/2015"}, {"body": "im sorry could clearer hoping get response could clearer guess", "d": "11/2015"}, {"body": "anuragramdasan ah yes point lets keep issue open almost forgot took nearly full month get response anyone", "d": "11/2015"}, {"body": "month response closing", "d": "11/2015"}, {"body": "agree merri still cases client side rendering static html required instance case trying pass along html created react component party lib leafletjs opensource js map solution popups maps take html display whenever popup get clicked bind popup marker call sending static html popup options used accomplish using guessing work feels wrong use tool designated server side client side know", "d": "11/2015"}, {"body": "unfortunately addons use internals react nt exposed browser build nt really possible us recommend consuming addons npm control exactly gets bundled sounds doable though", "d": "11/2015"}, {"body": "oooh webjars pretty fancy", "d": "11/2015"}, {"body": "also seeing glad someone found reproducable case", "d": "11/2015"}, {"body": "think fixed", "d": "11/2015"}, {"body": "spicyj rough estimate would see published release fix sadly blocker us upgrading breaks lot places due lot animations", "d": "11/2015"}, {"body": "sure planning regression nt realize", "d": "11/2015"}, {"body": "afraid definitely popped upgrading nov ben alpert notifications githubcom wrote sure planning regression nt realize reply email directly view github", "d": "11/2015"}, {"body": "also seeing particularly unit testing many components page animate time", "d": "11/2015"}, {"body": "ditto", "d": "11/2015"}, {"body": "upgraded appears fixed", "d": "11/2015"}, {"body": "fixed animation react fork react base fiddle jsx", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "kind resolution using npm jest trying mock reactbootstrap test fails either typeerror syntaxerror added modules suggested comments unmockedmodulepathpatterns packagejson also followed dependencies reactbootstrap unmocked test upgrade node support jest installed npm", "d": "11/2015"}, {"body": "justinwyllie personally suggest either unmocking everything downgrading unfortunately nt time play whackamole", "d": "11/2015"}, {"body": "fixed jest towards end year clear solution mind need make sure work fine", "d": "11/2015"}, {"body": "recommend adding modules unmock patterns", "d": "11/2015"}, {"body": "spicyj thought fix issue validations line thought changing roughly tested manually browser works expected message getting displayed even text adds kindly let know approach taken correct go give pr", "d": "11/2015"}, {"body": "spicyj ping", "d": "11/2015"}, {"body": "change signature validatedomnesting also check whitespace nt right refer whitespace text whitespace whitespace character", "d": "11/2015"}, {"body": "also issue trying use react render tag nt rendered react unfortunately specific situation makes problematic react render element mentioned workaround nt helping", "d": "11/2015"}, {"body": "moving towards use would sidestep issue meantime nt think much sorry wanted get fancy could something hacky updates svg otherwise renders something theory something like caveat nt run support js function renderreactintosvg element node var mynode documentcreateelement div reactdomrender mynode svgreparenter reactcreateclass reparent function assume single child node would map expectations subbing code reactrender thispropsintoreplacechild thispropsintofirstchild thisrefsrootfirstchildclonenode true componentdidupdate function thisreparent componentdidmount function thisreparent componentwillunmount function cleanup thispropsintoremovechild thispropsintofirstchild render function todo maybe use callback refs return thispropschildren", "d": "11/2015"}, {"body": "zpao could related take care creating svgelements inside right namespace mostly least", "d": "11/2015"}, {"body": "yea would solve effectively effectively wrote think moving away innerhtml hopefully next release", "d": "11/2015"}, {"body": "merged docs using web components within react docs combined posts issue roughly say topic moment unless questions think close issue", "d": "11/2015"}, {"body": "background shorthand backgroundcolor backgroundimage backgroundrepeat backgroundattachment backgroundposition background shorthand backgroundsize", "d": "11/2015"}, {"body": "zpao spicyj syranide could solve correctness issuesconcerns use instead setting properties individually understanding always claimed diffing css faster letting browser ben perf test chrome seems indicate nt actually slower fact maybe faster diffing think would solve concerns one fix thoughts", "d": "11/2015"}, {"body": "zpao spicyj syranide could solve correctness issuesconcerns use csstext instead setting properties individually yes performancewise near identical setting property individual like except cheaply skip unchanged properties definitely want reason could proven wrong last remember messing around", "d": "11/2015"}, {"body": "right performance nearly identical correctness easier since punt browser seems like pure win could still cheaply skip properties unchanged covers common case based reading seems performance difference vs properties tossup sometimes one wins times wins depends specifics microbenchmark overall tight race however bunch measurable disadvantages manually diffingsetting css properties things like correctness issues vendor prefixes unnecessary codecruft core etc guess intuition performance nearly identical factors taken account making seem like pretty clear win anyway maybe debate another threadissue sounds like answer initial question yes would fix correctness issueconcern", "d": "11/2015"}, {"body": "right performance nearly identical correctness easier since punt browser seems like pure win could still cheaply skip properties unchanged covers common case skip properties properties must present string problem", "d": "11/2015"}, {"body": "csstext skip properties properties must present string problem yeah true might loose pathological case wins cases argument wash overall clear one technique faster nt think performance argument holds water maybe wrong nt numbers already updating css property element ie repainting element anyway suspect additional cost parsing couple additional properties really nt big deal especially cost offset perf wins cases fact wash argue better simplicity perspective nt trying failing simulate behaviors browsers already implementedoptimized", "d": "11/2015"}, {"body": "please move discussion new issue helpful buried comments another issue already closed", "d": "11/2015"}, {"body": "yeah would love could add refs stateless components worked testing feasible stateless components javascript beautiful tests really ugly", "d": "11/2015"}, {"body": "work reacttesttree might interest stateless components hit us hard since original premise testtree built walkable tree refs stateless components obviously mess discussion impression got jimfb sebmarkbage saying refs really serve specific purpose right many things abuse reality used purely react api yet provide official alternative look react testutils nowhere even talk mention using refs testing seems like reality refs became unintentional convenience testing given abandoned using refs reacttesttree implementing new system using custom props looks bit like jsx var mycomponent reactcreateclass render function return foobar var reactcreateclass render function return var tree testtree treeget foo click treeget bar length treeget bar innertext foobar treegetin baz boz click believe creates much clearer distinction regular refs testing refs also hoping write babel transform strip testing props production working version branch anyone wants try", "d": "11/2015"}, {"body": "awesome really good idea talk coworkers", "d": "11/2015"}, {"body": "oliverwoodings would love react officially supported something similar team created way assurance longevity support tool like", "d": "11/2015"}, {"body": "chapinka yeah understand concern would love something like end react ca nt see happening quickly assure maintaining testtree long possible many internal projects use also nt affect production code reason testtree stop updated would need adjust tests", "d": "11/2015"}, {"body": "ngerritsen realy helpful", "d": "11/2015"}, {"body": "react warn component tries render tag legit reason right saw case component rendering redundant tags worked still rendered click handlers inside nt firing", "d": "11/2015"}, {"body": "graue sometimes ssr fpr people want render body tag generally discourage semicommon use case supported iirc", "d": "11/2015"}, {"body": "maybe warn rendered real dom anyway realized issue test utils issue filed instead", "d": "11/2015"}, {"body": "one place comes using containers like relay relay containers try attach wrapped component means ca nt use stateless components annoying time ref irrelevant nt allow anything seems like nice sometimes able use stateless component right ca nt", "d": "11/2015"}, {"body": "perhaps duplicate", "d": "11/2015"}, {"body": "p thu nov joe lencioni notifications githubcom wrote perhaps duplicate reply email directly view github", "d": "11/2015"}, {"body": "guess still using old devtool beta", "d": "11/2015"}, {"body": "fixed react", "d": "11/2015"}, {"body": "since merged released", "d": "11/2015"}, {"body": "came wondering stateless components take look", "d": "11/2015"}, {"body": "caused trouble tests see people mentioned ticket problem using nested calls selector functions find components interested looks like longer possible nt really see alternative test utils functionally equivalent", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "fontstyle would nice saw patch hope makes master", "d": "11/2015"}, {"body": "happy take pull request passes defaultvalue dom looks like linked directly attribute probably best way change code treated attribute using instead property config equivalent setting reactdominput manually set instead going dompropertyoperations open suggestions", "d": "11/2015"}, {"body": "dylanpiercey could agree", "d": "11/2015"}, {"body": "facing issue news server generate client", "d": "11/2015"}, {"body": "spyseth issue unrelated make sure charset nt resolve please work elsewhere file issue pinpoint bug react", "d": "11/2015"}, {"body": "page already interpreted really see difference issue mine", "d": "11/2015"}, {"body": "zpao could caused server side server locales generated posix ones", "d": "11/2015"}, {"body": "spyseth read rest issue said entity piece probably red herring original reporter never responded rest discussion ordering attributes discussion issue actually encoding please file new issue complete example reproduce otherwise impossible help", "d": "11/2015"}, {"body": "spicyj mridgway outcome need make change", "d": "11/2015"}, {"body": "issue turned issue package switching using returns keys wrong order object key become large see version moved away using chrome also issue using polyfill server chrome native client hit checksum issue polyfills checking enumeration order overriding native version fails see objectassign corejs used babel polyfill", "d": "11/2015"}, {"body": "good read", "d": "11/2015"}, {"body": "skidding think dirty deal component local state thats approach took recent project sure like much jimfb nice article met richard last week actually elm meetup highly suggest reading elm architecture tutorial discusses interesting pattern similar redux generically played around implemented elm pattern coffeescript definitely led insights", "d": "11/2015"}, {"body": "certain whether done way nt impact performance thought mention worth really nice able debug production react application angular setting something refreshing browser angular keys add necessary debug information way something similar without impacting performance nondebug mode would cool", "d": "11/2015"}, {"body": "interested solved problem", "d": "11/2015"}, {"body": "alright since multiple people asked webpack config testing add additional code way requiring get bundle errors however believe addons distributed separately probably needed anymore", "d": "11/2015"}, {"body": "issue", "d": "11/2015"}, {"body": "ran", "d": "11/2015"}, {"body": "update see released kind tests still failing", "d": "11/2015"}, {"body": "mihaialexe think add test pull request merged get around yet", "d": "11/2015"}, {"body": "also experimenting solution results found repo reactkeepstate", "d": "11/2015"}, {"body": "think two solution different perspectives still havent come conclusion like use cursors amannn solution similar clojurescript interesting powerful good encapsulation use elm architecture involves little extra work amazing powers abstraction redux tries align pattern", "d": "11/2015"}, {"body": "spicyj would handle situation child component find dom node stream instance simply clone props obviously immutable", "d": "11/2015"}, {"body": "months none us tell seems like something best suited stack overflow hopefully got worked sorry", "d": "11/2015"}, {"body": "going close nt seen come recently definitely plan clearer job explaining usage like revamp docs", "d": "11/2015"}, {"body": "blairanderson fwiw recently found sneaky regressions migrating app lot headache realized someone mutating child props like hard pinpoint since error nt really point particular direction however easily fixed found replacing hopefully someone find helpful moving forward", "d": "11/2015"}, {"body": "jordancardwell gotten warning dev mode react try warn previous version whenever making breaking changes fix warnings migration next version go smoothly", "d": "11/2015"}, {"body": "jimfb yeah actually something react really good made migrating new versions pretty pleasant part definitely missed deep dark corner app clearing warnings update said cases happens specificdescriptive error could really helpful maybe optionally logging dump describing unexpected variation dev mode anything prevent dev iterating rounds commenting components chunks render methods pinpoint bad thing happened flavor bad thing case directly mutating child props familiar react internals probably better idea feasible", "d": "11/2015"}, {"body": "jordancardwell exactly example text error message warning nt set react component instead specify correct value initially creating element use reactcloneelement make new element updated props", "d": "11/2015"}, {"body": "jimfb right familiar warning messages deprecations breaking changes future versions react stated previous comment definitely missed deep dark corner app clearing warnings update missed particular warning one area app updating corrected rest warnings thrown referring error message something app causes invariant violation current version whatever may time contextual information point right direction would pretty valuable anyone finding situation react always extremely helpful error messages documentation around common errors comment feasibility providing information around invariant violations help situation unwittingly done something stupid cause failed update something migration", "d": "11/2015"}, {"body": "supposed point clearly feasible would make sense leave descriptive messages people shoot footguns dev mode though still breaking change dev get helpful info", "d": "11/2015"}, {"body": "jordancardwell nt freeze props dev browsers get error stack trace like", "d": "11/2015"}, {"body": "mixins antipattern realworld composition classes", "d": "11/2015"}, {"body": "mixins antipattern realworld composition classes agreed even decorators still decide base class decorator still get tied constructor keyword stamps nt problems see reactstamp react components", "d": "11/2015"}, {"body": "pure functional solve composition problem class mixins keep things immutable stateless react hopes people implement stateless render meanwhile encourages using stateful oo class frustrates", "d": "11/2015"}, {"body": "jimfb jamesmanning wanted chime developer native english speaker mental model scry confusing stackoverflow post explaining confusion upvotes suggest alone admit even thorough explanation slightly clearer", "d": "11/2015"}, {"body": "able make extension work requiring react gulpfile sure would work webpack file var react require react", "d": "11/2015"}, {"body": "noticed thread kinda quiet please redirect discussion moved elsewhere quite like idea introducing subtle side effects nt seem appropriate breaks pretty important contract component sometimes usually dictate output move tracking logic source could simply call response tracked changes keep function nice simple code sample var users new reactivecollection class component extends reactcomponent new lifecycle method gets wrapped trackerautorun returned object simply gets passed setstate trackedstate return users usersfind fetch behind scenes base class something along lines class reactcomponent componentdidmount thiscomputation trackerautorun gt thissetstate thistrackedstate", "d": "11/2015"}, {"body": "oztune worth noting side effects internal react core semantically equivalent returning tuple containing jsx elements objectsread reason tracking within nt antipattern iff react responsible tracking reads moving logic separate function work discussed semantically equivalent function leads duplication logic specifying first method going read actually read second method totally unnecessary error prone two methods ever get sync lead pretty subtle bugs simple components relatively easy keep sync long nt forget component starts getting complex becomes exponentially difficult keep sync whole point combining avoid unnecessary duplication logic make sure whatyoureadiswhatyouuse", "d": "11/2015"}, {"body": "jimfb thanks thorough answer questions specifying first method going read actually read second method totally unnecessary error prone specifying reading read within throwing results method nt read original data source anymore accessing two methods ever get sync lead pretty subtle bugs different way things data coming tracker conceptually different piece state seem like everything flowing established channels could lead less confusion line", "d": "11/2015"}, {"body": "small example illustrate point say model library completely synchronous would model react component use b nt b react way understand method touch least amount globals possible fine example first post pretty much global nt method supposed rely data within scope component much possible nt separation created first place", "d": "11/2015"}, {"body": "oztune neither options bad applications written react probably going want sort data management architecture like flux relay responsible managing application data probably would nt want store application data internal state component root application proposal data remains data layer fluxreduxrelaywhatever components subscribe data reading data data changes appropriate components rerender like suggested copystore data prior rendering issues duplication state source truth confusing since two copies data details similar antipattern see fetching first function fails copyreturn one data elements needed render render function crash least return wrong result totally avoidable data need datastore nt copy fetching rather reasoning data needed easy fetch everything instead trying figure minimal set need wasteful performance perspective results deathbyathousandpapercuts component slightly wasteful result whole application slow react apps often fast intentionally make difficult fall antipatterns three issues evaporate definition use based actually used render additionally copy data manually means managing subscriptions manually need know data changes error prone super easy forget unsubscribe one data sources component unmounts oh manual subscriptions super sideeffectfull", "d": "11/2015"}, {"body": "jimfb thanks saying better read data fluxreduxwhatever library directly right within instead putting state reading makes sense remember reading opposite somewhere looked one official examples flux site nt copying flux store state using right within render still recommended approach another thing noticed bunch places react source warns users messages like nt approach break contract misunderstand something thanks bearing really appreciate thorough answers starting implement side loading apps want know react team recommends", "d": "11/2015"}, {"body": "yeah thinking flux example creates shadow copy state shadow copies bad tend think reflects negatively example however example redeeming qualities namely commonly used pattern especially context data transformationmemoization also render function clearly pure record example shows component manually subscribingunsubscribing datastore exactly opposite would want perfect world whole reason issues discussing sideways data loading say example good bad simplistic still learning best practices continue improve libraries documentation time yes components pure function props state however implement flux state may datastore rather components primary point sentence communicate fact components never imperatively mutate dataui see allow paste remainder sentence first search result linked function pure meaning modify component state returns result time invoked read write dom otherwise interact browser eg using", "d": "11/2015"}, {"body": "jimfb thanks clearing thanks work react real pleasure use looking forward seeing best practices community brings forward time", "d": "11/2015"}, {"body": "ezequiel feel following deprecate create new method called uses functionality create new methods actually renders dom child cleans given child component running problems trying test dimensions component ie", "d": "11/2015"}, {"body": "could even make take method automatically cleanup us eg", "d": "11/2015"}, {"body": "looks like got fixed point sure passing test since merged yay", "d": "11/2015"}, {"body": "posting mostly nt loose link people inevitably ask good article state hosting", "d": "11/2015"}, {"body": "spicyj solution worked question similar way example say place template want put react class like set dom elements like case class run inside dom element function put question check type variable depending render differently thanks", "d": "11/2015"}, {"body": "render div also pass return inside", "d": "11/2015"}, {"body": "attempted solve pr based spicyj recommendations", "d": "11/2015"}, {"body": "mridgway bumped problem react end try using react peer dependency subcomponents nt work", "d": "11/2015"}, {"body": "jimfb seems like pretty big statement pretty significant part value proposition developer happiness react poses team least would great could expand information decision somewhere suggesting using flow seems like pretty big leap incredibly low friction quickly provide completely new tool workflow ha seems like odd choice thanks lt", "d": "11/2015"}, {"body": "plasticine framework define notion proptypes scalable approach switched classes similar reason framework define notion classes mixins etc scalable community generalized tools become available frameworkspecific hacks fade away pretty consistent messaging point", "d": "11/2015"}, {"body": "jimfb fair enough thanks clarification", "d": "11/2015"}, {"body": "currently using similar approach jimbolla fulfillment handler wrapped proxy function passes arguments onto original callback unless canceled case proxy becomes noop proxy canceled unmount", "d": "11/2015"}, {"body": "sebmarkbage jimfb following thread alt thread months curious core team reached consensus problem least general direction", "d": "11/2015"}, {"body": "oztune updates focused priorities post one threads update topic", "d": "11/2015"}, {"body": "final solution issue problem tried window mystringval however fails somehow firefox following code posted spicyj seems address problem child unknown code written wondering react support variable string name component name var allmycomponents var child reactcreateclass allmycomponents child child var component allmycomponents name", "d": "11/2015"}, {"body": "perhaps duplicate", "d": "11/2015"}, {"body": "please issue pass props around every method component class ugly nah good better solutions", "d": "11/2015"}, {"body": "limitation current ref function often use pattern using ref sort external controller helps implementing behaviors component example takes change callback parameter exposes refs functions control dropdown open closed javascript class mycomponent extends reactcomponent state open false ddc dropdowncontroller open gt thisonchange open onchange open thissetstate open render return thisstateopen amp amp controller manually creates event handlers dropdown closed click event happen outside dropdown working fine sometimes would like use refs multiple elements also trigger dropdown opening triggering dropdown closing unfortunately wo nt able clean events handler correctly since nt pass instance component unmounted ref detached one solution could ref function invoqued first parameter also instance unmounted component second parameter monkey patched working fine would prefer able avoid monkey patch", "d": "11/2015"}, {"body": "hm currently working view recycling allow us efficient use resources long lists tabs share similar behaviors one interesting qualities problem instances longer necessarily tied state component sure means particular problem yet suspect relying instance identity might problematic maybe though", "d": "11/2015"}, {"body": "always proxy dom workers emits messages dom main thread trivial render elements handling events require work proofofconcept rendering found", "d": "11/2015"}, {"body": "fyi end creating npmimapicheck could use work hundreds developers benefiting via npmimangularformly", "d": "11/2015"}, {"body": "looking forward", "d": "11/2015"}, {"body": "like op impression contained instances components name seems misleading intended behavior", "d": "11/2015"}, {"body": "docs unclear point improve", "d": "11/2015"}, {"body": "current thinking rolled devtools via new devtools api instead core closing", "d": "11/2015"}, {"body": "got situation mridgway asked question stack overflow", "d": "11/2015"}, {"body": "suggestion use instead nt mess", "d": "11/2015"}, {"body": "upgraded react noticed add arbitrary attributes custom elements nt work guessing closed", "d": "11/2015"}, {"body": "hacked solution replaced checks environment variable worked pretty well pullrequest similar approach would right direction accepted thinking replace checks something like could set production build error reporting enabled still allow minifiers optimize unused code best way approach", "d": "11/2015"}, {"body": "tried schovi add support animating multiple classes without breaking current api sure approach case provided pass one css class without providing straightforward behaviour generating class options leave behaviour generates class like nt want append anything active class leave user instead backwardscompatible detect one class provided animation type append one class leave empty solution choose sure solution would like open discussion preview third version", "d": "11/2015"}, {"body": "allowing multiple class names like animate bounce would perfect", "d": "11/2015"}, {"body": "seeing logged sometimes well helpful stack trace little context unable get property firstchild undefined null reference reactlibreactmountjs jfindcomponentroot line firstchildren deepestancestorfirstchild reactlibreactmountjs jfindreactnodebyid line return reactmountfindcomponentroot reactroot id reactlibreactmountjs event line return nodecache id reactlibeventpluginutilsjs executedispatch line eventcurrenttarget injectionmountgetnode domid reactlibeventpluginutilsjs eventpluginutils line executedispatch event simulated dispatchlisteners dispatchids reactlibeventpluginhubjs u line eventpluginutilsexecutedispatchesinorder event simulated reactlibeventpluginhubjs arr line return executedispatchesandrelease e false reactlibforeachaccumulatedjs foreachaccumulated line arrforeach cb scope reactlibeventpluginhubjs eventpluginhub line foreachaccumulated processingeventqueue executedispatchesandreleasetoplevel reactlibreacteventemittermixinjs eventpluginhub line eventpluginhubprocesseventqueue false", "d": "11/2015"}, {"body": "seemingly similar stack trace also noticed undefined reactlibreactmountjs reactmount line firstchildren deepestancestorfirstchild reactlibreactmountjs reactmount line return reactmountfindcomponentroot reactroot id reactlibreactmountjs injection line nodecache id reactmountfindreactnodebyid id reactlibeventpluginutilsjs executedispatch line eventcurrenttarget injectionmountgetnode domid reactlibeventpluginutilsjs eventpluginutils line executedispatch event simulated dispatchlisteners dispatchids reactlibeventpluginhubjs executedispatchesandrelease line eventpluginutilsexecutedispatchesinorder event simulated reactlibeventpluginhubjs arr line return executedispatchesandrelease e false reactlibforeachaccumulatedjs foreachaccumulated line arrforeach cb scope reactlibeventpluginhubjs eventpluginhub line foreachaccumulated processingeventqueue executedispatchesandreleasetoplevel reactlibreacteventemittermixinjs runeventqueueinbatch line eventpluginhubprocesseventqueue false reactlibreacteventemittermixinjs reacteventlistener line runeventqueueinbatch events reactlibreacteventlistenerjs handletoplevelwithoutpath line reacteventlistenerhandletoplevel bookkeepingtopleveltype topleveltarget topleveltargetid bookkeepingnativeevent geteventtarget b snip reactlibreacteventlistenerjs method line handletoplevelwithoutpath bookkeeping reactlibtransactionjs transaction line ret methodcall scope b c e f reactlibreactdefaultbatchingstrategyjs batchingstrategy line transactionperform callback null b c e reactlibreactupdatesjs reactupdates line batchingstrategybatchedupdates callback b c e reactlibreacteventlistenerjs reactupdates line reactupdatesbatchedupdates handletoplevelimpl bookkeeping", "d": "11/2015"}, {"body": "jiyinyiyong browniefed meant two copies react discusseddescribed sure actually problem worth checking", "d": "11/2015"}, {"body": "lencioni since jumping thread months later stack trace assuming stack trace correspond code right looks like bug clear repro based gsantome response looks like running going close issue reopen incorrect open new issue get consistent repro indicates bug react", "d": "11/2015"}, {"body": "assuming stack trace correspond code right correct arrived via searching posted stack traces case helpful", "d": "11/2015"}, {"body": "investigate shallow rendering little surprised find jest dependencies react test utils please either document dependency much preferred please nt depend jest believe still cases shallow rendering nt appropriate great guidance best mock components case react testing page would clear place explain", "d": "11/2015"}, {"body": "hi first test case first post works within certain app context working test case already mounted component throw second render pass leaves react inconsistent state breaking code thought approaches catching render error string instead component might good render empty good log thrown error console invariant however sure correct way handle feedback working pr atm", "d": "11/2015"}, {"body": "would huge improvement", "d": "11/2015"}, {"body": "seriously taken days figure random error scrollbarjs unmounting mousemovetracker twice fixeddatatable caused two reacts good bug seemingly ca nt fixed react put version number window object never add already better hours hours wasted many people", "d": "11/2015"}, {"body": "aphillipo thought fixed displaying warning", "d": "11/2015"}, {"body": "yep upgraded everywhere including inside module somehow deleting react nodemodulesreactdatatablenodemodules fixed bug see maybe something wrong webpack config weird fixed two identical version included subtle variant bug", "d": "11/2015"}, {"body": "aphillipo part problem reactdatatable nonpeer dependency cc pieterv cause npm fetch separate react installation module", "d": "11/2015"}, {"body": "okay thanks syranide try adding peer dep however want run build module developing datatable within main project best way accomplish without issues", "d": "11/2015"}, {"body": "aphillipo might try upgrading improvements handles dependencies better avoiding multiple instances given package since installs flat structure instead nesting dependencies within packages along moving library writing solved similar problems", "d": "11/2015"}, {"body": "would amazing", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "isrequiredornull similar using custom validator want ensure prop specified nt care null", "d": "11/2015"}, {"body": "hitting problem well workarounds time could nt get work suggested", "d": "11/2015"}, {"body": "none ones already mentioned", "d": "11/2015"}, {"body": "long stale closing", "d": "11/2015"}, {"body": "combining methods argument means less repetition anyone needs separation check arg", "d": "11/2015"}, {"body": "either truefalse either truefalse state updated becomes false", "d": "11/2015"}, {"body": "hey old thread recently moved react warnings consolewarn consoleerror wondering possible trigger callback everytime react detects problem understand may want throw bad proptypes could lead different app behaviors devprod mode would really nice hability plug code something bad happens let explain sometimes developers watch console notice react errors logged could plug would ship much less kind bugs also would activate failfast alerting production subset users like company members possible", "d": "11/2015"}, {"body": "slorber meantime using little hack unit test setup fail tests cause warnings const consoleerror consoleerror consoleerror function firstmessage rest firstmessagestartswith warning throw new error processonce unhandledrejection error gt consoleerror processexit", "d": "11/2015"}, {"body": "used something similar past nt like proxy consoleerror messes stacktrace shown chome console", "d": "11/2015"}, {"body": "slorber take look", "d": "11/2015"}, {"body": "hi around years passed plan issue several cases team need prevent event bubbling inner components workaround us painful drill target element adding stop propagation care clean remove listener unmount", "d": "11/2015"}, {"body": "really unfortunately nt good model events nested trees interact synthetic events native events two different concepts example native event could result synthetic event call event prevent dispatch native event render tree form synthetic events separately tree right probably need change fix properly afraid shortterm solution would patch solves cases makes code harder reason probably need holistic rethinking problem make good solution something encounter much much focused react single render tree", "d": "11/2015"}, {"body": "separate complete reactsvg loving working svg react far incompleteness support makes go semicomplex application", "d": "11/2015"}, {"body": "spicyj plan eliminate need separate config need keep updating hopefully complete soon mean time please hold tight", "d": "11/2015"}, {"body": "animatetransform", "d": "11/2015"}, {"body": "dominatebaseline", "d": "11/2015"}, {"body": "like zpao said going fix good soon attributes used locking issue", "d": "11/2015"}, {"body": "hello probably sound redundant using react bower package trying use keymirror inside reactjs exposed global object use without import another keymirror package", "d": "11/2015"}, {"body": "ca nt", "d": "11/2015"}, {"body": "dupe", "d": "11/2015"}, {"body": "seems already fixed longer exist current codebase original implementation instead exposed directly see", "d": "11/2015"}, {"body": "yeah rewrote", "d": "11/2015"}, {"body": "mattweb", "d": "11/2015"}, {"body": "anyone searching like works smile", "d": "11/2015"}, {"body": "simple counter componentspecific string works fine jsx import react component react let count class inputui extends component constructor props super props export default inputui scenario wo nt work", "d": "11/2015"}, {"body": "davidgilbertson serverrendering work trivial setups everything beyond cause become outofsync client server cause markup mismatch", "d": "11/2015"}, {"body": "thought might case got components hundred instances nested levels deep would consider nontrivial works fine specific scenario comes mind initial clientside markup rendered wo nt match markup generated webpack hot swapping make sync nt care", "d": "11/2015"}, {"body": "update", "d": "11/2015"}, {"body": "update", "d": "11/2015"}, {"body": "tsheaff find solution end also onchange formatting text field", "d": "11/2015"}, {"body": "tsheaff mikeljames problem react nt enough information something intelligent assuming represents cursor suppose input looks like type momentarily input looks like immediately returns cursor go even human looking unclear could go space figuring programmatically seems impossible general case even content return either hard imagine algorithm might work reliably let know missing something impossible requires knowledge specific problem space react nt attempt anything intelligent cursor set selectionstartselectionend manually appropriate domain case filtering characters would possible write general solution think may still better left thirdparty component", "d": "11/2015"}, {"body": "yes mikeljames impossible general spicyj explains almost certainly better jumping end specific case formatting using simple heuristic nt make sense react burn extra cycles attempting general eg formatting could additive subtractive perhaps linking issue related discussion could helpful official docs imagine formatting phone numbers credit cards ssns quite common", "d": "11/2015"}, {"body": "related issue iframes needs different fix component using twitter api embed tweet works great component rearranged react part list key happens iframe becomes completely empty ca nt reload src twitter api javascript magic directly iframe would need clean iframe load new one using api happens problem component way knowing happened lifecycle method telling dom manipulation sth like since component also uses purerendermixin literally nothing happens gets moved dom nt seem possible fix outside react edit found workaround particular usecase least chance reload tweet iframe fire event reloaded even though twitter generated iframe nt", "d": "11/2015"}, {"body": "apologies opening thread please see download stats attached npm page linkedstatemixin seems quite popular still planning deprecating mixin", "d": "11/2015"}, {"body": "yes think hard build component behavior sure explain ease migration", "d": "11/2015"}, {"body": "used velocityreact solved indirectly", "d": "11/2015"}, {"body": "check react motion", "d": "11/2015"}, {"body": "also prints warning render server annoying", "d": "11/2015"}, {"body": "odd would nt expect code run using server rendering", "d": "11/2015"}, {"body": "see warning chance disable", "d": "11/2015"}, {"body": "nt tried yet could interest", "d": "11/2015"}, {"title": "feat allow body take object", "body": "currently request params needs string also allow pass object stringify automatically cc jeffbcross robwormald", "num": "5517", "d": "11/2015"}, {"title": "feat improve ergonomics search params", "body": "currently one construct hand like think improve ergonomics one write cc jeffbcross robwormald", "num": "5516", "d": "11/2015"}, {"title": "tests catch errors rejected promises automatically", "body": "javascript unit tests currently promise rejections caught promise returned like able catch globally see comments", "num": "5515", "d": "11/2015"}, {"title": "ca nt build angular fresh clone", "body": "cloned angular repo went steps developer docs build failing steps reproduce clone master install dart sdk install dartium set dart env variables running node running npm npm install looks good run nodemodulesbingulp build lintprotosdart errored ms error generated dart protobuf files date please run found modulesdarttransformlibsrctransformcommonmodelannotationmodelpbdart found modulesdarttransformlibsrctransformcommonmodelimportexportmodelpbdart found modulesdarttransformlibsrctransformcommonmodelparametermodelpbdart found modulesdarttransformlibsrctransformcommonmodelngdepsmodelpbdart found modulesdarttransformlibsrctransformcommonmodelreflectioninfomodelpbdart run nodemodulesbingulp genprotosdart dart sdk detected using gulpfile partyangulargulpfilejs starting genprotosdart genprotosdart errored ms error could detect protoc failed rebuild dart proto code objectmoduleexportsgenerate c usersgeneric gulp c usersgeneric moduleexports c usersgeneric gulporchestratorruntask c usersgeneric gulporchestratorrunstep c usersgeneric gulporchestratorstart c usersgeneric c usersgeneric processtickcallback functionmodulerunmain startup process general picky node npm versions right versions installed npm installed correctly ca nt build project machine running windows", "num": "5514", "d": "11/2015"}, {"title": "improve async pipe support rx", "body": "use check determine object observable change reason async pipe depend anything rx specific used observables implement protocol instance used different version rx create sync behaviorsubject bind template like see instead showing first value show null fix need change", "num": "5509", "d": "11/2015"}, {"title": "form number input valid", "body": "looks like numeric input fields nt accept valid value following markup reporting digits reporting digits required validation div shows form allowed submit", "num": "5507", "d": "11/2015"}, {"title": "feat router allow components nullundefined", "body": "currently working kind contacts app ran use case nt found satisfying solution yet thing basically holds display views one views view call combines list contacts detail view contact contact list always shown whereas details view either empty contact loaded show details contact list template looks like root component created route created following child routes thing want able load either filled would filled know contact display would empty otherwise empty expectation would still route would display list contacts way found achieve create empty template create route uses fill life expect expect create route either leaves component part sets vision would work sure makes sense real world app would probably sort dummy component displays text please click contact load anyways wonder strong reason prevents us showing components empty plunkr demonstrates problem", "num": "5505", "d": "11/2015"}, {"title": "proposal convention export providers angular libraries", "body": "consumer thirdparty angular libraries may immediately really clear providers load including library example installing thirdparty library like consumer library must know providers load without knowing inner workings library javascript must know import import translateservice specify required providers bootstrap appcomponent translateservice make easier proposal convention convention angular libraries export property includes providers need loaded default javascript simply import providers alias import providers load providers library author specified bootstrap appcomponent would help consumers immediately load providers without knowing inner workings library loss flexibility consumer still choose ignore default export specify individual providers needed prior art angular team already uses similar approach angular libraries javascript import routerproviders bootstrap appcomponent routerproviders next others feel add angular styleguide already one", "num": "5503", "d": "11/2015"}, {"title": "bug child routers root components path must throw pushstate error", "body": "rootrouter appts configured like path redirects child router child component case indexcomponent configured like links indexcomponent template always throw following error double slashes front hreflink router translates route rootroutercommit method automatically prefixes slash emitpath assumes emitpath possible already leading however path childcomponent actually possible emitpath defined stringifyinstructionpath method defined use case instructioncomponenturlpath empty stringifyaux instruction empty stringifyprimaryprefixed leading propose fix bug checking rootroutercommit method whether emitpath leading slash case adds another one", "num": "5502", "d": "11/2015"}, {"title": "component completely recreated using canreuse", "body": "might misunderstanding purpose canreuse noticing component recreated scratch navigating back route radio button retains value returning impression canreuse return value false would recreate entire component dom template typescript canreuse next componentinstruction prev componentinstruction return false code demo steps reproduce select gender navigate away different component navigate back observe selected gender step retained despite canreuse returning false", "num": "5500", "d": "11/2015"}, {"title": "whats reason behind frequent snapshot releases", "body": "almost three weeks ago yjbanov started frequently releasing snapshots question whats reason behind limited perception find annoying ca nt see directyl github current alpharelease severe problem still view packagejson look npmjscom reason behind flooding repo tagsreleases", "num": "5499", "d": "11/2015"}, {"title": "controlgroupcontrols returns abstractcontrol", "body": "currently working controlgroup control get control within controlgroup like get abstractcontrol problem ca nt use method abstractcontrol since method control class get error within ide compiling running code anyway work since runtime actually receives control abstractcontrol", "num": "5497", "d": "11/2015"}, {"title": "using rxjs functional way", "body": "posted sample code rxjs github shows integration rxjs http list view paging support guidelines using reactive principles components", "num": "5496", "d": "11/2015"}, {"title": "directive binding", "body": "trying create reusable textinput component set forms right able show data model textinput component ca nt make way binding change modelname whenever type plunker form component import component oninit coredirectives formdirectives import textinput widgetsformtextinput component selector formedit directives coredirectives formdirectives textinput template export class formeditcomponent public model id name abc textinput import component view input coredirectives component selector textinput view directives coredirectives template export class textinput input id string input label string input value string", "num": "5495", "d": "11/2015"}, {"title": "ngmodel example work windows edge", "body": "ngmodel plunker example work windows edge browser", "num": "5494", "d": "11/2015"}, {"title": "smart routes", "body": "hello want propose extend router urlparser angular make smarter big projects deal complex routes optional params want work one route also keep simple clean also nt want duplicated urls empty segments something like example pagination page access page via also nt want url like avoid kind problems made backend framework smarter routes resolve issues described happy implement standard angular router make community happier made way define parameter may optional default value restrict regex add symbol end make greedy example equal equal define optional part route would valid segment inside syntax goes recursively example example route syntax greedy required segment could symbol doest exists segment disappear greedy optional segment match set greedy also required segment default value could number starts valid via next urls call params get nt value default value call get call get call get get idea smart big plus seo cheers", "num": "5492", "d": "11/2015"}, {"title": "changedetection breaks component mutates input", "body": "component uses changedetectionstrategyonpush one inputs gets modified internally within component response event handler subsequent modification component inputs picked change detector plunker reproduce click set click set click set expected result progress bar set actual result progress bar set", "num": "5491", "d": "11/2015"}, {"title": "observable sequence click events using rxjs", "body": "using rxangularjs library click events turned observable sequence think library works achieve internal eventemitter integrate rxjs example rxangularjs library", "num": "5489", "d": "11/2015"}, {"title": "input output syntax consistent", "body": "dart file work use like work must would love annotations would handle html casing makes much easier copy paste propertiesevents component code html", "num": "5487", "d": "11/2015"}, {"title": "working files angular", "body": "hi guys working project support angular want upload images directly api could use angular similar job tried using ngmodel input type file get path look like", "num": "5482", "d": "11/2015"}, {"title": "dynamiccomponentloader ability load components w context hostlocation elementref", "body": "allow pass providers newly created component use works great however also useful could specify newly created component uses context hostlocation elementref new component going next possibly additinional arg methods functionality able automatically generate modaldialog service user creates new modal could use context user root component cc igorminar tbosch", "num": "5481", "d": "11/2015"}, {"title": "input property set decorator setter used", "body": "input property set annotation setter used getter setter present setter available everything ok also works use property annotation plunk", "num": "5477", "d": "11/2015"}, {"title": "action request sent using action attribute form", "body": "closed issue still reproductible code sample", "num": "5476", "d": "11/2015"}, {"title": "add support angularentrypoint functions methods implemented arrow functions", "body": "", "num": "5474", "d": "11/2015"}, {"title": "make public api webworker serializer", "body": "currently import serializer classes trying kill import paths file specifies serializer public api", "num": "5473", "d": "11/2015"}, {"title": "windows unable run js unit tests", "body": "fixes source maps introduces preprocessor longer possible run unit tests windows due many files opened ie running quick workaround unlock testing locally remove new preprocessor karma configuration following error raised every file folder", "num": "5471", "d": "11/2015"}, {"title": "public api test fails many browsers", "body": "passed chrome ieedge since browsers error raised cc vsavkin", "num": "5470", "d": "11/2015"}, {"title": "rangeerror maximum call stack size exceeded adding listener websocket chrome browser", "body": "loaded ca nt add event listener websocket without getting infinite loop zonejs course issue actual app however plunk simplified loading angular libraries angular script tag removed websocket works get error run example chrome firefox", "num": "5469", "d": "11/2015"}, {"title": "tests need way handle asynchronous behavior happens template", "body": "zones unit tests work completely see asynchronous tests need return promise run completion catch errors difficult asynchronous event comes template hard get hold promise example enter export class mycomponent pending promise terrible solution stored tests enter thispending getapromisesomehow dostuff current test would look like js stuff injectasync testcomponentbuilder tcb gt return tcbcreateasync mycomponent fixture gt fixturedetectchanges var compiled fixturedebugelementnativeelement cc rkirov", "num": "5468", "d": "11/2015"}, {"title": "implement observechildren similar api", "body": "previously discussed vsavkin jeffbcross background programmatically listening events propagated children difficult currently consider component n components accordionitem component might emit eventoutput used set currently active item currently best way achieve accordionitem component would inject parent accordion accordionitem register parent call method close others typescript component selector accordion class accordion items accordionitem register item accordionitem thisitemspush item toggleactive selecteditem accordionitem thisitemsforeach item gt item selecteditem itemactive false selecteditemactive true component selector accordionitem inputs active class accordionitem active boolean constructor private accordion accordion accordionregister setactive thisaccordiontoggleactive ideally child component would simply expose select event parent accordion currently easily get ahold children via whatever clean way listen events emitted children proposed syntax implement decorator similar would enable observation events emitted child components cc pkozlowskiopensource foxandxss", "num": "5467", "d": "11/2015"}, {"title": "move eventmanager", "body": "dom specific renderers platforms something similiar probably different way", "num": "5465", "d": "11/2015"}, {"title": "responsedata always converted string chrome", "body": "downloading word amp pdf docs via rest api responsedata always converted string extended characters decoded happens chrome firefox amp ie current work expected maybe xmlhttprequest problem also reported chrome var config responsetype arraybuffer", "num": "5463", "d": "11/2015"}, {"title": "unit testing ngupgrade applications", "body": "one write unit tests hybrid applications mixture angular angular components able run test suite tests achieved always mocking crossframework dependencies using angular components angular components nt see way test hybrid either two approaches minimal example app demonstrating issue see", "num": "5462", "d": "11/2015"}, {"title": "chore remove private imports http", "body": "parts http importing private paths import public barrels vsavkin enable automatic restriction module robwormald lump whenever get back http work", "num": "5460", "d": "11/2015"}, {"title": "type definition conflict jquery tsd", "body": "trying compile typescript file imports something also references tsd type definitions jquery get following error typescript compiler app doe refer protractor way types pulled angular internally seems use case running hybrid angular app upgrade angular type definitions tsd also pull jquery type definitions suspect commonly used upgrades minimal repo reproduces problem suggested fix nt include protractor type definitions unless user asks", "num": "5459", "d": "11/2015"}, {"title": "add log like functionality angular", "body": "directly writing statements throughout apps codebase bad nt possibility centrally deactivate plans integrating like feature even something bit advanced quickly seen diaryjs seems abandoned", "num": "5458", "d": "11/2015"}, {"title": "feat router expose observable public propertymethod", "body": "currently router uses observablewrapper allow subscribing url updates want access private subject property access observable directly use case using redux store manage application state allows us capture current url router navigation combined redux dev tools would allow router used navigate back previous urls states associated url point time sample code current workaround js const routerobservable gt router subject routerobservable filter url gt url thiscurrenturl subscribe url string gt url thislasturl statedispatch routenavigate url", "num": "5457", "d": "11/2015"}, {"title": "custom jasmine matchers", "body": "since angular needs wrap around jasmine custom stuff stuck bit extending jasmine let say want add custom matcher want use get guess needs way register new matchers perhaps party libraries needs extend custom matchers plan convention community spread one", "num": "5456", "d": "11/2015"}, {"title": "routeparamsparams nt decodeuricomponent", "body": "routeparam read browser uri encoded routeparams still returns uri encoded string think routeparams return decoded uri string otherwise think sort setting decode encode default example url route pattern looks like thus however decodeduri given browser", "num": "5455", "d": "11/2015"}, {"title": "complex forms", "body": "would nice able separate concerns large forms define reusable form components sections might used across multiple different forms sure best approach would mind something like class subformmodel somesubvalue string injectable class formmodel somevalue string constructor public submodel subformmodel component selector subform template directives formdirectives class subformcomponent constructor private submodel subformmodel component template directives formdirectives subformcomponent providers formmodel subformmodel class mainformcomponent constructor private model formmodel work current except validation state subform taken account parent form makes sense since subform component separate form object unfortunately ngcontrol directive subform throw injector error without form element component ca nt find controlcontainer provider also way reference subform parent eg", "num": "5454", "d": "11/2015"}, {"title": "enable long stack traces ngzone default", "body": "information always better especially beginning develop app", "num": "5453", "d": "11/2015"}, {"title": "aid debugging exceptionhandler messages tagged exceptionhandler", "body": "eg compiled dart app seeing following exception exception instance progressevent source stacktrace source null source examining source revealed message printed angular exceptionhandler however source obvious spent debugging time looking different exception handler instead printing exception would better exceptionhandler printed exception caught angular exceptionhandler instance progressevent", "num": "5450", "d": "11/2015"}, {"title": "documentation esnext wo typescript", "body": "correct ng team going provide documentation want write esnext ie without using typescript example would useful trying inject services services current solution seems rely either typescript parameter decorators ecmascript decorator proposal given presented proposed platform angular ngconnect seems like clear path want use platform also team says mean actual decorators esnext ie future unknown javascript would include decorators perhaps even parameter decorators", "num": "5449", "d": "11/2015"}, {"title": "attaching directive image prevents loaded interpolation", "body": "sorry long title code currently works correctly add directive grab image element interpolation nt work anymore image nt loaded nt work anymore remove interpolation write image name directly works guessing must something interpolation interpreted later time directive hijacking element behavior something like plnkr reproduce load show image image path correctly printed console expected behavior right asked gitter timezone makes everything difficult", "num": "5448", "d": "11/2015"}, {"title": "support labels angular expressions", "body": "chatting morning alxhub matsko yjbanov vsavkin agreed add labels angular expression language support end result allow us write something like transformed important bit expression parser accepts something like provides bit colon string transformed", "num": "5445", "d": "11/2015"}, {"title": "remove asynctestcompleter", "body": "asynctestcompleter already removed jsts public testing library remove external lib well blocked removing need internal dart tests see", "num": "5443", "d": "11/2015"}, {"title": "async pipe continuously reloads url used call url passed method", "body": "sure intentional seems counterintuitive people requesting invalid resource example one one request made process stops people requesting invalid resource request refired immediately error continues indefinitely plunkr see binding straight people cleaner imagine many people used things like peopleservicegetpeople think handling case better retrying request repeatedly supporting method calls also allows parameter passing", "num": "5442", "d": "11/2015"}, {"title": "ngselectoption writes objecttostring value instead object", "body": "tried use ngselectoption described doc unfortunately value filled city object expected citytostring guess since result string object object reproduce isolate created plunker", "num": "5441", "d": "11/2015"}, {"title": "querylist iterable", "body": "trying use loop typescript yields following compilation error usage example adding vsavkin reference", "num": "5437", "d": "11/2015"}, {"title": "eventemitter nt work inside ondestroy", "body": "component eventemitter annotated output events emitted never reach handlers adding vsavkin reference", "num": "5436", "d": "11/2015"}, {"title": "unable bind property element", "body": "creating reusable form control incorporating element want use attribute associate label control neither works fieldid automatically generated produces error browser exception template parse errors ca nt bind since nt known native property textfield gt div nthchild gt label nthchild fieldid exception template parse errors ca nt bind since nt known native property textfield gt div nthchild gt label nthchild fieldid", "num": "5435", "d": "11/2015"}, {"title": "ambient directives unit tests testcomponentbuilder", "body": "spotted teropa confirmed side directives bootstrap project see getting errors platform directives like ngfor using testcomponentbuilder seems like ambient unit tests like normal execution fix including coredirectives component seems backward ideas make available", "num": "5433", "d": "11/2015"}, {"title": "observing input changes", "body": "filterform filtering datagrid data need observe inputs change used change event working correctly also used objectobserve better way except nt want create component class inputs use hook", "num": "5430", "d": "11/2015"}, {"title": "refactor linker expose piperesolver public api", "body": "expose piperesolver affects mhevery", "num": "5429", "d": "11/2015"}, {"title": "library messaging disconnected components", "body": "future proofing project decide messaging frameworklibrary use looking pubsub mediator like eventemitter disconnected components subscribe publish messages local message bus looked flux rxjs redux etc use one something comes natively natively supported reactive library", "num": "5428", "d": "11/2015"}, {"title": "problem routeroutlet ngfor", "body": "hi packagejson indexts ts import reflectmetadata import bootstrap component coredirectives import routerproviders routerdirectives routeconfig component selector template export class foo routeconfig path name component foo component selector template directives coredirectives routerdirectives foo export class app bootstrap app routerproviders catch err gt consoleerror err indexhtml html sandbox open chrome expected b b b b b b actual b b b work ngfor inside routeroutlet correct", "num": "5427", "d": "11/2015"}, {"title": "possibly include systempolyfillsjs cdn", "body": "microsoft edge likely version ie requires systempolyfillsjs systemjs would nice included box poor people try use edgeie ca nt included please least note need install systemjs use dist viewing edgeie minute quickstart thanks", "num": "5426", "d": "11/2015"}, {"title": "ngupgrade fails instantiate routerproviders", "body": "trying add routerproviders angular application via ngupgrade var adapter upgradeadapter new upgradeadapter adapteraddprovider httpproviders adapteraddprovider routerproviders adapterbootstrap documentbody angularlegacy try use routing config anywhere fails following message", "num": "5423", "d": "11/2015"}, {"title": "unhelpful error message attempting inject class private constructor", "body": "getting error injecting class private constructor error message would helpful told us problem private constructor least tell us injected class problem internal bug", "num": "5421", "d": "11/2015"}, {"title": "angular tutorial dead link docs", "body": "link form chapter dead found following url", "num": "5420", "d": "11/2015"}, {"title": "imports", "body": "brings back transformed dart code resulting code size regressions could please ptal refactor avoid importing", "num": "5419", "d": "11/2015"}, {"title": "querymetadata example points plunker ngzone", "body": "example top leads plunker ngzones", "num": "5418", "d": "11/2015"}, {"title": "input output annotations carried subclasses", "body": "would nice annotations carried subclassed components currently nt work transformers looks local file guessing may need parse subclass directly might able look information saved parent", "num": "5415", "d": "11/2015"}, {"title": "angular work requirejs", "body": "created simple angular app pure javascript follows angular test hello world", "num": "5412", "d": "11/2015"}, {"title": "feature request pattern validator", "body": "hello team would like request support added form control validation based input pattern attribute mind similar required attribute builtin validator example use case believe would useful generalcase regular expression validator approach fits existing semantics implemented validator branch believe branch ready submitted pull request new github development workflow open source contributing general would appreciate direction appropriate next steps following guidelines contributingmd documentation signed cla agreement sure whether would considered minor major feature change since involves adding new public api also branch current commit one failing unit test publicapispects believe requires new validator added api list comment file said make modifications without approval nt want touch yet", "num": "5411", "d": "11/2015"}, {"title": "unit test campaigns fail", "body": "different reasons browser may silently freeze error reported dev tools karma browser may slow causing dozens hundreds tests fail error may raised due failing xhr reproducible sauce labs browserstack local simulator cases tests successful", "num": "5408", "d": "11/2015"}, {"title": "browserstack andor sauce labs required ci jobs", "body": "optional today get need made reliable currently running browsers sl bs monitoring output thanks landed yesterday green everything goes well nt happen often experiencing kind errors failure browser start disconnects fails slow campaign fully run flake test pass fails reaches timeout improve situation looked builds last days builds master presubmit jobs campaigns unit tests jobs failed due failures flakes bad failures come campaign nt work well simulator sl bs locally campaigns safari mobile freezes silently fails load resources xhr error slow flakes come unit tests randomly fail browser also interesting note trend shows sl better windows bs better mac applies failures flakes idea would split browsers among providers improve overall reliability next steps remove ci made reliable possible problem desktop version nt issue increase timeout identified flaky tests continue monitoring apply split trend confirmed", "num": "5407", "d": "11/2015"}, {"title": "throw error zone nested within another zone", "body": "possible zone running within another zone likely something wrong app code would similar error seen", "num": "5406", "d": "11/2015"}, {"title": "subscribing childrouter effect", "body": "thus subscribe method however navigate requests forwarded parent childrouter eventemitter never used subscribed methods remain uncalled case route change", "num": "5405", "d": "11/2015"}, {"title": "abstractcontrol generic", "body": "abstractcontrol generic value specific type", "num": "5404", "d": "11/2015"}, {"title": "html parser incorrectly assumes must inside", "body": "see reality may inside instead current version transforms html html makes sense", "num": "5403", "d": "11/2015"}, {"title": "declare private members private instead using internal comment", "body": "noticed many places code base private members underscore prefixed marked internal comment instead marked idiomatic typescript declaration reason possibly dart transformation documentation generation would pull request accepted clean", "num": "5402", "d": "11/2015"}, {"title": "checkboxes lose state initialized localstorage yet model remains correct", "body": "create value ls also tested nonprogrammatically editing chrome resources initialize controller grabbing true local storage nt check checkbox yet button based model visible console log true even tried using true false strings also adding ngchecked value model nt help makes value always checked want save checkbox values localstorage app remember boxes checked looks like going code unique creative solution broken boxes completely missing something nt fairly simple implement canwill fixed future", "num": "5400", "d": "11/2015"}, {"title": "use mocha write tests", "body": "use mocha testing framework getting error message necessary propagate angular jasmine typings", "num": "5395", "d": "11/2015"}, {"title": "crazy bootstrap phase error injecting rootscope assigning value service", "body": "sure ng issue maybe user error entire details preserved injecting scope rootscope assigning local reference property seems work fine controller service also notice import scope service perhaps angular team meant also prevent injecting rootscope neglected error baffling best conjecture artifact compilation deep bowels angular wherein instantiation service tries deep copy rootscope property instead shallow copy assigned property service object", "num": "5392", "d": "11/2015"}, {"title": "selectors host properly shimmed", "body": "css component host foo bar color red foo bar color green gets translated foo bar color red foo bar color green great missing feature indeed working intended first look seems like bug shim add shimmed attribute onto classes host", "num": "5390", "d": "11/2015"}, {"title": "custom validator", "body": "please look code input tag attribute work write two validation one element another question code password input validator code validator set markup still define control controlgroup way mix local template validators codeside validators remove definitions code made code long defining control input form input something like", "num": "5389", "d": "11/2015"}, {"title": "pipe used host attribute found unless registered parent component", "body": "use pipe context host attribute example found even register component results error seems pipe needs registered parent component suspect intended behavior simple plunker illustrate issue", "num": "5388", "d": "11/2015"}, {"title": "issue routerparentnavigate", "body": "hello guys trying navigate page using router used code click event typescript export class businessnamelookup value try click button drive page back main page note error browser console see question mark symbol url bar link look like back home page", "num": "5386", "d": "11/2015"}, {"title": "review componentfixture debugelement api", "body": "current method pretty wordy annoying work instance seems wordier issue review api cc rkirov", "num": "5385", "d": "11/2015"}, {"title": "di new provider foo gt work instead throws", "body": "following provider actually work dart const footoken const opaquetoken footoken injectorresolveandcreate new provider footoken usefactory gt bar instead works change signature default instead failing", "num": "5384", "d": "11/2015"}, {"title": "platformbootstrap failure create injector reports error proceeds along", "body": "following code seems buggy dart transpilation comments mine", "num": "5383", "d": "11/2015"}, {"title": "dartium required js tests", "body": "running requires dartdartium js test suite chatted igor agreed erroneously requiring dartium use local chrome install instead cc mlaval edit run karma correctly run local chrome install could incorrectly using test suite", "num": "5380", "d": "11/2015"}, {"title": "add option disable transformer debug mode", "body": "since transformer slows build considerably large codebases things work dartium mirrors would great switch enables transformers disable", "num": "5379", "d": "11/2015"}, {"title": "issue new lines templates web components", "body": "found odd issue related new lines used web components sure caused web components though two plunkrs working working load press add button second example shows empty items difference srcappts working working", "num": "5377", "d": "11/2015"}, {"title": "feat router need way handle lazy loading components without loading entire tree first load", "body": "currently splat syntax causes download everything front import profilecomponent turn imports overviewcomponent logindetailscomponent would really nice large application download feature sections application needed routeconfig path profile component profilecomponent profile class appcomponent routeconfig path component overviewcomponent overview path details component logindetailscomponent logindetails class profilecomponent tried stuff much luck", "num": "5373", "d": "11/2015"}, {"title": "feat router hashlocationstrategy support appbasehref", "body": "useful applications using hash routing want namespace hash route match existing constraints", "num": "5368", "d": "11/2015"}, {"title": "assetreader available part angular public api", "body": "using assetreader marked part private api plans make part public api also opened dartlangbarback think assetreader part barback package cc yjbanov igorminar", "num": "5366", "d": "11/2015"}, {"title": "using ngif element placing wrong ngcontent", "body": "component template looks like add element places element inside like removing places proper place something need improve cc igorminar adamdbradley", "num": "5363", "d": "11/2015"}, {"title": "possible add attribute element dynamically", "body": "ionic use lot attributes example say attribute called want added platform android something like element would added android ios want add ios add android cc igorminar adamdbradley", "num": "5361", "d": "11/2015"}, {"title": "third party controls like polymer amp value accessor error", "body": "hi see added value accessor ngcontroll well required also ngmodel twoway data binding fact polymer paperinput see error change line added end line error fixed cc alxhub", "num": "5360", "d": "11/2015"}, {"title": "router directive routelink case child navigation generates incorrect part url related parent route", "body": "gallery component updates route navigate list images click info button opens details image gallery instantiated though url browser correctly points another image example load gallery url navigate gallery click info button opens fix explicitly define id need workaround think bug directive typescript component selector stub template class stub component selector gallery templateurl componentsgallerygalleryhtml directives routerdirectives routeconfig bugfix path redirectto path component stub default path details component details details export class gallery implements canreuse onreuse constructor private router router private gs galleryservice params routeparams paramsget id thisgsselect paramsget id changeitem item iitem thisrouternavigate gallery id itemaccessionnumber canreuse return true onreuse next componentinstruction thisgsselect nextparams id html", "num": "5359", "d": "11/2015"}, {"title": "forms deciding input types", "body": "review code see means choose html tags would used words text oneline input never", "num": "5358", "d": "11/2015"}, {"title": "testcomponentbuilder overrideproviders fails providers nt exist component", "body": "repoed dart", "num": "5354", "d": "11/2015"}, {"title": "multiple event sent next", "body": "hello want apologize first someone ask lot searches nt find answer nt know issue post many events following issue listeners called times whereas send sure lot tests call next example call template call component function called twice one next note forced ugly timeout avoid times thing normal something wrong listener app called twice weird never heard probably issue app thank", "num": "5353", "d": "11/2015"}, {"title": "test injector work smoothly new bundles", "body": "new platform bundles import directly need different platforms however test injector currently hardwired work browser platform need smooth way writing unit tests injector different platform cc vsavkin", "num": "5351", "d": "11/2015"}, {"title": "npm install fails", "body": "error report says reactivexrxjs dependency published", "num": "5349", "d": "11/2015"}, {"title": "fix router incorrect type coercion value routeparam", "body": "query parameter value number eg resulting url returns instead cause appears coercion", "num": "5346", "d": "11/2015"}, {"title": "ca nt style component inserted routeroutlet viewencapsulationemulated", "body": "typescript component selector stub template stub class stub component selector home style template welcome home routeconfig path component stub export class home understand components added asynchronously nt get attribute assigned looks like bug", "num": "5345", "d": "11/2015"}, {"title": "api doc headings could consistent", "body": "quick review headings used api docs perhaps could define preset headings eg example improve consistency across multiple authors common themes could probably one standardised title exampleexamples api syntax usage use typical use see also also nt consistent terms encourage authors use style appropriately within div", "num": "5344", "d": "11/2015"}, {"title": "fresh system clone repo setup error find module fsextra", "body": "node toolsanalyticsbuildanalytics success install npminstallnet amp amp node toolsanalyticsbuildanalytics start install npmpostinstall amp amp node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config amp amp node toolsanalyticsbuildanalytics success install npmpostinstall amp amp node toolsanalyticsbuildanalytics success install npminstall throw err error find module fsextra functionmoduleresolvefilename functionmoduleload modulerequire require", "num": "5343", "d": "11/2015"}, {"title": "gettersetter ngcontrol", "body": "angular transform form data way plunk emails input comma delimited email list could implemented without moving transform logic method found classes nt know use single input", "num": "5342", "d": "11/2015"}, {"title": "feat router allow skiplocationchange using navigate method", "body": "right want navigate without changing url like able", "num": "5340", "d": "11/2015"}, {"title": "host decorator nt work", "body": "expected behavior api doc doc says works well current behavior works returns plunker steps reproduce open plunker look console logs", "num": "5339", "d": "11/2015"}, {"title": "basic question dts files", "body": "hi sorry basic question dts files anymore synchronized definitelytyped resolution mechanism uses node modules depends typings field packagejson field contains routerdts example thanks advance", "num": "5338", "d": "11/2015"}, {"title": "update typings seleniumwebdriver remove", "body": "install angular using see webdriver typescript definitions reason includes compiling application effectively prevents installing recent webdriver typings definitelytyped thus using newer features webdriver angular bundle typings protractorwebdriver depend modules remove know exclude locally already excluded whole directory please update believe users possibility choose preferred version modules", "num": "5337", "d": "11/2015"}, {"title": "add possiblilty ask router current route", "body": "moment possible get current via method working routing dsl would way useful check route active via dsl also eg want something like able implement isactive need current route also cases would useful access routedata current route moment possible access information within routed component via router class", "num": "5335", "d": "11/2015"}, {"title": "routerlinkactive working nested routes", "body": "working nested routes links routes common rootpath get routerlinkactive class eg two links like navigating taskslists results following dom task overview new task", "num": "5334", "d": "11/2015"}, {"title": "http nt work worker", "body": "pulling imports directly figure best avoid", "num": "5333", "d": "11/2015"}, {"title": "allow conditionally applying directive component", "body": "currently way conditionally apply directive component need apply ngformcontrol directive control present template ends looking like would nice directive nt applied null prevent duplicated code", "num": "5332", "d": "11/2015"}, {"title": "feat router provide child routes access parent route information", "body": "using nested routes would like set params top level able access params information child routes instead adding paramsdata child routes js routeconfig path users id component users users class app routeconfig path component profile profile path stats component stats stats class users constructor params routeparams need access users id route param thisid paramsparentget id plunk displays handled today", "num": "5330", "d": "11/2015"}, {"title": "form control pristine attribute updated properly", "body": "component uses forms api use attribute control check data changed looks like returns dirty second change example textbox blank spaces allowed right type one space validation control says pristine change control becomes dirty far validators concerned", "num": "5328", "d": "11/2015"}, {"title": "angular attempts subscribe event stream", "body": "simple component output follows error thrown bad state stream already listened hood component uses lazyeventemitter wrapper streamstream controller broadcast changing controller instantiate broadcast stream fixes able expect one subscription angular framework", "num": "5327", "d": "11/2015"}, {"title": "difference detached checked change detection strategy", "body": "documentation says component set remain set fall back checked guess process setting component state even possible happens automatically also depending answer question whats difference switching switching thanks time answer question happy make pull request extended documentation file help understand better", "num": "5326", "d": "11/2015"}, {"title": "component watch object properties", "body": "component injects simple object properties issue see change listeners onchange event never fired injected object property changes set interval get changed object properties question bug expected behavior expected make component listen object property changes component ts export class perksplannercomponent playermodel currentplayermodel setinterval gt thisiscurrentmodelchanged simple object ts injectable export class currentplayermodel somevalue string", "num": "5325", "d": "11/2015"}, {"title": "investigate using zones avoid need injectasync", "body": "always use zones remove need everything would", "num": "5322", "d": "11/2015"}, {"title": "form action request sent using action attribute", "body": "hello trying make simple login form works attribute issue request never sent copying pasting form html dom using dev tools make works working alpha moved alpha breaking sample guess angular catching request somewhere prevent default behavior form thing initially avoid use angular stuff ngform ngformcontrol ngformmodel build form issue workaround broken idea", "num": "5320", "d": "11/2015"}, {"title": "angular routerinjectables found", "body": "hello new angular trying create application support routing using aspnet base framework application attache setup files think need setup look like get debug error said build module c usersegytedocumentsvisual studio exported member routerinjectables code face error", "num": "5319", "d": "11/2015"}, {"title": "breadcrumb component", "body": "trying create component similar moment problem ca nt really access route name instruction ca nt really create links crumbs workaround duplicate name data ideal seems way moment check well", "num": "5318", "d": "11/2015"}, {"title": "missing dart", "body": "http library seems missing dart package", "num": "5317", "d": "11/2015"}, {"title": "async redirectto router", "body": "overview string would great could well example common scenario app two routes called async redirection home route could redirect items nt created yet could redirect first item asynchronously fetched items", "num": "5316", "d": "11/2015"}, {"title": "handle combinator", "body": "combinator effectively hide rewrite import remove mirrors", "num": "5315", "d": "11/2015"}, {"title": "dart add starting app size test", "body": "measure size minified minifiedgzipped hello world app make sure sizes meet targets lt gzipped lt minified response recent regression introduced nt notice code made customers", "num": "5314", "d": "11/2015"}, {"title": "track dart bundle size", "body": "see pointers", "num": "5312", "d": "11/2015"}, {"title": "dart ngfor ngif rendered twice", "body": "ngfor ngif ng directives rendered twice dart output version dart dart vm version amp nov commit nov commit modified dart playground hello ngif ngfor component selector helloapp viewproviders const greetingservice template class hellocmp bool show true list things abc def string greeting hellocmp greetingservice service thisgreeting servicegreeting void changegreeting thisgreeting howdy result chromium generated js output", "num": "5311", "d": "11/2015"}, {"title": "delayed ngmodel binding", "body": "hello small application angular routes form first page preselect values works fine machine reduce requests count use browserify bundling include additional modules made separate bootstrapbundledts file added imports import zonejs import import reflectmetadata import bootstrap add strange issues see preselected values forms focusing first input field also custom directives recognized onchanges method called short repro yet test code unfortunantly needs aspnet vnext need run run kestrel server cd wwwroot npm install cd npm install gulp install gulp scripts rebuild gulp styles rebuild", "num": "5310", "d": "11/2015"}, {"title": "httprequest forces requests get requests", "body": "writing authentication wrapper http passing methods since want access base options mergeoptions function passes requestmethodsget calls mergeoptions overwrites passed method post default method get base options passing get redundant arguments mergeoptions rearranged method optional", "num": "5309", "d": "11/2015"}, {"title": "router generates url null", "body": "following router configuration template see following screenshot status bar generates route like actually click shows right url browser redirects right controller generates correct data", "num": "5308", "d": "11/2015"}, {"title": "router navigatebyurl nt navigate relative url", "body": "documentation states following since method child router delegates root router relative part work far tested hand executed child router ca nt use instruction navigate delegates root router right seems generates instructions child root cc btford", "num": "5307", "d": "11/2015"}, {"title": "import reflectmetadata", "body": "tried add unit test controller test suite executed protractor protractor fails turned workaround nt actually understand going believe import somewhere angular people writing unit tests need angular requires us use class decorators please note understand protractor neither designed run unit tests supports angular believe issue related protractor wrong usage believe test runner use class decorators thus imports reflectmetadata report error simple reproducer follows typescript spects import controller controller describe gt gt let instance new controllercontroller typescript controllerts import ng ngcomponent export class controller", "num": "5306", "d": "11/2015"}, {"title": "getting zone defined enabling dev mode", "body": "getting error message attempting enable angular devmode application offending line causing exception ngzonets turns used line code undefined code run file missing import maybe offending line code refer lowercase instead given exposes globally name using jspmsystemjs load application typescript set output system modules module resolution node helps understanding cause error", "num": "5304", "d": "11/2015"}, {"title": "add quotemark gulptslint", "body": "hey guys found many files mixing singledouble quotes think good practice enforce using single quotes double quotes code style need add gulptslint replace invalid quotes thoughts", "num": "5301", "d": "11/2015"}, {"title": "possible applymodify classes conditionally host element", "body": "ca nt seem find way conditionally applymodify classes host element using something like etc template using web components without dependency injecting host element component class possible", "num": "5300", "d": "11/2015"}, {"title": "shrink worker render bundle", "body": "right worker render bundle nearly size worker app bundle unnecessary lot dead code slim removing much possible render thread", "num": "5298", "d": "11/2015"}, {"title": "controlgroup control nt work polymer iron paper elements", "body": "angular material elements ready yet also seem good ui widget library angular yet tried polymer dart basic property event bindings work could nt get controlgroup control work sure problem polymer angular since two libraries google nt users expect interoperate thanks", "num": "5297", "d": "11/2015"}, {"title": "ngfor behaves incorrect class nganimate added", "body": "using class nganimate ngforelement updating corresponding list updated items removed problem illustrated example example list b c displayed using ngfor seconds list replaced list e f g h expected behavior would list displayed using ngfor however items h shown without class nganimate problem nt occur", "num": "5296", "d": "11/2015"}, {"title": "lose one weird trick doctors hate", "body": "typescript emits helper well help extending classes currently shows dozen times codebase turning broccoli tree saves unminified minified existing system bundles option optimization rx saves submit pr well need include least course might best added proposed ngpolyfill along reflect cc igorminar", "num": "5293", "d": "11/2015"}, {"title": "amp app working", "body": "using angular app works fine mix added version trying use legacy code areas new ui described problem two questions stackoverflow module found error using system module compiles fine commonjs causes runtime error", "num": "5292", "d": "11/2015"}, {"title": "observable async subscribe observable circumstances", "body": "try commentinguncommenting magic line appts note difference behavior entered one character input box understanding since observable shared async pipe subscribes extra subscription effect well may something stupid missing", "num": "5291", "d": "11/2015"}, {"title": "child directive events swallowed destroyed directives using viewcontainerremove", "body": "came across behaviour using expect child directives removed using event produced prior removal swallowed conveyed parent directive created little example illustrates behaviour problem occur moved reordering data list shows however children get removed numbers exceed event swallowed guess reference problem children operating data parent time child directive updating data parent parent probably kick change detection removes element event captured however expect event sent prior removal using visible parent", "num": "5289", "d": "11/2015"}, {"title": "feat add class active nglink", "body": "add class nglink current active route", "num": "5286", "d": "11/2015"}, {"title": "select element valuechanges observable fires twice every time", "body": "version alpha ts trying learn various ways working forms ran odd issue select elements trigger change events twice change subscribed valuechanges observable function changes value model fires change event expected pretty short heres code simple select app component one two three change select model directives formdirectives export class app simpleselect control new control counter number constructor watch simple select thissimpleselectvaluechangessubscribe value gt consolelog simple select val value counter thiscounter thiscounter changeselect thissimpleselectupdatevalue plunker action thought maybe something simple interfacing formbuilder got results added text field see changes effect form work correctly fire plunker sure something incorrectly think expected behavior event fire experienced enough track back whats causing double bindings hoped could someone take look", "num": "5284", "d": "11/2015"}, {"title": "observable payload reduction plan", "body": "two goals reduce bytes core angular get back original observable goal relying functions prototypes composing observable operators ie proposed js function bind syntax tasks export rxjs include operators api docs guides show examples importing using advanced operators rxjs later consider things let users patch override observable provided angular nt need happen prebeta achieve reduction size rx dependency minified gzipped", "num": "5283", "d": "11/2015"}, {"title": "angular transformer adding extra lines dart files line number stack traces match source code", "body": "angular transformer component templates dart files string html causing line numbers reported stack traces incorrect steps reproduce pub serve test dartium open component dart file notice file numbers shifted suggested fix include html css strings end file reference strings component taking care alter line count", "num": "5281", "d": "11/2015"}, {"title": "angular tutorial broken link", "body": "link broken found", "num": "5279", "d": "11/2015"}, {"title": "programmatically prevent destruction components requested", "body": "would nice could tell angular destroy components navigate even next component different type could useful example building window management system users navigate different windows components without need recovering whole state existing canreuse hook useful use case since allows us reuse components previous next component type code example", "num": "5275", "d": "11/2015"}, {"title": "property json exist type", "body": "update get error http request property json exist type code looks like", "num": "5273", "d": "11/2015"}, {"title": "ngupgrade infinite loop initialising template bound object", "body": "edit seems first issue solved alpha see plunker playing module getting infinite loop initialising object bound template trying isolate issue using angular without ngupgrade got another error sure related put plunker issue infinite loop using ngupgrade initialising template bound object first import component view bootstrap input import dataservice dataservice component selector appcmp view template export default class namescomponent input data userdata constructor private dataservice dataservice thisuserdata put comment get infinite loop oninit calling service get data thisdataservicegetusernames thisdatalogin response gt thisuserdata responsedata remove following line constructor get infinite loop careful crash browser service used plunker removed call github api calling want make infinite loop calling github api issue error initialising object inside constructor happen initialised object declaration trying isolate first ngupgrade problem using example saw initialise object bound template constructor get javascript error initialise declaration error disappear see plunker full example code relevant part initialising object import component view eventemitter input import peopleservice peopleservice component selector myperson inputs name outputs hello view template export class person hello new eventemitter input data peopledata age uncommenting commenting constructor content error disappears constructor private peopleservice peopleservice peopledata age sayhello e thishellonext thisname oninit thispeopleservicegetpeopeldata subscribe people gt peoplefilter p gt thisdataid pid", "num": "5271", "d": "11/2015"}, {"title": "ngupgrade question angularbootstrap definition", "body": "definition angularbootstrap requires like example type extends get error", "num": "5270", "d": "11/2015"}, {"title": "invalid target element operation", "body": "invalid target element operation angular error happend code like search google get info innerhtml read tbody error happend say resolution thanks help", "num": "5268", "d": "11/2015"}, {"title": "forget injectable factory debugging torture", "body": "try bind something like completely unhelpful error message get uncaught unhandled exception null object method get nosuchmethoderror method found get receiver null arguments type class exceptionhandler dart corepatchobjectpatchdart objectnosuchmethod dart corepatchobjectpatchdart objectnosuchmethod package applicationrefbootstrap nothing remaining stack trace hints problem figure go read bunch code figure injector getting set guess line set breakpoint try run thisinjectorresolveandcreate debugger extract slightly meaningful stack trace mean slightly get type type type type still part stack trace tells problem involves type map recall recently bound map go nothing leaps wrong search people code see see quite people put injectable factories people nt put injectable broken answer probably nt know yet code nt exercised error message like injector could create instance injector key could find factory name perhaps forgot annotate factory injectable course knew factory name need put annotation obviously found maybe say injector could create instance injector key could find corresponding factory perhaps forgot annotate factory injectable point wonder found binding factory inside let suppose ca nt find binding ok heck find binding put injectable factory refers basically idea twisted things angular error message needs improvement better yet get rid seemingly senseless requirement add injectable every factory method boilerplate bad enough due forbidding anonymous factory methods", "num": "5266", "d": "11/2015"}, {"title": "typings longer included bundle", "body": "typings intentionally removed", "num": "5265", "d": "11/2015"}, {"title": "template interfering array displays", "body": "simple template using iterate array function removes everything array using entries still left array link plunker demonstrates", "num": "5258", "d": "11/2015"}, {"title": "improper show clause decoratorsts", "body": "", "num": "5255", "d": "11/2015"}, {"title": "setcookie http response seems ignored", "body": "http seems ignore setcookie http response headers making simple call service http module server responds setcookie header like setcookie ldapidkoen domainlocalhost expiressat gmt path setcookie domainlocalhost expiressat gmt path subsequent calls service host path seem ignore fact server set cookies domain relevant cookies show headers outgoing http requests according http trace seen browser network missing something", "num": "5254", "d": "11/2015"}, {"title": "", "body": "guide says link", "num": "5252", "d": "11/2015"}, {"title": "input output annotations work setters getters respectively", "body": "transformer works fields work setters getters using input output annotations", "num": "5251", "d": "11/2015"}, {"title": "local template variables requires event trigger change detection", "body": "order get example work add checkbox input expected behaviour valid currently following get example work would possible future get rid part would become", "num": "5250", "d": "11/2015"}, {"title": "typings files", "body": "appears http router typings files longer included npm package bundlestypings hosted somewhere else", "num": "5248", "d": "11/2015"}, {"title": "compiler check custom component tags closed", "body": "seen usages already spec says opening tag previous versions handled differently thus fails silently swallows following dom compiler probably warn throw possible", "num": "5247", "d": "11/2015"}, {"title": "expressionchangedafterithasbeencheckedexception contain binding used dart transformers", "body": "expressionchangedafterithasbeencheckedexception contain binding caused problem also contain component name template contains binding works js dynamicjit dart dynamic", "num": "5245", "d": "11/2015"}, {"title": "router min bundle distributed", "body": "see code angular minified bundle router using npm code angular ran latest master routerminjs created folder alone everything else tried tracking building process gulpfile got lost easily lol intentional", "num": "5244", "d": "11/2015"}, {"title": "method keys issue", "body": "internet explorer method keys nt supported object new exportsmap keys next", "num": "5243", "d": "11/2015"}, {"title": "nt allow arbitrary apis usage", "body": "right use eg code requires users include polyfill library like running angular avoid adding handwrite typings file describing apis use already typecheck gives us broad surface target runtime", "num": "5242", "d": "11/2015"}, {"title": "allow contentchildren filled subviews", "body": "contains sentence would like available grouped couple want decide parent element links however links built directly within component built dynamically separate components http request right remains empty nt observable changes cases typescript directive selector parentisrouteactive host classrouterlinkactive isrouteactive export class parentisrouteactive implements aftercontentchecked public isrouteactive boolean", "num": "5241", "d": "11/2015"}, {"title": "hostcontext viewencapsulationemulated translates invalid css", "body": "see component using property renders css like first selector invalid whole definition nt anything", "num": "5239", "d": "11/2015"}, {"title": "ngfor seems confused underlying array contains identical references", "body": "encountering issue ngfor array iterate contains multiple times object reference modified event raised subcomponent believe recreated scenario please try change selection first select point view seems happen ngfor somehow updating wrong subcomponent two elements iterable pointing object first one replaced point something else context alpha typescript", "num": "5238", "d": "11/2015"}, {"title": "http response include headers", "body": "maybe something wrong make request http see network tab chrome response include custom header called authorization used refresh jwt try access responseheaders prints empty console behaviour printing keys request headers hand print custom headers add request", "num": "5237", "d": "11/2015"}, {"title": "firefox nt fire oninit event route component navigating back history", "body": "using back button navigate browsers tested fire oninit method route component except firefox onactivate fire trouble getting plunker working latest alpha updated existing plunker illustrate based alpha problem reproducible alpha app select overview types routes see oninit onactivate alert boxes fire navigate using back button overview route oninit nt fire firefox found firefox little temperamental back button plunker times works others use delete button app frame navigate back", "num": "5234", "d": "11/2015"}, {"title": "change components position", "body": "method change components position container component use dom change components position aware change made continue add component container component added change position action happened reference post", "num": "5232", "d": "11/2015"}, {"title": "feat router allow child routes url alias", "body": "currently parentchild route url path constructed parentchild nt way parentchild represented child url would allow convenience nested outlets without construct long url paths order access routes", "num": "5231", "d": "11/2015"}, {"title": "node runs memory running builds", "body": "seen crash js bundle tasks hterkelsen reports crashing js sourcemaps workaround fix underlying issue remove heap config workaround", "num": "5229", "d": "11/2015"}, {"title": "testcomponentbuilder surface applicationreftick", "body": "applications need", "num": "5228", "d": "11/2015"}, {"title": "local variables templates nt accept uppercase characters", "body": "creating local variable template pound symbol works lowercase names example works example nt works note uppecase f plunker example", "num": "5224", "d": "11/2015"}, {"title": "bundles publication strategy", "body": "follow closed pr particular comments downside approach taken new proposal let produce umd bundles core rxjs core http router rxjs bundles umd usable via tag cjsbased tooling webpack etc bundles wo nt contain truly external dependencies zone reflectmetadata shims going publish separate file jeffbcross robwormald vsavkin feel free comment cc igorminar rkirov", "num": "5223", "d": "11/2015"}, {"title": "typescript error using request", "body": "implemented custom request pretty much example docs everything works running typescript error implementation js request method requestmethods url string body string return request method method url url body body get url string return thisrequest requestmethodsget url post url string body string return thisrequest requestmethodspost url body error got almost identical custom request another spot attaches noticed error message one says pass set error goes away error seems pop time thanks cc robwormald", "num": "5222", "d": "11/2015"}, {"title": "router securityerror failed execute pushstate", "body": "hello using pathlocationstrategy get error use hashlocationstrategy works fine working angular thanks", "num": "5218", "d": "11/2015"}, {"title": "router navigate route data", "body": "possible navigate url give json object best regards tiago braga", "num": "5217", "d": "11/2015"}, {"title": "update parent component", "body": "way trigger update parent component child one following code works skips digest reproduction click add button counter displayed one step behind", "num": "5216", "d": "11/2015"}, {"title": "children components id", "body": "hi possible access child view components id best regards tbragaf", "num": "5215", "d": "11/2015"}, {"title": "http request subscribe try catch finally clause", "body": "hi alpha subscribing http request try catch finally trigger finally clause error thrown example api correctly throws triggering catch clause finally clause trigger triggers successful subscription anyone help best regards tiago braga", "num": "5214", "d": "11/2015"}, {"title": "building testing locally", "body": "hello please someone add proper documentation building testing locally good documentation thanks vijay", "num": "5213", "d": "11/2015"}, {"title": "google map marker clicks properly propagated components", "body": "set google map marker click event let say map clicked pass message parent another component however rerendering component new data cause message button click result rendered see work around adding marker call back closure think subtle event handling difference", "num": "5212", "d": "11/2015"}, {"title": "improve http ergonomics json usage", "body": "developers using json time avoiding jsonstringify things manually adding appropriate contenttype headers sending json possibly adding operator like sugar", "num": "5211", "d": "11/2015"}, {"title": "benchmarks benchpress reports categories gctime scripttime etc dartium", "body": "think different tracing categories old versions chrome preventing us running benchmarks golem cc tbosch yjbanov", "num": "5210", "d": "11/2015"}, {"title": "viewcontainer operations fail move content elsewhere", "body": "occurs following case component moves content another floating div", "num": "5207", "d": "11/2015"}, {"title": "last item dropdown always initially selected edge", "body": "trying use bind value select dropdown menu form options generated via model bound variable like html selected selectedoption option chrome value set right value ui shows right value dropdown selected edge value becomes last value added via ui sometimes selects right value sometimes selects last one behavior yet attached event listener event item added change event fired updated whatever value last added plnkr repo loading everything say dropdowns selected texts set initial value chrome works expected edge selected texts say additionally edge bunch change events showing going selecting expected tried alpha versions", "num": "5206", "d": "11/2015"}, {"title": "invalidcharactererror adding multiple classes single condition ngclass", "body": "invalidcharactererror thrown constructs like following believe due space character adding multiple classes single condition like worked workaround separate two classes", "num": "5205", "d": "11/2015"}, {"title": "dart export class classdefinition", "body": "jsonly api causes compiler warnings dart", "num": "5202", "d": "11/2015"}, {"title": "router link child component go default child route child route name", "body": "many cases component display links child components parent nt know child routes nt know scenario example suppose hero employment agency matches hero employees crises parent shell links across top go child feature components dealing concern managing crises managing heroes ratsnest subcomponents routes assume right template link bar look something like silly worse obliges know least one route names child feature rather present raises complaint nonterminal route child component default route router would know keep working way toward terminal route think ways identify default route default property one allowed per configuration child route path constraint would default route parameters object would way specify could live corollary syntax seems unnecessary target component configured routes one default nt think big deal could omit would never know routes seems like win", "num": "5200", "d": "11/2015"}, {"title": "router params cut first amp", "body": "following deliberate routing load url comes american uirouter used get american amp finedining need", "num": "5199", "d": "11/2015"}, {"title": "bootstrap mobile painfully slow", "body": "numerous issues related bootstrap speed none mentions mobile performance desktop tests bootstrap kindaokish first post paint mobile story awful right easily reproducible examples seedtype almost empty apps oneplus one one pretty beefy phone snapdragon adreno ram software android latest chrome quick summary first real paint happen seconds mobilefirst result unfortunately systemjs webpack ps mithrilquickstart comparison", "num": "5198", "d": "11/2015"}, {"title": "explain builtcompiled", "body": "hi folks tried figure quite sure get right built typescript bundled js guess ts transpiled bundle howwhere explicitly indicate particular function class must available exported public api come use import component bootstrap path refer typescript figure look appts thanks help ludo", "num": "5197", "d": "11/2015"}, {"title": "slow bootstrap bundle generated system builder", "body": "plunker fork original angular plunker angular version updated latest unminifed fork based first one expect bundle generated system builder see reason later noticeably slower bootstrap former loading shown several seconds angular app bootstrap almost instantaneously first plunker bundles roughly size see issue local test app swapping system builder bundle constructed tracing imports distributed bundle saves several seconds load time cc guybedford created bundle using jspm helps laurent macbookpro app master jspm bundle reflectmetadata building bundle tree reflectmetadata ok built buildjs source maps unminified", "num": "5196", "d": "11/2015"}, {"title": "routerlink working root app component", "body": "seem get routerlink work root component debugging find changes parameter undefined using routerlink sub components almost seems issue directly related routerlink javascript set routeparams changes thisrouteparams changes thisnavigationinstruction thisroutergenerate thisrouteparams tried setting plunkr difficulty getting router work plunkr", "num": "5192", "d": "11/2015"}, {"title": "routerpathlocationstrategy doc mention base element option", "body": "current documentation says must supply also ok dev adds indexhtml eg see also error message", "num": "5191", "d": "11/2015"}, {"title": "routerecognizer bad alias message camelcase", "body": "message routerecognizer say route aliases titlecase like", "num": "5190", "d": "11/2015"}, {"title": "dynamiccomponentloader issue use plugin interactjs", "body": "hi building application drag components container display drop something container angular component load container also using interact support drag amp drop feature drop component container constructor component trigger trigger event component even events angular component trigger like click event container plnkr explain issue", "num": "5189", "d": "11/2015"}, {"title": "ngfor index amp input eventbinding messes ui", "body": "using ngfor loop create list input fields trying fill fields ui behaves quite strange plnkr press add tag button twice fill first field afterwards click second case value entered first field gets displayed second one model nevertheless correctly filled", "num": "5188", "d": "11/2015"}, {"title": "promise returned function causes endless loop used view asyncpipe", "body": "hi guys noticed returning promise function use function within view using run endless loop javascript import component component selector app template export class app asynctest new promise resolve gt resolve hey asynctestfn uncomment reproduce warning browser freeze return new promise resolve gt resolve hey", "num": "5187", "d": "11/2015"}, {"title": "implement ngcontrolarray template driven forms", "body": "currently controlarrays connected form via ngcontrolgroup directive works fine using modeldriven approach using templatedriven approach currently way create controlarrays declaratively possible create arrays values scenario", "num": "5185", "d": "11/2015"}, {"title": "embrace controlled components idea react", "body": "look react docs better understand controlled components actually thought already works exactly appears wrong let assume component element want prevent users entering white spaces wrote next lines code see plunk export class app content string oninput newcontent thiscontent newcontent replace sg removes right entering replace lg replaces right entering expected user enter whitespace character immediately removed nt work enter white spaces element removed enter nonwhite space character plunk reactjs implementation compare behaviors another example happen bind input value string literal example see plunk think case user nt ability enter anything already bound must always remain plunk reactjs implementation example compare behaviors vsavkin tbosch", "num": "5184", "d": "11/2015"}, {"title": "default values fields component", "body": "using throughout project component file name component file component file typescript import component component selector templateurl componentsaboutabouthtml styleurls componentsaboutaboutaboutcss export class make optional either field absent default value generated templatecss case file name exists ie fields optional save lot dummy typings make components code look clearer think", "num": "5183", "d": "11/2015"}, {"title": "would write routerlink route like users idmessages", "body": "examples seen far new component router parameter always end route like would need routerlink like access question would write routerlink parameter middle route format like manually type address bar successfully get page ca nt seem figure routerlink format thing wish use child route possible thanks smile using alpha", "num": "5181", "d": "11/2015"}, {"title": "router questionfr expose route name", "body": "tl dr way get property route complete info nt think would super awesome long boring story asked gitter chatroom brief brainstorm could nt get definitive answer asking use case create breadcrumb name route would extremely useful simple route want get property use dynamically property exposing info would nice could name make injectable totally came name nt steal anyone note one would something like workaround far little piece code good iterating something private one solution far shorter one would seems little redundant would repeat every route yes super lazy advice missing something obvious please nt say use property", "num": "5180", "d": "11/2015"}, {"title": "expression syntax iif nt work", "body": "doe nt wotk exception typeerror read property label null null", "num": "5178", "d": "11/2015"}, {"title": "angular lifecycle hook", "body": "hi component crud operations update mode data fetched using ajax component loaded got error view rendering typeerror read property undefined null data initialized view renderingbinding null used top component markup flag setting fetching data prevents view bindingrendering data ready solved problem problem nested component wondered better way solve problem took look lifecycle hooks hook like onbeforebindingonbeforerendering help issue suggestion", "num": "5177", "d": "11/2015"}, {"title": "img src relative component", "body": "would nice could bundle images components component separate directory images subdirectory right give full path move component directory breaks path way give path relative componentts file note applies styleurls", "num": "5176", "d": "11/2015"}, {"title": "routechangestart routechangesuccess routechangeerror", "body": "trying get equivalent events routechangestart routechangesuccess routechangeerror use onactivate ondeactivate events need add every component also tried implement routeroutlet ca nt access previous instruction activate deactivate events also could nt know handle route change error also routersubscribe gave name want get current next instruction objects change properties target show loading indicator start change page hide finish change page make transition animation rtl ltr current next instruction", "num": "5175", "d": "11/2015"}, {"title": "", "body": "", "num": "5173", "d": "11/2015"}, {"title": "fresh clone ending purge", "body": "fresh clone ending purge followed steps wondering missing osx yosemite node npm", "num": "5172", "d": "11/2015"}, {"title": "pipes break used ngswitchdefault", "body": "using custom pipe inside pipe breaks exception exception typeerror read property constructor undefined null typeerror read property constructor undefined objectimplementsondestroy functionchangedetectionutilcallpipeondestroy eval abstractchangedetectordehydrate appviewmanagerutilsdehydrateview appviewmanagerviewdehydraterecurse appviewmanagerdestroyviewincontainer appviewmanagerdestroyviewincontainer viewcontainerrefremove viewcontainerrefviewcontainerrefclear anonymous function anonymous function promise asap flush error context browserdomadapterlogerror anonymous function anonymous function promise asap flush plunker remove template nt get error using chrome mac", "num": "5169", "d": "11/2015"}, {"title": "keyboard events div fired", "body": "tried listen keyboard events component way html method never called way handle keyboard found add event listener typescript private handlekeybind constructor thishandlekeybind thishandlekeybind documentaddeventlistener keyup thishandlekeybind false private handlekey event keyboardevent switch eventkeycode case consolelog break left arrow ondestroy documentremoveeventlistener keyup thishandlekeybind false missing something official way handle keyboard events component", "num": "5168", "d": "11/2015"}, {"title": "feat http add url response object using xhr jsonp backends", "body": "currently making http request response object returned url property null would convenient url set request url response filtered use case checking response data format comes certain url intercepting responses reformat", "num": "5165", "d": "11/2015"}, {"title": "development docs template syntax typo", "body": "heading input output properties text template syntax section following stated events stream herodetaildeleted target property eventemitter toward receiver within template expression therefore herodetailhero output property perspective herodetail bolded typo believe read herodetaildeleted output", "num": "5163", "d": "11/2015"}, {"title": "feat component simple syntax dynamically creating child components", "body": "project need put component container component based application state aware dynamiccomponentloader syntax complex require additional services injected also problem bind values dynamically inserted component think would nice method allow us insert child components dynamically easy way something like something like reactdomrender", "num": "5162", "d": "11/2015"}, {"title": "unsubscribe service eventemitter observer component destroyed", "body": "please look plunk component subscribes events unsubscribes destroyed using callback constructor private data dataservice thisobserver thisdataon somedata gt consolelog ondata ondestroy thisobserverunsubscribe better way achieve result completely wrong way create service emits events could cancelling subscription logic moved automatically cancels component subscription something like class item constructor private data dataservice thisdataon somedata gt class dataservice next data string gt void let observer thiseventobserver next next", "num": "5160", "d": "11/2015"}, {"title": "add public api development mode", "body": "currently private api tracks development mode js dart move language facade devmodets devmodedart rename something like could getter dart plain field javascript", "num": "5157", "d": "11/2015"}, {"title": "changing variable nt update css class", "body": "small issue changing variable order set css class better explained using example demo idea clicking one words property controls css class updated reflect selected word buttonname couple objects array called want show different color element class set property problem alternate clicking several times eventually find recently clicked element nt change color however modifying something browser moving mouse elements page triggers appropriate change far tell happens chrome dev tested firefox chrome stable ubuntu believe problem nt occur although maybe repeating process enough times initially thought due digest cycle triggered immediately sure occurs occasionally browsers seem producing correct behavior ideas", "num": "5156", "d": "11/2015"}, {"title": "child extends parent dependecy working", "body": "parent injected http service ts import inject injectable component import http injectable export abstract class baseresource http child extends parent ts import injectable component import headers import baseresource baseresource component providers baseresource injectable export class carmodel extends baseresource postdata carid number http undefined please note child constructor suppose use parent dependencies actually parent dependencies initalized extends ok inject directly without extends", "num": "5155", "d": "11/2015"}, {"title": "initialization content children component", "body": "hi guys stumbled upon kind felt weird maybe explain behavior tell wrong given example class tab component selector tabs template directives tab class tabs contentchildren tab tabs aftercontentinit consolelog tabs thistabs component selector app template directives tabs class app expect work turns tab components never initialized tabs query list empty add also directives list example works components get initialized query list also contains component within tabs something wrong expect example work without needing add component directives list component expect content pulled gets compiled", "num": "5154", "d": "11/2015"}, {"title": "question null expressionsyntax", "body": "hi noticed shows error message binding expression tries use property object null instance xyz x null error way prevent error think many situations nullvalues time time bindings happens cases would great ignored error evaluated null think semantic well similar templateengines wishes manfred", "num": "5151", "d": "11/2015"}, {"title": "view updating new value emitted rxobservable", "body": "hi simple application like typescript import component bootstrap component selector mainroot template directives class rootcomponent test string constructor rxobservablejust delay subscribe gt consolelog yes thistest yes bootstrap rootcomponent observable emits new value update model test change reflected view bug related zonejs something like thanks plunker reproducing bug", "num": "5150", "d": "11/2015"}, {"title": "add mechanism generating obtaining unique ids nodes within component", "body": "using ids applications generally frowned upon certain cases avoided instance name require id element value forms written needed elements properties done way consider modal dialog component dijit exposes widget unique id property used widget templates generate unique element ids within widgets something similar could done using either property pipe could see either following syntaxes html html id used would also need object passed annotation also want make sure note two suggestions suggestions concerned ability get unique id node accomplished long convoluted", "num": "5145", "d": "11/2015"}, {"title": "google logo homepage old", "body": "", "num": "5143", "d": "11/2015"}, {"title": "ngmodel updating input type search clear button ie", "body": "using input type search field angularjs ie click search clear cancel button rendered inside field internet explorer model value reset undefined example html searchval searchval tested angular works fine chrome safari", "num": "5141", "d": "11/2015"}, {"title": "http still direct dependency reactivex", "body": "landed http longer imports rather uses one exported good since limits http dependency unfortunately still got place rx dependent upon directly mockbackendts mockbackend imports reexporting case current situation means need either bundle entire rxjs http approach external dependency neither ideal robwormald see quickwins", "num": "5137", "d": "11/2015"}, {"title": "input typeradio updating form value", "body": "could nt find open issue radio inputs said radios implemented others bug created plunker demonstrate", "num": "5133", "d": "11/2015"}, {"title": "mdgridlist tests break dev mode enabled", "body": "appears change propertiesbindings checked causes assertion errors dev mode enabled exception expression styleheight demoapp gt div nthchild gt mdgridlist nthchild gt mdgridtile nthchild changed checked previous value undefined current value calc styleheight demoapp gt div nthchild gt mdgridlist nthchild mdgridtile nthchild", "num": "5132", "d": "11/2015"}, {"title": "jsx like templates angular", "body": "would cool support jsx like templates angular jsx hold required information required generate dom run time following benefits come jsx angular type safety catch errors compile time better run time performance need parse template string run time dom info may ast serialized compile time typescript already supports jsx understands syntax intelligence easier refactoring support ides dealing templates possibility share component templates react", "num": "5131", "d": "11/2015"}, {"title": "xhr treat responses errors", "body": "server returns response text xhr backend route error observer instead calls success path porting service angular angular problem angular problem rxjsdom using meantime affected area rxjsdom think angular similarly", "num": "5130", "d": "11/2015"}, {"title": "feat test ability configure providers perspec basis", "body": "right way configure di tests use need ability configure providers perspec basis routing currently create extraneous blocks overcome limitation helper could extended include functionality instance", "num": "5128", "d": "11/2015"}, {"title": "didiscuss allow providers injected based final ngcontent transclusion point", "body": "problem nice discussion tbosch yjbanov assume following component say today following works however want build bigger composite widget use delegating case code fail transcluded finally knowledge way interact using interface hurts making composablereusable components cry suggestions yet third type bindingprovider supports transcluded content way republishing providers upwards alternative way allow interaction manner igorminar vsavkin", "num": "5126", "d": "11/2015"}, {"title": "router link parameters optional", "body": "using child routes passing parameters required pass value use case home cars main route going cars loads list cars sitecomcars pass id would load info car currently try go cars throws error pass filler value works plunker expected parameter optional note examples nt use route params components even throws error", "num": "5124", "d": "11/2015"}, {"title": "router requires redirectto child components root view", "body": "version alpha overview using component child components use redirectto let work correctly trying link root child route assumed using defining default component would work throwing error put redirectto works expected nt make sense required able define component example app home cars main set routes cars route three child routes default list detail appts currently works redirectto carsts plunker expected work throws error app component plunker sure something incorrectly able link cars load route default redirect different path", "num": "5123", "d": "11/2015"}, {"title": "ca nt find way remove auxiliary route window", "body": "auxiliary route opened remains window matter router links clicked really behaves independent route done named route remove window plunk auxroute chat related issue", "num": "5122", "d": "11/2015"}, {"title": "installing part package", "body": "using angular angular router assume router using angular currently copied file installed package install router package want use angular", "num": "5121", "d": "11/2015"}, {"title": "mode links", "body": "angular use locationprovider set causes internal links trigger full refresh instead change route angular nt find similar functionality angular currently know ways change url angular app route changes without full page reload attribute company working app gets content cms may contain links parts application ca nt use routerlink quickly tried create directive would help normal link supposed miss something directive selector routerlink properties href host click go event class adirective href string", "num": "5120", "d": "11/2015"}, {"title": "impact objectobserve removal standard", "body": "heavily invested objectobserve would roadmap removal feature standard", "num": "5119", "d": "11/2015"}, {"title": "multilevel object multiple ngfor working", "body": "php multilevel array keys values resembles object structure js use simple foreach loop thru subbranch multilevel array works perfectly easily give ngfor template object loops expected try use second ngfor inside first ngfor loop work built pipe convert object array order execute second ngfor bug missing feature something completely wrong intuitive use multiple ngfor object work could critical functionality especially falcor handles really large multilevel object data need iterate well stackexchange topic matter example", "num": "5115", "d": "11/2015"}, {"title": "massive delays template xhr mobile safari images", "body": "preface fact weird issue could affecting large number apps issue mobile safari latest version though could affecting versions template xhr calls nginclude somehow delayed significant time multiple images origin page rephrase nginclude directives use load html many seconds loaded alongside multiple images source mobile safari make worse behavior consistent happens sometimes times also sure many images needed issue occur noticed fewer like images see issue fairly sure server issue use nodejs put standard basic server able see server responding requests immediately dev console see html downloaded short amount time reason download process nt long time additionally browsers including mobile chrome desktop safari everything works normally leads think front end back end issue attempted replicate issue examples page bare bones example issue includes latest angularjs script bunch images origin one nginclude page takes moments load free heroku server needs spinup time remember said consistent may refresh times usually able replicate refreshes sometimes takes page except images loaded different origin note problem page matter many times refresh wwwovidlifecom main site also see issue also occurs note nav bar appear uses good seconds sorry unable make plunkr codepen show example issue related serving images origin may write simple server really able reproduce problem", "num": "5112", "d": "11/2015"}, {"title": "need smaller libraries importing annotations", "body": "dart would help code nt import view injectable similarly libraries also", "num": "5111", "d": "11/2015"}, {"title": "directives styleheightpx contentheight leaves value even contentheight nulled", "body": "assume following template html html html however transitions nonnull value nullundefined expected html actual html vsavkin possibly cd related workaround use manage string", "num": "5110", "d": "11/2015"}, {"title": "nov remove reflectpropertiesasattributes commonoptionsdart commonoptionsreaderdart", "body": "camelcased match transformer parameters parameter", "num": "5108", "d": "11/2015"}, {"title": "extra div using ngoutlet", "body": "page using aspect something like directive view instead extra start creating possible css conflict", "num": "5107", "d": "11/2015"}, {"title": "docs backfill changelogmd following breaking changes", "body": "rename make routing concepts easier understand routedata token removed replaced type routedata documentation following breaking changes missing constraint added route parameter camelcase gt gt gt", "num": "5105", "d": "11/2015"}, {"title": "customevent handler syntax nt trigger directive selector", "body": "trying add custom event elements using directive attribute wrapped parenthesis directive nt bound element example directive selector animationlistener events listener animationlistener host animationend triggeranimationended export class animationlistener listener eventemitter new eventemitter component selector demo view template directives animationlistener export class democomponent log void consolelog animation ended trying use animationlistener directive selector event binding log directive attaching modal element could use different selector event attribute nt elegant single event attribute", "num": "5104", "d": "11/2015"}, {"title": "render dom element", "body": "trying find solution anywhere render componentdirective jqueryselector import component view import dropdown commoncomponentsdropdown export class somecontroller constructor inserthere append dropdown understand use renderer somehow", "num": "5101", "d": "11/2015"}, {"title": "continuous delivery npm pub percommit publishing", "body": "order able test angular builds quickly providing hotfixes outside scheduled releases start publishing angular npm pub every green master build change release become blessing ceremony commit picked marked release notes drafted release order consumers install release builds via npmpub need adhere version scheme distinguishes nonblessed blessed builds propose use semver conventions already used angular convention follows green master build published blessed release build published also implement need least following store npmpub credentials encrypted secrets travis build update packagejson pubspecyaml percommit version string setups travis deploy script deploys artifacts npm setups travis deploy script deploys artifacts pub also consider automating releases angular use ciangularjsorg wonder could come way trigger release via travis travis receives authorized signal cut release", "num": "5100", "d": "11/2015"}, {"title": "potential bug url hash decoded tested angular amp", "body": "browsing code reading still sure intended behavior happening us one specific instance angular used component page party script sets windowlocationhash angular locationwatch picks url url decoded party js script grabs windowlocationhash value decoded third party script expects encoded still creates bug reason occurs case third party script splitting character procat se kohler side discharge gets encoded angular modifies put json send wire decoding hash breaks process example setting windowlocationhash notice gets decoded intended behavior could glean spec nt happen characters slash question mark allowed represent data within fragment identifier beware older erroneous implementations may handle data correctly used base uri relative references section", "num": "5099", "d": "11/2015"}, {"title": "get access view dependency", "body": "currently getting access dom element using elementref looks like right way go party plugin integration need get dom reference component think may able get dependency view component access dependency constructor", "num": "5095", "d": "11/2015"}, {"title": "datatarget attribute renamed target compiled", "body": "datatarget property renamed target bug output console", "num": "5092", "d": "11/2015"}, {"title": "bug ngrepeat ngmodel input typeemail", "body": "hello found weird bug use input instead inside binding becomes broken check fiddle slightly modified version jaime tried jsfiddle project thanks", "num": "5090", "d": "11/2015"}, {"title": "textarea ngmaxlength issues chrome", "body": "chrome made textarea character number limit showing text x characters left one linebreaks text counter wo nt reach zero type reach wo nt go linebreaks count issue existing chrome angular version chrome version", "num": "5088", "d": "11/2015"}, {"title": "controlgroup ngformmodel form always invalid childs input controls", "body": "two different examples pattern parent component inputs child component nt know form could return valid true", "num": "5087", "d": "11/2015"}, {"title": "compile html js", "body": "tried makes misstakes compiled browserify errors solve thanks", "num": "5085", "d": "11/2015"}, {"title": "add debugelement accessors roottestcomponent", "body": "local modification merge upstream dart code looks like", "num": "5081", "d": "11/2015"}, {"title": "router div wraps template content", "body": "angular component router adds wraps template content behaviour breaks css rules example angular material div added mandatory add attributes compiled div template", "num": "5078", "d": "11/2015"}, {"title": "dynamiccomponentloader movenodesaftersibling causing rendering issues", "body": "currently calls corresponding calls creating adding new component next existing component appviewmanager domrenderer issue first inserts new element target element shuffles around target element seems unnecessary know new element going come target element causes subtle issues browser example ionic push new component navigation stack first component reset see vanilla htmljs example causing reset scroll red area second timeout fires work around saving restoring also worry potential flickers issues method seems like solution would allow explicit using avoid element detachreattach subsequent issues", "num": "5077", "d": "11/2015"}, {"title": "using querylist query following docs articles working", "body": "process building library shared community via npm stumped always returns empty list items upon instantiation subscribing pseudo code follow read followed documentation docs realted query etc well read tried using well avail given directives similar following directive selector container class container items querylist constructor query item descendants true items querylist thisitems items thisitemschangestorx subscribe list gt list always empty thisitems also always empty directive selector item class item input item string constructor private el elementref markup like given bootstrapped component like component selector app template directives container item export class appcmp public items array items omitted example would full objects bootstrap appcmp sure using wrong bug", "num": "5073", "d": "11/2015"}, {"title": "public api test fails browsers", "body": "started last rxjs upgrade old browsers safari lt android lt", "num": "5072", "d": "11/2015"}, {"title": "router link child routes async route", "body": "far tell ca nt link child routes component loaded asynchronous route understand router ca nt see child component routes loaded generating link time hard deep link routes asynchronously loaded components see example try run get important code main route config appts main component link child route config lazyts", "num": "5071", "d": "11/2015"}, {"title": "unit tests failing browser nt support symboliterator", "body": "tests failing ie safari lt ios lt android lt root cause rxjs hardcodes systemiterator browsers token used changed year ago pr opened solve rxjs side available rxjs dependency updated workarounds removed cc blesh robwormald", "num": "5067", "d": "11/2015"}, {"title": "plnkr update forwardrefts", "body": "example live demo look like right link", "num": "5066", "d": "11/2015"}, {"title": "plnkr needs updated providerts", "body": "example live demo looks like right one plnkr link fixed", "num": "5065", "d": "11/2015"}, {"title": "style child component viewencapsulationemulated", "body": "change styles child component parent viewencapsulationemulated think common thing happens reusable component example mybutton component different background color parent component button component right nt work styles encapsulated affect components defined", "num": "5064", "d": "11/2015"}, {"title": "question app modularity", "body": "allows build flexible modular app structure ex part current project module contains directives services things ex react components also module indexjs file angular module declared directivesservices assigned module uses dependency another js smthmoduleindexjs var angular require angular var smthfactory require providersmthfactory var smthdirective require directivesmthdirective var smthmodule angularmodule smthmodule smthmodulefactory smthfactory smthfactory smthmoduledirective smth smthdirective moduleexports smthmodule appjs var angular require angular var smthmodule require smthmodule var app angularmodule app smthmodule declare module items module add dependency top level module use module directivesservices anywhere app bun thing tried build small side project ca nt find anything modular structure simple two modules want use chat component service main need import whole relative path component another module modules reallocated must fix import new relative path also service requires smth like http js import injectable import http injectable export class chat constructor private http necessary inject httpproviders services top level app component uses service depend components inheritance thing breaks modular structure componentsservices ona module knows path componentsservices modules must watch dependencies easily solves via modules system missed something thing plans cases nt see comfortable use current app structure anythere except small project without need modulaity thx", "num": "5063", "d": "11/2015"}, {"title": "question asyncpipe compatible rx observable", "body": "wondering asyncpipe compatible rx observable looks seems plunk illustrates trying use pipe keeps throwing exceptions", "num": "5062", "d": "11/2015"}, {"title": "referencing function service two location breaking di", "body": "spent last hours attempting figure problem life ca nt sure bug something nt understand short story attempting use dynamiccomponentloader create dynamic panel system working create remove panels long story services due previous success figured getting injected correctly components one holds reference component holds dynamiccomponentloaders subscriptionlist pure data main appcomponent call function panels created without flaw tried inject linkservice another component call vary function time subscriptionlist null undefined get wall errors happens call function either location reviewed linkservice logs definitely injected correctly components identical also note reference created component created first time recreated service reference would null comment function call one location nt matter begins work call still injecting services look constructor dynamicloader dynamiccomponentloader injector injector element elementref thisdynamicloader dynamicloader thisinjector injector thiselement element component extends class component selector contentcomponent template export class testcontrolcomponent extends basecontrolcomponent linkservice linkservice component holds call component failing link service import testcontrolcomponent contentcontroller export class linkservice testcontrol testcontrolcomponent like said sure bug familiar angular yet thanks", "num": "5061", "d": "11/2015"}, {"title": "proposal testing sugar", "body": "really common pattern angular testing wrap entire callback think sugarized bit also good solution abusive indentation coming show stars default injectasync testcomponentbuilder tcb gt return tcbcreateasync ngbrating fixture gt fixturedetectchanges martin suggested use wrapper like fond wrappers like codebase workaround formatter since angular desperately needs lot sugar around testing think good candidate check angularclangformat information cheers", "num": "5060", "d": "11/2015"}, {"title": "viewencapsulationnone styles bleed viewencapsulationnative components siblings", "body": "sibling components one viewencapsulationnative viewencapsulationnone styles component stylings appended shadow root one component set native plunker updated stackblitz component set native adopt rest css rules nonnative components screenshot rendered dom last three style elements appended end shadow root actually declared two components set none emulated modes three components set native rules applied local component mixed rules bleed native nt bleed native", "num": "5059", "d": "11/2015"}, {"title": "download links wrong", "body": "sure correct place issue seemed likely spot text sends user getting angular source link incorrect point repo got page following link navigation click link select row", "num": "5057", "d": "11/2015"}, {"title": "typeerror read property infakeasynczone undefined", "body": "trying use following test get following failure tracing error found offending line following seems defined anywhere wrong", "num": "5053", "d": "11/2015"}, {"title": "parent directive query child directives child parent injected constructor", "body": "see demo repo reproducing issue present parent directive several child directives present child try inject childs parent using directive selector parentdirective export class parentdirective childs constructor query childdirective childs querylist consolelog building parent directive childschangestorx subscribe gt array always size zero thischilds childstoarray childs list always empty childs trying parent injected using directive selector childdirective export class childdirective remove injection query returns several elements expected issue reproduced repo", "num": "5051", "d": "11/2015"}, {"title": "tell angular update component view updating array", "body": "using firebase realtime backend sample app seem keep hitting walls comes view updates change shape array example plunk illustrates talking using mimic latency delays app dependencies async wait create array basically happens view pickup changes made array already rendered made changes later point maybe make class depend something could use let angular know updates run checks views", "num": "5050", "d": "11/2015"}, {"body": "talked brandonroberts seems behavior design however illegal route component unfulfilled may see dummy pattern becoming thing angular think component different basically little boxes filled contextual info blocks weather box upcoming concerts blabla states three little boxes used order still able route component boxes empty nodes would fill dummy components", "d": "11/2015"}, {"body": "cburgdorf also multiple routes component avoid dummy routes", "d": "11/2015"}, {"body": "yep know speaking abstract terms means make leaf components dummyable optional reuse one existing components act dummy depending case may good thing may feel like abusing existing component", "d": "11/2015"}, {"body": "cburgdorf good point", "d": "11/2015"}, {"body": "always making things easier consumer entirely sure proposal really big win jvandemo stated platform already exposes providers however still need know providers exists order make code work nt really change providers exported would still need know exports make use cases importing predefined list providers nt even enough eg want use different location strategy router need set provider anyway case need know exported needed setup particular provider addition sure would cause problem land providers exported modules allow us import alias equivalent way also like add definitely need figure kind best practices comes things like building libraries never enforced maybe part global styleguide almost everyone agrees", "d": "11/2015"}, {"body": "thoughts everybody exporting named thing probably bad idea libraries might also export directives pipes typescript autocomplete solves problem nicely users going read docs regardless maybe good idea community know ocombe worked issues definitely needs consideration good design jvandemo definitely agree needs solved sure covers quite yet", "d": "11/2015"}, {"body": "think already autocomplete typescript get covered library well documented jsdoc even see documentation auto complete least case webstorm lib library seed good idea make repository definitely work good practices well would help", "d": "11/2015"}, {"body": "thank great feedback think usefulness shorthand property becomes clear multiple providers exported library suppose thirdparty library called exports providers without shorthand property javascript must know import could read party library docs import heroservice heroesservice swordservice knightservice weaponservice gameservice scoreservice superheroessuperheroes specify required providers bootstrap appcomponent heroservice heroesservice swordservice knightservice weaponservice gameservice scoreservice shorthand property javascript import providers superheroproviders superheroessuperheroes bootstrap appcomponent superheroproviders property name think actual name relevant long convenient way grab providers using one property name originally proposed easy short selfexplanatory could name library author chooses author could choose export instead javascript import superheroproviders superheroessuperheroes bootstrap appcomponent superheroproviders making alias obsolete collision collision another library still alias important aspect would shorthand key available called directives pipes similar convention could used directives pipes suppose library exports directives pipes library could export quickly get access component definition easier upgradability library features new services directives andor pipes newer releases consumer using shorthand properties would automatically access without update bootstrap code goal ultimately goal provide maximum convenience library consumers would great could establish best practice library authors start based experiences people already working libraries would make interface new libraries consistent good thing start whole new ecosystem angular libraries good thing explosion angular libraries inconsistent consume would indirectly make angular apps harder set maintain although may premature think angular still alpha think topic really important angular ecosystem probably start growing exponentially next couple months thanks great input really enlightening hear many different opinions", "d": "11/2015"}, {"body": "set stone yet follow similar convention ngbootstrap export providers proposed override strategies engines case pascalprecht said feel like libraries export package makes sense sure always early stage angular community need see things evolve like libraryseed idea seeds right plan write two mores angular libraries apps perhaps run workflow organization p", "d": "11/2015"}, {"body": "see part effort get latest builds available quicker nt fully complete yet", "d": "11/2015"}, {"body": "ah thanks info smile", "d": "11/2015"}, {"body": "controls map contain control instances nested controlgroup instances controlarray instances typescript compiler ide know type get back ask instance key case add cast control using course name controls bit misleading setting", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "varghesep based current http implementation code looks good nt think specific guidelines use reactive apis angular angular uses rx hood certain things like http forms contentview children able integrate rx apis seamlessly sure robwormald thoughts", "d": "11/2015"}, {"body": "waiting till release write book buy quick dirty version", "d": "11/2015"}, {"body": "component needs notify outside world value changed see working implementation", "d": "11/2015"}, {"body": "also longer need manually include coredirectives formdirectives included automatically", "d": "11/2015"}, {"body": "robwormald awesome thanks", "d": "11/2015"}, {"body": "add see", "d": "11/2015"}, {"body": "issue redirected pull request made include systempolyfills angular code cdn pull request side note may required edge", "d": "11/2015"}, {"body": "agree want note part optional routes duplicate removed another part similar routerlink works already", "d": "11/2015"}, {"body": "read documentation nt find support route segments described idea one route optional route parts optional parameters call get clean url without slashes end empty segments like", "d": "11/2015"}, {"body": "sorry misunderstanding removed reference", "d": "11/2015"}, {"body": "could reference dom node want add click event import observable give observablefromevent thisreferenceonclick try", "d": "11/2015"}, {"body": "posted question rxjs suggested may right approach", "d": "11/2015"}, {"body": "terms eventemitters however familiar rxsubject eventemitter similar could make whole thing easier click event fire next value eventemitter", "d": "11/2015"}, {"body": "eventemitter currently literally rxsubject easiest way accomplish currently maxdignan suggests long term may case would advisable simply use subject see also related proposal varghesep please try asking questions gitter channel opening issue try keep github issues actionable issues feature requests rather howto cheers", "d": "11/2015"}, {"body": "duplicate angular resolution functionality core angular better building directive achieve like plenty examples issue referenced", "d": "11/2015"}, {"body": "hmm interesting one also works define getter setter", "d": "11/2015"}, {"body": "sent use solves issue found", "d": "11/2015"}, {"body": "nt fail chrome os x also used websockets great success already perhaps could post sample code using context", "d": "11/2015"}, {"body": "using chrome version windows installed version plunk works problem must specific earlier versions chrome", "d": "11/2015"}, {"body": "proposed solution would async method asynctick test fixture would resolve microtasks queued angular zone", "d": "11/2015"}, {"body": "idea awesome problem current pattern lacks functionality say hey give children nice simplifies lot patterns like accordion carousel tabs problem bit useless access first item last item items subscribe get add removal children useful stuff way concrete stuff children angular children requires parent collaboration parent couple together stuff angular idea idea move responsibility parent children dumb component outputs changes really like idea currently robwormald pointed pare nt ca nt take responsibility nt know children need way observe children listen need trigger needed logic way simple components reusable children", "d": "11/2015"}, {"body": "msummersintrax repo want open issue close one", "d": "11/2015"}, {"body": "sorry robwormald thanks", "d": "11/2015"}, {"body": "ping juliemr", "d": "11/2015"}, {"body": "last checks htttp imports changed imports see facades", "d": "11/2015"}, {"body": "last discussion vsavkin imports facades allowed might much apart merging unless something changed", "d": "11/2015"}, {"body": "pkozlowskiopensource cool thanks think vsavkin actually process correcting one import pr working perhaps issue noop vsavkin true enable enforcement private imports", "d": "11/2015"}, {"body": "yes allow importing facades enable enforcement angulartoolsbroccolibroccolicheckimportsts probably want add something like", "d": "11/2015"}, {"body": "jeffbcross vsavkin opened enforce import checks http module level suspicious import mockbackendts sure get rid one", "d": "11/2015"}, {"body": "common theme", "d": "11/2015"}, {"body": "another issue related", "d": "11/2015"}, {"body": "typings fixes tsd replacement related state typescript packages", "d": "11/2015"}, {"body": "thanks links check indeed still room improvement ts typings land", "d": "11/2015"}, {"body": "tried install jquery using typings came today", "d": "11/2015"}, {"body": "episodeyang typings registry would like create contribute registry welcome seen message tried use", "d": "11/2015"}, {"body": "bad idea diary pretty simple lib still work bit tinkering might worth bringing main repo adding dart support igorminar", "d": "11/2015"}, {"body": "like idea subscribe get similar way thinking lot places probably going land beta think one thing look postbeta adding kind thing lot various places makes sense", "d": "11/2015"}, {"body": "great", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "pr adds shared platform function uri decoding supporting method could add decoding desired solve issue pr simply could open separate pr add support would recommend done pr lands cc btford", "d": "11/2015"}, {"body": "originally wanted enable long stack traces based dart option run checked mode get long stacks run prod mode get short stacks supports able tree shake based code size impact however recently changes specify dev mode need refresher status quo", "d": "11/2015"}, {"body": "cases think noneswhatever syntax anything typescript sugars away moment focused providing documentation want use angular without build tooling typescript defined feature set point say wo nt document syntax think good idea currently focus two well three dart hard us say well turn feature xyz transpiler choice example babel upgrade currently nt support decorators proposal reference javascript class someservice constructor consolelog helloo class app constructor service static get parameters return someservice static get annotations return new componentmetadata selector app template hello world providers someservice alternately appannotations new componentmetadata selector app template hello world providers someservice appparameters someservice bootstrap app define pure setup dependence decorators could adds support pseudodecorator totally making go warning js const decoratecomponent config gt ctor gt ctorannotations new componentmetadata config used like use syntax similar edit updated static attach options", "d": "11/2015"}, {"body": "important could use help concrete questions something ca nt figure angular want make road reasonable even nt resources right give track documentation may add personal note typescript awfully nice especially factor productivity benefits tooling support personally nt see benefit going transpile might well get productivity back effort talking angular team", "d": "11/2015"}, {"body": "fwiw additional potentially simpler approach relates marking parameters injected component typescript class mycomponent constructor myservice myservice inject foo foo babel without parameters decorators class mycomponent static parameters myservice new inject foo constructor myservice foo clearly things possible bit early know best guidelines apis due time friends", "d": "11/2015"}, {"body": "nt think actually works wardbell iirc nt static properties thing though babel transformer enable", "d": "11/2015"}, {"body": "angularconnect team panel video naomiblack talked docs nt think makes sense docs guide mapping typescript concepts withwithout decorators guide users able interpret typescript docs well enough", "d": "11/2015"}, {"body": "robwormald pretty sure static properties supported know post official scott allen rarely gets kind thing wrong find spec tough going link supports notion static method docs guide mapping typescript concepts withwithout decorators yet", "d": "11/2015"}, {"body": "wardbell static methods including getters setters static properties js class foo static somemethod return baz static get bar return baz foosomemethod baz foobar baz valid way attach static properties without getter fact nicely decorator brings thread full circle js const staticprops props gt ctor gt objectassign ctor props staticprops bar baz class foo matter instance properties declarable way believe latest proposal fix typescript following valid ts typescript class foo static class property static bar baz instance class property baz baz foobar baz let afoo new foo afoobaz baz", "d": "11/2015"}, {"body": "robwormald rofl nt make lecture difference field unmediated data value property woot access data via methods compiler sauce makes look like field joking aside distinction clarifying", "d": "11/2015"}, {"body": "ok nothing interpolation like told problem another one tricky one closing still little bit confused somebody canwants expand little bit subject appreciate reopening case anything", "d": "11/2015"}, {"body": "full code ericmartinezr also input name directive apparently hijacked assignment interpolated property native replacing resulted image visible", "d": "11/2015"}, {"body": "design see details", "d": "11/2015"}, {"body": "realize nt written much design seems new way suffers couple key problems first glance actually longer type old uses angular custom syntax people learn quirks dsl write tooling", "d": "11/2015"}, {"body": "ewinslow see discussion", "d": "11/2015"}, {"body": "read intended takeaway", "d": "11/2015"}, {"body": "ah points valid continue discussion issue", "d": "11/2015"}, {"body": "one problem proposal nt look like javascript know dsl dsl expression suppose write js also transformed part former better remember", "d": "11/2015"}, {"body": "problem syntax time change detection fires receiving new instance promise getpeople method must fired way detecting value changed therefore refiring request nothing pipe specifically behavior would fwiw avoided possible much less performant using normal values make sense", "d": "11/2015"}, {"body": "thanks makes sense imagine underlying thing avoid returning observable method called change detection cycle happy close", "d": "11/2015"}, {"body": "pcroc problem property native label element attribute need use", "d": "11/2015"}, {"body": "pascalprecht totally right mhevery one comes quite often maybe alias gt know would create special case since common", "d": "11/2015"}, {"body": "use form builder create control group", "d": "11/2015"}, {"body": "alternately use keyup input event change fire input blurs see please ask sorts questions gitter reserve github issues actual issues bug reports thanks", "d": "11/2015"}, {"body": "robwormald nt another way hate writing extra code example jquery even first version angular able write one callback handling thing think creating form builder extra code way think actual issue lack angular feature effects simplicity code", "d": "11/2015"}, {"body": "options use single callback keyup input individually create instances observe individual values observe entire group observe dead unlikely angular implement anything along lines gives option observe values time including validation minimum amount code something concise like see", "d": "11/2015"}, {"body": "uses rxjs supports observable implements es specification said js based pubsub system work", "d": "11/2015"}, {"body": "missing reflectmetadata example works plunk", "d": "11/2015"}, {"body": "uhoh overlooked thank advice", "d": "11/2015"}, {"body": "issue anymore could please close", "d": "11/2015"}, {"body": "seems reasonable tracking", "d": "11/2015"}, {"body": "thing systemjs try download polyffils things like promise etc really nt think wo nt things needed already available imo proper way solving include shim systemjs need ie anyway prevent systemjs firing xhr little thingy thus saving one roundtrip server deploying systempolyfillsjs wo nt hurt might put users suboptimal track would rather vote deploying shim", "d": "11/2015"}, {"body": "attempt later look appendix minute quick start tried include still required systempolyfills would fail load app sat nov pawel kozlowski notifications githubcom wrote thing systemjs try download polyffils things like promise etc really nt think wo nt things needed already available imo proper way solving include shim systemjs need ie anyway prevent systemjs firing xhr little thingy thus saving one roundtrip server deploying systempolyfillsjs wo nt hurt might put users suboptimal track would rather vote deploying shim reply email directly view github", "d": "11/2015"}, {"body": "ca nt bootstrap angular app using ngupgrade want use component router use angular version", "d": "11/2015"}, {"body": "brandonroberts bootstraping angular app thought registering providers angular components bootstrapping angular limitation using ngupgrade main one around routing", "d": "11/2015"}, {"body": "bootstrapping angular order use routerproviders must bootstrap angular component first nt using ngupgrade", "d": "11/2015"}, {"body": "nt using ngupgrade true ngupgrade bootstraps multiple angular components inside angular module providers angular world need downgraded order used modules however brandonroberts mentioned version component router used particular use case think however able use", "d": "11/2015"}, {"body": "also nt see component snippet used could also cause problems guess", "d": "11/2015"}, {"body": "thanks lot brandonroberts pascalprecht one question components currently components work fine intention able use directives within components ie foo directive inside appcomponent sure understand best way need downgrade components even never going required directives bootstrapping less like angularmodule angularlegacy angularmodule angularlegacy directive foo function return restrict eac require ngmodel link function scope element attrs controller var controlleroptions options elementtext foo var adapter upgradeadapter new upgradeadapter angularmodule angularlegacy directive app appcompnent adapteraddprovider httpproviders adapteraddprovider routerproviders adapterbootstrap documentbody angularlegacy appcomponent something like", "d": "11/2015"}, {"body": "everything inside appcomponent nt need downgrade components also example plunk component inside appcomponent downgraded thanks clarification pascalprecht", "d": "11/2015"}, {"body": "great thanks lot brandonroberts closing issue find new router", "d": "11/2015"}, {"body": "hey man issue open", "d": "11/2015"}, {"body": "brunobelarmino thanks reply", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "afaik decorations inherited extending classes decorated", "d": "11/2015"}, {"body": "pascalprecht think entirely true piece code proves decorated property inherited correctly alpha typescript import bootstrap component input output ngfor eventemitter abstract class datacomponent input data interface tododata todos todoentrydata interface todoentrydata content string component selector todoentry template directives class todoentrycomponent extends datacomponent input data inherited component selector todo template directives ngfor todoentrycomponent class todocomponent extends datacomponent data tododata todos content task content task bootstrap todocomponent however seem work consistently eg try mixing inherited decorated property directly defined property getting errors example adding decorated property class get error typescript import bootstrap component input output ngfor eventemitter abstract class datacomponent input data interface tododata todos todoentrydata interface todoentrydata content string component selector todoentry template directives class todoentrycomponent extends datacomponent component selector todo template directives ngfor todoentrycomponent class todocomponent extends datacomponent data tododata todos content task content task ondeleted event consolelog event bootstrap todocomponent get try run code seems happening property recognized thus data bind property parent component decorated property child class define explicitly seems working expected typescript class todoentrycomponent error also goes away move parent class would really nice could mix inherited explicitly defined decorated properties", "d": "11/2015"}, {"body": "based code snippet requirejs machinery except library particular code nt cause errors since nt even use requirejs could set plunk reproduces issue", "d": "11/2015"}, {"body": "sample project running server uncaught typeerror read property setasap undefined error would found navigate page note appjs compiled typescript", "d": "11/2015"}, {"body": "looks like missing", "d": "11/2015"}, {"body": "problem line var require promise requirejs loaded require would return empty object works requirejs loaded quite understand happening", "d": "11/2015"}, {"body": "try putting looks like overriding used bundle", "d": "11/2015"}, {"body": "ericmartinezr thanks reply solve original code snippet work bit complicate sample project", "d": "11/2015"}, {"body": "investigation found code requirejs loaded define function define amd object try call define passing function returns promise however callback executed late return promise calling setasap", "d": "11/2015"}, {"body": "systemjs loader recommended load amd files uses configuration syntax fwiw", "d": "11/2015"}, {"body": "facing issue wondering configuring typescript compile angular amd umd cover instead commonjs would solve issue well instead", "d": "11/2015"}, {"body": "robwormald tried systemjs got error reason need use requirejs able reuse existing code way make requirejs work angular", "d": "11/2015"}, {"body": "nothing prevent two working together unable run code codeenvy create plunker template closer look", "d": "11/2015"}, {"body": "also sfx bundles producing today great fit amd loaders wait till lands get released", "d": "11/2015"}, {"body": "robwormald plunker", "d": "11/2015"}, {"body": "sort backwards imho could conceivably transpiled amd typescript unlikely support systemjs loader universal meaning load amd cjs code loader would advise authoring new code amd use system loader allow load legacy amd code new application example see also basically works requirejs loader", "d": "11/2015"}, {"body": "going close works feel free carry discussion", "d": "11/2015"}, {"body": "robwormald thanks example finally get working loading systemjs angular requirejs order", "d": "11/2015"}, {"body": "mlaval angular bs amp sl test output available somewhere know bs amp sl failures ios safai mobile accurate reflection realuser experience environments", "d": "11/2015"}, {"body": "tests failures fact campaign starts correctly successful fast far know problem running application safari mobile", "d": "11/2015"}, {"body": "updates main flake solved campaign run edge monitoring builds idea split browsers bs sl confirmed prs integrated last round monitoring done making jobs required", "d": "11/2015"}, {"body": "adamdbradley could expand use case callback actually runs child zone zone called goes event handlers microtasks", "d": "11/2015"}, {"body": "maybe intended protected", "d": "11/2015"}, {"body": "see working solution also repo issues please open", "d": "11/2015"}, {"body": "would nice able choose mocha jasmine", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "hey vance repo looking one", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "rosendi perfect thank nt type attributes validated angular default manage another question added another validation rule emailvalidator show different messages two rules way write something like also prefer write another validator class solving issue possible", "d": "11/2015"}, {"body": "currently angular builtin validators yep implement custom validator email inputs regexbased inputs seems logical since email validation little bit tricky case small remark agree article one hand checking email format synchronous process uniqueness validator asynchronous implemented different way hand think much better avoid monolithic classes testing classes much complicated code looks overloaded well ps compose validators", "d": "11/2015"}, {"body": "rosendi thank clear helpful answer", "d": "11/2015"}, {"body": "egytechnology navigate function takes array also may need put full link dsl array", "d": "11/2015"}, {"body": "brandonroberts know navigate function takes array sorry seems forget put code meaning put full link dsl array function change url back home page way navigation views typescript code angular using", "d": "11/2015"}, {"body": "egytechnology ca nt tell based code snippet trying navigate say full link dsl navigating root component provide plunk example", "d": "11/2015"}, {"body": "brandonroberts cant create plunk example project based aspnet project could gave angular codes way using angular creating spa project switch views issue routing trying submit data angular using normal click event process end event must navigate user new page application sequence content router config showing data inside view called created aspnet first page appears attribute must navigate user event called appts file typescript import bootstrap component view bind inject import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet route locationstrategy hashlocationstrategy importing application components import businessnamelookup businessnamelookupbusinessnamelookupts import abn abnabnts import lookupdetails lookupdetailslookupdetailsts import businessnames businessnamesbusinessnamests import businesswebaddress businesswebaddressbusinesswebaddressts import businesscategory businesscategorybusinesscategoryts import contactinformations contactinformationscontactinformationsts import businesspurchaseaddress businesspurchaseaddressbusinesspurchaseaddressts import businessimages businessimagesbusinessimagests import surveyquery surveyquerysurveyqueryts importing application components import businessmodel datamodelsbusinessmodelts component selector app view template directives routeroutlet routerlink routeconfig new route path component businessnamelookup new route path abn component abn name abn new route path lookupdetails component lookupdetails name lookupdetails new route path businessnames component businessnames name businessnames new route path businesswebaddress component businesswebaddress name businesswebaddress new route path businesscategory component businesscategory name businesscategory new route path contactinformations component contactinformations name contactinformations new route path businesspurchaseaddress component businesspurchaseaddress name businesspurchaseaddress new route path businessimages component businessimages name businessimages new route path surveyquery component surveyquery name surveyquery class appcomponent bootstrap appcomponent routerbindings bind locationstrategy toclass hashlocationstrategy businessnamelookupts typescript import component view inject import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet router location import businessmodel datamodelsbusinessmodelts import singletonservice datamodelssingletonservicets let model new businessmodel component selector bnamelookup view templateurl homebusinesslookup export class businessnamelookup value abnts typescript import component view import routerdirectives routerproviders routeconfig routerbindings routerlink routeroutlet router import businessmodel datamodelsbusinessmodelts import singletonservice datamodelssingletonservicets let model new businessmodel component selector bnamelookup view templateurl homeabncode export class abn values", "d": "11/2015"}, {"body": "egytechnology router delegates navigation root router nt need routerparentnavigate abn tried using putting slash front force router navigate root component instead component injected router alpha version using", "d": "11/2015"}, {"body": "using alpha using nothing change router still dive back first page call new page show symbol", "d": "11/2015"}, {"body": "think may take attention put line call function include line work put put function call template show error", "d": "11/2015"}, {"body": "finally solve issue using function frontend html", "d": "11/2015"}, {"body": "cc wardbell know thoughts well", "d": "11/2015"}, {"body": "note extended sure removed possible putting back could solve complaints", "d": "11/2015"}, {"body": "see discussion changed inherit", "d": "11/2015"}, {"body": "agree wordy unexpected think twice remember attach component element able find nt obvious extend either cool long ago change ca nt available directly tcb right would way much common sense ps nt care able get two places tcb happens places", "d": "11/2015"}, {"body": "simple proposal", "d": "11/2015"}, {"body": "juliemr actually used way several refactorings ended current state inheritance thing nt make sense exposing two properties directly via fixture fine", "d": "11/2015"}, {"body": "btw impact plan remove apis reexport via right", "d": "11/2015"}, {"body": "igorminar correct impact", "d": "11/2015"}, {"body": "simple proposal starting wonder debugelement useful public api", "d": "11/2015"}, {"body": "think debugelement useful authors components meant used one platform authors would care associated queries think authors want working one platform eg web enough interest go ahead make pr", "d": "11/2015"}, {"body": "dartonly problem right", "d": "11/2015"}, {"body": "closing duplicate", "d": "11/2015"}, {"body": "already flag inline templates disable transformer works well together build rules disable angular transformer used components well setup currently used tests", "d": "11/2015"}, {"body": "built lazy loading", "d": "11/2015"}, {"body": "possible dupe", "d": "11/2015"}, {"body": "yjbanov please determine angular public api bit suspicious happy hear arguments making public", "d": "11/2015"}, {"body": "yeah make public needed support custom code generators use pub transformers", "d": "11/2015"}, {"body": "brandyscarney version angular share plunker repro tbosch rkirov please help determine bug projection algorithm", "d": "11/2015"}, {"body": "angular version yep plunker tried make easy see visually smile", "d": "11/2015"}, {"body": "intended behavior far agree optimal content projection works right desugars angular uses simplified algorithm content projection called static content projection one restriction angular ca nt project parts template therefore angular applies css selector element content element one direct child eg understand case way add attributes implicitly created element angular also use information implicit template contains one child element however add additional semantics using user use either workaround could tell users want use inside use explicit element attribute also change select elements attribute eg leaving issue open need design proposal solve best way", "d": "11/2015"}, {"body": "dup think", "d": "11/2015"}, {"body": "quite dupe maybe solution could work attributes well nt see", "d": "11/2015"}, {"body": "kind possible today expression evaluates attribute removed afaik yeh maybe kind sugar boolean attributes", "d": "11/2015"}, {"body": "see well", "d": "11/2015"}, {"body": "may ask would nt better wait multiple write specific templates view android ios desktop etc wo nt check ios view android viceversa would save conditions", "d": "11/2015"}, {"body": "thank pkozlowskiopensource works hey ericmartinezr thanks tip certain cases want add attribute element without duplicating markup splitting multiple files", "d": "11/2015"}, {"body": "also way add attribute based expression value similar works class added element searched around could nt find anything sorry overlooked something", "d": "11/2015"}, {"body": "brandyscarney syntax could lowerlevel manipulation elementref probably good idea attributes explicit template", "d": "11/2015"}, {"body": "pkozlowskiopensource thanks quick reply", "d": "11/2015"}, {"body": "add directive work think real way handle may write value accessor polymer component though edit see comment", "d": "11/2015"}, {"body": "thanks zyzle works seen comment alxhub issue think intuitive reference close issue", "d": "11/2015"}, {"body": "review code see means choose html tags would used words text oneline input never dbarbour sorry clear concern try something nt work worried based reading mentioned blog post type html would like write think wo nt work", "d": "11/2015"}, {"body": "hey peekmo sure bet related seem like folks noticed similar behavior even though getting different ways", "d": "11/2015"}, {"body": "peekmo use either adding gets registered twice", "d": "11/2015"}, {"body": "ref", "d": "11/2015"}, {"body": "oh simple thank much sorry cause duplicate see", "d": "11/2015"}, {"body": "worries glad working", "d": "11/2015"}, {"body": "likely need update version npm need least version", "d": "11/2015"}, {"body": "robwormald think needs npm vetsion atm", "d": "11/2015"}, {"body": "derp gkalpak right", "d": "11/2015"}, {"body": "yes probably issue npm node version closing one seems npmrelated got way debugging troubleshooting one", "d": "11/2015"}, {"body": "using npm v nov pm rob wormald notifications githubcom wrote likely need update version npm need least version reply email directly view github", "d": "11/2015"}, {"body": "fix due bug node installer nt remove old npm installing new one results broken npm installation easiest way work around remove version installed node rm rf usrlocallibnodemodulesnpm reinstall node package", "d": "11/2015"}, {"body": "confirmed", "d": "11/2015"}, {"body": "reproduce tried unsuccessfully master", "d": "11/2015"}, {"body": "make sure got required node npm versions requirednpmversion lt requirednodeversion", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource node npm version correct guess uninstall install hmm", "d": "11/2015"}, {"body": "mentioned assume fine frustrating error", "d": "11/2015"}, {"body": "nathanwalker developer guide see prerequisite software nodejs version gt lt", "d": "11/2015"}, {"body": "thanks ericmartinezr installing turns also reason another version installed somewhere else ergh node sometimes", "d": "11/2015"}, {"body": "node move fsextra devdependencies dependencies makes error go away nt know causes behavior though", "d": "11/2015"}, {"body": "vsavkin comment", "d": "11/2015"}, {"body": "also interested app directives date input time input access ngmodel based blur tell user finished editing parse update ngmodel think way via defaultvalueaccessor requires", "d": "11/2015"}, {"body": "requesting shorter syntax new capability", "d": "11/2015"}, {"body": "requesting shorter syntax capability already exists exposed method", "d": "11/2015"}, {"body": "rlegrand see give want use npm style detailed", "d": "11/2015"}, {"body": "ok workaround cast particular functions loose benefits typescript", "d": "11/2015"}, {"body": "using ref imports typically long importing files tsc reference directly source", "d": "11/2015"}, {"body": "none angular docs examples plunkers julie far worked fine", "d": "11/2015"}, {"body": "router normally set routerlinkactive class active router links also check routerisactive method documentation", "d": "11/2015"}, {"body": "cghislai routerlinkactive class set link need information surrounding routerisactive needs instruction input nt see easy way get instruction route name", "d": "11/2015"}, {"body": "plnkr demonstrating behaviour", "d": "11/2015"}, {"body": "pulling imports directly figure best avoid imo part bigger questions share code core bundles one place public exports core http router others depend", "d": "11/2015"}, {"body": "process reworking import paths nothing imports code portable dom render core believe webworker safe take look try fix http imports", "d": "11/2015"}, {"body": "cool mostly fault importing directly assuming worker bundle includes sort", "d": "11/2015"}, {"body": "robwormald ah see yeah new worker bundle include", "d": "11/2015"}, {"body": "would nice directive nt applied control null prevent duplicated code would proposed syntax please keep ind trying know much possible directives active given template perf optimizations enable better tooling", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "think way plan support directive always applied becomes inactive secondary directive present specialized syntax", "d": "11/2015"}, {"body": "think may useful angularangular", "d": "11/2015"}, {"body": "thanks example could use store share data components", "d": "11/2015"}, {"body": "thanks example special case complex generic data store currently use yep temporary solution uses another helper service track app state", "d": "11/2015"}, {"body": "vsavkin rkirov fyi wrong order method calls mark dirty updating value", "d": "11/2015"}, {"body": "figured maybe worthwhile thing check framework output annotated output component annotation list ie outputs", "d": "11/2015"}, {"body": "typotter see", "d": "11/2015"}, {"body": "thanks ericmartinezr duplicate", "d": "11/2015"}, {"body": "component programmatically say let system know component dirty needs rendering", "d": "11/2015"}, {"body": "lifecycle hook called input properties component change arbitrary properties component lifecycle designed specifically address bindings also binding create view visible example binding need change value property within player model angular change detection using reference checks referencing complex object might want switch immutable way modifying data changing object references creating copies changes check example see angular react changes change object references", "d": "11/2015"}, {"body": "cajoy gionkunz pointed direct equivalent functionality observe anything hard provide proper solution since exposing functional usecase case general support questions directed appropriate support channel want keep github bug reports feature requests would suggest starting discussion", "d": "11/2015"}, {"body": "idea shared user information controllers different services user information may contain specific data might altered different components processed without view changes others implement features using simple event emitters listeners create component bootstrap file inject route like using hidden widgets workarounds compare simple watch observe implementation future going use gitter discussions", "d": "11/2015"}, {"body": "would really awesome thanks juliemr", "d": "11/2015"}, {"body": "juliemr nt think understand proposal could provide background", "d": "11/2015"}, {"body": "mhevery instead user specify return promise latter case could wrap test case zone declare complete asynchronous tasks done pr implements first version would public testing library moment", "d": "11/2015"}, {"body": "closed landed", "d": "11/2015"}, {"body": "yup", "d": "11/2015"}, {"body": "form prevent form submitting return", "d": "11/2015"}, {"body": "even without action request sent", "d": "11/2015"}, {"body": "mhevery sample illustrating issue", "d": "11/2015"}, {"body": "version angular using", "d": "11/2015"}, {"body": "use last version alpha", "d": "11/2015"}, {"body": "okay try", "d": "11/2015"}, {"body": "use last version alpha actually latest time writing alpha", "d": "11/2015"}, {"body": "egytechnology verify close", "d": "11/2015"}, {"body": "trying get error list say code use appts typescript import bootstrap component view bind import routerdirectives routerproviders routeconfig import homecomponent homehome component selector app directives routerdirectives routeconfig path home component homecomponent class appcomponent bootstrap appcomponent routerproviders homets typescript import component view bootstrap component selector home view template hello export class homecomponent bootstrap homecomponent files structure", "d": "11/2015"}, {"body": "egytechnology put angular related scripts systemjs typescript also remove traceur", "d": "11/2015"}, {"body": "ericmartinezr say get message home script", "d": "11/2015"}, {"body": "egytechnology think kind getting support questions original issue solved changes checkout ask kind questions close", "d": "11/2015"}, {"body": "hop upset mr pascalprecht new kind stuff want thank mr ericmartinezr help thanks", "d": "11/2015"}, {"body": "egytechnology oh hope nt give feeling", "d": "11/2015"}, {"body": "another problem need sort proxy component tree looks like users userslist usersdetail terminal able show breadcrumb looks like uibreadcrumbs wanted defining sort users route would require searching thru routes get one matches since way access whole route tree possible way came using breadcrumbsproxy looks like apparently return instruction rather child kinda useless would make easier would way search router something say perhaps javascript routergetinstructionbylinkparams users userslist returns instruction userslist route", "d": "11/2015"}, {"body": "another thing hard actually get instruction recreate link breadcrumb currently concatenating instruction tree manually composing array like gon na even worse manage get proxy working since keep two arrays instructions one real generating usersdetail one fake proxied userslist would really great could pass instruction router get back something like", "d": "11/2015"}, {"body": "yep something want nt gotten yet", "d": "11/2015"}, {"body": "looks like actually implemented docs wrong generate instruction instead url contrary docs reads", "d": "11/2015"}, {"body": "unfortunately thing return parent instruction instruction expect child sucks", "d": "11/2015"}, {"body": "design current http ts js apparently already solid widely used libraries dart", "d": "11/2015"}, {"body": "see also", "d": "11/2015"}, {"body": "sure allow use di", "d": "11/2015"}, {"body": "similar", "d": "11/2015"}, {"body": "fyi believe size currently initial limit need targets shrink improve", "d": "11/2015"}, {"body": "x replicate internal hello world project x run separate travis job x add analytics consider implementing follow pr mechanism would compare current payload size current master size fail build x require storing master payload size somewhere complicates matters maybe could use firebase", "d": "11/2015"}, {"body": "igorminar proposals think reasonable cap incremental increases still need absolute lt gzipped lt minified caps sla internal customers also without matter incremental percentage choose still exponential", "d": "11/2015"}, {"body": "duplicate output may related see issue js build level duplication generated js may impacting code size", "d": "11/2015"}, {"body": "note need store build size anywhere could checkout master branch previous commit build playground examples find outputs print gzipped size json branch version compare tiny nodejs script separate travis env", "d": "11/2015"}, {"body": "also broken commit date wed nov issue also reproduced running todo example adding single entry rendered twice", "d": "11/2015"}, {"body": "igorminar vsavkin tbosch looks weird ideas happening", "d": "11/2015"}, {"body": "maybe yjbanov could help tbosch ca nt look monday", "d": "11/2015"}, {"body": "victor look", "d": "11/2015"}, {"body": "work add import top strange nevertheless", "d": "11/2015"}, {"body": "sebastianstehle try bundle import shims zone reflect scripts kind crazy things might interfere module packagers loaders stick tag might concatenate files nt use bundlers btw going provide bundle party deps needed see closing one going bundles looking time ca nt investigate every setup every developer could", "d": "11/2015"}, {"body": "hi add happens pass url parameterif pass request makes use options passed create request instance", "d": "11/2015"}, {"body": "cajoy see could stick would add ofc prefer p", "d": "11/2015"}, {"body": "hasllocation way want go may wait fix thanks", "d": "11/2015"}, {"body": "oops mistake docs hand recognize executed child router ca nt use instruction navigate navigatebyinstruction delegates root router right seems recognize generates instructions child root yes instruction always includes full component hierarchy tried assumption looking code", "d": "11/2015"}, {"body": "root router returns full hierarchy see console output click links navigate absolute url also delegated root router", "d": "11/2015"}, {"body": "yep right problem", "d": "11/2015"}, {"body": "turned workaround import reflectmetadata reflectmetadata shim shim nt try import rather make sure corresponding file included browser test runner via tag otherwise mechanism shim need load soon possible import", "d": "11/2015"}, {"body": "pkozlowskiopensource nonbrowser test runners mean case test runner running browser guess mocha others nt well", "d": "11/2015"}, {"body": "nonbrowser test runners mean case test runner running browser guess mocha others nt well testing environment case adding reference reflect metadata nt differ adding js code shim angularspecific", "d": "11/2015"}, {"body": "pkozlowskiopensource use protractor commandline testing framework angular applications answer question nt see way include file importing files spec files", "d": "11/2015"}, {"body": "use protractor case reflectmetadata part application test right protractor tests app loaded browser saying need reflectmetadata protractor tests would strange got impression trying use protractor unittest runner job nt designed need example unittesting setup karma look", "d": "11/2015"}, {"body": "ok report back three days", "d": "11/2015"}, {"body": "case reflectmetadata part application test right protractor tests app loaded browser yes since angular requires use class decorators believe part angular thus transitively part application saying need reflectmetadata protractor tests would strange yes sorry clear workaround diff diff git aspects bspects index aspects bspects spects import reflectmetadata import controller srccontroller describe gt got impression trying use protractor unittest runner job nt designed need example unittesting setup karma look reproduce anyway tried another test runner mocha designed run unit tests right mocha able reproduce reproducer typescript srccontrollerts import ng ngcomponent export class controller typescript testspects import reflectmetadata import controller srccontroller describe gt gt let instance new controllercontroller patch represents workaround diff diff git apackagejson bpackagejson index apackagejson bpackagejson devdependencies mocha reflectmetadata typescript diff git atestspects btestspects index atestspects btestspects import reflectmetadata import controller srccontroller describe gt guess issue deserves reopening think pkozlowskiopensource", "d": "11/2015"}, {"body": "zonejs must loaded first systemjs using simple script tag", "d": "11/2015"}, {"body": "sure", "d": "11/2015"}, {"body": "better explain expected behavior vs actually happens clear seeing instead", "d": "11/2015"}, {"body": "updated description include expected behavior actual result", "d": "11/2015"}, {"body": "nt leak helpers outside bundles otherwise could run conflicts people instead include helpers within bundle imo done post beta nt change api surface someone really wants implement beta going stand way", "d": "11/2015"}, {"body": "robwormald measure things mingzip assuming gzip actual gains terms size would much smaller biggest pb ts nt give us file helpers produce nt equivalent traceurruntime", "d": "11/2015"}, {"body": "even nt much smaller savings js parse time still good", "d": "11/2015"}, {"body": "reactivexrxjs installed bug angular router build injectable function nt return function used decorator want manually edit angular router build file update following code file", "d": "11/2015"}, {"body": "please see attached image screen shot windows explorer reactivexrxjs installed see issue resolved made change suggested", "d": "11/2015"}, {"body": "jeffbcross vsavkin comment", "d": "11/2015"}, {"body": "dug bit think upstream rx bunch change share multicast etc semantics week flyingmutant pull latest version rxjs try replace http call mock observable returning array similar", "d": "11/2015"}, {"body": "played bit believe actually angular issue bug still present without look console message entering first symbol means nobody tried subscribe observable yet instances async pipe already component related way works maybe please see updated plunker", "d": "11/2015"}, {"body": "also noticed sometimes always plunkr starts working changing active tabwindow kick mechanism change detection forces everything work", "d": "11/2015"}, {"body": "dig deeper definitely feels bit wonky said think overall pattern great idea lot subscriptions constantly torn rather trying match two async actions together view idiomatic reactive way would something like async work leveraging rx good combinators keeping view relatively logicless thoughts cc jeffbcross", "d": "11/2015"}, {"body": "extra subscription nothing one callback added existing observable ca nt imagine bottleneck unless dealing lots idiomatic reactive way expert rx feel code direct declarative code variants trade imperative block whose purpose massage data arbitrary viewspecific way declarative one day", "d": "11/2015"}, {"body": "could better explain use plnkr click expected behavior rather actual behavior", "d": "11/2015"}, {"body": "try clicking components increment buttons reach number removed parent meet conditions live longer within view parent child components emit event clicked increment value imperative data structure data within parent affected directly action child components parent removing components reach number event children emitted never reach parent component hope makes sense", "d": "11/2015"}, {"body": "gionkunz thanks detailed explanation yes bug use rx cc vsavkin jeffbcross blesh issue calling asynchronous means subscriber get called change detection executed allowed destroy view calling subscriber change detection late fix make sure calls synchronous delivery inter component communication", "d": "11/2015"}, {"body": "also eventemitternext renamed eventemitteremit", "d": "11/2015"}, {"body": "rx subjects next synchronously dovetail observables saying", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "related", "d": "11/2015"}, {"body": "naa active link class already added angular version", "d": "11/2015"}, {"body": "relatedduplicated", "d": "11/2015"}, {"body": "rxjs output things need vs currently export optimization current rxjs dist new lite rxjs dist change none basic uglify uglifygzip note numbers rxjs size inside angular angular method use browserify get numbers current distribution run browserify file created test new distribution case wondering size without operators min gzip cc igorminar", "d": "11/2015"}, {"body": "fantastic", "d": "11/2015"}, {"body": "implemented initial step delta operators \u03b4 \u03b4 follow separate pr add operators track changes weight note likely cause initial confusion rxjs includes interfaces observable expose autocompletion operators actually included bare implementation imho consider basic parity dart stream api also needs included", "d": "11/2015"}, {"body": "added pr \u03b4 \u03b4", "d": "11/2015"}, {"body": "comparison matching operators dart api may couple mismatched vsavkin probably knows better ones marked spec core observable therefore included default ones marked star imho necessary inclusion either likely commonly used difficult compose generally lead poor user experience without dart stream gt rx observable static methods gt gt gt star gt gt star instance methods gt gt think star gt gt gt star gt gt gt equivalent far tell gt gt gt rx expand like recurse gt gt star gt spec gt star gt exact equivalent gt gt spec gt star gt sort subscribe observer similar gt star gt gt gt gt gt gt gt gt none yet gt closest tell gt star star operators dart use case forms topromise operators saying good idea fyi \u03b4 \u03b4 star operators \u03b4 \u03b4", "d": "11/2015"}, {"body": "ooo hunt continues get unminified free simply turning emitted helpers see", "d": "11/2015"}, {"body": "nt eat whole pizza", "d": "11/2015"}, {"body": "favor everyone else keeping angular core size small concern direction perhaps worth minutes thought appears observables manipulations thereof going end pervasive angular applications stripping many features save bytes might delay reduce extent angular developers embrace future strip care", "d": "11/2015"}, {"body": "kylecordes thanks note working determining best shortterm midterm longterm solutions good handle best worlds small payload composable chainable operators add notes issue", "d": "11/2015"}, {"body": "cyclejs ui framework based around rxjs moved rx internal peer dependency sure reasoning makes sense might able bug andre staltz info part rxjs team rxjs trying become modular think would great user choose import minimal full featured rx fit needs", "d": "11/2015"}, {"body": "due testonly feature implemented inlinerfortesttransformerdart jbdeboer suggested fix good idea nt time make change atm", "d": "11/2015"}, {"body": "good catch wardbell status linking chapters docs hard link ts version template helper", "d": "11/2015"}, {"body": "sadly help even would nt helped time know doc someone pr", "d": "11/2015"}, {"body": "wardbell", "d": "11/2015"}, {"body": "wardbell send one hold horses", "d": "11/2015"}, {"body": "ah brandonroberts way faster haha pr trick", "d": "11/2015"}, {"body": "yeah thanks", "d": "11/2015"}, {"body": "somewhere complete code heros example please docs reference things currently available tutorial", "d": "11/2015"}, {"body": "daslicht code samples chapter yet put actual examples yet working", "d": "11/2015"}, {"body": "thank angular ts looks amazing excited try find much info stuck router atm", "d": "11/2015"}, {"body": "daslicht think docs seem moving good direction great product becoming stable assuming lot developers interested angular moves beta release beyond mentioned lack documentation comes router sure great docs soon get comprehensive official documentation take look poc work also common router scenarios using alpha hopefully least get started", "d": "11/2015"}, {"body": "ca nt store state higher level component get destroyed", "d": "11/2015"}, {"body": "hi misko thanks answer actually done works fine take suggestion may lot state must stored complex windows error prone painful would nice angular possibility", "d": "11/2015"}, {"body": "agree cangosta think could useful feature certain scenarios however nt know something could easily added framework would costly terms development andor computational resources someone please weigh interested seeing discussed somewhat technical fashion", "d": "11/2015"}, {"body": "agree said picture scenario need navigate various routes save state higher level component likely save model state view imagine one view tab component tab selected getting back want tab selected longer model concern save anyway multiple tab components save save everything ad hoc", "d": "11/2015"}, {"body": "think already hide component property opt change detection using changedetectionstrategy closing since nt think anything specific", "d": "11/2015"}, {"body": "mhevery good ideia components bound router actual use case router one managing", "d": "11/2015"}, {"body": "btford idea one think would reasonable keep viewref around disable change detection need thinking", "d": "11/2015"}, {"body": "order make explicit intended somehow inform angular nt want destroy view navigate recover view navigate path afaik mhevery suggestion hiding components would work fine easy way explicitly instantiate view component render", "d": "11/2015"}, {"body": "interesting problem one think far reaching implications terms developer burden user experience explain mean couple scenarios imagine using angular mobile application consider something like facebook app sort tabbed arrangement main component switch content different tabs way angular works fine data never discarded change detection however imagine case complex type application something meant commercialenterprise environment run serious issues let consider scenario actually viable desktop mobile imagine application allows user manage business activities shop trying issue document invoice instance met new client going add database adding client mean navigating away component issuing invoice fills form saves comes back screen registering sale voil\u00e0 data previously input gone would even serious loss productivity working document affects inventorystock possible tens thousands rows document would get lost consider scenario client actually working mobile device like table problem gets even compounded computational resources far inferior connectivity usually flakier either client risks losing work need checks set motion prevent performing certain operations certain times overhead imposed development programmers come means storing restoring state across application components also computational costs may likely exceed solutionmechanism integrated framework", "d": "11/2015"}, {"body": "problem problem found apply directives form inputs directives manipulate dom add behavior multiselect maksed inputs time come back view html cached directives run constructor lifecycle hooks manipulate dom would nice strategy keep state component maybe reuse instance class sure difficult possible thank", "d": "11/2015"}, {"body": "solution moment create destroy method directive cleans autogenerated html cleans attached events also directive rerun maybe would helpful tell router strategy follow cache cache views developer asume freely risks strategy", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "import http response map res response gt resjson", "d": "11/2015"}, {"body": "todoubaba dawidmyslak pointed add type annotation closed", "d": "11/2015"}, {"body": "yes working", "d": "11/2015"}, {"body": "regards issue probably use constructor", "d": "11/2015"}, {"body": "yep mistake closing issue major one fixed alpha second one mistake", "d": "11/2015"}, {"body": "sclausen provide plunk demonstrates error", "d": "11/2015"}, {"body": "pascalprecht severe difficulties set typescript plunkr unfortunately every plunkr could found either outdated jssetup besides might really messed project setup work around modified nt complain incompatible future bugs would great working plunkr basic know resources", "d": "11/2015"}, {"body": "wrong repo guess repo angular", "d": "11/2015"}, {"body": "sorry closed", "d": "11/2015"}, {"body": "could try required bind factory suspect real issue deps specified di try get using reflection info present error message needs updated anyways", "d": "11/2015"}, {"body": "hey rpark see", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "jgenchik problem approach reproduce behavior using plain javascript see fiddle solution latter would reset starts remove item related anyway clear array super easily", "d": "11/2015"}, {"body": "nt want break reference array another way clear array", "d": "11/2015"}, {"body": "another popular alternative also retaining reference", "d": "11/2015"}, {"body": "ok hopefully gives jgenchik ways clearing array", "d": "11/2015"}, {"body": "cc kevmoo reason dart analyzer nt surfacing known issue nonissue", "d": "11/2015"}, {"body": "yup worth reopening think", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "driak browser work create cookie header received angular ca nt create cookie file client device", "d": "11/2015"}, {"body": "driak thanks reporting eoz says browser handles setting valid bug currently ignoring would use saved cookie already got open issue going close duplicate track one", "d": "11/2015"}, {"body": "ok thanks clarifying try couple configurations managing security tokens using cookies worked well somehow missed also explains behavior running great job way ca nt wait reach release status even current beta stage tempting start using production projects", "d": "11/2015"}, {"body": "hey repo report issue one webiste", "d": "11/2015"}, {"body": "thanks reported peter ericmartinezr notifications githubcom hey repo report issue one webiste image reply email directly view github", "d": "11/2015"}, {"body": "looks easy fix need add logic directivemetadatareaderdart visit method declarations look relevant settergetter put together pull request tomorrow", "d": "11/2015"}, {"body": "cc vsavkin", "d": "11/2015"}, {"body": "put together pull request tomorrow tedsander awsome please assign reviewer review asap", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "would possible future get rid null part nope probably also make error problem approach trying read dom properties change detection slow angularlike supposed work model dom one possible solution would another option simply use", "d": "11/2015"}, {"body": "appears dts files reside top level npm package happily visual studio code appears find fine sure documentation somewhere explaining following unfortunately know unclear sifting mpm packages typing go think files talking typings angular dependencies typings angular pointed", "d": "11/2015"}, {"body": "thelgevold purpose longer distribute bundled typings rather allow ts discover nodemodules typings located next source files see info", "d": "11/2015"}, {"body": "heads visual studio vscode users default classic resolution wont work must set find type definitions means forced set project use cjs use relative paths modules", "d": "11/2015"}, {"body": "nt use npm msbuild environment visual studio used bundled dts file using node mandatory unfortunately nt fit build chain currently check typings file js file somewhere thirdparty part source code tree huge build step thirdparty files copied output folder visual studio project made link typings file build folder link ensures us things typings work project postbuild step js bundle belonging typings file included web archive clue without typings file feel bit reluctant check entire nodemodules folder need typings file corresponding js file build previously bundled dts file pkozlowskiopensource", "d": "11/2015"}, {"body": "thanks think change makes sense aware think still keep current workflow since cherry pick typings files need node module add third party folder create single typings file references individual file see sample get mine node module put files wherever want", "d": "11/2015"}, {"body": "using npm getting hands distribution exactly pretty much tooling focused npm given nt ship definitions definitelytyped upload prebundled code codeangularjsorg say wo nt nt think story yet could non npm types describe little expected normal workflows", "d": "11/2015"}, {"body": "ok robwormald let explain bit first let say hard describe build workflow without giving much detail violating nda software designer canon responsible user interfaces several product lines digital production printers current product variety different user interfaces java swing based java struts based angular based future ui webbased work kinds devices screen sizes want use obviously since working large codebase lot engineers want use typescript integrate current build enviroment work visual studio msbuild msbuild environment relatively strict since allow custom build scripts ant grunt etc run want add custom build step say example add js minification extra option added tab vs project properties enable trigger tool minification postbuild step thirdparty dependencies entire platform reside separate solution ui subsystem dependency subsystem course need build step thirdparty subsystem make sure dependencies ui subsystem needs place current setup put specific version library need typings file version control ui project reference typings file link also build system knows pack eventually web archive create example link knows include web archive providing link dts file vs project makes msbuild able typescriptcompile ts files nt want engineers able define dependencies linking typings files somewhere else tree also nt want download nodemodules folder nt need build servers every engineers pc add tfignore course else probably get checked day another option automatically copy source code intermediate folder npm install seems like real hassle every single time also like said needed want dependent specific version software yes know specified source control controlled upgrade needed last least still nt help visual studio course need link dts file bit lost plan large applications build workflows example adwords currently stay solution oh answer question npm installed locally put contents bundles folder source control course", "d": "11/2015"}, {"body": "thanks detailed explanation preferred option angular distribution going forward going npm reasons primarily used vast majority js ecosystem already said could certainly gross though real actual question though typings complex thing typescript introduced new way handling typings working rather ambient style modules look like typescript dts files mirror source files effectively version files snip http module typescript import requestoptionsargs connectionbackend interfaces import request staticrequest import requestoptions baserequestoptions export declare class http protected backend connectionbackend protected defaultoptions requestoptions constructor backend connectionbackend defaultoptions requestoptions request url string request options requestoptionsargs first incredibly great thing enables developers mess references developer starting simply everything pretty much works works typescript new module resolution algorithm works nodejs npm distribution looks like algorithm currently assumes vendor code folder start shifting things around resolution probably fail ts aware js users prefer jspm issue issue tracking progress would allow reconfigure mapping pleased biggest change instead monolithic single file one file per source file mirrors direction modern javascript ecosystem moving away shipping monolithic bundled blobs code towards distributing proper modular code something much normal modern webdev today likely way future changes build strategy mentioned compile everything foo much intelligent way building file like typescript maints import bootstrap npm import someotherdep myawesomedep npm import mycomponent componentsmycomponent local bootstrap mycomponent rather saying concat minify stuff vendor concat stuff simply say build application starting importexport syntax understood tooling tools trace dependency tree pull referenced code produce final bundle far efficient eg use http module dont need code two leaders bit tooling currently webpack jspm typescript bundling roadmap accomplish goal continue distribute bundled js code certainly preferred method consuming nt great solution us rebundling files generated typescript previous alpha pretty hacky manual process caused us lot trouble keep stable date third party tools beginning show bundles exist today primarily users making plunkers demos easier get online recommended solution eventual production usage would strongly suggest moving towards modern way working javascript modules realize easy say less flip switch trying forwardlooking concentrate efforts hope explains confuses definitely want enable variety use cases happy continue discussing questions ps use npm love", "d": "11/2015"}, {"body": "pps sort constrained environment submit request use third party dependency npm option maintaining internal registry number free open source hosted nonfree solutions see example great option large orgs especially begin towards using modern javascript general thought", "d": "11/2015"}, {"body": "rob following various machinations trying various alternative tools around everything wrote way excellent summary widely distributed following would also helpful possible cases helpful distribute modest pile files things work even typescript already even something like plunkr using jspm couple files overhead angular bundle two typescript compiler one file etc legacy typings also conveniently supplied single dts file libraries used available angular recent division numerous small dts files described would helpful angular distribution could somehow also include make available otherwise singlefile dts get good typescript development experience cases would like get running files pointless production useful introducing people angular", "d": "11/2015"}, {"body": "kylecordes thanks js modules bundling less consumed last year life practiced speech times work take point inside nothing worked process using previously using documentation generator build bundle dropping big relief ditto goes distributing js bundles consumes enormous amount brain cycles something notpreferred way things current process shortest path proper type completion got without explaining steps documentation short term reorganizing bundling strategy slightly see might possible build file align finalized wo nt make promises shortly moving percommit distribution path solution ca nt fully reliably automated troublesome whats nice current typescript npm method got bright ideas listening medium term command line going easy onboarding strategy like handle shenanigans wrt bundling deployment", "d": "11/2015"}, {"body": "also wrt jspm specifically huge fan btw allow work nicely without need manual references follow roughly configuration", "d": "11/2015"}, {"body": "robwormald agree kylecordes publish summary blog post somewhere leave nice summary buried p personally still putting hopes jspm though wondering webpack nt best solution bundling nt time play yet lack jspmresolution mode ts typings makes annoying duplicate dependencies npm get ts compiler happy anyhow seen light way ever get back manually adding third party code projects add script tags manually using references felt sooooo hacky amp unstable difficult part js community convince everyone bundle typings forget definitelytyped find good measure example discussed firebase guys nt seem enthusiastic real shame although easy add project published npm", "d": "11/2015"}, {"body": "dsebastien heavy heart currently use webpack demos kidding really webpack pretty awesome reevaluate resolution configurable ts got sample project workshop little back simple setup livereload especially like fact webpack dumps typescript errors terminal lots pretty colors screw feel free check", "d": "11/2015"}, {"body": "yeah work still exploring options far pretty happy gulpbased monstrosity mon nov rob wormald notifications githubcom wrote dsebastien heavy heart currently use webpack demos kidding really webpack pretty awesome reevaluate resolution configurable ts got sample project workshop little back simple setup livereload especially like fact webpack dumps typescript errors terminal lots pretty colors screw feel free check reply email directly view github", "d": "11/2015"}, {"body": "robwormald would recommend currently nt really want constantly switch back forth go comfortable jspm systemjs really like like others alpha running issues related typing files loading duplicate dependency jspm npm think going webpack would better choice going forwards", "d": "11/2015"}, {"body": "moment using webpack till typescript configurable said probably three new tools next month javascript hard make concrete recommendation", "d": "11/2015"}, {"body": "robwormald might try webpack go route thinking first everything within systemjs manually concerned amount configuration might", "d": "11/2015"}, {"body": "robwormald weeks ago saw read added tsconfig file got rid nasty relative paths imports ca nt compile anymore invoking tsc arguments tsconfig containing folder tsconfig changed seems compiler classic resolution mode nt understand new dts format understand path mapping solve issue allowing local paths starting question nt currently way use import paths relative tsconfig containing folder compiled classic module resolution mode tsconfig file used splintercode heads visual studio vscode users default classic resolution wont work moduleresolution node must set find type definitions means forced set project use cjs use relative paths modules mean vscode problem", "d": "11/2015"}, {"body": "hristokostov use nt even need tripleslash references anymore npm packages embed typings", "d": "11/2015"}, {"body": "dsebastien thank quick reply know nt need tripleslash references use problem nt like paths like find harder follow switched classic mode could use example mode compiler look find module folder could nt changed right tried use new typings classic mode trippleslash references seems nt work decided first ask converting back import paths ones starting", "d": "11/2015"}, {"body": "oh okay good thinking also nt like navigate folder structure able import modules indeed ability define path substitutions within tsconfigjson help us clean code good news ts team busy implementing", "d": "11/2015"}, {"body": "ca nt current compiler works dom time compiler kicks html example transformed browser done anything side new textbased compiler able handle though either accepting selfclosing tags warning people closing duplicate", "d": "11/2015"}, {"body": "tbosch mismatch change detectors configured ts vs dart ts always third parameter dart always set", "d": "11/2015"}, {"body": "whoops silly nonnamed parameters looks like set languages certain working returns true still failing please provide repro instructions investigate", "d": "11/2015"}, {"body": "yeh side effect reorganization bundlecreation logic sent pr fix", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "hey selten must include project see", "d": "11/2015"}, {"body": "ericmartinezr right future going better monitor usage apis see", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "feature usage monitored implications users etc agreed support custom dts would allow us track easily", "d": "11/2015"}, {"body": "hand would nt penalize newer browsers would include unrequired polyfillsfacades", "d": "11/2015"}, {"body": "vicb comment need functionality might well provide shim", "d": "11/2015"}, {"body": "user targets runtime apis available bring typings angular usage apis forces users target environments shim behavior think rado knows better nt bundle angular thu nov pm evan winslow notifications githubcom wrote vicb comment need functionality might well provide shim reply email directly view github", "d": "11/2015"}, {"body": "using features angular user always decide force", "d": "11/2015"}, {"body": "guess clear alternative provide custom implementations nt bloat source size much shimming", "d": "11/2015"}, {"body": "nt use new apis note use syntax typescript desugars things require runtime shims evan particular api think using sun nov pm evan winslow notifications githubcom wrote guess clear alternative provide custom implementations nt bloat source size much shimming reply email directly view github", "d": "11/2015"}, {"body": "ok whatever long nt bloat source size folks nt need old browser support", "d": "11/2015"}, {"body": "design since view implementation one component opaque nt want leak inner implementation outside world would also performance penalty asking could chose different mechanism achieving goal initial thought nt want support", "d": "11/2015"}, {"body": "right slightly enlarged scope inner component include outer collecting element way use expected means nt split components thought would make sense nt want know implementation detail inner component known reflecting mere existence anywhere tree nt mean implementation detail exposed example would nt want know component exactly used directive twoweek journey yet could nt di used intercept creation child components replace proxy registersderegisters existence constructiondestruction root", "d": "11/2015"}, {"body": "still issue", "d": "11/2015"}, {"body": "yes work right selector contains element name however work selector contains attributes class names see eg", "d": "11/2015"}, {"body": "updater plunker longer crash firefox", "d": "11/2015"}, {"body": "hey guys found problem changed get need httpdevjs line aprox added basic snipet var arrayoflines xhrgetallresponseheaders match rn g var headers new var lt arrayoflineslength var line arrayoflines var name linesubstr lineindexof trim var val linesubstr lineindexof trim sorry typescript lazy recompile also course add headers dependencies array required hope helps edit release came location changed still xhrconnection httpdevjs changed line xhrbackendts xhrconnection class line thanks", "d": "11/2015"}, {"body": "hi issue ca nt access response header information supposed present headers map response example localhostapiproducts method requestmethodsget res gt ca nt access headers response resheaders empty error gt gt check network traffic browser dev tools response headers present", "d": "11/2015"}, {"body": "see edit workaround issue untill fix hope helps", "d": "11/2015"}, {"body": "hi brunoquintanilha thanks suggestion diving code realize response headers present invoke xhrgetallresponseheaders actually couple present follow real response headers result xhrgetallresponseheaders contentlanguage ptpt contenttype applicationjson suggested workaround", "d": "11/2015"}, {"body": "hi try access directly custom header xhrgetresponseheader xtotalcount maybe checking exists tell able access response headers previous sugestion still value really needs header cant send response custom http class extend encapsulate intercept response separate value real response hope helps", "d": "11/2015"}, {"body": "btw aqui da ilha da madeira cangosta", "d": "11/2015"}, {"body": "old version firefox", "d": "11/2015"}, {"body": "solved using solution", "d": "11/2015"}, {"body": "would awesome", "d": "11/2015"}, {"body": "especially useful way navigate child want unique url", "d": "11/2015"}, {"body": "please forgive trying understand use case url would like knows use manage component saying want declare url manage goes child component cars manage component", "d": "11/2015"}, {"body": "dennisroam want use nested outlets group set routes want option child route urls shorter lets say account component child routes registration settings etc want url registration using would settings would would like account registration route represented", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "decoupling componentrender hierarchy url structure", "d": "11/2015"}, {"body": "cc igorminar", "d": "11/2015"}, {"body": "merged one yesterday try mitigate jssource map end without getting invasive seemed help somewhat might need bit work see also likely reorging", "d": "11/2015"}, {"body": "happy run bundling parallel yeh gives trouble build infrastructure easily reshape things sequentially provided sure root cause course", "d": "11/2015"}, {"body": "might enough refactor code bundle sequentially instead using", "d": "11/2015"}, {"body": "pending pr new system builder allows separation tracing step writing disk step definitely much faster lighter weight coming soon fri nov igor minar notifications githubcom wrote might enough refactor code bundle sequentially instead using qall reply email directly view github", "d": "11/2015"}, {"body": "sorry discussed offline week ago realized nt know motivation rkirov happen know", "d": "11/2015"}, {"body": "one extra feature detectchanges protection recursive calls think initially talked mistaken like resolving scheduled microtasks api existing issue", "d": "11/2015"}, {"body": "discussed offline nt really describe issue opened fresh clean issue", "d": "11/2015"}, {"body": "see closing duplicate", "d": "11/2015"}, {"body": "sorry nt see others", "d": "11/2015"}, {"body": "confirm work systemjs current bundles eg html indexhtml systemimport myapp js myappjs import component etc illl totally defer knowledge gained struggle seems strange going populate system registry", "d": "11/2015"}, {"body": "confirm work systemjs current bundles meant work systemjs way would pulled systemjs html indexhtml systemimport myapp might require additional systemjs configuration depending file name exported names megabundle nt think kill systemjs bundles point least would invalidate lot plunkers doc examples mind would keep current systemjs bundles till figure whole story time would kill sfx bundles publishing", "d": "11/2015"}, {"body": "ah groovy ok", "d": "11/2015"}, {"body": "testing webworkers webworkers see experimental nt like decided drop testing bundles umd usable via tag cjsbased tooling webpack etc would rx work case completely internal everything reexported angular wrappers like eventemitter bundle exports thus possible reuse lib client code", "d": "11/2015"}, {"body": "currently observable subject reexported facade user import observable nov pm rado kirov notifications githubcom wrote testing webworkers webworkers see experimental nt like decided drop testing bundles umd usable via", "d": "11/2015"}, {"body": "pkozlowskiopensource time streamline systemjs bundles match building moment could probably cut match suggestion", "d": "11/2015"}, {"body": "robwormald nt pb bundles systemregister format nt duplicate code nt want touch existing bundles working issue would probably break tons docs examples get", "d": "11/2015"}, {"body": "necessary rx bundled angular reason user stuck version rx angular way ahead rx version would win advisable two different versions loaded probably version bundled angular might closure unless angular longer uses bundling indicates still would lead extra bytes opinion", "d": "11/2015"}, {"body": "reason user stuck version rx angular way ahead rx version would win advisable two different versions loaded rolandjitsu always concern party deps chooses use could flip back question rxjs version user stuck nt work given user wants use hard pbs perfect answers browser world kind want multiple versions nt pay price bytes got impression discussion partly rxjs quite heavy right robwormald ideas right rob probably version bundled angular might systemregister closure issue cjs umd bundles discussion wo nt impact existing bundles least", "d": "11/2015"}, {"body": "documentation see type method requestmethodsget requestmethods", "d": "11/2015"}, {"body": "sorry provided code context updated snippet passing specific requestmethods individual get post etc methods", "d": "11/2015"}, {"body": "chenkie think right require actual instance ca nt accept object shaped like request options done part refactor add dart support fix since longer supports dart meantime could actually create instance pass", "d": "11/2015"}, {"body": "perfect works thanks jeffbcross", "d": "11/2015"}, {"body": "jvbianchi sounds like missing something url trying create relative path specify tag least looks like needs showing us code would super useful", "d": "11/2015"}, {"body": "take look code saw nt specify base href like said sorry thanks", "d": "11/2015"}, {"body": "supported exactly would expect happen", "d": "11/2015"}, {"body": "need navigate component send data dynamically ca nt use routeconfig right change routedata dynamically", "d": "11/2015"}, {"body": "btford help", "d": "11/2015"}, {"body": "definitivelly nt want circular change detection checks said pb solved much simpler without keeping intermediate state coupling directives generally nt think good idea maintain type children counters list dynamic example children removed ngif would hard time keeping internal counter upto date children list ui", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource see point avoiding circular change detection know works initially also use outside parent component works expected works number people count class listcomp count component selector myperson properties name template class person constructor host list listcomp listcount component selector myapp template class app people id name brad id name jules id name jeff add thispeoplepush id thispeoplelength name foo nt number people count class listcomp data count contentchild templateref rowtemplate templateref component selector myperson properties name template class person constructor host list listcomp listcount component selector myapp view template class app people id name brad id name jules id name jeff add thispeoplepush id thispeoplelength name foo difference first example uses ngfor externally second uses internally gives", "d": "11/2015"}, {"body": "cause new cd scheduling microtask using promise best practice", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "mhevery help problem access view child children given set children access specific one", "d": "11/2015"}, {"body": "see documentation lacking work", "d": "11/2015"}, {"body": "mhevery may missed something trying get back work thank much", "d": "11/2015"}, {"body": "believe currently note vs", "d": "11/2015"}, {"body": "mhevery flyingmutant thank help work viewchild someid", "d": "11/2015"}, {"body": "think kind unintuitive would expect work reasons case change thu nov tbragaf notifications githubcom wrote mhevery flyingmutant thank help work viewchild image reply email directly view github", "d": "11/2015"}, {"body": "see examples dits", "d": "11/2015"}, {"body": "yeap thanks eric still cases decorators work element names think intuitive need use finding elements id thu nov pm ericmartinezr notifications githubcom wrote see examples dits reply email directly view github", "d": "11/2015"}, {"body": "trycatchfinally idiom synchronous code thus wo nt work async code interface observable observables either error complete never", "d": "11/2015"}, {"body": "robwormald thank help heads", "d": "11/2015"}, {"body": "robwormald counter indication using following", "d": "11/2015"}, {"body": "go", "d": "11/2015"}, {"body": "thank exactly looking believe googled went angulario could nt find link thanks", "d": "11/2015"}, {"body": "jeffbcross thoughts making json focused injectable sugars away separate service low level things", "d": "11/2015"}, {"body": "time json", "d": "11/2015"}, {"body": "sure", "d": "11/2015"}, {"body": "nt think dartium supports items sure way make work", "d": "11/2015"}, {"body": "sorry forgot close bug fixed", "d": "11/2015"}, {"body": "clarify implementation looks something like", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "agree issues well assumed enough currently isnt sort default child components figured works though bit hack javascript link cars config path redirectto path default component carsdefault plunker hit redirect pulls next value super hacky works without throwing error", "d": "11/2015"}, {"body": "clever lets hope nt name maneuver", "d": "11/2015"}, {"body": "using stub component typescript component selector template class stub component routeconfig path component stub path gallery id component gallery gallery export class home", "d": "11/2015"}, {"body": "believe addressed satisfactorily version router coming soon", "d": "11/2015"}, {"body": "yes soon", "d": "11/2015"}, {"body": "change remove need use syntax nested routes example routeconfig path heroes heroes component heroescomp export class appcomp routeconfig path heroes component herolistcomp path id herodetail component herodetailcomp export class heroescomp becomes routeconfig path heroes heroes component heroescomp export class appcomp routeconfig path heroes useasdefault true component herolistcomp path id herodetail component herodetailcomp export class heroescomp", "d": "11/2015"}, {"body": "jimulle nope necessary indicate route children otherwise terminal route changed way call routerlink previous change became redirects automatically default route", "d": "11/2015"}, {"body": "question meant read expecting use param think url encode amp otherwise looks like malformed url", "d": "11/2015"}, {"body": "take string split use terms", "d": "11/2015"}, {"body": "specific reason way support legacy url scheme control", "d": "11/2015"}, {"body": "legacy worked uirouter produced thought nice enough urls happens main seo interest really pages one parameter url ie needed switched time", "d": "11/2015"}, {"body": "right semantically think using like problematic happy support way recognize routes used way think way redirects canonical url instance used instead think would bad router producing urls like", "d": "11/2015"}, {"body": "flyingmutant curiosity first time seen anybody using oneplus one wild would perhaps run wholly unrelated angular benchmark mentioned thoroughly depressing article wholly unscientific point reference like get similar suite running mobile start tracking across whole android ecosystem hopefully noticeable improvement offline template compilation compile templates ondevice also generally shipping less bytes parsed bootup", "d": "11/2015"}, {"body": "numerous issues related bootstrap speed none mentions mobile performance mention mobile performance minified code offline template compilation serviceworker server rendering would help lot initial file always problem mobile issues talking tree shaking typescript already feature dart also made mistake dom manipulation dom ready purposely providing production build", "d": "11/2015"}, {"body": "opinion really say anything startuptimes production build setup major issue case speed mobile device many http requests device make bootstrap application patrick mentioned packing everything files compressing stuff caching device appcache serviceworkers speed things really going issue nt think able tell meaningful difference different js frameworks matters time rendering", "d": "11/2015"}, {"body": "please dismiss issue speculate random improvements test already pack everything one file number requests minimal tests performed local network zero latency packet loss caching change anything also nothing soimportant first visit compressingminifying also help lot tried also difference startup times mobile huge eg angular mithril see graphs posted try reproduce results mobile device notice immediately waiting several seconds blank screen vs waiting hm ca nt see anything wrong bootstrapts looks quite idiomatic missing something robwormald got mean speed error looks like jit warmed results really poor things speed error thing looks crazy results consistent across reruns", "d": "11/2015"}, {"body": "flyingmutant okay good baseline thanks line rest commentary thread regarding android device performance flame graphs interesting webpack obviously smoother whereas systemjs phases strange another issue popped week systemjs bootup order magnitude slower devtools open wat investigating one curious appears faster devtools closed things note using bundles reallllllly super notoptimized production use exist mainly purpose making plunkers easy use explains think twophase thing seeing timeline entire huge angular bundle loads reads syncblocking application code kicks obviously ideal issue webpack build clear delineation two sets source code better rapid development iteration rebuilding source bundle every time change app file suspect production scenario going better build single build least interweave smarter way think core initial component render single bundle fair number bytes munged stuff wo nt ship production app like compiler take nice chunk sheer volume code currently parsed startup one interesting project githubcomrolluprollup sort tooling eventually give us best performance scenarios currently opting easeofonboarding bundles focus shift move closer beta tl dr nt panic", "d": "11/2015"}, {"body": "robwormald panic want bring attention important thing currently missing angular mobile story notice difference devtools openedclosed alas opened machine page open phone posted flamegraph app content bundled together systemjsbuilder everything minified gzipped network tab common thing tests far evaluate script start sooner ms probably due parsing evaluate script takes second lower webpack higher systemjs conclude angular must send much less code clients like ton less bundling rethough overhead compatible old justconcatenatethefiles way high hopes rollup well", "d": "11/2015"}, {"body": "see wide linkdynamicmodule blocks systemjs module resolution churning lots room optimization nov gregory petrosyan notifications githubcom wrote robwormald panic want bring attention important thing currently missing angular mobile story notice difference devtools openedclosed alas opened machine page open phone posted flamegraph app content bundled together systemjsbuilder everything minified gzipped network tab common thing tests far evaluate script start sooner ms probably due parsing evaluate script takes second lower webpack higher systemjs conclude angular must send much less code clients like ton less bundling rethough overhead compatible old justconcatenatethefiles way high hopes rollup well reply email directly view github", "d": "11/2015"}, {"body": "sure even webpack module loading anywhere near faster maybe needs order first paint mobile", "d": "11/2015"}, {"body": "flyingmutant robwormald think whatever trick play webpack rollup removing compiler bits crux issue pulling way much code know needs diet simply nt focus yet", "d": "11/2015"}, {"body": "public api reexported entry point files ex bundles built using entry points bundling story still work progress information could share right probably outdated matter days", "d": "11/2015"}, {"body": "ok thanks ts files transpiled tool bundling afterwards look gulp config file clear", "d": "11/2015"}, {"body": "today using bundling said bundling story work progress might change near future look gulp config file clear much movement repo bundling area need prepared dive code need detailed info point", "d": "11/2015"}, {"body": "okay going sound crazy testing trying look timeline realized happens chrome devtools opened grabbed screencast issue reproduce using previous plunkers chrome stable canary even worse trying capture timeline fixes issue visible lag system builder bundle", "d": "11/2015"}, {"body": "laurentgoudet currently way many tools workflows create bundles modules unfortunately ca nt investigate possible combinations quirks approach least go outside recommended territory meed prepared debug troubleshoot things said want make sure major workflows supported spot anything preventing favorite workflow please let us know need ready investigate end", "d": "11/2015"}, {"body": "thanks pkozlowskiopensource yeah seen angular connect talk subject great one way tests locally async debugging enabled devtools makes issue way worse without bundle still consistently slower commonjs one vs fully loaded devtools opened js source maps disabled first guess would due circular reference correctness overhead however ca nt explain seeing devtools enabled maybe format lead deeper call stacks makes js instrumentation costly anyway closing issue since nt seem angular specific created new one systemjs tracker", "d": "11/2015"}, {"body": "works use typescript rootcomponent productdetailcomponent", "d": "11/2015"}, {"body": "building latest problems believe closed", "d": "11/2015"}, {"body": "originally option actually makes things complicated tie app base base href fix update error message", "d": "11/2015"}, {"body": "ah break tour heroes tell john", "d": "11/2015"}, {"body": "reason ca nt default base url eg people nt get thing lived nt learn early making learn right away minute want use router default instant fail first crank router another paper cuts piss people problem people learning want different url understand nt base url router work outofthebox nt think", "d": "11/2015"}, {"body": "probably could weary hiding intrinsic complexity users igorminar thoughts", "d": "11/2015"}, {"body": "get instant failure first use seems harsh wrong base url anyway nt common default would change teaching options due time also great defaults beginning people chance experience joy learn reasonable pace", "d": "11/2015"}, {"body": "make pr fix", "d": "11/2015"}, {"body": "fyi maintains spaces words correct term source wikipedia camelcase", "d": "11/2015"}, {"body": "true wanderings people understand really mean say titlecase say correct pascalcase leaving closing comment thanks feedback though keep coming", "d": "11/2015"}, {"body": "hi find fix issue code inside interact angular scope use ngzone send custom event application works constructor loaded component trigger", "d": "11/2015"}, {"body": "close", "d": "11/2015"}, {"body": "choeller plunk kind massive could please update strip absolute minimum notably need party deps reproduce problem really hard see going code right", "d": "11/2015"}, {"body": "pkozlowskiopensource oops sorry reused plnkr lying around strip show problem", "d": "11/2015"}, {"body": "make little obvious add three inputs type test first input click outside element one console open one see dom node one equal implies change event fired input middle position incorrect turns always inputs index greater input one entered text", "d": "11/2015"}, {"body": "think problem updating string position steal identity current ngfor element used iteration original attempt simulate twoway databinding plain stringlists another way achieve behaviour still pretty confusing", "d": "11/2015"}, {"body": "suspicion happening input index gets updated change detection reuses nodes shuffles node one position right update bindings would make bindings correct dom node incorrect currently observed would also imply algorithm shuffling dom elements incorrect culprit would either ngfor directive defaultiterablediffer reason suspect happening wrote test current behavior observing still passes believe bindings remain correct dom nodes problem", "d": "11/2015"}, {"body": "little digging consolelog able find defaultiterablediffer function culprit returning incorrect diffs nt bad fix", "d": "11/2015"}, {"body": "issue change detection issue reuse dom moving ngfor children around box stateful since noone binds value old value shown two empty input boxes foo input value foo input value change detection kicks tells ngfor remove index insert index correspondingly tells renderer pop first input insert new copy end however optimization reuse dom nodes removed reinserted repopulate bindings general efficient good idea however stateful nt get cleaned removal insertion tbosch turn view pooling get around issue", "d": "11/2015"}, {"body": "bind value note viewpool probably go away soon fri nov pm rado kirov notifications githubcom wrote issue change detection issue reuse dom moving ngfor children around box stateful since noone binds value old value shown two empty input boxes foo input value foo input value change detection kicks tells ngfor remove index insert index correspondingly tells renderer pop first input insert new copy end however optimization reuse dom nodes removed reinserted repopulate bindings general efficient good idea however stateful nt get cleaned removal insertion tbosch turn view pooling get around issue reply email directly view github", "d": "11/2015"}, {"body": "angular change diff promise value promise resolving", "d": "11/2015"}, {"body": "use case function modifying async data using promise chains course new promise every time function called expect angular smart enough handle use case javascript import component const data function providedataasync return new promise resolve gt resolve data function minvalue min return value gt value gt min component selector app template export class app asyncdata providedataasync synctest min return datafilter minvalue min asynctest min uncomment reproduce warning freeze browser return thisasyncdatathen values gt valuesfilter minvalue min", "d": "11/2015"}, {"body": "questioning async object even considered within change detection consider exchange async container change would nt sufficient enough consider something changed compare references primitives resolved values", "d": "11/2015"}, {"body": "gionkunz see example file referenced using observables latest master refactored nt think work promises anymore could give another try latest master", "d": "11/2015"}, {"body": "promises observables supported async pipe said totally clear use case specific example usage looks like bad idea every time function runs going return new instance promise going resubscribe async pipe resolves going trigger change detection call function return new instance promise resubscribe trigger change detection etc typically change detection produce side effects code side effects time cycle runs going get new promise bad news bears extended plunker different ways thinking could explain trying happy look", "d": "11/2015"}, {"body": "far change async container goes back basic fact promises ever resolve thus reference check safe fast way knowing new value arriving ca nt get new value without new promise", "d": "11/2015"}, {"body": "robwormald totally right returning new promise every time function called probably bad idea however somehow expecting angular would manage change detection resolved value rather async container reference thanks example case think go observable generate new values cheers gion", "d": "11/2015"}, {"body": "good stuff one neat pattern observables many ways kind thing effect two streams one current max value one current dataset run combine fn whenever either changes", "d": "11/2015"}, {"body": "cool nice example pipe land master soon current pipe support rx observables", "d": "11/2015"}, {"body": "rx pipe workaround next release async pipe functional observables tue nov gion kunz notifications githubcom wrote cool nice example rx pipe land master soon current async pipe support rx observables reply email directly view github", "d": "11/2015"}, {"body": "cool keep great work cheers", "d": "11/2015"}, {"body": "hmm thinking little realized easy templatedriven approach controls created automatically ngcontrolgroup ngcontrol directives template could work controlarrays see clean way adding control controlarray via template mean templatedriven approach making sense using ngmodel driver rendering controls array would cool hear opinions", "d": "11/2015"}, {"body": "assuming removing whitespace cancels change change detection nt see change original value sure cleanest solution maybe could concept ngmodel options baked ngmodel syntactic sugar otherwise thinking would manually use keydown events returning false order cancel undesired input maybe could implemented behavioral directive element", "d": "11/2015"}, {"body": "thelgevold react simple thing element mounted creates handler called every change see handler update element value bound see result single source truth bound value value rendered element always reflect bound value playing value full control ui like something like though nt know good fit change detection maybe good solution nt think core", "d": "11/2015"}, {"body": "well consider absolutely normal change primitive value exact value change detection trigger way angular detect change therefore property binding trigger would also negative performance impact mechanism would allow trigger could create small class work object references change detection javascript import component class stringwrapper constructor value thisvalue value tostring return thisvalue component selector app template export class app wrapper new stringwrapper oninput newcontent thiswrapper new stringwrapper newcontent replace sg replace lg", "d": "11/2015"}, {"body": "gionkunz even easier already string wrapper javascript issue problem nt think controlled components really cool idea like see", "d": "11/2015"}, {"body": "gionkunz simple naive implementation controlled input see plunk problem input caret position ts directive selector input host input null class inputdirective implements docheck input value string constructor public renderer renderer public elementref elementref docheck thisrenderersetelementproperty thiselementref value thisvalue optimized running change detection entire application every user input", "d": "11/2015"}, {"body": "would implement method extra request probably fail", "d": "11/2015"}, {"body": "check file existence compilation stage requests time example related abstract explain idea", "d": "11/2015"}, {"body": "tandu beware blackmagic situation please use snippets code every editor feature easy use nt need extra effort core framework", "d": "11/2015"}, {"body": "think better put code lines explanations bottom post nt know internals angular ca nt quickly produce pr explain idea think using default values fields black magic think lot things hide complexity way named black magic everyone happy write simpler code", "d": "11/2015"}, {"body": "sorry tandu nt want upset bro could make relax nt read code bottom post response general proposal angular guess type template using angular meant browser could also write native universal apps nt always use html templates defaulting html based templates could make things unpredictable", "d": "11/2015"}, {"body": "manekinekko since tandu asking compile time ca nt configuration file specifics system project use compile properly specified configuration file", "d": "11/2015"}, {"body": "zamamohammed could give example explaining idea", "d": "11/2015"}, {"body": "understand angular read config file something like able correctly handle defaults web development", "d": "11/2015"}, {"body": "tandu like idea stripping boilerplate annotation introduced new component router angular also showed mechanism would pass component name template url automatically calculated case offered possiblilty register templatelocation strategy overwrite default behaviour imo something like could fit make idea clear snippet found new router never used sure actually working would general idea also similar issue would need solved first guess currently component idea location filesystem issue", "d": "11/2015"}, {"body": "nt know alpha using format generate", "d": "11/2015"}, {"body": "hi brandon thanks reply mistaken routerlink proposed would work case messages child route user router parser would first check user continue messages fill parameter trying get route working without using child route messages page route child users must way construct routerlink way multiple parameters sprinkled within route without using child route smile", "d": "11/2015"}, {"body": "using standard href syntax works spa app try advantage using routerlink", "d": "11/2015"}, {"body": "behzadeshan without routerlink page reloaded using mode", "d": "11/2015"}, {"body": "eoz reloading even caches server rendered views", "d": "11/2015"}, {"body": "zorthgo sorry bad explanation earlier trying say main route path parentchild route specific case nt nest route order generate correct router link plunk demonstrating think trying accomplish", "d": "11/2015"}, {"body": "brandonroberts thanks plunker exactly looking example made many things click new component router thanks lot help", "d": "11/2015"}, {"body": "behzadeshan thanks reply understand routerlink correctly little bit better main advantage see using routerlink refactor link would need make changes one place routeconfig use regular href make change structure link would modify places used href opinion nice step towards decoupled application smiley", "d": "11/2015"}, {"body": "zorthgo good point thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "way think use document object accessing current route app spa simply return need otherwise shoud use", "d": "11/2015"}, {"body": "behzadeshan seems like another good idea trying retrieve name url user write anything safe besides getting path name also getting route info think getting route would safer keep mind suggestion thanks stick property since user ca nt modify", "d": "11/2015"}, {"body": "object object contain property called try using elvis operator", "d": "11/2015"}, {"body": "trying use ternary operator elvis operator", "d": "11/2015"}, {"body": "elvis operator works intended behavior feeling elvis necessary case", "d": "11/2015"}, {"body": "feeling elvis necessary case right nt necessary case bug prevented working correctly already fixed master released yet part next release closing already fixed master", "d": "11/2015"}, {"body": "working nested properties objects may exist yet work", "d": "11/2015"}, {"body": "thanks rob working nested object parent one seems angular expects everything exist rendering", "d": "11/2015"}, {"body": "replicate plunker please helps troubleshoot", "d": "11/2015"}, {"body": "well familiar plunker published sample preview launch debugger see page errors code", "d": "11/2015"}, {"body": "well familiar plunker published sample seems require signin makes nogo reproducing issues even familiar plunker open one ex plunker kind tool like jsfiddle codepen jsbin etc familiar one tools use well", "d": "11/2015"}, {"body": "thanks pawel plunker example forked example changed demonstrate problem steps click errors occurred click click errors occurred click errors occurred click errors occurred", "d": "11/2015"}, {"body": "behzadeshan thnx plunk makes things clear remarks start like really ancient right toons changes robwormald right using elvis operator needs newer version", "d": "11/2015"}, {"body": "fyi code propery named meber may suggest initiate ca nt problem crudbasecontroller base class crud controllers inherit even nt know property initiate hand initiate properties update mode value passed means angular render view twice initiating values real values think flag like method like enable explicitly tell angular render view cases", "d": "11/2015"}, {"body": "using newest version production code problem", "d": "11/2015"}, {"body": "fyi code propery named meber may suggest initiate suggesting suggestion explicit might null elvis operator", "d": "11/2015"}, {"body": "hmm actually wo nt work would throw parser error operator used assignment column member name event app gt div nthchild gt input nthchild ngmodel member name", "d": "11/2015"}, {"body": "behzadeshan", "d": "11/2015"}, {"body": "pkozlowskiopensource even works change lot assignments markup use single flag single method code imagine enterprise project developers forget use markup also force care logic find properties lazy loaded means ui designers know developers code", "d": "11/2015"}, {"body": "pkozlowskiopensource elvis operator working directive look code disabled entity subentity length gt use two mark looks weird solution prefer use way calling method latest lazy loaded property using flag top component markup set true bind method", "d": "11/2015"}, {"body": "behzadeshan hear say elvis operator personally still fence comes usage vs know going leave issue open chimein express opinion elvis vs forgiving evaluation expressions known", "d": "11/2015"}, {"body": "pkozlowskiopensource thanks ok forgiving evaluation either silent failures hides think third way explicitly tell angular properties nullable markup code example annotation property may used one place markup want mention nullablity elvis operator markup change one place hand mentioning property nullablity code save view changes code changes setting removing nullablity property", "d": "11/2015"}, {"body": "pkozlowskiopensource way support elvis oprator ngmodel well", "d": "11/2015"}, {"body": "first reaction simple tried think reasons expressions parser contain trycatch blocks significantly improve performance trycatch often gives negative impact nt know real reason existence assumptions correct ready sacrifice symbols performance", "d": "11/2015"}, {"body": "eoz performance also explicit hard debug issues angular expression result expected output parser forgiving angular get detailed error expression ca nt evaluated explicitly tell angular forgiving", "d": "11/2015"}, {"body": "think issue looking", "d": "11/2015"}, {"body": "router exposes navigating property use check routing starts finishes nt currently way produces type indication route change error", "d": "11/2015"}, {"body": "wrong repo apologies", "d": "11/2015"}, {"body": "changes npm comes node issue disappointed see", "d": "11/2015"}, {"body": "gkalpak thanks info renamed ran manually", "d": "11/2015"}, {"body": "nt mean imply closed btw think issue addressed", "d": "11/2015"}, {"body": "looking found one thing ca nt listen key events div default must set make selectablefocusable see answer one work problems see shortcuts using key events solution worked listening document template listening div", "d": "11/2015"}, {"body": "ericmartinezr right wo nt fire key events without ericmartinezr thnx much helping issues much appreciated", "d": "11/2015"}, {"body": "seems like reasonable idea", "d": "11/2015"}, {"body": "oops think put wrong repo", "d": "11/2015"}, {"body": "instead string input would inclined suggest config object properties like template templateurl inputoutput bindings etc", "d": "11/2015"}, {"body": "miss compile", "d": "11/2015"}, {"body": "webteckie one looks really weird unintuitive would rather syntax like first second params dclloadintolocation somecmp inputs templateurl elementref anchor array var cmp somecmp data dclloadintolocation cmp elementref anchor someway create inline component var cmp componentcreate data componentcompile dclloadintolocation cmp elementref anchor", "d": "11/2015"}, {"body": "pretty good use case pipe assuming going rendering something view custom pipe something similar automatically clean subscriptions component destroyed note eventemitter observer method disappear next release stick closer observable semantics js class mydataservice event new eventemitter class mycomponent constructor dataservice mydataservice thisevent dataserviceevent html event async", "d": "11/2015"}, {"body": "robwormald thank refactored data service found pr", "d": "11/2015"}, {"body": "repo want thanks", "d": "11/2015"}, {"body": "oh sorry way migrate copy paste edit looks like need copy issue", "d": "11/2015"}, {"body": "think typescript add super child constructor setup proper inheritance export class carmodel extends baseresource constructor super postdata carid number http undefined", "d": "11/2015"}, {"body": "yes case need inject http also makes sense anyway parent constructor calls successfully without injection nov pm torgeir helgevold notifications githubcom wrote think typescript add super child constructor export class carmodel extends baseresource constructor super postdata carid number http undefined reply email directly view github", "d": "11/2015"}, {"body": "cajoy try javascript class foo constructor public bar class extendsfoo extends foo constructor see valid ts hand transpile basically calls super constructor arguments undefined hope see need redefine reinject constructor arguments child class", "d": "11/2015"}, {"body": "yes case makes sense e tended class need redefine constructor parameters picked automatically works fine native ts works di issue di ts nov pawel kozlowski notifications githubcom wrote cajoy try class foo constructor public bar class extendsfoo extends foo constructor see valid ts hand class extendsfoo extends foo transpile var extendsfoo function super extends extendsfoo super function extendsfoo superapply arguments return extendsfoo foo basically calls super constructor arguments undefined hope see need redefine reinject constructor arguments child class reply email directly view github", "d": "11/2015"}, {"body": "yes case makes sense e tended class need redefine constructor parameters think issue expect let take example happen would still expect di kick issue di ts issue see ts nt report errors case might want open ticket since imo javascript class foo constructor public bar class extendsfoo extends foo constructor", "d": "11/2015"}, {"body": "let assume following class ts import http import config config export abstract class baseresource config config http config base ts class injected without issues use methods properties http angular di injection class use component without proper injection issue see selfsustained component use standalone looks like components coupled way inject http parent class without touching child", "d": "11/2015"}, {"body": "angular di presence constructor arguments extend class constructor arguments need something call appropriate arguments requirement programming language know without angular di seem expect ng di system would violate basic principle going class hierarchy magically invoke child constructors nt think reasonable expectations looks like components coupled nothing angular one class extends another coupled", "d": "11/2015"}, {"body": "probably nt enough skills please help injectinstantiate http class parent component easily use kind restfuljs inject constructor use without issue would like use native http component", "d": "11/2015"}, {"body": "use injector yourseld instead letting angular", "d": "11/2015"}, {"body": "please help injectinstantiate http class parent component export class carmodel extends baseresource", "d": "11/2015"}, {"body": "pkozlowskiopensource like said want avoid declaring http component parent", "d": "11/2015"}, {"body": "like said want avoid declaring http component parent option drop di child component ts import http export abstract class baseresource http new http aware voids benefits di", "d": "11/2015"}, {"body": "ts import http import config config import injector export abstract class baseresource config config http gives exception", "d": "11/2015"}, {"body": "cajoy", "d": "11/2015"}, {"body": "todoubaba thanks lot resolved issues", "d": "11/2015"}, {"body": "resolved issues nt think got fancy way benefits di gone warned", "d": "11/2015"}, {"body": "yes let assume models complicated application couple levels inheritance change constructor added new serviceprovider need update constructors declaring constructor need anything use new functionality", "d": "11/2015"}, {"body": "good explanation issue looks like solution like parentdependecies decorator would good part core", "d": "11/2015"}, {"body": "try think may something also think must specify querylist", "d": "11/2015"}, {"body": "well children get created content children think used components template contains direct child directives think nt need specify type annotations optional", "d": "11/2015"}, {"body": "gionkunz could please send plunk minimal reproduction scenario lack context ex version used", "d": "11/2015"}, {"body": "oh see crux pb add tab also app directives list example works components get initialized query list also contains tab component within tabs aftercontentinit something wrong expect example work without needing add tab component directives list app component expect content pulled tabs gets compiled nope current system need list directives used template used app template said agree pain neck got issue already gionkunz going close dupe let move discussion", "d": "11/2015"}, {"body": "cool good know guys track already thanks looking", "d": "11/2015"}, {"body": "try elvis operator x yz elvis operator null property paths", "d": "11/2015"}, {"body": "thnx otodockal", "d": "11/2015"}, {"body": "thx fast reply", "d": "11/2015"}, {"body": "could try rxjs uses version installable via npm though installed default see unless something specific need best use new library api changed eg features like pipes http use new api definitely outstanding issues wrt zones observables simple case work", "d": "11/2015"}, {"body": "thanks robwormald used version suggested works well going stick thanks lot", "d": "11/2015"}, {"body": "wrong repo guess looking one", "d": "11/2015"}, {"body": "pkozlowskiopensource indeed see easy confuse two though", "d": "11/2015"}, {"body": "meh even solve pb still duplicate facades every bundle since dependency rxjs pulling anyway afraid rx needs external dependency", "d": "11/2015"}, {"body": "mock backend nt imported anywhere far tell nt built bundle thursday november pawel kozlowski notifications githubcom wrote landed http longer imports observable reactivex rather uses one exported good since limits http dependency unfortunately still got place rx dependent upon directly mockbackendts mockbackend imports subject replaysubject reexporting subject case replaysubject current situation means need either bundle entire rxjs http approach external dependency neither ideal robwormald see quickwins reply email directly view github", "d": "11/2015"}, {"body": "yeh probably side effect rx imported async facade mock backend move http anyway soooo seems like facades blame turns means rx either needs external dependency reexport core", "d": "11/2015"}, {"body": "ok robwormald right rx pulled mock backend rather async facade since duplicate facades duplicate rx well way solving think marking rx external dependency going pr cjs bundles", "d": "11/2015"}, {"body": "problem another plunkr example demonstrate", "d": "11/2015"}, {"body": "agree might nice folks like jsx external contributor works rather core team opinion rather benefits thoughts amp work fine angular templates already demonstrated start webstorm coming ides soon angular likely performs better jsx compilation happens build step landing soon yes could nice could work well folks using flux style data flow likely soon components native angular however sure actual benefit ecosystem general like htmlspec compliant template tools work designers easier time interacting", "d": "11/2015"}, {"body": "bradlygreen malekpour would argue degree today using typescript seamlessly bridge two technologies end javascript example integrate fluxreact based component angular component details", "d": "11/2015"}, {"body": "bradlygreen agree almost points nt mean change anything current angular design removing run time template parsing big fan clarify mean please compare two components onkey first template double quoted string inside another multi line string jsx template identifier makes sense also compiler would generate something similar strongly doubt parser perform better run time parameters tagdirective name attributes children aware plan mentioned comment number even better angular support compiled templates jsx compiler output nt forget great attraction react community members contribute migrate", "d": "11/2015"}, {"body": "funny randomly copied component snippet page tried compile jsx template realized element line closed mistake repeated page least times documentation team kind mistakes common type safe template support helps lot", "d": "11/2015"}, {"body": "malekpour may want look design documentation template compiler outputs code unlike jsx said could certainly implement party render plugin fact reactnative renderer might get started thelgevold super cool demos way components page great", "d": "11/2015"}, {"body": "thanks robwormald appreciate", "d": "11/2015"}, {"body": "never liked idea xml javascript benefit see static analysis template html strings possible write static analyzers lint html strings though either mark template strings tag function like somehow use typescript type system hint string html", "d": "11/2015"}, {"body": "agreed thought already issue hard search mobile", "d": "11/2015"}, {"body": "though disagreed behavior fetch errors network errors", "d": "11/2015"}, {"body": "thinking filed issue promise would success error http codes consider success since subscribe analogous success codes realistically anything error rather expecting needs special handling sort handling network error", "d": "11/2015"}, {"body": "depends really want stick semantics fetch specification mostly agreement though perhaps configurableinjectable option proposed handler github fetch polyfill", "d": "11/2015"}, {"body": "really awful especially case error ca nt read error status please please fix", "d": "11/2015"}, {"body": "syntax proposal thoughts partial option providers come first explicit", "d": "11/2015"}, {"body": "also like option", "d": "11/2015"}, {"body": "additional thing think eventually ts supports like able sure nice way fit perspec providers", "d": "11/2015"}, {"body": "think several ways add providers none stick particularly nice", "d": "11/2015"}, {"body": "jelbourn possibly run problem maybe", "d": "11/2015"}, {"body": "assigning vsavkin provide comments yet form opinion one hand simply browsers support native shadow dom case conceptually projected dom physically move visually hand seems like totally legit usecase perhaps could implement two orthogonal features one visual reprojection one di reprojection", "d": "11/2015"}, {"body": "angular thrown native shadow dom anyway nt feel strongly keeping browser contracts innocent", "d": "11/2015"}, {"body": "thrown away disabled default thu nov matan lurey notifications githubcom wrote angular thrown native shadow dom anyway nt feel strongly keeping browser contracts image innocent reply email directly view github", "d": "11/2015"}, {"body": "working expected probably want remove parameter route move route within component alternatively break apart hierarchy three components case could create separate routes without params toplevel component open issue optional params", "d": "11/2015"}, {"body": "thank brian got confused path routerlink bit one thing nt able route without alias use router link anyone wants see updated plunker", "d": "11/2015"}, {"body": "reference seeing fix error reported changed little bit since see ie error message slightly different", "d": "11/2015"}, {"body": "would work second sure intended way makes sense default route could recognized automatically", "d": "11/2015"}, {"body": "thank necroskillz nt know nt try workaround working temporary work around agree think pass go default instead", "d": "11/2015"}, {"body": "ok worked get work right struggling hopefully help newbs like get plunker working tldr got confused url route names bound child routes require names seen people examples without field none plunkers code let fly maybe something wrong full issue even though within routelink bound url path brain understand reading examplestutorialsguides always used naming convention two bound consider child component config pets component browser could go would fine could go would also fine work technically name route bananas correct routerlink felt stupid realized confusion issue ultimately called brain saw resolving router told expect children route goes cars component looking children assumed url path would tell router main item nt look path looks alias nt pass child route load threw error needed name pass two take aways closeness pathaliasrouterlink bit confusing point would bonus use like reads path value first alias seen code written way never works least consider name changes clear actually happening change name alias change clarify referencing url string config change path url actually effecting like uirouter expert maybe understanding spent ton time messing nt get", "d": "11/2015"}, {"body": "didnt mean close id like open discussion", "d": "11/2015"}, {"body": "dennisroam thanks feedback sorry frustration bit part problem documentation around route links work still poor improving shortly try address suggestions change name alias agree already implemented change master important keep concept distinct path one segment suggestion defaulting value empty work existing thread planned improvements linking dsl may interest nt think name suggestions better think url even misleading since nested components part path rather full url nt see suggests nonurl value way works also going change see", "d": "11/2015"}, {"body": "hey brian thank reply bit frustrated wrote ton appreciate hard work thanks even looking", "d": "11/2015"}, {"body": "see angularangularjs", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "nt understand used click link like", "d": "11/2015"}, {"body": "ah sorry misunderstood add feature event delegation injecting calling functionality commonly needed talk adding core suspect subtle differences requirements apps want", "d": "11/2015"}, {"body": "heavily invested objectobserve saying angular never used oo change detection algorithm infrastructure could point source claim would roadmap removal feature standard roadmap impact decision design codebase equal zero nt use never used oo", "d": "11/2015"}, {"body": "confused observables objectobserve", "d": "11/2015"}, {"body": "nt supposed make angular super fast promise resolving end", "d": "11/2015"}, {"body": "bug missing feature something completely wrong impossible say based info provided send plunk reproduce scenario otherwise actionable", "d": "11/2015"}, {"body": "ok problem create post link", "d": "11/2015"}, {"body": "know made well link goto appts look defined object two ngfor", "d": "11/2015"}, {"body": "kalinicm second trying iterate object properties nt wo nt supported knows iterate arrays", "d": "11/2015"}, {"body": "ok made pipe works thank fast response clear information", "d": "11/2015"}, {"body": "ok glad clarified", "d": "11/2015"}, {"body": "pkozlowskiopensource please explain support objects one iterate keyvalue pairs map", "d": "11/2015"}, {"body": "would like see ngfor handle arrays objects matter second thing would ngfor keys values pass php use much missing something foreach array gt print key foreach gt print key value", "d": "11/2015"}, {"body": "wrong repo guess looking said looks like hitting limit parallel downloads given server browsers limit would surprised turns angularjs issue tried reproduce pb vanilla html js xhr would expect pb occur", "d": "11/2015"}, {"body": "apologies thanks tip", "d": "11/2015"}, {"body": "looks like also occurs actually without magical sugar option make string workaround today", "d": "11/2015"}, {"body": "matanlurey tbosch sent pr please review", "d": "11/2015"}, {"body": "lgtm marked pr merge wed nov pawel kozlowski notifications githubcom wrote matanlurey tbosch sent pr please review reply email directly view github", "d": "11/2015"}, {"body": "pkozlowskiopensource wow thanks fast change appreciate", "d": "11/2015"}, {"body": "pkozlowskiopensource issue removed exp export class myapp string c string null string bootstrap myapp generated html html", "d": "11/2015"}, {"body": "todoubaba sth entirely different comparable syntax would afaik works correctly raising binding property equivalent produces least chrome angular really browser type casting conversion feel free open separate issue disputable fixing", "d": "11/2015"}, {"body": "pkozlowskiopensource think different assigned boolean value user provide dynamic class name syntax btw exp array behaviour seems inconsistent array element evaluated nothing typescript amp generated html amp", "d": "11/2015"}, {"body": "todoubaba point continuing discussion closed issue discussing different code path related issue believe sth fix please open new issue", "d": "11/2015"}, {"body": "also duplicate guess", "d": "11/2015"}, {"body": "indeed duplicate thnx", "d": "11/2015"}, {"body": "pkozlowskiopensource closed instead bug since description better one already tagged brian", "d": "11/2015"}, {"body": "plunker issue one works fine", "d": "11/2015"}, {"body": "tried", "d": "11/2015"}, {"body": "drop component know selector transparent reusable may include whenever want sent iphone nov pm ericmartinezr notifications githubcom wrote tried export class dropdown constructor elementref elementref inserthere append elementrefnativeelement reply email directly view github", "d": "11/2015"}, {"body": "use dynamiccomponentloader", "d": "11/2015"}, {"body": "think ericmartinezr solution makes sense tweak using jquery angular typically made call oninit instead constructor import component view elementref oninit declare var jquery component selector jqueryintegration templateurl componentsjqueryintegrationjqueryintegrationhtml export class jqueryintegration implements oninit elementref elementref constructor elementref elementref thiselementref elementref oninit jquery someselector append thiselementrefnativeelement said would recommend avoiding jquery rendering components better rely objects databinding compose angular ui", "d": "11/2015"}, {"body": "munificent kevmoo could please sanity check proposal wrt pub interested knowing whether something like pub philosophy general whether might difficulties implementation plan eg authentication travis cap number published versions per day top head see one issue pub lists versions linear fashion example means start publishing every sha versions tab become useless contain lot noise igorminar could provide details rationale sure status quo prevents us testing angular builds quickly provide hotfixes examples", "d": "11/2015"}, {"body": "another option create angulardartcompiled org github repos packages push repo release tag dependent package pointing correct version friends also get nice benefit able easily see dart code deltas builds without creating pile turds pub site", "d": "11/2015"}, {"body": "yjbanov wrt rationale order verify published artifacts work correctly want able tests install angular via package managers might important npm pub npm deliver build artifacts also typings transitive dependencies good way test without proper package additional reasons setting bisecting angular looking culprit commit become trivial use channel make hot fixes available outside regular release schedule get feedbackbug reports external users regular release occurs making canary channel kevmoo brought interesting alternative publishing npmpub npmpub support pulling packages github could setup two repos js dart push build artifacts nice benefit see diffs github slight downside git dependencies usually slower install might significant", "d": "11/2015"}, {"body": "kevmoo discussed idea decided try first thanks plan create two new repos green full travis build commit ts dart code respective build repo toplevel file contain sha angularangular repo build artifacts produced support pubnpm git dependencies repo contain one package continute publishing straight npmpub", "d": "11/2015"}, {"body": "yjbanov cool idea bit aggressive create new github org many repos package good start smile", "d": "11/2015"}, {"body": "kevmoo one package might", "d": "11/2015"}, {"body": "yjbanov another thought rather creating new repos could reuse create orphan branches one js one dart way dependency going point back right repo since tags already contain name obvious build artifacts orphan branches prevent people pulling stuff casually cloning repo additional benefit someone creates custom build want share use setup precedence eg", "d": "11/2015"}, {"body": "igorminar using main repo makes worried several things operating main repository risks ruining halting development increased size repository would lead longer es git wo nt able reuse objects discoverability takes knowledge steps get code fact branch contains completely different things master contains leading crosspollution switching branches mean dependency going point back right repo would wrong repo", "d": "11/2015"}, {"body": "publishing using git technical limitations pubdartlangorg prohibiting likely slow constraint solver package thousands versions want able put packages small set users consume putting side git seems like right choice still straightforward users depend avoids cluttering user experience users pile versions nt care", "d": "11/2015"}, {"body": "landed problem tag commit fetched pubnpm using humanfriendly reference tags leak orphan branch make commits participate git clonefetchetc looked briefly could nt come way around git hacky way would use branches rather tags humanfriendly reference sure consequences tens thousands branches repo", "d": "11/2015"}, {"body": "igorminar technically tags branches pointers difference branch moves head checked surely know nt think make difference least technically semantically tags would surely better since static", "d": "11/2015"}, {"body": "pascalprecht tags would better leaky solution branches would rely branching new commit", "d": "11/2015"}, {"body": "additional info also seem hitting line code else reloadlocation needed browsers nt allow read new locationhref reload happened replacement workaround return reloadlocation locationhrefreplace", "d": "11/2015"}, {"body": "repo sure goes asking afaik router works viceversa", "d": "11/2015"}, {"body": "yah sorry wrong repo guess dizzyface", "d": "11/2015"}, {"body": "hahaha fine repo", "d": "11/2015"}, {"body": "cajoy sure follow component whereas corresponding dom element", "d": "11/2015"}, {"body": "design wan bind data store attribute use", "d": "11/2015"}, {"body": "remember manipulates properties attributes default", "d": "11/2015"}, {"body": "wrong repo one angular try", "d": "11/2015"}, {"body": "repository angular probably looking", "d": "11/2015"}, {"body": "think possible yet discussed says furthermore typescript question one", "d": "11/2015"}, {"body": "thanks idea solve problem", "d": "11/2015"}, {"body": "statement specified importing js code trying import html wo nt work might loader specific hooks future enable mean load transformation something might happen future today one use property export template string import use inside property future going offline template compilation story thought going close one nothing actionable issue also please try cross post gitter saw got already identical answers question need duplicate questions efforts answer thnx", "d": "11/2015"}, {"body": "able patch angular fix issue created new uses going try putting ng proper running suite starters code transpiled", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "maybe without dominsertafter use dom methods insertbeforeappendchild directly", "d": "11/2015"}, {"body": "tbosch estimate effort issue determine would require breaking change important get done beta", "d": "11/2015"}, {"body": "tbosch get fixed beta", "d": "11/2015"}, {"body": "going put list might slip", "d": "11/2015"}, {"body": "mlynch guys send pr", "d": "11/2015"}, {"body": "ah yea incoming week", "d": "11/2015"}, {"body": "current code looks like missing see defined basically work fine opened issue time ago although removed", "d": "11/2015"}, {"body": "ericmartinezr thank precisely", "d": "11/2015"}, {"body": "well look sauce lab results see main page repo", "d": "11/2015"}, {"body": "findings problems token used rxjs define browser nt support see class exported match spec suggestion ignore inconsistent api checking sent pr entries missing static methods parent class reason correctly inherited browsers", "d": "11/2015"}, {"body": "second problem happens support objectsetprototypeof used babel class inheritance rxjs uses babel transpile cjs use run unit tests seems known limitation", "d": "11/2015"}, {"body": "fyi changed rx fully transpile ts cjs probably solve babel specific behavior", "d": "11/2015"}, {"body": "mlaval looks like removed public api solves problem guess symbol issue yet resolved though", "d": "11/2015"}, {"body": "correct left error safari lt android lt sent avoid sure get cleaner fix", "d": "11/2015"}, {"body": "closed fixes", "d": "11/2015"}, {"body": "mean guess could use normal url like instead routerlink", "d": "11/2015"}, {"body": "matsko talking refactor would start address", "d": "11/2015"}, {"body": "tried", "d": "11/2015"}, {"body": "thank pointing actually styles work without shadow well example simple let say button try either nt work", "d": "11/2015"}, {"body": "code example somewhere view looking similar things trying understand styles rendered different encapsulation modes would useful see working example", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "seems like bug way selectors rendered anytime try multiple selectors applies custom attribute appears incorrect nt work attribute nt exist children template nt matter write selector angular adds wrong attribute css spits markup renders span given different attribute markup style selector uses attribute root element text host span color red export class mybutton component selector myapp view template styles directives mybutton export class app", "d": "11/2015"}, {"body": "intended behavior css encapsulation enabled isolate css styles component defined way set child component styles parent otherwise hard reuse component another application another place application requires look differently", "d": "11/2015"}, {"body": "using systemjs map alias particular componentdirectory directory tree lets say want add aliases configjs imports would alternatively could configjs imports would addition install component external repositorypackagemanager via jspm aliases automatically mapped correct location within jspmpackages folder", "d": "11/2015"}, {"body": "evanplaice answer final part artaommahe question necessary inject httpproviders services top level app bootstrapjs component uses service depend components inheritance thing breaks modular structure componentsservices ona module knows path componentsservices modules must watch dependencies easily solves via modules system also problem running immediately comes fact everything within bootstrap function tests even using providers subcomponents creates new instance specific injectable class also becomes really annoying want share packages lets say build module module services nested one something person grabs package include every one classes within import app base component add bootstrap function well want even use modules please correct wrong change breaks way used work saw service singleton used throughout controllers services even sometimes project specific directives still possible would forced specify services within bootstrap method make available application wide", "d": "11/2015"}, {"body": "schippie create files modules export public providers import providers main file use function basically almost exactly like js smthmoduleindexjs import smthfactory smthfactory import smthservice smthservice export const smthmodule smthfactory smthservice appjs import smthmodule smthmodule imports bootstrap appcomponent smthmodule providers", "d": "11/2015"}, {"body": "alexpods okay got answer stackoverflow core directives example guess adjust new way writing similar dealing polymer components guess good way deal make base file directory model utils components specify thank", "d": "11/2015"}, {"body": "schippie imho think better one base file module file single public interface module js smthmoduleindexjs import smthfactory smthfactory import smthservice smthservice import smthcomponent smthcomponent import smthdirective smthdirective export smthdirective export const smthmoduleproviders smthfactory smthservice export const smthmoduledirectives smthcomponent smthdirective appcomponentjs import component import smthdirective smthmodule import smthmoduledirectives smthmodule component directives smthdirective directives smthmoduledirectives template export class appcomponent appjs import smthmoduleproviders smthmodule import appcomponent appcomponentjs bootstrap appcomponent smthmoduleproviders providers", "d": "11/2015"}, {"body": "alexpods oh situation describing end subdirectories fact within single project could run large file base well point since purely project non public would way would handle modules anybody would write single file correct way prevent confusion", "d": "11/2015"}, {"body": "yet afaik works promises refactored work observables see matter time next release pinging robwormald since implemented custom rxpipe ca nt find", "d": "11/2015"}, {"body": "works master see working next release interim rx pipe use instead", "d": "11/2015"}, {"body": "reading di seemed missed important detail seperate files problem solved moving classes seperate locations", "d": "11/2015"}, {"body": "right angular user mix match components different viewencapsulations nt using component viewencapsulationnone emulated inside component viewencapsulationnative would work correctly regarding styling shadow roots blocks styles document head sun nov pm jeremy wilken notifications githubcom wrote sibling components one viewencapsulationnative viewencapsulationnone styles component stylings appended shadow root one component set native plunker image screen shot pm component set native adopt rest css rules nonnative components screenshot rendered dom last three style elements appended end shadow root actually declared two components set none emulated modes reply email directly view github", "d": "11/2015"}, {"body": "interesting counterpoint would nt also potentially cause issues native mode using third party component none uses css selector would get injected component certainly nt expect sibling style rules get injected shadow root native mode component least see case granular control occurs perhaps strictnative mode also since styles inside emulated components given unique attributes wo nt ever apply another component reason inject", "d": "11/2015"}, {"body": "see generated html code going close one ca nt reproduce keep seeing pb make sure browser cache cleared report eventual problems docs website resides", "d": "11/2015"}, {"body": "seems zonejs nt loaded tests run everything works", "d": "11/2015"}, {"body": "try waiting callback trigger first check modified plunk", "d": "11/2015"}, {"body": "rpark problem time array may change firebase side class handles internally nt show plunk concept using reflectsync changes using promise solution", "d": "11/2015"}, {"body": "hard time going way using everything created simplified version connects firebase call correctly updating expected plunker sure using service inject ref array extension calling seems like lot work guess app needs something similar also check firebase pipe used may help bit", "d": "11/2015"}, {"body": "example using data firebase info moved service using observers trigger view updating note added delay simulate long call", "d": "11/2015"}, {"body": "dennisroam need use service url firebase reference composed base data returned service also create class extends array syncs changes matter side firebaselocally check use array simply iterate values view need wait order create firebase ref made service array anyway plunks created exactly looking perhaps using pipe would work actually considered service observable use pipe latest release seem support rx observables point", "d": "11/2015"}, {"body": "dekamerron tutorial lives believe error reporting fixed via believe still items fixed please report doc live thnx", "d": "11/2015"}, {"body": "dup", "d": "11/2015"}, {"body": "closing dupe", "d": "11/2015"}, {"body": "appreciated", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "longer issue closing", "d": "11/2015"}, {"body": "please provide reproduction via plnkrco saves us lot time thanks", "d": "11/2015"}, {"body": "btford sorry forget close issue bean solved firends giiterim help solve anwser import zonejs", "d": "11/2015"}, {"body": "pkozlowskiopensource u r quickly", "d": "11/2015"}, {"body": "canonical place ie", "d": "11/2015"}, {"body": "mhevery saying add property decorator lifecycle hook would value string name method called hook symbolbased approach proposed alexpods good thought downsides would nt necessarily make good experience dart users would add complexity framework support targets would one language feature users would need understand order use angular experience would force user either staticallyassign symbol names prototype dot notation use square brackets assign instance methods inside component constructor component prototype think move forward method decorator approach originally proposed igorminar migration plan proposed vicb", "d": "11/2015"}, {"body": "jeffbcross let dismiss symbols quickly aim best possible api particular language symbols use otherwise api mediocre thought symbols past dismissed like alexpods example clearly shows much elegant api could let spend bit time thinking would take make thing", "d": "11/2015"}, {"body": "jeffbcross thanks clarification nt think point good argument nt decorators workaround needed anyway first two points pretty solid igorminar actually thinking also incline use decorators points already uses decorators pretty actively api consistent continue use add parameters decorators useful cases future example nt like restrict use decorators one method class likely repeat name decorator method name looks stupid think ericmartinezr proposal multiple decorators pretty good order think guarantee order use multiple decorators use absolutely independent tasks order nt matter otherwise use functional composition maybe better give users opportunity decide use multiple decorators single one", "d": "11/2015"}, {"body": "nt think point good argument nt decorators workaround needed anyway alexpods valid point provide api sugar make component decoration easier users could case yet clear head right design would think igorminar persuasion going quick chat internally today talk could make good experience dart tsjs edit oops missed igor recent comment", "d": "11/2015"}, {"body": "jeffbcross component oninit oninit yes something like", "d": "11/2015"}, {"body": "alexpods difference current use property decorators proposed use lifecycle hooks lifecycle hooks properties predefined type signature hook called arguments certain type one property hook lastly name property insignificant long framework identify none true current use property decorators symbols two big advantages property decorators concise need duplicate name two times create bogus property name typesafe along symbols also provide interfaces describe hook signature biggest question mark reconcile implementation uses symbols implementations used dart", "d": "11/2015"}, {"body": "vsavkin yjbanov talked came following conclusions symbols provide ergonomic api slight concern perceived api style inconsistency believe benefits symbols uniqueness typesafety extensibility party hooks outweigh concern another concern hooks expressed via symbols could nt parameterized unlike property decorators however see achieved either providing several symbols decorating properties defined via symbols considered implement dart came conclusion dart could stick using interfaces retained runtime unlike ts interfaces dart give us type safety namecollision prevention well api style conciseness path forward would keep declaring lifecycle hooks via interfaces dart use symbols tsjs reasons like proceed using symbols tsjs interfaces dart four remaining concerns need investigate committing symbols ts support type checking tooling well transpilation current status polyfilling symbols verify perf penalties using symbols eg hook perf sensitive api none prove problematic proceed using symbols tsjs", "d": "11/2015"}, {"body": "would nt mind original decoratorannotationbased proposal due advantage would simplify documentation", "d": "11/2015"}, {"body": "get researching blockers", "d": "11/2015"}, {"body": "ts support type checking tooling well transpilation turns ca nt use interfaces conjunction symbols except builtin symbols ca nt statically verified dynamic move forward without good interface support typescript", "d": "11/2015"}, {"body": "verify perf penalties using symbols eg docheck hook perf sensitive created jsperf benchmark compare performance computed method names static method names computed properties get transpiled results pretty much identical one benchmark also tests using real property slower still fast", "d": "11/2015"}, {"body": "current status polyfilling symbols nt provide polyfill symbol nt currently include polyfill bundle create symbol object use internally function project looks reasonable minified gzipped mit licensed bytes bear perhaps good first step use string object could transparently change later", "d": "11/2015"}, {"body": "igorminar interfaces dart symbols looks reasonable nt see work go path also discussdesign solution easy use ie symbols easy use", "d": "11/2015"}, {"body": "question required beta could always introduce symbol support later since support interfaces dart would vote delaying beta nt see advantages solving beta", "d": "11/2015"}, {"body": "api comparison api vs cc mhevery igorminar", "d": "11/2015"}, {"body": "mhevery breaking change impacts docs usage done beta never", "d": "11/2015"}, {"body": "jeffbcross actually declare since support interfaces could stick current model later introduces alternative way interfaces go away dart breaking change rather additional way", "d": "11/2015"}, {"body": "mhevery let igorminar work nt mind less work users could technically use current api nice separate discussion nt think still support declaring prototype outofband ie could take object function", "d": "11/2015"}, {"body": "mhevery could also reintroduce property decorator", "d": "11/2015"}, {"body": "separate discussion nt think still support declaring prototype outofband ie class could take object function provide example", "d": "11/2015"}, {"body": "mhevery", "d": "11/2015"}, {"body": "since support interfaces could stick current model nt solve problem current model user could accidentally name method way collides lifecycle hooks would get called angular unexpectedly", "d": "11/2015"}, {"body": "offer reactstyle dsl declaring components lighter syntax wed nov pm jeff cross notifications githubcom wrote since support interfaces could stick current model nt solve problem current model user could accidentally name method way collides lifecycle hooks would get called angular unexpectedly reply email directly view github", "d": "11/2015"}, {"body": "mhevery interfaces nt work jsts retained runtime currently check well method name present class prototype call error prone result major headaches introduce lifecycle hooks ionic similar solutions top angular introduce custom hooks already need custom hooks router expect control dsl say properties special already property example say dsl properties starting turned lifecycle hooks", "d": "11/2015"}, {"body": "work symbols decorators renamed name cons little bit verbose likely names lifecycle hooks repeated igorminar oninit function turned hood ca nt turn nt work thirdparty library yjbanov offer reactstyle dsl declaring components lighter syntax mean", "d": "11/2015"}, {"body": "jeffbcross yes could support would awkward whole point make streamline breaks", "d": "11/2015"}, {"body": "current status polyfilling symbols researching potential polyfills could test supported browsers question required beta hate leave comments feedback like personally would love address pressing pbs beta personal opinion", "d": "11/2015"}, {"body": "note running issues symbols coming rxjs might blocker aware mlaval might input", "d": "11/2015"}, {"body": "mhevery interfaces nt work jsts retained runtime depends mean retained dart interfaces retained nominally js structural work intended common js say something like structural typing work intended btw difference symbols symbols guessed hence prevent collision could achieve prefixing unique prefix concern three ways declaring call back dart use interfaces would use symbols would use prefix good situation top pay gzip already large codebase creates lot problems solves also explain symbols developers confuse situation top proposal breaks type safety tooling example let say would like compile jscompiler way express types way js compiler understands current stand create consistent experience across languages fragment leaves us options use interfaces downside could name collision could solve prefixing methods also extensibility clear use annotationdecorators downside bit verbose consistent across languages mostly dart typescript would strongly advised clause proper type safety dart typescript given clause good idea type safety perspective think stick yes problems collision mostly theoretical easily detected tools since method signatures likely match", "d": "11/2015"}, {"body": "worth mhevery got already nice amount new concepts things contribute size code base imo symbolbased api nt pays price", "d": "11/2015"}, {"body": "counter proposal done thinking think provide counter proposal satisfy constraints first let agree dart problem interfaces provide right level type safety nominal prevent name collision form accidentally implementing interface easy third parties router interfaces solution fix js types structural nominal would work third parties third party declare interface class onactivete must class runtime representation onactivate component implements onactivate class mycomponent implements onactivate onactivate works expected provide method notes would js ie dart would need", "d": "11/2015"}, {"body": "found issue reading first time oninit siblings like new thing tried submit issue idea simplify declaration collisions mentioned igor idea use dependency injection think", "d": "11/2015"}, {"body": "eoz nt work must ability check existence lifecycle hooks type instance mentioning performance penalties approach", "d": "11/2015"}, {"body": "mhevery latest proposal works kind duplicates info imo constant source confusion hay implemented interface lifecycle hook still nt work really huge problems mean practice decorators", "d": "11/2015"}, {"body": "mhevery nominal instanceof prevent name collision form accidentally implementing interface nt prevent users declare methods reserved lifecycle hooks future versions angular alexpods thanks nt know well better ideas", "d": "11/2015"}, {"body": "mhevery pkozlowskiopensource conterproposal even verbose using property decorators adds confusion nt new benefits missing something", "d": "11/2015"}, {"body": "seem like whole lot work complexity solve problem far easier solved documentation imo react currently far aware vast majority community fine add benefits nt see value", "d": "11/2015"}, {"body": "looking react docs longer method names seem like prevent collisions etc", "d": "11/2015"}, {"body": "robwormald convention docs sufficient need extensible mechanism used parties keep mind apps building millions lines code ca nt rely documentation prevent name collisions", "d": "11/2015"}, {"body": "eoz nominal instanceof prevent name collision form accidentally implementing interface nt prevent users declare methods reserved lifecycle hooks future versions angular since declare method mine go implement interface forced rename method point ca nt accidentally declare method framework would call", "d": "11/2015"}, {"body": "mhevery pkozlowskiopensource conterproposal even verbose using property decorators adds confusion nt new benefits missing something new benefit problem accidental name collision user declares new method framework choses take future collision since nt decoration user method framework user choses implement adding resolve name collision accidental explicit declare nt type information part option hence required personally think point overkill somehow explicitly disambiguate user framework namespace several ways decorator b annotation c prefix using symbol already mentioned symbols good idea", "d": "11/2015"}, {"body": "prop decorator sufficient prevent name collisions need pseudointerface", "d": "11/2015"}, {"body": "words prevents implenting interface method name already exists drawbacks user refactoring rename existing method user receive error messages adding implements oninit ide runtime ca nt say elegant solution ca nt propose better", "d": "11/2015"}, {"body": "adding decorator class explicit developer action opinion optin lifecycle methods also means existing code namespace collision changedfixed writing either wrapper class changing original code adding additional boilerplate annotations common scenario prevented possible", "d": "11/2015"}, {"body": "cents sounds like best compromise overly verbose explicit consistent dev experience avoids lame strings component property though probably put property well", "d": "11/2015"}, {"body": "building custom components evening possibly rx time feels like mismatch use observableeventemitter notify outside component something changed inverse discussion use regular callback methods something like typescript class mycomponent oninit init observable onchange didchange observable constructor thisinitsubscribe gt consolelog intialized thisdidchangesubscribe changes gt stuff changes enables stuff like thisdidchangefilter change gt changefield foo subscribe thisdidchangedebouncetime subscribe makes sense", "d": "11/2015"}, {"body": "robwormald pointed thread since question currently catching updates input properties working ngbootstrap currently way know watch input change via lifecycle hook however becomes problematic soon one watch updates one attribute would like syntax supports watching attribute would give consumer ability observe multiple attributes", "d": "11/2015"}, {"body": "wesleycho funny bring idea initially thinking even one point bugging robwormald questions thought inputs would observables default kind makes sense since values change outputs observables inputs heard angular going bake rx really thought meant really bake seems sort live api like wesleycho suggestion however could see someone wanting even shorterhand way declaring observable input maybe ignore name however nt great whole point making observable perform methods eg map reduce etc still class method somewhere could constructor introduce new variable store results subscription next values ts component class mycomponent rxinput observable constructor either set subscribe creating new annoying val store results reduce subscribe val val sum problem want declare input observable changes put changes view little work possible ideas wesleycho could show steps take get next values onto view assume still need run observable rx operators", "d": "11/2015"}, {"body": "idea originally something like use case thinking actually ended much better way design component using querylist", "d": "11/2015"}, {"body": "idea observables lifecycle hooks looks attractive", "d": "11/2015"}, {"body": "new api decided much debate mhevery igorminar prefix method names ie contrary proposal using shorter unique names lifecycle methods like got ta pick battles implementing prefix fix joke prefix decision real", "d": "11/2015"}, {"body": "vsavkin amp igorminar think prefix pipe consistency agreedisagree", "d": "11/2015"}, {"body": "jeffbcross prefix", "d": "11/2015"}, {"body": "eoz consistent lifecycle hooks like", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "talked vsavkin made point directives implement would consistent pipes implement angular lifecycle interface change pipe instances implement rename method", "d": "11/2015"}, {"body": "update decided wait little bit land change since lot work merge internally", "d": "11/2015"}, {"body": "coming library nt also single interface already pointed", "d": "11/2015"}, {"body": "mhevery think saying consistent last comment matter right", "d": "11/2015"}, {"body": "yes agreeing jeffbcross", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "got pr one already", "d": "11/2015"}, {"body": "ah nt realized nt landed yet thought left missed mon nov pawel kozlowski notifications githubcom wrote got pr one already reply email directly view github", "d": "11/2015"}, {"body": "given blocked sent remove gulptraceur already gone dependencies published packagejson", "d": "11/2015"}, {"body": "word fix", "d": "11/2015"}, {"body": "time fix weekend submit pr", "d": "11/2015"}, {"body": "nt know anything wrong happens hashlocationstrategy using transpilation occurs application runtime", "d": "11/2015"}, {"body": "kucharskimaciej let know need jump since experiencing problem probably help fix", "d": "11/2015"}, {"body": "info delayed upgrading alpha app affected issue urgency moment though", "d": "11/2015"}, {"body": "thanks fixing issue try soon", "d": "11/2015"}, {"body": "yfain using aux route plunk nt exist alpha also nt way generate links aux routes yet updated plunk non routerlink href works", "d": "11/2015"}, {"body": "thank brandonroberts", "d": "11/2015"}, {"body": "code sample brandonroberts navigates aux route dev tools console shows typeerror read property component undefined back button browser nt work plunk", "d": "11/2015"}, {"body": "yfain believe bug already fixed wo nt next release", "d": "11/2015"}, {"body": "hey dgreif started working trouble making failing test case wrote test case think capture behavior describing still passing pretty new working angular though anyone suggestion looking neat diff diff git index export function main iit push history change currentlocationnewlocation inject asynctestcompleter async gt var outlet makedummyoutlet routerregisterprimaryoutlet outlet gt routerconfig new route path b component dummycomponent gt routernavigatebyurl b false gt routernavigatebyurl b false gt expect locationurlchanges toequal b asyncdone navigate configured inject asynctestcompleter async gt var outlet makedummyoutlet", "d": "11/2015"}, {"body": "estsauver may able capture test better emulates using actual browser look folder", "d": "11/2015"}, {"body": "robwormald thanks suggestion look", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "thank guys", "d": "11/2015"}, {"body": "addressed", "d": "11/2015"}, {"body": "okay thanks works running including indexhtml maybe worth adding quickstart guide", "d": "11/2015"}, {"body": "browser using shame testing chrome", "d": "11/2015"}, {"body": "using newest stable chrome release", "d": "11/2015"}, {"body": "nt work either danijar assumed developers new angular supposed know nt included quickstart guide", "d": "11/2015"}, {"body": "sure seems agnostic file path like intended", "d": "11/2015"}, {"body": "yes valid bug right thanks reporting sun nov pm nonamesheep notifications githubcom wrote sure seems agnostic file path like intended reply email directly view github", "d": "11/2015"}, {"body": "bit unfortunate absolute paths work templateurls found bug problem navigate away indexhtml refresh page good way load style imports relative current url navigate refresh styleurl requested turns userappcomponentsuserusercss instead appcomponentsuserusercss", "d": "11/2015"}, {"body": "problem using version", "d": "11/2015"}, {"body": "renderergetnativeelementsync method requires location object purpose injecting elementref use location api call way create location object type renderelementref elementref may one aware usually need root elementref component use constructorinjected parameter maybe use viewquery renderergetnativeelementsync method returns object returned elementrefnativeelement use renderergetnativeelementsync method get object easily elementrefnativeelement probably much difference previous alphas renderers could define element refs meant could get object nt property seems like less likely change course could wrong understand comment move code directive nonhtml users opt please elaborate afair general recommendation writing platformspecific code move directives way users nt need ca nt use say running nonhtml renderer easily disable templates", "d": "11/2015"}, {"body": "auxiliary routes anyway", "d": "11/2015"}, {"body": "auxiliary routes independent routes loaded alongside primary route think similar named views uirouter urls route parameters also though", "d": "11/2015"}, {"body": "really like make headway need get taken care first good news refactor tests work make writing tests parity much easier mean add transpilation side tests", "d": "11/2015"}, {"body": "currently working need attention future", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "clarify write myprop template identifiers would expected component selector input property", "d": "11/2015"}, {"body": "according commit inputs defined html look like html bit confusing reason events still parsed camelcase someevent someevent events dashes ignored", "d": "11/2015"}, {"body": "vsavkin currently deprecated please move issue", "d": "11/2015"}, {"body": "seems fixed latest", "d": "11/2015"}, {"body": "works well", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "work around fixed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "workaround moment hoping close next week though however since typescript still produces output even typing errors nt actually block development creates verbose compilation step fri nov pm laicos lee notifications githubcom wrote reply email directly view github", "d": "11/2015"}, {"body": "issue nt still seem fixed version update please", "d": "11/2015"}, {"body": "reworking webworker bootstrap import paths see result removing webworker specific import paths favor importing directly etc finish typings longer problem webworkers using dts files regular angular bundle minus browser platform files adding webworker platform files", "d": "11/2015"}, {"body": "thanks look forward", "d": "11/2015"}, {"body": "input fake element include styles", "d": "11/2015"}, {"body": "todoubaba hi sorry ask component constructor need init variables init variables use dynamicloader seems component nt run constructor", "d": "11/2015"}, {"body": "get component instance", "d": "11/2015"}, {"body": "deps provided set null following two lines equivalent framework basically current default means use reflection using empty list default makes sense functions without parameters example assigning empty list following factory really strange const binding myclass tofactory inject initnumber x gt x use default get function arity requires using mirrors use mirrors would need specify dependencies default works way works could change api make null similar empty list would still explicitly pass null one would still mean use reflection think might even confusing", "d": "11/2015"}, {"body": "sorry change give sort useful error message right error message nt make clear fails missing factory function", "d": "11/2015"}, {"body": "bumping priority prevents us executing tests using mirrors makes binary big run", "d": "11/2015"}, {"body": "workaround add manual calls file", "d": "11/2015"}, {"body": "earlier comment wrong inserting multiple calls entrypoint need call call dependencies methods", "d": "11/2015"}, {"body": "fyi refactor eventemitter generic", "d": "11/2015"}, {"body": "nice thank", "d": "11/2015"}, {"body": "news", "d": "11/2015"}, {"body": "sure issue workaround issue doesnt work ie im see loading message nothing also tried initial example plunker ts based none work ie none work mean tag rendered remains dom", "d": "11/2015"}, {"body": "yaroslavya present tries load object declared see docs", "d": "11/2015"}, {"body": "folder fails value creation collectionts provided ie", "d": "11/2015"}, {"body": "mexx must add well make sure put lib first place", "d": "11/2015"}, {"body": "ericcarraway thought nt manage dependencies", "d": "11/2015"}, {"body": "thought nt manage dependencies might make easier might produce bundle deps concatenated developer responsible including required polyfills polyfills needed depends set browsers one needs support closing one nt think got anything actionable covered issues already", "d": "11/2015"}, {"body": "pkozlowskiopensource shims place originally reported error still present would vote reopen", "d": "11/2015"}, {"body": "mexx pkozlowskiopensource thanks info guys im sure fix backed example plunker lot people looking info opening plunker choosing ts project doesnt work ie seems work box someone update probably someone contact plunker team", "d": "11/2015"}, {"body": "reopen compiler refactor misko mentioning landed master pretty positive fixed", "d": "11/2015"}, {"body": "yaroslavya regarding polyfills default discuss folks charge documentation", "d": "11/2015"}, {"body": "heres corresponding issue plunker ggoodman could update plunker template needed issue resolved", "d": "11/2015"}, {"body": "might issue", "d": "11/2015"}, {"body": "btford maybe", "d": "11/2015"}, {"body": "clarification currently ability set additional attributes script template anchor situation need able retain functionality converting comment seems like right answer", "d": "11/2015"}, {"body": "would able make", "d": "11/2015"}, {"body": "tbosch take look determine shouldcan beta", "d": "11/2015"}, {"body": "yes", "d": "11/2015"}, {"body": "reopening since commit reverted though hopefully pr land soon", "d": "11/2015"}, {"body": "fixed introduced allow users implement", "d": "11/2015"}, {"body": "yegor bomb", "d": "11/2015"}, {"body": "believe one fixed master via", "d": "11/2015"}, {"body": "naomiblack issue fixed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "closing issue mistake binding list component class listrow", "d": "11/2015"}, {"body": "new cases found", "d": "11/2015"}, {"body": "gkalpak strongly disagree practice used mostly frontend devs nt necessarily skillsknowledge setup backend embrace opportunity improve toolchain lower barrierofentry newcomers spa development usecase lets say separate frontend backend development teams working parallel build mvp backend responsible routes eventually map angular routes api backend microservice api manage persistent datastore frontend responsible defining clientside routing fetching data api dynamically via angularajax assumption clientside routes constant flux frontend devs add additional features scheme every time frontend team adds new clientside route wo nt able test backend maps route serverside issues backend team interrupted every time frontend team adds new route frontend team stalled wait backend map route ideal scenario teams able work independently routing structure established frontendbackend integrated solution frontend devs use testing server configured redirect requests since testing server mentioned angulario docs forked added feature specifying flag ie temporaryno cache redirects requests root prepended hash example waiting see project dev willing accept merge ref tapioliveserver two questions work redirect prepend", "d": "11/2015"}, {"body": "evanplaice sure part disagree nt say improving tools fact said think defaulting would lower barrier entry especially newcomers matter much tools improved always easier use default course switching whatever called days grin indeed pretty easy people know way around use either strategy minimal configurationboilerplate tbh nt feel big difference choose one default", "d": "11/2015"}, {"body": "gkalpak think may misinterpreted last statement may saying thing different ways either still need backend tweaked properly reroute incoming requests concerning clientside think perfectly acceptable make default necessary concession released prior norm relying seems like kludge anything imho keep around legacy support reflect current state technology make default concerning serverside vs irrelevant serverside inbound requests anything root restructured work angular redirected root mentioned already extension ready need little clarification ensure work inbound request redirected root server detect hash url follow hashed path bootstrapping url format use single hash hashbang hashed path includes anchor link handled anchor need encoded redirect", "d": "11/2015"}, {"body": "hashlocationstragety vs pathlocationstrategy irrelevant serverside server configured way redirects entry point indexhtml requests crux issue imo nt force people mess serverside config try clientside framework glad people got extensions favourite little petserver please nt force things everyone", "d": "11/2015"}, {"body": "hashlocationstragety vs pathlocationstrategy irrelevant serverside inbound requests anything root restructured work angular redirected root case nt clear pkozlowskiopensource said usually nt require serverside config since servers ignore hash url hand require serverside config undesirable imo", "d": "11/2015"}, {"body": "another good use case closed duplicate one imo need warning start set collaborating directives obvious users see needs imported listed", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "btford eta bug", "d": "11/2015"}, {"body": "issue message occurs different reasons", "d": "11/2015"}, {"body": "fix works hoping land week issue occurs whenever one reuse component followed case component reused including cases new child created", "d": "11/2015"}, {"body": "hack basvandenheuvel said", "d": "11/2015"}, {"body": "currently working", "d": "11/2015"}, {"body": "naomiblack point docs tests currently running travis", "d": "11/2015"}, {"body": "pointers fix html files get copied dist travis know run protractor tests tell protractor tests", "d": "11/2015"}, {"body": "yes makes sense please keep mind implement deprecation work remove later time", "d": "11/2015"}, {"body": "technically directive represents insertion point instead wrapper mhevery noted semantically name like would good choice computer interfaces insertion points often represented cursor would also make good semantic name however developer experience would probably lot better sounds much familiar current terminology catch may surprise developers content rendered within directive next", "d": "11/2015"}, {"body": "zyzle vicb tbosch close issue fixed next zone version tested commit works fine", "d": "11/2015"}, {"body": "thanks reporting", "d": "11/2015"}, {"body": "landed already closing issue", "d": "11/2015"}, {"body": "made tests ondeactivate either nt work templateurl important bug prevents using router angular application plan fix bug thanks", "d": "11/2015"}, {"body": "vguede fancy sending pr least failing test maybe sort things together", "d": "11/2015"}, {"body": "pascalprecht nt pr helps plunker", "d": "11/2015"}, {"body": "vguede correct let make pr", "d": "11/2015"}, {"body": "vguede using npm build built file", "d": "11/2015"}, {"body": "brandonroberts use built file try npm build", "d": "11/2015"}, {"body": "updated plunkr npm build bug", "d": "11/2015"}, {"body": "vguede nt suggesting use npm build gon na suggest temporary fix need verify work", "d": "11/2015"}, {"body": "brandonroberts fix help lot", "d": "11/2015"}, {"body": "vguede suggestion based already templates loaded using templatecache basically wrap section checks onactivate timeout blaming digest cycle using timeout force another cycle timeout change starts line build working plunk includes change angular router file", "d": "11/2015"}, {"body": "brandonroberts works fine indeed templates already loaded templatecache many thanks fix", "d": "11/2015"}, {"body": "brandonroberts nt issue fix implement redirect canactivate hook see", "d": "11/2015"}, {"body": "vguede use di canactivate hook updated plunk example admin route", "d": "11/2015"}, {"body": "brandonroberts forked plunkr using promises canactivate know nt work", "d": "11/2015"}, {"body": "vguede always return boolean whether truefalse promise resolves truefalse nt reject lifecycle hooks change", "d": "11/2015"}, {"body": "brandonroberts works fine many thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "danicomas commented gitter probably people may interested well looks like removed spec see mailing list", "d": "11/2015"}, {"body": "thanks information ericmartinezr confused able use use something like", "d": "11/2015"}, {"body": "case promises contract violated mea culpa wrote nt realize definition promises nt follow spec promises behavior complaining apparently intended behavior promises angular issue", "d": "11/2015"}, {"body": "lmfinney nt understand aspects promises referring state specs differ promise implementations currently shipping stable chrome firefox behave though compatible spec least usecases encountered trying browser fresh page logs console expected", "d": "11/2015"}, {"body": "markbuer discussing issue someone else said chose different implementation standard spec unfortunately sure parse parse spec see sure debate implementation final", "d": "11/2015"}, {"body": "lmfinney points link nt appear relevance discussion regarding exception thrown within handler", "d": "11/2015"}, {"body": "markbuer right tried node repl think original point stands", "d": "11/2015"}, {"body": "hit try typescript import component bootstrap function test string void promiseresolve gt throw new error gt alert fulfilled gt alert rejected component selector myapp template export class app constructor test inside work test outside works fine bootstrap app catch err gt consoleerror err plunk prefer see two alerts outside rejected inside fulfilled ftr current workaround diff diff git asrcappts bsrcappts index asrcappts bsrcappts import component bootstrap function test string void promiseresolve gt throw new error gt promisereject new error gt alert fulfilled gt alert rejected", "d": "11/2015"}, {"body": "marked closed catch windows build nt understand working testunitjs testunitjsci", "d": "11/2015"}, {"body": "annoying cost hair also loses capitalization", "d": "11/2015"}, {"body": "svg attributes rendered correctly yay however svg element names still converted lowercase seeing svg elements referencing rendered firefox nt show filter edge", "d": "11/2015"}, {"body": "also seeing error bound properties eg height svgs edit use attrheight bad", "d": "11/2015"}, {"body": "reported working yay", "d": "11/2015"}, {"body": "short update http uses facades rx direct dependency rxjs go away merging router uses facades makedecorator reflector dom web worker bundles nt use proper bundle arithmetic duplicate entire core sfx bundles nt use proper bundle arithmetic duplicate entire core", "d": "11/2015"}, {"body": "status update items need work remove code duplication use proper arithmetic web worker bundles decide sfx bundles vs umd bundles", "d": "11/2015"}, {"body": "update routes without leading slash landed", "d": "11/2015"}, {"body": "angular faced error suggestions debug casing issue", "d": "11/2015"}, {"body": "working docs atm please reassign needed pete", "d": "11/2015"}, {"body": "jeffbcross want use typealias rather interface anyway typescript language specification discourages type aliases interfaces used instead interface types many similarities type aliases object type literals since interface types offer capabilities generally preferred type aliases means following capabilities lost interface named extends implements clause type alias object type literal interface multiple merged declarations type alias object type literal interface type parameters type alias object type literal", "d": "11/2015"}, {"body": "applied naive patch angulario dgeni package ensure typealiases nt crash jade proper job describing type properly involved job", "d": "11/2015"}, {"body": "petebacondarwin sure originally changed interfaces types mhevery originally made change", "d": "11/2015"}, {"body": "thought difference mistaken think go back interfaces close issue", "d": "11/2015"}, {"body": "vsavkin yjbanov igorminar chatted implement take changes works implement routing yjbanov please explain approach", "d": "11/2015"}, {"body": "would work currently element shows source route output bug", "d": "11/2015"}, {"body": "goal would like pass data also would like unaware contract parent child single responsibility principle finally would like child component unaware type parent component perhaps child component reusable therefore different types parents problem sits router instantiates dynamically element template bind parent data child typesafe fashion one way could deal problem parent publish data via di child inject instead data binding several problems usually router would instantiate one several types child components otherwise use router child requires one piece data another one requires different piece data proactively publishing possible data would wasteful prevent eager loading via indirection requires much boilerplate di happens data changes time child component would need destroyed recreated pass new values di bit verbose parent bind addition setting actual data child inject via constructor proposal directive takes callback instantiates child run change detection child call callback passing reference child component callback child component concern entirely child type appear example directives routerdirectives routeconfig path component childcmp class parentcmp constructor params routeparams thisparentparams params passparams child childcmp void childparentparams thisparentparams implementation simple usecase one imagine advanced usecases perhaps could host multiple types child components parent would need supply different values different types note alternative callback use parent react limitation event flows callback could called synchronously entire sequence route change child instantiation passing values ui update happens single change detection pass", "d": "11/2015"}, {"body": "think api bit stands using propertybinding event binding set function gets called specific time weird also param example would nt able since could component would forcing user switch type typecast overall nt seem like less work setting query component setting data existing feature covers usecase suggest sticking immediate goals exploring nicer api exploring different api idea want express something like component containing router outlets component x loaded one outlets need give data think something like captures pretty well directives routerdirectives routeconfig path component childcmp class parentcmp constructor params routeparams thisparentparams params naming notwithstanding concept childrouteinit childcmp optionalspecificoutletidentifier passparams child childcmp void childparentparams thisparentparams similar today hostlistener click handleclick obviously would also need nondecorator syntax well", "d": "11/2015"}, {"body": "cc yjbanov vsavkin igorminar thoughts whether enough b second api", "d": "11/2015"}, {"body": "jelbourn idea", "d": "11/2015"}, {"body": "something along lines pass data routed components", "d": "11/2015"}, {"body": "couple ideas one approach created state decorator passing state data via state input state params resolved datas like another new idea declarative approach perhaps nest routed components inside routeroutlet used like configuration envision needing access local convenience vars like params like js component selector child class childcmp input name component selector foo class foocmp input bar component selector parent template routeconfig path child name component childcmp path foo id component foocmp class parentcmp", "d": "11/2015"}, {"body": "think closed might worth revisiting later pattern jelbourn showed used accomplish originally described suspect want add better syntax sugar later think wait bit better idea application needs", "d": "11/2015"}, {"body": "btford clear talking specifically pattern overall nt seem like less work setting viewchild query component setting data afterviewinit", "d": "11/2015"}, {"body": "personally totally even using pascalcase elements reasoning already naming classes using pascalcase import component looks like also inject using pascalcase use inside template shocking refer like seems bit jarring clear simply using feel another benefit becomes really easy quickly pick custom element mention nice would one happens rename component one could find replace instances component name instead first updating instances also seems one would longer even need inside component decorator therefore simplifying boilerplate needed define component", "d": "11/2015"}, {"body": "used pascalcase component element names get rid selector nt lose component directives bound view attributes", "d": "11/2015"}, {"body": "ronnross keeping names consistent potentially ditching selector property keeping optional case want different name class directives would probably need remain lowercase dashed nt restriction could technically set selector preference eg html could make component default selector directive default selector", "d": "11/2015"}, {"body": "updates", "d": "11/2015"}, {"body": "think makes sense pkozlowskiopensource point", "d": "11/2015"}, {"body": "think superseded anyway better", "d": "11/2015"}, {"body": "agreed tentatively close", "d": "11/2015"}, {"body": "work done part thnx petebacondarwin imo remains figuring best way hiding irrelevant details private variables methods used internally component class template constructors real question target docs directive users stick template also people extending directives calling methods somehow directive class combination directive directive controller separate pieces doc different usage patterns need decide best approach", "d": "11/2015"}, {"body": "petebacondarwin would best way hiding private vars methods would marking ts trick need doc annotation", "d": "11/2015"}, {"body": "currently nt think docs hide members marked typescript probably hide members start probably stop traceur thing", "d": "11/2015"}, {"body": "petebacondarwin ok see understand correctly way go today would add doc annotation right", "d": "11/2015"}, {"body": "right ignore tag though hide members marked tag perhaps way go", "d": "11/2015"}, {"body": "alexeagle action needed", "d": "11/2015"}, {"body": "obsolete longer need converts class interface", "d": "11/2015"}, {"body": "obsolete alpha started distributing nonbundled dts files via npm", "d": "11/2015"}, {"body": "closing issue proposed plan create sfxumd bundle containing core common create sfxumd bundle containing core common htttp router bundles used system webpack", "d": "11/2015"}, {"body": "topic tracked", "d": "11/2015"}, {"body": "naomiblack implemented deployed yet current angulario nt issue resolved", "d": "11/2015"}, {"body": "think yet deployed also pr fix problem adding links headings", "d": "11/2015"}, {"body": "autoclosed github merged pr description contains fixes xxxx partially fixes reopened also site latest fixes pete correct merged redeployed yet", "d": "11/2015"}, {"body": "igorminar link currently dead", "d": "11/2015"}, {"body": "jeffbcross could please help easy checking value attribute cancelling event", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "bit unclear thread withcredentials going supported please", "d": "11/2015"}, {"body": "vladimirivanov right future set withcredentials moment work js libraries http requests best way make", "d": "11/2015"}, {"body": "yay mr robwormald something workings", "d": "11/2015"}, {"body": "aim please", "d": "11/2015"}, {"body": "pleased succesfully done thank", "d": "11/2015"}, {"body": "also facing issue intermittently filed issue wrong place details issue", "d": "11/2015"}, {"body": "anyone quick fix bug", "d": "11/2015"}, {"body": "also came across issue case tabs component nt work optimally routing made example found issue might well add switch content visible change happens fairly simple component uses render items displayed items also use set timeout adding tabs constructor also works example", "d": "11/2015"}, {"body": "hi robwormald improve plunk point documentation bind data dynamically loaded widgets ideally want twoway binding container dynamically loaded child thank advance", "d": "11/2015"}, {"body": "confirm indeed fixed", "d": "11/2015"}, {"body": "activity regarding issue would like inject router instance canactivate hook component root loginprotected app user authenticated redirected login page think essential protecting application way accomplish behavior", "d": "11/2015"}, {"body": "frederikschubert simple workaround store application injector use inject dependencies inside canactivate function", "d": "11/2015"}, {"body": "ok see thanks still getting used new di system", "d": "11/2015"}, {"body": "still workaround works nov frederik schubert notifications githubcom wrote ok see thanks still getting used new di system reply email directly view github", "d": "11/2015"}, {"body": "see", "d": "11/2015"}, {"body": "brandonroberts implemented workaround worked discovered problems evaluation whether user logged depends promises observables content component protected hook visible fraction second user redirected login component know prevented janneromell also tried implementing use case user gets redirected initial requested url successfully logged possible hook receives annotated component implement behavior would necessary pass full hook btford planned implement", "d": "11/2015"}, {"body": "frederikschubert reproduce component showing plunk understand component behind canactivate nt loaded promisevalue returned true", "d": "11/2015"}, {"body": "brandonroberts found problem hook returned subscription turn returned whether user authenticated via subscription undefined evaluated true content shown observable returned false however user redirected login page think happen quiet often could easily prevented checking outcome hook exactly true type safe snippet plunk canactivate gt causes intended behavior return isloggedin true causes problems return isloggedin fix problem would following diff", "d": "11/2015"}, {"body": "would nice also use hypothetical translate use observe values feel natural currently clutters template well", "d": "11/2015"}, {"body": "aside nt amusing things move onclickstyle attach things right dom jquerystyle attach things fact using selectors onclickstyle reborn etc jquerystyle reborn", "d": "11/2015"}, {"body": "love jeffbcross vsavkin proposal thanks robwormald bringing ericmartinezr site note think nt really fit outputs describe goes component pattern however describes listensubscribe something inside component part component view really output sure going find nice name naming sooo easy", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "closing vsavkin working part separate efforts", "d": "11/2015"}, {"body": "abhilashsajeev location note better use router service trigger route changes use location need interact create normalized urls outside routing guess supposed use routernavigate offtopic", "d": "11/2015"}, {"body": "running exact issue alpha navigation component outside router outlet course since want every page inject location routeparams figure nicer way around stick nav every page", "d": "11/2015"}, {"body": "merged master time ago", "d": "11/2015"}, {"body": "know issue closed currently trying use material design lite combination w angular small project mine anyone know way hook custom logic angular right new dom nodes created template elements right added dom able call dom nodes created angular hence made js effects work explained documentation mdl could custom dom renderer solution pointer implement one wire suppose take issue different angle listen dom changes note app really small performance nt issue", "d": "11/2015"}, {"body": "ok ai nt efficient thing world job bootstrap app success gt consolelog bootstrap successful var mdlupgradedom false setinterval function mdlupgradedom componenthandlerupgradedom mdlupgradedom false source", "d": "11/2015"}, {"body": "dsebastien might also try component level lifecycle hook", "d": "11/2015"}, {"body": "yep also tried custom directive feels cumbersome though probably much efficient register components need instead going though whole dom", "d": "11/2015"}, {"body": "filed make default two issues orthogonal though maybe two implementations ngzone ngzonewithshorttraces ngzonewithlongtraces", "d": "11/2015"}, {"body": "igorminar macbook pro late ghz intel core gb mhz intel hd graphics mb disk toshiba capacity gb bytes model toshiba revision serial number native command queuing yes queue depth removable media detachable drive bsd name rotational rate medium type rotational partition map type gpt guid partition table smart status verified volumes efi capacity mb bytes bsd name content efi volume uuid capacity gb bytes bsd name content applecorestorage recovery hd capacity mb bytes bsd name content appleboot volume uuid", "d": "11/2015"}, {"body": "complete since maybe earlier", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "code deleted", "d": "11/2015"}, {"body": "updated mmrath plnkr solved yet mhevery", "d": "11/2015"}, {"body": "opened new issue update valid field true form", "d": "11/2015"}, {"body": "considering breaking change documented changelog", "d": "11/2015"}, {"body": "brandonroberts code repo directory get latest version final version release tried building repo hard", "d": "11/2015"}, {"body": "get pretty recent build npm", "d": "11/2015"}, {"body": "brandonroberts nt angular router", "d": "11/2015"}, {"body": "build router angular", "d": "11/2015"}, {"body": "brandonroberts please point right package npm able find npm sorry thanks help", "d": "11/2015"}, {"body": "sorry got done", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "pkozlowskiopensource actually agree desirable feature hack indicates event meaningful component even component code run event think forcing pattern people write empty function component hack note work currently", "d": "11/2015"}, {"body": "alxhub indicates event meaningful component even component code run event would meaningful component code executed response usecase pattern would elegant solution usecases seen far involved repeated reading dom nt think want encourage note work currently saying throw personally nt mind support afraid promoting pattern involves reading dom time", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "thee differences compared latest proposal think stale closed least one issue bundling strategy beta", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "means need put variables url example position pagination opened tab search query need declare similar routes well ca nt say dry enough please reconsider priority task", "d": "11/2015"}, {"body": "conflict already optional arguments way compose url without mentioning page argument want point tab url angularjs uirouter handy syntax optional arguments aka query parameters please think router could use advantage something similar", "d": "11/2015"}, {"body": "future readers temporary hope workaround use code get set url params", "d": "11/2015"}, {"body": "sorry bumping issue found behavior alpha works fine check plnkr see prints correctly prints nothing uncomment timeout constructor work edit plnkr updated", "d": "11/2015"}, {"body": "bumping priority saw briefly debugging app wrong insertion order triggered nonidempotent expression bound making idempotent fixed issue however nt even nonidempotent expressions still render list correctly cc naomiblack coordination", "d": "11/2015"}, {"body": "two things conflated issue objects ngfor array moved corresponding mutations dom question efficiency captures issue lot better suggest continue discussion reports actual bugs ngfor implementation bertrandg repro case quite involved bertrandg simplify bit think minimal repro involves ngfor wrapping ngif ngfor syntax bug disappears btw ported skybrian demo plunker future reference", "d": "11/2015"}, {"body": "rkirov simpler demo happens ngif inside ngfor template tag syntax", "d": "11/2015"}, {"body": "closing obsolete mhevery implemented custom public api tracking solution", "d": "11/2015"}, {"body": "might nice work null currently even null separate checks cause exceptions require side note might nice well would consistent languages ie c", "d": "11/2015"}, {"body": "still problem us new array created slice giving us error looks like sublist dart always creates new list", "d": "11/2015"}, {"body": "closing since reworking docs startup sequence change errors stem including dts file gotten tsd step well nt see explicit tsd step quickstart page surprising following page step step still nt seem working", "d": "11/2015"}, {"body": "cjolif typings held need tsd", "d": "11/2015"}, {"body": "issue closed though", "d": "11/2015"}, {"body": "mhevery lot time commits since opened issue could provide current status think ngformmodel related model useful", "d": "11/2015"}, {"body": "relate janneromell would liked approach better define whether predefined role activate component redirect replicating nt even hard ca nt really hook prevent route change far know subscribe route change ca nt prevent correct wrong handle since uh canactivate even problem ca nt", "d": "11/2015"}, {"body": "looks like good one first contribution wink still planning add take", "d": "11/2015"}, {"body": "curious whether dsl truly necessary routerlink directive could permissive inputs ie string wrap array continue seems make simplest case much simpler without much extra effort routerlink index shorthand routerlink index template semantics would take care use case motivated ticket use cases think dsl would best solution", "d": "11/2015"}, {"body": "must say ewinslow big fan introducing custom dsl opinion cost need learn additional code etc nt pay benefits nicer syntax", "d": "11/2015"}, {"body": "first nt nicer syntax shorter links addressing real usability problem majority early users encountered typically inventing dsls funsies seems appropriate approach nt think dsl optional honestly syntax sugar dsl agree wrap single string array simple case one issue dsl sugar tries fix newcomers find surprising nt work quote suppose also handle fiddle quotesbraces soon add params ideally uniform system short simple case nt require remember change quotes addremove dsl accomplishes yes avoid dsl understand angular semantics users nt going boat dsl also helps avoid lexical illusions difficult distinguish editorscolor schemes make matching braces within html attribute easy", "d": "11/2015"}, {"body": "jeffbcross ok think answer question would use something like root component tree override http wrapper use case mentioned thus covered wrapper approach", "d": "11/2015"}, {"body": "mkretz yep totally fine override binding like universal stuff like logging though backendspecific logic like redirecting login page auth errors probably better create backendspecific service inject service every place want communicate backend approach helps simplify backendspecific logic instead conditional requestbased logic single global interceptor also reducing side effects thirdparty components application make requests injected still lot work document stuff", "d": "11/2015"}, {"body": "really frustrating bug simple warning console job temporarily zonejs missing application able detect data change automatically something like", "d": "11/2015"}, {"body": "local variable assignment could also useful combination firebase implemented lva works plunk nt play nicely directive understand nt pass block executes nt know view cleared directive recreates question could done without wrapping parent container viz refactor data data data data another point use together element evaluates expression view creation real example would send another network request custom works like", "d": "11/2015"}, {"body": "sure angular right place solve nt module system responsible", "d": "11/2015"}, {"body": "ewinslow probably use another module loader happens", "d": "11/2015"}, {"body": "nt understand question", "d": "11/2015"}, {"body": "wondering systemjs responsible since everyone uses guess happen loaders", "d": "11/2015"}, {"body": "done beta hard imagine codebase using", "d": "11/2015"}, {"body": "right ordering array hand example export default class bookrating books array constructor thisbooks add title comment var newbook new book titlevalue commentvalue thisbookspush newbook reorderbooks book book thisbookssort b gt brating arating event triggered value change works happy full example", "d": "11/2015"}, {"body": "seems sake consistency principle least surprise default position would support bubbling custom event make behavior consistent native dom events seeing drawbacks example name collision problem mentioned bduffany occurs opt using custom event bubbling first place using syntax solved sending reference originating element along event thirdparty components namespace events attributes anyway eg mhevery say event bubbling makes sense input events sure agree leaving aside want create custom input event", "d": "11/2015"}, {"body": "allowing custom events bubble something may consider post beta", "d": "11/2015"}, {"body": "mhelvens principle least surprise comment able bubble custom events surprised building first angular prototype working deep component hierarchies able fire events let whoever cares handle fairly big constraint alexpods example passthrough helpful smaller hierarchies imagine would get tedious restrictive something deeper complicated nt know whether default behavior least option", "d": "11/2015"}, {"body": "whenever mutate component change value one properties angular change detection able detect changes component tree want learn changedetection post victor savkin sure sideeffect happens jit", "d": "11/2015"}, {"body": "supporting mistake often case nt care order need indexes object direct access display value view mode show options select", "d": "11/2015"}, {"body": "problem occurs", "d": "11/2015"}, {"body": "handled using format code comparisons", "d": "11/2015"}, {"body": "mhevery please tell method enabling dynamic mode current version angular", "d": "11/2015"}, {"body": "vsavkin answer wardbell documentation", "d": "11/2015"}, {"body": "building app works fine laptop chrome works fine ios safari crashes ios chrome template content generated stops way seeing console output ioschrome testing help determine issue like log documentbody instead console understanding issue correctly way tried windowonerror dice", "d": "11/2015"}, {"body": "number available shows weight distribution across different components", "d": "11/2015"}, {"body": "topic agenda ever ever implemented", "d": "11/2015"}, {"body": "think issue still relevant leads wayward developer install dart needlessly", "d": "11/2015"}, {"body": "possible partial support least render time script time", "d": "11/2015"}, {"title": "", "body": "", "num": "1941", "d": "11/2015"}, {"title": "question implemented docs well", "body": "looking around nt find looking data contains order details well order lines one line order need find add another line field vmodel instances tried unsuccesfully using adding inside adding button pushes empty object lines array nt work make sense seeing wrong", "num": "1940", "d": "11/2015"}, {"title": "bootstrapselect directive nt react von", "body": "hey following directive bootstrapselect javascript vuedirective selectpicker twoway true deep true question vuejs ignores von custom directive change option searchagreements firing thanks advance", "num": "1939", "d": "11/2015"}, {"title": "von shorthand broken htmlminifier", "body": "use htmlminifier use htmlloader throw error change works fine think nt bug maybe document save time people hit issue ref htmlminifier ca nt work invalid partial chunks markup", "num": "1938", "d": "11/2015"}, {"title": "rebind jquery array push", "body": "use jquery multiselect vfor push new item want rebind multiselect item options use watch work help thx", "num": "1937", "d": "11/2015"}, {"title": "html attribute contenteditable bind data", "body": "test work vue support html attribute contenteditable", "num": "1936", "d": "11/2015"}, {"title": "vue go error bind model vmodel obj prefixisuffix", "body": "vue go error bind model ok html console print vue", "num": "1935", "d": "11/2015"}, {"title": "\u5173\u4e8e \u7ed1\u5b9a\u5185\u8054\u6837\u5f0f", "body": "\u6211\u5728\u4f7f\u7528\u4e2d\u6709\u9700\u8981\u7528\u5230\u4ee5\u4e0b\u7684\u4e00\u79cd\u7ed1\u5b9a\u6a21\u677f\u7528\u6cd5 \u7136\u4f1adebug \u7cfb\u7edf\u63d0\u793a \u6211\u6839\u636e\u63d0\u793a\u4fee\u6539\u6210\u4ee5\u4e0b \u53ef\u6211\u5728\u5b98\u7f51\u7684api\u79cd\u770b\u5230\u6709\u8bf4 \u6211\u60f3\u77e5\u9053\u540e\u9762\u7684 \u5c5e\u6027\u547d\u540d\u662f\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528 \u8fd8\u6709\u5c31\u662f\u4e00\u5f00\u59cb\u6211\u662f\u8fd9\u6837\u7528\u7684 vue warn lineargradient \u8fd9\u79cd\u8c8c\u4f3c\u7684\u5c5e\u6027", "num": "1931", "d": "11/2015"}, {"title": "vfor velse work together", "body": "using nt seem work sibling element also using sure using wrong nt use unintended result workaround posted stackoverflow question linked see following stackoverflow jsfiddle html heading testname data available table javascript new vue el table actual output expected output", "num": "1930", "d": "11/2015"}, {"title": "character escaping expressions", "body": "previous vue versions would send string back trans filter seems escaping backslash longer works returns", "num": "1929", "d": "11/2015"}, {"title": "vue js work internet explorer", "body": "declaring library header browser recognize script tried declare end body work either", "num": "1928", "d": "11/2015"}, {"title": "suggestion expose vuedirectives production", "body": "relation authoring plugin found useful find removed production would possible keep production builds maybe naming convention vmodels internal object", "num": "1927", "d": "11/2015"}, {"title": "vue throws error binding path null", "body": "dynamic component activated user clicks reset button button set currentform reset reset password component template display error message data ajax call ajax call inside activate hook surprise activate hook invoked compiled hook also vue throws uncaught typeerror read property alert undefined data ready vue throws error data null also nt activate hook invoke compiled hook thought hook incoming component perform asynchronous operation swapped thanks advance parent component template components reset function resolve require formsuserpasswordreset resolve html component currentform keepalive javascript child component activate function done var self restapigetmessage done data gt selfvalidcode datastatus ok self set datamessages done fail gt html alertalertsuccess vif validcode vtext almost", "num": "1926", "d": "11/2015"}, {"title": "convert undefined data object empty string nt throw error", "body": "template like html objloadfromserveruser write property sometimes server return different structure example user nt permission think nt throw error turn empty string good", "num": "1925", "d": "11/2015"}, {"title": "markdown editor inline inside textarea", "body": "similar screenshot taken stackeditio would like render markdown type something would able achieve something able implement", "num": "1924", "d": "11/2015"}, {"title": "orderby failed item array nt key", "body": "maybe worked close issue btw value name vusjs internel name example designed behavior reproduce delete line js orderby function normally", "num": "1923", "d": "11/2015"}, {"title": "directive paramwatchers oldval provided actually value change new value", "body": "setup paramwatcher watch dynamic parameter passed directive param called options make change options parent vm print oldval newval param watcher function give value", "num": "1922", "d": "11/2015"}, {"title": "android browser issue", "body": "android default browser page vuejs documentation saw please fix render issue something like vuejs keep good work", "num": "1921", "d": "11/2015"}, {"title": "version number v prefix", "body": "versions gittagged prefix opposed former also intentional accidental intentional reasoning behind sudden change stay", "num": "1920", "d": "11/2015"}, {"title": "vue crashes debug mode path nt exist vif directive", "body": "seems vue throws error stops execution path exist vif directive none debug mode simply warns user foo", "num": "1919", "d": "11/2015"}, {"title": "problem use input type date", "body": "selecting date value nan", "num": "1918", "d": "11/2015"}, {"title": "problem single file components", "body": "tl dr see last sentence started using vue back version built test application back nt use single file components script sections html files logic okish build app like problem got complex could nt always remember code wanted change frankly nt need remember separate concerns correctly separating vue viewmodel code files putting file appjs imported single files using gulp worked great view html css still according html file knew find code wanted needed change look html file used viewmodel wanted try simple test application using guide build single file components using webpack vueloader seemed impractical use still nt fully know going might documentation describes process rather vaguely basically looking easy fast efficient nice way separating concerns whilst able locate viewmodels views fastly inside project", "num": "1917", "d": "11/2015"}, {"title": "crashes chrome working explorer", "body": "hello backend guy must handle situation dashboard listen two events pusher trigger two integer data vue js trigger chrome crashes achieves count nearly secs internet explorer still working like charm opening issue stackoverflow think might structural problem could understand", "num": "1916", "d": "11/2015"}, {"title": "add support von resize event", "body": "would nice built way handle resizing ex", "num": "1915", "d": "11/2015"}, {"title": "get initial value cancelling", "body": "hello possible get initial value variable user press cancel action example initial value hello start editing hello word saving call cancel method retrieve initial value case hello thanks help", "num": "1914", "d": "11/2015"}, {"title": "trigger triggerel", "body": "trigger trigger event component triigerel trigger original event element like", "num": "1913", "d": "11/2015"}, {"title": "component slot rendering", "body": "consider following scenario thirdcomponent registered locally parentcomponent renders expecting also tag consumed replaced", "num": "1912", "d": "11/2015"}, {"title": "\u591a\u91cd\u5faa\u73af\u6267\u884c\u65b9\u6cd5\u5bfc\u81f4\u65e0\u9650\u5faa\u73af\u95ee\u9898", "body": "vueconfig debug true var mess text hello vuejs var app new vue el app data message mess items child child methods outer function consolelog thisouterindex consolelog thisouterindex \u4ee3\u7801\u5982\u4e0a \u9884\u8ba1\u662f\u6253\u7b97\u5728\u5916\u5c42\u5faa\u73af\u7684\u65f6\u5019\u6267\u884couter\u65b9\u6cd5 \u5b9e\u73b0\u53d8\u91cf\u81ea\u589e \u63d0\u4f9b\u7ed9\u5185\u5c42\u5faa\u73af\u4f7f\u7528 \u4f46\u662f\u5728\u8c03\u7528\u7684\u65f6\u5019 \u76f4\u63a5\u63d0\u793a\u65e0\u9650\u5faa\u73af\u4e86 \u5982\u679c\u4e0d\u6267\u884c\u81ea\u589e \u8fd9\u4e2abug\u4e0d\u5b58\u5728 \u800c\u662f\u80fd\u6b63\u5e38\u8f93\u51fa\u4e24\u6b21", "num": "1910", "d": "11/2015"}, {"title": "vue touchmove event triggered ios", "body": "code thank work", "num": "1909", "d": "11/2015"}, {"title": "use vmodel features child component", "body": "feture used custom style input checkbox component use checkbox elements \u7537 realize kind usage", "num": "1908", "d": "11/2015"}, {"title": "question eventtargetvm", "body": "found latest version another issue saw longer necessary vfor longer creates anonymous child instances best way change property item created old way need like think like lt li vfor li list click handler index amp gt xxx lt li gt handler funcion index thislist index prop false convenient method", "num": "1852", "d": "11/2015"}, {"title": "manipulate html attribute without value like readonly", "body": "", "num": "1851", "d": "11/2015"}, {"title": "refsitems returns list undefined using vfor vif", "body": "", "num": "1850", "d": "11/2015"}, {"title": "issue vueutilextend removing data binding object properties", "body": "hi situation following object data navigation step prev current next using maintains data binding thus say also update object pushed trying avoid anyone advise something wrong actual bug utilexport played around fiddle forked new version could replicate issue right option seems properties", "num": "1849", "d": "11/2015"}, {"title": "mixing vue custom js logic complex app", "body": "run problem trying implement architecture application state driver parent nested child switched evaluating react vue flexible still quite understand particular architecture needs implemented case posted question details layout may case mvvm necessarily address issue also finding hard combine vue app custom js controller logic baked issue wise suggestion able provide component references components hierarchically related maybe suggestion address similar architectural design case apps use pure top design data gets filtered flows btw thanks framework overall love much react places apply per design", "num": "1848", "d": "11/2015"}, {"title": "computed properties arrays duplicating safari bug", "body": "fiddle run safari version seeing two firstname foo expecting one chrome seeing correct behavior", "num": "1847", "d": "11/2015"}, {"title": "update multi data", "body": "first thanks vue greate solution vue instance new vue data want update b c", "num": "1846", "d": "11/2015"}, {"title": "prefixed", "body": "name directive prefixed thanks", "num": "1845", "d": "11/2015"}, {"title": "vfor vrepeat flask conflicts", "body": "totime", "num": "1844", "d": "11/2015"}, {"title": "ca nt update reference", "body": "like change value view update demo would like use nested list remember work", "num": "1843", "d": "11/2015"}, {"title": "suggestion last even odd etc vfor special properties", "body": "would relatively inexpensive add special properties loops example angular docs currently writing breadcrumb component property like would simplify interested hear thoughts", "num": "1842", "d": "11/2015"}, {"title": "suggestion vglue vfor element joins", "body": "lists rendered without space elements example javascript crumb renders html crumb due known issue bootstrap breadcrumb separator spacing display incorrectly note spacing left separator smaller right work around writing breadcrumb component run loop wrapper append containing blank space element like javascript crumb renders html crumb crumb crumb corrects separator spacing problem avoid workaround wondering interest idea directive loops way pass expressionvalue loop used glue joins item loop together example problem could negated simply passing like javascript crumb would render note spaces tags html crumb crumb crumb imagine creative applications feature eg dividers panels etc interested hear thoughts", "num": "1841", "d": "11/2015"}, {"title": "dead link guide", "body": "somehow docs link gone", "num": "1840", "d": "11/2015"}, {"title": "commentnodecontains broken", "body": "using older version getting issue undefine happening comment node contents seems like shim necessary added newer versions example nonvuejs fiddle isolated issue related ie issue high profile app might budget update latest version vue time anything could done beyond upgrading even solve issue", "num": "1838", "d": "11/2015"}, {"title": "possible form input checkbox binding bug", "body": "sure bug someone posted forums something like checkboxhandler method reporting incorrect value firefoxchrome safari reports correct value tested os x see action", "num": "1837", "d": "11/2015"}, {"title": "ready event vfor elements", "body": "sure workaround already exists add list text boxes want focus recently added box however nt ready event repeated elements", "num": "1836", "d": "11/2015"}, {"title": "vue\u53ef\u4ee5\u5bf9 \u6a21\u578b\u7ed1\u5b9a\u4e48", "body": "", "num": "1835", "d": "11/2015"}, {"title": "thoughts property defaults", "body": "consider component caled box following property intension component designer anything nt meaningful input type text vue seems defaults assigned property omitted consider following example using box component html box type box text type first case boxtype defined works well good boxtype undefined whatever reason causes box component type property unset warning issued console second usage works expected property defaults text undefined property values cause defaults assigned think would make nicer development practice", "num": "1834", "d": "11/2015"}, {"title": "templates using vif directive using computed values cache false nt react predictably", "body": "issue computed properties calculated properties passed child component parent update value vm vue js developer toolbar cache false update templates consider following vue component select input parent form component requirement conditionally display element field isdirty changed loaded value issue selecting new value select options computed property change vuejs developer tool bar putting vm console templates react", "num": "1833", "d": "11/2015"}, {"title": "place origin code nt understand", "body": "nt understand need analyze replace", "num": "1831", "d": "11/2015"}, {"title": "help needed custom event listener never called", "body": "want dispatch custom event child deal parent says use listen custom event added method parent component listen custome event create child component seat child component dispatched custome event executed never get called", "num": "1830", "d": "11/2015"}, {"title": "ability disablenot trigger watch handler data", "body": "application mutating object state changes occurring open instances application happening web sockets etc etc handler data structure like triggering would unnecessarily save contents array back database already know current state application way mutate array without triggering handler seems trying handler making operation nt work", "num": "1829", "d": "11/2015"}, {"title": "remove item multidimensional array based index", "body": "process upgrading project vue array objects following format prior remove object would use delete object longer works unclear replacement also tried etc also deprecated favor figure add new object frustrating help would appreciated", "num": "1828", "d": "11/2015"}, {"title": "vfor\u5728ios\u4e0b\u7684\u6392\u5e8f\u95ee\u9898", "body": "\u6d4f\u89c8\u5668 safari \u95ee\u9898", "num": "1827", "d": "11/2015"}, {"title": "class item hover work use vfor", "body": "vue test item hover color red", "num": "1824", "d": "11/2015"}, {"title": "modelbinding select dropdown syncs disabled selected value", "body": "current model binding obtain value disabled selected item commonly used default load state akin placeholder input fields example return type change querying unless selection changed would inline expectations get values disabled items even selected", "num": "1823", "d": "11/2015"}, {"title": "ca nt listen events", "body": "hi create component ca nt listen events root element outside component unless set replace option false idea reproduce", "num": "1822", "d": "11/2015"}, {"title": "props components ajax data", "body": "troubles supplying component ajaxloaded data data loop html", "num": "1821", "d": "11/2015"}, {"title": "dynamic execution form reset control twoway binding failure", "body": "online demo wins thousand words", "num": "1820", "d": "11/2015"}, {"title": "adding silent option vm set", "body": "hi thank awesome library nt really want add feature maybe workaround solve problem trying different way figure way without using similar feature backbonejs silent option example show thinking silent option see updating content code mirror plugin textarea got updated expected updating textarea content code mirror use vm watch feature update value editor time model updated try uncomment vm watch section reload jsfiddle value updated textarea updated editor cursor always set back position pretty annoying tried different ways way found use somthing like think", "num": "1817", "d": "11/2015"}, {"title": "uikit html editor displaying text data retrieved dynamically using vueresource", "body": "using trying use uikit htmleditor displays data retrived dynamically html code hoteldescription description vuejs export default data return isedit false description hardcoded value hotel route data return hotel thisdetails toparamsslug methods details slug slug success function hotel thishotel hotel error function error alert error woring", "num": "1815", "d": "11/2015"}, {"title": "capture cmd enter longer works", "body": "upgraded vuejs longer capture cmd enter keyup event way capture cmd enter mac control enter pc basically want submit form cmdcontrol enter pressed", "num": "1813", "d": "11/2015"}, {"title": "components", "body": "hi thanks great framework example components tabs tab way tab declare placed tabs component tabs accepts tab components", "num": "1812", "d": "11/2015"}, {"title": "vueassign", "body": "first thanks vue using every new project works great mine feature request add arrayprototype extend addition set working button sets every button indefinite number optional parameters icon text additional classes etc say want set icon button know work insert icon remove everything else including text nt event want replace entire object runtime nt know today underscore help solved way works long error prone hard remember come feature request code could become like set nt replace entire object ad dmissing properties begin watching think could something everyone appreciate thanks vue keep good work", "num": "1811", "d": "11/2015"}, {"title": "problems vmodel components data", "body": "effect trigger specified method nt update components data updating something though nt reflect components data changes", "num": "1810", "d": "11/2015"}, {"title": "partials transitions", "body": "ca nt find information dynamic partials transitions saw comments suggest possible planned perhaps discarded anyway would useful transition transitionmode features components", "num": "1808", "d": "11/2015"}, {"title": "proposal list diff algorithm", "body": "according directive diff algorithm vue diffs two arrays like causes seven manipulations dom move function called seven times actual minimal amount two remove first place insert last vue list diff algorithm actually good cases like inserting new items moving items back frontmiddle cases simply moving item front backmiddle cause lot manipulations nt mean make minimal manipulations like levenshtein distance based algorithm moving items front backmiddle quite common think worth optimalize needs one check", "num": "1807", "d": "11/2015"}, {"title": "double class getting binded", "body": "class set dom element initied vue class set component root dom element final result double class see results check console dom see compclass compclass instead one big deal nt seem expected behaviour", "num": "1806", "d": "11/2015"}, {"title": "watchhandler getting exactly", "body": "array objects basically todomvc watch handler array exactly nt able compare old version array new stop working", "num": "1805", "d": "11/2015"}, {"title": "slots working", "body": "named slots slots general work example renders without text", "num": "1804", "d": "11/2015"}, {"title": "\u53ef\u4ee5\u4e00\u6bb5\u65f6\u95f4\u66f4\u65b0\u4e00\u6b21\u4e48", "body": "\u53ef\u4ee5\u4e00\u6bb5\u65f6\u95f4\u66f4\u65b0\u4e00\u6b21\u4e48 \u73b0\u5728\u7684\u66f4\u65b0\u9891\u7387\u592a\u9891\u7e41\u4e86 \u628a\u5927\u591aissue\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u6bd4\u5982\u5468\u53d1\u5e03 \u6708\u53d1\u5e03 \u4e00\u6b21\u6027\u5e72\u6389\u6bd4\u8f83\u591a\u7684\u95ee\u9898\u4e0d\u662f\u66f4\u597d", "num": "1803", "d": "11/2015"}, {"title": "vueconfig function", "body": "html message vueconfig delimiters wrong read property get undefined vueconfig delimiters wrong vueconfig function var dm new vue el demo data message hello vuejs vueconfig function wrong look could tell setting delimiters", "num": "1802", "d": "11/2015"}, {"title": "converted single quotes issue string", "body": "application using laravel single quotes converted seems cause issue js example issue", "num": "1801", "d": "11/2015"}, {"title": "preserve whitespace evaluating data", "body": "usecase show indented code whitespace pre preserving whitespace rendered document critical vue seems trim whitespace evaluating data expressions embedded html tags wonder necessary workaround available replacing spaces beginning nbsp ugly workaround like get rid must say pretty happy vue far good work", "num": "1800", "d": "11/2015"}, {"title": "vue element masonry plugin", "body": "hey try make grid masonry plguin works perfect load data json object posts seems like news posts nt get plugin template require poststemplatehtml get html posts load begin php code get plugin others loaded post data doesnt", "num": "1799", "d": "11/2015"}, {"title": "prop validation mix array object hash syntax", "body": "searching could nt find already suggested discounted moment specify component props simple array strings complex object hash think might useful could mix two often find props array strings later stage need add prop validation meaning concert array strings hash", "num": "1798", "d": "11/2015"}, {"title": "vmodel inside vfor nt set value property name dynamic", "body": "explained forum post demonstrated fiddle something like occasionally get", "num": "1797", "d": "11/2015"}, {"title": "use multibyte character set data binding", "body": "html \u6f22\u5b57\u592a\u90ce\u541b \u6f22\u5b57\u82b1\u5b50 result chrome referenceerror \u6f22\u5b57 defined referenceerror \u6f22\u5b57 defined", "num": "1796", "d": "11/2015"}, {"title": "\u9047\u5230\u4e00\u4e2avmodel\u7684bug", "body": "", "num": "1795", "d": "11/2015"}, {"title": "vue complains vref used actually component", "body": "nt get warning markup", "num": "1793", "d": "11/2015"}, {"title": "vmodel textareas inside vfor causes textareas lose focus change", "body": "minimal working example problem whenever type anything inside textareas focus immediately lost looks like textareas demolished recreated change also found old closed bug looks related", "num": "1791", "d": "11/2015"}, {"title": "vmodel", "body": "\u6700\u540e\u53d1\u73b0\u4f7f\u7528debounce \u671f\u5f85\u5728vmodel\u5185\u90e8\u89e3\u51b3", "num": "1790", "d": "11/2015"}, {"title": "props routerview broken", "body": "passing prop routerview like console showing link gives seems indicate possible unless understanding", "num": "1789", "d": "11/2015"}, {"title": "array remove callback", "body": "see documentation remove take callback second parameter called element removed dom transitions occurred understanding correctly", "num": "1788", "d": "11/2015"}, {"title": "using standalone service class instance vue instance", "body": "used encapsulating functionality servicesmodels serverside code well angular servicesmodels datastate methods vue data methods completely separated state functions seems place set instance modelservice closest thing think use mixins go flat list data methods extremely inelegant inevitably lead conflicts would little better able nested methods option think would set directly vm data wo nt reactive kind defeats purpose anything like possible another way accomplish", "num": "1787", "d": "11/2015"}, {"title": "debounce issue inline statement handler", "body": "works test inline parameter display event variable null remove debounce filter function expected", "num": "1786", "d": "11/2015"}, {"title": "attribute working", "body": "need use component row table code tr elements getting rendered stripped dom leaving tds nt mind mustaches bladespecific vuejs", "num": "1785", "d": "11/2015"}, {"title": "async components update fragments resolved", "body": "test case description test case clicking list item supposed delete item model expected results item clicked corresponding items deleted section section b actual results items deleted section whose template loaded asynchronously adding items template loaded exhibit problem document fragment properly created root problem asynchronous components used becomes empty text element component loaded newly created elements created correct positions fragment cache updated therefore deleting component using data fragment cache fails", "num": "1784", "d": "11/2015"}, {"title": "vmodel behavior persistent", "body": "see steps senario wait fake ajax click select click unselect everything looks fine senario run refresh page press button important wait fake ajax click first select click select click unselect seems outof control selectall unselectall broken", "num": "1783", "d": "11/2015"}, {"title": "need vm dataobj set key value obj get", "body": "older version vue supports style makes dynamic add property easy also get required sometimes need vm object become plain json object set existing vm key whole vm data passed sample", "num": "1782", "d": "11/2015"}, {"title": "afterenter hook dose wait transition finish", "body": "", "num": "1781", "d": "11/2015"}, {"title": "problem table components", "body": "write component called vuetable use component like rendered dom become like rendered tag", "num": "1780", "d": "11/2015"}, {"title": "vref inside component appears multiple times", "body": "see following warning multiple instances component page see repro warning started appearing issues beyond seeing warning", "num": "1779", "d": "11/2015"}, {"title": "incorrect warning twoway bind vfor alias filters working", "body": "vue new warning issued attempting write vfor alias using filter warning work correctly warning goes even follow advice given bind object parameters confusingly alias appears anywhere expression even written warning reading value vfor alias warning binding object property example", "num": "1778", "d": "11/2015"}, {"title": "add vmodel options parameter back select form items", "body": "existing project using vue recently migrated code vue project went startup time change cause dramatic increase time comes additional fragments directives created removal options parameter application question contains large list items associated select dropdown dropdown choices identical list item items often updated based another area application attempted create new directive created option items way old item ran problem unable signal vmodel needed update item selected access value watching please add vmodel select options parameter back large performance gain working large number items vue method vue method", "num": "1777", "d": "11/2015"}, {"title": "", "body": "", "num": "1776", "d": "11/2015"}, {"title": "", "body": "", "num": "1775", "d": "11/2015"}, {"title": "read property queryselectorall null", "body": "error line", "num": "1774", "d": "11/2015"}, {"title": "object\u6570\u636e\u7c7b\u578b\u7684\u5220\u9664 \u65e0\u6cd5\u66f4\u65b0\u89c6\u56fe", "body": "demo items type num type num \u65e0\u8bba\u662f delete objname \u8fd8\u662fvuedelete obj name", "num": "1773", "d": "11/2015"}, {"title": "parent component name", "body": "ability check parent component name child like vuecomponent hilist template tmlist ready function nice check parent component like parentcomponent hidata vuecomponent hidata template tmdata data function return lists null vuecomponent himedia template tmmedia data function return lists null", "num": "1772", "d": "11/2015"}, {"title": "vtransition\u7528\u5728routerview\u4e0a\u7684\u95ee\u9898", "body": "testtransition webkittransition ease transition ease testenter testleave opacity webkittransform transform vue warn failed resolve directive transition \u8def\u7531\u90fd\u53ef\u4ee5\u4f7f\u7528", "num": "1771", "d": "11/2015"}, {"title": "", "body": "\u6bd4\u5982\u4e00\u4e2a\u7ec4\u4ef6\u7684data\u5305\u62ec\u4e0b\u9762\u8fd9\u4e9b\u6570\u636e \u53e6\u5916\u4e00\u4e2a\u7ec4\u4ef6\u5185 \u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u7684\u6570\u636e\u53ef\u4ee5\u5171\u4eab\u5417", "num": "1770", "d": "11/2015"}, {"title": "registering component nt work recursive rendering", "body": "hey faced problem day updated vue version beta release rc release code broke code takes folders tree renders manager component registers locally component using component template root folders component checks see children renders using component along children basically render nice folder tree worked perfectly beta releases upgraded rc releases got weird error true current release aswell root folders rendered properly tries render children folder throws error says component nt registered solution found issue register component globally method weird sorry took thing long report indeed bug intentional", "num": "1769", "d": "11/2015"}, {"title": "suggestion firing event among siblings globally", "body": "hey currently method fire event vm method fire event parent chain method fire event children chain many times find manager like instance multiple children one children changes notify siblings imagine component manager children changes would like let know maybe something currently tricky way indeed get message something happened sibling wondering maybe create native method since seems common task wrapper method also currently ca nt fire event globally vue instance alive listen want need trigger events method maybe add method handle aswell honestly nt occurrence seems like something", "num": "1768", "d": "11/2015"}, {"title": "\u96c6\u4e2d\u62a5\u544a\u51e0\u4e2a\u95ee\u9898", "body": "vue warn von click oncolumnclick column expects function value got undefined boolean props working pager false \u6216\u8005 pagerfalse \u6216\u8005 duration", "num": "1767", "d": "11/2015"}, {"title": "programatic registration local dependencies", "body": "way register local dependencies one lifecycle hooks eg would let pass dependencies via props use child parent child vue custom component passed export default props customcomponentdependency function created something register using passed prop", "num": "1766", "d": "11/2015"}, {"title": "watch nt detect change loop except loop ends", "body": "js var vm new vue el test data methods vm watch function newval oldval consoledir newval var len lt len vma case changes nothing happened end repro link", "num": "1764", "d": "11/2015"}, {"title": "nodemodule main script", "body": "install vue npm use webpack pack find webpack compile vue source use sourcemap source code vue also show source tag chrome dev tool makes little bit confusing packagejson think main script npmpublish version", "num": "1763", "d": "11/2015"}, {"title": "directives", "body": "wrote directive wraping timeago plugin directive using like work without settimeout function problem", "num": "1732", "d": "11/2015"}, {"title": "vbind src work", "body": "use vbind src like getting error using vue", "num": "1731", "d": "11/2015"}, {"title": "use string array vfor input use vmodel auto trigger blue", "body": "component code like beginning list length click button add duplex value list shows currectly click text input input value trigger blur every input change code works well", "num": "1730", "d": "11/2015"}, {"title": "", "body": "", "num": "1729", "d": "11/2015"}, {"title": "", "body": "chrome warn vue warn failed resolve directive click", "num": "1728", "d": "11/2015"}, {"title": "boolean props shorthand stopped working", "body": "boolean prop component simply including like resulted true longer works get error property value false explicitly pass order work went changelog nt noticed anything removed bug", "num": "1727", "d": "11/2015"}, {"title": "programmatic slot access api", "body": "proper way component access transcluded children allow change component behavior depending transcluded content presence use child component data properties method parent", "num": "1726", "d": "11/2015"}, {"title": "nt seem work ieedge", "body": "hi guys code works chrome ff edge known issue something wrong thanks advance", "num": "1725", "d": "11/2015"}, {"title": "routerview vref", "body": "stops work properly update working properly see varning fiddle also warnings fragment instance component", "num": "1724", "d": "11/2015"}, {"title": "effect different firefox chrome", "body": "demo", "num": "1717", "d": "11/2015"}, {"title": "delete data object attribute", "body": "hello want delete object attribute vue data exmaple want delete dataattrisb see delete root attribute data", "num": "1716", "d": "11/2015"}, {"title": "new databinding syntax nt render component method results", "body": "intentional", "num": "1715", "d": "11/2015"}, {"title": "object array lost set method", "body": "hi try code vue vue ideas", "num": "1714", "d": "11/2015"}, {"title": "input type number need extra attribute number", "body": "great could write place think", "num": "1713", "d": "11/2015"}, {"title": "issue class vbind class binding", "body": "render properly", "num": "1712", "d": "11/2015"}, {"title": "removing object array nt seem work deep object", "body": "hey part application load collections server based current route cache instance data something like js data function return user null collection null access page like load collection cache behind scenes use method first time fetch folder collection store format cache folder cache object something like functionality let user delete object collection object id order find object index array scan array quick comparison attempt call method may think works nt however element nt deleted array see console item trying delete hardcoded example know sure index trying remove tried see result", "num": "1708", "d": "11/2015"}, {"title": "filterby equal instead", "body": "want filter user code make matched filter", "num": "1707", "d": "11/2015"}, {"title": "expected number got string", "body": "following causes error running vue js vuecomponent calc props additions type number required true subtractions type number required true something way passing properties bug propertytype autoconversion similar past issues topic simplified example", "num": "1704", "d": "11/2015"}, {"title": "vrepeat work work", "body": "index selected albumtitle albumcreatedat count select index title", "num": "1700", "d": "11/2015"}, {"title": "vshow transition", "body": "vuejs version subtitle like string css ulbtoggletransition transition transform scale ulbtoggleenter ulbtoggleleave transform scale first dom html like make ul empty like ok", "num": "1698", "d": "11/2015"}, {"title": "feature vel list combined vfor", "body": "using vref combined vfor give array refs would nice feature vel", "num": "1697", "d": "11/2015"}, {"title": "", "body": "", "num": "1696", "d": "11/2015"}, {"title": "vref dynamic component keepalive", "body": "switch dynamic component like vref nt changed issue feature using vue", "num": "1695", "d": "11/2015"}, {"title": "importing plug results error", "body": "sure issue vuevalidator vue", "num": "1693", "d": "11/2015"}, {"title": "questionsuggestion using vpre slot", "body": "created hightlightedcode component find definition problem code inside slot contains breaks immediatly thought vpre slot nt work sure issue request simple question actually sorry", "num": "1686", "d": "11/2015"}, {"title": "unexpected token using new vue files", "body": "hello currently trying use singlefile vue component one views get errors browserify gets work blank right html home profiles export default name profilesview components gives following error browserify failed unexpected token parseerror unexpected token looking hacker news example think everything spelt correctly ca nt see throwing error ideas", "num": "1685", "d": "11/2015"}, {"title": "attribute bindings working", "body": "issue attribute bindings working run webpack dev server work fine deploy static resources attribute bindings nt working class bindings inputs buttons attribute bindings toggle disabled account locked well locked checkbox default unchecked via attr binding attr bindings vs without attr bindings except lock checkbox", "num": "1684", "d": "11/2015"}, {"title": "array mutation methods misbehave certain circumstances", "body": "demo explanation inside component twoway synced array prop assigned method assignment gets ignored foreseeing question mutate assign use cases example edit actually use case solved without mutation using instead credits kerruba raising issue chat", "num": "1683", "d": "11/2015"}, {"title": "switching components layout changing cause component rendered twice", "body": "example components share master page component nt show left aside masterpage however switch rendered without left aside first time cause visiting throws error added breakpoint route changes click resume rerendered left aside time js mpleft float left width height background red mpmain float left width foo height background green bar height background blue vuecomponent masterpage template left aside props params childview watch params function val log consolelog leftaside elsleftaside debugger vuecomponent foo template foo vuecomponent bar template bar new vue el html data view name masterpage params showleft false childview foo ready function var settimeout function meview name masterpage params showleft true childview bar", "num": "1680", "d": "11/2015"}, {"title": "get real dom event", "body": "click child element event dom etarget child get real dom event binded child \u83dc\u5355\u4e00 methods eventhandler function e click get consolelog etarget", "num": "1679", "d": "11/2015"}, {"title": "error raised using jquery", "body": "demo use vue component vue create document fragment cache dom jquery find delegate nodes eventtarget check node find element jquery nodetype check added fix applied branch", "num": "1678", "d": "11/2015"}, {"title": "using activate hook promise", "body": "tried returning promise object activate hook assigning promise object activate hook directly neither worked", "num": "1677", "d": "11/2015"}, {"title": "\u52a8\u6001\u6dfb\u52a0\u5bf9\u8c61\u7684\u5c5e\u6027\u4e0d\u80fd\u88abbind\u548cwatch\u7684\u95ee\u9898", "body": "", "num": "1676", "d": "11/2015"}, {"title": "get text value use options select", "body": "none options value text test value text aaaa get text values identical", "num": "1675", "d": "11/2015"}, {"title": "dynamic template", "body": "vuejs dynamic", "num": "1674", "d": "11/2015"}, {"title": "failed elform access vif used custom directive", "body": "see following url", "num": "1673", "d": "11/2015"}, {"title": "expected array got string", "body": "add array props try still got error expected array got string component", "num": "1672", "d": "11/2015"}, {"title": "refs reactives", "body": "hi possible bind nested component properties reactives think bindings set nested components attached fail undefined fiddle illustrate think related computed properties depending nested properties updated nt know", "num": "1671", "d": "11/2015"}, {"title": "vmodel directive", "body": "vmodel directive used textarea input elements would nice use contenteditable best regards benjamin", "num": "1670", "d": "11/2015"}, {"title": "better warning", "body": "since commit vue always complain fragment contain multiple attributes however think following props components warned slot component props event bindings consider following example passed warned complexed case object may contain props attributes element dynamic", "num": "1669", "d": "11/2015"}, {"title": "syntax number props", "body": "vue prop type need order read properly", "num": "1668", "d": "11/2015"}, {"title": "rendering custom component list", "body": "trying render list posts contained async loaded component list something like however access current item post neither indirectly directly using post anymore trying upgrade version using vrepeat worked without problem upgraded doesnt jsfiddle demonstrates stripped version problem", "num": "1667", "d": "11/2015"}, {"title": "using variables class attribute seems cancel class binding", "body": "updating new vue things like new vue someclass never shows something wrong bug thx", "num": "1666", "d": "11/2015"}, {"title": "", "body": "\u4e2d\u6587\u7248\u7684todos vrepeat vfor\u4e86\u561b \u53cd\u6b63\u6211\u8bd5\u4e86 \u63a7\u5236\u53f0\u8bf4vrepeat\u4e0d\u5b58\u5728\u7684\u6307\u4ee4 for\u53ef\u4ee5", "num": "1665", "d": "11/2015"}, {"title": "select\u8868\u5355\u65e0\u6cd5\u89e6\u53d1\u8ba1\u7b97\u5c5e\u6027", "body": "\u7528watch\u53ef\u4ee5\u76d1\u542c\u5230 select \u53d8\u5316 \u7b97bug\u5417", "num": "1664", "d": "11/2015"}, {"title": "\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u96c6\u5408\u6570\u636e\u53d8\u5316\u7684 watch", "body": "model name newvalue oldvalue", "num": "1663", "d": "11/2015"}, {"body": "\u7136\u540e\u83b7\u53d6 issue \u95ee\u95ee\u9898", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "please nt use issues questions", "d": "11/2015"}, {"body": "make sure include jquery vue vue knows needs handle jquery triggered events jquery fire native events vue detects jquery presence listen jquery events include jquery vue wo nt work", "d": "11/2015"}, {"body": "well actually including jquery vue ideas globaljquery global require jquery globalvue require vue vueuse require vueresource vuedirective selectpicker require salestooldirectivesselectpicker", "d": "11/2015"}, {"body": "tested locally seems work fine still issue please provide live reproduction", "d": "11/2015"}, {"body": "yep sorry seems using old bootstrapselect plugin", "d": "11/2015"}, {"body": "nt make html invalid looks like bug htmlminifier believe fixes related issues", "d": "11/2015"}, {"body": "posva thanks try", "d": "11/2015"}, {"body": "using webpack use instead using alone option need make work vue templates", "d": "11/2015"}, {"body": "please nt use issues questions", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "azamatsharapov binding event good way solve", "d": "11/2015"}, {"body": "use custom directive", "d": "11/2015"}, {"body": "\u8bb0\u4f4f\u7ed1\u5b9a\u91cc\u9762\u662f javascript \u5728 js \u91cc\u9762 \u5e26\u77ed\u6a2a\u7684\u5c5e\u6027\u540d\u9700\u8981\u7528\u5b57\u7b26\u4e32", "d": "11/2015"}, {"body": "vfor higher priority vshow vshow compiled inside vfor fragment velse outside fragment therefore connect use negation vshow instead fri nov pm ryan mortier notifications githubcom wrote using velse nt seem work sibling element also using vfor see following stackoverflow jsfiddle heading testname data available table new vue el table actual output image image expected output image image reply email directly view github", "d": "11/2015"}, {"body": "thanks clarifying", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "show us code please", "d": "11/2015"}, {"body": "cant use", "d": "11/2015"}, {"body": "nt know thing", "d": "11/2015"}, {"body": "added mostly potential devtools use cautious additional memory usage since adding array every single node directive seems nt need textnodes may bring usage acceptable level elaborate bit use case found", "d": "11/2015"}, {"body": "writing directive useful way check attribute bindings gives lot detail although simple attribute check would probably meet requirements done issue referenced memory usage concern probably worth enabling production builds", "d": "11/2015"}, {"body": "fired component compiled inserted purpose control timing dom manipulation hook order best practice writing expressions potential unset property conditional check", "d": "11/2015"}, {"body": "nt know easy could explain vue designed throw exception expression binding contains null object thanks", "d": "11/2015"}, {"body": "run js get error expressions vue templates", "d": "11/2015"}, {"body": "found error throw debug enabled sorry close", "d": "11/2015"}, {"body": "theres simple working example", "d": "11/2015"}, {"body": "please use issues ask questions stated contribution guidelines", "d": "11/2015"}, {"body": "ca nt ask question forum ca nt verify email address signed github email address never verified email address pulled mstnorris usersnoreplygithubcom although nt github account email address also contribution guidelines link would help thanks using similar thins renders markdown separately looking render markdown type textarea div", "d": "11/2015"}, {"body": "mstnorris likely nt public email address github account deleted account maybe try signing directly email address contribution guidelines linked right input boxes open new issue", "d": "11/2015"}, {"body": "thanks nt know missed must autopilot sign", "d": "11/2015"}, {"body": "sub element array nt traverse working intended object properties like fine access via alias", "d": "11/2015"}, {"body": "nt want orderby traverse actually general situation orderby would fail item nt sortkey think orderby could robust situation evan notifications closed reply email directly view github", "d": "11/2015"}, {"body": "would expect desired behavior items sortkey always top bottom sort result indeterministic best solution make sure data formatted consistently", "d": "11/2015"}, {"body": "clarify document eg make sure sortkey existed orderby wouldnot work properly etc", "d": "11/2015"}, {"body": "please read short newval oldval reference type values arrays objects mutated rather replaced entirely", "d": "11/2015"}, {"body": "found another issue sure whether bug click change selected button value inside array changed update method directive triggered deep true set directive", "d": "11/2015"}, {"body": "firing clicking change selected closing since original issue explained simplesmiler", "d": "11/2015"}, {"body": "really bug vue example used tag natively supported older android fixed docs repo", "d": "11/2015"}, {"body": "overlooked switched new release script nt make real difference package managers resolve github handle formats probably stick prefix", "d": "11/2015"}, {"body": "big deal noticed rawgit link nt work added prefix sticking sounds fine", "d": "11/2015"}, {"body": "small change forgot list debug mode warning generated due actual error throws error benefits get stack trace way real error occurred previously available printed stack warning imo better debugging purposes particular reason makes undesirable", "d": "11/2015"}, {"body": "well use fault tolerance throughout views eg package description packageextraimage check image directly need test extra first maybe correct approach easier extending package optional default values", "d": "11/2015"}, {"body": "rewrite shortcircuit directives oninside element", "d": "11/2015"}, {"body": "absolutely convenient able ignore hand warnings nt pretty anyway", "d": "11/2015"}, {"body": "discovered happens vif directive vshow vbind still fault tolerant", "d": "11/2015"}, {"body": "input type reference eg see data works correctly", "d": "11/2015"}, {"body": "use form", "d": "11/2015"}, {"body": "use forum questions next time example vueloader learn", "d": "11/2015"}, {"body": "woops sorry must confused tabs anyway seen example intuitive looks like lot overhead using method creating new component importing registering component html", "d": "11/2015"}, {"body": "ca nt really tell wrong looking things try use plain syntax initial data declared properly point using use chrome profiling tool take memory heap snapshots see leak somewhere provide context code", "d": "11/2015"}, {"body": "hello thanks quick reply tried nothing changed could crash remains recording situation actually code snippet whole lifecycle listens pusher catches two events one counts success amp total variables counts fail amp total variables ca nt see wrong structure weird way use vuejs whole projects today without headache thanks making brilliant library helps much front end", "d": "11/2015"}, {"body": "component look like", "d": "11/2015"}, {"body": "investigating found problem occured using pusherchannel like wrong declaration inside vue component anyone define like thanks helping btw", "d": "11/2015"}, {"body": "window event listen normal elements lifecycle hooks components", "d": "11/2015"}, {"body": "save another var restore user cancels tue nov van campenhoudt notifications githubcom wrote hello possible get initial value variable user press cancel action example initial value hello start editing hello word saving call cancel method hox retrieve initial value case hello thanks help reply email directly view github", "d": "11/2015"}, {"body": "please use gitter channel forum questions", "d": "11/2015"}, {"body": "variables seem linked", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "ooo want something like find another beter way close issue", "d": "11/2015"}, {"body": "nevermind turns thirdcomponent activate hook nt call done", "d": "11/2015"}, {"body": "\u4f60\u8fd9\u4e2a\u601d\u8def\u5b8c\u5168\u4e0d\u5bf9 \u60f3\u8981\u5916\u5c42\u7684 \u7528 \u5c31\u53ef\u4ee5", "d": "11/2015"}, {"body": "error code epreventdefault function nt surprise reassign e", "d": "11/2015"}, {"body": "ok updated code another error set property touches undefined view compiled nt seem know touches data object please check console posting nonbugs still issues please use forum gitter", "d": "11/2015"}, {"body": "matmoo sorry fault still nt work well think another problem touch event", "d": "11/2015"}, {"body": "matmoo yes checked console checking code fixed soon problem still alive think nonbug", "d": "11/2015"}, {"body": "native object array also contains native objects plain objects vue observes plain objects convert plain objects setting vm eg", "d": "11/2015"}, {"body": "got thanks lot code works well mac ipad andriod phone even though psv amp felt uncertain", "d": "11/2015"}, {"body": "pass two way prop use vmodel inside component example coffee jade vue labelmdlcheckboxmdljscheckbox vbind foronceid vbind class isdisabled disabled ischecked ischecked inputmdlcheckboxinput vbind valuevalue typecheckbox vbind idonceid vmodelchecked vbind disableddisabled spanmdlcheckboxlabel slot common require mixinstogglecoffee moduleexports checked validator value typeof value boolean value instanceof array required true twoway true disabled boolean id string value required false computed ischecked typeof checked boolean checked else value checked mixins common ready componenthandlerupgradeelements el", "d": "11/2015"}, {"body": "posva see tks", "d": "11/2015"}, {"body": "hustliucn pass item directly", "d": "11/2015"}, {"body": "thx lot", "d": "11/2015"}, {"body": "bind bound value falsy attribute removed", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "jjaulimsing data nested need make deep copy one option make work data plain circular shared references prototypes functions", "d": "11/2015"}, {"body": "simplesmiler came across workaround minutes posting read jquery doc extend supports deep copy sure vueutilextend supports read documented api proceeding workaround suggested guess thanks clarifying well cause", "d": "11/2015"}, {"body": "nothing jquery extend always shallow clone", "d": "11/2015"}, {"body": "terms state management general concept let source truth reactive object shared multiple component instances start describing app state plain object example pass object prop player controller share state identity changing one component automatically sync one replace though cause component loose reference original object object also live standalone javascript module service point components nt need relationship able share object source truth", "d": "11/2015"}, {"body": "related vue using iterate array wrong usage guaranteed work consistently different javascript engines", "d": "11/2015"}, {"body": "thank using way past couple years without ill effects well except one people find issue later link much discussion", "d": "11/2015"}, {"body": "set one one please nt use issues ask questions", "d": "11/2015"}, {"body": "update one one vue batches dom updates watchers calls", "d": "11/2015"}, {"body": "directive stuckouttongue attribute reactive directives reactives", "d": "11/2015"}, {"body": "help", "d": "11/2015"}, {"body": "checkout builtin template escaping django users tags", "d": "11/2015"}, {"body": "thing wrong code", "d": "11/2015"}, {"body": "forgot", "d": "11/2015"}, {"body": "unfortunately fact relatively expensive add aliases vue properties need reactive would extra initialization memory costs would wasteful always define every repeated fragment since always used define custom methods like use like", "d": "11/2015"}, {"body": "understood cheers", "d": "11/2015"}, {"body": "regard think wont needed could replaced html crumb last", "d": "11/2015"}, {"body": "although see coming nt think edge case like justifies special directive vuejs core especially caused bug another library", "d": "11/2015"}, {"body": "vprimachenko thanks reply gotcha cheers", "d": "11/2015"}, {"body": "get dead link doc", "d": "11/2015"}, {"body": "appears loading cached version docs page sorry inconvenience", "d": "11/2015"}, {"body": "ah found fix guess apply fix manually", "d": "11/2015"}, {"body": "cool glad found", "d": "11/2015"}, {"body": "hopefully update soon", "d": "11/2015"}, {"body": "teevio reacts event one apparently may triggered different order depending browser", "d": "11/2015"}, {"body": "simplesmiler ahhhh nt thought bug", "d": "11/2015"}, {"body": "use", "d": "11/2015"}, {"body": "sorry nt clear enough understand nexttick works afaik nt tell event handler element involved eg eventtarget find input focus eventtarget set sound like reasonable feature nov evan notifications githubcom wrote closed reply email directly view github", "d": "11/2015"}, {"body": "order fixed something like otherwise might need implement list item component", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "run well feel like default used prop defined", "d": "11/2015"}, {"body": "want explicitly set value undefined", "d": "11/2015"}, {"body": "posva indeed good point however failing see api designer would make sure would give example would work rant feel like undefined type nt existed first place one js language constructs probably late get rid every time come head head undefined types javascript always bad circumstances", "d": "11/2015"}, {"body": "may component showing yet waiting async resource available although null could used may tricky users", "d": "11/2015"}, {"body": "bringing table", "d": "11/2015"}, {"body": "change result selecting different option select bound nt affect dependencies computed property", "d": "11/2015"}, {"body": "sorry tried make clear post parent form component watchers setup values change value occurs id either added unsaved object removed depending whether new value different old value accordingly unsaved object passed child form inputs cache set false correctly update vm template note vm behaves expected view falls synch", "d": "11/2015"}, {"body": "using modify object", "d": "11/2015"}, {"body": "vue global yes wonder could project work ids objects coming ajax numerical strings eg set statement like ask notice caused issue calling component yesterday change calls double quoted attributes ie single quoted ones double quoted numerical strings otherwise databinding display values failed wonder whole concept trying support native data structure numerical strings causing issues perhaps reformat data", "d": "11/2015"}, {"body": "well seems like work hard determine really wrong without reproduction please provide minimal repro help isolate problem", "d": "11/2015"}, {"body": "yeah lot mixins dependencies try strip put pastebin something thanks evan ps still lovin vue become goto tool used base last projects enjoyable least painful ones ever done", "d": "11/2015"}, {"body": "closing inactivity", "d": "11/2015"}, {"body": "optimization faster time bind arguments ps please use issues ask questions", "d": "11/2015"}, {"body": "sorry read readme carefully", "d": "11/2015"}, {"body": "html case insensitive nt use uppercase event names", "d": "11/2015"}, {"body": "thanks lot", "d": "11/2015"}, {"body": "point watcher fire data changes instead thinking stopping firing conditional check inside watcher callback", "d": "11/2015"}, {"body": "wish could cry case conditional check watcher callback since way check whether going receive deletion messages via websocket come one time every object array saved every modification array get case receive deletion message object save remaining documents db receive another deletion message different object saved previous step possible repetition depending number deleted objects results errors backend trying update data longer exists recommended vuejs pattern", "d": "11/2015"}, {"body": "nt think understand use case maybe using deep watcher persist whole wrong idea begin probably use component item array finegrained persistence", "d": "11/2015"}, {"body": "new api mentioned upgrade guide general changes", "d": "11/2015"}, {"body": "js filter", "d": "11/2015"}, {"body": "\u8c22\u8c22", "d": "11/2015"}, {"body": "enough information please provide reproduction", "d": "11/2015"}, {"body": "please use forum general queries forumvuejsorg would say expected behavior disabled still want value", "d": "11/2015"}, {"body": "hi matmoo thanks feedback reason thought unexpected submit form normally post data contain disabled selected value work around easily enough issue", "d": "11/2015"}, {"body": "wonder validator formsubmit form validate really okay", "d": "11/2015"}, {"body": "oh validation form example think nt issue please feel free close nt match initial expectations thought would bring", "d": "11/2015"}, {"body": "please post questions forums also unlikely get helpful response without showing code", "d": "11/2015"}, {"body": "question bug", "d": "11/2015"}, {"body": "provide reproduction like says issue reporting guidelines edit code least", "d": "11/2015"}, {"body": "description vague considered bug report", "d": "11/2015"}, {"body": "menu template menu item template component use like none events fired", "d": "11/2015"}, {"body": "javascript", "d": "11/2015"}, {"body": "menu item export default props icon type string default computed classes return uihasicon thisiconlength gt menu export default props icon type string default morevert position type string default bottomleft data return isopen false computed classes return uiisopen thisisopen menuclasses let classes classes mdopen thisposition true return classes methods open thisisopen true close thisisopen false component export default methods handleclick event handlemouseenter event", "d": "11/2015"}, {"body": "put together fiddle code reproduce issue", "d": "11/2015"}, {"body": "believe hit sort fragment instance caveat specifically fragment instance nonflowcontrol directives nonprop attributes transitions component element ignored root element bind please check fiddle read carefully part docs", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "see warning props initialized wrong types properly set might good idea relax prop initialized properly", "d": "11/2015"}, {"body": "restriction setting expected value works conclusion ajax calls better set restriction perhaps thanks", "d": "11/2015"}, {"body": "implemented", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "sorry operation advocated operational data instead operating dom", "d": "11/2015"}, {"body": "finally found way even easier add condition check value editor watch method make sense silent option sorry useless issue working example", "d": "11/2015"}, {"body": "hi chagamkamalakar post issue vuejs forum please lot people help way focus bugs suggestions vuejs thank", "d": "11/2015"}, {"body": "sorry sorted issue keeping code thanks suggestion use vuejs forum", "d": "11/2015"}, {"body": "see chagamkamalakar post vuejs forum anyway think maybe better solution issue like using directive", "d": "11/2015"}, {"body": "capture provide repro", "d": "11/2015"}, {"body": "tried keyup keydown created handlecmdenter try capture key events keyup last key released triggers event keydown two events fired keyup registers cmd keyup enter key accessible", "d": "11/2015"}, {"body": "mac cmd key considered modifier check event modifier keys works properly javascript using please provide much information possible preferably live demo", "d": "11/2015"}, {"body": "thank responding quickly figured way around seems suitable solution add event handler von keydown handlecmdenter event method handle key combination handlecmdenter function e emetakey ectrlkey amp amp ekeycode etargetformsubmit event handlers form submission nt work calling submit directly called click event submit button instead modified method trigger click event submit button event handlers form get trigger way handlecmdenter function e emetakey ectrlkey amp amp ekeycode var button etargetform find button type submit suggestions cleaner way ears thanks responding quickly think pretty awesome active community created vuejs pleasure use", "d": "11/2015"}, {"body": "josephjbrewer also write get rid", "d": "11/2015"}, {"body": "please ask questions forum issues bugs feature requests", "d": "11/2015"}, {"body": "thanks suggestion general advice scenarios like prefer initialize button objects properly whenever possible way nt need worry workarounds reactivity would work expected", "d": "11/2015"}, {"body": "straps need set one field mutating data issue much simpler way problem actually arises need set fields would like see syntax like", "d": "11/2015"}, {"body": "consider add callback vue lifecycle let us initialize component data observed case init belong component parent simplesmiler get point think could better maintain familiarity libraries many us use every day underscore lodash etc thanks", "d": "11/2015"}, {"body": "straps chose similar javascript functionality standardized name really matter though fine", "d": "11/2015"}, {"body": "simplesmiler ok already taken components", "d": "11/2015"}, {"body": "looks like fallen victim", "d": "11/2015"}, {"body": "short needed go html html", "d": "11/2015"}, {"body": "airtonix reason nt placing markup component template html", "d": "11/2015"}, {"body": "rpkilby", "d": "11/2015"}, {"body": "intention partials mostly allowing flexibility composing template parts depending component props dynamic partials really meant runtime swaps although looking transition effects parts indicates may better make components", "d": "11/2015"}, {"body": "could used ifelse statements transitions big amounts texts creating components performance cost wiser using partials anyway thanks looking", "d": "11/2015"}, {"body": "hmm sure vue actually performs call scenario described", "d": "11/2015"}, {"body": "code scenario described try put printed seven times javascript import vue vue var app new vue el content data list name name b name c name name e name f name g name h settimeout function applist name b name c name name e name f name g name h name case perform javascript import vue vue var app new vue el content data list name name b name c name name e name f name g name h settimeout function applist name h name name b name c name name e name f name g", "d": "11/2015"}, {"body": "livoras replacing entire list fresh objects therefore vue removing old fragments inserting new ones fact neither examples call call times add proper identity tracking see call cases", "d": "11/2015"}, {"body": "added shown previous comment", "d": "11/2015"}, {"body": "tested exact code locally got move call making calls please provide live demo", "d": "11/2015"}, {"body": "ah sorry looking second snippet yes indeed making calls", "d": "11/2015"}, {"body": "livoras thanks lot suggestion actually optimizes scenarios single item moved", "d": "11/2015"}, {"body": "great job called actually optimizes scenarios nonadjacent items moved", "d": "11/2015"}, {"body": "nt think bug add classes component way quite useful", "d": "11/2015"}, {"body": "referencing feature totally fine wrong final component end two identical class names seen fiddle would never write code right vue nt neither", "d": "11/2015"}, {"body": "see one writing twice user free add class multiple times like waiting vue fix mistakes", "d": "11/2015"}, {"body": "despite reasons behind repeated class vue could merging instead appending classes way using jqueryaddclass expect library add class nt already exists nt expect fix mistakes help keep code clean", "d": "11/2015"}, {"body": "could feature yet example gave clearly developer mistake real use case jquery example providing nt relate talking adding class component already holds class", "d": "11/2015"}, {"body": "application using class locate dom init vue style initial dom would make sure stays way vue replaced content keep class component template declaration yes purpose could change end duplicating classes names could still argument could remove component component would prompt style issues reason decide change initial dom class nt think big deal would expect class merging feature", "d": "11/2015"}, {"body": "read understand problem think problem could explicit", "d": "11/2015"}, {"body": "hmm really related named slots actually using inline tags ie nt support fixed", "d": "11/2015"}, {"body": "\u90fd\u662f patch", "d": "11/2015"}, {"body": "using syntax version please read latest docs", "d": "11/2015"}, {"body": "chars inside attribute string escaped expected behavior", "d": "11/2015"}, {"body": "whitespace referring really understanding problem", "d": "11/2015"}, {"body": "consider minimum example line moduleexports data function return line whitespace note whitespace front tag rendered nt remove tags works happens using combination embedded html tags", "d": "11/2015"}, {"body": "benromberg vue somehow trim spaces probably nt need triple braces first place likely nt want real tags inside rather want encoded display need use", "d": "11/2015"}, {"body": "simplesmiler thanks chiming aware implications usage indeed intended", "d": "11/2015"}, {"body": "benromberg nt get need real inside syntax highlighting", "d": "11/2015"}, {"body": "thanks works like charm", "d": "11/2015"}, {"body": "need notify masonry trigger reflow new items added set data use wait dom update use whatever method masonry api force recalculate layout issues vuespecific bugs feature discussions please post questions like forum future", "d": "11/2015"}, {"body": "ok", "d": "11/2015"}, {"body": "yes known issue general advice never rely vmodel create nonexistent property follow best practice properly initialize data", "d": "11/2015"}, {"body": "unfortunately vue expression parser support alphanumeric identifiers avoid using unicode chars identifiers", "d": "11/2015"}, {"body": "\u62a5 bug \u8981\u7ed9\u91cd\u73b0\u554a\u540c\u5b66 \u4f60\u8fde\u4e00\u884c\u4ee3\u7801\u90fd\u6ca1\u6709\u600e\u4e48\u5e2e\u4f60", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "think use encountered problem today cat", "d": "11/2015"}, {"body": "unusual quirk suggested solution seems work way thanks", "d": "11/2015"}, {"body": "\u56e0\u4e3a\u4f60\u540c\u65f6\u628a value", "d": "11/2015"}, {"body": "likely router view components prop case please reopen reproduction", "d": "11/2015"}, {"body": "sorry correct another routerview sat nt realise", "d": "11/2015"}, {"body": "former removes vue instance accepts callback latter synchronous", "d": "11/2015"}, {"body": "want angular vue nt use angular directly vue angular without heaviness", "d": "11/2015"}, {"body": "looking something like also angular nt option cases", "d": "11/2015"}, {"body": "would add data gathered one place good thing many reasons really nt understand sentence data methods completely separated actually opposite imho", "d": "11/2015"}, {"body": "boussou used angular example nothing angular good practice around want small classes encapsulate functionality without tied vue vue able utilize", "d": "11/2015"}, {"body": "got", "d": "11/2015"}, {"body": "probably vue get opnionated reactive state ie source truth ui needs plain objects makes state serializable rehydratable however nt prevent sharing reactive objects vue instance class choice rather thinking service class instance data think like vue instance service class instance sharing data something like could probably work", "d": "11/2015"}, {"body": "sorry sound ungrateful sounds lame service probably charge fetching data maybe remedied static function service calling would nt allow view call service methods mean create proxy methods every service method may want allow view access every vue uses service sad example js import order order vuecomponent orderpage also bind view example instead looks quite lame disappointed", "d": "11/2015"}, {"body": "remember include parens need proxy methods", "d": "11/2015"}, {"body": "closing since like openended discussion feel free continue forums", "d": "11/2015"}, {"body": "please provide repro", "d": "11/2015"}, {"body": "closing inactivity", "d": "11/2015"}, {"body": "chinese all\u5168\u9009\u662f\u597d\u7684 \u7136\u540e\u518drun\u4e00\u4e0b \u518d\u53bb\u5168\u9009\u53cd\u9009 control\u4e86", "d": "11/2015"}, {"body": "\u5148\u9009\u62e9 \u7684\u8bdd watch \u4e5f\u6709\u95ee\u9898", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "zcoding \u8fd9\u53ea\u662f\u5355\u5411\u7ed1\u5b9a\u5427", "d": "11/2015"}, {"body": "\u8fd9\u91cc\u786e\u5b9e\u6709\u4e00\u4e2a edge reactive \u66f4\u597d\u7684\u505a\u6cd5\u662f\u5229\u7528 \u652f\u6301 checkbox \u7ed1\u5b9a\u5230 array", "d": "11/2015"}, {"body": "\u597d\u7684", "d": "11/2015"}, {"body": "\u5982\u679c\u89c9\u5f97 array line", "d": "11/2015"}, {"body": "please read docs vueset instance methods", "d": "11/2015"}, {"body": "read docs convenient see blow vfor template code get plain json object", "d": "11/2015"}, {"body": "currently use get pojo", "d": "11/2015"}, {"body": "use objects", "d": "11/2015"}, {"body": "ok use json methods get plain objects special method case please post questions forum next time", "d": "11/2015"}, {"body": "thanks response tried gets error referers vm instance method scope", "d": "11/2015"}, {"body": "btw using latest vue upgrade", "d": "11/2015"}, {"body": "expects path string first argument", "d": "11/2015"}, {"body": "set object reference obviously object want clone explicitly clone reason vue clone object set", "d": "11/2015"}, {"body": "use vueset set nt mentioned tue nov pm eason shen notifications githubcom wrote dont get item one item vfor repeat set von click event handler onitemclick argument item want set new property item would weird resolve key path situation \u53d1\u81ea\u6211\u7684 iphone \u5728 notifications githubcom set carinfo set object reference obviously object want clone explicitly clone reason vue clone object set reply email directly view github reply email directly view github", "d": "11/2015"}, {"body": "limitation html permits inside gets cut browser vue reach either enclose whole table component use syntax", "d": "11/2015"}, {"body": "encountered issue switching components child components", "d": "11/2015"}, {"body": "hmm nt expect use case like custom directive duplicates old behavior access directive bound element custom directive simple let know helps", "d": "11/2015"}, {"body": "aware ability access alternate directives element proves trivialize previously trying less solves problem use method previous system removes builds new copy options option groups support also understand would nt expected use case potentially questionable ui choices taking place thanks help", "d": "11/2015"}, {"body": "\u4e4b\u524d\u7684 issue objectdefinepropery \u65e0\u6cd5", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "please describe ran error provide reproduction stack trace nt helpful", "d": "11/2015"}, {"body": "inactive", "d": "11/2015"}, {"body": "issue pretty sure vuerouter specific though open one", "d": "11/2015"}, {"body": "\u4f60\u7528\u7684\u662f \u662f", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "nt sound like good idea pass parent name prop", "d": "11/2015"}, {"body": "\u4e0d\u7528vtransition", "d": "11/2015"}, {"body": "\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 \u8981\u901a\u8fc7props\u6216\u8005\u662f\u4e8b\u4ef6\u56de\u8c03\u673a\u5236\u901a\u4fe1", "d": "11/2015"}, {"body": "props\u5f62\u5f0f\u8981\u5982\u4f55\u4f7f\u7528\u5462", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "\u95ee\u9898\u8bf7\u4e0d\u8981\u5f00", "d": "11/2015"}, {"body": "add name option see docs name option mon nov kfirba notifications githubcom wrote hey faced problem day updated vue version beta release rc release code broke code takes folders tree renders folderstree manager component registers locally folder component folderstree using folder component template vfor root folders folder component checks see children renders using folder component along vfor children basically render nice folder tree worked perfectly beta releases upgraded rc releases got weird error true current release aswell root folders rendered properly tries render children folder throws error says folder component nt registered solution found issue register folder component globally beforecompile method folderstree weird sorry took thing long report indeed bug intentional reply email directly view github", "d": "11/2015"}, {"body": "oh nt seen guess new thanks quick reply tho", "d": "11/2015"}, {"body": "ways case interested flux model used vuex thirdparty event emitter often evan says eventapproach little hard reason compared props example would personally go flux maybe try redux share store data actions functions instances", "d": "11/2015"}, {"body": "azamatsharapov nt think need delegate job party package feels like needs something vue provides rare want notify siblings something happened may something result true fire event using jquery library native js listen event vue components nt feel right", "d": "11/2015"}, {"body": "vue allencompassing framework nt attempt solve problems limit vueonly solution mon nov kfirba notifications githubcom wrote azamatsharapov nt think need delegate job party package feels like needs something vue provides rare want notify siblings something happened may something result true fire event using jquery library native js listen event vue components nt feel right reply email directly view github", "d": "11/2015"}, {"body": "sure never mentioned try use vue everything think elementary task pretty common maybe addressed seems easy implement nt presenting anything new nice addition current events system like polishing current events system whether entirely decision mere suggestion", "d": "11/2015"}, {"body": "opinion need type event communication use global event bus instead probably simpler think using webpack browserify already shim node event emitter requires nothing vue pattern applied application", "d": "11/2015"}, {"body": "amp \u548c \u548c \u4f20\u9012\u7684\u624d\u662f javascript", "d": "11/2015"}, {"body": "amp \u5bf9\u4e8ebool", "d": "11/2015"}, {"body": "yes work", "d": "11/2015"}, {"body": "one small thing watch component linkers cached first compilation first occurrence child component failed locate component compile time affect later instances circumvented making component prop required", "d": "11/2015"}, {"body": "thanks works perfectly close ticket", "d": "11/2015"}, {"body": "correct behavior please read", "d": "11/2015"}, {"body": "matmoo thanks explanation", "d": "11/2015"}, {"body": "nt helpful get actual source debugging whats confusing dist file meant read source sat nov pm michael qu notifications githubcom wrote install vue npm use webpack pack find webpack compile vue source use sourcemap source code vue also show source tag chrome dev tool makes little bit confusing packagejson main srcvuejs think main script distvuejs distvueminjs npmpublish version reply email directly view github", "d": "11/2015"}, {"body": "yeah nt need debug debuging code examble trying debug indexjs type filter source tag", "d": "11/2015"}, {"body": "show full path though ignore vue files dist file already packed webpack inefficient webpack packs sun nov michael qu notifications githubcom wrote yeah nt need debug vue debuging code examble trying debug indexjs type index filter source tag image img reply email directly view github", "d": "11/2015"}, {"body": "please provide reproduction", "d": "11/2015"}, {"body": "reproduction sorry nt understand", "d": "11/2015"}, {"body": "make live editable demo using service like debug", "d": "11/2015"}, {"body": "okey", "d": "11/2015"}, {"body": "tried jsfiddle worked work webpack require", "d": "11/2015"}, {"body": "hmm nt seem vue core issue closing maybe get info provide repository webpack setup", "d": "11/2015"}, {"body": "provide email address add repo bitbucket", "d": "11/2015"}, {"body": "sorry nt really time look full projects need isolate problem provide minimal reproduction repo github", "d": "11/2015"}, {"body": "okey thank dear", "d": "11/2015"}, {"body": "hi dear done jsfiddle work nested component", "d": "11/2015"}, {"body": "okey fixed nexttick right way", "d": "11/2015"}, {"body": "open fiddle wait minute see updated element correctly looks like issue library", "d": "11/2015"}, {"body": "simplesmiler timeago work well", "d": "11/2015"}, {"body": "getting problem plugins one animatemodaljs", "d": "11/2015"}, {"body": "alioygur may bit offensive mean talking fact work callback jquery plugins similar code work properly", "d": "11/2015"}, {"body": "simplesmiler okey got", "d": "11/2015"}, {"body": "alioygur anyway fine workaround unless willing dig jquery plugin code", "d": "11/2015"}, {"body": "simplesmiler yes right thank dear", "d": "11/2015"}, {"body": "assume using please read section", "d": "11/2015"}, {"body": "using vueloader dependencies list routes file", "d": "11/2015"}, {"body": "still applies", "d": "11/2015"}, {"body": "fix read doc confused", "d": "11/2015"}, {"body": "okey got use vuehtmlloader instead htmlloader", "d": "11/2015"}, {"body": "need install use load image extensions webpack config", "d": "11/2015"}, {"body": "binding array primitive values change array entire list rerendered avoid behavior add", "d": "11/2015"}, {"body": "oh sorry forgot thanks", "d": "11/2015"}, {"body": "supersummer sure testing", "d": "11/2015"}, {"body": "simplesmiler sorry got wrong version", "d": "11/2015"}, {"body": "issue", "d": "11/2015"}, {"body": "transcluded children also component array checking presence probably method future something like", "d": "11/2015"}, {"body": "thanks tip", "d": "11/2015"}, {"body": "think caused template tag try", "d": "11/2015"}, {"body": "likely ie enforces elements allowed inside similar use nontemplate version", "d": "11/2015"}, {"body": "thanks posting saved ton time", "d": "11/2015"}, {"body": "handle please post questions forum", "d": "11/2015"}, {"body": "provide reproduction", "d": "11/2015"}, {"body": "please specific likely method returning rendered empty", "d": "11/2015"}, {"body": "used evaluate older versions", "d": "11/2015"}, {"body": "well never intended work likely coincidence worked", "d": "11/2015"}, {"body": "please read upgrade notes carefully object prototypes longer extended use instead", "d": "11/2015"}, {"body": "bit day took minutes figure going", "d": "11/2015"}, {"body": "sounds like magic maybe warning would helpful", "d": "11/2015"}, {"body": "azamatsharapov entirely sure seems magical expect mess data types keeping whatever type set instead used input input coerced string something would expect thinking another way already said number declaring nt sufficient magic vue paying attention information user already given intentions", "d": "11/2015"}, {"body": "morgul turns raw value still string yeah vue messing data type preserving browser default behavior casts type ask param attribute", "d": "11/2015"}, {"body": "ah nt aware nt actually worked raw input fields long time still feels like obvious feature", "d": "11/2015"}, {"body": "calling autocasting magical evan also said string html blame want enhancement standard html add vue param cast opinion", "d": "11/2015"}, {"body": "bad idea mix two styles addition reason gets confused treats attribute pretty nasty work around use one style added warning usage", "d": "11/2015"}, {"body": "hard tell wrong without actual reproduction", "d": "11/2015"}, {"body": "found workaround weird may give hint changed deletion method address array directly use method works super weird clue", "d": "11/2015"}, {"body": "really doubt makes difference ca nt really help without actual repro", "d": "11/2015"}, {"body": "try make reproduction way addressing array like suggested comment indeed solves problem super surprised", "d": "11/2015"}, {"body": "kfirba work change following", "d": "11/2015"}, {"body": "kfirba using polyfill something tells array callback copy", "d": "11/2015"}, {"body": "simplesmiler try get home youngsteveo using explicit polyfill method supported use browserify babel nt think creates polyfill method", "d": "11/2015"}, {"body": "simplesmiler uhmm works", "d": "11/2015"}, {"body": "try original code say store reference array callback log see fact array logs false likely using something messes array methods", "d": "11/2015"}, {"body": "get however nt remove object array super weird", "d": "11/2015"}, {"body": "kfirba unfortunately objects observed scalar values arrays call mutation methods like shift push splice etc nt matter remove items data array property collection object", "d": "11/2015"}, {"body": "kfirba weird indeed ca nt reproduce behavior closing provide repro dig", "d": "11/2015"}, {"body": "please open questions forum instead issues bugs features use case use custom filter", "d": "11/2015"}, {"body": "pass prop without always interpreted plain string attributes matter content want pass literal number need use html", "d": "11/2015"}, {"body": "thanks quick response would great info add section guide", "d": "11/2015"}, {"body": "vrepeat deprecated vue please use vfor", "d": "11/2015"}, {"body": "please read release notes", "d": "11/2015"}, {"body": "another make vuejs code js remove transition ok", "d": "11/2015"}, {"body": "ca nt reproduce need make actual reproduction", "d": "11/2015"}, {"body": "error also try make repro", "d": "11/2015"}, {"body": "try make repro later", "d": "11/2015"}, {"body": "demo first bug jsfiddle", "d": "11/2015"}, {"body": "alexandrebonaventure typeerror thisop function find reason use variable start properties start proxied", "d": "11/2015"}, {"body": "repro errors extra selectors fixed working properly without errors", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "case vuejs ca nt finish migration part app depending behavior", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "vue", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "vue vue vue", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "\u6240\u4ee5\u6211\u8bf4\u4f60\u601d\u8def\u4e0d\u5bf9", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "seem like use case improved", "d": "11/2015"}, {"body": "idea workaround solution see turn component directive apply tag sexy want", "d": "11/2015"}, {"body": "aha fact proper way handle make element directive instead since want interpret anything passed plain string need control slot distribution mechanism", "d": "11/2015"}, {"body": "look thanks time mate", "d": "11/2015"}, {"body": "need use correct build setup browserify need vueify", "d": "11/2015"}, {"body": "thanks must overlooked somewhere docs", "d": "11/2015"}, {"body": "ok found putting single prop work js mpleft float left width height background red mpmain float left width foo height background green bar height background blue vuecomponent masterpage template left aside props params watch params function val log nexttick function consolelog leftaside elsleftaside debugger vuecomponent foo template foo vuecomponent bar template bar new vue el html data view name masterpage params showleft false childview foo ready function var settimeout function meview name masterpage params showleft true childview bar", "d": "11/2015"}, {"body": "please use asking questions answer question pass event info though click eventhandler event e el think work top head", "d": "11/2015"}, {"body": "related vuejs", "d": "11/2015"}, {"body": "discussion jqueryjquery", "d": "11/2015"}, {"body": "looks like nothing vue", "d": "11/2015"}, {"body": "know promises supported vuerouters hooks please use forum chat questions", "d": "11/2015"}, {"body": "per component inserted user calls passedin callback return promise think unimplemented feature reported", "d": "11/2015"}, {"body": "ah ok nt know", "d": "11/2015"}, {"body": "ah forgot issue mentioned promise implemented mentioned actual doc places assume promises vuejs core introducing promise handling particular case probably worth since", "d": "11/2015"}, {"body": "question bug please post forums", "d": "11/2015"}, {"body": "please provide information want looked", "d": "11/2015"}, {"body": "block compiled offdom fragment inserted unfortunately somewhat necessary ensure correct compilation results general directives assume workaround wait trying access note means extra checks function ok", "d": "11/2015"}, {"body": "thanks understood", "d": "11/2015"}, {"body": "something like please use chat forum questions", "d": "11/2015"}, {"body": "yes thanks", "d": "11/2015"}, {"body": "thanks", "d": "11/2015"}, {"body": "content editable involves lot complexity input bindings best use external library dedicated purpose eg mediumjs wrapped custom directive", "d": "11/2015"}, {"body": "props stripped reaching warning check need worry", "d": "11/2015"}, {"body": "need", "d": "11/2015"}, {"body": "please read upgrade guide carefully vfor need explicitly pass data props", "d": "11/2015"}, {"body": "swear god work five minutes ago well must mistyped something guess apologies", "d": "11/2015"}, {"body": "quick review noticed worked accidently reverted shown updated fiddle nt work", "d": "11/2015"}, {"body": "search section", "d": "11/2015"}, {"body": "indeed bad though seems counter intuitive vfor explicitly respecify variable", "d": "11/2015"}, {"body": "intuitive trying refactor reuse component later", "d": "11/2015"}, {"body": "post code example", "d": "11/2015"}, {"body": "hmm guess savvy post code spaced code lines show sure better way post inline code", "d": "11/2015"}, {"body": "eybarta read use markdown two compiled thing nt mix pick one style html", "d": "11/2015"}, {"body": "ok thx", "d": "11/2015"}, {"body": "humucai", "d": "11/2015"}, {"body": "yanxyz", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "smarttable \u8d70\u4e0d\u5230consolelog fire", "d": "11/2015"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b\u770b \u7684 api \u6587\u6863 \u53ea\u63a5\u53d7 expression \u6216", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "\u66f4\u597d\u7684\u529e\u6cd5\u662f\u505a\u4e00\u4e2a row row \u7ec4\u4ef6 watch", "d": "11/2015"}, {"body": "model name newvalue oldvalue", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "still hold opinion nested methods confusing useful preferred way connecting child parent method via parent child tightly coupled using effectively directly calling", "d": "11/2015"}, {"body": "karevn save life updating vue", "d": "11/2015"}, {"body": "got issue instead recursive call vue nt render element javascript import vue require vue vuecomponent header header component new vue el app template data think good warn user elements allowed open pr using commontagre trigger warn nt know much vue internals probably best idea thanks", "d": "11/2015"}, {"body": "warn component options added warning global registration well", "d": "11/2015"}, {"body": "vue use syntax see also scroll full changelog gt arguments", "d": "11/2015"}, {"body": "need write customized select component accepts property specifies either options option groups acts exactly property version vuejs thanks advance", "d": "11/2015"}, {"body": "haixinghu", "d": "11/2015"}, {"body": "hi closed solution", "d": "11/2015"}, {"body": "came across need using type select tag way works hides select show something else know use directive wold easier could override behaviour", "d": "11/2015"}, {"body": "mattbit using", "d": "11/2015"}, {"body": "mattbit animabear curly braces supported props since thus idiomatic way", "d": "11/2015"}, {"body": "simplesmiler see thanks change log", "d": "11/2015"}, {"body": "ahhh problem case would detect objects property change", "d": "11/2015"}, {"body": "loss attribute means vuejs longer feasiable sites requiring seo words longer create progressively enhanced site directives good enough ca nt use events methods properly nvm saw", "d": "11/2015"}, {"body": "airtonix equivalent vcomponent attribute also sure anything seo final rendered markup custom elements replaced root element template", "d": "11/2015"}, {"body": "seems gone anyway simulate previously possible vue within single page even different versions nt seem would possible longer cms mine using vuejs ui would force web site hosted within also upgrade version vuejs avoidable used thanks", "d": "11/2015"}, {"body": "commit", "d": "11/2015"}, {"body": "bigbluehat two copies vue compiling piece dom unfortunately longer possible adds lot extra complexity vue compiler marginal benefits however use one vue completely skip sub dom tree compiled using another vue copy", "d": "11/2015"}, {"body": "hrm sure would work case content items within page blueink components cms update dynamically change inject buttons settings editing deleting well enabling drag drop around page web site also needs access dom trees content smile chew see options remain thanks idea though", "d": "11/2015"}, {"body": "relevant seo content page constructed response server browser google index content thanks pointing directive combined still able take standard tags decorate attributes looking framework full blown clientside applications simple progressive enhancement also adopting atomic design able put parts together childparent relationship important react nt attributes tags destroys content angular long time adequate personally strategy work team others find difficult grok angular backbone still relies underscore knockout vuejs moment provides team something simple write code enough builtins potentially would nt need write js get simple concept flows working thanks etc essential part vuejs write components attributes destroy original markup", "d": "11/2015"}, {"body": "airtonix may also interested feature yet", "d": "11/2015"}, {"body": "solve problem", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "brilliant choice", "d": "11/2015"}, {"body": "lol", "d": "11/2015"}, {"body": "brilliant choice", "d": "11/2015"}, {"body": "transitiononinit looked react flag thing", "d": "11/2015"}, {"body": "keeping track part planned features", "d": "11/2015"}, {"body": "hello wrote type definitions vuerouter anyone would like add file definitely typed please inform", "d": "11/2015"}, {"body": "coffeescript", "d": "11/2015"}, {"body": "auvipy want coffee script", "d": "11/2015"}, {"body": "writing vuejs apps coffeescript", "d": "11/2015"}, {"body": "spending time thinking problem came simple solution typed templates typedtmpl nt implemented features vue time however good handlebars replacement", "d": "11/2015"}, {"body": "well wrote independent template engine whats connection vue", "d": "11/2015"}, {"body": "support typescript", "d": "11/2015"}, {"body": "case anyone struggling like vuejs js vm watch data function newval oldval", "d": "11/2015"}, {"body": "hi situation following object javascript data navigation step prev current next using maintains data binding thus say also update object pushed trying avoid anyone advise something wrong actual bug utilexport played around fiddle forked new version could replicate issue right option seems properties", "d": "11/2015"}, {"body": "jjaulimsing shallow clone copies top level properties vuejs data objects reactive reference want nonreactive copy use deep clone easy way use something like", "d": "11/2015"}, {"body": "seo problem front side render templates perfect solved really think server side render worth consider vuejs", "d": "11/2015"}, {"body": "pinescheng try", "d": "11/2015"}, {"body": "aztack recommended way use shortcut cases want construct list attributes programmatically", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "objectdefineproperty shimmed", "d": "11/2015"}, {"title": "objectprototype collisions model values collectionbyid lookup", "body": "issue seems related also happens values well keys firefox create collection uses field id lookup lookup return wrong value value models idattribute also value objectprototype example referenced issue people mentioned using prototype names default properties understand attribute values limitation nt always control values may example javascript var backbonemodelextend idattribute type defaults type name var new type watch name watch var new type name var c backbonecollectionextend model var collection new c add models collectionadd collectionadd try get model type watch consolelog collectionget watch consolelog collectionlength log function watch log example happens firefox chrome see behavior add following javascript var new type constructor name constructor collectionadd consolelog collectionget constructor log function object native code", "num": "3874", "d": "11/2015"}, {"title": "backbone longer used browserify environment without jquery", "body": "project using backbone dependency nt use jquery everything worked fine backbone tried upgrade backbone build became broken throw er unhandled error event error find module jquery usersdvsdropboxcodecubnodemodulesbackbone process ondir load onex fsreqwraponcomplete using latest versions browserify nodejs tried backbone versions working build latest compatible version seems", "num": "3873", "d": "11/2015"}, {"title": "identify set reverse normals programmatically using arcobjects", "body": "working project deliverables dgn esri multipath conversion dgn multipath arcmap noticed facades normals reversed results looks likes portions multipatch missing fix faces inverted programmatically please suggest fix issues also provide interfaces help resolve issues", "num": "3872", "d": "11/2015"}, {"title": "collectionset behavior changed", "body": "change changes behavior collection method return falsy value empty collection collection blank model intended change personal consideration empty model case unexpected unwanted behavior", "num": "3871", "d": "11/2015"}, {"title": "unable find elements inside jqplot canvas graph", "body": "want write automation script loads webpage moves control graph find tooltip corresponding bar clicks bar find title next page please suggest tool could perform tasks major problem per findings inspecting graph elements hence unable use protractor selenium plus using sikuli also efficient approach large number graphs capturing expected results would tedious task please help regard", "num": "3869", "d": "11/2015"}, {"title": "collectionremove nt remove given models", "body": "ugly flexbox reason want append fake models end collection even fetching models sync remove previous fake models add new ones end anyways issue onsync gt modelstoremove id consolelog modelstoremove modelstoremovelength prints child child child child child expected remove modelstoremove id consolelog print right prints child cid child actually present first list add fakecount someone could shed light issue appreciate", "num": "3868", "d": "11/2015"}, {"title": "upload file using backbonejs", "body": "spring mvc jpa backbonejs application want upload file using backbonejs please tell want", "num": "3863", "d": "11/2015"}, {"title": "backbone modelviewcollection extend feature make deep copy", "body": "extend common features declared separate objects extend merge overwrite eg myviewevents gives easily solved merge method extend use merge merging properties", "num": "3861", "d": "11/2015"}, {"title": "specflow used crossplatform applications", "body": "hi couple applications different platforms java wpf java webservices need end end automation application want use specflow could please guide way use specflow crossplatform applications many thanks neha", "num": "3860", "d": "11/2015"}, {"title": "subcollection memory leak single model multiple collections", "body": "adding single backbonemodel multiple backbonecollections collection adds event listener added model addreference reference prevents collection garbage collected every single model explicitly removed collection application depends creating many temporary collections grouping filtering results reuse extended collection methods results containing already existing models base collections like see temporary collections garbage collected reference gets discarded via delete leaving scope instead aggregating references every single temporary collection within every model preventing ever getting discarded long model alive solving problem calling reset every temporary collection thereby removing event listeners would major inconvenience bb concept enabling us use temporary backbone collections without forcing us cleanup jsfiddle demonstrating issue watching debugger timeline running loop see something like", "num": "3858", "d": "11/2015"}, {"title": "hash incorrect safari pass path using unicode string navigate method", "body": "safari pass path using unicode string method like hash incorrect output tracked code caused method call stack created method like navigate decodefragment updatehash fragment passed decoded hash also searched commit history added ps english good although trying improve", "num": "3857", "d": "11/2015"}, {"title": "doverilog", "body": "installed doxverilog also downloaded source directories doxygen website setup doxygen downloaded using cygwin along installation bison flex graphviz packages windows also installed unxutills followed general steps provided readme file folder doxverilog run command cygwin run administrator displays different messages messages provided messages user userpc patch lt linuxpatch ca nt find file patch input line perhaps used wrong p strip option text leading index utilcpp utilcpp revision utilcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index doxygencssh doxygencssh revision doxygencssh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index navtreejsh navtreejsh revision navtreejsh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index definitioncpp definitioncpp revision definitioncpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index configoptionscpp configoptionscpp revision configoptionscpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index ftvhelpcpp ftvhelpcpp revision ftvhelpcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdldocgenh vhdldocgenh revision vhdldocgenh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index indexcpp indexcpp revision indexcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index memberdefh memberdefh revision memberdefh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index definitionh definitionh revision definitionh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdlparsery vhdlparsery revision vhdlparsery arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdldocgencpp vhdldocgencpp revision vhdldocgencpp arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index filedefcpp filedefcpp revision filedefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index imagecpp imagecpp revision imagecpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index doxygencpp doxygencpp revision doxygencpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index configl configl revision configl arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index utilh utilh revision utilh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index imageh imageh revision imageh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index classdefcpp classdefcpp revision classdefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index htmlgencpp htmlgencpp revision htmlgencpp arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index typesh typesh revision typesh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index memberdefcpp memberdefcpp revision memberdefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index translatorenh translatorenh revision translatorenh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdlscannerl vhdlscannerl revision vhdlscannerl arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index libdoxygenproin libdoxygenproin libdoxygenproin file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index libdoxygenproin libdoxygent libdoxygent file patch skip patch skipping patch hunk ignored run following command messages following messages displayed messages run following command following messages dislayed messages please help problem thankyou", "num": "3856", "d": "11/2015"}, {"title": "backbone get route name execute method", "body": "javascript backbonerouterextend routes routes filters function consolelog arguments basic router navigating however output execute method thought name argument route name see empty string match documentation edit title ca nt get name", "num": "3854", "d": "11/2015"}, {"title": "information update event collection duplicate", "body": "edit disregard duplicate apparently nt know search issues instances triggered collection within method within method code access following information models added collection none method local variable method models removed collection local variable method local variable method models changed collection none method local variable minus method included options event would possiblesensible information included allow optimised bulk operations rather respectively", "num": "3853", "d": "11/2015"}, {"title": "delegateevent documentation example irrelevant", "body": "delegateevents documentation example code javascript var documentview backboneviewextend events dblclick open click icondoc select contextmenu icondoc showmenu click shownotes togglenotes click title lock editaccesslevel mouseover title date showtooltip render function elhtml thistemplate thismodelattributes return open function windowopen thismodelget viewerurl select function thismodelset selected true description example view displays document search result might look something like sure code related topic description", "num": "3852", "d": "11/2015"}, {"title": "write sql queries inside active record", "body": "new nt know write sql queries help highly appreciated", "num": "3849", "d": "11/2015"}, {"title": "backbonejs viewremove", "body": "sorry poor english project use backbonejs execute viewremove throw exception obj null debug find occur line backbonejs eventsstoplistening method listeningobjoff name callback obj null", "num": "3848", "d": "11/2015"}, {"title": "collectionremove behavior", "body": "previous versions model removed collection first cleaned index trigger event okay first remove model trigger clean index thus event handler model still present index absent collection resulting successful leads weird things like infinite loop trying remove model remove event handler specific reason triggering remove collection inconsistent state bug javascript removemodels function models options var removed var lt modelslength var model thisget models model continue", "num": "3847", "d": "11/2015"}, {"body": "think problem method simply returns first truthy object indexes lookup firefox property always return truthy result tests existence using model never added little ugly could something like following", "d": "11/2015"}, {"body": "solved problem passing exclude option browserify described apparently nt needed backbone versions older needed thanks everyone help", "d": "11/2015"}, {"body": "hi justin please let know request closed without answer justin ridgewell mailto notifications githubcom sent saturday november pm jashkenasbackbone cc chandrasekhar guda subject backbone identify set reverse normals programmatically using arcobjects closed reply email directly view github disclaimer email message sole use intended recipient may contain confidential privileged information unauthorized review use disclosure distribution prohibited intended recipient please contact sender reply email destroy copies original message check attachments viruses opening views opinions presented email author may reflect opinion cyient affiliates", "d": "11/2015"}, {"body": "nothing backbonejs", "d": "11/2015"}, {"body": "nt think proper forum discussion tends backbonedevelopmentrelated topics maybe try asking question stackoverflow elsewhere", "d": "11/2015"}, {"body": "got work properly using issue seems related fact several models exactly except cid", "d": "11/2015"}, {"body": "using duplicate break instead give unique ids identify property like", "d": "11/2015"}, {"body": "ok thanks", "d": "11/2015"}, {"body": "try backbone gitter room general support", "d": "11/2015"}, {"body": "agreed questions working backbone general discussions", "d": "11/2015"}, {"body": "yes prototypes work javascript please search issues background", "d": "11/2015"}, {"body": "hi talontr correct happen purpose models part collection ca nt clean temporary models remove references model else would use models collection", "d": "11/2015"}, {"body": "far understand model holds collection reference primarly eventbinding since collection offers many options connected event handling option create collection eventunaware would great feature way create onetimeusage collections sorting bucketing bells whistles collection offer without steady increase memory usage caused nongarbagecollectable collections", "d": "11/2015"}, {"body": "looking wrong perspective model event binding nt issue collection collection reference models array models memory buildup seeing keep adding models collection ca nt garbage collected empty collection either throw away collection instance throw away collection model references", "d": "11/2015"}, {"body": "thanks jridgewell answer unfortunately nt provide insight looking non empty collectionmodels array reason collection get garbage collected reference left last line removes last existing reference singlecollection gets garbage collected along models thats expected behavior favor take second look fiddle adding model many collections instantly get discarded var lt since singlemodel already backbonemodel time one model within heap delete command reference tmpcollection left leaving removed next garbage collection cycle even collections model array emtpy point memory buildup see none tmpcollection collections ever really discarded add singlemodelevents hence consolelog singlemodelevents end fiddle outputs even without variable pointing tmpcollection ever created garbage collector ca nt discard collections events entries thanks advance patience", "d": "11/2015"}, {"body": "sure backbone right library use case try library like crossfilter need lot aggregation filtering", "d": "11/2015"}, {"body": "thanks tip really filtering massive datasets otherwise happy backbone whole problem arose started rewrap collection function results filter collections returning filter result new collection instance class enables function chaining well using backbone collection functions extended collection functions great way work backbone collections assuming intermediate collections get discarded scope left instead backbone preserves event references within matching model simple solution would prevent intermediate collections attaching event listeners like huehnerhose proposed", "d": "11/2015"}, {"body": "ah understand simple solution would prevent intermediate collections attaching event listeners like huehnerhose proposed try overriding nothing private method nt guaranteed stay", "d": "11/2015"}, {"body": "thats less exactly moment removing added collection listeners case rewrapped collection might break next backbone update disablemodeleventlistenerflag false addreference function model options thisoriginaladdreferencecall model options surprised find backbone nt offer anything like underscores chain method would cool feature unfortunately fact collection registers models prevents us creating good concept even pr providing true backbonecollectionchain discussions single model multi collection relationships past eg occurs backbone nt clear handles", "d": "11/2015"}, {"body": "seems working provide jsfiddle showing error", "d": "11/2015"}, {"body": "notice please open safari record safari record chrome", "d": "11/2015"}, {"body": "backbonerouter seems designed feel nomenclature bit misleading goal external modules different routes since use amd module loading might something like javascript define function var model var view return function boilerplate mvc whatever model new model view new view javascript define backbone filtermodule function backbone filtermodule return backbonerouterextend routes filters filtermodule exactly code get idea trying accomplish unclear want route event also carry route name", "d": "11/2015"}, {"body": "hmmmmmmmm something like architecturally speaking fan javascript backbonerouterextend initialize function thisroute filters filters filtermodule nt like seems blur line factory typically constructor typically could move calls route outside object though feels like bit much open ideas", "d": "11/2015"}, {"body": "confusion example demonstrating lay view using hash described earlier section mapping dom events view methods backbone extracted documentcloud example may bit specific documentcloud use case another example think would make sense", "d": "11/2015"}, {"body": "bad sure missed first paragraphs nt yesterday looking keyword thing explaining usage code description posted remember anyways", "d": "11/2015"}, {"body": "please make jsfiddle case thanks", "d": "11/2015"}, {"body": "referring", "d": "11/2015"}, {"body": "yes guess", "d": "11/2015"}, {"body": "cool feel free weigh", "d": "11/2015"}, {"body": "thanks invitation quite recently decided nt need dependency backbone framework would rather implementation collections fun tickets", "d": "11/2015"}, {"body": "fjanon jridgewell improved documentation please let know clear", "d": "11/2015"}, {"body": "using lot fallbacks stuff airbus company moving companies like make jump think die finally", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "documentation still vague assumed string name attribute expected return value ever get fixed", "d": "11/2015"}, {"body": "update backbone website docs", "d": "11/2015"}, {"body": "cherry pick commit ghpages", "d": "11/2015"}, {"body": "mortenson updated", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "case anyone still hopeful seems officially happening objectobserve removed", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"title": "helper tag attributes crashes exception", "body": "example ember version version node npm os darwin ember emberdata", "num": "12661", "d": "11/2015"}, {"title": "controller replaceroute method appearing api documentation", "body": "link method api however method description exists even though description exists source code", "num": "12660", "d": "11/2015"}, {"title": "spread helper", "body": "component wraps currently supports one model supporting two model hard however nt see cheap obvious solution support dynamic number models hence helper proposition existing way achieve requirement feasible implementation spread helper intuitively feels like ember templating framework nt allow", "num": "12658", "d": "11/2015"}, {"title": "unexpected reserved word strict mode error yield android", "body": "line htmlbars causes error error android solution probably add yield", "num": "12657", "d": "11/2015"}, {"title": "application container csscontainers general", "body": "new ember trying use ember discovered viewscontrollers going away favor component based architecture sounds good already enabled pod based folder layout loving problem trying attach css styles application container however nt see without emberview furthermore think possible would flexible containers nt javascript responsibility rather markup became content inside divemberview might possible given ember long history points details container entirely config let htmlhtmlbars handle instead js config deprecated anyways case views know components config support disclaimer come background angularjs suggestion comes uirouter usage sure plenty architectural reasons ca nt happen feel free explain learn getting back topic could use jquery controller something select templates parent add css class would hack imagine route component extend component customize container looking workarounds without leaving latest stable release update like add tried adding following css success update works reason fan meets needs particular use case general questions still stand", "num": "12656", "d": "11/2015"}, {"title": "url changes model resolved", "body": "ember certain routes app url browser changes route model promise resolved results odd behaviour would expect url changed transition actually succeeds transitions log also nt make much sense says app transitioned statea whereas preparing transition stateb seems affect routes queryparams defined controller", "num": "12655", "d": "11/2015"}, {"title": "data binding ready", "body": "trying set properties hook component visible components template containing template see example matter trigger change outside ddau sendaction simply use binding curly components change always visible one templates problem goes app property array initially empty receives object visible least component long nothing gets rerendered component gets rendered binding suddenly overwrites set observer nothing changed arrays contents initial empty value updated binding ready finally binds property component", "num": "12654", "d": "11/2015"}, {"title": "model adapter called", "body": "adapter one models reason call ignored buildurl whole method goes regular get path ignored whole adapter fact non store methods called first noticed issue trying route already working previous call working rsvp one promise fails tried calling also tried create new model called route adapter luck also tried mock using mirage still ignoring model trying obtain route nt think necessary case driving crazy trying similar things help would great", "num": "12653", "d": "11/2015"}, {"title": "change font size one component another component", "body": "hello want change font size one component another component comonent heis chandefontsizehbs component component chandefontsize see html dom exampletext component ember generate dom dinamic documentready example need respect igor", "num": "12651", "d": "11/2015"}, {"title": "add assertion helper param", "body": "helper takes first positional parameter list iterate silently ignores additional positional parameters make harder beginners see mistakes suggest adding assertion helper", "num": "12650", "d": "11/2015"}, {"title": "handlebars thinks emberajax empty", "body": "hey everyone controller consolelog success handler loggin valid json object try use handlebars returning time empty workouts data dont get thanks", "num": "12649", "d": "11/2015"}, {"title": "add dsstore base delegate method adapter", "body": "wondering need extend class order add query method like example would possible current version need comes fact like backend api minor changes example custom route perform searches model none existing methods others help achieve functionality without overriding something really like buildin method works great want query specific model field using parameter looks multiple model fields find match best approach opinion would extend class add method example would allow automatically search records model", "num": "12645", "d": "11/2015"}, {"title": "set property array component hang everything", "body": "encounter weird problem try reproduce embertwiddle let explain first component hook need calculate dom related data expose nested components something like javascript export default embercomponentextend didrender let clientrect thiselementgetboundingclientrect let thresholdx clientrectright let thresholdy clientrectheight commented set array repeatedly throw deprecations crazily try use embertwiddle reproduce since hang browser ca nt save share ember", "num": "12644", "d": "11/2015"}, {"title": "rendering array query param url", "body": "sure behaviour intentional seems inconsistent arrays generally represented query string elsewhere given following javascript export default embercontrollerextend queryparams sort sort actions onsortchanged sort thisset sort sort sort name asc age desc would expect query string render array using syntax element renders formats appear work hand write url deliberate", "num": "12643", "d": "11/2015"}, {"title": "observe dom attribute changes", "body": "guys trying work ember polymer polymer element applicationhbs hbs myname input id emberinput type text valuemyname applicationjs js import ember ember embertextfieldreopen attributebindings value export default embercontrollerextend myname john smith page loaded text values change value changed change value changed question observe attribute changes makes ember data changed changes thanks", "num": "12642", "d": "11/2015"}, {"title": "prefixed dynamic segments", "body": "currently possible urls prefixed dynamic segments least nt know expect ember load route enter url like like medium mediumcom buschtoens something wrong really work alternative achieve behavior first thing could think catchall route redirects unhandled routes really like keep url structure though", "num": "12640", "d": "11/2015"}, {"title": "migrate application hosting", "body": "hello recently started studying emberjs installed ember stated manual began write using wrote small application example hello world run without tried copy folder myemberappdist test web server work", "num": "12639", "d": "11/2015"}, {"title": "component lifecycle hooks documentation missing", "body": "lifecycle hooksevents component listed api documentation components since seem missing", "num": "12637", "d": "11/2015"}, {"title": "delete put request failure post success", "body": "iis delete put get error visual studio debug success emberjs delete hacking", "num": "12635", "d": "11/2015"}, {"title": "factoryfor cache misses", "body": "noticing tons work discourse due way internally useabuse resolver internally tries hard cache name factory however cache information misses mean hit pathological case keep looking missing factories slow path hit missed cached internally ember cc eviltrout", "num": "12634", "d": "11/2015"}, {"title": "targetobject integration tests components", "body": "hey since version getting testsuite emberaddon run problem think lies nt get correct targetobject test environment verify steps added debug statement using inside emberdebugjs inside yields following results version version think something wrong right ca nt create twiddle needs testing environment normal usage nt get errors repo travis manifests cheers spruce", "num": "12633", "d": "11/2015"}, {"title": "action bubbling weirdness", "body": "seems setting action helper used template works specified target element parents see attached twiddle look applicationhbs intentional behavior bug intentional bit counterintuitive probably documentation around think", "num": "12632", "d": "11/2015"}, {"title": "object extensible", "body": "know using ember twiddle general nt work anyway", "num": "12631", "d": "11/2015"}, {"title": "positional params issue contextual components", "body": "assertion triggered attempting use positional params contextual components via hash helper imagine following js componentschildcomponentjs import ember ember const childcomponent embercomponentextend childcomponentreopenclass positionalparams params export default childcomponent attempt instantiate directly assertion triggered instantiate using component helper everything works expected see examples hbs working parentcomponent hash hashchildcomponent parentcomponent working parentcomponent hash component hashchildcomponent parentcomponent also created couple twiddles one showing error one showing working used component helper working working assertion thrown discovered issue although suspect issue could also affect", "num": "12625", "d": "11/2015"}, {"title": "thistransitionto error nothing reports nothing", "body": "want transition error route within routesapplicationjs try transition happens errors appear console etc almost like treats op example twiddle", "num": "12624", "d": "11/2015"}, {"title": "emberobject", "body": "seems canary undefined discovered loading following jsbin", "num": "12623", "d": "11/2015"}, {"title": "override value property bind values textfield", "body": "javascript embertextfieldextend value embercomputed get key return thisget dirtyvalue set key value return thisset dirtyvalue value changed", "num": "12621", "d": "11/2015"}, {"title": "component parentview null willdestroyelement willclearrender", "body": "sometimes makes sense nested components tell parent component destroyed however returns inside present though following codepen illustrates issue make present even destructive lifecycle callbacks", "num": "12620", "d": "11/2015"}, {"title": "memory acceptance tests ember", "body": "test repo upgrading app ember chrome crashes running acceptance tests following approach ran tests simple app compare different versions ember observations memory drops running unit tests ember memory allocated tests twice ember amp app memory allocation tends increase overtime acceptance tests questions expected thoughts debug memory comparison looking timeline seems like event listeners remain tests completed detached elements show heap profiles test repo", "num": "12618", "d": "11/2015"}, {"title": "add basic retry logic sauce tests", "body": "often experience intermittent sauce failures may good idea add small amount retry logic something like given sauce run failed previous ultimately succeeded retry current failure times previous failed current failed leave failed state move next cc seanpdoyle unsure interests cycles nice win", "num": "12615", "d": "11/2015"}, {"title": "attrs updating correctly contextual components", "body": "please see console twiddle edit sorry badly named issue sure actual problem yet", "num": "12613", "d": "11/2015"}, {"title": "remove ember references within internal modules", "body": "x packagesemberapplicationlibsystemresolverjs one depends embertemplates reboundreplaced tests place x packagesemberhtmlbarslibsystembootstrapjs one depends embertemplates reboundreplaced tests place x packagesemberhtmlbarslibutilsstringjs relies emberstrings also rebuildreplace x packagesembermetallibstreamsstreamjs packagesemberroutinglibsystemroutejs embertesting x emberisempty packagesemberruntimelibextfunctionjs emberextendprototypes packagesemberruntimelibextrsvpjs embertesting embertest amp amp embertestadapter likely embertesting augment rsvpext rather rsvp knowing embertest packagesemberruntimelibextstringjs emberextendprototypes x packagesemberruntimelibmixinsarrayjs x packagesemberruntimelibmixinsenumerablejs x embera cycle packagesemberruntimelibmixinstargetactionsupportjs emberlookup x packagesemberruntimelibsystemcoreobjectjs packagesemberruntimelibsystemlazyloadjs emberenvemberloadhooks basically legacy crap kill packagesemberruntimelibsystemnamespacejs emberbooted emberkeyname emberanyunprocessedmixins emberlookup file really years legacy behaviors multiple accomplish things also many performance hacks specific globals tostring world names derived resolver file phased packagesemberruntimelibsystemnativearrayjs emberextendprototypes packagesemberruntimelibsystemstringjs emberextendprototypes x packagesemberviewslibcomponentscomponentjs packagesemberviewslibsystemjqueryjs emberimports lt legacy emberenvforcejquery lt wat packagesemberviewslibviewscollectionviewjs emberenvenablelegacyviewsupport packagesemberviewslibviewscontainerviewjs x isempty emberenvenablelegacyviewsupport x packagesemberviewslibviewscoreviewjs packagesemberviewslibviewsviewjs emberenv deprecation hooks x embertemplates edit remove extra path info convert checkout stefanpenner", "num": "12611", "d": "11/2015"}, {"title": "performance issues replaceobserversandlisteners", "body": "replaceobserversandlisteners needs specialized per type update", "num": "12607", "d": "11/2015"}, {"title": "mixin shape problems", "body": "add guidkey null mixin constructor tostring remove private nativearrayactivate textsupportkeyevents", "num": "12606", "d": "11/2015"}, {"title": "view get data view controller", "body": "right use ember viewtest work appapplicationview embercomponentextend test helllo lt script type textxhandlebars gt viewtest lt script gt see ca nt fix", "num": "12605", "d": "11/2015"}, {"title": "factories injected templateonly components", "body": "using ember suppose want inject service components js appinitializersmythingjs export function initialize application applicationinject component mything service mything export default name mything initialize initialize place reference corresponding comes create component js file content except reference template starts working inconvenient since many components need injected reference would otherwise templateonly find strange corresponding controllerbased scenario works fine without index controller defined injecting service controllers sufficient make accessible template components work differently", "num": "12602", "d": "11/2015"}, {"title": "missing api documentation viewattributebindings", "body": "emberviewattributebindings documented property api view class preamble talks much help looking embercomponent", "num": "12601", "d": "11/2015"}, {"title": "checkbox always checked", "body": "setting checkbox property checkbox renders checked logincomponentjs import ember ember export default embercomponentextend remindme false expect remindme false checkbox render without check binding checked property render", "num": "12598", "d": "11/2015"}, {"title": "angle bracket components always return hasblock true", "body": "expecting return block shortclosed closing element apparently way angle bracket component use helper see reproduction", "num": "12597", "d": "11/2015"}, {"title": "hash computed macro", "body": "imminent arrival closurecomponents concept public api exposed yield using new hash helper think need hash computed macro", "num": "12595", "d": "11/2015"}, {"title": "component template context wrong wrapped layout", "body": "use case component uses layout template context inside template controller imo remain components context example modal component receipt component receipt component extends modal component uses template layout receipt component provides template layout template simply yields since layout template properties receipt component nt components context also nice day", "num": "12593", "d": "11/2015"}, {"title": "angle components ca nt rendered using component helper", "body": "experimenting porting components angle bracket style canary ended stumbling use ember errors suggests code path nt prepared angle components yet questions supposed work written first place higherlevel definition pending decide behavior expected behavior obvious one something someone new ember codebase though familiar ember js general could work go back using curly components wait update seems work alright use requires ing case sure intentional though nt able find explicit tests case", "num": "12590", "d": "11/2015"}, {"title": "autofocus route transition", "body": "autofocus input nt appear working transition new route works refreshing browser transition new route input wo nt focus gist example code shows issue one input route", "num": "12589", "d": "11/2015"}, {"title": "test controller action sends action route", "body": "basically controller action calls action handled route test used work upgrading probably updated test helpers nt work anymore jsbin reproduces issue issue seems trying look router somewhere set believe somewhere compiled output function error raised send function name context var edit version works uses different ember embermocha versions narrowing problem definitely seems appeared v embermocha", "num": "12588", "d": "11/2015"}, {"title": "speeding require ember", "body": "stefanpenner looking requireinternal ember seems like get perf preallocating array var reified var length depslength reified preallocated nt need push thoughts", "num": "12586", "d": "11/2015"}, {"title": "rubbish", "body": "npm install g embercli ember new knob cd knob ember serve port enoent file directory open clean install new app nothing extra amp rubbish", "num": "12585", "d": "11/2015"}, {"title": "action bubble controller", "body": "hello first thanks everyone great work playing actions controllers routes ran strange behaviour imo controller action sometimes required using one components require explicit save action controller error action named save found action bubble controller route javascript route actions save function consolelog route save questions specifying event type using handlebars value context require action controller find really consistent regarding standard behaviour another way pass parameter action inside using subexpression action bubbled controller route last case found explanation points guess least undocumented behaviour wrong point doc please find complete running example thx", "num": "12581", "d": "11/2015"}, {"title": "closure actions bubble", "body": "understanding closure actions nt bubble looks true actions attached nested html structure bug intended little twiddle demonstrates", "num": "12576", "d": "11/2015"}, {"title": "attempting install latest ember node package failling", "body": "following versions available npm", "num": "12573", "d": "11/2015"}, {"title": "feature emberapplicationvisit appears breaking build", "body": "revert master fixes revert restore someone chance fix visit cc chancancode", "num": "12572", "d": "11/2015"}, {"title": "warning attribute binding ember recommends incompatible solution", "body": "warnings links documentation recommends using nt work user use instead example mentioned issue already closed deprecation warning updated ember", "num": "12571", "d": "11/2015"}, {"title": "events fired twice type handlers", "body": "writing acceptance test something looks like html click bad news came realized triggering action twice first type second time shortly native digging helper first addon later discover cause jquery triggers jqueryevent first called event fires native event afterwards leading unexpected behaviour case toggling property twice therefore letting unchanged real life code works perfectly native events fired instead nt know kebab actions also receive native events affected solutions see fire real events instead would backwards incompatible guess dispatcher would catch turn jquery events regular events real life also mimics real behaviour better b accept second argument helpers clearly backwards compatible leaves us different paths firing events thoughts", "num": "12569", "d": "11/2015"}, {"title": "routename index undefined properties", "body": "hey trying set model route although returning simple array makes work calling findall modelname throws following error router looks like exactly", "num": "12568", "d": "11/2015"}, {"title": "bug rsvp different onerrordefault behaviour testing breaks tests", "body": "trying test error handling application route action found working fine development adapter error successfully handledsupressed tests always output handler reached short developmentproduction errors rsvp thrown normally handledsuppressed route actions inside testing errors rsvp output immediately leaving route hooks unable suppress error results failing tests tracked problem different behaviour test environment workaround rsvp test behaviour tests expecting adapter errors handled route actions disableenable rsvp error handling javascript copy onerrordefault describe acceptance authentication function beforeeach function emberrsvpoff error quite nonobvious behaviour would expect error handling flow tests development possibly related ember version ember data version", "num": "12567", "d": "11/2015"}, {"title": "windows xp blue screen adobe air browser", "body": "tried open emberjs official website using adobe air browser windows machine crashed right away blue screen death dump error dump file crash time pm bug check string resourcenotowned bug check code parameter parameter parameter parameter caused driver caused address file description product name company file version processor crash address stack address stack address stack address computer name full path e processors count major version minor version dump file size dump file time pm", "num": "12563", "d": "11/2015"}, {"title": "mistake documentation", "body": "hello thanks awesome framework reading documentation found mistake last topic page set method referred accessor mutator regards ozan m\u00fcyessero\u011flu", "num": "12560", "d": "11/2015"}, {"title": "regression ember ember component attributes updated initialization using thisset", "body": "jsbin demonstrating issue related issue updated component called like shown", "num": "12556", "d": "11/2015"}, {"title": "embercontainerinjectowner checklist", "body": "x implement concept discussed help ensure full access container possible complete valid set deprecations method property accessed primary scenario affects already deprecation factory instantiated x ensure embertesthelpers detects functions properly feature x document functions api docs x audit update guides details fairly sure discussion guides considered private api ever might want add prose dependency injection needs another pr explain usage x update emberdata ensure deprecations triggered x add deprecation guide entry deprecation added cross link deprecation url done x update liquidfire prevent deprecations x update", "num": "12555", "d": "11/2015"}, {"title": "tagless components issue beta canary", "body": "typeerror triggered attempting use tagless component although seems occur component js file creating js file component makes issue disappear issue seems introduced pr error twiddle showing error js file twiddle error includes js file", "num": "12554", "d": "11/2015"}, {"title": "issue ember", "body": "using loop javascript ember js returning methods attached prototype var consolelog returns super nextobject firstobject lastobject etc eliminate loop", "num": "12553", "d": "11/2015"}, {"title": "potential deopt reading", "body": "", "num": "12552", "d": "11/2015"}, {"title": "bug handling route error hook tests", "body": "hey appears change ember ember work regarding error hook older iterations ember error handled error hook nt treated failed assertion test environment version treated failed assertion based integration test appears throwing error application intent however change nt identified anywhere mentioned documentation bug brought issues appears causing confusion us intent testing error behaviours fact documentation states error actions bubble way applicationroute fire default error handler logs error specify global default error handler overriding error handler applicationroute source would lead believe error hook nt return true error nt bubble sent default error handler written really basic test app building circle ci two ember version branches showing differences test outcomes sure correct fix adjust documentation test added ensure error throw application error hook returns false attach pr proposed test fail given error thrown regardless error bubbling", "num": "12547", "d": "11/2015"}, {"body": "nt really bug using element space allowed use inline version element assignment attribute though using demo would look like value falsey means attribute removed", "d": "11/2015"}, {"body": "boolean helper would make bit cleaner", "d": "11/2015"}, {"body": "ok wordy assert would save tons time runtime compile time error nt care human readable thing", "d": "11/2015"}, {"body": "ended", "d": "11/2015"}, {"body": "ruz absolutely agree", "d": "11/2015"}, {"body": "talking splat similar primitive template layer accomplish something like early sketch nt assume saying means final form think mmun ideas fyi typically qa goes stackoverflow forum feature requests reported issue rfc repo", "d": "11/2015"}, {"body": "good use case", "d": "11/2015"}, {"body": "discussion like see params spreading hash spreading", "d": "11/2015"}, {"body": "link dynamic number models already possible ergonomic share jsbin shortly", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "im going close exploration likely rfcrfc issue", "d": "11/2015"}, {"body": "another example another project", "d": "11/2015"}, {"body": "dupe would fixed", "d": "11/2015"}, {"body": "getting saucelabs set ember data made notice glad fixed think need point release changes apply also concerned previous versions ember", "d": "11/2015"}, {"body": "ya need release updated version htmlbars ember versions kinda like lts release beta", "d": "11/2015"}, {"body": "confused babel handling", "d": "11/2015"}, {"body": "mmun nt believe old builds always used babel", "d": "11/2015"}, {"body": "fwiw thanks stefanpenner may simple bumping version rebuild", "d": "11/2015"}, {"body": "nothing simple older deps npm p", "d": "11/2015"}, {"body": "issue tracker intended questions like please see extensive list platforms including stack overflow official forum irc slack however starting points change apps root element easily since default document body probably nt want also define view component application root since routable components ready yet would create new view file use component inside likely give control looking create paste import ember ember export default embercomponentextend classnames something application view class named something tagname div height appropriate solution also since application one root view selector correct solution second update actually perfectly fine questions close ticket create tagged question stack overflow", "d": "11/2015"}, {"body": "thanks info sorry posting wrong place", "d": "11/2015"}, {"body": "provide demo use see seeing going hard help without one", "d": "11/2015"}, {"body": "unfortunately ca nt share actual code proprietary sensitive project try create snippet js bin nt know manage reproduce isolated setting removed queryparams controller nt run issue anymore", "d": "11/2015"}, {"body": "debug ember debug ember data debug jquery", "d": "11/2015"}, {"body": "ca nt believe typo closing", "d": "11/2015"}, {"body": "use issue tracker issues bugs ember questions like better suited stack overflow geared much better qa style please link back post issue future travelers come across issue see resolution", "d": "11/2015"}, {"body": "ya definitely assertion use syntax likely assertion check block param point folks guide page discussing demo", "d": "11/2015"}, {"body": "research problem ajax returned response handlebars data empty", "d": "11/2015"}, {"body": "orgertot seems nt return anything property mean like suggest set common headers globally nt explicitly set every time issue ajax call authentication done entering main app isolated business logic looks like use embersimpleauth need read doc carefully fetched route hook controller", "d": "11/2015"}, {"body": "use issue tracker issues bugs ember questions like better suited stack overflow geared much better qa style please link back post issue future travelers come across issue see resolution", "d": "11/2015"}, {"body": "emberdata resides typically encourage qa still issues opened stackoverflow forums", "d": "11/2015"}, {"body": "stefanpenner supposed like improvement rather qa thank pointing cheers", "d": "11/2015"}, {"body": "btw often see deprecations tell modify property hook ca nt find anything modifications two hooks example bug mentioned set property hook also warning making crazy components often need dom calculations depends actually rendered property needs recomputed dom changes like heightwidth position etc ca nt hook might misunderstand ignore something important hope someone help clear confusions", "d": "11/2015"}, {"body": "setting array property nt problem maybe observer somewhere also modifying property could post full code", "d": "11/2015"}, {"body": "ptgamr confirm one place set property reproduce demo embertwiddle write method like mentioned", "d": "11/2015"}, {"body": "ok see mangage put twiddle setting property amp access property template make infinite call example didrender update property view updated didrender hook", "d": "11/2015"}, {"body": "ptgamr understand explanation actually thinking way first later change part problem gone works still set property ies instead set one property array set two properties nt make sense", "d": "11/2015"}, {"body": "ptgamr inspiration made test javascript instead setproperties thissetproperties thresholdx thresholdy set individually thisset thresholdx thresholdx thisset thresholdy thresholdy works fine change array even contain one element infinite call pretty sure allowed currently busy finish project ca nt tracking code execution flow hope someone take look", "d": "11/2015"}, {"body": "guessing set property current value nt trigger change notifications set array even though contents triggers change notifications causes rerender sets value ends infinite loop primitives wo nt happen notice nt end rerendering time", "d": "11/2015"}, {"body": "url generated", "d": "11/2015"}, {"body": "polymer element needs event change use action helper make function update value event", "d": "11/2015"}, {"body": "unfortunately outside polymer use notify true setting need get handle element component route could add event listener didinsertelement", "d": "11/2015"}, {"body": "may missing docs topic although sort help typically different stackoverflow suspect core enough concern track relevant doc work", "d": "11/2015"}, {"body": "may actually something open", "d": "11/2015"}, {"body": "ultimately duplicate root cause added note end one point needs done", "d": "11/2015"}, {"body": "nt seem like bug report going close", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "sorry nt really understand reported seems like might x type question much better suited stack overflow andor community slack group", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "stack overflow site pretty nice help section think help figure post question", "d": "11/2015"}, {"body": "issue \u8fd9\u91cc\u662f\u62a5\u544a bug \u4ec0\u4e48\u8be5\u600e\u4e48\u529e \u7684\u95ee\u9898\u6700\u597d\u5230 stackoverflow", "d": "11/2015"}, {"body": "\u8fd9\u4e2a\u94fe\u63a5\u662fstackoverflow \u4f60\u53ef\u4ee5\u5728 stackoverflowcom \u5982 chenxsan", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "trick findingwiring eviction policy lazy loading", "d": "11/2015"}, {"body": "time took care one big pain spot totally follow lazy load issue", "d": "11/2015"}, {"body": "cache misses resolve checked early real work done agree stefanpenner cache miss eviction definitely problem likely expose api clearing caches actually make lazy loading story better", "d": "11/2015"}, {"body": "unless tested branch master discourse yall running ember cache misses", "d": "11/2015"}, {"body": "rwjblue great know really want discourse dual boot latest need find time make happen would totally move new ember faster", "d": "11/2015"}, {"body": "really want discourse dual boot latest yeah definitely would great get yall testing things earlier spot sorts issues ship version would totally move new ember faster indeed definitely working", "d": "11/2015"}, {"body": "going close since suggestion cache misses already implemented released", "d": "11/2015"}, {"body": "probs awesome improved latest sunday november robert jackson notifications githubcom wrote closed reply email directly view github", "d": "11/2015"}, {"body": "far know private undocumented think one point though made testing guides maybe embercli test generator certain maybe rwjblue shed light", "d": "11/2015"}, {"body": "change call thissendaction strange behaviour upgraded embercliqunit everything works like charm", "d": "11/2015"}, {"body": "believe valid hash argument closure style actions update docs ensure clear make work would need create wrapper helper call example", "d": "11/2015"}, {"body": "labeling documentation issue", "d": "11/2015"}, {"body": "okay thanks", "d": "11/2015"}, {"body": "duplicate load ember template compiler", "d": "11/2015"}, {"body": "think know happening right would quick fix dinner check later", "d": "11/2015"}, {"body": "feature exist would seems like related internal use definitely bug", "d": "11/2015"}, {"body": "feature exist would bugfix beta course mistake", "d": "11/2015"}, {"body": "something like works whether thistransitionto error also work work provide error warning behaving expected", "d": "11/2015"}, {"body": "adamknights think context eg error object intended behavior", "d": "11/2015"}, {"body": "pixelhandler agreed wanted think rather nothing single argument show warning error", "d": "11/2015"}, {"body": "adamknights well api docs say argument optional found either use routes error handing eg notfound servererror etc use error substate default behavior call transition error substate code seems special handing error substates obvious via guides api docs personally nt think good practice mix catching error transition default error substates portion ember codebase could use documentation guides andor improvements implementation eg using code", "d": "11/2015"}, {"body": "cc machty", "d": "11/2015"}, {"body": "caused line combination sealing inside", "d": "11/2015"}, {"body": "able reduce jsbin complexity bit still show issue", "d": "11/2015"}, {"body": "toying around issue load order modules working demo failing demo working failing", "d": "11/2015"}, {"body": "basically includes embermetal runtime loaded first modules loaded try add property", "d": "11/2015"}, {"body": "would nt affect embercli applications", "d": "11/2015"}, {"body": "rondalesc correct", "d": "11/2015"}, {"body": "interesting bug globals still work specified correct order close", "d": "11/2015"}, {"body": "rondalesc unsure definitely wonderful used work work", "d": "11/2015"}, {"body": "true sure get effect without order dependence", "d": "11/2015"}, {"body": "honestly think drop mixins rare ember cli world assign namespace", "d": "11/2015"}, {"body": "rwjblue strip use strict debug builds", "d": "11/2015"}, {"body": "understand going nt catch debugseal normally noop template compiler makes noop intended would caught error debug functions actually worked via module import", "d": "11/2015"}, {"body": "strip use strict small number modules think work around nasty ios bug", "d": "11/2015"}, {"body": "confirm works broken versions jsbin written sloppy though far able trace looks like problem legacy view bindings causing computed property watched properly thats guess time elegant workaround would wrapping textfield using component nt extend textfield add computed property turn uses textfield template another workaround would changing setter computed property set key value thisset dirtyvalue value thisnotifypropertychange value return value", "d": "11/2015"}, {"body": "seems like way workaround issue maybe different implementation need make computed added behaviors value bound property pass text input component sometimes creative bind value sometimes proxied property controller property apply value model later buffer changes jsbin example show overriding broken release channel ember likely bug curious may workaround well maybe better way achieve use case", "d": "11/2015"}, {"body": "duplicate believe", "d": "11/2015"}, {"body": "rwjblue could specifically caused way textfields value property gets bound thing regular components cps works fine", "d": "11/2015"}, {"body": "methods names imply called removal one would indeed expect parentview still available potentially issue addon developers", "d": "11/2015"}, {"body": "foxnewsnetwork private api best reply private api perhaps design need change maybe closure action used instead parent component call whatever pubic api needed clean", "d": "11/2015"}, {"body": "pixelhandler good point needed bunch properties parent component wound following templates components used bit reminiscent rails handles forms", "d": "11/2015"}, {"body": "foxnewsnetwork ember cases yielding much fewer instead use contextual components create closure private state want components share going close doubt get much traction adding particular hook strongly encourage explore new component stuff foxnewsnetwork please reopen missing anything", "d": "11/2015"}, {"body": "one seems related also similar issues app", "d": "11/2015"}, {"body": "also struggling idea would helpful timeline heap profile", "d": "11/2015"}, {"body": "lmcardle unfortunately helpful thing valuable actual examples demonstrating leaks", "d": "11/2015"}, {"body": "thoughts debug yes heap snapshot find retainers address", "d": "11/2015"}, {"body": "took look although may leaks believe found bug appears leaking due inlined function preserving context digging found seems indicate function nt close anything via compiled code related deopt info retaining resolver following stack appears inlined causing grief resolvenormalize thisregistrynormalizefullname thisapplicationregistrynormalizefullname registryprototyprnormalize pinged mraleph twitter recommended disabling inlining try manually preventing specific set functions inlining also prevents leak hacky patch container leak noticed went away cc dgeb x open issue x reasonable workaround spot fixes feel terribad scenario solve issue hacky patch basically move away shadowing methods instances rather using subclassing", "d": "11/2015"}, {"body": "fyi searching memory leaks examples create excessive noise creates distractions make finding source leak difficult key finding minimal setup required cause leak basically deleting parts example leak stops following process concise example remain deleting nearly everything leak still obvious made much easier time debugging ultimate leak appears bug several workarounds possible one workarounds full reinstating provided tests also longer leak containers", "d": "11/2015"}, {"body": "stefanpenner sounds interesting would live detect previous runs performed", "d": "11/2015"}, {"body": "detect previous runs performed unsure would live think cc fivetanley", "d": "11/2015"}, {"body": "nt dug exactly happening yet definitely bug", "d": "11/2015"}, {"body": "working also taking look since seem touch classes notice attrs different case rerender contains right value need see closure component relates rerender", "d": "11/2015"}, {"body": "think know happening check tonight morning", "d": "11/2015"}, {"body": "submitted pr fixing shortcat rerendering done soon preventing arguments closure component passed", "d": "11/2015"}, {"body": "serabe thanks work fix would able look updated twiddle tried clarify expecting behaviour actually see console essentially think firing correct value might expecting wrong thing", "d": "11/2015"}, {"body": "reopening review", "d": "11/2015"}, {"body": "think ember twiddle updates fix ok rwjblue know way test twiddle current master", "d": "11/2015"}, {"body": "seems working properly using correct sha ember canary confirm", "d": "11/2015"}, {"body": "confirm working thanks apologies miscommunication rwjblue slack", "d": "11/2015"}, {"body": "rfc suggests able send along additional attributes contextual components add attr contextual component twiddle additional attribute additional seems wipe closed attributes", "d": "11/2015"}, {"body": "please send updated tweedle seems work", "d": "11/2015"}, {"body": "serabe yup notice difference console add extra attribute myprop increment", "d": "11/2015"}, {"body": "see proper support glimmer components still making take account thank", "d": "11/2015"}, {"body": "ok thanks blocks feature need create select box component place track issue", "d": "11/2015"}, {"body": "pr referenced", "d": "11/2015"}, {"body": "thanks putting together list", "d": "11/2015"}, {"body": "im avoiding windows work take stab", "d": "11/2015"}, {"body": "making sublist good good maybe export var", "d": "11/2015"}, {"body": "also nt include templatecompiler feel like would nice use rollup", "d": "11/2015"}, {"body": "updated checkout outline remaining work also completed log hanging work source remaing global pains embertemplates support public api may want change someday could isolate internals something like late provides higher level api around global emberstrings support public api may want change someday could isolate internals something like late provides higher level api around global emberextendprototypes internal abstraction similar templates strings may unify emberimports emberlookup used quite bit according gh suspect isolate like suggestion", "d": "11/2015"}, {"body": "components template scope component instance case also since question bug probably question stackoverflow discuss", "d": "11/2015"}, {"body": "workmanw correct please feel free link back discuss andor stack overflow post", "d": "11/2015"}, {"body": "seems like bug", "d": "11/2015"}, {"body": "instantiate template components side effect decision work would either instantiate component figure injections would done container inject context template component would also figure deal things like type things also work today template components ensure initial render speed template components regress absolutely agree bug fix", "d": "11/2015"}, {"body": "rwjblue curious performance decision instantiate template components get issue sideeffect decision curious benefit decision eg maybe documentation issue using template components injections soup template components", "d": "11/2015"}, {"body": "curious performance decision instantiate embercomponent template components believe one factor performance sure others wycats tomdale would chime detailed reasoning", "d": "11/2015"}, {"body": "mikepost yeah mentioned right sufficient locks trek curious concepts need surfaced level api docs think", "d": "11/2015"}, {"body": "conversation slack emberviewemberattributebindingssupport mixin rwjblue saladfork docs go mixin update embercomponent whatever name", "d": "11/2015"}, {"body": "passed nonempty string never false perhaps meant", "d": "11/2015"}, {"body": "right closing", "d": "11/2015"}, {"body": "believe intended shortcut means technically block since one form expands wycats tomdale chancancode confirm", "d": "11/2015"}, {"body": "friendly pointright", "d": "11/2015"}, {"body": "yes intent moment", "d": "11/2015"}, {"body": "general think using hash helper template better solution number things ca nt take advantage jsland still would prefer js definition instead think addon providing functionality makes sense adding another computed macro core", "d": "11/2015"}, {"body": "agree hash helper template ca nt wait play around closurecomponents however nt see suitable candidate", "d": "11/2015"}, {"body": "olivierlesnicki closure components actions created templates thus hash macro js nt really provide benefit use cases would also prefer see addon perhaps would consider ember trying conservative add fewer macros thank olivierlesnicki", "d": "11/2015"}, {"body": "however nt see collect suitable candidate hash sure mean point would opposed almost new macros added giant grab bag mostly extremely difficult share utilities early ember timeframe longer true trivial make consume addon helpful macro", "d": "11/2015"}, {"body": "nt think follow please provide runnable demo shows mean", "d": "11/2015"}, {"body": "mvuckovic would definitely welcome example jsbin ember twiddle however believe behavior describe component template context component invocation correct template component equivalent part layout thus scope invocation restored going close please reopen provide information think regression otherwise misunderstood cheers", "d": "11/2015"}, {"body": "apologise bad explanation lack demo wanted components able extend modal component inherit functionality ui provide content inside demo understand happening works intended use partial templatename instead yield expected component would able wrap layout still access template", "d": "11/2015"}, {"body": "supposed work written first place work invoked glimmer component angles serabe going take peek spare time since angles behind ff nt huge rush yeah coordinating serabe helping would welcome seems work alright use haha insane work smile also vaguely related creating components closures ensuring work", "d": "11/2015"}, {"body": "mixonic great try whip pr next days seen nt look difficult", "d": "11/2015"}, {"body": "seems work alright use component haha insane work technically fine actually expected componentnodemanager want allow helper invoke either angle bracket curly bracket components need little thought removing assertion example using would mutable object autowrap helper curly bracket invocations", "d": "11/2015"}, {"body": "rwjblue thanks chiming want allow component helper invoke either angle bracket curly bracket components need little thought removing assertion nt thinking removing assertion instead intended investigate whether would possible make work passed see point mutability though assume falls needs higher level discussion maybe rfc category", "d": "11/2015"}, {"body": "nt thinking removing assertion instead intended investigate whether would possible make work passed component renatozannon ya nt trying suggest would take improper shortcut fix specific thing requiring folks use vs would make node manager understand three states curly angle nt matter really need nail mutability scenario tackling falls needs higher level discussion maybe rfc category nt really think needs rfc would like one angle bracket implementers chime choose path forward wycats tomdale chancancode thoughts angle brackets invoked allowed mutable object thoughts", "d": "11/2015"}, {"body": "believe consensus glimmercomponent could used automut would apply normal glimmer component semantics", "d": "11/2015"}, {"body": "believe consensus glimmercomponent could used automut would apply normal glimmer component semantics notes automut happens compilation step absolutely knowledge target iow nt know one invocation another runtime auto applied way currently know added automut infrastructure user template means make fix removing mutable object attrs could fixed adding flag automut", "d": "11/2015"}, {"body": "sorry delay tomorrow catching flight india b two weeks quite likely time address far like rwjblue idea marking automut unboxing fri nov robert jackson notifications githubcom wrote believe consensus glimmercomponent could used automut would apply normal glimmer component semantics notes automut happens compilation step absolutely knowledge target iow nt know one invocation component embercomponent another emberglimmercomponent runtime auto mut applied way currently know mut added automut infrastructure user template means make component component fix removing mutable object attrs could fixed adding flag mut automut reply email directly view github", "d": "11/2015"}, {"body": "similar issue search field uses autofocus parent route whenever child route gets rerendered due automatic search results search field loses focus child template even though child template autofocus fields", "d": "11/2015"}, {"body": "similar issue fixed little component javascript import textfield embercomponentstextfield import embereventedon text input autofocus class focusinput public export default textfieldextend focus element inserted dom return void becomefocused didinsertelement function focus", "d": "11/2015"}, {"body": "topaxi done well nt however", "d": "11/2015"}, {"body": "post link twiddle gist", "d": "11/2015"}, {"body": "pixelhandler feel free modify need", "d": "11/2015"}, {"body": "unfortunately nt something embers control least believe autofocus works browser detail automatically ember would likely result even poorer ux best solution tune manually similarly suggested", "d": "11/2015"}, {"body": "work around using latest version embermocha", "d": "11/2015"}, {"body": "need similar fix done controllers", "d": "11/2015"}, {"body": "also wonder somehow get rid recursion make way easier js engines optimize", "d": "11/2015"}, {"body": "preallocating sounds fine easy enough like see via benchmarks makes practical difference", "d": "11/2015"}, {"body": "samsaffron best way reduce cost less currently ember far much upfront internal requiring hits pretty hard invert make paygo pr demonstrates pretty substantial win needs someone cycles move idea forward", "d": "11/2015"}, {"body": "samsaffron yes reified shouldcould preallocated", "d": "11/2015"}, {"body": "samsaffron time would love get quick dirty benchmark suite loaderjs maybe using", "d": "11/2015"}, {"body": "patched embers heavily patched loader going update loaderjs proper realized already", "d": "11/2015"}, {"body": "ember nt use loader", "d": "11/2015"}, {"body": "begun life together embers loader hacked would nice reconverge point", "d": "11/2015"}, {"body": "information anywhere differences two context used", "d": "11/2015"}, {"body": "ember nt use loader begun life together beginning ember loader like different versions inlined various projects embercliloaderjs extracted made primary one information anywhere differences two diff", "d": "11/2015"}, {"body": "move addonify ember want app ember sure loader believe form unification must done", "d": "11/2015"}, {"body": "duplicate embercliembercli understand bugs frustrating please respectful people giving free time work stuff", "d": "11/2015"}, {"body": "plenty respect contribute means selfpublicising quality input little", "d": "11/2015"}, {"body": "nice contribution next time could submit pr fix problem", "d": "11/2015"}, {"body": "issue report unrelated ember internal development iswas issue dependency embercli tracked please follow issue developments", "d": "11/2015"}, {"body": "plenty respect indeed definitely comes well", "d": "11/2015"}, {"body": "helper works bit differently compared normal actions contexts affect behavior action helper attribute context handlebars value context contexts helper called closure action helper behavior simple passed function name read function actions property current context function read function passed create closure function arguments context action defined element space context template controller actions used way bubble routes controller implement specified action action hits route bubble route hierarchy context need defined bubble route", "d": "11/2015"}, {"body": "ok thanks lot response understand technical differences even comfortable lack consistency two behaviour imo two cases conceptually different admint difficulties understand different behaviour main point imo annoying one way pass parameters action inside helper found really really strange provide action controller handle additional parameter let imagine used able handle action route reason another deal action param understand change app add controller nothing explicit call sendaction route even possible action bubble even", "d": "11/2015"}, {"body": "bmeurant difference definitely painful one intended permanent work underway improve situation two rfcs land perhaps legacy element space actions deprecated suggest always use closure action example passing closure action instead string opt new world instead bubbling one need send action route often practice component controller deal models controllers deal transitioning routes controller using using techniques avoid bubbling inconsistency entirely action bubble even return true closure actions simply functions return value returned site invocation immensely powerful incompatible meaning action bubble general new actions take advantage lexical scoping matching behavior plain javascript transition bit bumpy new world far familiar new developers memorizing bubbling rules leave open deprecated elementspace actions though probably wo nt closed one pr", "d": "11/2015"}, {"body": "question related issue", "d": "11/2015"}, {"body": "mixonic sir really make clear simple answer really add documents", "d": "11/2015"}, {"body": "mixonic thx answer links rfcs read closely moving consistent solution good thing closure actions appear really powerfull indeed said sure understand consequences means element space actions deprecated required provide controller component action handler bubble anymore route nt totally comfortable point use handle many actions routes actions concerning retrieving model sending dealing api errors redirections etc imo routes best place handle beacause closely related routing manage cancellation rollback willtransition example even right model reached transitions called controllers components routable ones nt see operations responsibility controller component means ember amp force catch action controller rethrow want handle routes bother little think ember strength require us add boilerplate non value added code maybe missing something else", "d": "11/2015"}, {"body": "means ember amp force catch action controller rethrow want handle routes bother little think ember strength require us add boilerplate non value added code bmeurant routes controllers know soon routable components normal components replace info", "d": "11/2015"}, {"body": "means ember amp force catch action controller rethrow want handle routes well nothing forced even doubt deprecation want move things slowly deliberately yes bubbling gone longer discussion seems appropriate ticket discussed improved actions rfc elsewhere tl dr bubbling though well understood master still difficult use new developers even experienced developers given template calling basically need guess handler new actions system designed static predictable given know possibly defined current component controller know variable see came case passed attr cases block param confident system easier understand work bubbling solution addition get bonuses like actions really return value fantastic new curryingpartialapplication behavior using closure patterns boilerplate fear tremendously minimal passing action easy passing variable routable components route provide actions component", "d": "11/2015"}, {"body": "passing action easy passing variable routable components route provide actions component attrs sounds wonderful prefer business logic routes would wonderful able ability pass actions via mechanism firm idea passing actions routes work cf would pass function references property routes", "d": "11/2015"}, {"body": "timevans yeah details implementation obviously stuff rfc nt know exactly look like routable component provided route thus would also provided route component", "d": "11/2015"}, {"body": "thanks clarifying glad know gon na part routable components", "d": "11/2015"}, {"body": "mixonic thanks answering still dig little stuff routable components etc anyway right discussion long ticket take closer look previously pointed rfcs thanks", "d": "11/2015"}, {"body": "davidsteinberger twiddle working expected click event bubbles dom correctly meant actions bubbling closure action targeted controller never redirected router turn would check active routes defined action ie bubbling routes contrast nonclosure actions bubble routes action targeted controller action defined controller", "d": "11/2015"}, {"body": "mmun thanks explanation makes totally sense want prevent bubbling dom proper solution", "d": "11/2015"}, {"body": "davidsteinberger yes", "d": "11/2015"}, {"body": "none available versions actually working indexjs results version version", "d": "11/2015"}, {"body": "official package us ember historically shipped changing month sorry confusion", "d": "11/2015"}, {"body": "stefanpenner pr rfc follow", "d": "11/2015"}, {"body": "likely reserve ember package something else release ember package sentinel throws helpful message user tries use cc think mentioned anychance required cycles", "d": "11/2015"}, {"body": "stefanpenner thanks", "d": "11/2015"}, {"body": "referenced warning points solution described work properly see provided jsbin call example deprecation guide", "d": "11/2015"}, {"body": "rwjblue ah see thanks heart", "d": "11/2015"}, {"body": "quick update created async helper basically copy current one firing native mouseevents focus replaced every invocation test suite run without problem makes think firing native elements option retrocompatible", "d": "11/2015"}, {"body": "cibernox yes test helpers trigger via raw dom jquery level many cases users libraries use jquery triggering jquery world causes much grief solution like required believe originally supporting motivator unsure suspect might fine approach atleast things possible investigate compat hopefully dictate land improved handler", "d": "11/2015"}, {"body": "nt believe would take much time would translation jquery trigger native trigger remember inconsistencies browsers triggering keyboard events workarounds however also another task might want tackle first acceptance test helpers part ember core seems part embertesthelpers perhaps another addon see reason tie together people nt need wait ember get fixes like core team feel breaking apart", "d": "11/2015"}, {"body": "see reason tie together people nt need wait ember get fixes like think supplementary addon could created decide removeadd helpers reality added core lacked good addon system might something leaves core goes addon alternative set helpers could provided via addon", "d": "11/2015"}, {"body": "case rather attempt fix ember long backwards compatible proves possible create addon helpers", "d": "11/2015"}, {"body": "case rather attempt fix ember long backwards compatible much long backwards compat", "d": "11/2015"}, {"body": "native events like references real life", "d": "11/2015"}, {"body": "share various versions stuff atleast version ember", "d": "11/2015"}, {"body": "embercli node npm debug ember debug ember data debug jquery", "d": "11/2015"}, {"body": "mohamadatieh good idea create jsbin jsfiddle embertwiddle example code broken sometimes effort isolating error simple example show either mistake even expose bug worked", "d": "11/2015"}, {"body": "changing serializer jsonapiserializer made error disappear look code adapter extends restapi serializer extends jsonapi working understand", "d": "11/2015"}, {"body": "believe fix issue test", "d": "11/2015"}, {"body": "tested order changed action application route hit first still output breaks test", "d": "11/2015"}, {"body": "hmm error action return true", "d": "11/2015"}, {"body": "return handles error default keep bubbling per however returning either results issue", "d": "11/2015"}, {"body": "thought chance could related would thought people would running issue bug within ember especially referenced bugfix says lt ok", "d": "11/2015"}, {"body": "closing think tests hitting slightly different path thought", "d": "11/2015"}, {"body": "kk please ping want another set eyes", "d": "11/2015"}, {"body": "web control inside flex app actually official browser kind adobe provide additional references", "d": "11/2015"}, {"body": "quick google reveals web control kind flex may using old stale version webkit may also issues loadingrunning adobecom anyways might looking wrong tech information would great", "d": "11/2015"}, {"body": "gave try maybe meant osx seems load stuff correctly discussemberjscom even works correctly", "d": "11/2015"}, {"body": "stefanpenner thanks lot reply problem specific windows xp service pack wo nt able replicate osx installed browser xp able replicate blue screen issue well", "d": "11/2015"}, {"body": "need information browser actually suspect old broken webkit would like confirm writing wo nt fix ideally support anything reasonable need facts fact causing blue screen would indicate serious bug browser potentially even security concern", "d": "11/2015"}, {"body": "stefanpenner spent time investigate found root cause actually fontawesome angular js website also crashed xp machine remove library webpage loads issue could closed thanks help", "d": "11/2015"}, {"body": "could open issue guides repo", "d": "11/2015"}, {"body": "hello josemar sorry mistake happend reporting mistake opened issue guides regards ozan m\u00fcyessero\u011flu", "d": "11/2015"}, {"body": "maybe related", "d": "11/2015"}, {"body": "yes quaertym believe probably root issue", "d": "11/2015"}, {"body": "issue attrs proxy copying initial values called still within constructor think potential solution also mean small work reduction initial render try update next day", "d": "11/2015"}, {"body": "looks like functions properly beta canary branches", "d": "11/2015"}, {"body": "submitted ensure test would fail fails", "d": "11/2015"}, {"body": "working demos beta canary", "d": "11/2015"}, {"body": "thanks rwjblue found another use case similar work even canary worked fine let try add test", "d": "11/2015"}, {"body": "sorry submitted blindly ember dependencies compatible node version could run tests locally", "d": "11/2015"}, {"body": "looks complete thanks putting together list rwjblue", "d": "11/2015"}, {"body": "dgeb attempt docs stuff tonight guides review hope free tricky bits", "d": "11/2015"}, {"body": "mixonic thanks best ping questions new stuff", "d": "11/2015"}, {"body": "feature enabled default working embertesthelpers updates make sure handled properly", "d": "11/2015"}, {"body": "sounds good tackle", "d": "11/2015"}, {"body": "fwiw guides given cursory review though undertaken long prose dynamic lookup think may appbased use case cases around testing usually testing internals", "d": "11/2015"}, {"body": "thanks mixonic", "d": "11/2015"}, {"body": "published polyfill addons use pretty easily", "d": "11/2015"}, {"body": "timevans working updating embertesthelpers provide properly", "d": "11/2015"}, {"body": "emberqunit embermocha versions released take advantage new feature checking item checklist", "d": "11/2015"}, {"body": "took time update emberdata hoping changes make ember data ember data would perfectly fine", "d": "11/2015"}, {"body": "emberdata pr merged checked liquidfire pr submitted", "d": "11/2015"}, {"body": "dgeb begun work bullet point", "d": "11/2015"}, {"body": "rwjblue sorry delay try wrap tomorrow", "d": "11/2015"}, {"body": "added url deprecation deprecation guide", "d": "11/2015"}, {"body": "mixonic initial guide audit mentioned created track updating di page mentions checking item", "d": "11/2015"}, {"body": "updated", "d": "11/2015"}, {"body": "implemented fake container injection", "d": "11/2015"}, {"body": "thanks dgeb fix merged completing last item checklist closing please let know forgotten something", "d": "11/2015"}, {"body": "found well seems property nt set tests", "d": "11/2015"}, {"body": "tracked tests pass commit fail afterwards may needs update handle sure", "d": "11/2015"}, {"body": "see checklist feature", "d": "11/2015"}, {"body": "seems owner property renderenv nt set tests yes embertesthelpers definitely needs tweaks work canary issue affect beta branch also demonstrating issue", "d": "11/2015"}, {"body": "super anything help rwjblue", "d": "11/2015"}, {"body": "following configuration fix", "d": "11/2015"}, {"body": "ok closing", "d": "11/2015"}, {"body": "nt issue ember believe iterates enumerable properties object think looking something like following", "d": "11/2015"}, {"body": "setting extendprototypes false mitigate theory could define prop non enumerable comes perf issues believe pollution prototype bad move working move away please note enumerating array idiomatic via loop nt generally recommended way unless also want pollution mozilla docs even bring point addition run times nt correctly optimize path either hopefully soon wo nt true", "d": "11/2015"}, {"body": "thanks reply", "d": "11/2015"}, {"body": "going close mentioned future work planned continue move away polluting natives default", "d": "11/2015"}, {"body": "hi stefanpenner understand article allocate current code see allocation right vm materialize also aliasing think keep readability code think solution get rid allocation think work make pr javascript function buildinjections container var hash argumentslength gt var injections var injection return hash", "d": "11/2015"}, {"body": "proposal looks good also aliasing container think keep readability code think since never set end world alternatively could", "d": "11/2015"}, {"body": "stefanpenner allowed use babel inside babel use approach turns javascript use strict function getargs container var len argumentslength list array len gt len key key lt len key list key arguments key consolelog list getargs", "d": "11/2015"}, {"body": "pr referenced fails passes identifies differences behaviour around bubbling handled errors", "d": "11/2015"}, {"body": "performing git bisect ember looks like commit broke changed behaviour looks like time commit allowances made handled errors still leaves position currently impossible test operation performed error hook acceptance test", "d": "11/2015"}, {"body": "awesome thanks bisecting", "d": "11/2015"}, {"body": "modified example bit use action catch errors model hooks go elsewhere really sure nongraceful error handling errors application model hooks even look like time contains crucial boot startup logic really nt fail least existing hooks give opportunity catch bug report error notifying services restart page etc think", "d": "11/2015"}, {"body": "nathanhammond try applicationerrorhbs application controller since application route nt succeed think gets error", "d": "11/2015"}, {"body": "nathanhammond stefanpenner nt think bug though nt think thought pods cc wycats rwjblue example error template application", "d": "11/2015"}, {"body": "weird krisselden twiddle link nt open safari chrome", "d": "11/2015"}, {"body": "issue reported embertwiddle opening properly safari", "d": "11/2015"}, {"body": "krisselden works fine app code tried write acceptance test verify acceptanceerror route entered error encountered would work would application controller", "d": "11/2015"}, {"body": "nickiaconis agreed hidden piece code workaround decided make application implicit route name way define sibling needs address pods cc rwjblue wycats", "d": "11/2015"}, {"body": "could supply testdemo actually broken behaviour describe firefox consistent several ember versions extending models past never hit anything like firefox could missed though far tell way emberdata works eachcomputedproperty work intended", "d": "11/2015"}, {"body": "firstly thanks reading replying another jsbin jsbin getting issue firefox iterating attributes model created store skips property observer happening putting together demo shows specific context ran across bit timeconsuming may configure adapters forth think demonstrates issue pretty well way suddenly start skipping attributes happen observe child class code relies eachcomputedproperty broken least seems", "d": "11/2015"}, {"body": "oh think confirming one second jsbin gives much clearer example issue example confirm following firefox using ember inspector instance bar model lastname recognized attribute show look parent class foo persisting model using save payload contain lastname behavior ember potentially breaking emberdata implementations right problem goes much deeper seems definitely breaks eachcomputedproperty since also affects regular attributes level shown first jsbin knows else might work expected sure experienced enough ember debug although curious might even try mean time suggest rewording issue think removing nasty deep bug part would help taken seriously", "d": "11/2015"}, {"body": "glad nt going crazy quite worrying staggered first switched firefox realised half models longer existed haha thanks advice title suggestions making look bit serious experienced issue reporting", "d": "11/2015"}, {"body": "oh mentioned first post seems caused observer setup happens call suspect something way properties inherited added object produced produced possibly something relates kind strange check firefox automatically use loop object imagine firefox viewing observed property lower prototype chain therefore ignores speculation really might helpful", "d": "11/2015"}, {"body": "using docs provided dirty workaround require immediate fix firefox believe bug creation mandatory getters setters extend class computed property correctly recognized descriptor", "d": "11/2015"}, {"body": "ah good work thanks already refactor code obvious breaking places copy definitions childmost class could well missed good temporary hack cover situations way place used even workaround may subtle breakages throughout ember time today might look tomorrow hacking something fixes", "d": "11/2015"}, {"body": "today found time look issue checked master wrote test confused test succeeded firefox already fixed", "d": "11/2015"}, {"body": "ah well good thanks looking tried canary build jsbin still bit uncertain though first jsbin posted still fails clearly still something weird going however sure point affects public facing apis find anything open another issue", "d": "11/2015"}, {"body": "bryanaka make jsbin jsfiddle embertwiddle example behavior perhaps try versions ember release see behavior changed way sounds like bug returning boolean", "d": "11/2015"}, {"body": "bit roughsimple", "d": "11/2015"}, {"body": "pixelhandler believe breaking change introduced", "d": "11/2015"}, {"body": "nagits sounds like feature request see use rfc issues propose rough idea basically great place test waters", "d": "11/2015"}, {"body": "closing rfc likely better approach although doubtful happen rather library provide internationalized string helpers", "d": "11/2015"}, {"body": "kamalaknn perhaps create pull request guides project", "d": "11/2015"}, {"body": "alexanderalvarez sounds like feature request see use rfc issues propose rough idea basically great place test waters", "d": "11/2015"}, {"body": "would able create example using jsbin jsfiddle embertwiddle perhaps instead storefilter return promise content recordarray", "d": "11/2015"}, {"body": "actually might related since happened upgrading component control multiple active instances time related could try using addon embercomputedsortby", "d": "11/2015"}, {"body": "running issue ember trying reversed checked property checkbox like checkbox checked set property setter called checkbox checked unchecked", "d": "11/2015"}, {"body": "vincz nt returning setter basically flipping many times setter return thing getter would return set checkbox sets value means fine still want checkbox true return working example", "d": "11/2015"}, {"body": "update experience ember", "d": "11/2015"}, {"body": "working large emberjs application issue using ember cli called test first thought phantomjs problem happens also firefox phantomjs emberjs tests memory usage increases around mib tests emberjs grows mib currently ember phantomjs crashes around tests memory usage growing around gib advice debug", "d": "11/2015"}, {"body": "without reproduction work hard diagnose", "d": "11/2015"}, {"body": "tried steps julkiewicz lists results new container test chromium always case google chrome case taking memory snapshots one never resuming execution manually execution resumed manually number container objects falls back", "d": "11/2015"}, {"body": "going something similar app migrating ember ember made sure upgrade libs latests improvements qunit emberqunit etc following similar approach wrote something although sure demonstrates problem entirely even issue far hopefully stefanpenner take quick look suggest ideas debug", "d": "11/2015"}, {"body": "update issue still occurs ember", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "ameliadowns gcassie facing issue either found way get cp listening recompute", "d": "11/2015"}, {"body": "davidsteinberger reverted ember time problem seems isolated", "d": "11/2015"}, {"body": "stefanpenner anyone thread confirmed one prs mentioned caused issue try get soonish would help failing test pr anyone interested issue wants see addressed sooner", "d": "11/2015"}, {"body": "krisselden think failing test pr issue", "d": "11/2015"}, {"body": "davidsteinberger gcassie reverted ember", "d": "11/2015"}, {"body": "krisselden yet chance", "d": "11/2015"}, {"body": "seeing issue codebase got cp dependent key never updates even one records definitely becomes dirty suspect need revert ember well work around", "d": "11/2015"}, {"body": "gcassie took look test think fails ember sure shows issue", "d": "11/2015"}, {"body": "seen issue array observer possibly root cause triggering ember", "d": "11/2015"}, {"body": "earlier note per worked around using dependent key fortunately nt revert would still nice see fixed", "d": "11/2015"}, {"body": "tried ember today still see issues", "d": "11/2015"}, {"body": "rwjblue close one", "d": "11/2015"}, {"body": "someone please help write example emblem things tried get work nt get error last example one actually showed options examples empty select value get updated", "d": "11/2015"}, {"body": "using plain html without select tag think onselect action selectchanged selectchange receives function selectchanged event eventtargetvalue", "d": "11/2015"}, {"body": "thanks mxrguspxrt really wanted use mul thing", "d": "11/2015"}, {"body": "try mut thing instead mul thing make sure ember version supports", "d": "11/2015"}, {"body": "note typo mikepost comment", "d": "11/2015"}, {"body": "using dependencies never supported version ember covered test thing work without issue decompose multiple cps", "d": "11/2015"}, {"body": "argue since announced blog post de facto public safe using hooks", "d": "11/2015"}, {"body": "fixed latest", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "also running think quite bad bug always fire stated docs", "d": "11/2015"}, {"body": "bitten well add completely unrelated route js import ember ember export default emberrouteextend beforemodel function thistransitionto works query params seem get stripped get error using thanks", "d": "11/2015"}, {"body": "issue fixed guides think close issue point bratukham future want open issue guides repo love hear nt always catch issues", "d": "11/2015"}, {"body": "fiddles moved embertwiddle updated ember sticky query params working loading template added query params sticky", "d": "11/2015"}, {"body": "possible also related kind similar transition inside existing transition usually always results call though complicated ca nt say sure", "d": "11/2015"}, {"body": "researching looks like kuzirashi done lot great work moving along would love help move forward needs work closed kuzirashi work finished", "d": "11/2015"}, {"body": "kylemellander thanks research think closed", "d": "11/2015"}, {"body": "work around able get sortable table working calling prior changing index however worked property set helper", "d": "11/2015"}, {"body": "jarovdh nothing causing call helper sees obj", "d": "11/2015"}, {"body": "issue dumping ground complaints much actionable provided examples jsbinembertwiddle actually working designed misunderstanding helpers interior object mutations rest misc issues addon breakage please open issue addons", "d": "11/2015"}, {"body": "using js code used example classnamebindings", "d": "11/2015"}, {"body": "movement classifying issue documentation wrong minimum longer intention resetting namespaces", "d": "11/2015"}, {"body": "since never worked properly lets update documentation unfortunate believe intended work \u30c4", "d": "11/2015"}, {"body": "ran resources behavior understanding route replace resource worked resources broken routes seems like functionality lost deprecation", "d": "11/2015"}, {"body": "supposed work resources tested way back never worked correctly point rwjblue making docs reflect currently working", "d": "11/2015"}, {"body": "got thanks danmcclain", "d": "11/2015"}, {"body": "got bitten well although updating docs would prevent confusion work advertised would even cooler update talked alexspeller slack seems like ca nt work advertised think docs need updated thanks", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "also experiencing give little detail particular case seems time called controller using remote pagination null sequence events far infer route receives model emberdatajqxhr route updates default values happening model fetching gets called controller method finishes calling property controller undefined error happens note using computed properties route using emberclipagination though bug occurs setting initial static value", "d": "11/2015"}, {"body": "rwjblue stefanpenner happening ember regression compared", "d": "11/2015"}, {"body": "orkon open new issue", "d": "11/2015"}, {"body": "rwjblue sure opened new one", "d": "11/2015"}, {"body": "fixed", "d": "11/2015"}, {"body": "hi facing problem addon using application implemented wayaround probably bit dirty works used hook documentation called rerender renamed overridden function addon buffer parameter overridden render receiving local buffer rendering tempate using tested solved problem could better solution works moment daniel", "d": "11/2015"}, {"body": "seems bring nice initial render speed improvement", "d": "11/2015"}, {"body": "thank", "d": "11/2015"}, {"body": "chancancode perhaps updated", "d": "11/2015"}, {"body": "case trying retry aborted transition identical results still working ember workaround", "d": "11/2015"}, {"body": "warning solved model working fine without warnings model import ds emberdata export default dsmodelextend procolor dsattr bgcolor embercomputed function var color thisget procolor return new emberhandlebarssafestring backgroundcolor color property procolor template lt div style modelbgcolor gt", "d": "11/2015"}, {"body": "realize rwjblue custom component workaround bug fixed non issue", "d": "11/2015"}, {"body": "bug cursor position embertextfield issue knowledge stable versions ember", "d": "11/2015"}, {"body": "estimated landing time ember fastboot", "d": "11/2015"}, {"body": "ember internal feature fastboot takes advantage new visit api enabled default canary builds planned ember allow emberclifastboot continue improve stability eventually graduate version", "d": "11/2015"}, {"body": "tomdale closing since emberapplicationvisit enabled please reopen update checklist additional items would like track issue", "d": "11/2015"}, {"body": "depending situation may able reverse using cp based query param case using pikaday needs js date want date url could probably avoid using moment helps native date timezone issues", "d": "11/2015"}, {"body": "ran problem well ember gt using emberclibootstrapdatepicker solution set query params actions property compute qps turned back date object initialization done route object contains qps hash nt documented ember guide", "d": "11/2015"}, {"body": "right track complete write simple example show various situations based solution", "d": "11/2015"}, {"body": "agree disagree nightire prefer implementation", "d": "11/2015"}, {"body": "seems got fixed happen ember embercli htmlbars chance crept back error message typeerror read property push undefined objectexportsdefaultwillrender handlekeyword objectkeyword exportsdefault handlekeyword handleredirect objectinline objecthtmlbarsutilobjectutilsmergecontent renderresultpopulatenodes renderresultrender", "d": "11/2015"}, {"body": "first thought components failing computed properties maybe clue one dead simple gets error import ember ember const computed observer run typeof ember jshint ignore line const embera jshint ignore line import layout templatescomponentsaddpageheader export default embercomponentextend layout layout classnames titleblock repo computedalias name npm computed name function const npm name thisgetproperties npm name return npm npm name title computedalias name repoowner default test failing generic renders test", "d": "11/2015"}, {"body": "ksnyde please open new issue reproduction jsbinembertwiddle", "d": "11/2015"}, {"body": "aexmachina think works feel free close issue feel resolved", "d": "11/2015"}, {"body": "tried nt appear work also mention event doc link sent using latest embercli componentsember canary send example project simple templatesapplicationhbs change works controllersapplicationjs import ember ember export default embercontrollerextend actions foo consolelogbind console things action seems receive last value instance indicated docs behaviour happens use component jsbin template used ember always used emberjsjsbincom past using ember", "d": "11/2015"}, {"body": "seeing behavior occurring production builds think fixed ideas would prodspecific though", "d": "11/2015"}, {"body": "yagni indeed removed pr addresses bug likely causing difference proddev retest case beta today stable tomorrow would helpful might wonkiness addressed", "d": "11/2015"}, {"body": "stefanpenner embarrassing amount debugging verify instead", "d": "11/2015"}, {"body": "confirm still issue well calling transition results url updated application getting broken state subsequent calls failed correctly update route workaround longer works nt methods", "d": "11/2015"}, {"body": "guide topic talks sendactions controller somebody add guide", "d": "11/2015"}, {"body": "yanzixiang nt sendactions components controller reference existed action attribute component name component action context bound called closure actions meantime recommended way use actions remember nt send actions try bind actions components possible", "d": "11/2015"}, {"body": "err messages seem fine firefox able click stack traces links big problem wish could use ffx instead chrome machine ffx pages load far faster", "d": "11/2015"}, {"body": "hi like first comment way propertiesobjectofpropertiestobindto trying use component helper dynamic properties thanks", "d": "11/2015"}, {"body": "think safe close issue favour rfc routing service ilovett feel free close issue nt solved rfc would right place continue discussion", "d": "11/2015"}, {"body": "embercli modules think safe close jayphelps totally feel resolved feel free close", "d": "11/2015"}, {"body": "confusing setter could return anything meaningful opinion ember needs cache value invoking setter value imediately returned getter otherwise unecessary confusing duplication responsability striving make component input display value particular formatted way typing input getter never gets invoked must better way duplicating getter logic inside setter javascript import ember ember import formatter servicesformatter export default embercomponentextend format normal value null displayvalue embercomputed get var value thisget value tried without volatile input helper inside component template wrong", "d": "11/2015"}, {"body": "confusing setter could return anything meaningful yes silly something wanted change time unfortunately nontrivial breaking change pushing decorators decorator variation drop support useful simple situations learned complex scenarios get confusing quick", "d": "11/2015"}, {"body": "someone good way refresh skrollr ember thanks sharing find surprisingly hard tried send action view application route use added action route actions still nt right height thinking using terribly hacky edit transition issue using transitionend callbacks helped fix", "d": "11/2015"}, {"body": "leooo heh comments suuuuuuper dated would nt go anything close approach anymore still trouble ping slack", "d": "11/2015"}, {"body": "kind new ember got pretty stuck exception occurring inside rsvppromise would maybe nice even stupider way make sure errors get consolelog like putting default emberonerror embercli generated appjs", "d": "11/2015"}, {"body": "rwjblue used trick starting new project function nt exists anymore working solution", "d": "11/2015"}, {"body": "bargs facing issue able resolve", "d": "11/2015"}, {"body": "believe work around saving variable first load could conditionally check avoid taking actions second load nt work application anymore though nt know fixed future versions", "d": "11/2015"}, {"body": "bargs thanks", "d": "11/2015"}, {"body": "boogie work javascript appmyfield embertextfieldextend keyup function event thissend mano", "d": "11/2015"}, {"title": "typeerror neasing thiseasing function", "body": "code result still learning jquery nt know much believe bug", "num": "2748", "d": "11/2015"}, {"title": "introjs ends opening brace", "body": "see srcintrojs", "num": "2747", "d": "11/2015"}, {"title": "issue nodestrophe module", "body": "installed nodestrophe module jsdom version run file got error set nodename throw new coredomexception upgrade jsdom version error resolved got new error elemattributes nodenametolowercase realname typeerror read property tolowercase undefined indexjs file code var strophe require nodestrophe strophe var strophe strophestrophe var boshservice connection new stropheconnection boshservice connectionconnect abhishek localhost onconnect running file using node index requirement nt need run browser need make connection nodestrophe bosh send message tried running browser using strophejs javascript library latest jsdom workes fine seems problem nodestrophe module please help", "num": "2745", "d": "11/2015"}, {"title": "map method flattening arrays", "body": "hi using little confused output would expect function return array arrays instead returns flat array understanding bug differs beahvior get native js underscore lodash return expected array arrays example js map function el return x el gt x x x jquery deviation standards intentional fixed thanks ps looks like issue referred", "num": "2743", "d": "11/2015"}, {"title": "html nt return dynamically created markup expected", "body": "seems like unexpected behaviour let know mistaken traced couple different things dynamically created markup ends array elements html referenced refers first element array hence inner html first element returned seems like ways fix check thislength gt either return outer html element array nice create fake element div example append element return inner html nicer still great possibly something else thinking familiar code around sure missing edge case scenario able workaround issue means thought seemed odd", "num": "2742", "d": "11/2015"}, {"title": "nodes created srccsssupportjs break dom phantomjs environments", "body": "jquery inserts div dom page load appended element subsequently removed dom invalid state interim since tags valid outside issue web crawlers using phantomjs results html may recorded element removed resulting broken html experiencing issue single page app crawler visits site phantomjs loads requested page served generated html crawler reproduce spoof user agent string visit site using browser developer tools inspect dom see tags et al belong nested within looking source see culprit rogue inserted using pinpointed appended jquery appending maintain compatibility environments tests nt always exist element appended crawlers allow blacklist elements selector luck case work nt suggestion add discrete selector element allow easily blacklisted thinking submitting pr address issue using data attribute selector supported phantomjs well avoids collisions ids classes may wild let know thoughts issue even worth addressing", "num": "2741", "d": "11/2015"}, {"title": "elemfind selector adds id null elem", "body": "elemfind selector adds id null elem reproduce steps open firefox go open console developer tools execute html find zzz go inspector look root html node id null attribute chrome id null absent developer tools html node blinks indicate changes", "num": "2740", "d": "11/2015"}, {"title": "default id selector work expected jquery", "body": "default id selector work expected jquery please fix sample code code var lt var dynamiccontent jquery id dynamic dynamiccontenttext body append dynamiccontent alert jquery select dynamic text var myelement documentgetelementbyid dynamic alert default myelement text", "num": "2739", "d": "11/2015"}, {"title": "uncaught typeerror thisget function queryselectorall find function", "body": "getting error uncaught typeerror thisget function queryselectorall find function error message trying loop forof noniterator property error getting jquery find function", "num": "2738", "d": "11/2015"}, {"title": "add unhandled exception notices deferred", "body": "right exception silently swallowed nt think ship behavior maybe message may end yelling rejections might dealt handler attached later time one possible tradeoff would generate console warnings errors seem programming mistakes prevents really bad mistakes example typo function name complex cases could recommend people use native promise consistently available across supported platforms since easier debug", "num": "2736", "d": "11/2015"}, {"title": "regex replacement html break snippet structure", "body": "hard trace working drupal project discovered appears bug rxhtmltag regex jquery string using reproduce issue reference rxhtmltag regex jquery running jquery html change string thusly note addition extra right b closing slash edittarget removed sure design use case wreaking havoc nt know fix never debugged jquery core deferring experts let know provide additional information might help get fixed", "num": "2734", "d": "11/2015"}, {"title": "browserifyed jquery exposing buggy global object", "body": "numerous guides internet recent versions jquery use browserifyed project like however works within bundled js environment produces really weird bug exposes global function function buggy nonfunctional demo mainjs var require jquery window fix command line packagejson html inside browser latest chrome return get real results using manually attached version believe bug might cause bugs plugins anything autodetects jquery", "num": "2733", "d": "11/2015"}, {"title": "prop selected true work expected", "body": "selecting option prop select true behavior expected testing firefox chrome safari behavior consistent following example two selected ie however result four may comment line andor test cases expected result last prop selected browsers", "num": "2732", "d": "11/2015"}, {"title": "selector two backslashes working", "body": "form documentation use metacharacters amp lt gt literal part name must escaped two backslashes issue two backslash working msg percentage videoid msgvideoidreplace amp lt gt g amp lt", "num": "2731", "d": "11/2015"}, {"title": "attr getter nt accept characters firefox", "body": "following html body html hello following code part prints chrome undefined firefox part prints browsers hit angularjs see info edit dmethvin says works ie", "num": "2730", "d": "11/2015"}, {"title": "package distribution ignores build dependencies npmignore", "body": "may edge case issue even nonissue love hear thoughts required build dependencies ignored based file following commits contribute change currently relying published package module stands right distributed package rebuilt module exclusion various required files ignored looking make hook seems current solution would include building works feels little dirty blame package managers one wink also worth pointing bundling browser exclusion modulesfile size effect thanks", "num": "2727", "d": "11/2015"}, {"title": "release progress", "body": "instead porting bug fixes branch decided go opposite way reverting backincompat commits tried conventional approach first another three proved ineffective since lot conflicts chosen approach prompted use new qunit api style fixes find three lists one reverted commits one questionable commits backcompat might inappropriate release also list reverted commits requires special attention would expect reviewers check lists current state branch verifying api nt include new features nt break backcompat done overall correctly processed commits started oct questionable commits drop support opera firefox lt safari lt old blackberry callbacks module change considered bug hides adds allowed semver minor version might inappropriate release also documented changes signature needed migrate cc dmethvin adds deprecates allowed semver minor version might contracdict release also documented hides hides changes signature remove additional param could nt find docs documented acceptable change minor hides hides even though subject commit reads adding unit tests jqueryanimation changes logic interface module cc gnarf reverted commits reason api change behaviour name ajax always use script injection globaleval commit issue pr reason api change behaviour name effects reintroduce use requestanimationframe commit issue pr reason followup commit name effects improve raf logic commit pr reason api change removed methods name deprecated drop size andself methods commit issue pr reason adherence latest version dom specification name manipulation support datauri scripts insertion commit issue pr reason api change behaviour name core throw error rather returning collection commit issue reason followup commit adherence latest version dom specification name manipulation improve test datauri commit reason api change behaviour name manipulation make wrapall funarg execute commit issue pr reason api change behaviour name callbacks nt abort execution lock commit issue pr reason api change proprties removal name core remove deprecated context selector properties commit issue pr reason api change return value name core return empty array instead null parsehtml commit issue pr reason api change return value name followup commit manipulation support datauri scripts insertion commit issue reason api change methods removal name ajax remove deprecated extensions ajax promise commit issue pr reason promise interoperability name deferred backwardscompatible standards interoperability commit issue pr reason api change feature name wrap support unwrap selector selective unwrapping commit issue pr note could included minor release need documentation reason api change behaviour name event remove guard falsy handler argument jquery method commit issue pr reason api change behaviour name data include digits camelcasing commit issue reason api change behaviour name data always camelcase keys data commit issue reason api change behaviour name data camelcasing ignore case commit issue reason api change behaviour name offset fix offset correctly work shadowdom commit issue pr reason followup commit offset fix offset correctly work shadowdom name offset allow offset setter throw disconnected elements commit issue reason followup commit offset fix offset correctly work shadowdom name offset remove ownerdocument check offset getter commit issue reason api change behaviour name css ignore css cascade show hide etc commit issue issue pr reason followup commit css ignore css cascade show hide etc name css make showhidetoggle methods module commit issue pr reason followup commit css ignore css cascade show hide etc name css fix amd mode new showhide module commit reason followup commit css ignore css cascade show hide etc name effects fix loading showhide amd mode commit reason api change event removal name core remove custom ready event commit issue pr reason api change events removal name event remove deprecated event aliases commit issue pr reason followup commit event remove deprecated event aliases name ajax remove remnants load event alias handling commit pr reason revert api change name revert offset allow offset setter throw disconnected elements commit reason api change new method name deferred add catch handler commit issue note could included minor release need documentation reason api change behaviour name css make css width amp css height return fractional values commit issue pr reason api change signature name remove additional parameters easings commit issue pr reason api change behaviour name ajax mitigate possible xss vulnerability commit issue pr reason followup commit ajax mitigate possible xss vulnerability name ajax nt expect crossorigin tests run envs support commit reason api change behaviour name attributes set properties false removing booleans commit issue reason followup commit attributes set properties false removing booleans name attributes remove flakey test selected attribute commit reason api change behaviour name ajax formencode requests bod commit issue pr reason api change behaviour name attributes return empty array selectmultiple values commit issue pr reason api change behaviour name dimensions outerwidthheight include scrollbar commit issue pr reason api change return value name dimensions empty sets return undefined commit reason api change signature change name manipulation execute scripts iframe iframe context commit issue pr note depends ajax always use script injection globaleval complicated reverts compatibility standard promises cc changes cc might notice included new nt think might good opportunity test new methods wild would require documentation updates though ones related module rewrites like method would found productive could applied branch cc jquerycore", "num": "2723", "d": "11/2015"}, {"title": "jquery", "body": "problem labels second stage", "num": "2722", "d": "11/2015"}, {"title": "syntax error occurs first event delegated event", "body": "let illustrate jquery reports syntax error css selector called instead reports error event released", "num": "2720", "d": "11/2015"}, {"title": "selected option changes ie forwardback button", "body": "ie confirmed detaching nonselected option select dropdown navigating another page back eg click forward back buttons selected option changes test case selected selected however navigate away page back selected instead ff chrome problem test case html selectoptiondetach iejquery bug selected selected selected function option eq detach", "num": "2719", "d": "11/2015"}, {"title": "android basic tests time", "body": "android basic tests master time oth jquery tests mostly working even though longer load test files testing module perhaps problem source joined swarm local emulator running instead arm emulator passed nt help maintaining lots problems android testing apparently even running basic tests problematic restarting jobs nt help nt work browserstack android version prefer drop android completely jquery since one else except markelog thinks well except mobile folks dropping completely right arschmitz remove periodic run add note release process release one fire local android emulator amp run basic tests testswarm job useless anyway stands", "num": "2717", "d": "11/2015"}, {"title": "add tests use jqueryspeed explicitly", "body": "lot things would nt work nt work since decided document need tests correspond might used externally", "num": "2716", "d": "11/2015"}, {"title": "overwrite fn", "body": "sure open yet could please dumb overwrite fn bad jquery object gets overwritten registered plugins gone cms plugins using jquery use noconflict maybe overwriting example include code cdn registered plugins gone forever userdeveloper problem jqueryobject gets overwritten another version losing plugins unacceptable", "num": "2715", "d": "11/2015"}, {"title": "include instruction developing amd", "body": "amd mode qunit test suite could extremely useful developing jquery ie without waiting results direct command think include readme", "num": "2714", "d": "11/2015"}, {"title": "jquery async problem", "body": "apparently old issue new wrinkle like others reported various sites eg stackoverflow occasionally get jquery error message case offending code jquery file relevant information states could find use xhropen jquery looked jquery source file found source problem set triggers console log error browsers changing problem ie console error disappears reason set false specs say bad practice feature deprecated", "num": "2712", "d": "11/2015"}, {"title": "progress", "body": "currently nt documentation progress funky behaviors dmethvin proposed drop current progress passthru generate one progress notification resolved subordinate promise", "num": "2710", "d": "11/2015"}, {"title": "jquerywhen explore giving greater precedence promise", "body": "see discussion pr related currently js resolvevalues amp amp jqueryisfunction method resolvevalues promise else resolvevalues amp amp jqueryisfunction method resolvevalues putting breaks stuff involving expected contexts resolved values across multiple deferreds handling deferreds might still preferable", "num": "2709", "d": "11/2015"}, {"title": "proper work hidden visible selectors", "body": "element property display inline reason collection request hidden collection visible", "num": "2708", "d": "11/2015"}, {"title": "jquery cousins method making dom tree table", "body": "hello world find cousins would give p id click coding dom tree tranform table get cousin based table side side analysis ie oxo elements x indicates space cousins could", "num": "2705", "d": "11/2015"}, {"title": "types explain named functions passed", "body": "according page documents virtual types like selectors enhanced pseudotypes like events everything wanted know functions mentions function javascript either named anonymous provides examples declarations however word example passing named functions supported numerous jquery functions change following discussion explains note explanation read description functions take function arguments example says handler type function event eventobject function foo bar means specified somewhere", "num": "2704", "d": "11/2015"}, {"title": "add css tests setting negative padding borderwidth", "body": "clipped zero see", "num": "2700", "d": "11/2015"}, {"title": "members emails created", "body": "figured capitalize already registered email successfully register new member email", "num": "2698", "d": "11/2015"}, {"title": "remove use event aliases unit tests", "body": "would handy able test events without module loaded", "num": "2691", "d": "11/2015"}, {"title": "map vs javascript map", "body": "jquey nt behave javascript dealing undefined values array demo js var x test consolelog xmap string returns undefined undefined test consolelog map x string returns undefined undefined test appears versions jquery behave manner would think jquery would internally fall back javascript arrays", "num": "2690", "d": "11/2015"}, {"title": "commonjs avoid global custom window passed factory", "body": "commonjs scenario lines may result one things amp exists gt exported thing jquery using global set otherwise custom implementation passed factory flag passed gt global created thought moment might want pass along second parameter imo set true case without asking anything someone invokes trivial attach needed fact behave differently commonjs based initial setup worries", "num": "2688", "d": "11/2015"}, {"title": "way jquery work script tags electron", "body": "currently nt seem possible include jquery using script tags electron issue details problem electron guy suggest using require bit problem us way components shared across web desktop versions like understand possible jquery available via windowjquery window included script tag electron also like know might possibly way get work thanks help", "num": "2686", "d": "11/2015"}, {"title": "jquery memory leak", "body": "hi guys developing website using aspnet jquery frameset frames althought unsupported target clients use windows xp encountered memory leak everytime page rendered frame element also read several articles states memory leaks using frames confirm bug well first tried website browsers chrome firefox seems memory leak nt exists get back downgrading jquery version step step started stopped current version memory leak doesnt exists nt bump yet articles problem encountered hope shed light regarding thank power jquery team", "num": "2685", "d": "11/2015"}, {"title": "text support email fields", "body": "jquery customeremail text false input fields return true tel kinds text fields jqueryfnjquery", "num": "2683", "d": "11/2015"}, {"body": "thanks opening issue please provide reduced test case", "d": "11/2015"}, {"body": "timmywil", "d": "11/2015"}, {"body": "designpixelz ah argument order swapped", "d": "11/2015"}, {"body": "guess built match close brace", "d": "11/2015"}, {"body": "introjs concatenated beginning built file outrojs end jquery contained syntax error unable run fine", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "mmm looks like years ago issue raised discarded would time reconsider", "d": "11/2015"}, {"body": "behavior documented nearly decade jquery used internally require behavior best thing would create plugin", "d": "11/2015"}, {"body": "documentation pretty clear though first element", "d": "11/2015"}, {"body": "oh ok good know nt realize matched element created element bad", "d": "11/2015"}, {"body": "provide information versions jquery phantomjs using process statement strikes suspect results html may recorded element removed especially since function adds immediately removes div run relevant support property needed quite strange time snapshot dom exactly seem sh curl silent location useragent sed n", "d": "11/2015"}, {"body": "reason moved attaching test nodes former nt always exist reliable way wait wait document ready used problem putting jquery scripts end body enough need wait document ready well otherwise code would execute support tests computed leading bugs like mentioned since node attached amp removed synchronously seems unlikely get dom snapshot middle performing test unless one breaks phantomjs reason leaves dom unstable state", "d": "11/2015"}, {"body": "reproduced jquery phantomjs nginx rules catch requests specific user agent string proxypass express server loads page using phantomjs responding generated html may getting called result zurb foundation part application executes js load would need css support properties based comments believe test breaking phantomjs causing element hang around right trying remove element phantomjs returns generated html unable select pretty sure limitation phantomjs fork adds selector element allow select remove working update results", "d": "11/2015"}, {"body": "discussing consider edge case closing try deal phantomjs side issue thanks", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "need escape special characters identifiers", "d": "11/2015"}, {"body": "please provide test case ca nt know anything problem code look preferrably", "d": "11/2015"}, {"body": "supporting web application system log report get stack trace error follows typeerror thisget queryselectorall function objectufnfind htmldocument htmldocument nfnextendhtml jquery version used", "d": "11/2015"}, {"body": "debug jquery bug report", "d": "11/2015"}, {"body": "unhandled rejections may handled later going seems wrong could expose something like andor special event people could hook see rejections went property events need remove stuff handled careful perf although one possible tradeoff would generate console warnings errors seem programming mistakes seems like good tradeoff maybe could", "d": "11/2015"}, {"body": "also worth noting nodejs make working rejections easier tl dr event could consolewarn", "d": "11/2015"}, {"body": "fan console messages production library removing default unhandled rejection handler would rethrow another handler attached", "d": "11/2015"}, {"body": "nt time address today talk next meeting opposed core library opinion still maintain plugin problem happy write documented current best practices", "d": "11/2015"}, {"body": "note blog post nt think added anything apijquerycom deferredthen page best place", "d": "11/2015"}, {"body": "also agree supporting promisesa mixed bag reason inclined leave user warn strongly allowing phantom errors", "d": "11/2015"}, {"body": "default swallows errors really bad though especially compared current behavior gives immediate feedback programming errors", "d": "11/2015"}, {"body": "bad argument made comes territory either way probably equipped make decision code review backlog clear could mock something", "d": "11/2015"}, {"body": "ref", "d": "11/2015"}, {"body": "looking closely see original html invalid closing slash edittarget opening tag forgive wasting time although rubberduck effect helpful closing", "d": "11/2015"}, {"body": "running console console api functions console api defines", "d": "11/2015"}, {"body": "yeah return", "d": "11/2015"}, {"body": "sorry read seems got introduced years ago chrome firefox decided make work almost like jquery selector really confusing naming functionality guess nothing either jquery browserify gkatsev yes browser console mzgol returns", "d": "11/2015"}, {"body": "yep explains everything thanks following", "d": "11/2015"}, {"body": "remove red herring special characters values nt change outcome simpler case last selection changing text show able select right element bare dom example without jquery exhibits problem", "d": "11/2015"}, {"body": "browser bug perhaps work around prophook sets option elements selected values", "d": "11/2015"}, {"body": "fix problem bug options exist select already would also need guard ones appended elsewhere seems work edge older ies affected event seems like might really performance killer especially selects lot options guess could limited feature detect ie changing property silently trying cure might lead real performance trap also wondering properties like misbehave way", "d": "11/2015"}, {"body": "setting select element instead setting properties", "d": "11/2015"}, {"body": "would nt big perf hit code size hit seems work", "d": "11/2015"}, {"body": "nt think would problem multiple options disabled readonly", "d": "11/2015"}, {"body": "yeah works sounds pretty good setting selected already set property youmightnotneedjquery", "d": "11/2015"}, {"body": "nt sound like bug report ask help jquery forum stackoverflow thanks", "d": "11/2015"}, {"body": "worked nt working since", "d": "11/2015"}, {"body": "test case", "d": "11/2015"}, {"body": "dmethvin discovered culprit changes works chrome firefox see spec say", "d": "11/2015"}, {"body": "spec says non values returns attribute value name getting element name parameter converted ascii lowercase converting ascii lowercase means changing values means firefox right wrong every browser wrong well chrome ie safari even old opera presto returns attribute value bzbarsky spec changed considering firefox exception", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie nt cause major problems ie could try use would transform", "d": "11/2015"}, {"body": "set milestone could get great", "d": "11/2015"}, {"body": "mzgol browsers used weird inconsistent case folding nt agree current spec text compromise everyone agreed something webcompatible faster weirdness browsers nt weirdness like getattribute casefolding check chrome terribly consistent cases casefolding spec currently compromise browsers need actually implement decided implement", "d": "11/2015"}, {"body": "supported browsers take care lowercasing may well remove call let browsers work", "d": "11/2015"}, {"body": "bzbarsky curiosity name converted stay since contains least one character range az", "d": "11/2015"}, {"body": "timmywil gets converted", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie info link ticket example", "d": "11/2015"}, {"body": "additional info talked irc every conclusion micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "one past timmywil said always use getattributenode looks like tolowercase added fix", "d": "11/2015"}, {"body": "thank dmethvin say seems easy enough include complications could table though", "d": "11/2015"}, {"body": "may case removing code since already tests text unit tests made laugh reminded ticket", "d": "11/2015"}, {"body": "yeah easy might try fix well although might require internal toasciilowercase function would convert ascii letters micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "might try fix well would nt worry like long time", "d": "11/2015"}, {"body": "still supporting oldie", "d": "11/2015"}, {"body": "still supporting oldie sure edge case nt come still good ascii names", "d": "11/2015"}, {"body": "meant would nt easy implement oldie since need remove one line", "d": "11/2015"}, {"body": "way put would add custom regex lowercased az instead long nt break anything okay since angular folks seeing bug may want", "d": "11/2015"}, {"body": "angular folks ie mzgol wanted", "d": "11/2015"}, {"body": "easy like good either way", "d": "11/2015"}, {"body": "yeah wanted simple monday wanted try whether easy fix simple solution lowercasing caused problems old ie would nt bother definitely want try first need get proper shape though", "d": "11/2015"}, {"body": "mzgol ca nt get backlog empty", "d": "11/2015"}, {"body": "timmywil time sunday go", "d": "11/2015"}, {"body": "bad", "d": "11/2015"}, {"body": "least bad application sometimes worse", "d": "11/2015"}, {"body": "timmywil wo nt time thursday want grab", "d": "11/2015"}, {"body": "mzgol sure", "d": "11/2015"}, {"body": "correct src folder included distribution building direct usage amd build jquery git repo required solution combining postinstall script git submodule nt bad", "d": "11/2015"}, {"body": "also discussion back regarding put tag tension people want one file jqueryjs jqueryminjs file want custom builds possibly even unit test result need latter best approach check tag files", "d": "11/2015"}, {"body": "wow thanks markelog know must ton work", "d": "11/2015"}, {"body": "great work", "d": "11/2015"}, {"body": "excellent job markelog clap things imo drop support opera firefox lt safari lt old blackberry imo dropping support browsers breaking change nt think firefox lt may fine supporting current current support policy change mentioning opera explicitly imo stay supported even though subject commit reads adding unit tests jqueryanimation changes logic interface effects module cc gnarf tests problematic break lot android rather add animationtween tests things imo may callbacks module change considered bug think new feature bug fix allowed introduce nonbreaking new features minor release fine hides jqueryswap undocumented fine adds jqueryhtmlprefilter allowed semver minor version might contracdict release also documented nt understand might contracdict release part change looks ok changes signature jquery init needed migrate cc dmethvin undocumented may whatever want especially minor rest looks also fine remarks might notice included new jquery htmlprefilter nt jquerydeferred catch think might good opportunity test new methods wild would require documentation updates though ones related module rewrites like catch happy nt include promisesacompatible promise libraries specialcase jquery checking reject promisesacompliant fact deferreds allows libs check allow jquery promises otherwise hard support trying sth like pr chaiaspromised", "d": "11/2015"}, {"body": "still needs verification team review week please", "d": "11/2015"}, {"body": "agree mzgol drop support reverted maintain support levels anything want regarding showhide changes", "d": "11/2015"}, {"body": "already reverted commit dropped support browsers branch micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "yeah decided one meeting ago would need make opera pass anyone working also concerns remember preferable check much possible decided meeting deadline wednesday", "d": "11/2015"}, {"body": "try check commits ca nt promise able thursday see remaining opera bugs fixed afterwards nt seem major unless wrong", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts timmywil think move deadline thursday", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts expect revert anything else fix bugs really nt think important necessarily get fixed within next days one onerror handler called jqueryparsehtml maybe opera lacking api sth another one css lineheight working", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera look definitely thursday otherwise agree want make sure easy fix issues", "d": "11/2015"}, {"body": "anyone chance look closely", "d": "11/2015"}, {"body": "okay waiting next meeting", "d": "11/2015"}, {"body": "labels second stage hard get something report closing", "d": "11/2015"}, {"body": "although way problem also exists syntax error changed title clarify standard css selectors common case jquery never parses string passes string dom method fails fall back parsing string sizzle point would detect syntax error give syntax error message point called need make call use selector discarding result since many errors may exist selector eg nonsyntax typo like convinced benefit justifies cost", "d": "11/2015"}, {"body": "okay behavior upfront cost nt worth", "d": "11/2015"}, {"body": "agree dmethvin amp timmywil", "d": "11/2015"}, {"body": "seems like enough consensus close", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix test selector freshly created element nt drop result since result always empty collection anyway", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix feel like debugging nt really harder created event handler changed selector likely testing functionality still works find rather quickly whether syntax error either way", "d": "11/2015"}, {"body": "scottgonzalez advocating broken behavior general early error reported easier debugging especially talk syntax errors", "d": "11/2015"}, {"body": "abozhilov broken behavior broken selector moot selector valid takes actually using selector find invalid functionally reason use element needs checked yes takes longer realize selector invalid find pretty quickly try use", "d": "11/2015"}, {"body": "soon run unit integration tests see problem pretty early tests would problem rum telemetry could catch since outright thrown error", "d": "11/2015"}, {"body": "dmethvin missing entire point broken selector entire app must work nothing stack trace image debug code someone else missed test part made typo find files cost anything fix issue prefer complicated debugging right", "d": "11/2015"}, {"body": "cost anything fix issue keep saying zero cost implies nt need change anything modified copy jquery locally fix see solution image debug code someone else missed test part made typo find files sure console erroneous selector problem caused recent change code base reduce possible cause looking diff", "d": "11/2015"}, {"body": "repro edge bare file contents jsbin although nt work jsbin note jquery use js selected selected selected windowonload function var sel documentgetelementsbytagname select selremovechild selfirstelementchildnextelementsibling caused jquery", "d": "11/2015"}, {"body": "close one patchwelcome nt think work around willing look pull request", "d": "11/2015"}, {"body": "running release fine gotten point ci tests wrong often useless", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "basic test suite disabled master added info manual android testing wiki done closing bug timmywil assigning milestones bugs like without milestone indistinguishable invalid bugs closed maybe big problem", "d": "11/2015"}, {"body": "yea kinds tickets nt quite fit milestone probably set anyway enter archive something working", "d": "11/2015"}, {"body": "overwriting anywhere sure asking include two versions jquery site default second one overwrite amp global variables restore previous state use plugins previous version available please provide specific description problem", "d": "11/2015"}, {"body": "constructor said objects overwritten workaround used cms difficult touch developers cms extension example store plugins globally reinclude constructor", "d": "11/2015"}, {"body": "setting currently defined instance line executed nt exist overwriting anything except amp restore defined amp never overwritten", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins otherwise user problem know explicit object think anybody could coincidentally end includes automatic configuration whatever result jquery working using plugins throw x function error case overwrite object saved far well reinclude plugins fine explicit workaround jquery serve automatic solution gets one time included", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins would big compatibility break idea including jquery result two pieces independent code hence ca nt reinclude plugins might break code want share think anybody could coincidentally end includes automatic configuration whatever someone better see error try use plugin amp notice using two jquery copies instead one silent errors worst cases using multiple jquery copies avoided", "d": "11/2015"}, {"body": "cms plugins using jquery use noconflict maybe overwriting example include code cdn registered plugins gone forever issue include jquery amp plugins cms includes jquery copy without using lose access plugins seems weird include jquery amp plugins cms code access jquery copy", "d": "11/2015"}, {"body": "best scenario would everybody uses uses variables thats gon na happen one faulty extension could stop site working issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts developer thinks good idea include jquery footer maybe mine script course using since know random user understand point view bad idea reinclude plugins default could overwritten plugin includes jqueryreinclude include nt matter", "d": "11/2015"}, {"body": "bad idea reinclude plugins default multiple jqueries site usually result couple independent code parts uses jquery plugins particular plugin might compatible jquery version used another snippet might logic place checks particular plugin expects etc easier reason sure external code attach plugins issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts fnagel familiar would able reply", "d": "11/2015"}, {"body": "understand point view bad idea reinclude plugins default fact could completely broken newly loaded version jquery scenario described really bad practice something bad happens user land nt mean something equally bad happen inside jquery current logic multiple versions jquery sound highly unlikely ever change", "d": "11/2015"}, {"body": "agreed feel free discussion unlikely make changes", "d": "11/2015"}, {"body": "good idea could something like developing jquery useful run tests amd mode distribution files need rebuilt test suite reflect recent changes viewing qunit test page click load amd", "d": "11/2015"}, {"body": "rather readme included along similar notes contributing", "d": "11/2015"}, {"body": "makes synchronous requests ensure correct sequencing scripts embedded html evaluation calls dom manipulation functions words root cause direct jquery evaluate scripts inbound html remove warnings remove scripts see also especially", "d": "11/2015"}, {"body": "provide test case also note cases cause element considered hidden see docs", "d": "11/2015"}, {"body": "yup element visible time according definition visible element could width height content", "d": "11/2015"}, {"body": "jquery exactly correspond elements layout boxes even dimensions resolved", "d": "11/2015"}, {"body": "good point", "d": "11/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "plugin first nt one like already get momentum consider adding core since pretty conservative new api nevertheless thank reaching", "d": "11/2015"}, {"body": "thanks opening issue wrong repo please open issue review", "d": "11/2015"}, {"body": "noting regression event aliases removed managed creep back may inevitable doubt want start testing module subsets regular basis", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "imagine much code would break would benefit", "d": "11/2015"}, {"body": "one point might want deprecate helper methods native equivalents amp stop using internally years might remove would change semantics amp friends little sure feasible particular use case sounds like edge case imo nt break much code opposed switching parameter order would break everything also edge case nt feel like change", "d": "11/2015"}, {"body": "even lodash supports sparse arrays nt think start", "d": "11/2015"}, {"body": "plus differences value handling returns callback depend behavior internally want standard javascript behavior use", "d": "11/2015"}, {"body": "provide history due concluded browser emulators node need global set node commonjslike environment environment browser emulator usually unfortunately node module handling leaked emulators browserify case already covered window document present common use case requiring jquery node still use jquery within emulator emulators still allow node module variables leak think leave way", "d": "11/2015"}, {"body": "currently scenarios gt nothing exported global set amp exists gt jquery exported global set amp nt exist gt factory accepting parameter exported running set global nt like amp diverge means global set global set looks like magic note scenarios may happen used browser emulators node think behave way", "d": "11/2015"}, {"body": "quite order pass scenario would hope one node", "d": "11/2015"}, {"body": "actually think good", "d": "11/2015"}, {"body": "also given finicky changes intro past nt want make changes someone opens ticket use case", "d": "11/2015"}, {"body": "timmywil quite order pass scenario really line means variable present scope picked setup function obviously exists yes verified console", "d": "11/2015"}, {"body": "looking understand happening reported issue person would like global exported nodelike environment someone fact open ticket noticed inconsistency", "d": "11/2015"}, {"body": "yes verified console console variables created global node everything wrapped closures", "d": "11/2015"}, {"body": "console variables created global variables verify global also please read explanation needed scope", "d": "11/2015"}, {"body": "looking introjs understand happening reported issue person would like global exported nodelike environment nt think valid use case something way user using electron electron global necessary case edited", "d": "11/2015"}, {"body": "verify global also please read explanation needed window scope read explanation still nt see window would make jquery scope", "d": "11/2015"}, {"body": "would jquery uses jquery find way would possible node wonky prototypical behavior way work global", "d": "11/2015"}, {"body": "actually think suppose would work require executed scope module requiring seems like would adverse side effects", "d": "11/2015"}, {"body": "keep forgetting looking using still surprised right though see argument", "d": "11/2015"}, {"body": "confirmed work way suspect able access", "d": "11/2015"}, {"body": "makes sense think modules node able leak modules even modules require rule module encapsulation", "d": "11/2015"}, {"body": "yeah looks funky created two scripts running prints expected get weirder results directly repl though const foo bar undefined foo bar globalfoo undefined var util require util undefined util foo scope maybe repl much magic inside ps run using everything evaluated strict mode", "d": "11/2015"}, {"body": "maybe repl much magic inside yea perhaps", "d": "11/2015"}, {"body": "wrong button", "d": "11/2015"}, {"body": "case see reasoning exists right assume emulated browser environment environment leaks hit line means global set contrary wish set environments nt reach latter line sets global understand happening", "d": "11/2015"}, {"body": "ah ok always set set set browser emulators setting would mean setting question remains one related reported whether skipping setting global browserify mistake maybe increases logical complexity everything agree changing may risky scenario presented typical every choice make someone unhappy", "d": "11/2015"}, {"body": "question remains one related reported whether skipping setting global jquery browserify mistake used export global browserify case got multiple complaints inclined leave asis case equivocal best inclined trust past reports global unexpected environment", "d": "11/2015"}, {"body": "sounds good closing wontfix someone disagrees comments welcome always reopen", "d": "11/2015"}, {"body": "never used electron ca nt answer question nt seem like good question ask bug tracker maybe stack overflow", "d": "11/2015"}, {"body": "ok already questions stackoverflow regarding answered solution much use us hoping get input people know jquery internals well electron guys state hoping understand jquery perspective", "d": "11/2015"}, {"body": "ca nt use require environment nt allow use sounds broken", "d": "11/2015"}, {"body": "mzgol use require electron quirk builddeployment system caters web desktop makes requireing jquery less ideal us", "d": "11/2015"}, {"body": "noticed current logic little inconsistent reported details really issue slightly related", "d": "11/2015"}, {"body": "reference continuation forum post arvstract would able take look diff posted identify possible sources leak would help us lot", "d": "11/2015"}, {"body": "hi dave honest familiar internal code jquery works tried reporting bug observe unit test hope jquery team use reference currently reviewing url gave best understand code also share ideas help isolating code causes memory leak thank", "d": "11/2015"}, {"body": "arvstract sure love get help bug since seeing mentioned change full differences versions put line back leak go away may lost cherrypick", "d": "11/2015"}, {"body": "looking bit pretty sure lost leakplugs move make support checks lazy right nt likely need brokenout feature detects attributes manipulation css effects already event data", "d": "11/2015"}, {"body": "unrelated making support tests lazy kept checks line removed markelog claimed bug existed unpatched versions false", "d": "11/2015"}, {"body": "sure see summoned nt answer sorry bug caused memory leak event handlers fixed several fixed least one applies sure whether patterns trigger leak would nt surprise markelog recall mean give break decade smile", "d": "11/2015"}, {"body": "sure seems comment might referenced update although microsoft says memory issues solved evidence resurfacing new different leaks seems case though since assigning everything null described article would nt help arvstract describing sounds like iframe issue could nt find mentions update fix released nt matter mentioned original discussion issue present leak small amount memory unless app constantly removing adding iframes jquery inside work fine app fact would nt advice adding fix back support unusual use case", "d": "11/2015"}, {"body": "least one applies sounds case since expandos", "d": "11/2015"}, {"body": "agree nt see could apply point think waiting arvstract provide information case appears leak", "d": "11/2015"}, {"body": "hi markelog website composed frameset structure less like navigating constantly mainframe keep loading pages jquery causes memory build released existent upon refreshing page memory clears mean unless app constantly removing adding iframes jquery inside yes constantly removing adding iframes jquery hi dmethvin truly sorry still unable provider information bug encounter busy fixing bugs website past days decided downgrade jquery sorry tell still guarantee yet review pinpoint issue might possibly occur", "d": "11/2015"}, {"body": "imagine suffers memory leaks situation frameset page never unloaded leak would cleaned could also vivid imagination would good get info whether putting null assignments back solves problem nt like change code without good test case nonframeset page leak support tests minor since happen", "d": "11/2015"}, {"body": "text fields email telephone fields respectively documentation allows us select elements", "d": "11/2015"}, {"body": "looks like text field", "d": "11/2015"}, {"body": "visual representation may mean surely would nt using new types", "d": "11/2015"}, {"body": "use pretty much mobile safari uses input type present right keyboard user aspects text fields text fields support keyboard input display entered information text field support masked input still text field regardless capability format user input problem need make live validation manually pick kinds text fields including tel email text help use trail selectors find text fields", "d": "11/2015"}, {"body": "dom nt tell us input presented keyboard input tells us matches inputs absentempty text ca nt changed would break backwards compatibility desired selection cumbersome however could define use custom selector like", "d": "11/2015"}, {"body": "said firefox bug worth pointing explicitly practice firefox believe chrome matches element last target anchor scroll nothing element id right eg could changed element got scrolled everything intended meaning originally introduced two relevant specs defines matches something called target element nt define since document language html defines target element html document latter specified specification nt match browser behavior initial meaning prohibitively expensive implement anyway servo tried ran serious issues see spec issue tracking situation back observed behavior load problem defining element last scrolled depend browser decides scroll pageload answer depends standard gecko looks like scroll generally happens least end parse though maybe additional trip event loop somewhere people care enough dig check think also happen heuristics pageload totally subject change nt relied making work reliably starting firing nt already seems like pretty reasonable thing", "d": "11/2015"}, {"body": "actually might good reasons scroll though think gecko always scroll really happen believe layout stable avoid jumping around page still stylesheets loading time happens may want avoid scroll point", "d": "11/2015"}, {"body": "bzbarsky saying element nt match therefore nt get updated styles page actually scrolls given application styles could make substantial changes generally could nt guarantee stable layout without", "d": "11/2015"}, {"body": "precise sequence events function gecko takes value argument follows skipping various complexity around svg whatnot find target element set element url target state starts match try scroll element view trying scroll something view besteffort attempt update layout scroll besteffort layout update takes long user trying interact page interrupt part way use whatever got far", "d": "11/2015"}, {"body": "hmmm example mentioned whatwg ticket bothers duplicate id values instead change id current target first li css update next either seems na\u00efve implementation would match browsers css either bug report browsers nt consistent sizzle nt normalize sizzle nt report element browser", "d": "11/2015"}, {"body": "decided use symbols would additional code path would nt save performance nodes use regular property might save perf objects dominant use case", "d": "11/2015"}, {"body": "filled two new columns google doc", "d": "11/2015"}, {"body": "also use selectornative slim build", "d": "11/2015"}, {"body": "nt think long incorrect scoping rules cutting functionality fine rather change", "d": "11/2015"}, {"body": "go sizzle well easier explain particular api left versus api behaves differently cases also easier debug", "d": "11/2015"}, {"body": "fair enough", "d": "11/2015"}, {"body": "agree bilaridis using ie microsoft mvc client validation checked checkbox gives error due data undefined unexpected token works chrome though adding check undefined solved us", "d": "11/2015"}, {"body": "martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined", "d": "11/2015"}, {"body": "hi mzgol thank responding quickly see comment could interpreted using script libraries external part passing undefined using jquery libraries ie part validation libraries passing undefined validating checkboxes case see different existing workaround android null proposed one ie undefined kind regards martin", "d": "11/2015"}, {"body": "please provide minimal test case reproducing issue without hard us say problem lies jquery different place micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "martinbring yeah like behaviour changed input incorrect validation lib passing value means compatible later versions jquery might want consider updating see different existing workaround android null proposed one ie undefined value correct json like primitive value like string number valid json see whereas android follows previous iteration specification prohibited values normalize behaviour mzgol martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined polyfill though shim", "d": "11/2015"}, {"body": "curious people think right move keep overflow hidden stop case seems nt one right answer userland cases things bit clear since forces completion final steps completed perhaps makes sense leave asis anyone disagrees please chime better solution", "d": "11/2015"}, {"body": "think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better", "d": "11/2015"}, {"body": "agree gibson nov pm richard gibson notifications githubcom wrote think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding datashow left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better reply email directly view github", "d": "11/2015"}, {"body": "forgot decided want change case return case return empty array", "d": "11/2015"}, {"body": "return empty array idea ask collection ie select multiple get collection although might empty", "d": "11/2015"}, {"body": "right thanks", "d": "11/2015"}, {"body": "timmywil please remember always remove milestone amp add label closing issue getting fixed otherwise mess changelog", "d": "11/2015"}, {"body": "colors animated via css future js need jquerycolor sort nonissue future", "d": "11/2015"}, {"body": "problematic ie lt afaik rather backport", "d": "11/2015"}, {"body": "like backport", "d": "11/2015"}, {"body": "mzgol agree", "d": "11/2015"}, {"body": "closing favor tracking roadmap ongoing work necessarily done single pass", "d": "11/2015"}, {"body": "clearing milestone releasing change wo nt applicable code support", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "closing favor tracking roadmap principle keep mind modules", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "started wiki page use iterate might little easier pr maybe harder dunno start editing ideas want people nt generally read usually us linking justify changing changing reported behavior", "d": "11/2015"}, {"body": "updated wiki page reflect api design goal everyone okay take milestone", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "dmethvin btw change tenets rules former word may barrier nonnative speakers commonly used", "d": "11/2015"}, {"body": "note second reversal still think correct return empty set case acceptable milestone allows breaking changes", "d": "11/2015"}, {"body": "releasing anymore commit irrelevant removing milestone amp adding wontfix label", "d": "11/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "must webkit bug affects chrome safari", "d": "11/2015"}, {"body": "since activity close always reopen someone knows want signature", "d": "11/2015"}, {"body": "sohanprstap issue nt seem anything jquery also problem different one reported cases please open new bugs nt resurrect old ones", "d": "11/2015"}, {"body": "rather backport way compat code may pose problems nodejs", "d": "11/2015"}, {"body": "wontfix since done connection", "d": "11/2015"}, {"body": "per trac bug think leave wontfix", "d": "11/2015"}, {"body": "way wrong broken thinking nt dealing argument selectornative turns still behavior difference due nature qsa scoping problem pretty much requires sizzle fix", "d": "11/2015"}, {"body": "still behavior difference due nature qsa scoping problem pretty much requires sizzle fix new injquery implementation borrows ideas sizzle much needed see info plan next major", "d": "11/2015"}, {"body": "point dom matches findall would help nobody seems hurry implement", "d": "11/2015"}, {"body": "drop ie happen conquer mars need parsing logic anyway", "d": "11/2015"}, {"body": "new injquery implementation borrows ideas sizzle much needed see jquerysizzle comment info plan next major possibly later something like selectornative nt even tokenize selector would required even streamlined engine rather injquery implementation prefer see new version sizzle drops polyfills native selectors pos handling manipulates selector something first go qsa matchesselector filtered regardless wo nt something discuss later time comes", "d": "11/2015"}, {"body": "definitely seems like much edge case handle normal processing document complete wellformed xml document could load way", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "timmywil grab want nt notice assigned", "d": "11/2015"}, {"body": "dmethvin feel free", "d": "11/2015"}, {"body": "failures still amp reopening proper milestone may decide wontfix perhaps disable tests android clean build", "d": "11/2015"}, {"body": "ca nt say issue left good state supported supported prominent posts display code worked wonderfully years yet defaults unhelpful error leading wild goose chases accept longer supported nearly patriotic issue last word needs bit closure", "d": "11/2015"}, {"body": "upvotes nt seem prominent maybe right either way going make due time constraints revisited later date", "d": "11/2015"}, {"body": "since waiting sizzle update moving back", "d": "11/2015"}, {"body": "general criteria adding new features seems like nt pass muster nt need internally easily done plugin cssescape polyfill already exists close someone good reason reopen always", "d": "11/2015"}, {"body": "dmethvin please apply label closing issue", "d": "11/2015"}, {"body": "reread discussion convinced arguments escape functionality going handinhand engine interpreting special characters maintain stability time going sizzle might well documentedexposed jquery well edit also claim adherence support best practice bullet point", "d": "11/2015"}, {"body": "jaubourg far get node server new york would another way solving problem probably better one vagrant", "d": "11/2015"}, {"body": "nt work much intendedwanted needed express routes rewiring routes unit tests hard part actually determine unit tests actually testing simplify node server code become mess come soon ish unit tests rewired pass ball gnarf guess see integrate node web server testing infra", "d": "11/2015"}, {"body": "looking whatwg xhr spec intentionally taken hash fragment url property jaubourg know might might ask op reported case script tag wondering reasoning excluding xhr edit additional info seems indicate stripping fragment early okay", "d": "11/2015"}, {"body": "fragments never sent servers apparently even exposed fetches appear dom visible executing scripts extremely rare case sure one script transports technically wrong long strip", "d": "11/2015"}, {"body": "interesting asked stack overflow question ago never got response add link issue pull request question comments thanks working everyone reference question", "d": "11/2015"}, {"body": "behavior change label missing ticket pay attention tickets label applied", "d": "11/2015"}, {"body": "since releasing fix depended us dropping happening jquery moving wontfix", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}]