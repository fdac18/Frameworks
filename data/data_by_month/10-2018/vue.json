[{"title": "array element template syntax updating inside component", "body": "version reproduction link steps reproduce open reproduction link click option say correct click next question dom updated inside component log button log array variable options contains button question component contains one option expected button result supposed corresponding option options array actually happening options array updated button remains contain old value believe bug related reactivity tried vm forceupdate seemed work", "num": "8900", "d": "10/2018"}, {"title": "ssr hydration issue", "body": "version reproduction link steps reproduce code causes hydration issue run ssr emptystring test export default data return emptystring falsyvalue false expected hydration issue actually happening", "num": "8899", "d": "10/2018"}, {"title": "watcher fire immediately", "body": "version reproduction link steps reproduce click update button expected property change watched message two logs watcher fired right property changed increasing property property change watched property increased actually happening property change watched message dispatched two logs indicating second log executed watcher executed property change increasing property property increased property change watched", "num": "8898", "d": "10/2018"}, {"title": "using vfor functional component returns multiple nodes renders undefined", "body": "version reproduction link steps reproduce title says look fiddle expected slots rendered properly combination vfor fragment return array vnodes actually happening slots render undefined returns array arrays vnodes problem seems result becomes array arrays vnodes seems like ought flattened reason add extra element sibling fixes", "num": "8897", "d": "10/2018"}, {"title": "production version shows console warning development mode", "body": "version reproduction link steps reproduce download production version vueminjs add script page check console expected production mode warnings actually happening following warnings appear download vue devtools extension better development experience running vue development mode make sure turn production mode deploying production see tips", "num": "8896", "d": "10/2018"}, {"title": "nonbreaking space acts different characters outputs template passed via props", "body": "version reproduction link steps reproduce create new component accepts string prop display prop within component template use component vue application pass string containing nonbreaking space character prop expected output contain non breaking space actually happening output shows example provided made cases first case get turned second case long list characters escaped third getting list characters retrieving regular character nt escape note copying nonbreaking space character might turn regular space clipboard therefor use make sure insert character", "num": "8895", "d": "10/2018"}, {"title": "typeerror function", "body": "probable incompatibility firebase sdk updating firebase got error typeerror function app working pretty well returning version stops bug", "num": "8894", "d": "10/2018"}, {"title": "ca nt set default selected value vmodel defined", "body": "version reproduction link steps reproduce run code default selected value empty expected delete vmodel test select tag selected value expected expected selected default value actually happening empty selected value", "num": "8893", "d": "10/2018"}, {"title": "recent versions vue work lazy async components node ssr", "body": "version reproduction link migrated reference project vuehackernews webpack latest libraries steps reproduce build run yarn install yarn build yarn start open expected expect site work lazy components actually happening nodejs finish import component promise vuerouter never resolve tried build similar project using vuecli also failed tried node node great understand error", "num": "8891", "d": "10/2018"}, {"title": "using vshow vif transition trigger leave transition", "body": "version reproduction link steps reproduce use transition component expected changing keep trigger leave transition actually happening element disappear without performing leave transition", "num": "8890", "d": "10/2018"}, {"title": "work webpacksubresourceintegrity", "body": "version reproduction link steps reproduce nuxtjs using plugin setting errors bu generated html nuxt generate nuxt start integrity script tag expected integrity hash script tag sri actually happening integrity appear", "num": "8889", "d": "10/2018"}, {"title": "add demo gif readme", "body": "disclaimer bot looks like repo trending githubtrendingvideos instgram account automatically shows demo gifs trending repos github readme nt seem demo gifs add one next time parser runs pick post instagram feed nt want close issue wo nt bother", "num": "8888", "d": "10/2018"}, {"title": "vue custom module resolution nt seem work", "body": "create new project via options asks selected create file folder following content maints homevue imported module use import item libstestlib consolelog item item tsconfigjson add vscode resolve path try run build serve npm run build result getting error libstestlib srcmaints nodemodulescacheloaderdistcjsjs ref nodemodulesthreadloaderdistcjsjs nodemodulesbabelloaderlib nodemodulestsloader ref nodemodulescacheloaderdistcjsjs ref nodemodulesvueloaderlib vueloaderoptions srcviewshomevue vue amp typescript amp langts amp install run npm install save libstestlib help would much appreciated", "num": "8886", "d": "10/2018"}, {"title": "vmodellazy doe nt update value enter click", "body": "version reproduction link steps reproduce type text input press enter paragraph updates well inputvalue doesnt change focus instead press enter updates value ok expected inputvalue updated paragraph actually happening paragraph updated vue doest issue", "num": "8885", "d": "10/2018"}, {"title": "api allow replacing observer implementation alternative implementation", "body": "problem feature solve followup integration vue existing trackerbased meteor apps one approach assure fur compatibility implement tracker top observer implementation proven work great version needed bit access vue observer internals already available would suggest simple way register alternative vue observer implementation way party libraries could extend new vue observer implementation additional things register back vue use proposed api look like could something simple would author assure alternative implementation compatible works well vue", "num": "8884", "d": "10/2018"}, {"title": "custom multiple select input work correctly", "body": "version reproduction link steps reproduce select multiple options custom select input compare direct input expected model selection array selected options actually happening one element arbitrarily returned", "num": "8883", "d": "10/2018"}, {"title": "component template content html encoded chars attributes properly decoded", "body": "version reproduction link steps reproduce hover \u00e6\u00f8\u00e5 expected would expect html attributes htmldecoded like textnodes hover text see \u00e6\u00f8\u00e5 actually happening see context serving html cms backend json creating dynamic vue component servergenerated html danish characters attributes mostly objectdata bindings like model prop \u00e6\u00f8\u00e5 problem exists attributes", "num": "8882", "d": "10/2018"}, {"title": "cachable filters", "body": "problem feature solve lot issues created filters etc issues created filters executed multiple times issues answer vdom comparison vue needs run filter compares resulting dom tree use computed properties instead filters cached right reason use filters mustache interpolations methods angular filters example evaluated inputs change makes much usable filters supposed pure functions anyway see reason cache making filters cachable like computed properties opens possibilities using mustache interpolations examples cachable filters beneficial kazupon works around issue directive cache result translation less flexible mustache interpolation would readable flexible instead js js hello js hello world use momentjs date formatting momentjs slow filters cached really usable especially rendering lists places formatting text dates etc creating computed property formatted value text date etc lot work unnecessary code write proposed api look like make filters work like computed properties instead methods add different symbol instead pipe denote filters cachable pure", "num": "8880", "d": "10/2018"}, {"title": "memory leak", "body": "problem feature solve screen see output vuecomponent method destroyed destroy vuecomponent continues store lot data remains memory causes memory leak screens show amount data stored memory routing changes use vuerouter number vuecomponents constantly growing page page page memory usage goes proposed api look like happening", "num": "8879", "d": "10/2018"}, {"title": "functional component rendering named slot following", "body": "version reproduction link steps reproduce nothing particular expected display actually happening displays following made appvue nonfunctional make childvue nonfunctional works use default named slots works", "num": "8878", "d": "10/2018"}, {"title": "memory leak", "body": "version screen see output vuecomponent method destroy vuecomponent continues store lot data remains memory causes memory leak demonstration accumulation vuecomponents screens show amount data stored memory routing changes use vuerouter number vuecomponents constantly growing page page page memory usage goes happening", "num": "8877", "d": "10/2018"}, {"title": "binding bind directive change events tag work", "body": "version reproduction link steps reproduce enter two numbers less etc succession twice observe page display console output expected originally expected page console display input actually happening input numbers less two consecutive times observed first input page console display time second input page displays console displays reluctant solution get native input element modify value use ref use event replace input element custom component may work use vmodel watch want know outputs appear better solution thank", "num": "8876", "d": "10/2018"}, {"title": "binding bind directive change events tag work", "body": "vuejs version overview problem recentlyi want limit range numbers entered input tag nt want use vmodel directive input box loses need check number within reasonable limits wrote following steps enter number randomly input box move mouse input box observe whether input box number meets expectations observe console output number problems input numbers less two consecutive times observed first input page console display time second input page displays console displays originally expected page console display input reluctant solution get native input element modify value use ref use event replace input element custom component may work use vmodel watch want know outputs appear better solution thank", "num": "8875", "d": "10/2018"}, {"body": "others want use direct access simply feels natural", "d": "10/2018"}, {"body": "posva ah cool definitely helps computed methods added well future", "d": "10/2018"}, {"body": "probably implement userland sun oct notifications githubcom wrote posva ah cool definitely helps computed methods added well future receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "10/2018"}, {"body": "working expected see docs need manually set values case", "d": "10/2018"}, {"body": "thank searched lot", "d": "10/2018"}, {"body": "void element thus always include end tag", "d": "10/2018"}, {"body": "justineo used self closing tag example valid vue template avoid confusion updated example separate start end tag thanks", "d": "10/2018"}, {"body": "sandbox nt seem reflect ssr issue provide configured repo order reproduce problem", "d": "10/2018"}, {"body": "closing repro provided", "d": "10/2018"}, {"body": "sorry ca nt find similar site support ssr possible see issue simply adding snippet component way found issue space next mustache cases nt cause hydration issue could avoid issue even issue fixed test test test", "d": "10/2018"}, {"body": "use", "d": "10/2018"}, {"body": "watchers nt fire immediately design prevent watcher firing multiple times single tick queued run later need wait watchers done firing use", "d": "10/2018"}, {"body": "ok option could set force immediate dispatch even fired multiple times looked nt seem like would something could added near future nexttick trick wo nt work thanks", "d": "10/2018"}, {"body": "need something fire right away might better design use method call method need logic run", "d": "10/2018"}, {"body": "many properties watch nt want create method one watch system vue seemed good fit totally integrated app would extremelly useful use well ok bad try find another way thanks", "d": "10/2018"}, {"body": "generally watchers sideeffects lot properties depend one another may better results leveraging computed properties computed properties executed ondemand sounds like want careful use sideeffects", "d": "10/2018"}, {"body": "allright try path see actually use needs saw couple techniques use computed properties watchers even set system watch multiple properties single callback seems convoluted taste guess create custom system top vue thanks lot time", "d": "10/2018"}, {"body": "right feel free take conversation discord need help anything else take care", "d": "10/2018"}, {"body": "duplicate", "d": "10/2018"}, {"body": "kidding pulling wrong file", "d": "10/2018"}, {"body": "added new example list html entities including whitespace zero width characters decoded also noticed mathiasbynenshe two entries one without simicolon one simicolon might shot dark could influence result", "d": "10/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "10/2018"}, {"body": "need provide initial value variable passed vmodel also nt forget set every option", "d": "10/2018"}, {"body": "translated posva answer fiddle", "d": "10/2018"}, {"body": "right thank", "d": "10/2018"}, {"body": "happen know ow version node running node instance would trouble import syntax", "d": "10/2018"}, {"body": "boiled repro necessary thank", "d": "10/2018"}, {"body": "boiled repro necessary thank posva close", "d": "10/2018"}, {"body": "happen know ow version node running node instance would trouble import syntax geedew", "d": "10/2018"}, {"body": "boiled repro necessary", "d": "10/2018"}, {"body": "boiled repro necessary posva", "d": "10/2018"}, {"body": "boiled repo entire project", "d": "10/2018"}, {"body": "boiled repo entire project posva real project official vue demo updated dependencies move without changing source code see error need build project run go localhost want leave one link routing understand requirements", "d": "10/2018"}, {"body": "boiled means tye minimal code show problem follow vue ssr guide google thu oct ilya skorik notifications githubcom wrote boiled repo entire project posva receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "10/2018"}, {"body": "nt use vif vshow component one", "d": "10/2018"}, {"body": "forbidden using one leave dom element remove addresses use case sometimes needing hide element perform transition time needing remove element also perform transition works expected enter transition nt work leave transition", "d": "10/2018"}, {"body": "seems something", "d": "10/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "10/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "10/2018"}, {"body": "tell webpack typescript aliases insert file project root content like js const path require path function resolve dir return pathjoin dirname dir moduleexports chainwebpack config gt configresolvealiasset libs resolve libs could obviously make exercise", "d": "10/2018"}, {"body": "leopiccionia thank", "d": "10/2018"}, {"body": "would suggest simple way register alternative vue observer implementation vue indeed implement new proxybased observer implementation independent package also implement alternative version uses getterssetters based reactivity system ie compatibility something like likely possible though details still consideration", "d": "10/2018"}, {"body": "fact interesting hooking underlying observe logic much exposed proxy means probably thing generally less something like every time x gets invalidated also call extra code gets rerun call well", "d": "10/2018"}, {"body": "vmodel works components remember syntax sugar around inputs vmodel implementation handles either implement use computed setter inside setter best option", "d": "10/2018"}, {"body": "duplicate", "d": "10/2018"}, {"body": "already saw discussed many times going happen however achieve user memoize helper lodash one", "d": "10/2018"}, {"body": "memoize work use memory least going changed would nice update docs clarify filters executed every rerender", "d": "10/2018"}, {"body": "need boiled repro memory leak reports", "d": "10/2018"}, {"body": "responded vue forum well maybe issue works using scoped slot", "d": "10/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "10/2018"}, {"body": "probably race condition get around setting", "d": "10/2018"}, {"body": "probably race condition get around setting good ideathank", "d": "10/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "10/2018"}, {"body": "use chinese key", "d": "10/2018"}, {"body": "", "d": "10/2018"}, {"body": "seems solve problem thanks still think lean towards may easier use less error prone posva could communicate feature request create another issue maybe make", "d": "10/2018"}, {"body": "tye code using version works ie", "d": "10/2018"}, {"body": "yes mean still support keycodes part automatic key modifiers use instead due reasoning explained", "d": "10/2018"}, {"body": "added pull request new test case solution", "d": "10/2018"}, {"body": "since appears typing issue runtime issue ugly workaround available cast type additionally omit store reference method executable outside current scope eg pass child via prop", "d": "10/2018"}, {"body": "vue better type declaration support typescript seems broken", "d": "10/2018"}, {"body": "also experiencing issue switched different keys works megacromulent also never done pr would interested collaborating want second pair eyes", "d": "10/2018"}, {"body": "hey thanks offer thing would put documentation nt js skills contribute library like vuejs thanks offer though wed oct david golden notifications githubcom wrote also experiencing issue switched different keys works megacromulent also never done pr would interested collaborating want second pair eyes receiving mentioned reply email directly view github mute thread", "d": "10/2018"}, {"body": "got", "d": "10/2018"}, {"body": "hey theianjohnson use provideinject provide event handlers inside component later injected component child components chooses inject methods might solution asked least create strong coupling like proper documentation pretty easy manage example event bubbling events caught parent bubble root component reason another handler event name trouble makes also much harder see explicit connections especially component tree changes component longer ancestorchild specific component", "d": "10/2018"}, {"body": "hey theianjohnson nt know ideal works appvue helloworldvue vue export default mounted const slot slotsdefault switch slotcomponentoptionstag case embedded slotcomponentinstance shout gt consolelog aw yeah break default break embeddedvue", "d": "10/2018"}, {"body": "take", "d": "10/2018"}, {"body": "found calls recursively casuses bug bug gone converting recursive calls loop style see noted recursive call still remains sure best way solve issue works least simple case components break indents intentionally illustrate strategy diff srcserverrendercontextjsold srcserverrendercontextjs next true const laststate thisrenderstates thisrenderstateslength isundef laststate return thisdone thisrenderstatespop laststatetype element thiswrite laststateendtag thisnext else thisnext recursive call still remains return break case component thisrenderstatespop thisactiveinstance laststateprevactive thisnext break case componentwithcache thisrenderstatespop bufferlength bufferindex componentbufferlength bufferindex thisnext break", "d": "10/2018"}, {"body": "seems fixed note reverted released due regressions", "d": "10/2018"}, {"body": "also ran similar issue today expect fix released ca nt use things broke tried reverted back problem cause headaches would nice fix released", "d": "10/2018"}, {"body": "yekver ever overcome issue vue cli nt seen solve", "d": "10/2018"}, {"body": "understanding render replace", "d": "10/2018"}, {"body": "indirectlylit accomplish caching state note illustrates generic pattern case probably update inside event anyway probably less code much simpler solution almost equivalent previous buggy dep tracking making eager recompute way every template code essentially forcing recomputation change words always eager hand computed value always waiting explicitly requested words always lazy personally find much simpler reason could propose potential solution think might viable add something like additional computed option would effectively translate pattern like", "d": "10/2018"}, {"body": "thanks frizi yup adding watchers exactly ended example simplification actual usecase see full code change context appreciate might case implementation details lazy vs eager evaluation might need bubble vue api exposed way ideal world though love kind combination gets used underthehood eagerly set dirty flags without recomputing lazily recompute dirty values requested nt know enough dep tracking internals vue know feasible practice", "d": "10/2018"}, {"body": "ideal world though love kind combination gets used underthehood eagerly set dirty flags without recomputing lazily recompute dirty values requested rereading original issue see similar already said possible full fix would involve either traversing full dependency graph deep dependants first collecting array like previous implementation", "d": "10/2018"}, {"body": "indirectlylit ideal world though love kind combination gets used underthehood eagerly set dirty flags without recomputing lazily recompute dirty values requested exactly happening standard computed values computed values lazy watchers mean dependency change dirty flag set value requested cached one used recomputed dirty important part transitive dependencies always treated like direct dependencies means computed value calls computed value b dependencies b copied done like b dependency change request value recomputed risks outdated changing behaviour first check b actually changed simple keep deferred point requested dependant computed value caring recompute possible think achievable complexity much bigger many cases might turn benefits outweighs costs complexity speed today hardware memory fetch usually slowest action take caching every trivial computation like actually serious performance hog still place methods", "d": "10/2018"}, {"body": "status", "d": "10/2018"}, {"body": "issue still remains", "d": "10/2018"}, {"body": "ok", "d": "10/2018"}, {"body": "posva aha look vue source line function decodeattr var decodingmap includes four named entities plus ironically newline tab var shoulddecodenewlines logic passing false parsing attribute value whole approach using decodingmap limited naive html entity valid inside html attribute maybe submit new bug decodeattr function hi kidplug ever get submit bug think bug fixed apparently many affected though", "d": "10/2018"}, {"body": "made workaround decodeattrs content reason nt want textarea decode otherwise would work example decode everything else keep object notation also works perfectly", "d": "10/2018"}, {"body": "using fixed seeing problem", "d": "10/2018"}, {"body": "vue ok", "d": "10/2018"}, {"body": "going bring status feature request confirmed already implemented proposed solve issue simply want alias prop names would nt write time willing work feature confirmedimplemented", "d": "10/2018"}, {"body": "solution either update vuejs use scope instead slotscope still issue really annoying trying build renderless component abstractions comes quite often", "d": "10/2018"}, {"body": "leaving comment may helpful others whilst definitely handled inside vue project meantime looking solution right created compile directive configurable allows use syntax webcomponents proper solution place would nt mind creating pr getting something implemented vue unknowns regarding handled example web components use handlers even expose property event target eg components created via think needs thought terms", "d": "10/2018"}, {"body": "confirming", "d": "10/2018"}, {"body": "", "d": "10/2018"}, {"body": "doeke code nice catch error reject", "d": "10/2018"}, {"body": "export default created var style documentcreateelement style styletype textcss styleid name stylesetattribute scoped styleinnerhtml content dynamic generated styles documentgetelementsbytagname head appendchild style problem also like small difference problem issue trying lot deep also gt gt gt still nt get another solution one thanks", "d": "10/2018"}, {"body": "fragment table vue item vue \u70b9\u6211 import table table import fragment fragment export default name vcfragmentbasic components vctable table vcfragment fragment methods handleclick e id alert \u4f60\u70b9\u51fb\u4e86\u6211 u ca nt like", "d": "10/2018"}, {"body": "nt believe caching nt work oo maybe pr help fix still opened february one use cache", "d": "10/2018"}, {"body": "notice two data properties classes inside use", "d": "10/2018"}, {"body": "anyway original question useful additional info part optional", "d": "10/2018"}, {"body": "made plans implement check", "d": "10/2018"}, {"body": "ping", "d": "10/2018"}, {"body": "wrap elements trigger onchange event", "d": "10/2018"}, {"body": "made cases jsfiddle might help explain problem first case get turned second case long list characters one escaped third getting list characters retrieving regular character nt escape", "d": "10/2018"}, {"body": "using vuex track error might come display error right way error prone feature would remove need", "d": "10/2018"}, {"body": "problem named scoped slot render vuecomponent mycomponent template new vue el app", "d": "10/2018"}, {"body": "mikeevstropov codepen linked working see nothing wrong pasted code comment either", "d": "10/2018"}, {"body": "sirlancelot thank reply codepen updated works upgrade vue latest", "d": "10/2018"}, {"body": "wanyaxing problem call destory dynamic component work find js heaps goes higher numbers nodesit appears dynamic component created doms without destroying", "d": "10/2018"}, {"body": "would make case far documentation making better software enforcing notifying type violation occurs catching errors happen type checking systems check input also check output c java typescript say vue wants provide type checking props makes sense type check emitted events input output component type check neither", "d": "10/2018"}, {"body": "zhaoqize question u find problem", "d": "10/2018"}, {"body": "got error within component function fixed adding html element match example op insde component code extract javascript componentwithrenderfunction js part component thisrender function return scopedslotsdefault item dataitem thing understanding create scoped slot markup available function", "d": "10/2018"}, {"body": "posva simple testing discovered appear work custom input components nt inspecting component root element see property lists modifiers present ie inspecting property nt appear would nice able check within component modifier set vmodel one could change event ed change fired suppose one could create prop component would nice option detect modifier custom input would work like standard input", "d": "10/2018"}, {"body": "use crazy works", "d": "10/2018"}, {"body": "text input solved inputs", "d": "10/2018"}, {"body": "unhelpful thread ever problem webpack define plugin code input suggestion documentation say file put makes sense", "d": "10/2018"}, {"body": "well course nt tell since vue nt come webpack config means could written way want saved anywhere want nt know webpack config change might learn webpack know sharing information us maybe give specific tip", "d": "10/2018"}, {"body": "well issue strange may related vue component mount domview correctly production mode yet development fine using heroku ruby rails webpacker gem node environment set development asset precompilation rails assets precompile command works webpacker successfully compiling development vue debugging detecting vue production local dev packagejson seems working fine scripts framework webpack config buried gem framework presets supposed work something post code morning wake likely yet another nightmare datamodelmatrix abstraction visualized multidimensional space thanks responding trying get contact anyone days", "d": "10/2018"}, {"body": "would kindly ask open topic forumvuejsorg active pick left closed issue vue core repo wrong place specific question", "d": "10/2018"}, {"body": "mon oct thorsten l\u00fcnborg notifications githubcom wrote would kindly ask open topic forumvuejsorg active pick left closed issue vue core repo wrong place specific question receiving commented reply email directly view github mute thread", "d": "10/2018"}, {"body": "create new component route captures url redirect url send url component redirect urlbase locationorigin locationpathname url urlbase mylinknew result", "d": "10/2018"}, {"body": "ref used together vfor ref get array containing child components mirroring data source think text misleading clearly nt mirror sequence ref used together vfor ref get array containing child components mirroring data source take note vfor refs guarantee order source array took hours discover order guaranteed complete resources went find issue discovered implementation pushing discovered spec tests sequential domdata found thread looking report issue checked nt mention behaviour checked also nt mention anything even insinuates opposite", "d": "10/2018"}, {"body": "case occured missed second argument root emit someevent eliminated error root emit someevent comprehension", "d": "10/2018"}, {"body": "myxibrium solution nt work changing vue export default props value", "d": "10/2018"}, {"body": "", "d": "10/2018"}, {"body": "", "d": "10/2018"}, {"body": "change fires blur input captures every keystroke confusing referring discussion confusing listen time lead hard debug bugs talking building core framework specific issues evan framework library always warn developer use name custom event native think delegation custom components native events treated way also people coming different ecosystems might expect modifier lucky waste mins ran posted issue using jsx styled components answer helped deviation pointer experienced react user", "d": "10/2018"}, {"body": "might missing something obvious using thispropertyname something big mounted hook nt solution nonobserved properties", "d": "10/2018"}, {"body": "hi vlahanas see", "d": "10/2018"}, {"body": "cli generated app dynamically gets user imgs names server required advance works html inline template vue template mean need smth like working always says guess defined vue file nt render string value style property tries run function oh tried add function fond solution thank", "d": "10/2018"}, {"body": "thank", "d": "10/2018"}, {"body": "ca nt seem replicate following vue use case similar tonypee scenario particularly need callbacks provided transitions nt want hideshow elements move anyone else luck see property template appears dom vue processing fyi already possible using prop text div swapped transition changed also work", "d": "10/2018"}, {"body": "different approaches looking also explanations things would added vue api", "d": "10/2018"}, {"body": "addressed however difficult backport similar api unfortunately going land addressed reply vague thread needs continuation", "d": "10/2018"}, {"body": "progress", "d": "10/2018"}, {"body": "solution add notify method object data binding add still horrible hack", "d": "10/2018"}, {"body": "thanks luxp way work popuphtml way dit work saving time thanks lot part manifestjson", "d": "10/2018"}]