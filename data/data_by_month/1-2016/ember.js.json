[{"title": "wrapper divs affecting styles", "body": "hi nt know using views ember template ember creating wrapping divs outside divs causing problems div styles ember create div using view way disable div remove specific div thanks", "num": "12871", "d": "1/2016"}, {"title": "data loading api cache", "body": "hello trying load embedded data problem model already cached page embedded data load view however reloaded scratch therefore read api load see data loaded model ember inspector plugin however could tell issue data load every time would appreciated many thanks import ds emberdata import webapiserializer emberwebapiserializerswebapi export default webapiserializerextend dsembeddedrecordsmixin attrs subjects embedded always models import ds emberdata export default dsmodelextend name dsattr string graduationdate dsattr string institutionlevel dsattr string subjects dshasmany subject cv dsbelongsto cv import ds emberdata export default dsmodelextend name dsattr string grade dsattr string education dsbelongsto education", "num": "12870", "d": "1/2016"}, {"title": "versions missing changelog", "body": "please include changelog entry tiny version release ca nt tell changing", "num": "12869", "d": "1/2016"}, {"title": "typo css file led weird error", "body": "typo css file led weird error pretty much hint somehow connected css file width quote typo ember build environmentproduction version could find watchman falling back nodewatcher file system events visit info build failed file assetssuperrentalscss bodysplit function typeerror bodysplit function optimizertokenize objectoptimizerprocess optimizeroptimize objectoptimizerprocess objectoptimizeselectors replace cleancssminify objectimportinlinerprocesswhendone inlinerprocessnext objectinlinerprocess", "num": "12868", "d": "1/2016"}, {"title": "component resets attributes dynamic attribute changed", "body": "component pass static dynamic parameters component updates static values interaction dynamic parameters updated implementing component static parameters reset would expect component retains updated value ember twiddle", "num": "12867", "d": "1/2016"}, {"title": "return", "body": "js appinstanceinitializersfoojs export default name foo initialize instance let owner embergetowner instance owner instance false today example seems reasonable dgeb objections", "num": "12866", "d": "1/2016"}, {"title": "title property binding work checkbox input", "body": "observed several versions ember", "num": "12865", "d": "1/2016"}, {"title": "two way data binding web components", "body": "following fiddle shows would like tested chrome essentially would like web component change property ember change data model current workaround attach mutation observer onto node set callback hoping could handled ember plan something like thanks", "num": "12863", "d": "1/2016"}, {"title": "typeof undefined source", "body": "tried nombom everything still get issue undefined ember source fails stack even put breakpoint top module object comes nt keys", "num": "12862", "d": "1/2016"}, {"title": "fails test attribute passed", "body": "component loops optional attribute works fine running code regardless whether passed empty array undefined however tests throwing error inactivemodels passed inline hbs component changing code following fixed matters body yields also canary", "num": "12861", "d": "1/2016"}, {"title": "unregister component template", "body": "method fails fully unregister component template see twiddle successfully register component template using however try unregistering template followed registering different compiled template place original template one gets rendered twiddle demo clicking register template register first compiled template clicking change template first unregister old template followed loading new complied template yet component template rendered still see original compiled template demo utilizes helper load registered component template cc dgeb possibly related commit", "num": "12859", "d": "1/2016"}, {"title": "consider using get access templatename emberroute", "body": "problem currently internal function ember route access via regular javascript access operator makes specifying computed property problematic e g coffeescript match subject matchers gt emberroutereopen templatename computed routename gt match get routename new gt defaultnew edit gt defaultedit gt defaultindex wo nt work fix possibly consider changing line okay pr", "num": "12857", "d": "1/2016"}, {"title": "asset fingerprints missed generated html", "body": "code parses commonmark formatted text emits ember app helper punchline looks like use like everything working pretty well except generated html happens refer something asset directory production mode images fingerprints ember never adjusts src tags generated html right turned fingerprinting point storing assets database meantime future reference way ask ember link files assets directory relevant fingerprints nt exist", "num": "12855", "d": "1/2016"}, {"title": "update documentation specifying keys", "body": "discussed documentation repo specifying keys api documentation mention hoping explanation using appropriate something like specifying value use index item array match items dom reuse value appropriate list items primarily identified position array instance given array arrays representing cells conway game life adding key improve rerendering performance", "num": "12853", "d": "1/2016"}, {"title": "transitiontoroute someroute aborted ember", "body": "approuterjs import ember ember import config configenvironment const router emberrouterextend location configlocationtype routermap function thisroute questions thisroute question path questions questionid approutesquestionsjs import ember ember import authenticatedroutemixin embersimpleauthmixinsauthenticatedroutemixin export default emberrouteextend authenticatedroutemixin correct wrong model return thisstorefind question questions gt return thisstorefind key thisget sessiondataauthenticatedkey key gt thisset correct keyget correct thisset wrong keyget wrong return keyget questions aftermodel model transition thiscontrollerfor question set key thisget sessiondataauthenticatedkey model modelfilter item gt return thisget correct indexof itemid amp amp thisget wrong indexof itemid thistransitionto question modelget firstobject approutesquestionjs import ember ember export default emberrouteextend model params return thisstorefind question paramsquestionid setupcontroller controller model controllerset model model appcontrollersquestionjs import ember ember export default embercontrollerextend key option actions submitquiz thisstorefindrecord key thisget key key gt keyset answer thisget option keysave gt thistransitiontoroute questions however thistransitiontoroute questions appcontrollersquestionsjs aborted middle transition continues current questions questionid route instead idea happening way force transition", "num": "12851", "d": "1/2016"}, {"title": "js include file question bug", "body": "hi new want use emberjs little bit confuse one use whereas name describes use want confirm releaseembertemplatecompilerjs releaseemberdebugjs releaseemberjs releaseemberminjs releaseemberprodjs", "num": "12850", "d": "1/2016"}, {"title": "linkto disabled attribute working", "body": "hey looking api docs helper possibly wrong place api defined nt seem working define generates element class applied instead attribute set example", "num": "12849", "d": "1/2016"}, {"title": "models undefined", "body": "another strange bug ember sometimes get error switching routes typeerror models undefined error nt happen times ca nt reproduce every time way reproduce twiddle repo private could track bug linkto nt know triggers sneaky bast ideas", "num": "12845", "d": "1/2016"}, {"title": "docs buildcontainer mentioned controller docs", "body": "nt believe exists anylonger nt leak sort information abstraction level", "num": "12844", "d": "1/2016"}, {"title": "two way binding chained computed properties seem work properly", "body": "component property array elements computed property depending model return elements whose name matched search query basically length component source template use component synced means changes component updated accordingly fact overridden first time twoways sync type something change computed property update accordingly happen figure bug want", "num": "12842", "d": "1/2016"}, {"title": "debounce runs twice reproduceable ember twiddle included", "body": "hi issue debounce fired twice starting debounce see twiddle update increase debounce time starts debounce like expected", "num": "12841", "d": "1/2016"}, {"title": "issue warning using dep key", "body": "per discussion krisselden work properly warn people one prop dependent key possible may made work future giant footprints gun help people avoid", "num": "12840", "d": "1/2016"}, {"title": "document returning true required emberroute continue bubbling", "body": "mention want parent route fired must", "num": "12839", "d": "1/2016"}, {"title": "tutorial fails ember data section due wrong ember version", "body": "default tutorial install npm instructed getting started section get ember emberdata order mirage work instructed tutorial changed dependency listed ember emberdata bowerjson emberdata packagejson spent several hours trying debug understand data mirage displayed web console getting picked model finally one coworkers told version fix someone trying pick learn ember hitting rode block like detrimental selling tool", "num": "12837", "d": "1/2016"}, {"title": "allow contextual components without nested component helper", "body": "quite sure file suggestion apologies advance wrong place ember blog post contextual components created using nested form helper may passed attrs positional params contextual components must invoked path unless passed invoking helper simple nested components leads something like already explicit passing component button attr instead requiring use component helper template would possibledesirable detect component allow ps thanks hard work ember fantastic", "num": "12836", "d": "1/2016"}, {"title": "error catching promise rejection controller component action", "body": "hey always catch promise rejection controller component action causing following error design ember twiddle", "num": "12835", "d": "1/2016"}, {"title": "template renders findall finished", "body": "since update following problem navigate specific route another route template renders records already store seconds records loaded network request displayed documentation says continue see templates previous route model finish loading happen template displayed model already loaded", "num": "12834", "d": "1/2016"}, {"title": "performance degradation modifying component attributes", "body": "recently started migrating several preglimmer applications ember noticed severe performance degradation updating attributes components sure actually bug guides must updated explaining kind data pass components possible consequences change data created twiddle demonstrate issue twiddle pass data around lot components capturing timeline application changing data see awful lot htmlbars revalidation stuff going compared cost simply changing attribute might even bound dom enormous data passed observed behavior x passed components rendered one change seems revalidate nodes passed components rendered none change seems revalidate nodes z local components rendered updated one change seems revalidate entire node tree leading component renders z data passed components datax rendered one component change seems revalidate entire node tree leading component renders datax datay rendered component change cause revalidation expected", "num": "12833", "d": "1/2016"}, {"title": "emberjsbuild improvements", "body": "note building emberjs ember apps babel helpers imported rather inlined postbuild file sizes qunit test runner needs ui running one packages test modules", "num": "12830", "d": "1/2016"}, {"title": "glimmer promiseaware templates", "body": "often requested ember data basic idea give promise helper curly component ember rerender promise resolves example currently never rerenders api determining whether promise resolved never leads user implement bookkeeping setting properties controller relying watching arbitrary kvo rerender occur alternatives promise helpers nt really anything flushed yet think stefanpenner ideas issue belongs rather ember data affects promises templating ember", "num": "12825", "d": "1/2016"}, {"title": "replacewith broken routing page load", "body": "given app following js routerjs thisroute foos function thisroute show path fooid route foos model return one two three routefoosindex beforemodel const foos thismodelfor foos thisreplacewith foosshow foos open new tab type location bar hit enter type location bar hit enter type location bar hit enter press back button taken back yahoo google change problem becomes new one load app click link redirected correctly press back redirected incorrectly", "num": "12824", "d": "1/2016"}, {"title": "support jquery", "body": "jquery release blog post currently installing jquery generate error nt compatible ember whatever function checks updated jquery major update might breakage", "num": "12821", "d": "1/2016"}, {"title": "dist files broken", "body": "build step longer works fails checking see files miss lines comparing overview ember javascript application framework copyright copyright tilde inc contributors portions copyright strobe inc portions copyright apple inc rights reserved license licensed mit license see version function var enifed requiremodule eriuqer requirejs ember var maincontext function var isnode typeof window undefined amp amp typeof process undefined amp amp tostringcall process object process isnode ember thisember thisember typeof ember undefined ember typeof emberloader undefined var registry var seen else enifed emberloaderdefine requirejs eriuqer requiremodule emberloaderrequire probably something happened build process", "num": "12820", "d": "1/2016"}, {"title": "find module rsvp", "body": "installing ember cli trying use produces following error throw err error find module rsvp functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire npm node", "num": "12819", "d": "1/2016"}, {"title": "please release embersource gem", "body": "could someone release new version security fix", "num": "12818", "d": "1/2016"}, {"title": "setting previously undefined observed property init causes inaccessible via get", "body": "problem ember nt able access property componentjs neither via binding via always returning turns bad idea observe property defined called assigned via instead see ember twiddle happens conjunction observers computed properties observe another property seems observers initialized called guess understand expected behavior least warning console took whole day isolate behavior ember app find reason fix found ticket sounds similar sure whether ever added", "num": "12817", "d": "1/2016"}, {"title": "ember broken check production", "body": "application running ember see application fails load windows phone devices ie amp edge fine well chrome android desktop browser safari debug tools see following message appear open page thanks minification production environment stacktrace rather useless disappointed anybody seen behaviour could provide insight happening specific devices ios version", "num": "12815", "d": "1/2016"}, {"title": "classnamebindings triggering correctly", "body": "ember seems classnamebindings triggering correctly using addon ivytabs active class set changing tabs dont think bug related ivytabs since got problems implementation javascript classnamebindings active activeclass active active embercomputed function thisget isselected return thisget activeclass property isselected set active class nt anything changed ember", "num": "12814", "d": "1/2016"}, {"title": "suddenly goes undefined component", "body": "hi working project come across issue suddenly goes undefined clue going could bug ember using first loads problem every time thereafter third goes undefined context globals pdfjs promise import ember ember const get emberget const set emberset export default embercomponentextend hook removes element dom destroyed method willdestroyelement return void willdestroyelement remove runs hook ember element component applied dom method didinsertelement return void didinsertelement renderpage page thanks consideration", "num": "12813", "d": "1/2016"}, {"title": "embercoreobject concatenatedproperties overriden", "body": "onward changing unrelated properties object causes properties included array overwritten bug demonstrated fiddle changing value input bug exist", "num": "12811", "d": "1/2016"}, {"title": "update single li instead enitre ul", "body": "hi one page displays list similar item using html ul li combination list get update regular interval ever li item value changes backend happening issue want updateredraw particular list updated enitre html ul list item using template way acheive please guide", "num": "12809", "d": "1/2016"}, {"title": "ember jsonserializer normalizeresponse array meta problem", "body": "hi use ember need paginate list web app server return following response problem trying call map function payload array results property payload var nt understand work impossible set meta map payload var think expected behaviour nt special way issingle false meta set ask questions needed thanks", "num": "12807", "d": "1/2016"}, {"title": "long list dynamic updates make ui unusable", "body": "hi using ember project page nearly list item list contains small map gets updated every seconds without refreshing page using socketio updates new date arrives map gets updated updation takes place ui really usable able scroll select box page able use like ui friezed please provide solution issue", "num": "12806", "d": "1/2016"}, {"title": "helpers made emberhelperextend nt throw block form", "body": "see twiddle demo throw align helpers made", "num": "12804", "d": "1/2016"}, {"title": "changing values mobile safari", "body": "mobile safari ember text field focus programmatically change value bound value text field change correctly", "num": "12803", "d": "1/2016"}, {"title": "ember guides default latest version", "body": "following link ember guides ex presented version instead latest since api docs link without specific version url means links api docs guides show old guides appears caused redirect simply hitting shows latest version example go click routing guide expected see guides since api documentation version actual guide displayed", "num": "12801", "d": "1/2016"}, {"title": "input helper nt respect duplicate values computed property setter", "body": "set maximum within input computed property setter maximum respected via increment button maximum exceeded input set anything see twiddle maximum respected phenomenon reset number falls back computed properties maximum partial workaround set max via option input helper pressing two numbers quick succession basically spamming numbers keyboard breaks workaround computed property setter still entered input nt respect value returned full ugly workaround hurray puns computed property setter call", "num": "12800", "d": "1/2016"}, {"title": "template hash longer overrides named binding", "body": "issue mentioned understood could overwrite automatically created named binding binding hash template testing twiddle mentioned issue make sure manually select correct ember dependencies test", "num": "12799", "d": "1/2016"}, {"title": "container nt return value registered value falsy", "body": "according issue container treat falsy values however later lookup container returns even registered value falsy values believe intentional demo", "num": "12796", "d": "1/2016"}, {"title": "assertion failed ember views require jquery", "body": "installed embercli following rock roll emberjs book facing error console ca nt see welcome ember js text navigate written book", "num": "12794", "d": "1/2016"}, {"title": "ember views require jquery", "body": "hi guys install last stable release embercli uses ember version create empty project using make application execution get following error whats wrong im using last stable release update jquery version bowerjson series works issue comes thks", "num": "12792", "d": "1/2016"}, {"title": "testadapterexception forces acceptance test fail rsvp error fails test", "body": "workaround first thought may best address update testing guides sure best way fix steps reproduce example repository ember cli app ca nt done w jsbinfiddleembertwiddle since issue testing env steps used create example app create app one model hooks making xhr request create applicationerror template perhaps use since error become model via applicationerror route setupcontroller hook create acceptance test test applicationerror template displays error message acceptance test mock xhr return response used sinonjs embersinon addon write assertion checks dom eg expected result test passes even though error thrown route model hook mocked response actual result assertion passes template rendered test fails since called throws causes test fail result expected error causes applicationerror substate render attempts solve tried since couple developer mentions looks related setup custom error xhr failure property code fails test applicaitonerrorhbs template works hack reopened redefined example error thrown env ember rsvp calls fails test error expected error handled applicationerror routecontrollertemplate acceptance test using help since async found reopen test adapter acceptance test like testsacceptanceapplicationerrortestjs js import test qunit import ember ember import moduleforacceptance applicationerrortesttestshelpersmoduleforacceptance import startapp applicationerrortesttestshelpersstartapp import sinon sinon embertestqunitadapterreopen hack throwing error route must use errorname otherwise inside fails tests via error results rendering applicationerror template exception function error var makeitpass false debugger change true work around bug makeitpass mocked expected error renders applicationerror consolewarn expected error ignoring reason fail test error else normal errorname transitionaborted return thissupercall error moduleforacceptance acceptance applicationerror beforeeach function setup thissandbox sinonsandboxcreate setupfakeservercall mockfetchsessioncall thisapplication startapp aftereach function teardown emberrun thisapplication destroy thissandboxrestore delete thissandbox test server error applicationerror template renders function assert let done assertasync visit andthen function assertequal currenturl url assertequal find errormessage length application error template rendered done function setupfakeserver thissandboxstub ember ajaxprefilter thisserver thissandboxusefakeserver thisserverautorespond true function mockfetchsession mockbadgatewayresponsecall function mockbadgatewayresponse thisserverrespondwith get apisession contenttype texthtml pseudo application code templatesapplicationerrorhbs hbs oops modelmessage routesapplicationjs js import ember ember export default emberrouteextend model return ember ajax url apisession method get sure see readme example repo commit shows setup example app", "num": "12791", "d": "1/2016"}, {"title": "ember views require jquery", "body": "jquery recently updated anyone auto version upgrades bowerjson file ie updated following check fail reason regex checking hardcoded list numbers rather true range check", "num": "12790", "d": "1/2016"}, {"title": "thissuper broken thisreopen", "body": "reopen super methods longer called works including broken example ps considering edge case documenting behavior triggering warningassertion calling reopen constructed class fix", "num": "12786", "d": "1/2016"}, {"title": "viewsupportjs nt making api docs", "body": "see missing docs items anywhere else", "num": "12785", "d": "1/2016"}, {"title": "ember use touch event listeners bad scroll performance", "body": "ember indiscriminately adds touch event listeners root element eg body means scrolling page uses ember need blocked whatever js running sites fine never run anything longer many others results terrible user experience browsers dispatch touch events came across performance audit nasa page page sorts performance problems mobile remove ember touch event listeners force passive scrolls beautifully working adding feature web called passive event listeners may make lot easier solve problem love feedback feel free file issues nt know ember clear would need change ember fully adopt model basic idea seems sound perhaps use issue discuss ember may able adopt", "num": "12783", "d": "1/2016"}, {"title": "documentation missing htmlbars expression try use attribute variable", "body": "started using ember burned couple times trying use variable inside expression likely issue htmlbars docs think would go long way add ember docs well templates tend something follows taken ember docs fine wanted sorry useful example unfortunately work instead must add inside ex adding simple example like docs would helpful would likely prevent many waisting time trying figure hopefully missing something though tongue", "num": "12782", "d": "1/2016"}, {"title": "router cleaned acceptance tests", "body": "memory profiling ember app tests suite tests suites failing ci without providing error message eliminating many possible causes started focus outofmemory errors two heap snapshots test run seconds tests apart one two load chrome select second snapshot click dropdown value objects select objects allocated one two sort retained size top entry dominated instances second dominated seems properly clean internals", "num": "12780", "d": "1/2016"}, {"title": "extend recordarray specific model type", "body": "often require derive computed properties set models models always accessed store returns recordarrays impression could extend recordarrays place computed properties essentially behave like collections backbone could nt find way way think really enhancement emberjs consider", "num": "12779", "d": "1/2016"}, {"title": "glimmer integration stuff", "body": "x need able build ember without glimmer default without x split glimmer compiler runtime cc stefanpenner", "num": "12778", "d": "1/2016"}, {"title": "upgrade qunit", "body": "easier glimmer integration", "num": "12777", "d": "1/2016"}, {"title": "ca nt yield params inverse", "body": "undefined", "num": "12775", "d": "1/2016"}, {"title": "functionprototypeapply arguments", "body": "looking similar places emberjs likely defeat optimizations wrt functionprototypeapply js engines example nowadays apply unmodified unmapped arguments ie strict mode arguments object sloppy mode arguments wo declared parameters fast even wo support optimizing compiler copying arguments temporary array first disables optimization adds allocation copying overhead also takes super slow path functionprototypeapply array holey due initial new array length working making slow path less slow still general require prototype chain hole checks nevertheless sure important workaround currently guess lot android phones still running outdated chromium based browsers future probably consider copying arguments calling apply", "num": "12774", "d": "1/2016"}, {"title": "clarification behavior actions links", "body": "believe clarification needed default behavior actions links developing feature requires link marked read opened added action link making sure allow default browser actions moved things afterwards though realised nt work opening links new tab using key figured must done something wrong went digging turning allow modifier keys aside parameter documented side issue happy resolve looked tests modifier keys modifier keys appear tested could nt figure behavior nt meant likely edge case minor interface actions overwhelming based use case said felt issue represents tripping point beginners created js bin illustrate issue click around see feels natural thoughts misconfigured desired behavior feel weird try opening new tab window solid even opening new tab questions allowedkeys defaulting best way add action external link basis updating guides going crazy adding actions links thanks", "num": "12770", "d": "1/2016"}, {"title": "build error embertemplatecompiler self closing html tag", "body": "current example guides example except run receive error error resolved adding space however example valid html filed issue guides display nonerror causing example emberjsguides problem actually template compiler nt know parser actually works believe function call see character", "num": "12769", "d": "1/2016"}, {"title": "routetransitionto behaves incorrectly resetnamespace true", "body": "routes like code like however instead going goes pass parent since route make go route child instead", "num": "12767", "d": "1/2016"}, {"body": "support questions like fit better needhelp channel ember community slack ping slack happy help register", "d": "1/2016"}, {"body": "ember create div using view pretty confident adds using componentview ifeachother bound dataoutlet looks like view default div well represents tag runspired said likely better asked slack stackoverflow seems working designed maybe mediums help explore concerns turn issue gladly reopen", "d": "1/2016"}, {"body": "hi solve problem temporally unwrapping mydiv using jquery find best solution said maybe forgetting point pretty sure nt component view template using handlebars header footer page problem ocurrs contained outlet application without components views handlebars tags tested div single page without header footer assure nt affecting style without success going post issue slack stackoverflow thanks", "d": "1/2016"}, {"body": "seems like question issue emberjs codebase help like please ask stack overflow join ember community slack please look page options thanks", "d": "1/2016"}, {"body": "johnnyshields could open pr anything missing changelog also git whatchanged git showbranch could help see details", "d": "1/2016"}, {"body": "seems pretty complete always thought ember phenomenal job managing changelog things missing sure rarity", "d": "1/2016"}, {"body": "changelog automated things missing", "d": "1/2016"}, {"body": "referring file missing however present missing versions present file however think master changelog well", "d": "1/2016"}, {"body": "raised pr", "d": "1/2016"}, {"body": "johnnyshields branch point changelogs nonlinear", "d": "1/2016"}, {"body": "seems like bug broccolicleancss could open issue", "d": "1/2016"}, {"body": "supercoolfrog static value changed via action render update time action changes something parent node causing template redraw seems side effect resetting showyield back false nt think want mix stack value dynamic value perhaps define default value property use property instead static value nt believe bug behavior issue seems question discussion get quicker feedback ember community slack needhelp channel maybe stack overflow", "d": "1/2016"}, {"body": "thank response implemented work around similar described curious intended behavior since component init willdestroy called ask stack overflow thanks stack overflow please let know close issue", "d": "1/2016"}, {"body": "believe engine instance owner might better represented parent seems reasonable app instance owner", "d": "1/2016"}, {"body": "justinhackin create example bug perhaps try embertwiddlecom", "d": "1/2016"}, {"body": "ofersadgat use native components ember components still experimental yeah need use observer callback event creative way bridge behavior native ember component people experimented universal web component format eg", "d": "1/2016"}, {"body": "provide demorepro", "d": "1/2016"}, {"body": "try deploy issue look later today", "d": "1/2016"}, {"body": "made couple jsbin try track repro still digging going though", "d": "1/2016"}, {"body": "foxnewsnetwork best guess history subject using perhaps issue moved rfc issues see use rfc issues propose rough idea basically great place test waters", "d": "1/2016"}, {"body": "good question believe might best place ask", "d": "1/2016"}, {"body": "oh happens build time", "d": "1/2016"}, {"body": "well ember nt aware fingerprinting broccoliassetrev embercli level concern", "d": "1/2016"}, {"body": "okay thanks info looks like need get assets restful urls expect use without workarounds", "d": "1/2016"}, {"body": "okay thanks info looks like need get assets restful urls expect use without workarounds nt know means exactly think seems like question per contributingmd would recommend opened stackoverflow discourse", "d": "1/2016"}, {"body": "stefanpenner means long term plan serve images backend instead ember point responsible fingerprinting cache invalidation think seems like question thought ember something special run time urls nt triggering could nt find code wire helper manually misunderstood mechanics imagined block code nt", "d": "1/2016"}, {"body": "chance reproducing embertwiddlecom similar would handy us diagnose quickly", "d": "1/2016"}, {"body": "take time implementation try create small example", "d": "1/2016"}, {"body": "per better venue questions stackoverflow discourse discussion forum quick tl dir files hopefully helps description files following files essentially need time depending task releaseemberdebugjs lt development releaseemberjs lt development releaseemberminjs lt production minified releaseemberprodjs lt production unminified one required wish compile templates browser good hacking bad production releaseembertemplatecompilerjs best recommendation use embercli automagically", "d": "1/2016"}, {"body": "piqued interest decided look source interesting thing source hints disabled nt necessarily mean htmldisabled accessed classname binding apply css element link disabled interactions element trigger route changes tried locally taken test meaning route change occurring sense appears working exactly one would expect terms markup", "d": "1/2016"}, {"body": "ah makes sense attribute available", "d": "1/2016"}, {"body": "mehulkar curious could extend linkto helper define tagname attributebindings use disabled attribute", "d": "1/2016"}, {"body": "pixelhandler yeah almost certainly work", "d": "1/2016"}, {"body": "would fine workaround nt tried build yet sure possible need couple follow ups attribute called something else nt relate html attribute helper meant replacement html tag maybe nt really make sense ability disable people override default browser behavior apps ember maybe overriding helper add ability faux disabled link rather ember providing first class feature thoughts already worked around issue using tag directly specific use case happy close nt point contention", "d": "1/2016"}, {"body": "made pr fixes strange behavior want know happen", "d": "1/2016"}, {"body": "sounds like kind racecondition nt happen consistently", "d": "1/2016"}, {"body": "need see reproduction issue proposed fix overly defensive likely hiding issue ember app", "d": "1/2016"}, {"body": "dont know stack trace helps", "d": "1/2016"}, {"body": "dont know stack trace helps nope need reproduction", "d": "1/2016"}, {"body": "stefanpenner could provide pointers property set", "d": "1/2016"}, {"body": "would appear exists application behavior manifesting extracting part application would great starting point reproduction unfortunately asking reproduction idea issue happening without context nt actionable requesting context provided happily dive", "d": "1/2016"}, {"body": "unfortunately allowed disclose source code app corporate policies app grown big easily reproduce especially since api response appears play important role look greater detail try find cause able reliably trigger error however works one dev vms machines nt appear problem diffed js assets exactly machines machines run version linux version firefox chrome really nt know heck going", "d": "1/2016"}, {"body": "mohlek guess nt bug linkto rather legit race condition app gut feeling likely work investigation maybe something side linkto could totally use tlc require guesscheck", "d": "1/2016"}, {"body": "questions better asked stackoverflow discussion forms", "d": "1/2016"}, {"body": "thank time really trying solve personal problem rather discussing behaviour looks weird indeed came problem code reproduce behaviour would helped written issue sure bug fashion rewrite issue conventional manner", "d": "1/2016"}, {"body": "would helped written issue sure bug fashion yes likely would nice gh structure issue submission form would help live reproduction would make triaging much less overhead several issues reading suggested qa bug report take second argument docs computed properties mutable default setting replace nt want behavior two options make cp setter make advocated behavior change worry adding yet another large deprecation would much pain maybe", "d": "1/2016"}, {"body": "created twiddle explain weird concerning artefact left attempts made sorry want edit original issue keep like history", "d": "1/2016"}, {"body": "brendanrius regarding question fiddle change numberoffilteredelements component using number imput red component effectively synchronized bind input also use computed property component define getter setter computed property best guess computed property getting borked binding input best way use input computed property need getter setter computed property see", "d": "1/2016"}, {"body": "holding return continuously call runme method seems initial delay first pressing keydown continuously holding keypress key greater debounce interval", "d": "1/2016"}, {"body": "delay depends fast user set key repeat time operating system configuration given twiddle observe keyup yet fired sees debounced method called keypress ignore nt know something done probably action app implemented different way ember issue rather backburner", "d": "1/2016"}, {"body": "raido forked gist varied action debounce time see bug matter timing", "d": "1/2016"}, {"body": "know matter timing app went mentioned debounces guess closed documented one use short debounce time actions holding keys", "d": "1/2016"}, {"body": "make work although unless decide warningasserting documenting likely good idea", "d": "1/2016"}, {"body": "issue", "d": "1/2016"}, {"body": "camerenisonfire referring page getting started section guides resolve issue may good idea open issue guides repo instead also maybe good idea try pull request guides repo sure guides team would appreciate", "d": "1/2016"}, {"body": "right filing issue realized angle bracket components might fix aesthetics already understanding longer implied passed properties would yield following template currently works hbs attrsprop attrsbutton", "d": "1/2016"}, {"body": "max right exactly naturally improves move glimmer components automatically render contextual components dot name accept patch changes behavior intended design going close max", "d": "1/2016"}, {"body": "sounds like design also seems like something better asked discourse aka bugs really qa", "d": "1/2016"}, {"body": "got sorry thanks", "d": "1/2016"}, {"body": "problem", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "passing reload true parameter fixed", "d": "1/2016"}, {"body": "tests using ember prod fixed issues dev debug assertions unfortunately slow dev builds would like sure noticing", "d": "1/2016"}, {"body": "production build ember still see lot htmlbars activity seem differences debug production build timelines marginal", "d": "1/2016"}, {"body": "ok thank checking believe related example demonstrates something continuing effort", "d": "1/2016"}, {"body": "rwjblue krisselden wycats etal share thoughts", "d": "1/2016"}, {"body": "fivetanley like idea using promise proxy objectarray promise proxy mixin properties like mentioned used curious never rerender promise request never comments rendered change somehow like new comment added collection sure helpers eg would become promise aware currently guide page rendering list clear whether value passed helper promise see hbs people person hello personname property depends request promise would list items never render mentioned developers led solving creatively eg bookkeeping solution data persistence library rather application code sake sharing use cases people address example use computed property relation resolves data returned api request computed property promise proxy using array starts promise resolved content set array data change computed property rerender template post hasmany comments comment hasone commenter see models post comment commenter relationships use related proxy object hasmany hasone combined see computed property model hasone hasmany relations use proxy data comments template used outlet post template resolved array comments rendered likewise comments related commenter resolved renders template promise aware instead model relations proxy objects template rerender promises resolve", "d": "1/2016"}, {"body": "seems like rfc discussion", "d": "1/2016"}, {"body": "confirm copypaste rfc pixelhandler", "d": "1/2016"}, {"body": "closing favor moving discussion rfc think agreed point rfc discussion exist userland follow rfc discussion link inprogress implemented addon", "d": "1/2016"}, {"body": "fivetanley thanks added comment rfc", "d": "1/2016"}, {"body": "tried following mostly works would change route js routefoosindex beforemodel transition const foos thismodelfor foos thisredirectto transition foosshow foos works unless call calls case incremented redirect wrong", "d": "1/2016"}, {"body": "replacewith open new tab go go go routes move press back go google instead yahoo transitionto happens historylocation possibly well open new tab go routes move press back stay", "d": "1/2016"}, {"body": "assertion already removed canarybetarelease channels using jquery version throw error longer still need release point versions assertion removed using one channels work already", "d": "1/2016"}, {"body": "beers", "d": "1/2016"}, {"body": "hmm sorry looking", "d": "1/2016"}, {"body": "rwjblue also seeing problem embertemplatecompiler sure related wanted provide happened upgrade nombom", "d": "1/2016"}, {"body": "hitting us", "d": "1/2016"}, {"body": "shawndumas fyi rwj confirmed slack needhelp channel problem word fix yet mean time also considering upgrade nt think big lift", "d": "1/2016"}, {"body": "ty", "d": "1/2016"}, {"body": "anyone know change went morphrange seeing commit need create custom build locally work around hotpatch dist failing", "d": "1/2016"}, {"body": "shawndumas believe fixed build issue updating assets bower", "d": "1/2016"}, {"body": "bower builds fixed", "d": "1/2016"}, {"body": "clap thanks rwjblue know ca nt buy beer anywhere go hope continue phenomenon", "d": "1/2016"}, {"body": "cake", "d": "1/2016"}, {"body": "thanks works fine", "d": "1/2016"}, {"body": "thanks rwjblue problem make sure clean bower cache reinstall emberjs", "d": "1/2016"}, {"body": "happening npm node", "d": "1/2016"}, {"body": "closing favor embercli", "d": "1/2016"}, {"body": "versions mentioned published", "d": "1/2016"}, {"body": "remember react similar problem inlining elements fixed ca nt find issue", "d": "1/2016"}, {"body": "thanks rwjblue sparkles", "d": "1/2016"}, {"body": "orisomething ya remember seb telling accept someone blogged rather responsible disclosure", "d": "1/2016"}, {"body": "good chance fix add test case pr confirm", "d": "1/2016"}, {"body": "hey sorry late reply seems fixed directly assign unassigned observed properties read using template also updates successfully pr closed sure add test javascript qunittest watching undefined property assigning return value function var obj objectcreate watch obj foo objfoo bar equal get obj foo bar get new value", "d": "1/2016"}, {"body": "herom possible create code example embertwiddle jsbin jsfiddle would reproduce issue working example people could try reproduce issue possible tools perhaps repo hosting app somewhere could help reproduce issue", "d": "1/2016"}, {"body": "thanks lot reply pixelhandler unfortunately could nt respond sooner problem hit us hard production application investigated problem found root cause precompiler implementation used file system cache deliver template bundles per request basis blamed emberjs soon sorry", "d": "1/2016"}, {"body": "active property firing correctly add consolelog test log console every time change tab", "d": "1/2016"}, {"body": "looks like working try replicate problem embertwiddle", "d": "1/2016"}, {"body": "yeah seems something similar work nt work setup maybe addon crash ember", "d": "1/2016"}, {"body": "checked html confirm active class setted maybe css correct", "d": "1/2016"}, {"body": "ofc html see ul first li active div third one display block selected also active class bug switching works great class binding", "d": "1/2016"}, {"body": "got addon liquidfire nt defined transitions seems break something nt know defining transitions everything works fine go ahead create issue liquidfire thanks participating", "d": "1/2016"}, {"body": "god damn transitions nt seems fixed opened page different machine nothing worked holy shit oo refreshing cache computer nt work either", "d": "1/2016"}, {"body": "things getting strange reproduce bug machine able reproduce twiddle reloading page subroute tabs directly kills classbindinding single transition eg index back makes everything work nt know project bug related wether ivytabs ember liquidfire maybe someone give hint would thankful", "d": "1/2016"}, {"body": "mohlek mentioned twiddle example nt help show issue perhaps simple repo app someone clone would work", "d": "1/2016"}, {"body": "please share running reproduction guess async lands component removed mean legitimately element suspect qa help confirm repro provided open stack overflow forms bug tracker meant bugs help", "d": "1/2016"}, {"body": "got thanks", "d": "1/2016"}, {"body": "problem call unnecessary", "d": "1/2016"}, {"body": "kswilster bit confused use code example become rendered change input becomes assigned template expecting combination seems initially rendered kind magical see changing value input results remaining assigned looking api documentation used leads believe expecting template assignment work scope design seems used properties defined prototype object vs passed component assignment", "d": "1/2016"}, {"body": "pixelhandler agree docs say nothing property assignment expected act like computed maintaining record default values assigned values concatenating", "d": "1/2016"}, {"body": "questions though best asked stackoverflow forums contributingmd articulates issue tracker aims place track bugs", "d": "1/2016"}, {"body": "check addon recently published related pr", "d": "1/2016"}, {"body": "hi raido thanks response little patch normalizeresponse javascript normalizeresponse function store primarymodelclass payload id requesttype issingle let documenthash data null included patch nt break anything add metaresults payload possibility thanks", "d": "1/2016"}, {"body": "bad overriding private method app probably upgradeable newer versions ember data use mixin created", "d": "1/2016"}, {"body": "support meta limited due nature simple format either use simpler customization like overriding private methods generally good idea", "d": "1/2016"}, {"body": "future reference issues related ember data opened", "d": "1/2016"}, {"body": "hi thanks help raido yes know ugly thought unwanted behavior inside ember data jsonserializer override method order wait response wecc found better way implement jsonserializer thanks exemple javascript normalizearrayresponse function store primarymodelclass payload id requesttype let meta payloadmeta sorry wrong repo thanks closed want", "d": "1/2016"}, {"body": "auoiuiouio options like using generating html directly ember view ember discourse forum useful discussions best idea upgrade ember performance issues improved rather dramatically soon ember offer even better performance information state ember performance check issue", "d": "1/2016"}, {"body": "using unbound update list upgrading ember want point want map update time ui show poor performance even tried ember listview nt help much", "d": "1/2016"}, {"body": "ember longer supported unlikely changes fixes land interest improved performance series rendering engine handle rapid update case quite well", "d": "1/2016"}, {"body": "thank quick response fixes changes expecting ember wanted know solution handle kind issues upgrading ember please let know", "d": "1/2016"}, {"body": "michaelselberg please add code example perhaps embertwiddle jsbin jsfiddle people try reproduce issue mobile safari browser", "d": "1/2016"}, {"body": "would nice hopefully also cause search engines index latest version instead", "d": "1/2016"}, {"body": "btecu would huge win smile", "d": "1/2016"}, {"body": "looks like filed wrong repositories repositories existing issues", "d": "1/2016"}, {"body": "kybishop yeah twiddle example seems broke chrome firefox safari assumption input typenumber element behaving expected browsers perspective initial thoughts bug ember curious using number would better see", "d": "1/2016"}, {"body": "emrvb understand correctly suggesting name change issue template hash longer overrides named binding correct could considered duplicate issue correct", "d": "1/2016"}, {"body": "nt want clutter issue since passing attributes components issue gets renamed gets proper description specific problem close issue", "d": "1/2016"}, {"body": "emrvb concerned going confusing copied comment original issue close duplicate let keep discussion thanks", "d": "1/2016"}, {"body": "bowerjson may need use compatible version", "d": "1/2016"}, {"body": "see", "d": "1/2016"}, {"body": "changing bowerjson file version give error file directory bowercomponentsjquerydistjqueryjs etc navigate", "d": "1/2016"}, {"body": "instruction issue pin following run", "d": "1/2016"}, {"body": "issue dupe several others going continue track", "d": "1/2016"}, {"body": "dupe", "d": "1/2016"}, {"body": "fixed new release come today", "d": "1/2016"}, {"body": "whew ember thought computer internet way telling suck", "d": "1/2016"}, {"body": "version fix released trouble finding", "d": "1/2016"}, {"body": "twillis released yet still pending release update diff suggests run good", "d": "1/2016"}, {"body": "thanks", "d": "1/2016"}, {"body": "rwjblue stefanpenner look related seems like issue root cause rsvp error failing test", "d": "1/2016"}, {"body": "root cause rsvp error failing test sounds like symptom root cause", "d": "1/2016"}, {"body": "appears legitimate failure confusing noobvious way handle retain error page", "d": "1/2016"}, {"body": "relevant docs appear like obvious solution machty one gracefully handle exception", "d": "1/2016"}, {"body": "presently nt handle error action ifafter finds error substate continues throwing error hits console error reporters eg bugsnag detect report think people depend behavior nt think change general need solve problem substate testability lot issues stem default behavior waiting entire route transition promise chain complete meantime might consider following workaround application route basically tells ember error handled preserving default behavior big downside nested error substate template defined ignored since error hook run first ember tries find specific error substate route hmm really sure best way go one", "d": "1/2016"}, {"body": "machty stefanpenner embertesting method allow set test exception handler see api doc nt know override using nt way go one acceptance test perhaps would needed solve problem substate testability also documentation using error substates", "d": "1/2016"}, {"body": "stuck upgrading ember could solve workaround code thank pixelhandler", "d": "1/2016"}, {"body": "currently solution issue overwrite embertestadapterexception provides public api purpose example described rwjblueemberqunit think problem comes use default embertestadapter throw exception promise rejection make test fail imo default behaviour acceptance tests possible improvements could describe situation documentation amp guides acceptance tests remove default behaviour test adapter cc rwjblue", "d": "1/2016"}, {"body": "ppcano yeah example seems usable js let adapterexception beforeeach thisapplication startapp adapterexception embertestadapterexception embertestadapterexception gt null aftereach embertestadapterexception adapterexception emberrun thisapplication destroy", "d": "1/2016"}, {"body": "dupe", "d": "1/2016"}, {"body": "case getting following errors uncaught error assertion failed ember views require jquery uncaught error could find module ember imported xapp temporary solution remove jquery dependency bowerjs jquery remove bowercomponents folder perform bower install hope serves temporary remedy ember team provides definitive solution thank", "d": "1/2016"}, {"body": "fixed new release come today", "d": "1/2016"}, {"body": "sorry stupid question get corrections ember reinstalling using npm enough need pull commit tried go ember path path got using ember command inside folder tried pull correction directory seems correct make pull thanks advance", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "worked thanks", "d": "1/2016"}, {"body": "similar issue fixed calling instantiated class seems weird best sure much done actually fix underlying issue", "d": "1/2016"}, {"body": "unsure related requires", "d": "1/2016"}, {"body": "documenting behavior triggering warningassertion calling reopen constructed class fix want kill feature ca nt reasonable made work correctly scenarios still performant", "d": "1/2016"}, {"body": "well removal hitting undefined function also fix would saved hour debugging p", "d": "1/2016"}, {"body": "also duplicates", "d": "1/2016"}, {"body": "inverting dispatcher introduced event handlers instead ondemand something wanted ages matter finding time triaging larger set work someone motivated would support effort typically proposals feature requests submitted issues fleshed rfcs rfc repo issue tracker intended bugs etc falls would nice totally new thing category outlined contributingmd im going close instead suggest opened issue rfc repo", "d": "1/2016"}, {"body": "general application perspective possible disable listeners needwant via property application addedfixed supported since obviously solve generic case adding listeners needed useful tool applications specific performance needs", "d": "1/2016"}, {"body": "nt understand mean would pass invocation", "d": "1/2016"}, {"body": "rwjblue weird tried looks working wizard part likely something completely wrong stuckouttongue", "d": "1/2016"}, {"body": "screenshot", "d": "1/2016"}, {"body": "provide isolated reproduction please", "d": "1/2016"}, {"body": "bare ember app problem nt idea identify part app addon holding router references", "d": "1/2016"}, {"body": "mirage also uses routers could right routers page urls api urls", "d": "1/2016"}, {"body": "jamesarosen ca nt narrow could find time screen share", "d": "1/2016"}, {"body": "yes please coordinate slack", "d": "1/2016"}, {"body": "stackoverflow much better venue questions per also please sure skim believe gh ui suggests one read opening issue", "d": "1/2016"}, {"body": "build ember without", "d": "1/2016"}, {"body": "asking mean building ember without glimmer need ember without glimmer", "d": "1/2016"}, {"body": "cryrivers believe referring vs", "d": "1/2016"}, {"body": "integration treating regular feature flagged addition need able toggle ready enabled time", "d": "1/2016"}, {"body": "using latest qunit", "d": "1/2016"}, {"body": "oh created twiddle thing reproduce saw jsfiddle", "d": "1/2016"}, {"body": "make sense assume params inverse block main block would need syntax like currently supported handlebars describe usecase like hear compelling reasons add feature handlebars opposed", "d": "1/2016"}, {"body": "yes found self writing realising nt thing usecase came working emberselectbox eg instead writing", "d": "1/2016"}, {"body": "found seems prove yield inverse work noticed jsfiddle canary working current beta release", "d": "1/2016"}, {"body": "pixelhandler work yielding value block param inverse slot simply yielding back inverse works", "d": "1/2016"}, {"body": "tests modern ok without lovely problematic android friends nt lucky suspect branching ultimately worse uncommon paths hit hit hits steady state kinda tricky path forward short sniffing make change need real world tests android models causing grief cc chadhietala krisselden", "d": "1/2016"}, {"body": "point original issue caused workaround afaik weird deopt w apply arguments crankshaft measuring w benchmarks case nt hit often manually switch argumentslength use fpcall small lengths also rather unfortunate workaround since vm properly optimize either running pathological complex list thing seems see around calls superslow case fpapply holey array slow arguments object maybe find way avoid copying still hitting old crankshaft issue", "d": "1/2016"}, {"body": "bmeurer yes issue recall also worth noting past likely specialized apply variant implemented wrappers much common since platforms support added support wrap detected dramatically reduced usages might worth stripping al branching infavor pure current work longer pile androids desk testing sideaffects nt quite easy see round bmeurer interested google hangout sometime week way get page maybe compile hitlist action itemsinvestigations see friends linkedin really trying get better android perf lend hand", "d": "1/2016"}, {"body": "sure list would useful us try figure problem crankshaft", "d": "1/2016"}, {"body": "ah yeah interesting crankshaft running weird deopt fact crankshaft disabled could nt deal uninitialized callic properly looking particular function nt beneficial disable crankshaft anyway class makector likely see highly polymorphic feedback various keyed loadstoreics optimized code likely deoptimized quite often runtime ember application slowing execution compared executing makector class fullcodegen stefanpenner see real performance improvement fixed measure impact using temp array vs using arguments directly", "d": "1/2016"}, {"body": "stefanpenner see real performance improvement yes although quite time ago measure impact using temp array vs using arguments directly fix landed fear degrading android performance looking particular function nt beneficial disable crankshaft anyway class makector likely see highly polymorphic feedback various keyed loadstoreics optimized code likely deoptimized quite often runtime ember application slowing execution compared executing makector class fullcodegen likely krisselden working currently produce good example app use discussion test hypothesis due many dimensions compositioncodepaths typical apps often quite tricky reason localeglobal affect optimizations especially codebase evolves overtime patterns shift believe sensible path forward via common example app open tied companies ip tries enumerate common cases hopefully krisselden land next little start testing hypothesis", "d": "1/2016"}, {"body": "clearly intentional error message well crafted said curious mmun reason choice grammar mostly simplify hard limitation", "d": "1/2016"}, {"body": "reason make work", "d": "1/2016"}, {"body": "upstream pr merged", "d": "1/2016"}, {"body": "pdeva question seems like would better address via embercommunityslackcom needhelp stack overflow issue bug feature wo nt likely get much help posting question issues prioritized bugs features questions much", "d": "1/2016"}, {"body": "serabe found issue got error testing library embereasyform ember beta", "d": "1/2016"}, {"body": "issue combination using helper using positional parameters positional parameter name components ember modifying hash attribute place rendered path follows ember finds component helper starts normal render first child component first render positional parameters processed hash modified place rerenders avoid processing positional parameters therefore problem component name changes component rendered rerendered causing positional parameters processed finding conflict several ways fix though might need mixonic andor rwjblue check one follow substitute assertion warning create copy component keyword passing refactor rendering process depend modified place", "d": "1/2016"}, {"body": "diogomafra issue related line fixed one day released", "d": "1/2016"}, {"body": "trying create test replicating issue able maybe already fixed created test replicates issue reported emrvb helps js packagesemberhtmlbarstestshelperscomponenttestjs qunittest aaaaa function ownerregister component normalmessage componentextend something null reopenclass positionalparams something ownerregister component alternativemessage componentextend something null reopenclass positionalparams something ownerregister template componentsnormalmessage compile say something ownerregister template componentsalternativemessage compile something view emberviewcreate owner owner messagetype normalmessage message hello template compile component viewmessagetype viewmessage runappend view equal view text say hello run function set view messagetype alternativemessage equal view text hello", "d": "1/2016"}, {"body": "thank saves time sure course action chosen", "d": "1/2016"}, {"body": "emrvb embertwiddle example work", "d": "1/2016"}, {"body": "serabe first would suggest warning deprecation issue exists least consider backporting stable fix implement probably work copy hash positionalparams processed remain bound certain component attribute unintentionally overwrite attribute dynamic component rendered nt want may even reason using positionalparams first place diogomafra twiddle still broken using canary also assume fix would reference issue pixelhandler yes works linked commit causing issue believe merged", "d": "1/2016"}, {"body": "diogomafra reviewed test components bind positional param something trigger error alternativemessage bind param somethingelse", "d": "1/2016"}, {"body": "emrvb problem exactly problem fixed canary problem test failing see replaces component name think simulating problem feel free change", "d": "1/2016"}, {"body": "diogomafra oh see mentioned another issue disregard comment", "d": "1/2016"}, {"body": "orisomething api doc page generated nt see see docs source however idea would rendered api docs since emberview deprecated mixin used", "d": "1/2016"}, {"body": "hey used component creators core contributors related ember might deprecated still inherit still relevant", "d": "1/2016"}, {"body": "orisomething embercomponent inherit emberview anymore", "d": "1/2016"}, {"body": "runspired", "d": "1/2016"}, {"body": "orisomething view", "d": "1/2016"}, {"body": "rereading source vs split happens emberview solidified also documented said", "d": "1/2016"}, {"body": "unfortunately perfectly matched scenario fixed use constructor value undefined qunit specifically checking null need", "d": "1/2016"}, {"body": "sure mean certain ember needs use undefined constructor value mean would certainly nice able use deepequal emptyobjects work either need swap use null qunit needs falsey check sure wrong", "d": "1/2016"}, {"body": "ya curious undefined constructor bit", "d": "1/2016"}, {"body": "clue ended using undefined digging see introduced discussion undefined vs null", "d": "1/2016"}, {"body": "nt think needed", "d": "1/2016"}, {"body": "rwjblue think using null fine often use objects custom map data nt want need prototype nice iterating need check since prototype var g objectcreate null constructor value null writable true configurable true undefined gyo yo yo gho ho ho objectfreeze g object yo yo ho ho constructor null objectkeys g yo ho vote change use constructor since maps nicely object created using null well idea impact code expecting constructor bet could changed expect", "d": "1/2016"}, {"body": "pixelhandler since maps nicely object created using null well really consider versus emptyobjectnullundefined var proto objectcreate null without always still end new emptyobject constructor object constructor value null enumerable false writable true function emptyobject emptyobjectprototype proto f new emptyobject gt emptyobject fconstructor gt null see value using value whereas value", "d": "1/2016"}, {"body": "assumed example chosen resembles bit better end personally fine changing goal issue decide acceptable", "d": "1/2016"}, {"body": "rwjblue hum setting constructer value adds property emptyobject vs using results property think question changed property currently adding property technically empty object practically think works maybe qunit deepequal made special exemption", "d": "1/2016"}, {"body": "justinaray prolly need ping mixonic one", "d": "1/2016"}, {"body": "issue opened closed multiple times guides repo agree confusing huge barrier entry ember spent quite time figuring check version tutorial version ember using current tutorial uses json api format emberjs current version embercli installs emberjs json api adapter ember defaults using json api ember used normal json formatted way json api supposed unify format references emberjsguides emberjsguides emberjsguides emberjsguides emberjsguides row", "d": "1/2016"}, {"body": "ugh bumped", "d": "1/2016"}, {"body": "hey exactly issue injecting service component like using like silly example get following error transition syntax works seem right route defined like", "d": "1/2016"}, {"body": "via issue mentioned understood could overwrite automatically created named binding binding hash template testing twiddle mentioned issue make sure manually select correct ember dependencies test", "d": "1/2016"}, {"body": "added branch ember project tell works expected", "d": "1/2016"}, {"body": "believe pursue addition testem", "d": "1/2016"}, {"body": "hi case objects javascript data objects holding additional data component instances ember created subsequently destroyed normal course application lifespan awful lot creation disposal visible ember components app keep meta data common controller performance ease access outside component reasons essentially meta data consisted lookup table could locate correct component instance via range search criteria even small amounts data left behind quickly mounted point serious affect performance sure helps", "d": "1/2016"}, {"body": "rlivsey find work around", "d": "1/2016"}, {"body": "think fix", "d": "1/2016"}, {"body": "beerlington rwjblue sorry got sidetracked opening seem completely forgotten looks like trick though could test two though prevent future regressions", "d": "1/2016"}, {"body": "keep eye thanks", "d": "1/2016"}, {"body": "progress edit done looking source code helper queryparams surprisingly simple extended ember object properties javascript import emberobject emberruntimesystemobject export default emberobjectextend isqueryparams true values null using knowledge able replicate behavior helper like set everything else null storing query params config object pulled set null overwrote null values hash passed helper way params nt explicitly set would reset javascript import ember ember import queryparams configconfig export default emberhelperhelper params hash gt const queryparamprops queryparamsforeach param gt queryparamprops param null return emberobjectcreate isqueryparams true values objectassign queryparamprops hash someone let know better way hacky obviously ca nt really pr one considering depends config sure made flexible question point would access query params controller helper", "d": "1/2016"}, {"body": "hardcoding name error workaround", "d": "1/2016"}, {"body": "yeah want pitch thing using ember apparently nt happen ember ember working ember working yeah also spent good part day trying debug specific component would nt rerender property change generally behaved weird tried renaming context something else worked problem system properties know context good name list issue would like know case thanks ember devs great work", "d": "1/2016"}, {"body": "lost couple days debugging similar scenario context maybe list reserved terms kind", "d": "1/2016"}, {"body": "per contributingmd document gh prompts one read posting feature requests open issues rfc repo fleshed requests take form pull request repo", "d": "1/2016"}, {"body": "updates", "d": "1/2016"}, {"body": "denzo quick chat rwjblue slack confirmed low priority since people affected bit stuck well thinking solutions", "d": "1/2016"}, {"body": "surprised low priority surely blocks anyone moving ember relies items eachmyproperty computed whole page dedicated use guides", "d": "1/2016"}, {"body": "also confused core functionality low priority", "d": "1/2016"}, {"body": "apparently applications affected would imagine issue would gotten lot traffic otherwise", "d": "1/2016"}, {"body": "fair enough", "d": "1/2016"}, {"body": "lot devs steer clear begin issue appears affect behavior arrayproxy use known work around use path", "d": "1/2016"}, {"body": "issue tried look help slack raised ticked stackoverflow also helped someone else faced problem jsbin made replicate bug", "d": "1/2016"}, {"body": "denzo twiddle great example bug tried adjusting allitemscontent eachstatus use suggested content workaround nt work see", "d": "1/2016"}, {"body": "runspired steer clear use instead", "d": "1/2016"}, {"body": "adamknights using dep key workaround working think modify wrong properties ones used template located ownerjs file working without using emberdata think denzo demonstrated emberdata ember even using array proxy pure ember object working interrestingly using relation makes filter working correctly issue seems like related use promisemanyarray", "d": "1/2016"}, {"body": "app effected guess nt realize issue would prioritized based number people commented issue case would commented earlier edit nt think even possible steer clear even suggestion little ridiculous given many ember cps implemented using example mapby filterby sort", "d": "1/2016"}, {"body": "bisect commit appears responsible regression", "d": "1/2016"}, {"body": "code comments says change could cause issues people set possible ember data something badly commit shown", "d": "1/2016"}, {"body": "failing test pr issue time look", "d": "1/2016"}, {"body": "rwjblue contains failing test", "d": "1/2016"}, {"body": "workmanw steer clear cases part simply pointing nt likely wide spread might think every case seen far ed related curious though went code spelunking ed grabs mixes code create promisearray property definitions lookup proxy methods replicated twiddle sans ed code see maybe promiseproxymixin playing poorly arrayproxy appear also looked twiddle provided denzo twiddle victim array reference error contained content looked similar actually reference fixed twiddle operates expected", "d": "1/2016"}, {"body": "also replicated see additional fault still could replicate failing scenario seems probable something deeper ed going potentially causing array change notification sent source bug", "d": "1/2016"}, {"body": "link replication", "d": "1/2016"}, {"body": "runspired mistaken twiddle referenced working properly still working properly cleandirty lists updating status items changes", "d": "1/2016"}, {"body": "alkamin updated nt save fix relying model", "d": "1/2016"}, {"body": "following issue looks likely entirely ember data code issues explained", "d": "1/2016"}, {"body": "adamknights believe problem promisemanyarray ed also serious issue dependent keys form one twiddle demonstrating issue", "d": "1/2016"}, {"body": "jgwhite supported behavior go one leaf beyond", "d": "1/2016"}, {"body": "runspired sure right could point documentation", "d": "1/2016"}, {"body": "runspired found thanks", "d": "1/2016"}, {"body": "confirming bug ember ember data also broken ember bug occur ember ember data twiddles case trying display tree items parent either another item root item inverse relationship item needs computed client side js modelsitemjs export default dsmodelextend owner dsbelongsto owner name dsattr string parent dsbelongsto item inverse null children embercomputedfilter owneritems function item return itemget parentcontent property owneritems eachparent modelsownerjs export default dsmodelextend items dshasmany item applicationcontrollerjs export default embercontrollerextend rootitems embercomputedfilter owneritems function item return itemget parentcontent null property owneritems eachparent working twiddle ember twiddle demonstrating broken ember using possible adding relationship fix bug downgrading ember data also work", "d": "1/2016"}, {"body": "fwiw seeing issue prevents us upgrading ember", "d": "1/2016"}, {"body": "issue project running w ember happens observing promisemanyarrays interestingly render property template forcing access within forces recompute guess observation works", "d": "1/2016"}, {"body": "sorry guys last little hectic try carve time next week feel free ping nt respond week means forgot", "d": "1/2016"}, {"body": "stefanpenner champ", "d": "1/2016"}, {"body": "folks watching issue interested exploring problem check test cases looks like least one longstanding bug embermetal contributing problem revealed recent changes", "d": "1/2016"}, {"body": "jgwhite supported behavior go one leaf beyond runspired jgwhite make warning trap seemed work due performance bug", "d": "1/2016"}, {"body": "stefanpenner good idea submitted attempt", "d": "1/2016"}, {"body": "hey fivetanley similar bug app able bisect commit help krisselden believe issue offending pr changed computed property computed property clobbered may also clobbered places nt looked closely yet first try rewrite pr way use cp back port fixes consumers arrayproxy nt issues strategy fails change emberdata clobber instead", "d": "1/2016"}, {"body": "using dependencies foo eachother foo eachproppropprop never supported version ember covered test thing work without issue decompose multiple cps", "d": "1/2016"}, {"body": "believe rwjblue going adding warning", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "taras nt waste fetch since model workaround catch error log since could nt find side effects js beforemodel transition thissuper arguments logic set presetparams dynamic initial params thistransitionto queryparams presetparams catch gt log ember query param issue", "d": "1/2016"}, {"body": "kmiyashiro mean waste fetch solution prevents fetch wasted", "d": "1/2016"}, {"body": "assuming fetching findquery query params model would refetch model updated params use inside implicitly aborts active transition unfortunately many bugs around transitioning new query params hooks", "d": "1/2016"}, {"body": "might different use case would like explore ping ember community slack pair via", "d": "1/2016"}, {"body": "encountering issue though explicitly calling route anything emberdata kind model fetching logic simply navigating directly route query param maps boolean property route controller started happening upgraded ember transition seems complete everything works fine error dumped console tried solutions well overriding private prototype methods router error coming routerjs hidden closures via ember router ca nt reliably suppress error since ca nt reliably suppress error ca nt upgrade ember since error causes unit tests break ci system nt like", "d": "1/2016"}, {"body": "able suppress error monkeypatching router export default emberrouterextend isrouterpatched false", "d": "1/2016"}, {"body": "happening ember catching logging error sideeffects", "d": "1/2016"}, {"body": "perhaps elegant solution seems work ember js appinstanceinitializersglobalqueryparamsjs import ember ember import lodash const routesupport embermixincreate transitionto superwithglobalqueryparams replacewith superwithglobalqueryparams function getqueryparams names return namesreduce function result name const regex new regexp const md regexexec windowlocationsearch md result name md return result function superwithglobalqueryparams args const globalqueryparams getqueryparams tangoversion argslength transitionto someroute argspush queryparams globalqueryparams else argslength amp amp args queryparams transitionto someroute queryparams args queryparams extend globalqueryparams args queryparams else argslength transitionto someroute somemodel argspush queryparams globalqueryparams else transitionto someroute somemodel queryparams args queryparams extend globalqueryparams args queryparams return thissuper args export default name globalqueryparams initialize emberroutereopen routesupport nt want maintain list allowed queryparams might able parse using something like", "d": "1/2016"}, {"body": "hi problem jquerysortable broken code fixed changes made added key index helper replaced dataid span contains item id hope help resolve problem", "d": "1/2016"}, {"body": "available though sure supposed set", "d": "1/2016"}, {"body": "ran similar issue using ember support query parameter called one routes wanted alias controller added controller expected alias applied controller could still use performing however called caught exception message willing accept behavior correct expectation wrong error message nothing confusing misleading claiming controller two properties name nt really possible", "d": "1/2016"}, {"body": "confirm issue", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "hi curious ever made trying setup something twiddle ember canary would let something described issue followed references trying get work something like nt worked guidance greatly appreciated thanks", "d": "1/2016"}, {"body": "chadian looks like mostly describing new contextual components feature might want check blog post details", "d": "1/2016"}, {"body": "happened across searching around raytiley example sceduleonce helped lot thanks hamster", "d": "1/2016"}, {"body": "wanted second comments danchadwick everyone else using flexbox much app layout able target root app via simple class id pain", "d": "1/2016"}, {"body": "bcardarella looks like try confirming addons work helper updates landed close issue good", "d": "1/2016"}, {"body": "thanks samtsai", "d": "1/2016"}, {"body": "hello could looking", "d": "1/2016"}, {"body": "api docs added ember released ember", "d": "1/2016"}, {"body": "links code also broken", "d": "1/2016"}, {"body": "please fix documentation", "d": "1/2016"}, {"body": "possibly related", "d": "1/2016"}, {"body": "put together rfc think might address although bit different gabrielgrant suggestion tracking return value actions", "d": "1/2016"}, {"body": "think dupe detail", "d": "1/2016"}, {"body": "facing problem mmun mentioned specific case need show modal every transition except one route checkout solution cover modal appearance application hook problem returns previous path time called also url updated yet checking option either also nt want hack thoughts", "d": "1/2016"}, {"body": "still work", "d": "1/2016"}, {"body": "really sure intended work", "d": "1/2016"}, {"body": "nt work means sort scriptbased embedded content based values store wo nt work example cms allows users edit page post rendering triple braces would need functionality public site admin preview", "d": "1/2016"}, {"body": "argh chrome app autorefreshing list serial ports documentation would great really dig andthen find scheduled timers problem", "d": "1/2016"}]