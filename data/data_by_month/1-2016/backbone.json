[{"title": "changing size text area finch", "body": "hy like know anyone managed change size text area finch thing like transform expand able press return key skip lines exactly centerim work need communicate lot think writing text sending much better sending text per line anyone idea configuration gntrc purpleprefsxml regards", "num": "3942", "d": "1/2016"}, {"title": "routernavigate executes although trigger false encoded hash fragment firefox", "body": "execute fragment contain url encoded characters firefox tested correct behaviour backbone wrong behaviour backbone think new behaviour introduced", "num": "3941", "d": "1/2016"}, {"title": "integrating qdelaunay qvoronoi function qhull c", "body": "hi know basics visual studio c advanced user programmer want perform delaunay triangulation generate voronoi grids using qhull library using visual studio c windows problem preparing necessary data calculation questions minimum necessary files included qhull publicly free qhull powerful contains huge amount files easily perform delaunay triangulation generate voronoi grids like delaunaynm file matlab calls qhullmx x opt get delaunay triangulation thank much sharing experience", "num": "3937", "d": "1/2016"}, {"title": "collection create", "body": "modeltojson return name test phonenumbers id number try set value modelset name test update phonenumbers id number modeltojson return name test update phonenumbers number id removed update nested model modelset value collectioncreate model", "num": "3931", "d": "1/2016"}, {"title": "nested views binding events proper ui", "body": "", "num": "3926", "d": "1/2016"}, {"title": "lodash flatten function work differently", "body": "hi wrote small piece code test flatten code version lt result use version result got confused definition change function", "num": "3925", "d": "1/2016"}, {"title": "route parameters default parameters", "body": "rather small issue route parameters default parameters ran thought would bring semirelated guess say router looks like const router backbonerouterextend routes foo bar biz let router new router routeron route init foo bar gt console foo bar backbonejs comment method states given route url fragment matches return array extracted decoded parameters empty unmatched parameters treated normalize crossbrowser behavior navigating get following output nothing wrong gets bit trickier default parameters come say want use default parameters none supplied would something like one could use default parameters however mdn states default function parameters allow formal parameters initialized default values value undefined passed output still passed values rendering default parameters useless solution would passing value undefined instead null sure browsers comment crossbrowser inconsistencies refers workarounds rather trivial might best usecase general either issue urgent means", "num": "3924", "d": "1/2016"}, {"title": "remove triggering destroy triggers remove bug causes second remove remove wrong thing", "body": "see comment bug recreated without using fiddle without silent true original fiddle silent true recently upgraded backbone backbone project remove single item collection item last item erroneously collection removed reason two things relevant code typically mapped reasoning nt want uncollected detritus floating case someone accidentally uses collection newer backbone version longer behaves regards option destroy triggers remove event longer silenced conceptually fine indeed already removed model collection however occurs succeeds returns logic leading faulty removal occurs line line contains splice given index removes last element collection tested prevent attempts remove already removed items delegates byid contain model key contain model id cid nt one following changes fix bug changed trigger event given option modified splice last list element removed model cid id removed second remove call occurs please let know simple fix code maintains functionality destroying object remove event occurs following code reproduce bug use fiddle javascript define backbone function backbone var collection backbonecollectionextend endsindestruction function model collection options silent option apply remove events preventing infinite loop remove observe infinite loop modeldestroy silent true initialize function options thislistento remove thisendsindestruction thislistento add change remove thisrender var collection new collection collectionrender add two models keeping reference one collectionadd name foobardi var model collectionadd name caesar erroneously removes two items collection function removeit collectionremove model consolelog done binds button remove item leisure buttons html remove one model mainbutton click removeit", "num": "3923", "d": "1/2016"}, {"title": "get method name event handler", "body": "simple model intercepts error get name method created error export class commonmodel extends backbonemodel constructor options super options thison error thisonerror onerror model response options let method consolelog method get post put delete", "num": "3922", "d": "1/2016"}, {"title": "deeply set model", "body": "problem see code var model new backbonemodel b c value deeply get handy var val modelget bc deeply set var temp clone modelget tempbc another modelset temp proposal contain space maybe form better deeply get modelget b c deeply set modelset b c another", "num": "3914", "d": "1/2016"}, {"title": "doc error collection modelid", "body": "doc error found modelid collectionmodelid attrs var library backbonecollectionextend modelid function attrs attrstype dvd return dvd attrsdvdid else return vhs attrsvhsid var library new library type dvd id type vhs id alert dvd libraryget id vhs libraryget id", "num": "3913", "d": "1/2016"}, {"body": "yup specifically fix super familiar code think solution preencode string see works", "d": "1/2016"}, {"body": "changdongyang believe commenting wrong repository", "d": "1/2016"}, {"body": "captbaritone thank right put correct repository thanks", "d": "1/2016"}, {"body": "please use stackoverflow gitter channel mailing list questions github issues maintaining framework", "d": "1/2016"}, {"body": "lodash follows behavior ps backbonejs repo lodash", "d": "1/2016"}, {"body": "change instead keep crossbrowser consistency mildly breaking change though", "d": "1/2016"}, {"body": "yup could nasty side effects someone something like maybe next major version fireengine", "d": "1/2016"}, {"body": "meantime meant overridden though would nt know private naming could copypaste code changing", "d": "1/2016"}, {"body": "jridgewell cool thanks tip", "d": "1/2016"}, {"body": "usually say passing antipattern reasoning nt want uncollected detritus floating case someone accidentally uses remove collection explain preferred way call want get rid model completely want collection garbage collection taking care event binding handle rest", "d": "1/2016"}, {"body": "nt issue silent true issue cleanup hash fork previous fiddle two lines modified use anywhere existing project sometimes hearing event calls remove destroy execute hash still contains references allegedly removed destroyed model via keys via model key model supposedly removed second unstoppable remove event occurs model destruction makes inadequate test model membership collection membership tests positive still map model presumably nt called already model key removed previous remove call second remove event continues execution positive membership test removes last item collection nt curiosity little bit extra information project project extends backbone provide asynchronous control flow sometimes uses wait promises resolve triggering events used backbone corporate datadriven website also needs coordinate multiple collections involve data data views subsequent validation synchronization behavior implemented well although might easily changed anyway nt matter used", "d": "1/2016"}, {"body": "worth test fails tag passes master", "d": "1/2016"}, {"body": "right calling event backwards intended design nt actually remove reference remove event fired", "d": "1/2016"}, {"body": "ivarni thanks new version rolled without problem sometime soon would fantastic part public api would like public presented consistent state point time second event handled model nt key collection inconsistent think would intuitive robust remove three keys call triggering would fix problem complicated business logic database sync assurance abstractions support moving away strict rest necessary collections tied state collection question kind thing necessary able call determine model destroyed", "d": "1/2016"}, {"body": "dupe fixed", "d": "1/2016"}, {"body": "possibly nt know scheduled line nonoptimistic call might fix issue example testing update jridgewell careful look visited issue happens appears related fixing underlying issue likely fix ivarni pointed test passing master hope issue fixed work important estimate next release occur gauge whether workaround necessary", "d": "1/2016"}, {"body": "please read wraperror parameters", "d": "1/2016"}, {"body": "takes parameters nt contain know answer", "d": "1/2016"}, {"body": "almost ca nt directly get method wraperror response jqxhr \u044f\u043d\u0432 \u0433 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c maksim notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b takes model options parameters nt contain method know answer reply email directly view github", "d": "1/2016"}, {"body": "second solution rewrite backbonesync", "d": "1/2016"}, {"body": "questions like better left one channels questions working backbone general discussions", "d": "1/2016"}, {"body": "answer", "d": "1/2016"}, {"body": "found closed wont fix keep mind values attribute models collection deep setget work cases", "d": "1/2016"}, {"body": "futurist nt support deep properties fact recommend everything simple primitive values", "d": "1/2016"}, {"body": "ah yeah bad broke last time fixed", "d": "1/2016"}, {"body": "try stackoverflow questions", "d": "1/2016"}, {"body": "ping braddunbar try get pr tonight", "d": "1/2016"}, {"body": "usually paulfalgout smile", "d": "1/2016"}, {"body": "first one pr wins", "d": "1/2016"}, {"body": "ha yeah jdalton take bit snowed week nt get around jump later", "d": "1/2016"}, {"body": "draft changelog", "d": "1/2016"}, {"body": "closing", "d": "1/2016"}, {"body": "wanted know proscons using vs method technique suggested benmccormick btw thanks benmccormick excellent blog post", "d": "1/2016"}, {"body": "addition proposal pullrequest attaching method action mentioned justin already proposed similar solution method already using branch really solves problem appeared also useful typescript despite nt ban declarative class properties ps sounds general therefore better context albeit like call method prior constructor jobs", "d": "1/2016"}, {"body": "confirm behaviour pajtai mentions could clarified docs", "d": "1/2016"}, {"body": "use case model gt collection", "d": "1/2016"}, {"body": "great work", "d": "1/2016"}, {"body": "case anyone else problem add x list accesscontrolallowmethods used set backboneemulatehttp true", "d": "1/2016"}, {"body": "reset true option modelfetch", "d": "1/2016"}, {"body": "imho needed kek doc maybe explaining newbs", "d": "1/2016"}, {"body": "really old issue nt think link jashkenas left links right place code anymore documented somewhere", "d": "1/2016"}, {"body": "either write also", "d": "1/2016"}, {"body": "always create debounced edit bound throttled memoized version function initialize method earlier delay dynamic", "d": "1/2016"}]