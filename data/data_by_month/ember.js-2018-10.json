[{"title": "using block nested array property causes glimmer error", "body": "appears glimmer bug dealing nested array properties error nestedoptions replaced options given data binding also updated similar characteristics development repo recently solved issue errors reported similar set twiddle illustrate problem display errors development repo produce errors development repo replacing nested reference equivalent avoids issue please let know assistance", "num": "17048", "d": "10/2018"}, {"title": "using sinon triggers deprecation warnings tests", "body": "see reproduction open console sinon enumerates objects thus finds accesses deprecated properties causing deprecation warnings tests", "num": "17046", "d": "10/2018"}, {"title": "extending native classes", "body": "follow new issue requested rwjblue extending native class extending emberobject throwing motivation able use native classes mixins like js class foo extends emberobject const bar fooextend class baz extends bar see embertwiddle", "num": "17042", "d": "10/2018"}, {"title": "doc computed properties documented properties methods", "body": "computed properties currently documented inconsistently documented normalized expected documented properties quite sure correct examples computed properties documented examples computed properties documented cps file", "num": "17039", "d": "10/2018"}, {"title": "computed property cp depends oneway cp nt work", "body": "twiddle demonstrates issue controller three cps take values amp based radio button click visit route twiddle route template displays state three values updates toggle radio buttons dependent cps", "num": "17037", "d": "10/2018"}, {"title": "call changeset w property throws get proxy assertion", "body": "model property named size type string emberchangeset instance validations based model running results error caused occurs ember assertion added emberchangeset case returns empty string getter calculated afaik used mapssets like might extra check necessary somewhat similar cc snewcomer", "num": "17032", "d": "10/2018"}, {"title": "documentation broken link defined emberdata", "body": "ver latest moment current url", "num": "17030", "d": "10/2018"}, {"title": "meta routing service go items", "body": "tracking issue go router service x implement events x implement x deprecate events x implement x implement x implement type x implement x warn touching direct people routing service x warn touching direct people routing service x write deprecation guide handlerinfo usage x write deprecation guide events x write deprecation guide transition state usage x make transition public x document transitionfromto x document new events x add deprecation guides urls scope apis dealing template portion migrate computation use public note might tricky requires things like migrate computation use public make transitions immutable routerjs", "num": "17027", "d": "10/2018"}, {"title": "text left aligned mobile view", "body": "", "num": "17026", "d": "10/2018"}, {"title": "defaultgetterfunction returns wrong value actual value set undefined", "body": "hi trying upgrade app using emberdecorators encountered issue ember precise issue unrelated decorators noticed decorator using instead changing app code seemed like trivial thing looks like issue present recent ember releases embertwiddle demonstrates problem nt know much internals ember object system core issue ca nt set regular property observer attached via method observers added via working fine though reason difference two getter methods methods using defaultgetterfunction seems getter observed regular properties used calling meta peekvalues calling meta see method metaobject value returned otherwise value one parent metaobjects returned means set property return parent value next lookup inheritinggetterfunction hand seems used getter regular properties observed via calling meta readinheritedvalue similar however also checked whether value exists metaobject via symbol returned nt exist means values taken account proper thing side note would nt make sense using instead checking existing properties even plain object much faster also removing first part ifstatement disjunction redundant like already said unfamiliar ember works hood two similar methods used two different getter methods thanks", "num": "17022", "d": "10/2018"}, {"title": "inconsistency rsvppromise native promises", "body": "reading last posts tried removing mentions code base using latest emberjs latest embercli least one case still difference two put reproduction repo running causes one failure uncomment test passes means using native promise different using rsvp one reading reader question impression since ember interchangeable also see commented uncomment comment line resolves promise test passes using promise types sure connected insight would appreciated", "num": "17021", "d": "10/2018"}, {"body": "give implementation try", "d": "10/2018"}, {"body": "general implementation notes believe roughly implemented way helper using positional args instead named args helper like one add array builtins add slew tests like", "d": "10/2018"}, {"body": "really think need revisit entirely new array returned changes thing helper ember component system geared change property subproperty element triggers revalidation whole array", "d": "10/2018"}, {"body": "kanongil sure agree point revalidating full array expensive", "d": "10/2018"}, {"body": "experience hash helper see would different", "d": "10/2018"}, {"body": "added todo items guides enable default", "d": "10/2018"}, {"body": "josemarluedke interested picking guides work also", "d": "10/2018"}, {"body": "rwjblue saw issue nt think josemarluedke picked guide yet wrote short blurb guide", "d": "10/2018"}, {"body": "nice thank", "d": "10/2018"}, {"body": "thank reporting issue make gist twiddle public able view twiddle says gist missing secret", "d": "10/2018"}, {"body": "also thought perhaps use variable name template could mask html element angle bracket components", "d": "10/2018"}, {"body": "make gist twiddle public one see example reproduction", "d": "10/2018"}, {"body": "yeah see console remove sinon dependency deprecation gone", "d": "10/2018"}, {"body": "also hit issue", "d": "10/2018"}, {"body": "yes issue", "d": "10/2018"}, {"body": "emberjslearningteammanagers thoughts", "d": "10/2018"}, {"body": "alexspeller found removing fixes bug maybe needs update ember docs", "d": "10/2018"}, {"body": "seem bug works fine removing incorrect use volatilereadonly", "d": "10/2018"}, {"body": "docs definitely updated though people might fall trap realize added modifiers caused", "d": "10/2018"}, {"body": "related question also correctly explained api specification also automatically fire change events must manually notify changes want observe property dependency keys effect volatile properties cache invalidation notification cached value invalidated", "d": "10/2018"}, {"body": "guess safely withdrawn thanks everyone explanations", "d": "10/2018"}, {"body": "nickschot create embertwiddle example", "d": "10/2018"}, {"body": "pixelhandler debugging test case pretty simple update main post new findings meanwhile reproduction found press validate button error thrown console", "d": "10/2018"}, {"body": "lifeart would open emberdata repo", "d": "10/2018"}, {"body": "runspired done", "d": "10/2018"}, {"body": "chadhietala merged deprecation app pr able gather url update deprecation", "d": "10/2018"}, {"body": "would like work thanks", "d": "10/2018"}, {"body": "might want provide description couple screenshots move thank", "d": "10/2018"}, {"body": "thanks taking time dig document going thoroughly definitely seems like bug address side note would nt make sense using hasownproperty instead checking existing properties even plain object much faster also removing first part ifstatement disjunction redundant believe actually faster circumstance please feel free test see", "d": "10/2018"}, {"body": "believe actually faster circumstance right tested test suite used earlier nt ideal", "d": "10/2018"}, {"body": "thanks taking time reproduce code racy test await asynchronous behavior helper made pr reproduction shows make test reliable need clarify said native promises absolutely work fine ember helper example behaves correctly implemented native promise identical timing relying races side effects observe different behavior caveat switch rsvppromise promise long waiting promise resolve", "d": "10/2018"}, {"body": "thank much explanation definitely resolved issue thought fact test nt wait native promises rsvp ones question currently trying rewrite bunch coffeescript typescript noticed classesinterfaces defined takingextending instead notably breaks typescript code suppress warnings fine using native promises think going change type definitions rsvp required read eventually even removed jquery", "d": "10/2018"}, {"body": "sure plan promiseproxymixin work fine native promises public api proxies method nt native promise nt know make typescript happy seems worth opening separate issue discuss", "d": "10/2018"}, {"body": "added comment emberclitypescript issue linked thread clarifying types possible workarounds may", "d": "10/2018"}, {"body": "rwjblue might days get", "d": "10/2018"}, {"body": "would nt mind giving go hacktoberfest ca nt mhluska", "d": "10/2018"}, {"body": "parrryy go", "d": "10/2018"}, {"body": "nt work hash helper returns emptyobject extractqueryparams tries call hasownproperty resulting error bug totally fix swapping instead would mind taking crack pr code", "d": "10/2018"}, {"body": "packages combinedqueryparameterconfigurationhasownproperty propname packages possiblequeryparams amp amp possiblequeryparamshasownproperty queryparams packages queryparamshasownproperty key", "d": "10/2018"}, {"body": "mhluska actually unable reproduce original issue wrote test failed nt hash linkto post post hash id bar thisaddtemplate post post modelid", "d": "10/2018"}, {"body": "rwjblue maybe issue ids models sure supported since passing model already controversial", "d": "10/2018"}, {"body": "whole invocation seen model perspective", "d": "10/2018"}, {"body": "nt passing record linkto pretty standard prevent route reloading data reason want pass two records via hash prevent reloading data rwjblue strange thing think maybe different versions using", "d": "10/2018"}, {"body": "define standard works right decided general good pattern future might longer supported least one rfc related maybe mhluska able create test replicating issue", "d": "10/2018"}, {"body": "look", "d": "10/2018"}, {"body": "cbroeren code objects always considered arraylike object length property length property type number following test let instance emberobjectextend intentionally returning nonnull nonundefined length unknownproperty return false create would consider bug let know thoughts", "d": "10/2018"}, {"body": "jonatahr always true check length", "d": "10/2018"}, {"body": "btecu yeap mistake thanks", "d": "10/2018"}, {"body": "cbroeren create example reproduction using embertwiddle", "d": "10/2018"}, {"body": "dliblik think choices nt believe using ever documented use case see", "d": "10/2018"}, {"body": "sorry responded sooner somehow missed original response rwjblue use case creating deliberately type object returned helper basic clean immutable", "d": "10/2018"}, {"body": "obvious question way ie writing custom helpers object congruent semantics generated code", "d": "10/2018"}, {"body": "use create objects without prototype methodspropertiesetc nt think ever intended actually", "d": "10/2018"}, {"body": "perhaps reach help channel ember discord app forum close since ember bug", "d": "10/2018"}, {"body": "borispetrov work add componentjs file use template component", "d": "10/2018"}, {"body": "pixelhandler add file issue goes away even true worked around problem nt tried false get back monday need information case nt see reason discrepancy component without file", "d": "10/2018"}, {"body": "updated ember action stop sending made simple twiddle show error", "d": "10/2018"}, {"body": "vcipriani marked private used application code see", "d": "10/2018"}, {"body": "ember using set computed properties deprecated team recommendation use defineproperty see based current messaging intention supporting programmatic setting computed properties appears bug defineproperty private", "d": "10/2018"}, {"body": "see public api", "d": "10/2018"}, {"body": "vcipriani see twiddle working need notify change since property setup async via timeout", "d": "10/2018"}, {"body": "andrewtimberlake seems like using workaround issue seem like bug different purpose", "d": "10/2018"}, {"body": "bug still present latest release search reproduction effectively prevents us upgrading sentry stack traces unparseable would love help fix know little ember internal build pipeline could get pointers potential sites interest start investigating", "d": "10/2018"}, {"body": "first bad commit commit author robert jackson rjackson linkedincom date thu apr", "d": "10/2018"}, {"body": "day earlier merged likely actual cause issue", "d": "10/2018"}, {"body": "definitely issue nt close try reproduce somehow", "d": "10/2018"}, {"body": "would awesome thank trying fwiw totally happy clone gh repo reproduce easier", "d": "10/2018"}, {"body": "interesting found problem might bug bug ember case ember simple auth signing assign user service let call auth js export default class auth extends service reads currentusercompany currentcompany sign async loadcurrentuser userid const user await thisstorefindrecord user userid thisset currentuser user lets say components binding authcurrentuser usual maybe later sign basic fine sign blam get error like old user model still attatched auth service obviously destroyed state new user model loaded replace blah ember barfs trying setup watchers old user solution mouse like tip toe around problem voila problem solved case array models weakmap component using array later models destroyed component freaks answer mouselike destroy array models tip toe weakmap clear array", "d": "10/2018"}, {"body": "pixelhandler hit issue today could nt find documentation either came across thread created pull request documentation update", "d": "10/2018"}, {"body": "got bitten today well used key worked dev prod builds bit troubled one would expect class name usable dev prod maybe something class names nt get anyone help understand bit behaviour", "d": "10/2018"}, {"body": "oh btw created discuss topic hitting github issue", "d": "10/2018"}, {"body": "got thanks", "d": "10/2018"}, {"body": "might fixed released yet though", "d": "10/2018"}, {"body": "rule nt descriptive ended thinking rule another issue formatting vscode ember addon difference formatting issues errors think linter question better error future everyone running linter imagine coworkers running knowing going error nt useful", "d": "10/2018"}, {"body": "ya mentioned consider bug totally want make ergonomics much better eg issue warning helpful message instead error", "d": "10/2018"}, {"body": "updated twiddle current release", "d": "10/2018"}, {"body": "ran deprecation warning updated packagejson warning gone", "d": "10/2018"}, {"body": "still valid case", "d": "10/2018"}, {"body": "questions outstanding tasks someone new particular code base would need begin would need know solve tasks emberjs pr landed namespaces behind feature flag implemented parsing namespace name strings runtime implementation improved work happen ember app build time involved something build time happen emberjs current parsing located classic app running version ember cli predates module unification support addon using module unification src directory must way fail gracefully b bring reexport logic use embercli old version embercli actionable thing make sure later module unification addons reexport top level components app classic apps allows addon author use src directory still addon work either kind app would like provide addons buildtime way configure reexport logic would permit rename components services match legacy classic apis adopt new apis module unification apps involve hbs helpers accept source argument like templates running app one looked could figure entry point worked usage like know connection babel transform htmlbars confusion could new template functions additional guidance specifics would super beneficial also use github project managing remaining todos", "d": "10/2018"}, {"body": "hmm sure put writing time hassle changed file run generate properly", "d": "10/2018"}, {"body": "stefanpenner update", "d": "10/2018"}, {"body": "update example reproduction current release ember", "d": "10/2018"}, {"body": "pixelhandler updated test repo issue still happens thank", "d": "10/2018"}, {"body": "worked project confirm going newer versions ember run twiddle ember still seems happening also set calling super results error", "d": "10/2018"}, {"body": "confirm still seems issue ember emberclibabel lt nt see issue latest emberclibabel caused issue emberdecorators go back get mentioned error components", "d": "10/2018"}, {"body": "pixelhandler nt believe changed consistent code definitely fixed docs current version docs still gives misleading advice", "d": "10/2018"}, {"body": "gabrielgrant thank descriptive issue reproduction twiddle aware event name styles exist helper learning perspective think guides mention one type wording works input helpers already suggested", "d": "10/2018"}, {"body": "pzuraq one closed", "d": "10/2018"}, {"body": "think double check wycats think baseless native classes still need fleshed maybe rfcd move forward", "d": "10/2018"}, {"body": "myartsev still happing current release ember", "d": "10/2018"}, {"body": "cibernox karthiicksiva locks mikerhyssmith rwjblue tsauer thoov still issue perhaps close think", "d": "10/2018"}, {"body": "believe still issue discussed last thursday release team meeting", "d": "10/2018"}, {"body": "concretely issue inspector currently support displaying files description date imho", "d": "10/2018"}, {"body": "maybe could migrate though", "d": "10/2018"}, {"body": "rwjblue fine tracking inspector definitely need game plan support various possible component types tagless template etc", "d": "10/2018"}, {"body": "updated twiddle example using ember", "d": "10/2018"}, {"body": "updated twiddle example", "d": "10/2018"}, {"body": "pixelhandler updated reproduction looks like problem still", "d": "10/2018"}, {"body": "pixelhandler still happening reproduction repository posted installed dependencies using installing latest fastboot liquidfire", "d": "10/2018"}, {"body": "closed", "d": "10/2018"}, {"body": "well moment update example reproduction current release embercli ember etc", "d": "10/2018"}, {"body": "good idea using original demo repo issue remains upgrading emberclifastboot demo repo fix issue upgrading entire app emberembercli emberclifastboot fixes issue somewhere along line fixed", "d": "10/2018"}, {"body": "updated twiddle current version ember", "d": "10/2018"}, {"body": "nt know current status fixes landed", "d": "10/2018"}, {"body": "believe landed strange test failures simply nt time debug", "d": "10/2018"}, {"body": "raised discussion close", "d": "10/2018"}, {"body": "thanks reply vladucu", "d": "10/2018"}, {"body": "upgrading seems like totally valid path resolve issue closing", "d": "10/2018"}, {"body": "rossvaller thanks reply updated twiddle example seems work use id linkto closing", "d": "10/2018"}, {"body": "seeing reproduce twiddle get stacktrace mentioned found line exception thrown problem property tried get object empty array say check array empty throws better error message created address specifically", "d": "10/2018"}, {"body": "using error canceling transition transition object trick use case handling hook js error function error transition errorstatus stuff ex localstorageclear transitionabort thistransitionto index queryparams showlogin true", "d": "10/2018"}, {"body": "pixelhandler hit issue ember still valid wrap call created another issue days ago similar problem face ie code coffeescript export default helperextend compute b pendingresult get pendingresult pendingresult set pendingresult undefined return pendingresult blocked called ie nt call started appearing changed code use native promises instead rsvp promises issue mentioned inconsistency rsvp promises native promises latest chrome stuff breaks ideas ps tried creating reproduction could nt pretty sure fixing issue also fix", "d": "10/2018"}, {"body": "solution ensure inside code ssured mentioned prior comment", "d": "10/2018"}, {"body": "rwjblue yes also worked around issue original problem still please check reproduction repo given github issue", "d": "10/2018"}, {"body": "nt understand mean borispetrov saying emberhelper implementation using userland helper code", "d": "10/2018"}, {"body": "ah sorry thought meant putting run around recompute call user code initial suggestion misread sorry issue still remains", "d": "10/2018"}, {"body": "jherdman well original jsbin using old version ember embertwiddle nt run ie see example perhaps update current release ember", "d": "10/2018"}, {"body": "pixelhandler done done", "d": "10/2018"}, {"body": "closing think use html input instead helper types like", "d": "10/2018"}, {"body": "commented mixin still happening version upgrade test nt noticed anything change logs touched", "d": "10/2018"}, {"body": "kellyselden updated twiddle current release see issue making component events mask input", "d": "10/2018"}, {"body": "appears still issue updated embertwiddle example", "d": "10/2018"}, {"body": "pixelhandler still issue", "d": "10/2018"}, {"body": "hey confirm jorblume workaround works ember best regards daniel", "d": "10/2018"}, {"body": "solved returning right called statement line problem preserves btw nt use stops upcoming transitions app gets stuck", "d": "10/2018"}, {"body": "closing plenty ways create working change event", "d": "10/2018"}, {"body": "emberjslearningteammanagers perhps worth documenting section security", "d": "10/2018"}, {"body": "error throwing route removing return keyword fix", "d": "10/2018"}, {"body": "close issue perhaps reach ember discord help channel discuss", "d": "10/2018"}]