[{"title": "error caused collectionadd collection changing", "body": "trying unreasonable nt seem broken master create collection decent length var collection new backbonecollection new backbonemodel new backbonemodel cases add new model may want remove existing one collectionon add function collectionat destroy adding new model certain position breaks things collectionadd new backbonemodel uncaught typeerror read property cid undefined", "num": "1604", "d": "8/2012"}, {"title": "custom indexes collection", "body": "would nice could specify custom indexes gets collection would faster sure best way declaring maybe array collection like cases large amounts data looping models efficient could stored item added collection could much faster", "num": "1600", "d": "8/2012"}, {"title": "backbone custom builds", "body": "thought great upgrade backbone release would split backbone modules events model view collection router sync separate files provide users ability make custom builds build tool grunt andor downloadbuilderjs think interested would work issue pull request", "num": "1598", "d": "8/2012"}, {"title": "time new version", "body": "last stable release march since plenty commits backwards incompatible plans round current pull requests issue new version seems like things still enough flux avoid calling good start getting real world use newer changes maybe", "num": "1594", "d": "8/2012"}, {"title": "documentation hide left bar rather text text", "body": "firefox window starts really narrow text navigation text page overlap seem happen chrome firefox matters besides bug would nice responsive design nav area hide window narrow starts narrow link context sensitive help backbone objects little room inside firebug moment useless rather link real documentation host copy thanks", "num": "1589", "d": "8/2012"}, {"title": "reference callbacks", "body": "hi working sort collectionrepository handle different collections imagine best interactive list renders collection contacts known users collection search results unkown users switching two collections done collectionrepository would like inform views item gets added removed reset gt bind internal backbone events view part bit tricky collections change whereas view listener reason wanted extend event functionality collectionrepository also handle collection events benefit would view listen collectionrepository totally independent much collections active concrete implementation would reference thiscallbacks callback list collections example var contactsrepository corerepositoryextend parse manually log whole repository object find thiscallbacks contains callbacks whereas collections nt hi hope unimportant get answer github already failed getting answer else regards bodo", "num": "1588", "d": "8/2012"}, {"title": "bindall render etc", "body": "simple question still necessary use initializing new views", "num": "1586", "d": "8/2012"}, {"title": "request better error message historystart", "body": "calling routes defined throws helpful", "num": "1584", "d": "8/2012"}, {"title": "validation occurs attributes set singleattr newval", "body": "similar issue brought set single attribute validate called attributes model passed instead one updated see issue action problem lies backbone validate function passed attribute modified attributes merged together calling validate change added commit updating attribute justify validating entire model several cases beneficial set validate single property instance validating input form input blur occurs provide immediate feedback user indicating field invalid", "num": "1581", "d": "8/2012"}, {"title": "views multiple modelscollections", "body": "often views rely multiple models andor collections standard convention modelcollection passing view constructor via special modelcollection key useful elegant situations multiple models collections passed views equally elegant pass nested objects view constructor ie model b b would helpful methods like new dispose multi modelcollection aware", "num": "1578", "d": "8/2012"}, {"title": "reusing options object subsequent calls collectionfetch add true results erroneous optionssuccess callbacks", "body": "optionssuccess field checked overwritten fetch routine follows presuming success set user first time around user reuses options object another fetch call think append case paginated collections implementation requires user either clean optionssuccess field fetch issued else second time around success going get called entire collection parameter nt necessarily bug tripped note documentation options object mutable library would helpful", "num": "1577", "d": "8/2012"}, {"title": "binding modelsave change event causes change event raised twice", "body": "related issue calling save within change event change event fired using backbone custom sync method imagine would occur default sync implementation call stack goes something like set myattr adds myattr pending line calls change change line raises change event previousattributesmyattr attributesmyattr change event handler calls save turn calls sync save success handler calls line modelset serverattrs options guessing validate result set method compares attributes previousattributes sees different adds myattr pending execution returns change event change line updates previousattributes attributes change sees pending items cause got readded raises another change event time previousattributesmyattr attributesmyattr execution continues sync success handler calls set previousattributes attributes equal nt add anything pending", "num": "1576", "d": "8/2012"}, {"title": "needs documentation modelcollection event callback arguments", "body": "example say documentation nt let know arguments expect receive", "num": "1575", "d": "8/2012"}, {"title": "feature make collection filtercollection return collection instance", "body": "example filtered thiscollectionfilter function model return modelget category actions returns array tojson method change filtered thiscollectionfiltercollection function model return modelget category actions returns collection tojson method reference", "num": "1572", "d": "8/2012"}, {"title": "collection within model updating changes save", "body": "non issue error part", "num": "1566", "d": "8/2012"}, {"title": "change column handled well clear", "body": "expect following code trigger change callback three times following code triggers twice modelon change dummy gt consolelog dummy change occurred modelset dummy true modelclear modelset dummy true modelset dummy false whereas change code following trigger three times modelon change dummy gt consolelog dummy change occurred modelset dummy true modelclear modelset dummy false modelset dummy true gut feeling dummy value cached due change callback registration clear executed cached value reset thus set value twice interleaved clear call nt trigger change dummy callback", "num": "1565", "d": "8/2012"}, {"title": "feature request collectionsrefresh", "body": "using backbonejs nodejs apps setup backbonejs code model property save database default value say checked added used collectionsreset bootstrap collections every page reload set models unchecked status get default checked back redirectingreloading page want method collection bootstrapping adds models collections feature already backbonejs meantime wrote bootstrap method collections", "num": "1564", "d": "8/2012"}, {"title": "collectionfetch returns empty collection sync override", "body": "overriding collectionsync modelsync prevent fetch twice modelfetch returns model response correctly collectionfetch collection response returns collection empty response correct collection coffeescript class mymodel sync method model options tmpmodel modelmanagermodels id method read tmpmodel optionssuccess tmpmodel tmpmodel correct model else backbonesync method model options class mycollection sync method collection options modelfetch success model response gt consolelog model returns correct model consolelog response returns correct model collectionfetch success collection response gt consolelog model returns empty collection consolelog response returns correct collection anticipated behaviour get collection response think able get collection edit anticipated behaviour optionssuccess returns response model collection edit", "num": "1563", "d": "8/2012"}, {"title": "docs state underscorejs xss sanitized", "body": "backbone agnostic respect preferred method html templating render function could even munge together html string use documentcreateelement generate dom tree however suggest choosing nice javascript templating library mustachejs hamljs eco fine alternatives underscorejs already page template available excellent choice already xsssanitized interpolated data underscore already supports sanitation imho default", "num": "1554", "d": "8/2012"}, {"title": "delegate event view return original event", "body": "process attributes need access event callback receive event object event object contain target child html element contain original event example text events click test func backbone uses yes okay maybe original returned argument dome example delegate eventdata ps course get access parent jquery parents adds complexity", "num": "1552", "d": "8/2012"}, {"title": "proxy events", "body": "often use rethrow events child object maybe helpful create simple proxy backbone yes use global events object cool think avoid problem", "num": "1548", "d": "8/2012"}, {"title": "combine hash routing pushstate", "body": "sometimes need support types routing one application possible yet", "num": "1547", "d": "8/2012"}, {"title": "destroy model trigger destroy event collection", "body": "sure intentional onmodelevent checks event destroy calls breaks event allows models propagate events collections", "num": "1546", "d": "8/2012"}, {"title": "tojson nt traverse entire tree collection model ca nt accessed properly", "body": "structure looks like call seems work top always empty try access consolelog see entire structure correctly objects populated point try directly access empty whether items inside even though consolelog showed populated", "num": "1544", "d": "8/2012"}, {"title": "request module seems affect backbone underscore behavior", "body": "usage module nodejs environment seems affect backbone underscore request module included backbone refuses set model values resulting error var backbone require backbone var request require request var model new backbonemodel modelset foo bar works modelset foo bar fails results typeerror thisidattribute attrs thisid attrs thisidattribute typeerror use operator search id bar extendset object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerunmain processstartupprocessnexttickprocesstickcallback looking code set function seems passes object resulting error indicates underscore module affected well moving require statement passed model creation error longer appears created three simple setups investigate error setups found run node failing setup without request module require statement moved run node fails others pass run node setups pass module version used backbone master underscore request error generated backbone sure right project report root cause fix might node request underscore projects maybe issue reported", "num": "1543", "d": "8/2012"}, {"title": "set model sub attributes", "body": "example model set modelset namefirst artyom maybe helpful allow", "num": "1542", "d": "8/2012"}, {"title": "persistent dom xss found", "body": "hello folks example vulnerable dom xss since uses localstorage turn grave mimicking persistent xss chaining clickjacking drag amp drop shared environment poc exploit code enter following input box hit enter bish", "num": "1540", "d": "8/2012"}, {"title": "commandclick ctrlclick open new tab", "body": "backbonehistorynavigate functionality added open new tab ctrlclick cmdclick unable extend history function well following piece code could added functionality eventpreventdefault eventmetakey eventctrlkey windowopen locationorigin fragment blank thank", "num": "1538", "d": "8/2012"}, {"title": "create event differentiate sync create sync update", "body": "currently listen sync event backbone model manually detect status code newly created resources many times various listening views need know whether object created first time simply updated good reason could create event added triggered save method models", "num": "1536", "d": "8/2012"}, {"title": "modelsave model wait true fails merge serverattrs correctly", "body": "run issue saving model object wait true attributes server correctly merged existing clientside model attributes root issue seems modelsave success function uses extend attrs serverattrs paying attention possibility attrs may simple hash may instead model object model object serverattrs merged toplevel properties instead model attributes hash belong modelset function code results loss toplevel attributes merged serverattrs hash propose save success function changed detect whether attrs model object extract attributes way please advise missing something suspect server modifying attributes manner common scenario though seem valid", "num": "1533", "d": "8/2012"}, {"title": "empty backbonemodel object returned", "body": "var foomodel backbonemodelextend var foo new foomodel var status new foomodel var new foomodel consolelog foo outputs backbonemodel child consolelog status outputs empty object object object consolelog outputs backbonemodel child", "num": "1531", "d": "8/2012"}, {"title": "backbone custom interactions", "body": "textbox email also textboxes city state would make email required either city state filled without alot custom js write something built allow kind flexibility thanks much david", "num": "1530", "d": "8/2012"}, {"title": "tagname definition list", "body": "definition list item mapped view using template something like creating views dynamically problem set end markup like need way wrap element tag removing altogether stops things working solution", "num": "1529", "d": "8/2012"}, {"title": "exceptions thrown event listeners stops successive events triggered", "body": "running problem working large project lot moving pieces using centralized event system avoid coupling code bloat problem one event listener breaks causes listeners stop called worse bubbles exception code triggered event could put try catch block around trigger call would much better put trycatch blocks around call pull request forthcoming", "num": "1527", "d": "8/2012"}, {"title": "events broken using named function", "body": "changed little bit existing test reproduce issue difference using function name unbind event unbind nt tested older browsers really crazy one", "num": "1526", "d": "8/2012"}, {"title": "nt collection add always reference collection model", "body": "", "num": "1522", "d": "8/2012"}, {"title": "models ignorant collections reset event", "body": "asked question backbone reset event collection class got excellent answer solves problem extending collection class also really like know models intentionally ignorant collections reset event", "num": "1521", "d": "8/2012"}, {"body": "generic organize code question backbone question common requirejs modules return object rather instance object constructing new instances nt directly problem constructing collection nt fire xhr want instance give collection could pass around module object attach objects use shared namespace see module system", "d": "8/2012"}, {"body": "sure best solution making change solves problem would appreciate advice looks correct make pr test case", "d": "8/2012"}, {"body": "totally feel free add whatever indexes like collections", "d": "8/2012"}, {"body": "jashkenas even rc bump npm would nice starting share backbone code server sad realize today among additionsfixes nt available npm version months seems like quite bump active project", "d": "8/2012"}, {"body": "yep time", "d": "8/2012"}, {"body": "see sample", "d": "8/2012"}, {"body": "depends intended usage instance needed following contrived example methods bound via third argument handles context otherwise probably need bind via experience needed often js var view backboneviewextend events click render initialize function thismodelon change thisrender", "d": "8/2012"}, {"body": "mornin aeosynth thanks pointing stems fact created sure reason particular bit code perhaps default created dig bit", "d": "8/2012"}, {"body": "aeosynth causes created default avoiding error message described", "d": "8/2012"}, {"body": "braddunbar thanks", "d": "8/2012"}, {"body": "hi jasonmcaffee thanks issue instance validating input form input blur occurs provide immediate feedback user indicating field invalid nt see ca nt model considered invalid result truthy means return much little validation data need reason wo nt work", "d": "8/2012"}, {"body": "unfortunately nt work want validate field updated entire model expanded example bit demonstrate javascript validate function attrs log validate called n attrs keys attrs length keys attrs function key log validate called attr key var errors call set get validated point want validated user hasnt entered anything yet viewmodelset new val user leaves blur event want immediately provide feedback invalid nt want validate rest model attrs nt modified would mean would litter page validation messages inputs may times validation certain inputs performance hit current validation approach would ensure always suffer perf hit", "d": "8/2012"}, {"body": "may times validation certain inputs performance hit current validation approach would ensure always suffer perf hit validating attributes resource intensive probably take another approach user leaves blur event want immediately provide feedback invalid nt want validate rest model attrs nt modified would mean would litter page validation messages inputs model issue ui issue set flag input indicates whether focus yet display validation", "d": "8/2012"}, {"body": "ok give try please explain reasoning change words revalidating entire model property changed make sense comment line get behavior looking without additional work thanks", "d": "8/2012"}, {"body": "sure thing relvant reading want give look gist validating model whole specific attribute words value one attribute may affect validation another", "d": "8/2012"}, {"body": "backbone model nt suited use case setting property time immediately providing feedback property failed ui issue model part ui consider model issue put together demo functions way want conjunction backbonemodelbinder allows validation set attribute time validate attribute time submit form whole model validated error messages displayed invalid attribute created new type model applies modification allows set property time javascript fix backbone validation validates property set entire model temporarily set thisattributes validate called attributes changed passed override validate thisattributes back normal validate called risk breaking backbone changes validate function eg calls function validate called relies thisattributes function validateonlywhatchanged attrs options consolelog validateonlywhatchanged called var model backbonemodelextend override validate function validates changed validate validateonlywhatchanged thing needed fix previousattributes using modelset silent true part new function added backbonemodelbinder provides ability serializing inputs model form submit", "d": "8/2012"}, {"body": "mornin docyes thanks opening issue agree sometimes useful pass multiple modelscollections view however think convention pass separate option set also listening events multiple modelscollections usually means view split making support nonissue let keep conventions simple possible", "d": "8/2012"}, {"body": "hey braddunbar thanks giving thought one reason possibly sending one modelcollection view due lack polymorphic associations good thing core modelcollection agree sending options simple reasonable approach unfortunately data complex nuance even simplistic view possibly adding collections models notice plural new special constructor arguments added instance convention would conservative explicit enhancement thanks consideration either way", "d": "8/2012"}, {"body": "thanks explaining docyes sure situations describing experience nt use multiple models collections view unless absolutely breaking views respond one modelcollection turns much modular reusable code since case think backbone avoid encouraging pattern", "d": "8/2012"}, {"body": "np braddunbar suggesting case view nested sub views operate different modelcollection best practice pass via options space sure realities view onetoone relationship data objects entirely true complex application", "d": "8/2012"}, {"body": "pass one model listen events one model nt mean subviews ca nt operate different model usually models related relationships dictate view structure instance post needs render list comments post model would likely contain list comments ie could use initialize comment views inside parent view", "d": "8/2012"}, {"body": "unfortunately happens many models collections require various compositions per view perhaps decoupling composition separate object keeps things cleaner littering mutable objects supportive drive simplicity yet time convention needs merge core", "d": "8/2012"}, {"body": "mornin mfrobben version backbone using current master options passed fetch cloned let us know version nt work get fixed", "d": "8/2012"}, {"body": "mornin thanks pointing looks like dev branch indeed old version compat reasons", "d": "8/2012"}, {"body": "phdesign seeing happening default also given state incorrect inside nested change take look see fixes issue", "d": "8/2012"}, {"body": "thanks tim issue seems related pulled fix issue still occurring set function still sees previousattributes different attributes adds attribute pending second run thu aug pm tim griesser notifications githubcomwrote phdesign seeing happening default sync also given state previousattributes incorrect inside nested change take look see fixes issue reply email directly view github", "d": "8/2012"}, {"body": "looking", "d": "8/2012"}, {"body": "durp yep probably linked events section docs though", "d": "8/2012"}, {"body": "cases though example says seems like sometimes callbacks passed parameter similar makes hard add extra optional parameters callback called directly parameters passed callbacks backbone nt fully documented", "d": "8/2012"}, {"body": "event also receives argument one passed documented docs master fixed next release", "d": "8/2012"}, {"body": "ok cool thanks", "d": "8/2012"}, {"body": "nt coffeescript nt assume object property arguments automatically function", "d": "8/2012"}, {"body": "yes typo edit post issue still exists without typo", "d": "8/2012"}, {"body": "nt first example trigger times set agree case behavior seeing current github version backbone tried", "d": "8/2012"}, {"body": "nt checked old version honest check thank yes agree times tue aug tim griesser notifications githubcomwrote nt first example trigger times set dummy true clear dummy true dummy false agree case behavior seeing current github version backbone tried reply email directly view github", "d": "8/2012"}, {"body": "thing think like add models current collection instead replacing collection contents pass add true option fetch seen bootstrapping difficulty understanding would keep state page reloadscould elaborate", "d": "8/2012"}, {"body": "yes refresh page going lose state stored javascript memory nt want store checked database want store going put cookie session instead nt anything backbone particular", "d": "8/2012"}, {"body": "mornin artyomtrityak thanks opening issue sure element trying get fairly certain grab reference using one following eventtarget eventcurrenttarget eventdelegatetarget could bit specific maybe extra context code would help understand issue", "d": "8/2012"}, {"body": "oh sry missed eventcurrenttarget sorry", "d": "8/2012"}, {"body": "problem glad got worked", "d": "8/2012"}, {"body": "use notion event bus described link rethrow events dependency views would suggest use different event case listen reindex event views using event bus", "d": "8/2012"}, {"body": "hi artyomtrityak thanks opening issue actually discussed decided backbone proxy methodobject would added opinion explicitly triggering event nearly always better choice easier understand involves less indirection", "d": "8/2012"}, {"body": "hi koc could explain situation would need use pushstate hashchange never heard request", "d": "8/2012"}, {"body": "page photorotator uses pushstate pages viewing concrete photo comments map markers wher open marker popup using hashchange page anchor", "d": "8/2012"}, {"body": "gotcha thanks explanation problem never work crossbrowser manner since ie lt nt support pushstate opening pushstate page nonsupporting browser hashchange used fallback would therefore break functionality since backbone aims provide crossbrowser functionality feature never work", "d": "8/2012"}, {"body": "case browser nt support push state using redirects fallback hashchange obtain described behavior ugly hacking backbonejs", "d": "8/2012"}, {"body": "see case needed backbone support use case", "d": "8/2012"}, {"body": "hacking library seems bad best support core possible modify routing behavior via plugins", "d": "8/2012"}, {"body": "part nt possible running errors", "d": "8/2012"}, {"body": "method like please suggest change routing history without modifying core code good way", "d": "8/2012"}, {"body": "yes want provide functionality custom method fine way go", "d": "8/2012"}, {"body": "ok thank", "d": "8/2012"}, {"body": "oatkiller thanks opening issue nt seem problem triggering destroy events collections destroying models master", "d": "8/2012"}, {"body": "oatkiller unless objections going mark closed please feel free modify either test cases previous comment reproduce breaking unexpected behavior like discuss", "d": "8/2012"}, {"body": "apologies second look indeed seem mistaken", "d": "8/2012"}, {"body": "guess backbone nt support kind nesting box checkout backbone relational nt already", "d": "8/2012"}, {"body": "looks like request something make fail getting set improperly probably open similar issues underscore request backbone definitely culprit fwiw underscore using object constructor comparison may right think root cause somewhere node hurtrealbad", "d": "8/2012"}, {"body": "correction seems like actually happens overwrites anything thing living global local doesnt matter happens initially requiring request easily worked around loading request underscore backbone", "d": "8/2012"}, {"body": "easily worked around loading request underscore backbone relying order require statements good idea might always work especially modules play require statements might wrong order look like request even node issue open ticket request project thanks response", "d": "8/2012"}, {"body": "great mattijs would mind dropping link request ticket file", "d": "8/2012"}, {"body": "debugging testing look like bug node even knowtheory node issue found", "d": "8/2012"}, {"body": "wow pretty crazy object comparison constructor break like still curious including request would squash mattijs opened issues request even get eyes problem", "d": "8/2012"}, {"body": "open issue request yet thought opening one nodejs project would enough solve eventually could find reference request squashing nodejs issues shows request might even squash comparison somewhere trigger weird core behavior might well optimalisation thing test shows requiring module comparison like enough trigger altered behavior could mean request might fault since simply uses module turn requires module pretty crazy", "d": "8/2012"}, {"body": "looks like issue fixed soon", "d": "8/2012"}, {"body": "like modelset name name artyom name simple js object backbone model also backbone support sub attributes must manage like separated models artyom trityak notifications githubcom example model backbonemodelextend defaults name first last set modelset namefirst artyom maybe helpful allow reply email directly view github \u043c\u0430\u043a\u0441\u0438\u043c \u043a\u0438\u0441\u043b\u043e\u0432 mobile email kislovm gmailcom", "d": "8/2012"}, {"body": "yes case override total name object example already last name want set first name yes get object make change put back looks ugly would perfect put sub attrs listen changes event something like", "d": "8/2012"}, {"body": "found plugin allows thx anyone works totally overrides backbonemodel set function good", "d": "8/2012"}, {"body": "ca nt say surprised little demo app said pull request sanitizing contents pulled form prior creating new todo sure would welcome", "d": "8/2012"}, {"body": "people get inspired demo apps ending using production code suggest using handlebars mustache view engine get benefit auto escaping web plagued xss projects like backbone good community adopting safer methods defaults know things going even wicked", "d": "8/2012"}, {"body": "seem impression disagreed nt like said pull requests welcome purpose todo app demonstrate backbone basic feature set also presume addyosmani adapted myriad mvwtf frameworks unsurprised simple toy app nt sanitize input yet said nt think main demo app switch handlebarsmustache since point show basic features backbone", "d": "8/2012"}, {"body": "knowtheory one toylearning application purpose give developers basic view framework capable including handlebarsmustache saying people likely copy production scary might also taken backbone suggesting users opting specific templating library another probably nt want start arguments said pr autoescaping merged happily consider todomvc apps", "d": "8/2012"}, {"body": "value right way even examples help beginners get safe track templated properties simply wrapped additional dependencies needed", "d": "8/2012"}, {"body": "even easier matter using interpolate", "d": "8/2012"}, {"body": "factormystic agrees request examples design safe requiring devs sanitize user input manually nt worked else xss would nt still web security issue even decade backbone guru mustache equivalent fair job something even simpler great agree ith addyosmani backbone might promoting something manner yui yapp uses handlebars may could put notice could use one choice like yui done main sections", "d": "8/2012"}, {"body": "backbone docs already note use templating library choice", "d": "8/2012"}, {"body": "fixed disappointed trolling issue rather submitted change oh well", "d": "8/2012"}, {"body": "knowtheory understand disappointment intention definitely saying fix sharing concern promoting safe default security practices amongst developers common industry issue pointed security folks earlier well tweet pointed chrome xss auditor dom xss protection wo nt protect users nt meet chrome bad people need know getting end day", "d": "8/2012"}, {"body": "please note responsible disclosure like chrome bug report fixed shared", "d": "8/2012"}, {"body": "backbonehistory nothing events afraid", "d": "8/2012"}, {"body": "may rephrase question would best way implement cmdclick backbone", "d": "8/2012"}, {"body": "ah yep listen type click care middleclick commandclick controlclick open url desire", "d": "8/2012"}, {"body": "nt views interested new model ed collection nt working use case", "d": "8/2012"}, {"body": "case care difference singular model created vs us updated default method wanted get additional create event instead determine fact sync event", "d": "8/2012"}, {"body": "care singular model created ca nt use failing", "d": "8/2012"}, {"body": "method fire model updated return status code created return status right issue able always discriminate two would unfortunate pass custom success method every time call save get create event also nt want toplevel extension overriding save success method would also override anytime want oneoff custom success method elsewhere code know could also listen change id event still nt semantically say server created new single object code", "d": "8/2012"}, {"body": "exactly event specific ca nt use generic ca nt use singular callback elaboration bit use case would help", "d": "8/2012"}, {"body": "great use custom easy add takes little code", "d": "8/2012"}, {"body": "like braddunbar idea using method extend onto sync places use singular model need differentiate include singular membership object user joining group ticket event create implies new membership whereas update sync implies details membership updated representation singular currentuser authentication create implies login whereas update sync implies info user changed singular resource", "d": "8/2012"}, {"body": "moved pull request", "d": "8/2012"}, {"body": "hi denbad following appears work fine could elaborate bit problem", "d": "8/2012"}, {"body": "special magic global variable nt anything backbone particular", "d": "8/2012"}, {"body": "huh never heard one thanks jashkenas", "d": "8/2012"}, {"body": "thanks jashkenas", "d": "8/2012"}, {"body": "kind thing nothing particular backbone good luck js", "d": "8/2012"}, {"body": "could extended guess example tag element interactions attribute backbone could look atributes act accordingly yes try see get thanks date tue aug notifications githubcom backbone noreplygithubcom cc hotmailcom subject backbone backbone custom interactions kind thing nothing particular backbone good luck js", "d": "8/2012"}, {"body": "one points backbone move source truth dom view manage form user goes submit validate data form one shot dom attribute storage necessary", "d": "8/2012"}, {"body": "alright new backbone actually written light weight client side mvvm model trying figure incorporate interactions backbone seems promising thanks muchdate tue aug notifications githubcom backbone noreplygithubcom cc hotmailcom subject backbone backbone custom interactions one points backbone move source truth dom view manage form user goes submit validate data form one shot dom attribute storage necessary", "d": "8/2012"}, {"body": "backbone views required element bind events prior rendering case nt need wrapper element best bet append contents use change view current either parent node one subnodes eg note several downsides approach come think using definition list items backbone views one loose ability efficiently bind events view since either dealing multiple common events parent element manually bind things depending element passed", "d": "8/2012"}, {"body": "bunch ways work around fundamentally like model tree structure views going need tree structure pairs like save trouble use", "d": "8/2012"}, {"body": "hmm okay looks like going update html august jeremy ashkenas notifications githubcom wrote bunch ways work around fundamentally youd like model tree structure views going need tree structure pairs like save trouble use reply email directly view github fred kelly q email three sentences less", "d": "8/2012"}, {"body": "pull request", "d": "8/2012"}, {"body": "morning fracmak thanks isssue discussion subject consensus try blocks appropriate flow control understand concern suppressing errors inside event handlers much worse behavior skipping rest handlers something fails want know immediately continue though nothing happened", "d": "8/2012"}, {"body": "yet another reason nt want use named functions ie bugs surrounding pretty bad use variable instead", "d": "8/2012"}, {"body": "funny thing use named function well use cases binding event one works", "d": "8/2012"}, {"body": "also reading seems like use named functions nt mix named functions function expression giving function expression additionally name ie lt", "d": "8/2012"}, {"body": "passing named function callback works like mixed variant", "d": "8/2012"}, {"body": "hi kof thanks opening issue afraid nt quite understand question though referring arguments events something else collection add", "d": "8/2012"}, {"body": "sorry bad thought model created via collection add nt referenced collection model created directly", "d": "8/2012"}, {"body": "problem glad figured", "d": "8/2012"}, {"body": "juliankrispel thanks opening issue answer stackoverflow definitely pointed right direction try answer question backbone models unaware collection reset events due fact single model instance belong multiple collections although model canonical property nothing stopping would issues caused collection reset events bubbling models fwiw possible usecase would covered braddunbar patch", "d": "8/2012"}, {"body": "makes perfect sense thank", "d": "8/2012"}, {"body": "prefer fact dom events necessity separate model events outside previous technical issues raised logical reason mash model events dom events together viewevents hash would simple enough extend view modelevents hash facilitate simple mapping model events member methods would sane way go", "d": "8/2012"}, {"body": "need something similar extjs documentation", "d": "8/2012"}, {"body": "experiencing issue version canary upgraded version canary issue nt occur longer", "d": "8/2012"}, {"body": "issue appears resolved close", "d": "8/2012"}, {"body": "yep think", "d": "8/2012"}, {"body": "dont see assumption response clearly states header type applicationjson parse header nt match body clearly bug server side backbone need handle", "d": "8/2012"}, {"body": "rereading confused thought still talking request header response header says json sure json parsing would fine reopening", "d": "8/2012"}, {"body": "articles point towards using trigger true code smell thanks", "d": "8/2012"}, {"body": "nt articles forces serialize application state string url precise nt need calling javascript function much richer api pass objects references nt lose external state think backbone changing url browser dropping bookmark folks go back later thing need change application state", "d": "8/2012"}, {"body": "similar problem form validation system sets input value input change validate see error show error form case want set value model even valid keep model sync values form need also wanted special behavior assigning inputname nt match model attributes nested models collections handle values could one things modify code view set different values inputname patters view care mode edge cases override method backbone model overrides little bit messy backbone add event listener change handle edge cases last solution looks clean case use set attribute even validation fails event fired case showing probably related avoiding validation case jashkenas said add behavior edge cases case could solve firing change event manually view", "d": "8/2012"}, {"body": "endless loop wants fix forked file gives opportunity goes around circles opening losing windows", "d": "8/2012"}, {"body": "agree bit problematic understand validate method intended validate model form reasons form validation validate model attributes one time example number set operations row mode first set invalid nt want continue following sets point anyway workaround pass silent true sets let save operation call validate function", "d": "8/2012"}, {"body": "actually yes exactly operation supposed work batch changes desired run later", "d": "8/2012"}, {"body": "yeah spent trying figure one thedersen using validation library attrs passed validate function represents attrs changed line passed attrs reason merged thisattributes comment occurring would nice thisvalidate called attributes passed ultimately leads dom getting modified every attributes thedersen validation lib wrote override backonevalidate function essentially justs comments attribute merge trick worried side effects passing silent true cause validation occur need validation occur goal perform client side validation nt make round trip server want validate single input user leaves changes field provide immediate feedback indicating entered data bad format etc eg dollar field user enters tacos nt want make round trip server instead prebusiness logic validation occur immediately ultimately need easy way figuring attributes invalid commit thedersen pointed longer gives us ability", "d": "8/2012"}, {"body": "think behavior router route like resources id preview request url ex router execute preview preview still look url decide parse whatever router route like resources id querystring preview still execute preview query string extra parameter", "d": "8/2012"}, {"body": "ericjeedunn", "d": "8/2012"}, {"body": "jashkenas reopened open pull requests implementing behaviour described ericjeedunn", "d": "8/2012"}, {"body": "yep maybe incidental query param problem pretty damning clients add garbage query params similar things links", "d": "8/2012"}, {"body": "think ignoring search params altogether good thing foobar matches foobar conditionally ignoring based route pattern seems fraught problems happens load url search params hashchange browser also copy search string hash regular search changes one use transitioning back pushstate browser seems support query strings router must ignore hashchange browsers", "d": "8/2012"}, {"body": "something tacking query params onto urls hashes instance would become working patch moment", "d": "8/2012"}, {"body": "former exactly issue describing", "d": "8/2012"}, {"body": "taken quick stab major issue running already match getting passed case really sure resolve problem would change regex matching include pretty strong feeling going break existing code people field also issue precedence routes like one gets matched visit", "d": "8/2012"}, {"body": "approach trying trying route first query string intact query string removed runs problems listed", "d": "8/2012"}, {"body": "phleet cents think good guideline uri specs make regexp work way uri parser would expected function breaks existing code means people nt reasonable expectation matched routes therefore match likewise second example usually order matters programmer wants match list restrictive least restrictive expect library clever ought", "d": "8/2012"}, {"body": "stumbled across issue would like provide simple solution cases api framework treats urls without trailing slashes may confusing user entering result valid request webserver backbonejs router wont route apache modify htaccess redirect user nontrailingslash equivalent url rewrite trailing slashes nontrailingslash equivalents rewritecond requesturi nc rewriterule nc l", "d": "8/2012"}, {"body": "router initialization method manually added catchall route removes trailing slashes helpful anyone", "d": "8/2012"}, {"body": "", "d": "8/2012"}, {"body": "vincentbriglia thanks snippet removing trailing slashes added missing right function line added", "d": "8/2012"}, {"body": "issue everything works fine ffsafari chrome weirdness like forgets looses items history stack sometimes weird thing first time back button used navigate back previous route works fine second time nt using simple view manager like derick baileys manage switching top level application views following pattern shows behaviour describe start home click item navigation loads another top level application view eg shown corresponding view click back taken back homepage expected click another item navigation links another top level application view eg shown corresponding view click back point expect see home view reality taken back top level application view step eg almost browser nt register gone back first time trying replicate simple example outside app nt managed yet post discover anything", "d": "8/2012"}, {"body": "process navigate page trigger true passed", "d": "8/2012"}, {"body": "spent hours trying find method work application think bb docs include notification issue ugly quick solution call method actual one worked option would definitely use", "d": "8/2012"}, {"body": "played bit initial patch implementation understand optionspatch sync filled need set manually thanks", "d": "8/2012"}, {"body": "set use patch requests sending updates server default set must defined options calling assuming update new object nonetheless still need add tests ensure behavior correct", "d": "8/2012"}, {"body": "see nt sure understand correctly currently working patch support backbone app idea let determine changed decide method use without using change event", "d": "8/2012"}, {"body": "hongymagic inferred two points lost update problem certainly concern server needs handle problem ultimately fortunately http spec two conditional request headers apply nonsafe requests resource last response header used ensure state resource changed header present used instead one side note etags generally preferred http dates since resolution second proposing logic handle go backbone something consider general dealing updates something document general solution event handler could defined track etags last modified dates resources well add correct headers outgoing put patch requests quick untested interpretation javascript keep track response etag lastmodified dates var etags lastmodifieddates ajaxsend function event xhr options var etag lastmodified", "d": "8/2012"}, {"body": "well bad think patch concurrency issues great point easy correctly", "d": "8/2012"}, {"body": "still problem modelparse called reset nt want repeat duplicating code collection", "d": "8/2012"}, {"body": "jeremiahlee point routes evaluated order defined make sure add catch route end always", "d": "8/2012"}, {"body": "working multiple routers becomes issue needs better solution", "d": "8/2012"}, {"body": "running exact issue amp race condition going going hard define test case repro sometimes works sometimes nt", "d": "8/2012"}, {"body": "mikeobrien believe need ensure dom loaded like alekzonder work", "d": "8/2012"}, {"body": "yeah saw solution using requirejs initially impression require method called dom loaded wrong assumption alekzonder solution trick", "d": "8/2012"}, {"body": "ca nt load scripts bottom page would nt effectively remove need domready considering dom loaded time script tags parsed amp executed mark mcdonnell friday august mike obrien wrote yeah saw solution using requirejs initially impression require method called dom loaded wrong assumption alekzonder solution trick reply email directly view github", "d": "8/2012"}, {"body": "running exact issue years later due fact creation seen update instead create wrong event firing collectioncreate must depend sync event instead create event adding items collection deciding whether model new based whether id counterintuitive", "d": "8/2012"}, {"body": "updates missed function several projects added backbonejs sucks modify backbonejs every time new project", "d": "8/2012"}, {"body": "included reasons rarely ever come across case really needed", "d": "8/2012"}, {"body": "well look comments might one", "d": "8/2012"}, {"body": "paratron curiosity use underscore order need", "d": "8/2012"}, {"body": "objects extended backboneevents use objecton append event listener objectonce would cleanly apply event listener performs detaches using underscores method completely meaning", "d": "8/2012"}, {"body": "notice issue closed guessing wo nt fix workaround problem avoid data stomping described example", "d": "8/2012"}, {"body": "globexdesigns datastomping describe concern restful api whether using backbone optimistic locking would typically use scenario http added support optimistic locking new headers like etags ifmatch blog post detailed writeup topic restful service generates etags representation checks ifmatch header put delete modifications make sure clients nt stomping changes made since last retrieved data client code extended backbonemodel automatically extract etag header fetch called add ifmatch header save destroy calls calling save destroy model objects handle precondition failed results tell server data changed since last retrieved handle depends scenario perhaps simply refetch data reapply changes top may need user review changes first", "d": "8/2012"}, {"body": "jashkenas mentioned two reasons restful need restful library handy one concurrent updates problems nt fixed existing way avoids mutually conflicting attributes data stomping instead nt see reason existing approach reason proposed one avoid lots checks order save unchanged attributes server side cause event sourcing pollute history", "d": "8/2012"}, {"body": "ericwright concern restful apis obvious solution seriously put question usability looks like others tried fix issue introducing merge patch operations mix workaround proposed etags solution feels messy mention fact constant etag header parsing probably add significant performance overhead suppose disagreement restful design general simply nt work web application cases application got users making hundreds thousands requests per second restful full object data passing inefficient dangerous scenario real solution think case keeping backbone existing design place would work object update check server object changes may occurred ask user confirm object changed since last edited essentially means doubling number requests made server update ie check changes save object data written patch backbone adds partial boolean parameter backbonemodel objects enabled change save function send updated data something would considered pull request completely violate backbone structural design methodology", "d": "8/2012"}, {"body": "globexdesigns data stomping partial updates two different issues treated separately note partial updates help reduce frequency stomping users generally modify different data model proposed partial boolean parameter still nt prevent two users stomping modifying field model let stomping occur lastwritewins policy use optimistic locking approach etags prevent accidental overwrites come scheme like one proposed separate issue open adding patch support backbone worth reading discussion since covers many issues given rails server technologies adding patch support seems likely backbone go route rather adding partial put support nevertheless since already written partial put support could submit pull request see jashkenas says", "d": "8/2012"}, {"body": "practicality camp models sometimes include denormalized data multiple serverside entities one update care entity id data transferred presentation ui example address models country region city convert address json server encode current country countryid countryname region city user interface uses autocomplete fields dynamically select existing country region within country city within region update nt need want names need ids would favor approach could supply either blacklist fields exclude updates easy way filter values overriding tojson right way", "d": "8/2012"}, {"title": "collection view longer works", "body": "following example code line source code blockless use provide option omit block following template application code app emberapplicationcreate appitems emberobjectcreate name dave emberobjectcreate name mary emberobjectcreate name sara appanitemview emberviewextend template emberhandlebarscompile greetings contentname result html structure longer works see using pattern code please fix explain changes need made also fix documentation source code site needed thanks", "num": "1341", "d": "8/2012"}, {"title": "action broken adding rootelement emberapplicationcreate", "body": "actions firing using rootelement emberapplicationcreate actions work creating application like emberapplicationcreate rootelement myapp work emberapplicationcreate jsfiddle remove line make work rootelement myapp btw thought initial template supposed placed inside rootelement nt seem happening either", "num": "1339", "d": "8/2012"}, {"title": "allow special extension help handcraft metamorphs", "body": "seen etc think would real help proposed syntax would render point ability target ember cruft around html messes selectors calls thoughts understand gives ability mess anticipating fairly advanced feature", "num": "1338", "d": "8/2012"}, {"title": "", "body": "plz insert beer", "num": "1337", "d": "8/2012"}, {"title": "router accessing serialized objects parent dynamic route segments", "body": "creating issue open discussion topic given route postid subroute view subroute commentid want ability access relevant post object subroute realize simply set post object controller part connectoutlets postid seems sort odd obtain object controller instead router directly one option picture responsible setting routes way work around kselden came good solution involves using objectcontrollers url data pieces see", "num": "1334", "d": "8/2012"}, {"title": "emberselect honor initial value blankprompt", "body": "shwoodard hey peterwagenet wycats think found bugproblem emberselect nt change select bound attribute controller get set explain detail blankprompt select first selected active value default ember know bound value commit record foreign key null peterwagenet shwoodard interesting sound like could bug peterwagenet fix easy jsfiddle follow", "num": "1333", "d": "8/2012"}, {"title": "uncaught typeerror read property length undefined", "body": "using nested view parent view removed error message occurs debug version adding check see element null undefined resolves issue", "num": "1332", "d": "8/2012"}, {"title": "views inside outlets use elements", "body": "became issue switched outlets use virtual views need vendor something like fix", "num": "1331", "d": "8/2012"}, {"title": "performance issue seturl", "body": "using location hash ember seems spend disordinate amount time int seturl function data transition two states machine super old", "num": "1328", "d": "8/2012"}, {"title": "tryinvoke problem ie parameters list set", "body": "hi problem ie call tryinvoke method one parameter param null mymethod myparam tryinvoke obj mymethod gt ko ie get work need set empty params list tryinvoke obj mymethod gt ok ie", "num": "1327", "d": "8/2012"}, {"title": "safari typing textfield valuebinding causes must current run loop error", "body": "view specified typing input error must current run loop occurs", "num": "1322", "d": "8/2012"}, {"title": "emberapplication ready getting called", "body": "would get called however latest nt seem get called anymore manually call something calls second time", "num": "1321", "d": "8/2012"}, {"title": "bindattr observer cleanedup destroyed element", "body": "apologize last person earth gitsavvy enough pull request inside emberhandlebarsregisterhelper bindattr var elem view databindattr dataid dataid elemlength elem undefined elemlength emberremoveobserver pathroot path invoker return view appears longer properly acquire jquery selector element destroyed always sometimes nt know result elem undefined accessing elemlength raises exception stops event propagating appeared upgrade", "num": "1320", "d": "8/2012"}, {"title": "emberjs property binding bug", "body": "peterjm discovered bug way property bindings function ember take following example executed chrome fooview template displays expected template outputs view context gets inherits however fooview template output value viewfoo anyone insight", "num": "1316", "d": "8/2012"}, {"title": "nested variables override pathaccessed variables", "body": "see fiddle seems happening variable resolver gets first level still accepting names ascendant scope assuming default enable searches root variable placed local template scope flag internal get disable extended search path dived object current workaround avoid local variable names collide object property names within single template nt optimal obviously", "num": "1315", "d": "8/2012"}, {"title": "small doc typo statemanager", "body": "sorry nt know change proper pr statemanager object doc says erroronunhandledevents property statemanager actual name property plural single erroronunhandledevent current document set true cause exception raised attempt send event state manager handled current state parent states erroronunhandledevent true thanks", "num": "1314", "d": "8/2012"}, {"title": "classnamebindings someclass nt work", "body": "classnamebindings someclass nt work work chrome etc classnames someclass works classnamebindings trueproperty someclass works bindattr class someclass also nt work seems regression emberjs worked ok earlier releases jsfiddle demonstrating issue", "num": "1313", "d": "8/2012"}, {"title": "appinitialize duplicate renders anonymous template causing weird errors", "body": "asked create issue new ember looks much like bug issue described stackoverflow maybe kselden solution thanks advance", "num": "1309", "d": "8/2012"}, {"title": "connectoutlet object context arraycontroller fails", "body": "good good good fail", "num": "1308", "d": "8/2012"}, {"title": "bindattr crashes nested templates", "body": "create template nested outlet contains following changing state router getting inside returns", "num": "1307", "d": "8/2012"}, {"title": "bound element attributes showing views rendered view helper", "body": "hey kids run across think bug ember handlebars quick summary views rendered using view appviewsmyview nt successfully render simple hardcoded attributes view instantiated rendered using create append everything works expected written detailed explanation issue working jsfiddle misunderstanding something important broken w", "num": "1306", "d": "8/2012"}, {"title": "error trying use ember handlebars runtimeonly", "body": "ember handlebars exception thrown ember tries access property typeerror read property prototype undefined possible make ember work handlebars runtimeonly supported scenario", "num": "1303", "d": "8/2012"}, {"title": "action helper broken master", "body": "updating emberjs railsapp current emberjs helper stopped working maybe context problem", "num": "1302", "d": "8/2012"}, {"title": "emberrouter sets url routes created initially", "body": "initially construct router something like built dsl around router insert routes router essentially coffeescript approutercreateroute name emberroutecreate route buildroutefromname name details important approuterinsertroute path state root nodes pathsplit n nodeslength lt n node nodes states emberget state states method adds new route parent route hash issue router created dslgenerated routes added router coffeescript approuter emberroutercreate path dsl approuterinsertroute path somewhere else much later code appinitialize approuter router nt routes go url nt find matching happens initial route found called seems like bug nt called called would make define routes however want one large nested hash modularized know finalized passed thoughts", "num": "1301", "d": "8/2012"}, {"title": "emberrequired working extend", "body": "embermixin emberrequired working expected javascript embermixin emberobjectextend embermixincreate emberrequired error assertion failed required property defined somehow extend javascript emberobjectextend embermixincreate emberrequired create class misunderstanding supposed work bug", "num": "1299", "d": "8/2012"}, {"title": "missing favicon emberjscom", "body": "order quickfix created favicon emberjs homepage based e brand find", "num": "1298", "d": "8/2012"}, {"title": "maximum call stack size exceeded iterating", "body": "controller view init methods defined emberjs throw exception iterating element controller please see", "num": "1297", "d": "8/2012"}, {"title": "embersortablemixin addobject proxy content addobject", "body": "right making direct call content method means sortable bypasses specific implementations underlying implementation", "num": "1295", "d": "8/2012"}, {"title": "template binding attributes application starts", "body": "application first starts application view loads attempt bind boolean attributes order conditionally set css class boolean attributes initialized properly class get set binding seems work fine startup jsfiddle demonstrates issue pre version", "num": "1294", "d": "8/2012"}, {"title": "gin amp juice ii emberedition", "body": "rollin tha facebook smoking info sip gin juice lay baaaack", "num": "1293", "d": "8/2012"}, {"title": "feature required trigger events elements ready dom", "body": "example know emcollection easily implement helper flexible lighter emcollection", "num": "1292", "d": "8/2012"}, {"title": "optimization place conditional part emberassert statement", "body": "calculating strings nt necessary time quick performance improvement", "num": "1291", "d": "8/2012"}, {"title": "run", "body": "want access serialized data within method serialize reserialize context called emberroutinglibroutablejs emberroutinglibroutablejs init function var redirection thison connectoutlets thisstashcontext stashcontext function manager context var serialized thisserialize manager context emberassert serialize must return hash serialized typeof serialized object seems either method check contextserialized data set already transition run run within otherwise want get data within method running serialize code multiple times thoughts", "num": "1290", "d": "8/2012"}, {"title": "update view helper docs rel paths nesting level", "body": "really big deal gotcha killed hour half day figured could easily documented specifically nowhere docs mention nest views use relative paths need prefix paths deeper level jsfiddle example fact far know docs nt ever mention word reference object opposed helper keyword works inside handlebars helpers since seems little bit like magic think deserves explanation", "num": "1289", "d": "8/2012"}, {"title": "ss view", "body": "", "num": "1287", "d": "8/2012"}, {"title": "router stopping nonleaf state", "body": "hi issue router stopping nonleaf state violation definition state machine working correctly updated pre version behaviour different feel violation state machine able specify parent super state state machine navigate default leaf state currently sample thanks", "num": "1284", "d": "8/2012"}, {"title": "small fix use emberset emberviewtransitionto", "body": "get thrown listening changes view state thought emberview update use actual statemanager already merged master nt also offtopic developing bit complex ember app sort lightweight square register would anybody interested making public seems like exactly abundance example ember apps beyond toy projects javascript transitionto function state children thisstate state set state state", "num": "1282", "d": "8/2012"}, {"title": "issue getpath hasownproperty", "body": "using getpath one controllers retrieve data iterating follows javascript var filters appstatecontrollergetpath contentfilters filters filtershasownproperty continue seeing using developer tools mode sure failing hasownproperty ember whereas newer browsers including skip intended idea fix suggestion handling rather hasownproperty feeling reason app freezing crashing", "num": "1280", "d": "8/2012"}, {"title": "rerender ordering bindattr bind helpers rerender deprecation warning", "body": "getting warning something caused view rerender rendered inserted dom avoidable cause significant performance issues applications behavior deprecated want use debugger find caused set open close box couple times fiddle see action least would helpful guide help track source rerender took quite bit digging isolate source", "num": "1279", "d": "8/2012"}, {"title": "scroll top route changes", "body": "moment change router state window nt scroll back top find usually want scroll wanted start conversation issue automatically scroll route change unconditionally configurable hook", "num": "1276", "d": "8/2012"}, {"title": "historylocationjs uses windowhistorypushstate nt work ie windowhistory nt implementet", "body": "temp fix code would add historyjs desired workarounds ideas", "num": "1275", "d": "8/2012"}, {"title": "redefine nonconfigurable property", "body": "kselden aware issue", "num": "1273", "d": "8/2012"}, {"title": "problem asyn routing", "body": "hi code javascript function app app emberapplicationcreate appapplicationcontroller embercontrollerextend updatetitle function updatetitle title documenttitle title appapplicationview emberviewextend templatename layout work load list post go one post want enter url post serialize derialize dont wait load post api send error asyn rout enter first time url thanks", "num": "1268", "d": "8/2012"}, {"title": "ember verify jquery", "body": "tried jquery found issue", "num": "1267", "d": "8/2012"}, {"title": "problem router routes", "body": "hi following code router ca nt make works routes enter countrytorunamentteamplayer router route post route dimension think issue help thanks", "num": "1266", "d": "8/2012"}, {"title": "updating observers browser history traversal breaks emberrouter location history", "body": "got following situation using emberrouter location history navigation bar created code using array objects observe router currentstate loading specific page works fine navigating using regular transitionto however browser backforward buttons cause exception example project note load via web server emberhistorylocation work click link two one notice location navigation bar change accordingly press back marked location javascript source problem occurs remove property observer works fine note nt matter observe view nt available observers updated", "num": "1265", "d": "8/2012"}, {"title": "implement sort builtin editablepropertychanged support mixin", "body": "see discussion stackoverflow first attempt gist fiddle discuss outside framework", "num": "1249", "d": "8/2012"}, {"title": "viewcontext controller action undefined", "body": "previously used property controller actions upgrade longer available bug functionality replaced something else fiddle demonstrates problem", "num": "1245", "d": "8/2012"}, {"title": "emberrouter rooturl gets appended multiple times", "body": "setting router using path initial application launch change something like additional seen already paths get correctly appended end url noticed problem first continues using works flawlessly also setting override course possible workaround omit prepend every state directly root state feels bit hacky though hard extract democode project currently working may find time necessary debugging", "num": "1244", "d": "8/2012"}, {"title": "observers tidyed correctly", "body": "observer function observer code checks var elem view databindattr dataid dataid elemlength emberremoveobserver pathroot path invoker however element really removed elem undefined empty array", "num": "1242", "d": "8/2012"}, {"title": "docsemberjscom nt reflect code", "body": "sure sha last jived definitely missing commits documented example missing", "num": "1241", "d": "8/2012"}, {"title": "action pipeline view", "body": "suppose view want perform simple validation eg email conforms email rule passwords mathed kind validation nt need app ie controller logic performed currently router handles action use target change view clear forward say submit event router kind use cases would useful support kind action pipeline first handler cancel whole pipeline ie password field empty need forward submit event router rather show error message thoughts issue currently possible perhaps worth considering feature related discussion", "num": "1240", "d": "8/2012"}, {"title": "question handlebars templates support filename", "body": "slowly upgrading ember app newest build contains getpath get change noticed breaks templates template filenames contain confuses emberget easy enough use rename templates also easy enough add fall back template lookup question anyone else care", "num": "1239", "d": "8/2012"}, {"title": "observes triggering deep object changes setpath", "body": "got content statecontroller something similar following observable content follows controller land need directly modify letters object event occurs surprisingly nt triggering observable binding appears though specific object data type change triggered simply change newobj int string array like propose deep copy object checks take place comparison check changes objects solution use", "num": "1237", "d": "8/2012"}, {"title": "bindattr helper causing exception first use", "body": "template binding get exception first time navigate view works route set u like show emberrouteextend route boardid connectoutlets router board routerget applicationcontroller connectoutlet board board get error line emberjs elemlength uncaught typeerror read property length undefined observer invoke invokeoncetimer invoke iter runloopflush runloopend emberrunend autorun change binding controllercontentcreatedbyimage controllercontentcreatedbyname works fine", "num": "1236", "d": "8/2012"}, {"title": "typo error ember prerelease blog post", "body": "original may also chose directly override context property order follows may also choose", "num": "1233", "d": "8/2012"}, {"title": "infinite loop routableunroutepath initialstate set parent route", "body": "create router tree following structure approuter emberrouterextend location emberlocationcreate implementation hash enablelogging true using back button return previous state default routeone state infinite loop triggered routableunroutepath happens unroutepath searches recursively state parents since subdir initialstate set state stateone entered automatically subdir entered stateone recursively returns parent bounces back stateone", "num": "1231", "d": "8/2012"}, {"title": "improve perform operations metamorph dom error message", "body": "nice provide information easier track error originating one idea wrap metamorph operations trycatch provide information containing viewtemplate", "num": "1230", "d": "8/2012"}, {"title": "bubble didinsertelement parentviews", "body": "solution really stems need event called childview finished syncing dom content currently didinsertelement event work postsync event data synced view creation present child view case view containing block good way tell block finished inserting dom use child view block content use didinsertelement event items individually still nt give us manner original view containing block notified completed sync also tried observing content change childviews cases events called prior insertion dom unless existing hook purpose unable divine source ca nt think simpler method able event called post insert would call every child insert least last event would called inserts completed", "num": "1229", "d": "8/2012"}, {"title": "quirks mode something caused view rerender rendered inserted dom", "body": "layout containerview run works perfectly however use compatibility view fails deprecation warning use latest master published morning", "num": "1228", "d": "8/2012"}, {"title": "benjamin franklin bug", "body": "beer proof god loves us wants us happy benjamin franklin told drink beers like would die tomorrow benjamin franklin never mentioned hangover sorrow worry benjamin franklin died arms tonight benjamin franklin still knew wrong right hurry benjamin franklin believed higher power remember benjamin franklin would love ember furry juan aka pure soul man", "num": "1227", "d": "8/2012"}, {"body": "good catch default rendering context views changed correct example case pr please", "d": "8/2012"}, {"body": "works fine", "d": "8/2012"}, {"body": "ca nt believe could nt see pretty obvious lot big improvements ember lately keep great work thanks john need aug pm peter wagenet notifications githubcom wrote works fine reply email directly view github", "d": "8/2012"}, {"body": "nt know proposed solution best one definitively like idea clean cycles integrating external plugins jquery plugins often pita metamorph generated", "d": "8/2012"}, {"body": "beer beer beer beer beer", "d": "8/2012"}, {"body": "", "d": "8/2012"}, {"body": "egg heart beer", "d": "8/2012"}, {"body": "hybrid", "d": "8/2012"}, {"body": "sf life another day another beer", "d": "8/2012"}, {"body": "plz delete issue", "d": "8/2012"}, {"body": "may think president alas never", "d": "8/2012"}, {"body": "stop", "d": "8/2012"}, {"body": "leepfrog plz bf", "d": "8/2012"}, {"body": "leepfrog skilled developer take world", "d": "8/2012"}, {"body": "closed", "d": "8/2012"}, {"body": "sf life another day another github account", "d": "8/2012"}, {"body": "plz insert beer", "d": "8/2012"}, {"body": "leepfrog king everything feed", "d": "8/2012"}, {"body": "example rails rails route definition resources posts resources comments end url posts postidcomments id format comments show data passed controller params postid gt id gt would slightly different ember would expect get back objects", "d": "8/2012"}, {"body": "try reproduce emberlatest suspect might dup fixes", "d": "8/2012"}, {"body": "hi trek built emberjs master tuesday using want build", "d": "8/2012"}, {"body": "fix fiddle us take look", "d": "8/2012"}, {"body": "already fixed master hopefully get new release soon", "d": "8/2012"}, {"body": "browser seeing ca nt reproduce chrome", "d": "8/2012"}, {"body": "whoops safari nightly webkit os x", "d": "8/2012"}, {"body": "chrome get delegate set test asdfafds content property object proxy appapplicationcontroller content undefined type input", "d": "8/2012"}, {"body": "controller instance property delegate", "d": "8/2012"}, {"body": "trek yep subclass", "d": "8/2012"}, {"body": "trek nvm see adding property allows work thanks helping closing", "d": "8/2012"}, {"body": "also noticed", "d": "8/2012"}, {"body": "latest fire ready", "d": "8/2012"}, {"body": "think related nt understand stuff since commit ar many changes around application initreadiness however tests seems implemented call packagesemberapplicationtestssystemreadinesstestjs", "d": "8/2012"}, {"body": "called part initialization process wo nt called call application", "d": "8/2012"}, {"body": "indeed thx heads", "d": "8/2012"}, {"body": "ah okay moving call outside solution thanks closing", "d": "8/2012"}, {"body": "already fixed master", "d": "8/2012"}, {"body": "fixed commit", "d": "8/2012"}, {"body": "tried emberlatest works emberlatest", "d": "8/2012"}, {"body": "hey mspisars issue occurs native running compatibility mode assuming using believe even forcing doc rendering continues use javascript engine", "d": "8/2012"}, {"body": "turns duplicate different enumeration order properties objects javascript spec states enumeration order unspecified modern browsers always declaration order loop iterates bindings different order due ember sensitive binding order example nt working", "d": "8/2012"}, {"body": "best guess kselden thing", "d": "8/2012"}, {"body": "peterjm probably right duplicate since connection nonobvious leave one open well whenever one fixed check", "d": "8/2012"}, {"body": "github makes super easy especially documentation go click edit", "d": "8/2012"}, {"body": "thanks easy indeed made pr closing issue", "d": "8/2012"}, {"body": "hey snickell patched recompile ember fix patch commit", "d": "8/2012"}, {"body": "nice", "d": "8/2012"}, {"body": "could create jsfiddle us", "d": "8/2012"}, {"body": "code fiddle", "d": "8/2012"}, {"body": "pieces appinitialize function properly", "d": "8/2012"}, {"body": "woah intended behavior think put documentation like preamble minimal application something like app emapplicationcreate models views controllers declarationscreation bootstrapreadiness stuff appapplicationcontroller emcontrollerextend appapplicationview emviewextend templatename application approuter emrouterextend root emrouteextend appinitialize root template trek kselden think dansondergaard could post answer including second jsfiddle given kselden", "d": "8/2012"}, {"body": "yes post agree documented much clearer coming serverside web frameworks already enough things seem confusing spent two days trying figure would nice documentation precise things like thanks", "d": "8/2012"}, {"body": "style application became available release weeks ago really need console errors guide rest missing parts said think pr issue application documentation already updating starter kit include minimal example correct app style right still involves manually inserting views wonky", "d": "8/2012"}, {"body": "nt really see console errors help nt offer links documentation concrete advice without expert nt even make sense much welcome improved documentation starter kit really help newcomers get started ember", "d": "8/2012"}, {"body": "specific errors seeing suspect get complain missing applicationview", "d": "8/2012"}, {"body": "trek errors got described questions summarize uncaught error perform operations metamorph dom first click view something caused view rerender rendered inserted dom avoidable cause significant performance issues applications behavior deprecated want use debugger find caused set envraiseondeprecation true understand first error complains missing applicationview would never guessed", "d": "8/2012"}, {"body": "trek look second fiddle kris added three lines set template name application works well", "d": "8/2012"}, {"body": "referring console error guidance get providing minimal missing required properties like inform missing parts looks like recent commit causing error reach points", "d": "8/2012"}, {"body": "trek oh ok sorry aware error messages believe yet implemented anyway right seems commit something could displayed fact think commit tomhuda loading ember investigated", "d": "8/2012"}, {"body": "trek give router get warnings see fiddle action helper longer works without breaks anonymous template renders twice top eachother one actually dom view instances think dom", "d": "8/2012"}, {"body": "need fix anonymous template interaction make another minimal fiddle starting point works", "d": "8/2012"}, {"body": "", "d": "8/2012"}, {"body": "believe expected behavior content property arraycontroller must arraylike object", "d": "8/2012"}, {"body": "lukemelia nt realize set passed makes sense though think", "d": "8/2012"}, {"body": "might want warn attempting set something arraylike objects able add array observers seems like wrong failure point report back", "d": "8/2012"}, {"body": "version ember use", "d": "8/2012"}, {"body": "make fiddle us", "d": "8/2012"}, {"body": "suspect error related bug modifying behavior view see commit", "d": "8/2012"}, {"body": "indeed due behavior view version", "d": "8/2012"}, {"body": "ok could try emberlatest close issue work", "d": "8/2012"}, {"body": "work indeed sorry tried emberlatest thank", "d": "8/2012"}, {"body": "problem close issue", "d": "8/2012"}, {"body": "answered", "d": "8/2012"}, {"body": "willrjmarshall curiosity materials using learn ember trying track outdated writing asking authors kindly update least notify readers", "d": "8/2012"}, {"body": "trek definitely usefull help cleanup", "d": "8/2012"}, {"body": "looks like answered", "d": "8/2012"}, {"body": "nt writing blog authors good idea sure approach big user", "d": "8/2012"}, {"body": "fine look outdated questionsanswers either try modify ask deletion doubt would good thing post issues linking question better approach feedback ember team", "d": "8/2012"}, {"body": "could tweet emberjs trek", "d": "8/2012"}, {"body": "ok thanks", "d": "8/2012"}, {"body": "reading documentation page main emberjs website", "d": "8/2012"}, {"body": "yes contact people tell writing way date", "d": "8/2012"}, {"body": "one issue preventing ember working runtimeonly handlebars moment emberselect defaulttemplate inline handlebars comment line use handlebars runtimeonly", "d": "8/2012"}, {"body": "thanks lot ideas make known ember helpers work use helper example get following error error could find property action", "d": "8/2012"}, {"body": "ermakovich unrelated ticket probably good question ask stack overflow code example jsfiddle", "d": "8/2012"}, {"body": "could post jsfiddle illustrate", "d": "8/2012"}, {"body": "works work embercurrent ps click x trigger action", "d": "8/2012"}, {"body": "think finally found happened since commit version jquery update fiddle works wagenet peter mean ember compatible jquery", "d": "8/2012"}, {"body": "look carefully see commit still runs tests well default", "d": "8/2012"}, {"body": "upgrading work", "d": "8/2012"}, {"body": "nt know done apologize played fiddle multiple ember builds seemed work try continue investigate", "d": "8/2012"}, {"body": "well smart search seems commit breaks things see nt work one commit behind works going little seems since problematic commit calling appinitialize makes job working going put comment commit reading tomhuda commit comment think explicit see", "d": "8/2012"}, {"body": "looks like probably documentation issue", "d": "8/2012"}, {"body": "actual issue work uninitialized apps", "d": "8/2012"}, {"body": "yep see different fiddle think generally uninitialized apps nt work wycats tomdale right", "d": "8/2012"}, {"body": "closing issue solution call initialize", "d": "8/2012"}, {"body": "correct must call application sets required instances applications become ready asynchronously case running needed ready indexeddb started routing", "d": "8/2012"}, {"body": "nt think ever considered adding routes router fact less bug question whether want support feature", "d": "8/2012"}, {"body": "right bug feature supported allow larger apps break apart routing code eventually people going start", "d": "8/2012"}, {"body": "bug", "d": "8/2012"}, {"body": "thumbsup", "d": "8/2012"}, {"body": "committed emberjswebsite issue closed cc wagenet", "d": "8/2012"}, {"body": "want defined init method forget call see works well", "d": "8/2012"}, {"body": "issue could solved hint thanks lot issue also related issue", "d": "8/2012"}, {"body": "closing favor includes pr", "d": "8/2012"}, {"body": "definitely expected take look monday unless someone gets kselden might know top head causing", "d": "8/2012"}, {"body": "template outputs class attributes jquery brings dom removes latter merge binding updates attribute dom want static class bound class need put static class bindattr helper", "d": "8/2012"}, {"body": "oh totally missed already class attribute paragraphs", "d": "8/2012"}, {"body": "excellent thanks help stumped trek glowacki notifications githubcom emberjsemberjs emberjs noreplygithubcom cc jim archtitionercom sent sunday august subject emberjs template binding attributes application starts oh totally missed already class attribute paragraphs reply email directly view github", "d": "8/2012"}, {"body": "", "d": "8/2012"}, {"body": "emberviewdidinsertelement implements functionality", "d": "8/2012"}, {"body": "duplicate", "d": "8/2012"}, {"body": "mattkime didinsertelement triggered view never elements helpers", "d": "8/2012"}, {"body": "saying want child view inside", "d": "8/2012"}, {"body": "right get need either implement use helper seems fallen disuse reason suspected addressed behavior available", "d": "8/2012"}, {"body": "closing since trek provided solution", "d": "8/2012"}, {"body": "could make assert signature emberassert could find route path rootindex state", "d": "8/2012"}, {"body": "conditional within easily strip asserts production another option allowing take function could use show anywhere actually significant impact obviously faster without fmt micro benchmark nt help show real world differences", "d": "8/2012"}, {"body": "nt seen cause impact yet nt really tested concern types conventions really start add flex something similar dispatched events whenever property changed even event listeners making conditional like emberassert example significantly improved rendering performance went choppy smooth complex animations emberassert optimization small think good include nt require extra work api almost ways passing function nt ideal well goal would minimize number unnecessary objects created", "d": "8/2012"}, {"body": "except first way nt nearly easy code strip honestly since code development production nt think worth worrying", "d": "8/2012"}, {"body": "closing since affects development concerned performance use production build", "d": "8/2012"}, {"body": "thoughts", "d": "8/2012"}, {"body": "kselden ran issue definitely bug look deeply fix next day two", "d": "8/2012"}, {"body": "lukemelia status", "d": "8/2012"}, {"body": "thought bug delayed routing related replacing already stashed context call routepath replace context changed case nested routes transitionto loading took back root calling routepath viatropos explain use case would need serialized meta connectoutlets", "d": "8/2012"}, {"body": "wagenet nt bug suggestion needs clarity use case", "d": "8/2012"}, {"body": "thank reporting issue seem several factors play first templates ember normally look properties controller case would structure application like javascript myapp emberapplicationcreate myappoutercontroller embercontrollerextend firstview emberviewextend classnames acustomviewclassasproperty secondview emberviewextend classnames extrainner thirdview emberviewextend classnames mostinward myappouterview emberviewextend templatename test controller myappoutercontrollercreate myappouterviewcreate appendto body specify controller view view hierarchy nt specify controller view inherit controller parent view see working fork jsfiddle note ember application uses router render views router automatically hook controller view rendering secondly oversight part caused toplevel view look properties old fallback behavior uses view lookup context controller specified mistake changed controller specified template null lookup context lookup worked toplevel see confused nt work subsequent levels finally documentation template scopes works ember see emberjs view layer guide guide intended experienced users beginners intermediate users using controllers lookup paths however primary introductory documentation explain well see confused", "d": "8/2012"}, {"body": "yehuda thanks excellent response seriously studying framework weeks guess understand controllers conceptually slow really pick controllers practically integrated application designs mistake believe assuming view hierarchy definition js ought match representation dom ie tree root less reading containerview docs particular reinforced assumption suppose counterassumption view example takes much appreciated way flat better nested thing preventing arriving solution clear failure understand properties would looked controller one factors hesitation really explore viewcontroller interactions uncertainty level supported controller property views would benefit verbose documentation factor rests general vagueness role controllers within framework large think understand necessitates vagueness controllers may generally home business logic functionality vary wildly domain controllers glue holds various parts application together design changes happen rest framework eg router becomes native role controller going change perhaps ways find use makes controllers sort moving target front moving target would waste time commit much documentation early want say think got good thing going routing concept exceptionally beautiful extremely fun hack problems young framework frustrating newcomer sometimes simplicity solutions emerge finally line conventions straight breathtaking hope share interesting stuff community soon best trevor thu aug pm yehuda katz notifications githubcomwrote thank reporting issue seem several factors play first templates ember normally look properties controller case would structure application like myapp emberapplicationcreate myappoutercontroller embercontrollerextend firstview emberviewextend classnames acustomviewclassasproperty secondview emberviewextend classnames extrainner thirdview emberviewextend classnames mostinward myappouterview emberviewextend templatename test controller myappoutercontrollercreate myappouterviewcreate appendto body specify controller view view hierarchy nt specify controller view inherit controller parent view see working fork jsfiddle note ember application uses router render views router automatically hook controller view rendering secondly oversight part caused toplevel view look properties old fallback behavior uses view lookup context controller specified mistake changed controller specified template null lookup context lookup worked toplevel see confused nt work subsequent levels finally documentation template scopes view works ember see emberjs view layer guide intended experienced users beginners intermediate users using controllers lookup paths however primary introductory documentation explain well see confused reply email directly view github", "d": "8/2012"}, {"body": "seems ca nt redirectsto transitionto intermiediate route understand chapter adding nested routes router beeing said perhaps would helpful receive warn", "d": "8/2012"}, {"body": "understand transitionto intermediate route always transitioned leaf route documentation section stated comment code sample states application loaded thebaserouteforthisset router transition route path rootaroute transition state indexsubroute means parent state loaded navigate hierarchy leaf state located", "d": "8/2012"}, {"body": "application loaded thebaserouteforthisset means url enter example case think works expected try see correct router logging fiddle entering explicitly tell router redirects intermiediate route forbidden put stateaindex redirectsto property works well", "d": "8/2012"}, {"body": "specifying full path work means another state needs know intricacies states sub states violation state machine design states parent state child states one default state allows parent state navigate child states default leaf state found far understand ember related state machine state path default state means ember state machine navigate default states leaf state found", "d": "8/2012"}, {"body": "understand saying want give user possibility call transitionto intermediate state", "d": "8/2012"}, {"body": "effectively yes understanding intermediary state state machine stop allow work level super state abstracted away super states sub states way routing worked version ember", "d": "8/2012"}, {"body": "ghensberg think might confusing router ability enter application particular state transitioning states response use interaction application loaded thebaserouteforthisset router transition route path rootaroute transition state indexsubroute means parent state loaded navigate hierarchy leaf state located occurs url routing ability routers knows actual value knows exact state transition seen people use initialstate property states transition comes interaction rather app entry nt know works intentionally pleasant sideeffect wycats could probably tell us intentional remain part api document", "d": "8/2012"}, {"body": "trek wycats understand state machines ember router router hierarchical state machine transition composite state implies transition associated default leaf state composite state behaviour important crucial part abstraction mechanism provided hierarchical state machines say possible model system varying levels abstraction state chart forced work lowest level abstraction always consider leaf states ember router actually comply respect displays correct behaviour used isolation words router initialised appinitialize works per sample work correctly example see router go leaf state even though specified super state fails used context app stops composite states example example see router go leaf state specifying super state believe two approaches intended behave differently", "d": "8/2012"}, {"body": "agree important know wycats tomdale looking router internal rewrite general patterns worked", "d": "8/2012"}, {"body": "want echo ghensberg sentiment new user ember router particular spent last days bangig head agains wall impression docs router would automatically move default leaf state", "d": "8/2012"}, {"body": "could point docs found information default leaf states important correct", "d": "8/2012"}, {"body": "fix issue setting might want consider defaulting whatever substate route", "d": "8/2012"}, {"body": "wagenet see neither doc neither code reference property defined hack public property", "d": "8/2012"}, {"body": "think typo tested using property", "d": "8/2012"}, {"body": "ok work", "d": "8/2012"}, {"body": "yes specified property router goes specified state", "d": "8/2012"}, {"body": "fine good know thx could defaulted route even better", "d": "8/2012"}, {"body": "absolutely agree defaulting route would definitely make router complete", "d": "8/2012"}, {"body": "mentioned think got missed general ramble p wagenet suspected intentional nt sure nt want document behavior regress later versions pr today push edge docs", "d": "8/2012"}, {"body": "trek oh yes sorry days much memory stack reading comment days ago didnt realize property could used state believed root state really apologize missing", "d": "8/2012"}, {"body": "state considered private nt meant observable events", "d": "8/2012"}, {"body": "side note say well written public app would helpful many people", "d": "8/2012"}, {"body": "using filtersforeach function", "d": "8/2012"}, {"body": "shorthand loop perform well subtle differences modern browsers mark meta property enumerable generally think reasons stated good idea enumerate arrays way", "d": "8/2012"}, {"body": "actually dealing object literals arrays case nt work suggestions get around nt support could fall back also optimal solution gets messy decreases readability", "d": "8/2012"}, {"body": "although using appear working perhaps could use existing browser check ie use following", "d": "8/2012"}, {"body": "tracing bit target specifically platformdefineproperty odefineproperty obj guidkey guiddesc emberplatformdefineproperty platformdefineproperty perhaps could peer js shim get enumerable false working", "d": "8/2012"}, {"body": "proposed solution would add following platformdefineproperty also want override hasownproperty isenumerable", "d": "8/2012"}, {"body": "propose temporary fix following object literal iterations javascript var filters appstatecontrollergetpath contentfilters filters filtershasownproperty iindexof ember continue app literally freezing crashing without implementing check across board", "d": "8/2012"}, {"body": "nt think likely spend much development effort said would consider accepting pr", "d": "8/2012"}, {"body": "", "d": "8/2012"}, {"body": "error supposed mean something wrong however seen many cases everything appears done properly", "d": "8/2012"}, {"body": "problem warning appear execution totally broken indeed go close word got following error uncaught typeerror read property handler undefined interrestingly jsfiddle removed statement bindattr class innerviewopen thisexplodes didnt understand error disappear even problem hope understand going", "d": "8/2012"}, {"body": "yes bit contrived case run irl", "d": "8/2012"}, {"body": "deprecation red herring issue bug scheduling issue updating bound helper bound attribute helper", "d": "8/2012"}, {"body": "deprecation trying warn causing rendering become invalid rendering inserted dom deprecated case rerender messing update action attr observer", "d": "8/2012"}, {"body": "kselden thanks explanation seems tricky fix issue", "d": "8/2012"}, {"body": "bindattr within explanation really useful explained several deprecated messages project agreed ember bug", "d": "8/2012"}, {"body": "also seen similar problem switching fixes problem", "d": "8/2012"}, {"body": "think depends particular case scenario maybe something configurable state definitely tackling issue chrome osx even gets weirder elastic scrolling sometimes whole chunk content disappears suddenly outside viewport something fixed chrome anyway", "d": "8/2012"}, {"body": "configurable", "d": "8/2012"}, {"body": "thinking bit im even sure makes sense core various ways achieving fairly easy", "d": "8/2012"}, {"body": "digitaltoad would extending router adding logic funcions also thought observing main outlet moving top changing", "d": "8/2012"}, {"body": "nt think makes sense core easy enough implement problem router state page", "d": "8/2012"}, {"body": "josepjaume one way observe hash url state changes assume change scroll top", "d": "8/2012"}, {"body": "ie use hash location", "d": "8/2012"}, {"body": "historyjs nt support pushstate either", "d": "8/2012"}, {"body": "using current app", "d": "8/2012"}, {"body": "tchak nice thanks code going emberjs framework wycats okay nice know impression since said cross browser thx could nice fallback something like tchak put together", "d": "8/2012"}, {"body": "moved guid key initialization initmixins ca nt actually think anything applying mixin would create guid initialization regardless still see error look stack frame make sure calling constructor function calling without thing think would cause", "d": "8/2012"}, {"body": "pr merged weeks ago offers solution problem take advantage need make result deserialize method implement promises pattern", "d": "8/2012"}, {"body": "sorry issue look nt fine things make example ca nt fine thanks", "d": "8/2012"}, {"body": "need help please may create fiddle thanks", "d": "8/2012"}, {"body": "finally get page loading router goes state loading defined state router created view loading whith ajax loader gif work ok good job wagenet", "d": "8/2012"}, {"body": "post fiddle example ca nt make works thanks", "d": "8/2012"}, {"body": "worked perfectly thanks sharing code", "d": "8/2012"}, {"body": "wagenet say whether solution intende usage feel like object implements could return object jquerydeferred objects", "d": "8/2012"}, {"body": "turn jsfiddle easier debugging end", "d": "8/2012"}, {"body": "hear modifications thanks much", "d": "8/2012"}, {"body": "fiddle run useful try basing", "d": "8/2012"}, {"body": "simplified code bit works hope help", "d": "8/2012"}, {"body": "verified url four dynamic slugs matched route pattern three dynamic slugs sure fix", "d": "8/2012"}, {"body": "nt seem related history location also apparent using hash location", "d": "8/2012"}, {"body": "ah ok hard time narrowing huge source base apparently nt go far enough", "d": "8/2012"}, {"body": "pretty sure related bug already fixed master mistaken let know reopen", "d": "8/2012"}, {"body": "search inside emberdata find similar functionality exists project", "d": "8/2012"}, {"body": "trek search inside emberdata dirty find similar functionality exists project good point using rest interface data using something like nodeio signalr practical use tightly coupled ember data need perhaps look creating nodeio signalr adapter", "d": "8/2012"}, {"body": "concept state part associations transactions whether using provided write case yeah want write custom adapter load data persistance layer store included adapters give hint need beef documentation", "d": "8/2012"}, {"body": "seems implicit context passing longer supported solved specifying context explicitly", "d": "8/2012"}, {"body": "look although rooturl part aware", "d": "8/2012"}, {"body": "definitely kind issue although able reproduce stacking rooturl know said getting demo code current project would hard way setup simple example test would greatly appreciated", "d": "8/2012"}, {"body": "yep bug already opened corrected master", "d": "8/2012"}, {"body": "fixed sure happened", "d": "8/2012"}, {"body": "views generally property controllers generally property points router event handler able view", "d": "8/2012"}, {"body": "sure really change newobj changing properties mean example var newobj b b c c trigger", "d": "8/2012"}, {"body": "cballou use setting existing object nt register change since object still object", "d": "8/2012"}, {"body": "hey wagenet get clarification creation new object parameters different values qualifies object curious case generating brand new object overwrite existing one essentially merge existing one new values override necessary params saving entirety newly created object", "d": "8/2012"}, {"body": "cballou possible put together fiddle demonstrate problem remove ambiguity reopen ticket", "d": "8/2012"}, {"body": "could create jsfiddle please perhaps bug due modification jquery object element found return undefined instead empty element commit talking wagenet confirm", "d": "8/2012"}, {"body": "getting error one commits sould culprit commits everything worked fine havent narrowed app quite big nt time make fiddle", "d": "8/2012"}, {"body": "bug due change confirm change code works", "d": "8/2012"}, {"body": "returning undefined app tried make fiddle reproduce issue lot success afraid spend time trying get working raila renajohn mentioned nt help solve issue", "d": "8/2012"}, {"body": "charlieridley suppose return undefined view yet dom didinsertelement", "d": "8/2012"}, {"body": "renajohn ah ok say means fix would changing line", "d": "8/2012"}, {"body": "sure returns array anymore think check let dig code commit looking", "d": "8/2012"}, {"body": "renajohn ok thanks help works fixed", "d": "8/2012"}, {"body": "one pulling hair confirm works thanks sorting", "d": "8/2012"}, {"body": "fixed master upload new emberlatest", "d": "8/2012"}, {"body": "bug release think could good thing update believe many people try use version", "d": "8/2012"}, {"body": "yes probably another prerelease made sure nt major bugs", "d": "8/2012"}, {"body": "ok problem us always master used emberrails hope wiill much update users release", "d": "8/2012"}, {"body": "fixed thanks future send prs", "d": "8/2012"}, {"body": "test case links directly emberlatestjs github warning cause crash safari firefox system chrome handles without crashing", "d": "8/2012"}, {"body": "fixed thanks pointing", "d": "8/2012"}, {"body": "sort information would want provide", "d": "8/2012"}, {"body": "currently something like described passing along containing templatename", "d": "8/2012"}, {"body": "use case definitely nt think want bubble maybe could provide another solution compelling use", "d": "8/2012"}, {"body": "first time slapping something together jsfiddle gentle less agree bubbling didinsertelement great solution manner postdomsynced hook edit amazing response time way", "d": "8/2012"}, {"body": "could better make items custom", "d": "8/2012"}, {"body": "well source digging ca nt really come truly viable solution creating event childview dom changes finished show closest thing found accomplish job using basically let run loop timing edit kselden beat still sorting source suppose scheduling render would probably better solution go ahead close people come shame ignorance", "d": "8/2012"}, {"body": "fiddle us isolated example", "d": "8/2012"}, {"body": "gingman using chance known issue", "d": "8/2012"}, {"body": "tried creating jsfiddle could nt reproduce difference fiddle application using helper inside template application removed use helper application worked ie quirks mode tried adding helper fiddle bug happen little bit lost fiddle similar issue believe close unless idea could gone wrong described thank", "d": "8/2012"}, {"body": "gingman recheck latest build", "d": "8/2012"}, {"body": "tested fiddle ie ie without compatibility difference fiddle jquery version displayname helper neither working going close", "d": "8/2012"}, {"body": "related question answered could please close issue", "d": "8/2012"}, {"body": "leave commas", "d": "8/2012"}, {"body": "looks like answered", "d": "8/2012"}, {"body": "nt think specific interest supporting jquery mobile way however interest refactoring select view may helpful want get working current state make view instead using", "d": "8/2012"}, {"body": "point toward info mentioned refactor may interested pitching", "d": "8/2012"}, {"body": "iirc kselden ebryn talked", "d": "8/2012"}, {"body": "various gists custom select views like could tryadapt", "d": "8/2012"}, {"body": "could use multiple subdomains emberjscom stable subdomains previous unstable ie emberlatest edge eg docsedgeemberjscom vs docsemberjscom vs docspreviousemberjscom", "d": "8/2012"}, {"body": "status intermittently seeing using", "d": "8/2012"}, {"body": "fixed", "d": "8/2012"}, {"body": "issue using", "d": "8/2012"}, {"body": "wagenet still going reopen", "d": "8/2012"}, {"body": "whoops guess somehow missed reopening", "d": "8/2012"}, {"body": "also breaks rhino saying orgmozillajavascriptevaluatorexception missing name operator", "d": "8/2012"}, {"body": "cleaned view destroyed moved back prerender", "d": "8/2012"}, {"body": "bitten one well nt dug deep also seeing sync queued correctly", "d": "8/2012"}, {"body": "hi status issue", "d": "8/2012"}, {"body": "issue resolved removing id attribute model handled automatically ember regards ivan vanderbyl sent iphone pm sylvain mina notifications githubcom wrote hi status issue reply email directly view github", "d": "8/2012"}, {"body": "ok think different behavior anyway think could close issue", "d": "8/2012"}, {"body": "issue apply hack found make work specifically app works long nt reload starts putting null url hade problem since begun using ember june think yesterday upgraded still apply hack", "d": "8/2012"}, {"body": "wagenet ca nt href also lazy evaluated", "d": "8/2012"}, {"body": "guess theory could output attribute might odd behavior people click tag updates", "d": "8/2012"}, {"body": "think need generic injection mechanism would support injecting anything eg currentuser state managers etc seems like also need way signal classes nt injected", "d": "8/2012"}, {"body": "new action syntax concise case proxy could pass object proxy resp", "d": "8/2012"}, {"body": "seems fixed properly master", "d": "8/2012"}, {"body": "probably right place comment allowing transitions parent states seems limiting simple restish url structure might look like user page user post think fairly standard practice point would sort hack fake leaf state would preferable meaningless leaf nodes urls", "d": "8/2012"}, {"body": "need make state route enter targeted individually without event handlers applying children nt need view slash match url wanted", "d": "8/2012"}, {"body": "oh feel stupid trying sort assumed would end url double slashed seems work great thanks", "d": "8/2012"}, {"body": "also got hung pretty bad surprised behavior workaround works great though thanks tip", "d": "8/2012"}, {"body": "current workaround get dom render instantly", "d": "8/2012"}, {"body": "precise means handlebars templates wo nt compile document ready inbrowser compilation handy demos quick prototyping comes issues screen flash rather focus time good precompilers want production anyway", "d": "8/2012"}, {"body": "compilation process nt effect screen flash bc even compiling templates browser slow still blocking done render screen way dom ready event fires even precompiling templates white flash bc fact everything waits dom ready waits nextticksettimeout callback", "d": "8/2012"}, {"body": "hey guys thanks help reworked case thus problem solved", "d": "8/2012"}, {"body": "blocker use sortablemixin arraycontroller sortproperties heavy modifications array", "d": "8/2012"}, {"body": "nt deprecate collection please fix context itemviewclass templates itemviewclass controller took noticed viewtitle instead title", "d": "8/2012"}, {"body": "wagenet still interest fixing come patch", "d": "8/2012"}, {"body": "txominpelu yes think still like send pr", "d": "8/2012"}, {"body": "wagenet also problem would best solution", "d": "8/2012"}, {"body": "using ember jquery mobile nt suffer issue sure might worth digging jqm source", "d": "8/2012"}, {"body": "ios problem event delegation pattern working fiddle simple solutions", "d": "8/2012"}, {"body": "little explanation click synthesized element contained element default click behavior anchor href button click handler including body styled cursor pointer also body tag element delegate click events without clickable going bad time make rootelement emberapplication element body also subtle issue using touchend trigger actions since ios browser synthesize click event later deliver element area even nt original element touchend plain tag href cause navigate say list links acted touchend render detail view detail view link google maps rendered place link list view would cause link followed selected list item google calls ghost click paper", "d": "8/2012"}, {"body": "hacked around anyone facing issue especially using emberdata associations adding property one side association checks property end association case isloaded using said hack works", "d": "8/2012"}, {"body": "tpitale could show example hack sure mean adding property side association kselden wagenet encountered something similar recently frankly sure bug could take look fiddle", "d": "8/2012"}, {"body": "drogus given original example would nestisdone property path nestisdone could observe", "d": "8/2012"}, {"body": "realize long time ago interested know currently situation create two new view subclasses workaround change sure specialized case bind one attribute class binding one nt see problem cases encountered ever needed one attribute class binding requiring addition new subclass opinion additional unnecessary work subclass decouples intent logical context making harder find logic maintaining application", "d": "8/2012"}]