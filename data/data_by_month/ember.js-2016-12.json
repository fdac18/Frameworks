[{"title": "unable assign dom attribute ember textarea component instances", "body": "seeing according docs able specify attribute applies ember textarea component instances following snippet corresponding integration test fails makes sense documentation needs reflect proper snippet correct way acheive behavior ember need use", "num": "14766", "d": "12/2016"}, {"title": "route paramsfor nt proper params deeply nested routes", "body": "screenshot summarizes issue better words scenario returns default values query params however correct values backed boiled ember twiddle issue seems either related deeply nested routes", "num": "14759", "d": "12/2016"}, {"title": "htmlbarscompile working ember", "body": "ember return ember return therefore make new component string template like embercomponentextend template htmlbarscompile stringtemplate container create appendto target", "num": "14758", "d": "12/2016"}, {"title": "include vendorapp cssjs inside indexhtml", "body": "hi know statements like wonder servingbuilding import target script inline rather pointing external file speed loading little also avoid abovethefold problem google pagespeed insights reports even without using fastboot thanks", "num": "14757", "d": "12/2016"}, {"title": "deprecate", "body": "questions many apps use perhaps deprecate rfc ca nt deprecate disable default make optin use cases custom suggest alternative solutions", "num": "14754", "d": "12/2016"}, {"title": "glimmer ember svg elements dynamic attribute fail render", "body": "replicated twiddle eerily similar inner element attempting render content separate svg either document somewhere else file system content wo nt render attribute computed dynamically shown demo though hardcoding value attribute works fine even curiously inspecting dom shows difference final markup directly twiddle errors thrown console either hunch admit familiar glimmer internals something fundamentally different state dom markup dynamicallycomputed attribute generated", "num": "14752", "d": "12/2016"}, {"title": "components computed tagname throw error trying render", "body": "computed property seems break recent ember versions later something like export default embercomponentextend isbutton true tagname embercomputed isbutton function return thisget isbutton button throws demonstrated embertwiddle digging looks like passed render instead computed string value tag name", "num": "14749", "d": "12/2016"}, {"title": "changes closure actions inputs longer propagate change action value", "body": "ember prior following template changed value would receive update meaning would called observers would execute computeds depending would invalidate ember longer happens guessing result fix twiddle clicking button updates action input triggers alert ember nt update use", "num": "14748", "d": "12/2016"}, {"title": "regression setter throws error object undefined", "body": "worked fine weird thing main project getting error productions build", "num": "14747", "d": "12/2016"}, {"title": "deprecate", "body": "rfc deprecate emberk merged pretty simple task implement one perfect new contributor perform since technically complex balanced documentation implementation tasks perform divided couple repositories x read rfc understand motivation outcome x amend deprecations guide website reporsitory information deprecation id explanation entry must explain automatically remove usages codebase using emberwatson must also explain two options command second compatible first probably want check addendum rfc information x create pr emberjs itselt deprecating stated previous point id deprecation must must point entry deprecation guide created familiar deprecations made good example id url used anyone wants go deprecate provide support guidance process feel free ping slack anytime", "num": "14746", "d": "12/2016"}, {"title": "jsonapiadapter sends fields patch", "body": "sure reporting appologies incorrect began using json api adapter app compliant backend running smooth issue found update property model see properties model sent server patch request understanding limited properties changed require update", "num": "14744", "d": "12/2016"}, {"title": "decamelize behaves incorrectly numbers", "body": "observe ember decamelize uses following regex azd az g probably additional end actually would work either", "num": "14743", "d": "12/2016"}, {"title": "work commented", "body": "commented followed javascript let controller emberarrayproxycreate content embermakearray controller controller true however true seems using handle arraylike object", "num": "14741", "d": "12/2016"}, {"title": "fail ember build", "body": "run command receive following error warning node currently tested ember cli may result unexpected behaviour could start watchman falling back nodewatcher file system events visit info cleaning build failed broccoli plugin sourcemapconcat concat vendor assetsvendorjs failed error enoent file directory stat broccoli plugin instantiated concatplugin concatcachingwriter constructor new concat moduleexports emberappconcatfiles emberappconcatfiles emberappjavascript emberapptoarray emberapptotree moduleexports npm bower installed run command", "num": "14740", "d": "12/2016"}, {"title": "glimmer read properties functions", "body": "encountered upgrading project uses ember trying bind properties scales twiddle change ember version twiddle property renders expected pr failing test", "num": "14739", "d": "12/2016"}, {"title": "convert object primitive value", "body": "similar reproduction ember addons critical ingredient seems taking object created helper putting inside passing array another component array hits causes exception hitting first place support assertion", "num": "14738", "d": "12/2016"}, {"title": "required input immediately marked invalid firefox ember", "body": "seems regression ember regards required input fields firefox input field immediately marked invalid showing red border around field case ember field marked invalid trying submit form field empty created ember twiddle reproduce", "num": "14737", "d": "12/2016"}, {"title": "emberjs input checkbox runs deplication error", "body": "got error modified inside didinsertelement hook click checkbox inside schedulerevalidate function thisenvrenderednodeshas node false manualrerender undefined thisdispatching didinsertelement makes always run deprecation issue try remove didinsertelement hook project nt help could please take look please let know need information stacktrace", "num": "14735", "d": "12/2016"}, {"title": "nt available module initialization", "body": "part currently embermetallibmetajs try use point default empty function meaning code never run even debug mode constructor later use function emberdebuglibindexjs set", "num": "14732", "d": "12/2016"}, {"title": "click helper makes tests failing", "body": "upgrading ember cli embercliqunit acceptence tests thats use helper throwing weird error skip everything works like expected import test qunit import moduleforacceptance apptestshelpersmoduleforacceptance moduleforacceptance acceptance posts test visiting loggain function assert visit posts click btn function assertok true works assertion final resolved ms source assertok isolate trycatch invokecallback publish works", "num": "14730", "d": "12/2016"}, {"title": "textfield component file type setting safari", "body": "ember version gt safari version tested reproducible every time issue rendering multiple textfield components page first type allowed page set test element type property successfully returns however type actually nt alter value property problem line possible solution lowering scope inputtypetestelement inside method resolves problem assume scoped performance reasons", "num": "14727", "d": "12/2016"}, {"title": "memory leaks emberjs openlayers", "body": "ran strange memory leaks using openlayers emberjs application certain conditions browsers unable release memory torn maps even full tab reload please refer repository information minimal example demonstrates behavior unable determine reason problems created issues link issue", "num": "14726", "d": "12/2016"}, {"title": "changed eachbehaviour indexed arrays", "body": "hey noticed ember introduces changed behaviour looping indexed arrays unset indexes let assume array hbs produces produces also made twiddle", "num": "14725", "d": "12/2016"}, {"title": "custom tostring needs work emberobject subclasses computed properties", "body": "hi creating custom object extends need override barfs object spews however want add computed properties set array property according stefanpenner explained custom tostring seems break ember computed properties wo nt notify changes properly either need fix properly stringify custom objects need support custom without breaking computed properties advice thanks", "num": "14724", "d": "12/2016"}, {"title": "sinonusefaketimers acceptance tests break runlater used", "body": "use sinonusefaketimers acceptance test use runlater application causes acceptance test time reproduction", "num": "14722", "d": "12/2016"}, {"title": "aborting transition clears resolved model", "body": "abort transition go intermediate route model previous route exist although resolved see console log", "num": "14721", "d": "12/2016"}, {"title": "nonsingleton registered dependencies working expected components since ember", "body": "behaviour component factory caching inconsistent cache factories dynamic injections whereas js initializersappinitjs import ember ember var id export function initialize application applicationregister foo bar emberobjectextend id embercomputed function return id singleton false applicationinject component foo foo bar export default name appinit initialize mycomponenthbs id fooid templatesapplicationhbs mycomponent mycomponent mycomponent ember output id id id ember output id id id see ember twiddle failing test refactoring code uses pattern nt expect issue affect us fyi", "num": "14719", "d": "12/2016"}, {"title": "ember failing route lookup container", "body": "route lookup container like test leads following error worked ember least stable releases beta releases glimmer enabled ember throws mentioned error lookups controllers still working reproduced twiddle", "num": "14716", "d": "12/2016"}, {"title": "query params arrays turned strings routerefresh used", "body": "query params containing arrays turned strings called another query param changed time put link twiddle using animated gif see testing process first button sets param initial value value well represented url query string second button calls action executes method route receiving array param third button shows issue calling action first changes different query param executes method route receiving instead value filters", "num": "14715", "d": "12/2016"}, {"title": "outdated observableaddobserver documentation", "body": "documentation observableaddobserver seems outdated optional context parameter nt seem exist anymore callback two arguments sender key arguments nt passed callback", "num": "14714", "d": "12/2016"}, {"title": "ember setting component template property working anymore", "body": "passing template property component working anymore reproduce appcomponentsfoobarjs import ember ember import hbs htmlbarsinlineprecompile embercomponentextend template hbs appcomponentsfoobarhbs ember output ember output", "num": "14713", "d": "12/2016"}, {"title": "possible radio input issue glimmer", "body": "want share found little problem glimmer ie see strange things happening radio inputs value computed property value gets set ie something page changes deeper search ends ie setting value gets set guess rerender causing set radio causing value change normally fix setting value right type set sure yet case glimmer anyone knows tested ie searching see ff may also causing behaviour update jsbin showing bug run ie click radio button see value changing", "num": "14712", "d": "12/2016"}, {"title": "improve backtracking rerender assertion", "body": "backtracking rerender issues solve app interested improving assertions make easier others issue serve place capture discussion progress current assertion message example looks like would nice improve include information property originally consumed well mutated something like would nice aim thoughts chancancode might useful links embermetallibtransactionjs every time consume every time set", "num": "14709", "d": "12/2016"}, {"title": "bug release issue observerscomputed properties switching ember", "body": "using ember without issues switching ember started seeing issues issue seeing seems happening observer computed property destroyed component triggered route transition demonstrate issue created github repo steps used recreate issue clone repo ember js console open go click name person press like go page two press link go page one expected errors web browsers console result error console cheers", "num": "14708", "d": "12/2016"}, {"title": "emberrun api documentation examples", "body": "examples api documentation emberrun seem little sayhi enclosed quotes run method invoked directly", "num": "14706", "d": "12/2016"}, {"title": "ember component subfolder work", "body": "upgrading ember ca nt usualy use components subfolder notation modaltestone working happening ember see happening embertwiddle", "num": "14705", "d": "12/2016"}, {"title": "ember component isvisible property broke inline styles", "body": "upgrading ember behaviour components changed every change isvisible property except null true inline styles component cleared happening ember also problem clearly visible using standart helper textarea resize change isvisible size textarea back default see happening embertwiddle", "num": "14704", "d": "12/2016"}, {"title": "feature request queryparams issticky option", "body": "feature request controller property love see issticky query parameter rather use hook explicitly pass default value inconvenient link used many places adapted seems less complex mysterious currently recommended guide controllersarticlesjs import ember ember export default embercontrollerextend queryparams page filter showmagnifyingglass scope controller glass routesarticlesjs import ember ember export default emberrouteextend resetcontroller controller isexiting transition isexiting isexiting would false route model changing controllerset glass thanks much", "num": "14703", "d": "12/2016"}, {"title": "ember emberformfor ca nt add property object extensible", "body": "per martndemus via martndemusemberformfor trying throw together quick form emberformfor hitting snag probably bleeding edge model javascript import ds emberdata export default dsmodelextend displayname dsattr realname dsattr email dsattr comments dshasmany posts dshasmany route javascript import ember ember export default emberrouteextend model return thisget store createrecord author template hbs formfor model f ftextfield email requiredtrue ftextfield realname ftextfield displayname fsubmit sign formfor error line formfieldjs", "num": "14702", "d": "12/2016"}, {"title": "ember using pods structure cause helpers register render", "body": "using ember cli pods structure updating ember cause helpers work errors given nothing returned helper seems though ember looks components directory components downgrading back emberjs helpers worked expected issues", "num": "14699", "d": "12/2016"}, {"title": "copied safestring safestring anymore", "body": "twiddle described twiddle output safestring becomes normal object suggestions make safestring implements copyable make returns original safestring", "num": "14697", "d": "12/2016"}, {"title": "problem nested route multiple outlet rendertemplate", "body": "multiple template nested route problem render take look twiddle", "num": "14696", "d": "12/2016"}, {"title": "compatible version found embersource", "body": "looks like forgot upload npm", "num": "14694", "d": "12/2016"}, {"title": "api docs often missing since tags", "body": "api docs currently versioned meaning publish recent ones website makes hard users figure things available ember version use available yuidoc handy since tag purpose used indicate release something introduced shows already using places occurrences obviously covering api use often assume answer yes figure version something introduced git blame one option still takes quite bit effort follow locations method property might moved better way require future prs add functionality include tag cc locks", "num": "14692", "d": "12/2016"}, {"title": "ember graphql", "body": "hello working graphql client called greed nt open sourced yet frameworklibrary agnostic wanted create ember bindings want base bindings signature got working react vue js container greed defaults queries mutations component using decorator container greed defaults queries mutations somecomponent greed greedinstance greed instance want use defaults function default data component render queries function queries run user input occurs mutations function mutations run user input occurs component component component enhance container essentially enhances whatever component receives data needed render methods executed run queries mutations user input occurs application familiar ember get knee deep ember wanted tips feedback best way go implementing ember", "num": "14691", "d": "12/2016"}, {"title": "ember component never becomes visible set", "body": "method ember component set property display expected however change true later moment component become visible weird part set property component definition happen simple twiddle reproduction sure something wrong bug documentation really specific property observed first using ember think continued happening", "num": "14690", "d": "12/2016"}, {"title": "html comment brakes template compilation exists ember version", "body": "insert hbs got error like ember twiddle example quickly tested different version ember error ember ember also looks official spec comments says number dashes multiplication four", "num": "14688", "d": "12/2016"}, {"title": "lazyget nt check cache correctly", "body": "use checks value present true cases nt actually cached since cache cleared undefined though returning undefined effect descend wiring chain", "num": "14686", "d": "12/2016"}, {"title": "regression isvisible property undefined component", "body": "switching ember causes example render", "num": "14683", "d": "12/2016"}, {"title": "unable install embefire connect etimedout", "body": "configuration embercli node os x tried following commands npm install save emberfire ember install emberfire npm cache clean tried get following error every time try install emberfire connect etimedout one provide causing issue resolve", "num": "14680", "d": "12/2016"}, {"title": "ember instllation issue", "body": "could anyone please help finding issue tried install latest node npm yet still get issue node v npm v ember proxy amp command ember found mean command enber package universe ember command found", "num": "14679", "d": "12/2016"}, {"title": "minor upgrade pain change variable shadowing behavior glimmer", "body": "lowpriority issue feel free close helpful reporting minor source upgrade pain confusion upgrading ember worth documenting save others time problem worked broken fix works really fault using variable name template said looks like something changed glimmer stop blockscoped shadowing parent component", "num": "14678", "d": "12/2016"}, {"title": "rendering aliases break rendering cp dependent", "body": "update nt yield attrs order rendering ref consumption whether cp rendered ref consumed updated fiddle ember component yields property defined computedreadonly certain circumstances production builds ember downstream usage updated property changes worked krisselden created isolated reproduction issue reproduction demonstrates order attributes passed consuming component determines property fails update oo", "num": "14672", "d": "12/2016"}, {"title": "using component inside route template name", "body": "using component inside route template name got following error console example using pod structure generate appcomponentsaaabbbcomponentjs appcomponentsaaabbbtemplatehbs generate appaaabbbroutejs appaaabbbtemplatehbs add component aaabbb route template navigate cause error", "num": "14669", "d": "12/2016"}, {"title": "ember emptyobject nt provide hasownproperty", "body": "looks like oversight since every js object descended object provide method emptyobject could implement via object prototype", "num": "14668", "d": "12/2016"}, {"title": "add blueprints emberclimocha gt", "body": "introduced new testing api deprecated old helpers blueprints repository need updated reflect changes instead updating make sure uses versions get right blueprints accomplish checking installed version using versionchecker deciding whether use blueprints folder tracking issue", "num": "14667", "d": "12/2016"}, {"title": "ember calling willdestroyelement hooks unit tests returns undefined", "body": "upgrading ember component unit tests started breaking runs returning happening ember see happening embertwiddle", "num": "14666", "d": "12/2016"}, {"title": "ember bind list attribute input", "body": "expectation attribute bound input component result error thrown chrome example check fiddle works safari chrome", "num": "14665", "d": "12/2016"}, {"title": "edit field backtracking rerender deprecation lts", "body": "given going keep assertion glimmer release patches lts indicate deprecation go away behavior stop working", "num": "14663", "d": "12/2016"}, {"title": "convenience property current route", "body": "string property available globally relay current route path resource usable create breadcrumbsstyle visualizations routespecific sections templates although workarounds would great something readily accessible developers new emberjs edit found currentpath router might need changed please document feature request", "num": "14662", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "things going array prototype extensions enabled meaning methods added main prototype first arg passed frozen array twiddle calls since calls wrapped standard super wrapper function see super wrapper function sets next super function works since frozen object calling results error shown think needed case argument passed always native instance removing method calls fix twiddle see", "d": "12/2016"}, {"body": "cool solves current problem thanks issue though nativearray methods cause error passed array type correct assuming called get length passing helper would nt error method inside helper understand technically mutating seems like end developer", "d": "12/2016"}, {"body": "ember switched glimmer rendering engine try instead see problem", "d": "12/2016"}, {"body": "working outside tests embercli packagejs component import hbs htmlbarsinlineprecompile consolelog hbs gt hbs defined consolelog hbs stringtemplate gt broccoli build error hbs invoked single argument template string", "d": "12/2016"}, {"body": "use something like coffeescript owner embergetowner component embercomponentcreate layout emberhtmlbarscompile template renderer ownerlookup renderer dom embersetowner component owner componentsetproperties b componentappendto destination seems work even ember sure much though", "d": "12/2016"}, {"body": "read guidelines moving rfc repo closing sorry mess new issue", "d": "12/2016"}, {"body": "many apps use checked tomdale apparently originally added allow views differentiate certain types touch input however addon originally used embertouch deprecated favor hammerjs perhaps deprecate rfc yes absolutely deprecate ca nt deprecate disable default make optin think make paygo either way apps nt pay cost feature never use", "d": "12/2016"}, {"body": "todos x make payasyougo rwjblue x create rfc deprecate gavinjoyce x deprecate", "d": "12/2016"}, {"body": "briansipple write like", "d": "12/2016"}, {"body": "nightire correct work however nt necessary even going back nt see documentation quotes required bound attributes fact current documentation suggests opposite", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "deprecated", "d": "12/2016"}, {"body": "see good know luckily app easily refactored thanks", "d": "12/2016"}, {"body": "thanks tracking gavinjoyce", "d": "12/2016"}, {"body": "mixonic rwjblue legit would make things lazy amazing perhaps acceptable impression api contractboundrary produce function works", "d": "12/2016"}, {"body": "give little context uncovered single place relying old behavior change easy work around realized happening given one else reported since came suspect practical standpoint would nt big deal new behavior stayed reason filed though change seems odds mental model actions component properties happen functions helper sugar binding value possibly parameter values guides around actions seem shifting toward view things since closure actions first introduced thinking output bound version input function correct expect binding new value parameter new function produce observably different output value would helper implemented userland mental model though happy adjust move", "d": "12/2016"}, {"body": "prs please let know changes make", "d": "12/2016"}, {"body": "believe done thanks helped", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "ah ok close open new one", "d": "12/2016"}, {"body": "suspect pointing relative path said nt seem like bug rather question stack overflow please feel open cross link", "d": "12/2016"}, {"body": "think know fix vacation anyone wants look places include functions well believe probably needs glimmer fix ember fix cover cases", "d": "12/2016"}, {"body": "primitivereference", "d": "12/2016"}, {"body": "provide twiddle replication component use mixins", "d": "12/2016"}, {"body": "conditionally require bottom embermetallibindexjs", "d": "12/2016"}, {"body": "work around issue", "d": "12/2016"}, {"body": "issue basically using closure scope version setup see comments around example bit us past", "d": "12/2016"}, {"body": "solution refactor build actually replaced completely instead conditionally including based prodnonprod krisselden talked nt time shove finish line", "d": "12/2016"}, {"body": "might refactor test visiting loggain function assert visit posts click btn andthen function assertok true works need tell qunit wait promise resolve finishing test test visiting loggain function assert let done assertasync visit posts click btn function assertok true works done", "d": "12/2016"}, {"body": "ah thanks maybe docs updated explain need id use click promise", "d": "12/2016"}, {"body": "investigation problem isolated file types safari allow creating input type changing file", "d": "12/2016"}, {"body": "seems like bug second input nt work safari chrome firefox brave also odd switch order inputs file inputs works search input seem issue problem file input type", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "steps taken debug memory leak perhaps reach see anyone help debug need info determine whether bug implementation bug ember", "d": "12/2016"}, {"body": "tanks looking pointing ember community slack unable determine issue implementation application deconstructed application find minimal configuration still leads memory leak minimal example find initially used different browsers dev tools track root problem sadly unable get anything firefox turned able release seemingly leaked memory eventually makes disappear heap snapshots ie dev tools unsuitable analyze memory leak simply opening seems lead ie leaking memory matter page visit really startled happens page reload even possible implementation causes leak case could ie bug could find anything direction known memory leaks allegedly fixed updates", "d": "12/2016"}, {"body": "excuse wrong button nt mean close issue", "d": "12/2016"}, {"body": "map shows single vector layer contains linestring elements leak across tabs perhaps browserlevel inlineparse cache", "d": "12/2016"}, {"body": "really startled happens page reload even possible implementation causes leak case could ie bug could find anything direction known memory leaks allegedly fixed updates memory leaks full page reloads associated memory persistent place localstore cookie indexdb etc without doubt browser bug", "d": "12/2016"}, {"body": "thank considered possibility doubt firefox almost leaks well actually believed also leaked page reload released memory several reloads process already allocated several megabytes ram", "d": "12/2016"}, {"body": "mariowilde ya debugging types leaks vs process keeping memory around tad tricky said memory stays around post reload ember issue rather browser issue may solvable user space", "d": "12/2016"}, {"body": "runspired sorry late response somehow missed comment admittedly knowledge browser internals quite poor browser internal cache suspicion caches grow like map put emberless html document memory released instantly page reload", "d": "12/2016"}, {"body": "nt seem bug ember closing said qa continue", "d": "12/2016"}, {"body": "runspired leak across tabs perhaps browserlevel inlineparse cache nt want bug would mind explaining statement would really appreciate hint", "d": "12/2016"}, {"body": "suven seems like bug perhaps implementation changed using loop guess cat changedeachjs js foo bar lt alength consolelog aforeach function v consolelog v node changedeachjs", "d": "12/2016"}, {"body": "yup might guess forloops tempting perfomance mind first little remark although guess obvious also happens value accessed ie", "d": "12/2016"}, {"body": "confirm bugged also using instead temporary solves problem", "d": "12/2016"}, {"body": "issue performance reasons using standard loop support prior versions used natively support sparse arrays one reasons known performance issues intend support sparse arrays prior versions making changes support would negatively impact performance usages acceptable trade us document fact support sparse arrays api docs add test likely tweak shows current behavior intentional folks definitely need support recommend using someone else mentioned", "d": "12/2016"}, {"body": "joelpresence like idea supporting custom method able use custom tostring method emberobject sure custom break ember comment seems indicate problem using set properties using properties custom method one thing differently prototype extending redefined set default properties calling instead using example providing links may provide workaround", "d": "12/2016"}, {"body": "thanks pixelhandler frequently create custom objects use set properties often array properties class instances class share copy huge aliasing bug would override cases newbie ember user reluctant start using forth really want able make custom classes set properties preferably emit text like custom object ca nt look properties custom class unknown straightforward extension nt get keeps thinking unknown mixin unknown mixin get work custom objects extend thanks", "d": "12/2016"}, {"body": "think underlying issue assertion code eagerly invokes strange periods mid get cp initialization may break cp pretty sure fix although approach needs discussion", "d": "12/2016"}, {"body": "think issue backburner", "d": "12/2016"}, {"body": "think problem sinonusefaketimers modifying environment timers vm js kindofeverything depends settimeout put lot let run normal async mechanisms acceptance utilities like etc ps fixed twiddle hardcoding little bit", "d": "12/2016"}, {"body": "fixed twiddle taking date parameter", "d": "12/2016"}, {"body": "believe addressed although merged yesterday still needs make way ember", "d": "12/2016"}, {"body": "morhook putting date sinonusefaketimers kind defeats point use case datenow returns predictable value allowing acceptance tests use date pass regardless date", "d": "12/2016"}, {"body": "stefanpenner need pr backburner update", "d": "12/2016"}, {"body": "pixelhandler happy make followup pr ember necessary", "d": "12/2016"}, {"body": "sounds fair thanks explaining", "d": "12/2016"}, {"body": "locks possible model kept application route since setup controller never reached also changed ember version last two lts releases think behavior", "d": "12/2016"}, {"body": "pixelhandler case test easily writing empty nt call set see still returns", "d": "12/2016"}, {"body": "seeing issue since upgrading seems related glimmer issue present beta disappeared stable", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "assume aware double private p use cases using api", "d": "12/2016"}, {"body": "issue instantiating something gets injections provided instance instance created usually lives generally better use anyways since mirros owner api public api breadcrumbs whomever works fix general injection trail types get injected gets injected gets injected gets injected setup application instance fully booted testing get created first call therefore lookup route first visit give error moment unsure right way deal", "d": "12/2016"}, {"body": "known issue duplicate", "d": "12/2016"}, {"body": "closing duplicate thank", "d": "12/2016"}, {"body": "believe api actually using work reproduction twiddle", "d": "12/2016"}, {"body": "thank locks yes right template replaced layout anything passed property yielded anyway seems property removed fix rendering dynamic template inside component one use helper followed template name fixed issue think deprecation message added past versions removing property api indications removed thank please let know need reproduction", "d": "12/2016"}, {"body": "confirm also see ie windows", "d": "12/2016"}, {"body": "part aim include data meta debug mode use detect set already rendered property looking available context currently set nt appear easy access anything would allow us identify source template easy access parent object meta reference transaction context includes immediately clear get source template details ideas going explore calculate last dom node rendered reference able work containing view rendering template higher level within reference store additional data new meta key", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "reference setting also easy access transaction context somewhere within context opcode also uses reference gives us access includes pointers dom determine view dom belongs use better assertion message possible next steps determine transaction context last rendered opcode uses reference work cases eg helpers nested references map dom node template identifier", "d": "12/2016"}, {"body": "gavinjoyce another idea potentially use pair keep stack current component currently use component instrumentation think could work least tell component template causing issues ie enough information report first read reading later modified rendering probably need add instrumentation hooks glimmer want get granular", "d": "12/2016"}, {"body": "chancancode thanks created quick spike using global track last rendered component works pretty well app modified twice single render unreliable slow ember longer supported see details assertion failed rendered modified single render unreliable slow ember longer supported see details next steps x also track route templates x tests implementation", "d": "12/2016"}, {"body": "thanks heaps mr joyce gavinjoyce", "d": "12/2016"}, {"body": "krisselden appears issue trying install chain watcher destroyed object tried canary well saw error", "d": "12/2016"}, {"body": "ember way destroyed objects meta handled changed lt object destroyed meta removed setting caused number issues would recreate meta destroyed object mark object meta destroyed keep around preventing wasteful work normal object destruction allowing things like get cp continue function properly change made added assertions prevent us changingmutating meta object destroyed seems case mostly background info try dig reproduction bit back family vacation tues", "d": "12/2016"}, {"body": "ok minutes play curious think bug ember case singleton controller state biting basic summary happening visit hook b query triggers application serializer fire contains destroys existing instances type question click name person action sets current controllers internal singleton state b display persons name template therefore add watcher ensure rerender needed click link pointing hook b causes serializer call code fired visit click link goes back attempt render persons name stashed however object destroyed serializer b boom", "d": "12/2016"}, {"body": "hello thank fast response use unloadall customer editing record route change customers see updates recommended way ember slack chanel could problem solved using intermediary component avoiding controller passing whole model loaded contain actual component passing selected person", "d": "12/2016"}, {"body": "guess question best behavior treat destroy object missing template layerbinding system b error tell users trying watchobserver destroyed object later current current preference helps catch strange issues sooner mean upgrading issues encounter issue explicitly rather via heisenbug later", "d": "12/2016"}, {"body": "hi stefanpenner think completely right b makes sense solution case would completely avoid controllers create one level components correct", "d": "12/2016"}, {"body": "could problem solved using intermediary component avoiding controller passing whole model loaded contain actual component passing selected person state stored component unload occurs component unrendered yes likely given provided context would insta solve problem persistent state controllers done may quite tricky controllers intended longlived state must manually managed possible try put state places live shorter life state placing live longer extra care required", "d": "12/2016"}, {"body": "thank makes perfect sense tested saving state components opposed controller issue gone committed change original issue repo case someone else using controllers store state could maybe make error currently thrown optional settings since make transitioning next ember version require lot refactoring", "d": "12/2016"}, {"body": "anijap usually talk namespaces without ember prefix soon wo nt need use rely globals pieces ember even today many devs choose use destructuring access parts ember need destructuring looks like js const run ember used nt need quotes method signature context invoke function provided case method defined immediately docs however convenience method use let pass name method available invoke given following class js class foo constructor thisname foo sayhello consolelog thisname could invoke method either following two ways js let foo new foo runscheduleonce afterrender foo foosayhello preferred way invoke runscheduleonce afterrender foo sayhello alternate way invoke lastly also invoke without context prebound context js let foo new foo let sayhi gt foosayhello runscheduleonce afterrender sayhi hope clears things", "d": "12/2016"}, {"body": "runspired thank tripped nt working sayhi alert hi init thissuper arguments emberrunscheduleonce afterrender sayhi explanation figured", "d": "12/2016"}, {"body": "kind comment really put formal api document even external reference link would great", "d": "12/2016"}, {"body": "nightire part open pr", "d": "12/2016"}, {"body": "type invocation never intentionally worked actually proper way invoke components subfolders", "d": "12/2016"}, {"body": "hmm thank", "d": "12/2016"}, {"body": "reference duplicate", "d": "12/2016"}, {"body": "confirm nt duplicate", "d": "12/2016"}, {"body": "locks issue nt duplicate", "d": "12/2016"}, {"body": "know use case probably far complex changing style property figured point set use cp seem viable workaround modified twiddle embertwiddle anyways figured point unlikely event nt aware definitely still issue though", "d": "12/2016"}, {"body": "workmanw hmm thanks simple improve workaround work sure solution lead new problems also code become difficult embertwiddle also problem clearly visible using standart helper textarea resize change isvisible size textarea back default", "d": "12/2016"}, {"body": "created failing test failing stylebindingreference nt update style changed directly using dom resizing textarea dragging certain nt believe direct dom manipulations like intended supported", "d": "12/2016"}, {"body": "nt believe direct dom manipulations like intended supported confirm", "d": "12/2016"}, {"body": "hi alexmiddeleer thanks interest propose new features file issue enough interest graduate proper rfc check readme explanation process could move issue gracias", "d": "12/2016"}, {"body": "thanks locks moved", "d": "12/2016"}, {"body": "realized new feature could cause", "d": "12/2016"}, {"body": "hacked formfieldjs fixed issue patch addoncomponentsformfieldjsorig addoncomponentsformfieldjs let classnames get classnames set classnames classnames concat fieldclasses get classnamebindings push let classnamebindings get classnamebindings slice classnamebindingspush set classnamebindings classnamebindings inputclasses", "d": "12/2016"}, {"body": "mwpastore solution", "d": "12/2016"}, {"body": "excellent closing issue thanks martndemus", "d": "12/2016"}, {"body": "hi rudymacias thank report pods currently considered eol actively supported current efforts directed towards module unification rfc time inclination chase bug please reach us channel slack group", "d": "12/2016"}, {"body": "rudymacias upgrade three ember app recently helpers projects behaving normally maybe pods use pods well", "d": "12/2016"}, {"body": "locks tad zealous eol label smilingimp please provide reproduction help", "d": "12/2016"}, {"body": "oops sorry hope nt sound dismissive advice reaching us still stands need help coming reproduction", "d": "12/2016"}, {"body": "rwjblue think one possible reason define like works nt work since version remember minor version provide full module path like know far sure helps cc rudymacias", "d": "12/2016"}, {"body": "good locks take wrong way definitely open new file structure think actually close issue since trying reproduce new project pods setup helpers work thought tested already sure happened original test continue troubleshoot project issue thanks everyone nightire rwjblue locks time", "d": "12/2016"}, {"body": "going close since project working updating ember addons one must caused helpers issue emberclifastclick emberclinotifications embercordova embertedselect updating dependencies latest versions seemed trick", "d": "12/2016"}, {"body": "thank follow list come handy issue pops try reach maintainers aware", "d": "12/2016"}, {"body": "pswai maybe need copy first call htmlsafe work around use case copy safe string make htmlsafe sure copy intended match type copy object properties instead thanks posting twiddle example explain use case detail twiddle represent use embercopy application", "d": "12/2016"}, {"body": "pixelhandler twiddle demo actual use case bit complicated created simplified version basically ember models computed property represents translated name translated strings returned safestring form uses models user options form cancel functionality reverts values back previously submitted values achieve form makes copy values submitted uses copied values cancel since copied strings safestring anymore shows instead string value currently workaround bit ugly component needs workaround copied safestring copy first htmlsafe desirable since form supports user input well imho safestring able used like primitive string copied safestring least equivalent original safestring", "d": "12/2016"}, {"body": "nathanhammond", "d": "12/2016"}, {"body": "skaor thanks posting twiddle example add details description issue eg use case expected result actual result", "d": "12/2016"}, {"body": "skaor nt know final purpose perhaps forgot call want", "d": "12/2016"}, {"body": "confirmed issue nominating closure", "d": "12/2016"}, {"body": "yes sorry answer morning worked test without super example works", "d": "12/2016"}, {"body": "enniel add description steps reproduce issue", "d": "12/2016"}, {"body": "pixelhandler sure really steps reproduce believe starting ember able use npm package instead bower package using embercli gt last two beta releases published npm", "d": "12/2016"}, {"body": "would even suggest older versions published least lts versions ease transition bower less addons tests", "d": "12/2016"}, {"body": "tchak could done would p checking unreleased betas", "d": "12/2016"}, {"body": "locks sure mean core team yet time deal older versions future plan release older versions good reason case much appreciated work intended asap request trying gather information plan", "d": "12/2016"}, {"body": "second case afraid release embersource package required bunch ecosystem changes unsure able backport bunch testing verification final", "d": "12/2016"}, {"body": "tchak oops nt realised ambiguous sounded changes necessary ember project could published npm packaged happened first alpha wo nt earlier versions released afaik betas though lack timelapse", "d": "12/2016"}, {"body": "seems release process would support another step feature flags removed someone would need add labels commit prior release", "d": "12/2016"}, {"body": "pixelhandler quite following argument would feature flag since", "d": "12/2016"}, {"body": "locks new features behind feature flags removed know feature landing specific release would time add since label going forward existing api blog posts releases announcements may way identify version parts api landed release channel", "d": "12/2016"}, {"body": "kennetpostigo think get best feedback chatrooms also since ember issue ember bug tracker bugs issues perhaps post forums ember addons similar topic using graphql see may good idea reach authors maybe even team", "d": "12/2016"}, {"body": "surprised work prior based visibility api activated believe needs present prior init changing twiddle set immediately prior super fixes", "d": "12/2016"}, {"body": "far tell twiddle working properly ember without modification runspired suggested", "d": "12/2016"}, {"body": "runspired sorry bad wording started using ember around project created version nt remember thanks fix rwjblue thanks good news reading around bit saw ember going towards dropping isvisible api support went custom api visibility instead classes thanks help guys", "d": "12/2016"}, {"body": "actually spec dashes comment content ember right close issue sorry wasting bytes", "d": "12/2016"}, {"body": "krisselden bug add label", "d": "12/2016"}, {"body": "yes bug long time", "d": "12/2016"}, {"body": "tzellman api docs indicates default value see based value would expect twiddle render using ember see perhaps need set isvisible true component pass true found tests describe isvisible property test adds isvisible binding style binding missing bindings exist test isvisible overwrite component style test toggle visibility isvisible understand behavior different best guess change glimmer seeing code changes isvisible true render seems like boolean property toggle display proper defined component recall comes back day views precomponent", "d": "12/2016"}, {"body": "thanks responsediscussion already aware documentation posted findings disagreed stated updated twiddle render string value never set agree expected value documentation states additionally done testing check value never appears set anything correct property using differentbetter option would like avoid setting bit components renderdestroy events fire thanks", "d": "12/2016"}, {"body": "value never changed unless application changes ember uses flag mechanism allows easily add given component element never sets property isvisible correct property using differentbetter option would like avoid setting bit components renderdestroy events fire well think answer question properly need able understand trying please describe use case", "d": "12/2016"}, {"body": "sure problem thanks really nt big deal use property within mixin maintained several years essentially window resize event handler type check really big deal thought found bug sounds like fact set ember previous versions prior extra unintended nicety thanks", "d": "12/2016"}, {"body": "perhaps api documentation clarify component property certain cases docs imply checking property reliable means testing whether component visible dom following check component worked upgraded fails every instance undefined", "d": "12/2016"}, {"body": "hello closing since emberjs bug please go help channel slack registered use slackin app seems problem connection since timing thank", "d": "12/2016"}, {"body": "hello anirudhzemoso reserved issues github bugs please use slack channel discourse asking questions case try installing ember dynamic fluid assistance please ask help channel slack thank", "d": "12/2016"}, {"body": "case try installing ember npm install g ember serabe", "d": "12/2016"}, {"body": "definitely something fix basically transform anything literal value different private api format", "d": "12/2016"}, {"body": "ideally tracking block params ensure breaking folks", "d": "12/2016"}, {"body": "kris hypothesis discussion race aliasproperty readonly uses adds dependent key consumption property something development build papers bug", "d": "12/2016"}, {"body": "seems consuming cp breaks rendering dependent keys aliases", "d": "12/2016"}, {"body": "lukemelia fixed", "d": "12/2016"}, {"body": "reproduce twiddle might podrelated", "d": "12/2016"}, {"body": "nt seem directly podsrelated could current resolver allows duplication various levels true even pods possible higher priority component lookup case likely something fix since actively pushing replacing resolver module unification support", "d": "12/2016"}, {"body": "reproduce pod project close rwjblue thank", "d": "12/2016"}, {"body": "ya seems unfortunate unavoidable current system resolution", "d": "12/2016"}, {"body": "anyone else maximum call stack size exceeded message trying destroy component ember pls let know thanks", "d": "12/2016"}, {"body": "definitely oversight intended emulate result definitely include", "d": "12/2016"}, {"body": "interesting getting last parameter helper attempting pass directly party library using decide passed parameter supports better solution explicitly detecting helper replace", "d": "12/2016"}, {"body": "firstly suggest third party lib updated made bit smarter pretty common technique ensure property collisions occur secondly use something like work around issue lib gets updated js export default emberhelperhelper function params hash let objectforlib emberassign objectforlib hash externallib objectforlib", "d": "12/2016"}, {"body": "great thanks help", "d": "12/2016"}, {"body": "sounds like good plan", "d": "12/2016"}, {"body": "rwjblue target branch change", "d": "12/2016"}, {"body": "assuming lands within next couple weeks yes would target branch commit prefixed", "d": "12/2016"}, {"body": "looks like bug able use especially remove event listeners", "d": "12/2016"}, {"body": "bug flow calls method contains function call link change link lookup ends finding state link created using state hand returns calls link", "d": "12/2016"}, {"body": "omarestrella kamilogorek fixed thanks reporting", "d": "12/2016"}, {"body": "ember ember", "d": "12/2016"}, {"body": "would consider bug given documentation one parameters accepted", "d": "12/2016"}, {"body": "serabe seems something fundamental nt work either", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fixed glimmer", "d": "12/2016"}, {"body": "thanks gavinjoyce", "d": "12/2016"}, {"body": "serabe guess nt consider code documentation wink", "d": "12/2016"}, {"body": "filmknurd fwiw code definitely documentation", "d": "12/2016"}, {"body": "broke app well chance get point release includes glimmer fix", "d": "12/2016"}, {"body": "pwnall yep sure", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "think would helpful confused seeing app test suite break despite deprecation warnings indicating", "d": "12/2016"}, {"body": "hi thanks feedback addressed router service rfc currently implemented moment resort shenanigans application controller", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "exelord twiddle link change release version still see object logged string representation model", "d": "12/2016"}, {"body": "gavinjoyce indeed problem ember twiddle changes gone tomorrow morning write new one", "d": "12/2016"}, {"body": "gavinjoyce ok objects queryparams serialized probably bug fix good understand pass optional object route", "d": "12/2016"}, {"body": "hello even though dot notation may never officially supported think would helpful community add note release notes change coworker spent mins figuring application throwing errors also rendering anything updating use dot notation also ember tutorials read use dot notation nested components also one best syntax highlighters found ember htmlbars languageemberhtmlbars nt even support syntax highlighting nested components using slash notation probably people use dot notation even never officially supported think fair say lot community uses dot syntax heads switch officially supported slash syntax easy probably save quite people debugging", "d": "12/2016"}, {"body": "ember tutorials read use dot notation nested components dhedgecock round list links articles tutorials seen would expect regardless list would help get scope issue allow us contact authors update content", "d": "12/2016"}, {"body": "well could nt find single tutorial example nested components guess projecting apologize sassy", "d": "12/2016"}, {"body": "crap app relies heavily hundreds templates defined syntax correct acceptable syntax agree saw dot style tutorials probably back pre days think people logically thought syntax routes defined nt understand upcoming routable components would require different definition syntax argue syntax valid consistency sake alone", "d": "12/2016"}, {"body": "exelord unrelated originally described bug bug specifically document default implementation requires modelnameid work box using custom field reimplement serializedeserialize respective route", "d": "12/2016"}, {"body": "exelord sidenote directly related issue sure documented nt think use identifier dynamic segment router avoid using id also avoid using modelnameid eg needed maybe use newmodelnameid something different", "d": "12/2016"}, {"body": "rwjblue appears clean workaround issue correct", "d": "12/2016"}, {"body": "arenoir make embertwiddle reproduction issue sounds like bug repo issue help diagnose issue also provide verification bug", "d": "12/2016"}, {"body": "locks pixelhandler right guys thanks help explanation indeed working guess bug unexpected behavior", "d": "12/2016"}, {"body": "pixelhandler okay twiddle", "d": "12/2016"}, {"body": "pointup looks like good reproduction label removed", "d": "12/2016"}, {"body": "kellyselden way reproduce issue input ember jquery aside complete addon trying boil root cause may help solution also identity whether bug ember", "d": "12/2016"}, {"body": "pixelhandler next step hoping something would jump someone high level debugging", "d": "12/2016"}, {"body": "figured object template helper makes handles object type changes success case fail case appears mild breaking change", "d": "12/2016"}, {"body": "hash argument passed helpers result emptyobject pattern meant emulate avoid bad performance characteristics certain platforms fwiw object also frozen creation specific check objects without prototype see instances qualify true object would pass check ultimately suggest working around issue specific addon via something like", "d": "12/2016"}, {"body": "ut avoid bad performance characteristics certain platforms new fixed old ones non upgrading mobile others may though suspect need thorough tests change", "d": "12/2016"}, {"body": "narrowed problem able quickly work around using guess question treated bug wontfix", "d": "12/2016"}, {"body": "likely sympathetic wontfix run others first closing anything", "d": "12/2016"}, {"body": "think may maybe fix talk", "d": "12/2016"}, {"body": "rwjblue stefanpenner anything get resolved", "d": "12/2016"}, {"body": "thanks reporting looking fixing one", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "tildeioglimmer parsed trying fix", "d": "12/2016"}, {"body": "serabe confirm issue referring", "d": "12/2016"}, {"body": "would say first case result user wants remove style completely style might bit useless interesting props", "d": "12/2016"}, {"body": "rwjblue sorry misunderstood", "d": "12/2016"}, {"body": "mmun think commented assignment html attribute results disappearing attribute act magic rather developers comment entire attribute vs special magical use case handlebars comment inline assignment html attribute", "d": "12/2016"}, {"body": "rwjblue think behavior ember would sufficient also nt introduce change behavior handlebars comments like error message seems helpful perhaps warning behavior still works", "d": "12/2016"}, {"body": "pixelhandler yeah agree nt know ruled fine syntactically", "d": "12/2016"}, {"body": "input helpers long life curious life close coming end still based original view objects actual components essentially helpers components workaround sometimes create component simply extends textfield view eg advances made htmlbars glimmer glimmer curious better use html input vs textfield view object find input helpers bit archaic ways making components using tagname input set type see fit also much enjoyed phantomjs browser computers humans app currently work use phantomjs run tests use firefox ci thinking phantomjs may near end relevance nt get wrong input helpers phantomjs excellent appreciate much find nt rely much used", "d": "12/2016"}, {"body": "crosslinking", "d": "12/2016"}, {"body": "nathanhammond thanks fixing quickly rwjblue labeled bug perhaps issue resolved upcoming release", "d": "12/2016"}, {"body": "fix pixelhandler bug introduced need point release fixed things address get back router things got open issues address", "d": "12/2016"}, {"body": "status guy", "d": "12/2016"}, {"body": "hit issue upgrading bustle app need either refactor root route named differently hold upgrading", "d": "12/2016"}, {"body": "chancancode issue closed", "d": "12/2016"}, {"body": "yup thanks pointing", "d": "12/2016"}, {"body": "stefanpenner run another issue regarding computed properties arrays using key works fine properties array elements changed adding new elements trigger recalculation computed property according current docs case", "d": "12/2016"}, {"body": "pestoney believe tested could provide reproduction", "d": "12/2016"}, {"body": "stefanpenner created small example export default embercontrollerextend values null init thisset values emberobjectcreate count emberobjectcreate count emberobjectcreate count consolelog array count thisget arraylength arraylength embercomputed values eachcount function return thisget valueslength console output looks like understand docs right second line already output instead", "d": "12/2016"}, {"body": "pestoney observed array mutations observed need use list methods observed believe look", "d": "12/2016"}, {"body": "stefanpenner awesome job digged docs sorry", "d": "12/2016"}, {"body": "see need create another object custom tostring emberinspect gives unhelpful unknown mixin ideas thanks", "d": "12/2016"}, {"body": "bcardarella think needs rfc issue contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo", "d": "12/2016"}, {"body": "\u30c4 issue nt response core uncertain direction taken", "d": "12/2016"}, {"body": "think duplicates see issue workarounds may fine us workaround sure ember qunit test env change add config expecting fail perhaps using even possible", "d": "12/2016"}, {"body": "update demo detached dom trees changing routes also another snapshot", "d": "12/2016"}, {"body": "locks stefanpenner need twiddle order verfiy bug could try get example running twiddle", "d": "12/2016"}, {"body": "reproduction app form believe added enough chance loook nt comment midweek feel free pig", "d": "12/2016"}, {"body": "stefanpenner alles klar danke", "d": "12/2016"}, {"body": "fwiw unable find memory leaks employing threesnapshot method could find large number detached red nodes switching routes bunch times like could however looked heap snapshot file found nodes retained property called object grep nodemodules behold possible memory leak originating", "d": "12/2016"}, {"body": "robbiepitts thanks lot seems possible indeed file issue emberbasicdropdown keep guys updated", "d": "12/2016"}, {"body": "investigated ca nt pinpoint memory leak happen true hold reference trigger dropdown content components share parent destroyed time references garbage collected also checked nonlocal events added bodywindow cleaned ca nt pinpoint might causing problem remember point history bug hook invoked contextual components say fixed someone experience tracking memory leaks available happy pair see find leak", "d": "12/2016"}, {"body": "specific steps reliably reproduce demo repo able reproduce yet", "d": "12/2016"}, {"body": "robbiepitts sorry late respone using following steps open demo click click repeat step times take heapsnapshot", "d": "12/2016"}, {"body": "tests previously failing rebase fixed looking include tests part pr", "d": "12/2016"}, {"body": "test added ensured fails without change anything else required merge pr", "d": "12/2016"}, {"body": "note breaking change deprecation opinion cause working tests fail migrating requiring patch add ons relying prior behavior case addon embercliselectpicker", "d": "12/2016"}, {"body": "propose reopen following twiddle shows camelcase expressions resolve dasherized helper names surprising local camelcase property trying render switch twiddle ember see property name resolved expected", "d": "12/2016"}, {"body": "somewhat related", "d": "12/2016"}, {"body": "update discussed slack rwjblue next step add test coverage emberresolver define desired behavior going work", "d": "12/2016"}, {"body": "embercliemberresolver merged think good close", "d": "12/2016"}, {"body": "boss", "d": "12/2016"}, {"body": "progress issue maybe raising warning would relevant ca nt get application work ember issue", "d": "12/2016"}, {"body": "pr submitted", "d": "12/2016"}, {"body": "may even specific windows windows adamlawson versions js bin resolved version", "d": "12/2016"}, {"body": "adamknights tested jsbin windows yes resolved ember", "d": "12/2016"}, {"body": "keep older lts skip lts next one recommended way go", "d": "12/2016"}, {"body": "robishere gut feel platform specific bug fixed glimmer unlikely much priority answer yes could users appsite textareas would least wait see comes first either fix next lts", "d": "12/2016"}, {"body": "make use instead way could still iterate keys lookup keys still", "d": "12/2016"}, {"body": "stefanpenner work week", "d": "12/2016"}, {"body": "folded", "d": "12/2016"}, {"body": "anyone know specific lines code causing issue error bunch tests sure causing", "d": "12/2016"}, {"body": "currently ember bug seems still alive consider following twiddle notably following handlebars snippet behaves incorrectly", "d": "12/2016"}, {"body": "problem twiddle using different version match version see error furthermore template render text stated documentation aliased property falsey example false undefined null nan empty array block rendered thank", "d": "12/2016"}, {"body": "thanks serabe unaware doubles block", "d": "12/2016"}, {"body": "way forward people use dot syntax hundreds components templates utilize syntax use syntax well hundreds components things get little messy argue routes defined way components accessible way fyi related", "d": "12/2016"}, {"body": "way forward people use dot syntax rewrite", "d": "12/2016"}, {"body": "rwjblue thanks replies night search amp replace", "d": "12/2016"}, {"body": "jackellis happy help sorry bit", "d": "12/2016"}, {"body": "path forward", "d": "12/2016"}, {"body": "tomdale krisselden work deprecation rfc", "d": "12/2016"}, {"body": "rwjblue fixed use real events testing flag", "d": "12/2016"}, {"body": "mentioned blog post took surprise since deprecation warning previously said would supported mentioned", "d": "12/2016"}, {"body": "usage pattern affected sure problem must usage pattern particular change would love input good alternate usage pattern would basically page shows filterable set data achieve using ember computed value filter data based value several queryparams page however prevent invalid inputs eg letters numbers added queryparams user input following pattern basically computed filtered model look like filter values invalid characters strip last character become valid anyone suggestion cleaner way validitychecking inputs", "d": "12/2016"}, {"body": "caught us surprise well particularly nt see warning messages app running upgrade application load references error anyone else seen behavior", "d": "12/2016"}, {"body": "revanar could totally looks like cp actually two different things one cp return filtered model one update filters move updating filters part observable component passing query params component move logic hook experience running backtracking rerender error think moving operation cp make error go away", "d": "12/2016"}, {"body": "tough time well fixed lot issues one instance seeing deprecation error puzzling looks like failure happening ember internal property updated unfortunately reproduces selenium tests difficult debug selenium driver prevents dev tools working test running traced least one instance problem controllertransitiontoroute call made end signin process seems happen several different scenarios sure proceed troubleshooting chancancode mentioned feature flag disabling deprecation error nt see info anyone know flag", "d": "12/2016"}, {"body": "ember migration main pain point fixing lot issues well seems nt singleclear cut strategy fix errors tried following approaches depending use case wrapping code moving code lifecycle hooks wherever possible trying different combination lifecycle hooks components", "d": "12/2016"}, {"body": "alot difficulty well past years accumulated fair amount drop downs automatically select first element certain type ember data store cache causes rerender since parts page driven dropdown selection quite sure since nt want repeat code fill select first item list page dropdowns used", "d": "12/2016"}, {"body": "scottmessinger thanks feedback using component ended working fairly well managed rid backtracking error think code fair bit cleaner", "d": "12/2016"}, {"body": "kris selden useful tip debugging outlined steps details", "d": "12/2016"}, {"body": "working improving backtracking assertion message cut build includes better messages modified twice single render unreliable slow ember longer supported see details modified twice single render rendered modified unreliable slow ember longer supported see details things ready would really useful people tried app cc fivetanley bryanhickerson revanar phammers scottmessinger jakesjews please let know see nonideal assertion messages app try update include ember dependency follows see example application running build", "d": "12/2016"}, {"body": "cut build typo", "d": "12/2016"}, {"body": "rwjblue thanks typo updated", "d": "12/2016"}, {"body": "gavinjoyce thanks taking tried app definitely helpful previous message sadly us still nt make super easy remediate problem property notes modified obviously modified either location indicated error message exactly sure hope dig next year", "d": "12/2016"}, {"body": "dhaulagiri interested happy organise screenshare sometime dive exact problem keen error messages helpful possible would useful consider case likely able help identify root cause", "d": "12/2016"}, {"body": "fwiw found another issue related", "d": "12/2016"}, {"body": "also tried branch gavinjoyce trying find bug ongoing effort bring tabs control emberpaper referenced pr unfortunately seems case also get references components appear involved", "d": "12/2016"}, {"body": "bjornharrtell emberpaper branch try", "d": "12/2016"}, {"body": "took little time dive emberpaper issues seems new error messages useful current one nt perfect nt handle yielded content well component contained reported source useful useful perhaps could", "d": "12/2016"}, {"body": "serabe pixelhandler use case setting queryparams route visited yet visiting route action happened crashes app see console code beforemodel hook route fixes know supposed change private methods controller unable understand error occurring someone please shed light related trek stefanpenner rlivsey", "d": "12/2016"}, {"body": "case anyone else still issue sure fixed upgraded assertion came turns controller defined used multiple routes extended least managed resolve error eg query params property instead made injected utilise main controller logic hope helps others coming google", "d": "12/2016"}, {"body": "jameshoward got around lack model adding model hopefully helps someone finds thread looking solution", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "trusting kellyselden call p", "d": "12/2016"}, {"body": "still workable solution really quite difficult height trick html body height etc", "d": "12/2016"}, {"body": "facing issue emberdialog plugin creating dialog component programmatically set target property component custom context passed user using closure actions wo nt bubble action component target element suggested solution issue call sendaction method targets implement method add following code", "d": "12/2016"}, {"body": "issue still present release", "d": "12/2016"}]