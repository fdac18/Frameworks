[{"title": "could build changed files", "body": "commoner internally need makelike behavior build tasks finally grunt plugin build newer files could evaluate want shave sub seconds testing cycle needs experimenting handle file renames deletions etc", "num": "619", "d": "11/2013"}, {"title": "jsx tool return zero error", "body": "using jsx tool automated build system want check errors compiling jsx files instead returning nonzero error code jsx command writes everything stderr exits zero error code even worse stderr used build successfull well forcing parse stderr output check error", "num": "615", "d": "11/2013"}, {"title": "always clone components mounting", "body": "solve many problems developers retaining references coincidentally authoritative backing component instance inability reuse constant components top file var wrongpw entered wrong password later react component currently supported could supported clone components mounting render function return thisloggedin wrongpw subtle reinitialization issues occur previous example components reset time createddestroyed however since hijack provided instances provided outside props actually retained across internal state changes solution clone components mounting inside container original design react actually clone elements cleaner avoids pitfalls conservation memory changed mounting process clone instead hijack originally provided instances average browser performance profiles changed since makes sense reevaluate decision importantly cloning though consume memory short term allows us make many optimizations make memory usage application level much lean ability use constant component expressions critical parts aplication go long way memory usage also cpureconcile time imagine ability utilities like would allow us reuse memory every time render invoked every node could also anotated never reconcile never change importantly cleaner design means jsx function calls write truly descriptions components actual components truly declarative programming program according guidelines effectively allows many optimizations nt possible apart cloning make sure benchmark potential solutions issue make sure know getting", "num": "614", "d": "11/2013"}, {"title": "use classes create react components", "body": "let use classes create react component classes accumulated custom concepts nt lend using classes still use conjunction react components classes separation performed enhancers top completely pure classes class typeahead extends reactcomponent render enhancers reactcomponent reactcomponentautobindmethods typeahead reactcomponentvalidateproptypes typeahead reactcomponentapplymixins mixinone mixintwo moduleexports typeahead reactcomponentreactcompositecomponentreactcompositecomponentreactcomponentreactcomponentreactcomponentbasereactcreateclassnewcomponentwillmountcomponentwillreceivepropsreactcompositecomponent attempt intelligently merge results okay factor helper utilities supply code mod automatically updates code uses mixins huge undertaking anyone takes shot please lock api related questions run ideas jeffmo sebmarkbage understand direction happy chat feasibility potential changes react core practical ways get started might require tiny changes jsx transformer sure jeffmo could get done help minutes quite easy", "num": "613", "d": "11/2013"}, {"title": "error ie caused trailing comma object", "body": "maybe best way dev react using ie anyway use browser jsxtransform ie got error expected identifier string number turns jsxtransformerjs trailing comma body following code causes issue ie big deal good fix", "num": "612", "d": "11/2013"}, {"title": "better error display docs live editor", "body": "currently preview shows empty div editor content fails eval opposition oneline change display error message extra transition background red warning downside editing preview often throws nt think much trouble thus transition red preview nt constantly flashes red code edited", "num": "611", "d": "11/2013"}, {"title": "fails", "body": "nt support", "num": "608", "d": "11/2013"}, {"title": "crashes ios safari", "body": "", "num": "606", "d": "11/2013"}, {"title": "reacteventemitter accept argument", "body": "accepts listeners added except ones registered register", "num": "605", "d": "11/2013"}, {"title": "remove jquery tutorial", "body": "may controversial browsing stackoverflow believe way many people load jquery really nt need let add nt think loading jquery tutorial ajax request let instead dummy object returns static list could simply replaced implement ajax loading old post thought using static data let replace standard xmlhttprequest code say something like simple code ajax request alternatively could use favourite framework like jquery mootools yui instead jquery loaded tutorial may make people think jquery necessary use react", "num": "603", "d": "11/2013"}, {"title": "avoid deoptimization accessing undefined properties andor initializing null properties", "body": "fun ran benchmarks serverside using example shows optimized deoptimized hundreds times depending benchmark iterations obviously due accessing undefined leaf nodes type string number quick fix check first also avoids cascading deopts elsewhere thousands undefined accesses seen running accessing undefined properties perhaps common deopt reason among adding new properties without initialising null something earlier perhaps fixed speedmemory performance optimized functions use less intermediate variables less gc burden suppose example accessed undefined could either initialized null somewhere one could prevent undefined access using instead similarly property accessed undefined nt really looked output could reveal optimization possibilities", "num": "600", "d": "11/2013"}, {"title": "honor instance identity key prop root component", "body": "key prop component changes render passes react expected unmount previous instance mount new one reconciliation however said component root ie whose dom parent mount point component instance used jsfiddle demonstrates stateful component changing key unmounted root", "num": "590", "d": "11/2013"}, {"title": "better reactcsstransitiongroup docs", "body": "given confusion seems like docs nt quite good enough right component new item added reacttransitiongroup get exampleenter css class exampleenteractive css class added next tick convention based transitionname prop", "num": "587", "d": "11/2013"}, {"title": "add docs context", "body": "", "num": "580", "d": "11/2013"}, {"title": "add onclickoutside event", "body": "add clickoutside event similar jquery plugin useful sugar components like dropdowns modals need closehide click side container", "num": "579", "d": "11/2013"}, {"title": "fix travis run tests properly", "body": "pull request fixes tests master travis nt think tests broken old one crucially looks think due old version jstransform maybe hit error machine fixed presumably travis workspace already clean though since starts git get travis back feet would nice figure make report failures like properly instead counting pass", "num": "574", "d": "11/2013"}, {"title": "documentation document usage", "body": "leifdenby came irc could nt get working nt clear use rather need make doc clearer jsfiddle gives examples controlled controller linkstate uncontrolled", "num": "571", "d": "11/2013"}, {"title": "rendercomponent without jsx clone props object passed avoid pollution", "body": "issue manifests using vanillajs notjsx making call issue pass object object mutated props try use object render different component props first component pollute props second component example code var hello reactcreateclass getdefaultprops function return randomnumber mathrandom render function return thispropsname thispropsrandomnumber var configdata foo bar configdataname reactrendercomponent hello configdata documentgetelementbyid configdataname reactrendercomponent hello configdata documentgetelementbyid first component get carried second component configdata mutated example code asked reactjs irc response", "num": "570", "d": "11/2013"}, {"title": "transitiongroup regressions", "body": "encountered problems upgrading react looks like regressions related transitions addon test cases", "num": "568", "d": "11/2013"}, {"title": "offline transform error run jsx watch src build", "body": "windows c jsx watch src build throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit c cd src c jsx watch src build throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit c", "num": "567", "d": "11/2013"}, {"title": "warn clashing keys proceed render", "body": "hit couple bugs prod keys supposed distinct nt causes react throw errors render nothing would nice react could instead warn render components anyway perhaps adding suffix make keys unique render one components id seem preferable completely dying though maybe fault properly js error reporting figured", "num": "566", "d": "11/2013"}, {"title": "make possible run single test", "body": "like talked cc benjamn", "num": "563", "d": "11/2013"}, {"title": "jsx enable lazy subtree execution", "body": "html certain tags stop parser parsing children eg possible something similar jsx eg jsx would compiled instead immediately executing children like", "num": "561", "d": "11/2013"}, {"title": "add reacttestutils reacttools mainjs document", "body": "", "num": "560", "d": "11/2013"}, {"title": "stop passing parameter lifecycle functions", "body": "think would better used", "num": "559", "d": "11/2013"}, {"title": "inconvenient owner assignment prevents updating component", "body": "take look component second time click show popover react throws invariant violation replaceprops called component owner antipattern since props get reactively updated rendered instead change owner method pass correct value props component created happens second time line executed calls old component throws popoverdemo component despite popoverdemo creates component nt actually mount concluded wrong thing check instead property set child component upon mounting probably conversely root component", "num": "557", "d": "11/2013"}, {"title": "reactproptypescomponent would nice", "body": "reactproptypescomponent would nice wrote instead", "num": "556", "d": "11/2013"}, {"title": "input typerange onchange fire changing value using keyboard arrow keys", "body": "", "num": "554", "d": "11/2013"}, {"title": "button beside editor switch jsx js", "body": "think neat way solving instead deciding snippet written js jsx put jsx compiler bigger use could button beside live editor label toggles two applies tips also general", "num": "552", "d": "11/2013"}, {"title": "waitforjscondition deprecated use waitfor jscondition asserter instead", "body": "", "num": "551", "d": "11/2013"}, {"title": "jekyll serve w gives invalid byte sequence usascii", "body": "trying run jekyll work docs ca nt get boot utf characters blog post jekyll ruby probably like tried setting lang variables already luck yet", "num": "548", "d": "11/2013"}, {"title": "android gingerbread fail immutableobject tolerate arrays deeper levels prevent mutation", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject tolerate arrays deeper levels prevent mutation dev linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject tolerate arrays deeper levels prevent mutation prod linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception", "num": "546", "d": "11/2013"}, {"title": "android gingerbread fail immutableobject", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent shallow field addition strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent shallow field mutation strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent deep field addition strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent deep field mutation strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception", "num": "545", "d": "11/2013"}, {"title": "android gingerbread fail reactdomselect allow switching multiple", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok reactdomselect allow switching multiple expected false true", "num": "544", "d": "11/2013"}, {"title": "android gingerbread fail mutatehtmlnodewithmarkup mutate document html", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok mutatehtmlnodewithmarkup mutate document html typeerror read property innerhtml null", "num": "543", "d": "11/2013"}, {"title": "document bind element usecase lists", "body": "see javascript handleclick function color e thispropsaddcolor color render function var items thispropscolorsforeach function color return bind return items", "num": "542", "d": "11/2013"}, {"title": "make output less noisy", "body": "json format great sauce great running tests manually console", "num": "541", "d": "11/2013"}, {"title": "code coverage reactcomponent", "body": "lines currently covered tests", "num": "540", "d": "11/2013"}, {"title": "warning eventreturnvalue deprecated", "body": "used following place getting warning chrome version may notice issue reported kindly update code avoid warning thanks", "num": "538", "d": "11/2013"}, {"title": "fail immutableobject expected function throw exception", "body": "nt looked going yet capturing errors right", "num": "534", "d": "11/2013"}, {"title": "fail dompropertyoperations setvalueforproperty set values attributes necessary", "body": "", "num": "533", "d": "11/2013"}, {"title": "getelementsbyclassname nt exist", "body": "", "num": "532", "d": "11/2013"}, {"title": "provide valuelink value onchange event want use value onchange probably nt want use valuelink", "body": "shows console running tests", "num": "531", "d": "11/2013"}, {"title": "also", "body": "", "num": "530", "d": "11/2013"}, {"title": "throws typeerror read property namedtypes undefined", "body": "var namedtypes typesnamedtypes typeerror read property namedtypes undefined object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs error var namedtypes typesnamedtypes typeerror read property namedtypes undefined object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs warning task jsx test failed use force continue error task jsx test failed task nullontimeout timerlistontimeout ontimeout", "num": "528", "d": "11/2013"}, {"title": "newest chrome get warning", "body": "new today started seeing eventreturnvalue deprecated please use standard eventpreventdefault instead", "num": "527", "d": "11/2013"}, {"title": "links clickable", "body": "david walsh excellent blog post khan academy looks like css issue", "num": "523", "d": "11/2013"}, {"title": "reactaddonstransitiongroup throw children", "body": "consider example var foo thisstatebar foo foo false undefined reactaddonstransitiongroup throw", "num": "521", "d": "11/2013"}, {"title": "reactdominput support reactlink ie", "body": "reactdominput support reactlink expected typeerror unable get property undefined null reference", "num": "519", "d": "11/2013"}, {"title": "reactdominput set value submit buttons unnecessarily fails ie", "body": "reactdominput set value submit buttons unnecessarily expected true false", "num": "518", "d": "11/2013"}, {"title": "reactdominput properly control value number fails ie", "body": "expected giraffe", "num": "517", "d": "11/2013"}, {"title": "ie breaking tests", "body": "instance types throw invalid instances expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance", "num": "516", "d": "11/2013"}, {"title": "error invalid target element operation", "body": "rendering react components document able get root component id document node error invalid target element operation rendering react components document able unmount component document node error invalid target element operation rendering react components document able switch root constructors via state error invalid target element operation rendering react components document able switch root constructors error invalid target element operation rendering react components document able mount document error invalid target element operation", "num": "515", "d": "11/2013"}, {"title": "fix failing tests", "body": "logs may order compatible msie windows nt ok instance types throw invalid instances compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able unmount component document node compatible msie windows nt ok rendering react components document able get root component id document node compatible msie windows nt ok rendering react components document able switch root constructors via state compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able switch root constructors compatible msie windows nt error invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able mount document compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document throw full document render compatible msie windows nt expected function throw exception threw invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt ok mutatehtmlnodewithmarkup mutate document html compatible msie windows nt expected giraffe compatible msie windows nt ok reactdominput set value submit buttons unnecessarily compatible msie windows nt ok reactdominput support reactlink compatible msie windows nt expected compatible msie windows nt typeerror unable get value property object null undefined compatible msie windows nt ok reactdomtextarea properly control value number compatible msie windows nt expected giraffe compatible msie windows nt expected compatible msie windows nt ok reactdomtextarea support reactlink compatible msie windows nt typeerror unable get value property object null undefined compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject prevent shallow field mutation strict compatible msie windows nt ok immutableobject prevent deep field mutation strict compatible msie windows nt ok immutableobject prevent shallow field addition strict compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject tolerate arrays deeper levels prevent mutation dev compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject tolerate arrays deeper levels prevent mutation prod compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt ok mutatehtmlnodewithmarkup change attributes compatible msie windows nt ok reactdominput properly control value number compatible msie windows nt expected true false compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt ok immutableobject prevent deep field addition strict compatible msie windows nt expected function throw exception", "num": "514", "d": "11/2013"}, {"title": "undefined", "body": "", "num": "513", "d": "11/2013"}, {"title": "android test runner fails even though tests pass", "body": "looks like android selenium server buggy getting confused thing", "num": "512", "d": "11/2013"}, {"title": "test failure", "body": "windows nt like gecko ok instance types throw invalid instances windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance windows nt like gecko ok rendering react components document able get root component id document node windows nt like gecko ok instance types throw valid values windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance", "num": "511", "d": "11/2013"}, {"title": "download links hard copy chrome", "body": "looks like css weirdness", "num": "509", "d": "11/2013"}, {"title": "reactminjs found document", "body": "", "num": "504", "d": "11/2013"}, {"title": "reactminjs", "body": "", "num": "503", "d": "11/2013"}, {"title": "support pointer events specification", "body": "approach touch events hammerjs checks switches", "num": "499", "d": "11/2013"}, {"title": "examples visible react site without cloning running server", "body": "", "num": "498", "d": "11/2013"}, {"title": "tests run release builds browsers", "body": "", "num": "497", "d": "11/2013"}, {"title": "compiled", "body": "throws syntax error sure code transformation clearly happening", "num": "496", "d": "11/2013"}, {"title": "move tooling jsx depth", "body": "let leave link jsxindepth new location also make link sublime package wrapped looks like link", "num": "490", "d": "11/2013"}, {"title": "frontpage stateful component example could easily retain selection", "body": "currently selecting portion seconds elapsed text stateful component example possible update ticks usual template renderers would impressive string concatenation inside single div replaced comma explicit span elements number would change also would extra span number even selection changing number would retained retention selection could also noted frontpage example preserving copypaste quite major win traditional templating solutions pages become ever lively", "num": "485", "d": "11/2013"}, {"title": "add docs multiple components page communicate parent child", "body": "ie explain pass callbacks", "num": "478", "d": "11/2013"}, {"title": "reactlink nt support checked selected", "body": "using reactlink checkboxes dropdowns state bound value checked selected instead", "num": "475", "d": "11/2013"}, {"title": "gives button text", "body": "pretty sure fixed replacing check make sure", "num": "473", "d": "11/2013"}, {"title": "exception raised pass number props", "body": "two numbers passed props exception raised", "num": "468", "d": "11/2013"}, {"title": "possible memory leak replacing many elements", "body": "memory usage inspected via chromium memory timeline grows hundreds mbs clicking switch button many times tested locally react something browser gc handle properly optimized version fix causes text selections change hover example retain text selections updating components get native feel sorry two issues one", "num": "467", "d": "11/2013"}, {"body": "found issue within commoner module", "d": "11/2013"}, {"body": "good point use intermediate tool caching smart things going pass benjamn author commoner", "d": "11/2013"}, {"body": "yes high personal wishlist op nov schreef jordan w notifications githubcom let use classes create react component classes accumulated custom concepts nt lend using classes still use conjunction react components classes separation performed enhancers top completely pure classes class typeahead extends reactcomponent render enhancers reactcomponent reactcomponentautobindmethods typeahead reactcomponentvalidateproptypes typeahead moduleexports typeahead blockers probably want call base class reactcomponent even though base class components today called reactcompositecomponent need rename reactcompositecomponent reactcomponentand reactcomponent reactcomponentbase right reactcreateclass nt return constructor returns convenience constructor invoked without new unify two concepts eliminate convenience constructors altogether determine support autobinding likely enhancer shown get rid figure way abstract special proprietary handling overridden methods like componentwillmount componentwillreceiveprops nt classical oo equivalents proprietary handlers purpose validation preventing people overriding base class methods others add actual functionality whatever ensure validation additional functionality factored class hierarchy special enhancers hinted bottom previous example possible program pure straight classes main challenge proprietary handlers allow multiple mixins redefine properties reactcompositecomponentwill attempt intelligently merge results okay factor helper utilities supply code mod automatically updates code uses mixins huge undertaking anyone takes shot please lock api related questions run ideas jeffmo sebmarkbage understand direction happy chat feasibility potential changes react core practical ways get started reply email directly view github", "d": "11/2013"}, {"body": "heads concerns regarding class support address many people become accustomed using oo inheritance tool primary means abstraction application worked java shop know talking personal opinion classical oo inheritance implemented many popular languages often best tool jobs let alone jobs situation approached even caution inheritance used within framework paradigm uses functional composition primary abstraction react certain patterns want prevent many strange things people come combining inheritance nt make sense addressed via simple composition also risk making mutation convenient might make sense start classes simply better syntax react component creation intentionally limiting use cases limiting inheritance depth making react base class methods final used react components course nonreact use classes would nt restricted", "d": "11/2013"}, {"body": "version ie problems support standards mode right quirks mode shows behavior seeing page add doctype force standards mode imagine want anyway", "d": "11/2013"}, {"body": "might confusing show box maybe new error box red could nice let something though would actually even cooler debounce nt parse editor content keypresses stop would avoid flashes combined would make much better experience", "d": "11/2013"}, {"body": "get line number error highlighting problematic line would nice", "d": "11/2013"}, {"body": "method killed soon sent iphone nov pm thomas aylott notifications githubcom wrote nt support getattributens setattributens hasattributens reply email directly view github", "d": "11/2013"}, {"body": "thinking using static list would probably better ajax given tutorial ajax loads static file updated description reflect", "d": "11/2013"}, {"body": "thank bringing try good job setting default propertiesmembers base classes avoid issue said objects checking nt always react components strings numbers detecting text etc great idea first checking let start making part regular test plan core diffs add new members", "d": "11/2013"}, {"body": "deoptimization mostly due dev affected prod builds also seems firefox etc deal undefined member access gracefully generally may important seems point view", "d": "11/2013"}, {"body": "think right fix layers basically adding transparent div top entire viewport capturing clicks simple way", "d": "11/2013"}, {"body": "pretty much well suggestion create sugar around common ui pattern could done listener document instead transparent div would need styling", "d": "11/2013"}, {"body": "cool idea make easy adding packagejson entrypoint app petehunt sound good let make sure sharable components work supports components also react plugins general", "d": "11/2013"}, {"body": "right think nt practical way get list components event handler attached currently way create plugin would dispatch event literally every element page", "d": "11/2013"}, {"body": "could pretty easily add additional event propagator look registered events stored inside conveniently stored registration name search way get click id need search previously registered ids match parent path click occurred", "d": "11/2013"}, {"body": "might even possible single change core would give access listeners particular type anyone build custom propagators match listener parent path click occurred", "d": "11/2013"}, {"body": "travis installs fresh every run pretty strange", "d": "11/2013"}, {"body": "ah legit bug transform fixes make fail let address separately", "d": "11/2013"}, {"body": "format used easier work react reason also could take without mentioning linkstate right also mentioned dom inconsistencies", "d": "11/2013"}, {"body": "since already object getdefaultprops copy items onto object instead way around ie difference copyproperties mergeinto also need stop putting props maybe open diff iirc pretty easy use receivecomponent", "d": "11/2013"}, {"body": "cc petehunt commits went easier look sure want think might happening fixing bug triggered behavior nt expecting look console end state example end event triggered bug end node still classes nt remove classes transition triggered happens example", "d": "11/2013"}, {"body": "used transitiongroup admit docs could clearer using examples think want set way transform applied happens presumably removed time transition back leave transition changes result transition see action", "d": "11/2013"}, {"body": "zpao yeah turns overlooked fact default opacity value looking documentation thought exampleenteractive supposed stay enabled course scenario exampleenter class would redundant since card nt back face reduced test case rotated card looks version seems want fixing problem moving translation cardenter nt translate well application anyhow wrapped head around timeline piece cake thanks", "d": "11/2013"}, {"body": "thanks", "d": "11/2013"}, {"body": "said irc jasmine supposed respect url query parameter filter test name never worked us would great feature", "d": "11/2013"}, {"body": "gruntcontribjasmine takes filter param sure guys using", "d": "11/2013"}, {"body": "current workaround manually wrap stuff like super ugly", "d": "11/2013"}, {"body": "could render right instantiating component instances pretty cheap mounting expensive part", "d": "11/2013"}, {"body": "wanting render children immediately ability easily render later maybe multiple times various places like html element documentfragment various meta programming stuff want ability completely vanilla jsx code dependency react", "d": "11/2013"}, {"body": "thumbsup", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "dupe", "d": "11/2013"}, {"body": "thanks", "d": "11/2013"}, {"body": "cc yungsters", "d": "11/2013"}, {"body": "redoing stuff related proptypes try get", "d": "11/2013"}, {"body": "chrome nt fire event range modified using arrow keys firefox", "d": "11/2013"}, {"body": "good idea pull request", "d": "11/2013"}, {"body": "lol might get someone else viable compile jsx js problem course way around write js view go back jsx tab correct behaviour", "d": "11/2013"}, {"body": "code talking", "d": "11/2013"}, {"body": "webdriver test runner", "d": "11/2013"}, {"body": "indicate characters christopher vjeux chedeau facebook engineer nov guido bouman notifications githubcom wrote trying run jekyll work docs ca nt get boot utf characters blog post jekyll ruby probably like tried setting lang variables already lang lcall luck yet reply email directly view github", "d": "11/2013"}, {"body": "quite possibly name real apostrophe problem past version ruby using like said problem past recently using think going need least see anyway hopefully big problem say post would help narrow", "d": "11/2013"}, {"body": "sorry guys rather incomplete error report error takes place stacktrace jekyll scan method line numbers afterwards ran without issues edit confirm emdash cause error replacing bare dash raised error another post happening ruby accept weird stuff", "d": "11/2013"}, {"body": "wow asleep morning completely forgot front language statements found checking locale", "d": "11/2013"}, {"body": "added tips wiki list", "d": "11/2013"}, {"body": "related", "d": "11/2013"}, {"body": "willfix", "d": "11/2013"}, {"body": "ping makes rather hard scan test output quickly tests fail", "d": "11/2013"}, {"body": "definitely felt pain could solved summary end test output ability run test time", "d": "11/2013"}, {"body": "new cleaner output good enough raw json", "d": "11/2013"}, {"body": "possible reprint failing test lines end otherwise happy current output", "d": "11/2013"}, {"body": "dupe", "d": "11/2013"}, {"body": "oops", "d": "11/2013"}, {"body": "rather way nt mind", "d": "11/2013"}, {"body": "think think forced clean force clean build artifacts modulecache part", "d": "11/2013"}, {"body": "zpao distinguish", "d": "11/2013"}, {"body": "benjamn situation would want clean remove", "d": "11/2013"}, {"body": "actually aware use cases maybe fine still means need tell people encounter problems might fixed whereas gives us way get effect verbal communication", "d": "11/2013"}, {"body": "going think probably also", "d": "11/2013"}, {"body": "closed", "d": "11/2013"}, {"body": "seems like behind latest version feel free reopen nt fix", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "coming", "d": "11/2013"}, {"body": "maybe fall back looking somebody familiar events would need look", "d": "11/2013"}, {"body": "fixed gets put prod little later today", "d": "11/2013"}, {"body": "want take go fixing think would good opportunity learn bit constrained subset internals", "d": "11/2013"}, {"body": "zpao yea give shot", "d": "11/2013"}, {"body": "use nonstandard get good possible invariants case would satisfied conditional test set right comparison string", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "mutatehtmlnodewithmarkup mutate document html error invalid target element operation mutatehtmlnodewithmarkup change attributes error invalid target element operation", "d": "11/2013"}, {"body": "starting think fullpage react nt worth supporting soooo complicated get right every browser different thoughts", "d": "11/2013"}, {"body": "petehunt googling issue seems readonly ie ca nt find anything trustful threads though maybe wait retire fix mutate mutating elements separately", "d": "11/2013"}, {"body": "ok msdn innerhtml property readonly col colgroup frameset html head style table tbody tfoot thead title tr objects reconciliation done rearranging nodes way desirable cause prevents flashing due stylesheet reappending see facebookreactpage", "d": "11/2013"}, {"body": "guess try power see bad eh", "d": "11/2013"}, {"body": "oldestbugevar mootools handles problem also effects firefox lt cases", "d": "11/2013"}, {"body": "something like already", "d": "11/2013"}, {"body": "zpao requires bit example take special care elements move around new ones previous would trigger new http request stylesheets example patch way hacky example looks like changes minimal worst think introduces one special case use whole page components branch without beautiful robust think anyway fine remove support whole page components react", "d": "11/2013"}, {"body": "remove support throw someone tries something dangerous", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "failing specs", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "break separate issues", "d": "11/2013"}, {"body": "keeps test runner running plan post fix test runner soon", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "fixed gets put prod little later today", "d": "11/2013"}, {"body": "run repo root sure solve issue reopen get bottom", "d": "11/2013"}, {"body": "update", "d": "11/2013"}, {"body": "maybe polyfill pointer events always like pointer events always available seems way better manage touch ouse events hand", "d": "11/2013"}, {"body": "would love enabled polyfill default seems like genuine barrier creating responsive componentsapps fri nov ben alpert notifications githubcomwrote maybe polyfill pointer events always like pointer events always available seems way better manage touch ouse events hand reply email directly view github", "d": "11/2013"}, {"body": "issues listening touch events always forget though zpao knows probably make work", "d": "11/2013"}, {"body": "think get rid initializetouchevents attach listeners elements handlers attached instead level", "d": "11/2013"}, {"body": "right tests test devonly", "d": "11/2013"}, {"body": "code", "d": "11/2013"}, {"body": "made lot easier find problem", "d": "11/2013"}, {"body": "still happening", "d": "11/2013"}, {"body": "try", "d": "11/2013"}, {"body": "worked add task", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "ship ed", "d": "11/2013"}, {"body": "feel free update examples make impressive", "d": "11/2013"}, {"body": "react frontpage prominent place native speaker dare time", "d": "11/2013"}, {"body": "sure english involved diff makes better though codemirror nt fan line", "d": "11/2013"}, {"body": "guess obvious api suppose obvious way keep asis still work opinions", "d": "11/2013"}, {"body": "either change thing", "d": "11/2013"}, {"body": "nice catch usually submit though firefox submit query weird", "d": "11/2013"}, {"body": "think always consistency browser default", "d": "11/2013"}, {"body": "browser default since account locales", "d": "11/2013"}, {"body": "ooh good point", "d": "11/2013"}, {"body": "expected behaviour please use prop number instead propnumber monday november john wu wrote hello react jsx reactdom var mycomponent reactcreateclass render function return lt div gt lt p gt thispropsfirstadder thispropssecondadder thispropsfirstadderthispropssecondadder lt p gt lt div gt var app lt mycomponent gt reactrendercomponent app documentbody two numbers passed props exception raised uncaught error parse error line xjs value either expression quoted xjs text reply email directly view github", "d": "11/2013"}, {"body": "sorry ignorance thanks help", "d": "11/2013"}, {"body": "seems gc works chrome", "d": "11/2013"}, {"body": "andreypopp right extra gc memory leak splitmapfiltermap ahead time save bunch allocations also adding prop probably speed transition bit well", "d": "11/2013"}, {"body": "ok good know might chromium issue something see first jsfiddle link experimenting different kinds clicking patterns fast slow", "d": "11/2013"}, {"body": "plievone little trash icon lower left dev tools click go gc looks ton different things like app memory available system etc etc believe optimize performance expense memory available", "d": "11/2013"}, {"body": "thanks time memory grows like even click gcicon many times chromium ubuntu fiddle extreme worried thinking using react long lived pages several hours large number realtime updates let see closing", "d": "11/2013"}, {"body": "ca nt run tests ie fixed", "d": "11/2013"}, {"body": "tests run", "d": "11/2013"}, {"body": "build expose reactutils browser use test", "d": "11/2013"}, {"body": "closing", "d": "11/2013"}, {"body": "zpao", "d": "11/2013"}, {"body": "good points zpao another place namespacing requested props would transform sounds like good idea first well may also suffer problems zpao mentioned", "d": "11/2013"}, {"body": "shripadk going wontfix based appreciate discussion though love hearing ideas people improving way react works keep coming", "d": "11/2013"}, {"body": "bump bite us next github sync since added param think remove zpao", "d": "11/2013"}, {"body": "still need document", "d": "11/2013"}, {"body": "actually", "d": "11/2013"}, {"body": "open briefly mentioned jsx gotchas references would go references", "d": "11/2013"}, {"body": "probably supported tagsattributes page well mention dom differences", "d": "11/2013"}, {"body": "easy landed", "d": "11/2013"}, {"body": "mavericks comes", "d": "11/2013"}, {"body": "arguments jsx js build throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit works mingw", "d": "11/2013"}, {"body": "cc benjamn likely commoner", "d": "11/2013"}, {"body": "working", "d": "11/2013"}, {"body": "fixed pull request", "d": "11/2013"}, {"body": "classset available reactaddonsclassset inlined transform time otherwise good", "d": "11/2013"}, {"body": "jump familiar yuidoc", "d": "11/2013"}, {"body": "someone tweeted docsets", "d": "11/2013"}, {"body": "vjeux nt see tweet related", "d": "11/2013"}, {"body": "kapeli nt yet agreed form documentation docsets looks like good target mentioned case someone wants try integrate react", "d": "11/2013"}, {"body": "case misunderstanding please note docset way package documentation already something searchable dash zeal docsets way generating documentation source files think issue", "d": "11/2013"}, {"body": "made changes back get", "d": "11/2013"}, {"body": "somebody wants tackle comma part go otherwise let close", "d": "11/2013"}, {"body": "componentdidmount nt take node", "d": "11/2013"}, {"body": "uses global removed", "d": "11/2013"}, {"body": "well mentioned", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "often needed discovered", "d": "11/2013"}, {"body": "danielmiladinov far understand better approach jetbrains would plugin specifically targetting jsx syntax since ide allows use language injections see feature request", "d": "11/2013"}, {"body": "circlecode agree would awesome feature however orthogonal question linting general jshint plugin particular jshint plugin shell make much light grateful whatever version jshint downloaded configurable options puts relevant error messages red squigglies relevant line numbers editor see error mouse squigglies handy editor already pretty good inferring using kind xml literal right middle javascript nt understand notion validforjsx xml already goes long way ensuring jsx least wellformed xml unless put jsx expression inside parentheses single root tag every starting tag either selfclosing corresponding close tag rest javascript syntax coloring goes completely crazy indicating something wrong missing convention valid jsx ie tag names correspond either global reactdom components custom components must visible current scope attribute names correspond component prop names attribute values correspond expressions containing variables current scope beginning describe jsx transform works nt", "d": "11/2013"}, {"body": "closing unless actual interest", "d": "11/2013"}, {"body": "benjamn noticed mean example examples folder yes", "d": "11/2013"}, {"body": "meh honestly nt care one especially since means would another step building", "d": "11/2013"}]