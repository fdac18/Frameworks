[{"title": "ember data model attribute another data model", "body": "newbie ember using ember ember data model project situation need call model another model eg response restapi video title blah blah description blah blah src blah blah favorite date note good video title blah blah description blah blah src blah blah queue queuedate time day video title blah blah description blah blah src blah blah model ember data beta version appvideodsmodelextend title dsattr string description dsattr string src dsattr string appfavoritedsmodelextend date dsattr string note dsattr string video dsattr raw appqueuedsmodelextend queuedate dsattr string time dsattr string video dsattr raw apprawtransform dstransformextend deserialize function serialized return serialized serialize function deserialized return deserialized using transform get video data favorite queue model working fine problem change video data favorite binding video model displaying queue video part want see change need refresh page video favorite queue models using page usage like appfavoritedsmodelextend date dsattr string note dsattr string video appvideo appqueuedsmodelextend queuedate dsattr string time dsattr string video appvideo solution able change api response", "num": "3823", "d": "11/2013"}, {"title": "bug missing latest stable versions", "body": "released stable versions missing downloads reason route longer supported please say page", "num": "3821", "d": "11/2013"}, {"title": "documentation missing removetodo function todocontroller actions", "body": "following example getting started accepting edits chapter missing removetodo function think shown example", "num": "3820", "d": "11/2013"}, {"title": "twitter bootstrap modal work", "body": "emberjs versions following twitter bootstrap model work eg confirmdeletenotedialog modal show works emberjs versions", "num": "3819", "d": "11/2013"}, {"title": "arrayproxy length reflect content length", "body": "making multiple modifications arrayproxy object inside function proxy fails update length confusing part single performed content length update correctly behavior best inconsistent made js bin demonstrate problem may related sure", "num": "3818", "d": "11/2013"}, {"title": "abandon ruby", "body": "skipped first three search result pages ruby may already issue switching nodejs build test system like grunt node capable stuff ruby way lose dependency would comply de facto standard almost js libraries frameworks use node building testing course pretty minor stand way making ember even awesome already smile", "num": "3816", "d": "11/2013"}, {"title": "embera object returns object", "body": "might completely crazy expect work way way works happy submit pr cc stefanpenner wagenet rjackson", "num": "3815", "d": "11/2013"}, {"title": "logtransitionsinternal working latest canary stable", "body": "link jsfiddles demonstrate point jsfiddle ember logtransitionsinternal working jsfiddle ember logtransitionsinternal working jsfiddle ember canary", "num": "3813", "d": "11/2013"}, {"title": "unable render nested loading route", "body": "minimal example fails render exception happens outer template tries evaluate property router", "num": "3810", "d": "11/2013"}, {"title": "setting default select fail warning", "body": "fiddle demonstrating issue realize may bug failed number matching string ids select content guess default emberdata took digging code figure going wrong know selects getting overhaul least need one think assertion type item send value match types item value path could save people time frustration thoughts clear happens line", "num": "3805", "d": "11/2013"}, {"title": "router location object provided container", "body": "additional location objects easy config resolvable", "num": "3803", "d": "11/2013"}, {"title": "yield default template components", "body": "template ember component exist default using precompiled yield template", "num": "3802", "d": "11/2013"}, {"title": "access queryparams controller", "body": "disclaimer definitely ember newbie wanting use experimental query params feature documented latest canary build feature sort seems working trying get access query params controller populate field containing selected value emberselect documentation page claims able get access query params object various route methods follows according docs parameter setupcontroller method however parameter undefined documentation also seems wrong methods well instance says model method query params object second parameter instead passed two parameters get query params within transition object passed second param third sure documentation issue code issue need way access query params inside controller thought could setupcontroller nt seem work fixessuggestions would appreciated", "num": "3801", "d": "11/2013"}, {"title": "incorrect rendering using control helper inside block", "body": "first table renders incorrectly displaying last value iteration loop remove block renders values correctly expected behaviour", "num": "3798", "d": "11/2013"}, {"title": "send method propagate controller route case render", "body": "summary created reusable view imported index template soon added dom enabled typeahead user clicks typeahead options update method indexcontroller called sending event selecteditem propagates actions indexroute actions selecteditem hook well see use render tag import another template posts use view click typeahead options displayed even though event triggered selecteditem propagate postsroute actions selecteditem error message displayed uncaught error nothing handled action selecteditem see issue work around also observed action event propagation happening rendering template thisrender method", "num": "3797", "d": "11/2013"}, {"title": "functionality difference render thisrender", "body": "provision pass model render tag thisrender route api", "num": "3796", "d": "11/2013"}, {"title": "substates url updates eager possible", "body": "presently urls nt update transition fully completed even loading substate entered nt ideal ux ideally templates updated able refresh transition destination route loaded parameters present preferable eagerly update url note likely possible transition initiated via stringnumeric param eg since transition promisey context might loaded data necessary serialize route behavior remain today cc kselden", "num": "3795", "d": "11/2013"}, {"title": "ember starter kit script link incorrect", "body": "hi small typo script link current starter kit indexhtml file links actual file name lt v omitted", "num": "3794", "d": "11/2013"}, {"title": "bugfix actions losing predefined controller functions", "body": "following action hash action ignored defined function controller prototype via according lukemelia commit supported deprecated behavior however appears test intended apply functions specifically defined controller perhaps functions prototype would advocate actions prefer controller function case directly defined object inherited prototype generally agreed put together pr", "num": "3793", "d": "11/2013"}, {"title": "document jquery modules relied upon", "body": "would allow people custom build jquery would like", "num": "3791", "d": "11/2013"}, {"title": "dynamic computedproperty dependencies", "body": "javascript emberobjectcreate resolves true c removed dependency list property briefly mentioned year jsconf talk marious gundersen", "num": "3790", "d": "11/2013"}, {"title": "behaviorscope yielded component different depending whether component template provided", "body": "difference two jsbins latter one defines template layout guess component confusing breaks least expectations scope works within component part solution also consider whether want support something like requested stackoverflow would seem prefer previous jsbin concept scope", "num": "3789", "d": "11/2013"}, {"title": "object path error message broken", "body": "trying modify property objectcontroller nt exists see error message little mistake determining path last char truncated javascript function setpath root path value tolerant var keyname get last part path keyname pathslice pathlastindexof get first part part path pathslice pathlength unless path look first part get root path root getpath root path keyname keynamelength throw new error passed empty path root tolerant return else throw new error object path path could found destroyed return set root keyname value", "num": "3786", "d": "11/2013"}, {"title": "reopen swizzles existing instances next instance created", "body": "class override existing method instances class created prior use new implementation another instance class created seems prototype nt updated javascript var robot emberobjectextend status online var robot robotcreate true robotget status online emberobjectreopen get function return offline still true robotget status online robotcreate still true robotget status online prototype gets changed including robot get emberobjectcreate false equals offline robotget status online many pseudoclass js libraries behavior guessing design since unintuitive could lead hard track bugs since next instance could created varying times", "num": "3783", "d": "11/2013"}, {"title": "emrun methods destroyed objects", "body": "javascript var mycontroller emcontrollerextend actions dostuff function emrundebounce refresh refresh function thisisdestroyed return thisset content somewhere code tests appreset use pattern calls experience set destroyed object errors could fix async methods execute destroyed objects cc ebryn", "num": "3780", "d": "11/2013"}, {"title": "nested creates multiple metamorphstarts id", "body": "template nested constructs conditions used toggle details box due complexity template nested toggling inner handlebar inserts another tag id dom sure whether intended reproduce issue visit plunkr toggle inner seconds seconds right first toggle one see exists twice seem problematic example project second toggle removes unrelated dom elements reference continuation", "num": "3779", "d": "11/2013"}, {"title": "everyby called collection makes new request", "body": "works expected", "num": "3773", "d": "11/2013"}, {"title": "nested component blocks precompiled templates nt work", "body": "using emberrails encountered bug patch code handlebars compiler nt run precompiling templates patch introduced commit", "num": "3772", "d": "11/2013"}, {"title": "emberapplicationcreate breaks inputs ios", "body": "steps reproduce visit jsfiddle ios mobile safari tap input result pane type characters tap input expected outcome able continue typing actual outcome unable continue typing additional info may may useful noticed first tap step element responds jquery second tap step responds somehow lost focus even though appears focused keyboard remains onscreen", "num": "3771", "d": "11/2013"}, {"title": "emberselect view updates value binding change event", "body": "certain truly bug current behavior nt match expectations emberselect view property bound computed property custom setter behavior view initializes setter invoked immediately test case expected result would updated user changes selected value actual result changed almost immediately assume sideeffect emberselect initialization workaround replace emberselect view custom component", "num": "3770", "d": "11/2013"}, {"title": "loadingerror templates replaced default templates using named outlets nested routes", "body": "exiting loadingerror route template removed default route template nt added back far tell happens templates rendered named outlet route context change like model app transitioning nested route working example breaking example difference breaking example uses named outlet way able patch sure much classier solution explanation patch nt know nonnamed outlets replacing correctly transition named outlets change partitionhandlers router check route loadingerror routes exiting route context nt changed say context changed anyway rendertemplate function gets called like said classy solution please tell better way need named outlets nested routes twopane app", "num": "3768", "d": "11/2013"}, {"title": "routermap similar routes", "body": "two root routes share child routes last one declared overwrites previous ones case routes child routes except renders plan programs program route track trackindex route routes gone addition click track displays track template however linkto programs routes back planprograms guessing caused routing issue design way resolve hierarchical routes structure layers deep root changing plan track ideas appjs code javascript app emberapplicationcreate logtransitions true approutermap function put routes thisresource track function thisresource programs function thisresource program path programid thisresource plan function thisresource programs function thisresource program path programid appprogramsroute emberrouteextend model function return programs appprogramroute emberrouteextend model function params return programsfindby id parseint paramsprogramid var programs id name id name templates handlebars lt div class navbar gt lt div class navbarinner gt lt class brand href gt routetester lt gt lt ul class nav gt lt li gt linkto plan plan linkto lt li gt lt li gt linkto track track linkto lt li gt lt ul gt lt div gt lt div gt lt p gt outlet linkto programs plan programs linkto outlet linkto programs track programs linkto outlet lt ul gt lt li gt linkto program name linkto lt li gt lt ul gt outlet id name lt ul gt", "num": "3767", "d": "11/2013"}, {"title": "bugfix emberget returns length null", "body": "noticed first looking problem ember model would break hasmany relations apparent reason related issue first parameter passed toplevel path lookup immediately relayed finds property rather helpful lot cases also return unexpected values situation depending number frames page windowlength case returns integer always even application using frames extension like readability chrome extension inject page increases number sure anything want fix directly framework let know either way wanted bring find existing issue spent time tracking hopefully someone else looking problem save", "num": "3760", "d": "11/2013"}, {"title": "collection helper look class container", "body": "container following work", "num": "3751", "d": "11/2013"}, {"title": "embercomputedmatch could efficient", "body": "current implementation uses stringmatch regexp returns array matches double negates produce boolean could use regexptest string returns boolean directly nt bother allocating matches array etc good reason way", "num": "3746", "d": "11/2013"}, {"title": "transition new route template bad closing tag causes internal exception", "body": "ran case bad closing tag template loaded another route ember failed particular case accidentally closed problem occurs first time two templates loaded reload second route template page render fine stack uncaught typeerror read property parentnode null prependfunc dommanagerprepend insertviewcollection embermergeensurechildrenareindom embercontainerviewemberviewextendensurechildrenareindom deferredactionqueuesflush backburnerend backburnerrun emberrun anonymous function jqueryeventdispatch jqueryeventaddelemdatahandle", "num": "3744", "d": "11/2013"}, {"title": "emcomputedfilterby react change collection", "body": "given expected emcomputedfilterby detect pendingdistribute change businesscontactspendingdistribute get updated businesscontact pendingdistribute change works source code think", "num": "3742", "d": "11/2013"}, {"title": "emberjs todomvc chrome firing objectcontroller action multiple times", "body": "following getting started guide ember come parts deal editing removing items come across problem seems occur chrome firefox custom component edittodo events linked action acceptchanges acceptchanges action fires removetodo action item title empty acceptchanges function thisset isediting false emberisempty thisget modeltitle thissend removetodo else thisget model save removetodo function var todo thisget model tododeleterecord todosave edit item delete text press enter switch focus item gets deleted works perfectly firefox chrome however acceptchanges action firing twice delete title press enter dom updates remove item acceptchanges action fired presumably loses focus jsbin shows problem essentially code guide console logs edit item bbb delete text press enter data ccc deleted also remains dom longer interact item items remaining count wrong open ember inspector developer tools see data left item aaa wondering bug ember emberdata chrome expected behaviour checking js using chrome version", "num": "3741", "d": "11/2013"}, {"title": "regarding warning message running production build ember localhost wo nt receive detailed error messages want full error messages please use nonminified build provided ember website", "body": "tried running emberjs prod version still getting running production build ember localhost wo nt receive detailed error messages want full error messages please use nonminified build provided ember website ran almost emberjs prod version get rid message url localhost always get", "num": "3739", "d": "11/2013"}, {"title": "calling components methods outside", "body": "hi building complex components moment including composite components hit roadblock extreme isolation components live several cases nt need components trigger action controller controller needs trigger behaviour change component problems components nt know controller controller creating components either defined template kind solved problem subclassing embercomponent class offer way messages get components new component subclass breaks purpose isolation components nt know outer controller less invasive options found make component methods calls outside cache component name instance pairs global array like appcomponents call component method appcomponents name method trigger events outside register handle components however case passing eventsource object component often controller like mycomponent eventsourcecontroller question could solve problem elegant less invasive way possible components achieving composite components using components like lego pieces seems impossible moment see achieve goal without breaking components isolation input ideas solutions discussion welcome richard", "num": "3738", "d": "11/2013"}, {"title": "input type file breaks ancestor element action", "body": "security reasons click event button must propagate way top browser handles opens system file picker called automatically action helper file picker nt open attached ancestor dom perhaps way handle scenario use eventmanager view described issue unavoidable using happy describe limitation relevant sections docs demonstrate workaround would far nicer clicks would propagate reduced following test case using ember canary fails parent clicking choose file button nothing removing fixes problem discovered using variation emberjscom modal cookbook recipe create file upload modal use case found added modal create file upload modal removing actions divoverlay divmodal causes file picker work actions used catch clicks outside modal dialog dismiss", "num": "3737", "d": "11/2013"}, {"title": "emberenumerable breaks nan", "body": "super simple reproduction hardcode array get false use array normal numbers get true", "num": "3736", "d": "11/2013"}, {"title": "input helper nt accept arbitrary attributes", "body": "well accepts silently ignores instead passing attributes compiled html following valid attributes also bunch browserproprietary attributes like currently helper accepts following attributes ideally like make input helper simply pass hash arguments gets attributes however acceptable let least whitelist valid attributes get feedback start working pr", "num": "3733", "d": "11/2013"}, {"title": "emberselect multipletrue clears selectionbinding content loaded asynchronously", "body": "emberselect gets options asynchronously clears selectionbinding preserve selection contentbinding comes ember data starts empty asynchronously populated time options selection cleared think caused code jquery object always truthy conditional always executed changing fix issue", "num": "3732", "d": "11/2013"}, {"title": "wrapper component parameters working precompiled templates", "body": "let say component template simply contains would use templates wrapstuff stuff wrap wrapstuff ember worked perfectly fine precompiled handlebars files however betacanary raising exception see move template uses component script tag instead precompiled template works fine also pass somethinganything component eg works fine precompiled script tag exception raised code problem undefined emberhandlebarsresolvehelper function container name container nameindexof tracing back precompiled template triggering call follows use component without parameters looks like work done containerrenderables feature caused sideeffect ember overridden used one built handlebars containerrenderables work however ember overrides see adding arbitrary parameter component helper works", "num": "3728", "d": "11/2013"}, {"title": "tr elements inside collectionview nt get cleaned", "body": "using collectionview nested tr elements element removed collection nt remove associated html though objectsviews successfully cleaned jsbin dump press delete beside one colors remove object update list update table", "num": "3723", "d": "11/2013"}, {"title": "buggy behavior using embercomputedsort", "body": "docs provide example using dependent key passed nt able get work instead get wildly erratic behavior see js bin", "num": "3720", "d": "11/2013"}, {"title": "appreset clear observers", "body": "fiddle agree bug try work submitting failing test andor pr like add note testing page caused inconsistencies tests thanks amir", "num": "3718", "d": "11/2013"}, {"title": "returning route containerview throws exception", "body": "transitioning route displays containerview navigating away route returning results containerview rendered exception assertion failed calling set destroyed object thrown jsbin reveals issue", "num": "3716", "d": "11/2013"}, {"title": "new line inserted component precompiled", "body": "pretty sure right project report bug since cuts across ember ember rails handlebars need help triaging see everything working fine however equivalent emberrails app source newline beings inserted component call inspecting source seems coming javascript embertemplates componentsmycomponent emberhandlebarstemplate function anonymous handlebars helpers partials data thiscompilerinfo gt helpers thismerge helpers emberhandlebarshelpers data data var buffer hashtypes hashcontexts escapeexpressionthisescapeexpression hashtypes hashcontexts databufferpush escapeexpression helperstriagemustachecall yield hash contexts types id hashcontexts hashcontexts hashtypes hashtypes data data databufferpush n lt return buffer unsure handlebars compiler bug ember bug emberrails bug help getting right hands would appreciated bug prevents components used inside whitespace sensitive context", "num": "3715", "d": "11/2013"}, {"title": "promiseproxy nt rethrow rejections correctly", "body": "fml", "num": "3714", "d": "11/2013"}, {"title": "promiseproxymixin createwithmixins nt play nicely", "body": "works correctly surprisingly nt work model never becomes even promise fulfills", "num": "3713", "d": "11/2013"}, {"title": "stefan needs make container work values promises", "body": "", "num": "3712", "d": "11/2013"}, {"title": "sortablemixin work whole array changes", "body": "arraycontroller models whose property sortablepropertie computed change dependent single property another model belongto happens every object gets inserted binary search algorithm function properly anymore whole array became unsorted", "num": "3706", "d": "11/2013"}, {"title": "emberobjectcreate undefined fails breaks semver", "body": "throws assertion seems break semver said case assertion rather runtime exceptio additionally comparison nt really congruent sorta feel work fine", "num": "3701", "d": "11/2013"}, {"title": "computed properties inherit volatility setting dependencies", "body": "example total property volatile inference subscriptions observing properties handled way subscriptions volatile properties practice let say developing library contains object property depends volatile property b inferred volatility b know future able make b cacheable happens nt need go back delete volatility setting lazy another library b semantical meaning described behavior undesirable ember least warn new developers try include volatile property dependency list", "num": "3700", "d": "11/2013"}, {"title": "emberstate moved plugin", "body": "referencing latest ember build get error console uncaught error emberstate moved plugin code latest build brings error ember module ember function throwwithmessage msg return function throw new embererror msg", "num": "3699", "d": "11/2013"}, {"title": "linkto helper nested routes", "body": "hi folks trying diagnose problem route structure click linkto helper directly correctly highlights parent reload page ember restores nested route lose highlight routes approutermap function example linkto application template maps expect ideas thanks time", "num": "3698", "d": "11/2013"}, {"title": "arrayproxy length sync", "body": "ap content set observer another property length updated following code demonstrates issue", "num": "3694", "d": "11/2013"}, {"title": "observer property parentviewparentview working", "body": "observing property one level parentview chain seem work used work earlier release candidates javascript appview embercontainerviewextend childviews foow foo embercontainerviewextend childviews barw jsbin embermeta appview shows chainwatchers undefined", "num": "3693", "d": "11/2013"}, {"title": "emkeys behaves differently production", "body": "use emberjs emkeys returns expected keys instance object use emberprodjs emkeys return keys instance user interacted form value key bind nt able found evidence emkeys culprit nt know start digging help guidance much appreciated", "num": "3691", "d": "11/2013"}, {"title": "inconsistent reference handlebars", "body": "line references global whereas everywhere else referred via", "num": "3687", "d": "11/2013"}, {"title": "ca nt send action applicationroute activate", "body": "hi machty reason possible send events activate applicationroute routes seem work fine though see jsbin thanks", "num": "3685", "d": "11/2013"}, {"title": "need handling promise rejection case applicationroute", "body": "promise returned model hook causes transition halt till either resolution rejection promise occurs valid case applicationroute error hook provide applicationroute attempt route transition via transitionto made infinite loop occurs since transition occurs via applicationroute promise rejection occurs fine case route extentions", "num": "3684", "d": "11/2013"}, {"title": "computed property stops firing predictable number times", "body": "strange one indeed reproduce press button times time every time fail trigger recalc associated cp without throwing errors", "num": "3681", "d": "11/2013"}, {"title": "insertnewline event fires twice firefox", "body": "noticed firefox nt tested versions yet insertnewline event textfields textareas fired twice try jsfiddle fine chrome", "num": "3679", "d": "11/2013"}, {"title": "observes firing property nt change", "body": "model property controller setup default setupcontroller observer fire js app emberapplicationcreate appindexroute emberrouteextend model function return appindexcontroller emberobjectcontrollerextend nothingchanged function consolelog weird observes nothing reproduce open fiddle see weird console expected behavior", "num": "3676", "d": "11/2013"}, {"body": "seems like good stackoverflow question try keep issue tricky specifically issues qa would recommend cross linking stack overflow question issue", "d": "11/2013"}, {"body": "downloads github repository deprecated downloaded", "d": "11/2013"}, {"body": "adelrosarioh guides actually maintained website repo could submit pull request repo fix issue", "d": "11/2013"}, {"body": "yes thanks", "d": "11/2013"}, {"body": "really ember bug mate tell bootstrap modals work fine using beta", "d": "11/2013"}, {"body": "give jsbin example also using custom view using", "d": "11/2013"}, {"body": "seems like good stackoverflow post bug found reopen", "d": "11/2013"}, {"body": "need move super call making modifications content init use init event say would mutating proxy target init method", "d": "11/2013"}, {"body": "worked bit seems adding proxy content inside event callback works well made js bin demonstrate solution", "d": "11/2013"}, {"body": "kselden thanks pointing event discovered solution independently comment came seems work well modifying target object proxy use case using proxy object intercept items added array persist inmemory cache backed network storage hooking proxy cache cache contains anything belongs proxy immediately tries populate thus modification target object inside method", "d": "11/2013"}, {"body": "also move manipulation super call like", "d": "11/2013"}, {"body": "planning move build node based build solution grunt unfortunately wont suffice actual build system various efforts begun see comes deployment release code remain ruby development depending node seems reasonable also sort point brought forums issue try keep issues clean proposals", "d": "11/2013"}, {"body": "oh sorry nt know", "d": "11/2013"}, {"body": "way suggest would bring closer ruby method definitely like api standpoint return anything array seems bizarre kind change would seem bug fix unsure would considered breaking change guess depends documentation states", "d": "11/2013"}, {"body": "seems totally strange unless history exist nt know feels like bug", "d": "11/2013"}, {"body": "would necessarily expect return array length similar native array would still work proposed", "d": "11/2013"}, {"body": "expected result although point embera transform arrays ember arrays prototype extensions", "d": "11/2013"}, {"body": "problem check flag nt work since check moved routers init method flag works javascript init function thisrouter thisconstructorrouter thisconstructormap emberk thisactiveviews thissetuplocation get namespace logtransitionsinternal thisrouterlog emberloggerdebug", "d": "11/2013"}, {"body": "believe resolved", "d": "11/2013"}, {"body": "landed thanks rjackson", "d": "11/2013"}, {"body": "thanks reporting work done", "d": "11/2013"}, {"body": "nateredding setupcontroller also enabling feature flag query params using feature documentation correct would really help could setup jsbin something like", "d": "11/2013"}, {"body": "stumble upon fact query params modelquery object wish named queryparams consistency oh well still seems misdocumented however setupcontroller looks like", "d": "11/2013"}, {"body": "also wanted check query params slated official release sometime near future may want depend going stay experimental state unforeseeable future", "d": "11/2013"}, {"body": "nateredding must something wrong setup queryparams get third argument setupcontroller could reproduce issue jsbin would helpful easier nail thing going wrong yes think make next release rjackson", "d": "11/2013"}, {"body": "added third parameter named queryparams always undefined however even though modelquerystatus defined query parameters seems like simply matter incorrect documentation try set jsbin later think still needed", "d": "11/2013"}, {"body": "sure still believe bug end jsbin showing setting things would help lot mon nov pm nateredding notifications githubcomwrote added third parameter named queryparams always undefined however even though modelquerystatus defined query parameters seems like simply matter incorrect documentation try set jsbin later think still needed reply email directly view github", "d": "11/2013"}, {"body": "cc alexspeller", "d": "11/2013"}, {"body": "nateredding query params definitely work must something wrong please double check documentation still trouble post code look", "d": "11/2013"}, {"body": "nateredding query params likely official release soon definition soon", "d": "11/2013"}, {"body": "definitely nt broken leave bugs code hook called properly params change betting declaring query params properly route please reread docs carefully ensure configured routes correctly", "d": "11/2013"}, {"body": "nateredding possible specify queryparams parent resource specify queryparams children resources hoping query params inherited parent case yes children get proper model hooks routes message tells note nt specify query params given route parameters passed route hooks remains unchanged", "d": "11/2013"}, {"body": "closing since sounds pretty definite bug", "d": "11/2013"}, {"body": "may related scoping issue unsure would use helper opposed using option please note removed see", "d": "11/2013"}, {"body": "switched render helper solved issue", "d": "11/2013"}, {"body": "within helper flow action controller rendered parent controller template render embedded controller target usually router router tries sending action current route bubbles route hierarchy action sent route associated rendered controller unless application happens route", "d": "11/2013"}, {"body": "thanks help", "d": "11/2013"}, {"body": "problem barbareek good luck", "d": "11/2013"}, {"body": "barbareek thanks raising query mind quite long time rendering different templates model different templates set explicitly whereas render template via helper able provide model template damn easily believe inconsistency addressed would like go favor pr seems right would like hear thoughts community going", "d": "11/2013"}, {"body": "warned changes made would break existing apis otherwise would break semver cc machty", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "affect preventing url routeless state done something like javascript approutelessroute emberrouteextend beforemodel function transition transitionmethod null routeless state suggested", "d": "11/2013"}, {"body": "selvag keep mind nt affect", "d": "11/2013"}, {"body": "yeah definitely want make sure still nt change url models redirects happen", "d": "11/2013"}, {"body": "wagenet kinda contradicts intent though changing url eager async transition parameters present url already generated still guarantee one model hooks wo nt redirect elsewhere stefanpenner kselden thoughts", "d": "11/2013"}, {"body": "hmm definitely discuss feel like people may relying current behavior suspect app verify", "d": "11/2013"}, {"body": "could substatesonly thing ie change url loadingerror state entered rather eagerly updating url across board", "d": "11/2013"}, {"body": "believe fixed could redownload confirm", "d": "11/2013"}, {"body": "confirmed starter kit appears correct", "d": "11/2013"}, {"body": "bcardarella known limitation strategy took including deprecated support old behavior change suggesting would surprising behavior app developerdefined controller class hierarchies would suggest instead add flag opt deprecated behavior removed anyway open thoughts others including wycats strong proponent hash approach", "d": "11/2013"}, {"body": "considering guides say supposed use hash current reference controller functions used actions might use action name common get unexpected function controller used instead action confusing unfamiliar history actions", "d": "11/2013"}, {"body": "hmm seem like problem lukemelia confused ca nt check first use exists fall back controller methods", "d": "11/2013"}, {"body": "wagenet perobject basis suggesting going way target chain actions going deprecated behavior action handled would consistent expected behavior would challenging implement given current apis think allowing people opt deprecated behavior would simpler cleaner futurelooking", "d": "11/2013"}, {"body": "fix easily addresses issue cases pr discussion", "d": "11/2013"}, {"body": "bcardarella sure", "d": "11/2013"}, {"body": "ok later tonight", "d": "11/2013"}, {"body": "shortterm workaround anyone running would add action handler controller simply returns let action bubble", "d": "11/2013"}, {"body": "lukemelia volunteering matter running tests custom build seeing fails", "d": "11/2013"}, {"body": "yes assign ongoing basis think would want tests run necessary custom build jquery", "d": "11/2013"}, {"body": "good question think might want consider changing official dependency subset jquery run tests run subset able run full thing theory could also make tests thought helpful", "d": "11/2013"}, {"body": "cc rjackson", "d": "11/2013"}, {"body": "mbixby although cool idea bug opening discourse discussion would appropriate", "d": "11/2013"}, {"body": "duplicate", "d": "11/2013"}, {"body": "failing test case curious javascript test reopening class immediately update prototype function var base emberobjectextend status offline base basecreate var robot baseextend status online robot robotcreate basereopen get function return unknown ok baseget status unknown existing instances reopened class immediately get prototype changes ok robotget status unknown existing instances inherited reopened class immediately get prototype changes", "d": "11/2013"}, {"body": "known quirk tl dr nt instances created likely documented warned", "d": "11/2013"}, {"body": "initially thought maybe blow away existing queues reset likely going mega confusing suspect emrun perform isdestroyed objects unfortunately option kselden thoughts", "d": "11/2013"}, {"body": "stefanpenner hmm think blowing existing queues confusing simple way app want", "d": "11/2013"}, {"body": "tchak currently undefined area seen people use queues explicitly around mitigate currently issues reset within admit looked closely usages may error", "d": "11/2013"}, {"body": "stefanpenner another maybe related issue fact something like app recreated wired state like view rerendered actions registered tried wrap creation help adding delay ms emrunlater helps almost thinking could help return promise method app resolves app completely cleared maybe", "d": "11/2013"}, {"body": "ya need ensure resetdestroycreate occur independent runloops", "d": "11/2013"}, {"body": "stefanpenner plan needs done find someone else", "d": "11/2013"}, {"body": "hi ryrych using ember data bug tracker", "d": "11/2013"}, {"body": "thanks", "d": "11/2013"}, {"body": "almost certainly precompiling templates older version embertemplatecompiler update embersource something like go away make sure clear assets cache make sure everything getting fully reprecompiled close ends case", "d": "11/2013"}, {"body": "would go long way giving people information happens", "d": "11/2013"}, {"body": "agreed likely needs happen gets released", "d": "11/2013"}, {"body": "closing since merged still issues let us know", "d": "11/2013"}, {"body": "stefanpenner may interest", "d": "11/2013"}, {"body": "update realized binding behaves correctly provides satisfactory workaroundsolution perhaps value binding behave way", "d": "11/2013"}, {"body": "cc machty", "d": "11/2013"}, {"body": "specific substates seems like happening even slow promises nt involved confirm", "d": "11/2013"}, {"body": "fiddle", "d": "11/2013"}, {"body": "nested resources nt namespaced automatically think want manually like javascript approutermap function thisresource track function thisresource trackprograms function thisroute program thisresource plan function thisresource planprograms function thisroute program take look nested resources section routing docs want actually share route classes sure possible", "d": "11/2013"}, {"body": "xtian right right ca nt share plans discussion forward movement yet might good see proposals related forums start new one", "d": "11/2013"}, {"body": "invalid html nt something fix said future htmlbars project could likely offer improved syntax validation", "d": "11/2013"}, {"body": "ran exact issue agree stefanpenner nt something handlebars fix however ticket nt exist would taken lot longer find error would possible add check point throw different error adds may malformed html would big help development would added handlebars ember happy put together pull request", "d": "11/2013"}, {"body": "exactly hope created ticket better error message nov pm joel kallman notifications githubcom wrote ran exact issue agree stefanpenner nt something handlebars fix however ticket nt exist would taken lot longer find error would possible add check point throw different error adds may malformed html would big help development would added handlebars ember happy put together pull request reply email directly view github", "d": "11/2013"}, {"body": "thumbsup joelkallman stumbling ticket saved bunch time troubleshooting day", "d": "11/2013"}, {"body": "joelkallman filmknurd saved bunch time", "d": "11/2013"}, {"body": "currently nt ability since htmlbars future successor handlebars full dom parsing provide sort highly useful feedback", "d": "11/2013"}, {"body": "tb failing jsbin would help lot description looks like trying ought work", "d": "11/2013"}, {"body": "tb put jsbin together seems work might missing something could please take look cc hjdivad", "d": "11/2013"}, {"body": "nt looked yet playing around jsbin definitely seems weird also behavior exhibited safari chrome", "d": "11/2013"}, {"body": "mbracero looks like fired safarichrome press enter clearing title entry seems like desired behavior since action triggered twice causing amounts race condition seem strange though", "d": "11/2013"}, {"body": "mbracero thanks creating issue question probably done sooner thanks looking rjackson nt like ignoring weird behaviour tutorials case done something fundamentally wrong", "d": "11/2013"}, {"body": "yeah error message telling use dev build dev environment working intended specific request", "d": "11/2013"}, {"body": "message intentional using production version prod portion emberprodjs means going using localhost want message would need use emberjs debug version", "d": "11/2013"}, {"body": "way first method breaks component isolation inspired work done emberbootstrap components author solve problem capable triggering methods inside components outside", "d": "11/2013"}, {"body": "rlopes would make good stack overflow question discuss post please feel cross link tag posts accordingly additionally providing concrete examples help provide context used frame proper solution", "d": "11/2013"}, {"body": "record another way access component use emberviewviews name name view name gave component however feel dirty make calls even controller", "d": "11/2013"}, {"body": "strongly suggest reaching around globals accomplish tasks likely lead much sadness mentioned solid examples foster good discussion discourse stackoverflow great places discussion", "d": "11/2013"}, {"body": "thanks trying luck copied question stack overflow", "d": "11/2013"}, {"body": "mentioned modal cookbook issue", "d": "11/2013"}, {"body": "joefiorini ok found causes code see unfortunately result guess could check make sure value something undefined", "d": "11/2013"}, {"body": "come several times current prescribed mechanism add additional bindings see said always advocate stuff working would interesting hearing trek tomdale opinion changed", "d": "11/2013"}, {"body": "ember early days late remember decision stick attribute bindings use newer attributes looking observers set attribute binding wary expanding default bindings include possible attributes default", "d": "11/2013"}, {"body": "right creating passed options helper", "d": "11/2013"}, {"body": "jamesotron curious stops specifying html apart values attributes data driven magically bound", "d": "11/2013"}, {"body": "wound since helper kind expected work", "d": "11/2013"}, {"body": "jamesotron ok imo always extend create ideal stefanpenner point agree things work", "d": "11/2013"}, {"body": "jamesotron input helper wraps textfield reopen class suggestion work done globally app", "d": "11/2013"}, {"body": "imo allowing people use attributes introduce places nt work suggest thing always say nobody taken want ember ship even attributes bound default start enumerate every attribute explanation wo nt come expected behavior need support example maxlength added input whose already inserted bound value longer truncate value field controller part old value lost need cache truncating undone", "d": "11/2013"}, {"body": "trek assume mean unexpected behavior", "d": "11/2013"}, {"body": "inclined go trek one leave open bit longer see anyone else wants chime", "d": "11/2013"}, {"body": "indeed mean expected behavior new behavior would people expect ember include around new attributes", "d": "11/2013"}, {"body": "let move discuss discussion", "d": "11/2013"}, {"body": "needs lot work current line thought deprecate introduce new simpler version want complex behavior customize", "d": "11/2013"}, {"body": "machty possible bug containerrenderables feature", "d": "11/2013"}, {"body": "bitten trek one apps trouble reproducing oh think realized something precompiling templates might probably version ember template compiler nt handlebars hacks would explain seeing seeing assuming using ruby build tools could try updating equivalent whichever tools using", "d": "11/2013"}, {"body": "thank originally using emberrails default release version embersource wanted use features canary builds command fetch canary builds emberemberdata idea gem included additional files eg template compiler would incompatible canary build embersource still little behind canary builds looks like template compiler current enough fixed problem completely might submit pr emberrails repo make sure documentation clearly states want run betacanary builds done addition settingt correct embersource version thanks tons time hard work guys putting ember", "d": "11/2013"}, {"body": "machty compiler version issue would explain could never isolate produce jsbin", "d": "11/2013"}, {"body": "joepym bug setting collectionview incorrectly ca nt outside context view need bind element using current implementation looks like second custom view nt need specify ember knows child rather updated jsbin", "d": "11/2013"}, {"body": "oh thanks nt realise reading collectionview docs mandatory way using collection view table compared rails collection partials head reason like app wanted put header row table", "d": "11/2013"}, {"body": "joepym problem also check collection helper", "d": "11/2013"}, {"body": "good catch courthead fix soon", "d": "11/2013"}, {"body": "courthead bit time please confirm fixes problem thanks", "d": "11/2013"}, {"body": "hjdivad works like charm thanks", "d": "11/2013"}, {"body": "courthead awesome glad hear", "d": "11/2013"}, {"body": "hjdivad may discovered another bug let say call using dependent key pass sort function references also item try get buggy behavior updated js bin reflect talking might click run js button wait sec output appear try unchecking box next task edited editing task name trigger sort function run ends replacing another word list entirely two instances word edited list also even code work would still trigger sort function run property edited way call observe multiple properties using syntax edit digging around code seems accept number dependent keys first argument accepts one particular reason updated local copy allow work given multiple dependent keys changed controller property reference seems fixed issues mentioned", "d": "11/2013"}, {"body": "courthead could accept one dk recent pull request others yet updated reflect", "d": "11/2013"}, {"body": "dependent item properties calling sort function instead indirect list properties must specify dependent item properties wo nt update correctly believe docs mention nt pr fix would much appreciated specifying multiple item properties enable feature following multiple dependent arrays reason accepts one dependent key sort one array course combine multiple arrays sort need multiple cps hope make easier composable computed properties case one dependent array need sort multiple properties sort function preferred approach enable need run stable ember right thing run beta enable beta features really need reason want run patched stable rather limitedfeature beta able backport although say recommended insufficient problematic way please provide feedback one benefits feature flagging things beta lets users try new features retaining overall library stability", "d": "11/2013"}, {"body": "ah occurs obviously already know features since must enabled", "d": "11/2013"}, {"body": "thanks info though helpful", "d": "11/2013"}, {"body": "observers typically unless explicitly managed last lifecycle object attached means unless explicitly programmatically remove observers longlived objects retain observers time object destroyed instance remains observers also remain seems entirely reasonable case observers attached managed instances controllers cleanedup reset instances observe destroyed case would likely indicate issue misunderstood related issue raised gladly reopen", "d": "11/2013"}, {"body": "thanks stefanpenner clear appreset clearing observers cause issues tests polluting sorted setup tests refactor app use properties app workarounds easy enough confirmed observers cleared expected", "d": "11/2013"}, {"body": "ya blows away objects managed app instance app instance refactoring step took seems like simplest path another option isolation emberappkit based app nt use reset rather actually destroy recreate even app instance", "d": "11/2013"}, {"body": "seems strange u sharing view instances instances container", "d": "11/2013"}, {"body": "oh right mistake", "d": "11/2013"}, {"body": "ya likely cause sharing views multiple instances anyways best luck", "d": "11/2013"}, {"body": "rails app template ends new line coming think bug", "d": "11/2013"}, {"body": "rjackson nope least nt intend end one emberrails thinks ends newline probably bug emberrails", "d": "11/2013"}, {"body": "unclear coming seem like bug", "d": "11/2013"}, {"body": "tried reproducing ember app kit nt seem affected probably narrows rails sprocket emberrails", "d": "11/2013"}, {"body": "found added sprockets code around since forever one seems know related issue leshillhandlebarsassets unsure point rjackson think ideally fix sprockets nt look like going happen anytime soon", "d": "11/2013"}, {"body": "way case wondering yes real issue affecting code using components inside whitespace sensitive context right workaround override render trim newline buffer really hope get fixed one way work around sprockets emberrails really push fix sprockets whatever totally willing help want get people opinion bestpreferred course action", "d": "11/2013"}, {"body": "chancancode sorry nt control sprockets much possible manage workaround real fix going sprocket", "d": "11/2013"}, {"body": "solution think manually include template actual html output kinda sucks work", "d": "11/2013"}, {"body": "wagenet yes makes sense ember issue sure rjackson see get fixed sprockets want issue emberrails track", "d": "11/2013"}, {"body": "tracked bug way works basically arguments passed function treated mixins including last argument supplying promise example created failing test example fixed issue unfortunately changing handle mixins separate object used creation caused quite failures many invalid tests like using within still may dependent existing incorrect implementation fix", "d": "11/2013"}, {"body": "nt bug createwithmixins describe work never intention old create method renamed ever define semantics setter never create mixed semantics", "d": "11/2013"}, {"body": "kselden currently misleading", "d": "11/2013"}, {"body": "create jsfiddle jsbin demonstrates problem isolation", "d": "11/2013"}, {"body": "something like", "d": "11/2013"}, {"body": "hmm seems odd hjdivad chime", "d": "11/2013"}, {"body": "fall case although slightly different reasons sortablemixin item sort property changes checks see item still sorted comparing left right neighbours item sorted reinserts check fails entire array unsorted due batch updates array sorted prior values case jsbin sort arbitrary initial values emcomputedsort comes little closer much attempt handle multiple property changes eg batches changes unfortunately cache invalidated fixing sortablemixin fixing much code require adding complexity add decide whether remove item mark item marked reinsert fixing emcomputedsort needs flush one item time ie batch changes multiple properties multiple items flush last property first", "d": "11/2013"}, {"body": "cc wagenet", "d": "11/2013"}, {"body": "use case", "d": "11/2013"}, {"body": "people stuff along lines essentially relying either populated unpopulated emberobject regardless passed searching replacing occurrence following fix felt kinda strange break unclear payoff surprising break", "d": "11/2013"}, {"body": "guess since used work harm changing back", "d": "11/2013"}, {"body": "practice cp nearly never used fall poweruser category unsure changing semantics", "d": "11/2013"}, {"body": "right solution ended manually notify property change rather volatile dependency key concrete use case cp volatile dependency", "d": "11/2013"}, {"body": "poweruser category reactive tree manipulation library set nodes volatile toggle memoization neighbors hjdivad real benefit wrote issue current behavior nt make sense", "d": "11/2013"}, {"body": "hjdivad meant context issue search github examples volatile properties", "d": "11/2013"}, {"body": "mbixby current api nt built support changing flags designtime would recommend trying call even cps already retrieved invalidation unless kselden comes says otherwise really nt think expect toggle things like think need track nodes maybe volatile nonvolatile cps toggle via flag", "d": "11/2013"}, {"body": "yeah expect able change properties existing cp get things working hjdivad suggestion go", "d": "11/2013"}, {"body": "likely better suited stack overflow take stab anyways guess using older version ember data likely relied package ember nt use neither ember data package removed repo warning added avoid error upgrade latest ember data beta assumption correct simply include latest build emberstates application immediately ember", "d": "11/2013"}, {"body": "question would ideal post stackoverflow emberjs tag try keep github issues bug reports pull requests", "d": "11/2013"}, {"body": "permaclosed make sure actually bug followed routing guide pretty closely", "d": "11/2013"}, {"body": "provide jsfiddle jsbin post reference post someone time investigate dig", "d": "11/2013"}, {"body": "get property least observers work works call init", "d": "11/2013"}, {"body": "general sorts chains sign code smell however seems like work put together jsfiddle demonstrates issue", "d": "11/2013"}, {"body": "already jsbin attached jsfiddle commit introduced regression swapping line makes example work know idiomatic use observers pattern often use build complex reusable views app basically sproutcore app ported ember using flame give example declare following view javascript appcomplexview flameviewextend childviews contentvieww label button contentview flameviewextend childviews labelview buttonvieww use without care complex structure way ember currently works changing properties would invalidate values cached computed property debugging noticed called init starts chain last chainnode one add chainwatcher object node returns undefined turn making return undefined", "d": "11/2013"}, {"body": "whoops missed jsbin sorry", "d": "11/2013"}, {"body": "kselden related work still seems like work maybe notice something missing", "d": "11/2013"}, {"body": "hmm odd look", "d": "11/2013"}, {"body": "confirm seeing problem examples weird indeed fix", "d": "11/2013"}, {"body": "happens mandatory setters promote prototype properties encountered issue checks prototype properties included since dev build sets mandatory setters properties observed promoted pass test production build however mandatory setters see jsbin uses production build sets", "d": "11/2013"}, {"body": "teddyzeenny ah interesting thoughts", "d": "11/2013"}, {"body": "configurable option first place documenting work tell users mandatorysetters assuming already", "d": "11/2013"}, {"body": "mandatory setters debug helper assume production performance reasons said seem like issue need think", "d": "11/2013"}, {"body": "wagenet sure fix said requires thought", "d": "11/2013"}, {"body": "could mark non enumerable believe would solve modern browsers", "d": "11/2013"}, {"body": "stefanpenner would something like would need redefine property first set", "d": "11/2013"}, {"body": "actually went path marking defineproperty usage non enumerable abit work terrible hard place caused many issues although nt mainline aware may need fixing go path entirely clear nt enumerable likely come strategy implement accordingly", "d": "11/2013"}, {"body": "since need consistent behavior dev production builds deciding property enumerable depend runtime value right adding mandatory setter making enumerable first", "d": "11/2013"}, {"body": "teddyzeenny know enough send pr", "d": "11/2013"}, {"body": "teddyzeenny want help would guide little bit submit patch", "d": "11/2013"}, {"body": "alanandrade sure guess first step would create failing test make sure behaves without mandatory setters needs tested following cases assume object creation setting property observing property observing property setting observing property removing observer observing property setting removing observer observing property removing observer setting", "d": "11/2013"}, {"body": "teddyzeenny two tests fail since testing env mandatorysetters true observers sure proceed like would assertion make hope helps please hit leads continue helping one sidenote people hipchat nt exited haha yeah agree weird", "d": "11/2013"}, {"body": "alanandrade tests added fail fix prototype property nt included refer previous comment javascript object creation test currently always pass var beer emberobjectextend type ipa create deepequal emberkeys beer setting property test currently always pass var beer emberobjectextend type ipa create emberset beer type ipa deepequal emberkeys beer type testing observers javascript test currently fail fix var beer emberobjectextend type ipa create emberaddobserver beer type emberk deepequal emberkeys beer teardown test emberremoveobserver beer type emberk", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "apparently defining property", "d": "11/2013"}, {"body": "alanandrade tests look good create pr", "d": "11/2013"}, {"body": "", "d": "11/2013"}, {"body": "moving discussion", "d": "11/2013"}, {"body": "nt totally remember rationale presently nt consider route part currently active route hierarchy called without throwing exception nt thing generally calling within route entered fire route parent routes since parents one else handle event seeing error nt know makes sense change behavior reason keeping way error thrown route hooks transition elsewhere occurs anyone else calls firing route failed enter suppose could change behavior push route active hierarchy calling pop error thrown ca nt think reason moment seems like good change", "d": "11/2013"}, {"body": "ok hope complicated fix would like see work easy workaround less clean", "d": "11/2013"}, {"body": "dimitrisuls matter best practices would argue calling inside clean pattern would seek avoid generally used handling usereventgenerated action often implicitly way helper hand role allow route ensure state application suitable route active need call code action handler nonaction context extract method", "d": "11/2013"}, {"body": "lukemelia good point think argument fire route call though", "d": "11/2013"}, {"body": "agree lukemelia used separate method called activate method also called userevent moved inside actionhash maybe left method delegate action anyhow applicationroute activate even good place put stuff like checking session connecting socketio etc maybe overlooking something", "d": "11/2013"}, {"body": "machty long delegates use case calling async operation consideration route may changed since async operation started ie want currently active route handle result async op since handled differently depending state app dimitrisuls examples gave sound like async async stuff want wait often better choice machty may thoughts", "d": "11/2013"}, {"body": "lukemelia could handle using action fires newlyentered active routes transition complete seems like better patterns supporting desired behavior closing unless major pushback", "d": "11/2013"}, {"body": "code causes issue emberrouteextend works fine", "d": "11/2013"}, {"body": "cc machty", "d": "11/2013"}, {"body": "infinite looping behavior describing seems correct requirement app enter since every route child hook always returning rejecting promise expect continue fail example different action handler transitioning another route whose parent nt include going see infinite loop sounds like want structure app use another toplevel entry resource route fails transition another toplevel route nt resource route parent nt seem like buggy behavior reopen demonstrated otherwise", "d": "11/2013"}, {"body": "thanks alex timely reply told work around issue actual issue mentioned url go applicationroute putting features like authentication logic inside applicationroute common authentication issues handled common place whats worth observing recursive infinite loop seem occur case promise resolution handled issue using deferred object calling error success ajax defferresolve defferresolve error respectively also observed error previous transition continued rather generating new transition applicationrotue since main principle promise rejection resolution emberjs continue left", "d": "11/2013"}, {"body": "infinite loops nt occur cases causes trying transition back route originally failed load authenticated resource route user fails authenticate user transitioned say child authenticated route seems like putting authenticated routes inside also toplevel route like transition handler", "d": "11/2013"}, {"body": "browsers test quickly hit button matter happen log html contents parent nodes phone right take look home sounds like kind quirky behavior encountered firefox using timeout involved chrome whenever paint events happen rapidly sent mailbox iphone fri nov pm aaron notifications githubcom wrote strange one indeed reproduce press button times time every time fail swap content without throwing errors reply email directly view github", "d": "11/2013"}, {"body": "tested chrome safari pressing button every second stops swapping content button presses", "d": "11/2013"}, {"body": "confirmed latest chrome timing nt seem issue waving mouse around window seconds click makes difference replacing computed sort simple alias resolves issue probably ultimate source bug", "d": "11/2013"}, {"body": "scumbag chrome bug sent mailbox iphone fri nov pm christopher swasey notifications githubcom wrote confirmed latest chrome timing nt seem issue waving mouse around window seconds click makes difference replacing computed sort simple alias resolves issue probably ultimate source bug reply email directly view github", "d": "11/2013"}, {"body": "though chrome safari unlikely sent mailbox iphone fri nov pm christopher swasey notifications githubcom wrote confirmed latest chrome timing nt seem issue waving mouse around window seconds click makes difference replacing computed sort simple alias resolves issue probably ultimate source bug reply email directly view github", "d": "11/2013"}, {"body": "firefox also affected", "d": "11/2013"}, {"body": "twokul likely issue nt looked yet seems issue browsers tested chrome safari firefox", "d": "11/2013"}, {"body": "seems bad ca nt take look right try later today sent mailbox iphone fri nov pm robert jackson notifications githubcom wrote twokul likely issue nt looked yet seems issue browsers tested chrome safari firefox reply email directly view github", "d": "11/2013"}, {"body": "kumavis work around depend instead feature enabled depend rjackson seems issue least directly seems issue either lazy cps tl dr recomputations incorrect watching count actually toggles quite bit believe result lazy cp code yet clear watchers count incremented sixth time toggled", "d": "11/2013"}, {"body": "okay tracked basically lazy cp stuff slightly incompatible something fully recomputed presently uncached need add dks amp watchers fix", "d": "11/2013"}, {"body": "kselden think directly related undefined issues although root causes likely similar", "d": "11/2013"}, {"body": "weird works fine firefox event fired also noticed call cp upgrade latest version p", "d": "11/2013"}, {"body": "example jsfiddle found insertnewline code using latest ember anything like cacheable perhaps windows specific problem running windows", "d": "11/2013"}, {"body": "could put together new jsbin latest version ember", "d": "11/2013"}, {"body": "expected behavior reason change property hook goes causes change", "d": "11/2013"}, {"body": "turned prototype extensions modified ember implementation accordingly conflict brightcove smartplayer api resolved thank wendy cary stefan penner mailto notifications githubcom sent thursday october pm emberjsemberjs cc wendy cary subject emberjs conflict brightcove smartplayer api unfortunately without details likely able track provide example issue maybe jsbin jsfiddle thoughts may issue prototype extension run ember prototype extensions see reply email directly view github", "d": "11/2013"}, {"body": "recommended stefanpenner changes made defer start routing testing mode first called currently behind feature flag", "d": "11/2013"}, {"body": "looking able least track going", "d": "11/2013"}, {"body": "definitely confirmed issue created failing test using track culprit didtransition hook fired every time called words call twice fire twice call five times fired five times seems like something nt cleaned properly still digging exactly", "d": "11/2013"}, {"body": "twokul tracked original test incorrect issue ultimately caused fact location object never cleaned router destroyed meant every called would add another listener never removed", "d": "11/2013"}, {"body": "rjackson storing location object container solve", "d": "11/2013"}, {"body": "merged closing", "d": "11/2013"}, {"body": "simontseng got response machty", "d": "11/2013"}, {"body": "thanks responses days trying figure problem without success given finding problem decide upgrade ember newest stable emberdata canary avoid localstorageadapter embertool use fixture adapter emberdata instead issue since disappeared would suspect something incompatible various versions libraries also something promises handled going write adapter work websql little project end since nt find publicly available yet localstorageadapter temporary measure get development going thanks machty wagenet trying help close issue", "d": "11/2013"}, {"body": "simontseng works newest stable ember canary ed probably nothing fix sorry trouble glad figured something", "d": "11/2013"}, {"body": "odd one thanks bringing attention specific situation causing trouble", "d": "11/2013"}, {"body": "vinilios ping", "d": "11/2013"}, {"body": "hi actually tried use multiple statements within template order reuse partial template different context checkout binding issue caused fiddle", "d": "11/2013"}, {"body": "cc kselden", "d": "11/2013"}, {"body": "happens alias binding never gets disconnected multiple statements use alias one ends correct value looked fixing could nt figure deactivate listeners without reference binding", "d": "11/2013"}, {"body": "trek think", "d": "11/2013"}, {"body": "think understand confusion specific issue didorothy seeing nt actually related docs didorothy using normal action sending element template component accurate component use behavior like said docs sendaction general nt super clear address week", "d": "11/2013"}, {"body": "trek thanks clarification jsfiddle looking making docs clear apparently missed misunderstood aspect examples explanation docs example explanation helpful", "d": "11/2013"}, {"body": "ideas improve error messages recommendations considered correct", "d": "11/2013"}, {"body": "working also thanks example setup consider ticket closed stack nodejs connectexpress browserify way", "d": "11/2013"}, {"body": "experiencing bug", "d": "11/2013"}, {"body": "skddc could make jsbin demonstrating issue", "d": "11/2013"}, {"body": "hmm jsbin works looks like bug eak using wrong investigate open issue eak actual bug thanks", "d": "11/2013"}, {"body": "skddc may related", "d": "11/2013"}, {"body": "turns nt know component names ca nt single words earlier versions nt complain show deprecations warnings worked fine way used", "d": "11/2013"}, {"body": "skddc yeah components contain dash keep line web component spec see could manually register single word probably better go dasherized name follow conventions", "d": "11/2013"}, {"body": "ok thanks", "d": "11/2013"}, {"body": "closing due inactivity joelkallman still issues let us know", "d": "11/2013"}, {"body": "setup seems odd though clarify expected behavior", "d": "11/2013"}, {"body": "gavinwahl jamesotron hjdivad still issue everything cleared", "d": "11/2013"}, {"body": "nt prevent kind reduce computed written needs defined works either fresh old usually pretty straightforward write properties eg cache higher priority things reduce computed unlikely anything soon however would happy review pull request gave fresh resets", "d": "11/2013"}, {"body": "gavinwahl please reopen find current api blocks implementing something", "d": "11/2013"}, {"body": "closing favor discussion pr", "d": "11/2013"}, {"body": "stefanpenner know ton plate curious happened made progress", "d": "11/2013"}, {"body": "actually sure want seems like strange interleaving could occur think keeping tasks granular independent nt bad thing", "d": "11/2013"}, {"body": "stefanpenner ok removed test anyway close", "d": "11/2013"}, {"body": "stefanpenner assume nt able get yet", "d": "11/2013"}, {"body": "also need", "d": "11/2013"}, {"body": "good idea", "d": "11/2013"}, {"body": "need made base resource tho called root problem encountering link keeping query params cases read setup rootbase route nt want keep url ca nt figure remove tried baseroot route class hook tho trying redirect route called course current route neither existing one virtual one idea clear query params user browsing application wants give url someone else include parameters specific user", "d": "11/2013"}, {"body": "especially things like modal signuplogin windows activated anywhere", "d": "11/2013"}, {"body": "hjdivad ping", "d": "11/2013"}, {"body": "closing custom reset semantics handled via jamesotron please reopen usecase missing concern feature plan updating internals reducecomputed per discussion wycats need spend time thinking detail sure think changes likely change semantics anyway", "d": "11/2013"}, {"body": "fine", "d": "11/2013"}, {"body": "wycats tomdale expected behavior", "d": "11/2013"}, {"body": "mmun research looking implementation think bug templatename property route seems working two lines want specify templatename route view check following jsfiddle work see could done route official doc stefanpenner saw added line users also declare templatename controller line causing issue could submit fix desired behavior consistency go keeping view removing line", "d": "11/2013"}, {"body": "closing favor pr", "d": "11/2013"}, {"body": "glad confusion inconsistency resolved want register concern around define view want name template different route name convention would require also seems like property always visible important property language guides centers around template firstclass citizen route object tells template model display", "d": "11/2013"}, {"body": "right discussed irc totally makes sense router pullrequest fixes issue", "d": "11/2013"}, {"body": "cool thanks update appreciate work", "d": "11/2013"}, {"body": "thanks run one glad see fixed", "d": "11/2013"}, {"body": "alexspeller", "d": "11/2013"}, {"body": "disallow params collide ember linkview props using kind blacklist maybe dev mode change way query params specified linkto helper eg active param specified better convention particularly nice either way", "d": "11/2013"}, {"body": "using also conflictive", "d": "11/2013"}, {"body": "twokul rjackson thanks efforts problem emberjs right", "d": "11/2013"}, {"body": "believe main issue mocha starting tests immediately ember initializers creates object nt run document ready", "d": "11/2013"}, {"body": "seems like integration problem would likely close issue cc stefanpenner sent mailbox iphone fri nov pm yoshihiro kikuchi notifications githubcom wrote twokul rjackson thanks efforts problem emberjs right reply email directly view github", "d": "11/2013"}, {"body": "thank guys close", "d": "11/2013"}, {"body": "saved whole lot time", "d": "11/2013"}, {"body": "dealing regards autofocus form elements two possible routes query params involved model well something similar parallax scrolling scrolling skrollr library needs refreshed dom changes thought call time since fired first time approach nt work understanding bubbled therefore container view capture event execute callback nt case however may bubble nt bubble applicationview solution create skrollrview views needed parallax autofocus using within fix issue still fired initial load pretty sure supposed work binding straight raised error rerendering rendering nt found solution yet autofocus form element user transitions one set queryparams edit apologies hit space bar posted ready", "d": "11/2013"}, {"body": "anyone else happens want autofocus form field like search bar multiple routes pointing form different queryparams solutioni found simply trigger hook router hook gets fired every transition regardless whether view getting rerendered", "d": "11/2013"}, {"body": "clearing confusion didinsertelement bubble mutating dom focus within router great idea lukemelia suggests view component could observe controllermodel detect change another option track via boolean property controller userhasinteracted bind accordingly", "d": "11/2013"}, {"body": "stefanpenner figured nt bubble working pretty sure read tried finding link could nt going assume read something incorrectly per actually mutating dom particular use case user search toggle statistics setting stored queryparams well toggle form statistics amp search get path nav bar shortcut link issue caused user clicked search chose click statistics link statistics toggle search form would refocus transition wanted nice user experience", "d": "11/2013"}, {"body": "certainly seems like bug", "d": "11/2013"}, {"body": "wagenet todo capital letters triggering global lookup", "d": "11/2013"}, {"body": "stefanpenner yeah figured happen path chain begins capital letter though", "d": "11/2013"}, {"body": "wagenet problem view part path discarded path bound context view rather", "d": "11/2013"}, {"body": "update tests passing routerjs refactor", "d": "11/2013"}, {"body": "fwiw solution refire beforemodel hook", "d": "11/2013"}, {"body": "believe fixed updated two jsbins use handlebars seem working properly", "d": "11/2013"}, {"body": "asaf check problems still present ember beta particular feature flag enabled might knock problem perhaps", "d": "11/2013"}, {"body": "machty think variation work correct closing someone demonstrate fiddlejsbin failing master container renderables enabled reopen", "d": "11/2013"}, {"body": "global method approach bypasses dependency injection system legacy container friendly name version default resolves correctly injected see currently half way supporting globals supporting local approach local approach prevents coupling around surperior accomplishes loose coupling utilized di container system makes work injections theory work support global approach injections preference would continue transition entirely local loosely coupled system specific details loose coupling check clearly docs around currently lacking someone wants lend hand would pretty excited someone feels strongly issue reopened gladly", "d": "11/2013"}, {"body": "closing favor", "d": "11/2013"}, {"body": "stefanpenner ping", "d": "11/2013"}, {"body": "fixed part next container related refactor", "d": "11/2013"}, {"body": "hjdivad would prefer supporting maybe correctness selftrolling sadness likely avoid", "d": "11/2013"}, {"body": "stefanpenner hjdivad gon na second say avoid support", "d": "11/2013"}, {"body": "machty ping", "d": "11/2013"}, {"body": "craigteegarden pr mention hmm well naive approach assumed star segment would last segment case shown routerjs readme affect pr", "d": "11/2013"}, {"body": "submitted original pr assuming star segment last segment realized star segment could middle updated pr correctly handles star segments middle end", "d": "11/2013"}, {"body": "following pr onceif merged sync ember", "d": "11/2013"}, {"body": "great thanks", "d": "11/2013"}, {"body": "related question someone else brought whether query param portion url passed kind leaning toward idea nonquery param portion path normalized ie remove slash query params seems bad parsing query params also passing unformatted string param seems extra bad specialcasing detection whether slash removed thoughts", "d": "11/2013"}, {"body": "closing due inactivity rlivsey still issue let us know", "d": "11/2013"}, {"body": "closing favor pr", "d": "11/2013"}, {"body": "lastobelus think big concern memory leaks", "d": "11/2013"}, {"body": "machty ping", "d": "11/2013"}, {"body": "status corner cases parameter preservation nt properly handled taken stab times quite tricky perhaps needs mini refactor handle issues mentioned elsewhere particular think need embrace concept transitions routers somewhat similar haverepresent route hierachies router represents hierarchies routes fully entered fully active transitions represent hierarchies routes intended entered unify concepts likely better handle corner cases parameter preservation oldnewactive transitions otherwise think code getting little hand sorry delay like start refactor shortly need talk folk see right trick wan na", "d": "11/2013"}, {"body": "link provided broken ember master seems fixed thought going fixed routerjs refactor stuff seems like already fixed", "d": "11/2013"}, {"body": "stefanpenner johnkpaul guys make progress", "d": "11/2013"}, {"body": "johnkpaul keeps standing attractive pairing partners", "d": "11/2013"}, {"body": "believe encountered issue using emberarraycontroller lookupitemcontroller embercollectionview createchildview overwritten issue illustrated example included modified version emberjs following fix applied per johnkpaul bug fix additional change controller javascript file emberjspackagesemberviewslibviewscollectionviewjs line var attrs content item contentindex idx emberhandlebars instanceof emberhandlebarseachview attrscontext item needed data show attrscontroller item additional change needed controller actions work view thiscreatechildview itemviewclass attrs guess code somewhere else still pretty new ember hope helps", "d": "11/2013"}, {"body": "latest wrote", "d": "11/2013"}, {"body": "say pretty confidently entirely cease issue routerjs refactor", "d": "11/2013"}, {"body": "issue tripped awhile might suggest amending guides call behavior clearly since nt apparent view objects effectively wrapped templates html elements needed specified div nt appropriate table context seemed tagname element optional contexts way wrap template convenience sake fwiw div default behavior nt appear mentioned latter half customizing view element section", "d": "11/2013"}, {"body": "hajee status", "d": "11/2013"}, {"body": "able recreate symptoms test", "d": "11/2013"}, {"body": "hajee still seeing problem", "d": "11/2013"}, {"body": "changed test setup", "d": "11/2013"}, {"body": "alexspeller going assume fixed let know", "d": "11/2013"}, {"body": "although entirely obvious would argue correct desired behavior machty suggested context actually controller helper binds controller controller change binding also wont change although might surprising without feature swapping controllers model would cause entire view hierarchies torn rerendered quite wasteful forfeits core kvo value proposition example navigating general case tear entire view hierarchy rather update bindings changed infact want helper update model changes bind bind rather see", "d": "11/2013"}, {"body": "stefanpenner fence normalize provided path unwrapping points href update model changes binding parity existing behavior unwraps try pass param eg clicking would fire action model fire person controller little inconsistent actions unwrap models bindings case bound helpers nt also see point", "d": "11/2013"}, {"body": "still happening ember one notice retry failed transition actually works shows undefined params address bar", "d": "11/2013"}, {"body": "im assuming work land htmlbars", "d": "11/2013"}, {"body": "trek ping", "d": "11/2013"}, {"body": "one old really clear considerations anymore b docs would go think going close real issue comes docs would solved", "d": "11/2013"}, {"body": "machty ping", "d": "11/2013"}, {"body": "stefanpenner others still need hash related question whether router hooks take place promise land try flesh stef et al arrive conclusion issue", "d": "11/2013"}, {"body": "stefanpenner ping", "d": "11/2013"}, {"body": "wagenet think concerns long running flag fix u thoughts", "d": "11/2013"}, {"body": "stefanpenner lets discuss core team", "d": "11/2013"}, {"body": "wagenet wrap nicely whole naming proposal prepare monday related", "d": "11/2013"}, {"body": "machty ping", "d": "11/2013"}, {"body": "stefanpenner ping", "d": "11/2013"}, {"body": "wagenet resolver eak uses fixes correctly yehuda suggested since good solution make fixes existing system improve handle friends provide upgrade path eventually get people new less ambiguous resolver world provide proposal monday meeting", "d": "11/2013"}, {"body": "nt think change hit sorry", "d": "11/2013"}, {"body": "well ember components andor shadow dom ok instead cases", "d": "11/2013"}, {"body": "istefo trying resurrect closed issue anything could nt find better place ask animated transitions implemented boinx app look great specifically slidein animations used sidebar would love gain insight went accomplishing within ember routing system anything could show far actual code even high level explantion would awesome especially regarding actually hooking route transition process thanks", "d": "11/2013"}, {"body": "billdami istefo likely opening discourse post discuss linking would appropriate", "d": "11/2013"}, {"body": "timevans comments", "d": "11/2013"}, {"body": "wagenet sorry responded nt want actually wire ux logic onto model case nt want create blank email address phone number etc showing model different context prefer putting logic controller ux logic multiline edit mode preexisting items show uncommited blank one otherwise show records asis", "d": "11/2013"}, {"body": "handled logic like route existing data entering route add placeholder one exiting route placeholder nt saved remove", "d": "11/2013"}, {"body": "rlivsey nt exactly logic use user tries delete objects always shows placeholder", "d": "11/2013"}, {"body": "news directions", "d": "11/2013"}, {"body": "although improving ember provides important many usecases would benefit intelligent custom solution", "d": "11/2013"}, {"body": "using right think nice cooperate little bit folks addepar integrate tightly maybe rename current implementation emberslowselect", "d": "11/2013"}, {"body": "korczis seems integrate well concerns", "d": "11/2013"}, {"body": "concern nice ambitious web framework llike ember integrated imagine newbie new ember need select component plays nicely ember find emberselect ps really love addepar think basic component like select performing better current emberselect", "d": "11/2013"}, {"body": "improving ember native select roadmap absorbing great party library like addepar select makes little sense ember kitchen sink", "d": "11/2013"}, {"body": "think pretty locked may changed specific issue lets open new ticket", "d": "11/2013"}, {"body": "closing since inactive", "d": "11/2013"}, {"body": "seems like worthwhile thing leaving ticket open nt seem helping htmlbars think matter less", "d": "11/2013"}, {"body": "hey guys got caught problem workaround help appreciated", "d": "11/2013"}, {"body": "closing since convenience bug someone wants something pr would great", "d": "11/2013"}, {"body": "closing due inactivity someone still concerns please open new issue", "d": "11/2013"}, {"body": "iamjstates still issues yes could try using instead retain stackoverflow response want precisely template compilation browser btw emberjs starter kit include full handlebars script html regards", "d": "11/2013"}, {"body": "closing due inactivity still need someone wants tackle please send pr", "d": "11/2013"}, {"body": "closing due inactivity still issue please open new ticket", "d": "11/2013"}, {"body": "wagenet nt use separate container sub container life cycle pining proved serious blocker entirely transparently likely revisit also unless im something wrong jsfiddle works fine latest release problem seems resolved", "d": "11/2013"}, {"body": "closing since inactive may even issue", "d": "11/2013"}, {"body": "closing due inactivity", "d": "11/2013"}, {"body": "documented working would great add obviously difficult high enough priority someone wants work happy review pr", "d": "11/2013"}]