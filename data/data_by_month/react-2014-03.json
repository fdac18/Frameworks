[{"title": "give key warning top level", "body": "right nt also nt composite components", "num": "1333", "d": "3/2014"}, {"title": "nt give key warning rendering static markup", "body": "huge deal bit silly since markup wo nt mounted", "num": "1331", "d": "3/2014"}, {"title": "csstransitiongroup buggy due transition events firing reliably", "body": "trying convince react replace dom nodes inplace seems supported discovered something looks like bugs put demo first node gets replaced animation progressing removed demo means additional lines created soon animation completes node usually goes away second feature leave demo running change another tab wait seconds change back tab demo running accumulated lots green items basically stuck meaning animation completed removed dom", "num": "1326", "d": "3/2014"}, {"title": "obscure domchildrenoperations error missing tbody", "body": "attached code causes error message read property parentnode undefined domchildrenoperationsprocessupdates described different reason time react tries remove table second child ca nt find since replaced tbody nt expect good fix truly fixing tbody problem giving warning filing posterity thanks marknijhof providing version test case js jsx reactdom var hello reactcreateclass render function return thispropsvalue reactrendercomponent documentbody reactrendercomponent documentbody live demo", "num": "1323", "d": "3/2014"}, {"title": "react updating style attribute firefox", "body": "ran following issue using linear gradient background image element dynamically updating gradient seem work firefox running style attribute dom node get updated works fine chromium though code snippet play around working example", "num": "1316", "d": "3/2014"}, {"title": "react developer tools breaks natural scroll mac os x", "body": "activate react developer tools breaks natural scroll source code chrome developer tools mac os x chrome react developer tools download activate react developer tools inspect page source sources use two finger track pad scrolling expecting scroll direction natural scrolls reverse direction deactivate react developer tools scrolls natural direction really annoying makes extension activated impossible normal development", "num": "1315", "d": "3/2014"}, {"title": "immutable tests fail chrome using", "body": "seems like jasmine cycle detection tacking property thus nt work properly frozen objects fails chrome cc kmeht", "num": "1314", "d": "3/2014"}, {"title": "allow children traversed even created using render", "body": "seems undefined component children defined front instead defined parent component rendering request component mounted always contain valid representation component children use case allow deep iteration child components without worry components defined children specific example would find nested components input fields set data backbone model note realize might say components set model values input fields changed need deep traversal ideally nt want actually update model data form completely filled", "num": "1312", "d": "3/2014"}, {"title": "make possible render amp replace nodes", "body": "come bunch might time", "num": "1311", "d": "3/2014"}, {"title": "trigger animations component mount needed", "body": "current animations triggered changes occured component cases need launch animation component mount add code componentdidmount function thispropstransitionimmediately var nextchildmapping thisstatechildren var key pass would launch animation", "num": "1304", "d": "3/2014"}, {"title": "make reactcreateclass warnthrow mixins contains undefined value", "body": "code could result typo mixin name attempt use mixin module mistakte would nice react warnthrow condition", "num": "1302", "d": "3/2014"}, {"title": "react tracks scroll position internally forces synchronous layout", "body": "react adds scroll listener tracks caches scroll position assume undocumented internal purpose additionally scroll listener forces synchronous layout see screenshot seems wasteful especially considering values tracked never exposed api scroll listener used removed", "num": "1300", "d": "3/2014"}, {"title": "mincer jsx integration", "body": "context franticmincerjsx plugin mincer adds jsx syntax support", "num": "1299", "d": "3/2014"}, {"title": "support svg foreignobject tag", "body": "im seeing error uncaught referenceerror foreignobject defined", "num": "1298", "d": "3/2014"}, {"title": "simulatemouseenter simulatemouseleave working", "body": "testing wanted simulate events reason firing handlers component fiddle show see simulate functions click actually triggered ones real events everything works perfectly tried debug little bit going nt get much information especially since first time diving events mechanism internals react want info try dig bit deeper think fiddle clear enough", "num": "1297", "d": "3/2014"}, {"title": "rendercomponenttostaticmarkup vs rendercomponenttostring", "body": "please give example shows difference vs", "num": "1296", "d": "3/2014"}, {"title": "optional type tag components trigger unmounts", "body": "react provides kind type tag om move beyond react react issues warnings development constructor property react component instance function introduce hack starting react order get om components unmount om components backed single react component set constructor property unique string value separate optional type tag could avoid react key satisfactory solution due likelihood collisions given user supplied key", "num": "1295", "d": "3/2014"}, {"title": "build fails jsx normal jsx task warning socket closed", "body": "h githubreact grunt running deletebuildmodules task running jsx normal jsx task warning socket closed use force continue aborted due warnings windows hint", "num": "1292", "d": "3/2014"}, {"title": "comments include lt lessthan sign within jsx always ignored", "body": "place comment includes lt lessthan sign within element jsx errors notice comment right hello expected anything within matter jsx always fully ignored effect render", "num": "1289", "d": "3/2014"}, {"title": "invariant violation setenabled asked report immediately", "body": "trying testutils things breaking node stdout codetests mocha test passing failing test tests render label error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactcomponentmixinmountcomponentintonode object objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent objectreacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next immediateonimmediate processimmediate immediatecallback testjs js module dependencies var react require reactaddons var require var mocha require mocha var jsdom require jsdom var utils reactaddonstestutils initialize variables var document var window initialize jsdom beforeeach function globalwindow jsdomjsdom createwindow globaldocument globalwindowdocument tests describe test tests function display window objects function globalwindowshouldexist globaldocumentshouldexist render label function var label utilsrenderintodocument reactdomlabel null hi packagejson", "num": "1287", "d": "3/2014"}, {"title": "find document jsdom react test utils", "body": "made small test setup try jsdom react running first one passes second one fails detect idea wrong testjs js module dependencies var utils require reacttestutils var require var react require react var mocha require mocha var jsdom require jsdom initialize variables var document var window initialize jsdom beforeeach function document jsdomjsdom window documentcreatewindow tests describe test tests function display window objects function documentshouldexist windowshouldexist render label function var label utilsrenderintodocument packages", "num": "1286", "d": "3/2014"}, {"title": "potential addition complementary tools page reactbacon", "body": "made little library mixin right integrates baconjs react components consideration include complimentary tools page", "num": "1281", "d": "3/2014"}, {"title": "jsx fails resolve deprecated use q instead error", "body": "getting error run jsx happening anybody else something wrong", "num": "1278", "d": "3/2014"}, {"title": "made possible server render without reactrelated markup", "body": "mean", "num": "1277", "d": "3/2014"}, {"title": "reactcsstransitiongroup broken android", "body": "reactcsstransitiongroup nt work properly least android narrowed code finding properties test element object registering handlers despite fact android fires events end transition nt properly detected investigation see safer way detection android seem recall seeing something similar", "num": "1275", "d": "3/2014"}, {"title": "clonewithprops nt transfer key prop", "body": "reason understand shares code method transfer needed using expect prop transferred currently var react require reactaddons var reactcreateclass render function var key key var reactaddonsclonewithprops var assert require assert assertok key assertok undefined", "num": "1274", "d": "3/2014"}, {"title": "wishlist ability disable synthetic event system", "body": "would huge problems caused optionally disabling synthetic event system like option order get responsiveness underpowered machines", "num": "1269", "d": "3/2014"}, {"title": "ca nt pass props object", "body": "pretty annoying see editing compiled version var props href thispropsanchorhref classname titleclass key thispropsdataattributesitems name data key props name thispropsdataattributesitems key see loop create new attributes compiling jsx nt see possible way", "num": "1266", "d": "3/2014"}, {"title": "error invariant violation reactmount two valid unequal nodes", "body": "tl dr fix load polymerjs first probably related rendered inside unwrapped polymer element child node following error thrown would imagine radio buttons etc would also throw sure actual bug limitation react shadowdompolymer error message exactly helpful determining wrote simple jsbin demonstrates problem", "num": "1263", "d": "3/2014"}, {"title": "context propagate across reactrendercomponent", "body": "really want work", "num": "1260", "d": "3/2014"}, {"title": "stop data aria start using dataset", "body": "dom already exposes transformation hyphenated camelcase mdn john doe var el documentqueryselector user elid user eldatasetid eldatasetuser johndoe eldatasetdateofbirth eldatasetdateofbirth set dob somedataattr eldataset false eldatasetsomedataattr mydata somedataattr eldataset true start supporting camelcase allow couple things easier reasoning data attributes easier merging easier potentially faster updates modify want reverse dom eg becomes best knowledge nt corresponding api make work way think makes sense", "num": "1259", "d": "3/2014"}, {"title": "throw error null falsy values passed event listeners", "body": "null values event listeners fail silently falsy values event listeners fail silently", "num": "1255", "d": "3/2014"}, {"title": "react nt bind wheel touch events document", "body": "react binds touchmove touchstart touchend touchcancel wheel handlers document user tries scroll browser needs execute event handlers ensure eventpreventdefault called means scrolling stall javascript executing chrome fastpath checks whether coordinate touch event happens touch listeners listeners chrome allow scroll happen even main thread blocked javascript bind listeners events directly node requires event handler dispatch event standard react top level event system bubblecapture like everything else visible event plugins", "num": "1254", "d": "3/2014"}, {"title": "iframe contents cause invariant violation", "body": "using server rendering putting seems invariably cause invariant violation ca nt find image related identical cases browser nt aware inner elements however case browsers support iframes actually mutating dom replacing contents document specified attribute", "num": "1253", "d": "3/2014"}, {"title": "noscript contents cause invariant violation", "body": "using server rendering putting seems invariably cause invariant violation ca nt find image believe js enabled browser noscript content looks like cdata worked around using actually set contents html string however ca nt nest components approach", "num": "1252", "d": "3/2014"}, {"title": "stop documentcreateelement tests", "body": "ton places nt exciting task gets exposed lots tests help understanding react core better cc kmeht", "num": "1250", "d": "3/2014"}, {"title": "nt consider forceupdates unmounting error", "body": "came across issue reactbackbone opinion issue react though possible work around implementing imho react let say backbone model event source listen changes changes tend come together adds collections instance nt want rerender know probable new change arrive take naive code add debounce throttle see background unmount component course unbind event listeners however easy way remove throttlled operations still air debounce comes end time triggers throttled forceupdate wonder react would consider forceupdate unmount exceptionerror think warning might warranted nt default behaviour throwing away call perfectly fine otherwise demanding users components either wrap forceupdate safeforceupdate checks ismounted bound events must unbound synchronous would guess nt always possible indeed everyone agrees would willing make pr sounds like something everyone might agree interested backgroundopinions", "num": "1247", "d": "3/2014"}, {"title": "ismounted correct parents componentwillmount", "body": "throws", "num": "1245", "d": "3/2014"}, {"title": "thinking react link goes codefacebookcom", "body": "go click thinking react feel sad", "num": "1238", "d": "3/2014"}, {"title": "whitespace kills svg text", "body": "see note spaces around bar entry make rendered svg text span svg", "num": "1236", "d": "3/2014"}, {"title": "switching dangerouslysetinnerhtml children", "body": "tripped strange error one state component uses html specify children rendering markdown another state uses child components interactive content inner html reduced testcase", "num": "1232", "d": "3/2014"}, {"title": "emacs react", "body": "hi would accept add link webmodeel page webmodeel emacs major mode editing web templates screenshot", "num": "1230", "d": "3/2014"}, {"title": "event handlers different component trees batch together", "body": "right reactupdatesbatchedupdates called reacteventemittermixinjs probably higher reacttopleveleventcallbackjs nested roots updates queued batch", "num": "1227", "d": "3/2014"}, {"title": "add errorstack errors thrown", "body": "hard debug problems happens react nt know problem low information", "num": "1220", "d": "3/2014"}, {"title": "rendercomponenttostring render", "body": "rendercomponent render input field rendercomponenttostring error uncaught typeerror read property firstchild undefined versions react jsxtransformer", "num": "1218", "d": "3/2014"}, {"title": "jsx comments work", "body": "transformed note trailing results syntax error problem seems comma insertion related functions eg see irc discussion findings relevant parts irc discussion", "num": "1216", "d": "3/2014"}, {"title": "add support future custom elements", "body": "would really cool allow view custom elements", "num": "1214", "d": "3/2014"}, {"title": "update lifecycle methods docs specify execution environments methods", "body": "lifecycle method documentation clear methods run run server", "num": "1213", "d": "3/2014"}, {"title": "packaging issue", "body": "installed using npm following tried require react get object contains function named seems incorrect missing something thanks", "num": "1212", "d": "3/2014"}, {"title": "ismounted usage rendercomponent", "body": "usage ismounted reactrendercomponent results invalid access methods one often used outside component guard access methods really antipattern like described understand comes methods ismounted case", "num": "1205", "d": "3/2014"}, {"title": "proptypesoneoftype return chainable validator object", "body": "example reactproptypesoneoftype reactproptypesobject reactproptypesstring isrequired lt undefined", "num": "1202", "d": "3/2014"}, {"body": "makes sense nt realize attributes like", "d": "3/2014"}, {"body": "example js jsx reactdom reactrendercomponent documentbody actually happens nt provide key warnings toplevel components right seems like may well less useful without owner info", "d": "3/2014"}, {"body": "pain currently set warning happens descriptor created mounted seems want check sometime mounting anyway could imagine composite component like andreypopp router nt care order children never mounted", "d": "3/2014"}, {"body": "fwiw also tried adding leave transitions well try stop whatever animation progress tested animation repeating original transition setting opaque value set final value animation seem stop", "d": "3/2014"}, {"body": "spent time debugging part leaving tab cumming back due probably firing page visibility false actually something believe handle many items actually bug caused transition duration low level documentation explicit holding element callback fired hand bind example transitionenter takes seconds animation fire mutation block second expected overlap bit hard understand working proposal fix current model also focused performance blocking behavior removed scoped types transitions may cause lot dom manipulation experimenting bit see find sweet spot curious opinion someone core team", "d": "3/2014"}, {"body": "details tab switching problem error removing elements seems happen firefox safari chrome fine timeout warnings fire browsers chrome still triggers animationend event although delayed", "d": "3/2014"}, {"body": "style property names must camecased", "d": "3/2014"}, {"body": "thank kind confusing required chromium", "d": "3/2014"}, {"body": "chromium think historically webkit actually deviate spec add hyphenated versions style object", "d": "3/2014"}, {"body": "planning add warning", "d": "3/2014"}, {"body": "filed devtools repo let move discussion", "d": "3/2014"}, {"body": "quite sure mean could provide code sample", "d": "3/2014"}, {"body": "sorry small example demonstrate point although nt really fully demonstrate use case happy create appropriate example require", "d": "3/2014"}, {"body": "see want traverse output render function quite different input could anything different props except little bit sugar creating components hard say sure without specific example may want use refs allow grab reference mounted child component need mailing list thread might also interesting", "d": "3/2014"}, {"body": "thanks spicyj helpful nt aware refs", "d": "3/2014"}, {"body": "experimenting using react render editor views atom trying make atom agnostic possible comes view frameworks shooting simple standard views assume views expose property toplevel dom element view could missing important details would great able create detached component instance request root element attach element wherever react component would look pretty much like view perspective rest system would object property", "d": "3/2014"}, {"body": "might make sense wait sebmarkbage invertedcontrol stuff", "d": "3/2014"}, {"body": "viewportmetrics used normalize pagex pagey mouse events syntheticmouseeventjs perhaps ironically created prevent synchronous layouts mouse event handlers", "d": "3/2014"}, {"body": "yeah unfortunately mouseentermouseleave nt get simulated properly moment due unique bubbling situation biggest blocker picking good api think maybe", "d": "3/2014"}, {"body": "easily experiment node interactive repl node var react require react reactrendercomponenttostring reactdomdiv reactrendercomponenttostaticmarkup reactdomdiv note absence attributes using", "d": "3/2014"}, {"body": "means client side react mount components server rendered page", "d": "3/2014"}, {"body": "useful want use react render static websites aka nt want react client side means drop datareactid every tag checksum huge saving bytes yes naturally react mount", "d": "3/2014"}, {"body": "shadowfaxenator correct saying react mount components try react blow away dom reuse nodes react uses checksum ids mount intelligently reuse nodes", "d": "3/2014"}, {"body": "issue arises jsx task jsxjs line file files warning socket closed use force continue error socket closed socketwrite dowrite writeorbuffer socketwritablewrite socketwrite objectmoduleexports c object c objectthistaskfn c object c taskruntaskfn c var child spawn cmd binjsxinternal args args function error result code error gruntlogerror error done false else done childstdinwrite jsonstringify configgetconfig looks like spawn child input stream available running node binjsxinternal works however get message saying warning still waiting stdin", "d": "3/2014"}, {"body": "need put around comments", "d": "3/2014"}, {"body": "silly closed", "d": "3/2014"}, {"body": "saw edit wiki instead", "d": "3/2014"}, {"body": "sorribas version running details help repro cc benjamn commoner", "d": "3/2014"}, {"body": "thanks quick reply happened ran like also run file like works run whole directory", "d": "3/2014"}, {"body": "thanks lot report looks like benjamn updated commoner sure update dependency soon pushes npm", "d": "3/2014"}, {"body": "hey guys thanks quick response thanks good work", "d": "3/2014"}, {"body": "aslo encounter problem today", "d": "3/2014"}, {"body": "case still old version dependency installed", "d": "3/2014"}, {"body": "mean need inject params json server side", "d": "3/2014"}, {"body": "simply attributes wo nt appear markup also means resxt ca nt mount nodes clarify bit", "d": "3/2014"}, {"body": "see patch dojo toolkit basically android versions could fixed changing order properties checked checked", "d": "3/2014"}, {"body": "mostly certain intentional forget exactly petehunt", "d": "3/2014"}, {"body": "andreypopp meant right intentional also comment somewhere code explaining remember right makes sense would think common use case would assigning unique key cloned node returning render cases simple copy key", "d": "3/2014"}, {"body": "quite sure mean nt attach events elements nt overhead events system", "d": "3/2014"}, {"body": "jaredly seeing issues synthetic event system may actually help get responsiveness underpowered machines attaching event listeners actual dom nodes expensive", "d": "3/2014"}, {"body": "yeah seeing lag know hack around componentdidmount wondered would possible switch native event handling", "d": "3/2014"}, {"body": "jaredly seeing lag goes away use native event handling interested seeing test case shows", "d": "3/2014"}, {"body": "step use really underpowered netbook yeah put together test page", "d": "3/2014"}, {"body": "problem probably exacerbated keydown change state rerender update dom loop bound input elements", "d": "3/2014"}, {"body": "input related problem see issues click handlers suspect nt", "d": "3/2014"}, {"body": "noticed inputs", "d": "3/2014"}, {"body": "nt onmousemove handlers moment would nt surprised issues well", "d": "3/2014"}, {"body": "click handlers nt generate enough events bottleneck", "d": "3/2014"}, {"body": "jaredly also issue inputs", "d": "3/2014"}, {"body": "issue would solve", "d": "3/2014"}, {"body": "concern specifically case close", "d": "3/2014"}, {"body": "additional toying polymer react ran bug straightforward example jsbin react component simply toggles css class state changes due mouse click css class added properly first click toggled removing css class throws error", "d": "3/2014"}, {"body": "definitely something weird going error message accurate though generally difficult guess framework level root source problem seen errors like past typically used client code make copies reactgenerated nodes also copying attribute supposed unique brief investigation nt point time", "d": "3/2014"}, {"body": "actually get different error firefox trying get node event repro chrome though", "d": "3/2014"}, {"body": "let rephrase sure error explicit someone intimately familiar react trying like running brick wall smile besides point issue nt error messaging sounds like may issue polymer shadowdom polyfill tried playing bit believe able get work ing light dom node react component rendered sounds like polymer function wraps dom api methods interacting shadow lightdom since react using somewhere ing root element sounds like polymer react disagreed tree look like removing explicit exposes polymer version react starts playing nicely curious thing felt necessary add first place pretty sure react complaining light dom node right nodetype made couple changes rendering loop meantime may eliminated issue thank looking since jsbin seems working well application going go ahead close hope learned something new", "d": "3/2014"}, {"body": "story consistent findings failing something like sounds like one shadowdom wrappers talking", "d": "3/2014"}, {"body": "using polymer shadow dom polyfill never see raw dom nodes either bug one known limitations would useful know got reference node", "d": "3/2014"}, {"body": "arv react creates nodes setting unless polymer hooking setter might one way raw dom nodes get exposed", "d": "3/2014"}, {"body": "wrap innerhtml accessors buggy implementation webkit blink reason need wrap everything known limitations accessors", "d": "3/2014"}, {"body": "window document since non configurable webkit", "d": "3/2014"}, {"body": "arv indeed getting wrapped nodes ran issue rendering react component inside one solution time unwrap polyfilled node reference use react seemed fix problem initially ran issue turns passing unwrapped node react bad idea works fine without think root cause initial issue due misuse react rendering api believe calling upstream update instead using everything actually works fine smile figure possible use react render polymer elements", "d": "3/2014"}, {"body": "easy polymer elements custom elements createelement innerhtml etc work", "d": "3/2014"}, {"body": "hate ran reason added rendering loop rendering react component inside polymer element using light dom node root node react component works fine need conditionally render child node error thrown get around passing react unwrapped node lose ability toggle css classes interact form elements error thrown unfortunately trouble reproducing exact behavior jsbin spend much time anyone think losing battle reason assume react compatible polymer vice versa", "d": "3/2014"}, {"body": "ok created mother test cases creates four react components regular form css class toggler table row appendremoveer list item appendremoveer renders components following ways inside polymer element unwrapped light dom node inside polymer element wrapped light dom node inside plain dom element variety seems exhibit different behavior items note class toggler fails respond passed wrapped dom node maybe polymer polyfill things events sure oddly enough nt seem see nontrivial application pure react dom renderings fail work properly polymer polyfill included page commenting polymer polyfill framework custom element definitions allow pure react components work expected imagine due polyfill wrapping dom nodes whether want using instance causes react throw error sure go mentioned unclear react work compatible polymer polymer work compatible react really bad idea drop wait polymer mature would also interesting see mozilla xtag polyfill exhibits behavior already months late project time investigate path perhaps vjeux insight based blog post", "d": "3/2014"}, {"body": "react need anything polymer court take look next week back vacation", "d": "3/2014"}, {"body": "arv fantastic thanks much reopen issue polymerpolymer", "d": "3/2014"}, {"body": "prototyped using xtag afternoon seemed work nt thoroughly test case question reactpolymer interoperate definitively yes make easy possible embed react component inside polymer components visversa nt enough context actual bug make internals react polymer friendly generally happy", "d": "3/2014"}, {"body": "vjeux think problem actually polymer creating jsfiddle mentioned earlier looks like mere presence polymer polyfill prevents react working element arv mentioned issue polymer court assume take lead investigation guess guys stand polymer team chance look thanks taking look beers", "d": "3/2014"}, {"body": "dlindahl got working using polymer making sure polymerplatformjs comes react ensure consistent view wrappers page remove manual unwrapping", "d": "3/2014"}, {"body": "arv sparklingheart fantastic worth documenting order dependency either two projects additional work added either project remove dependency", "d": "3/2014"}, {"body": "polymer documents note due nature polyfills maximize compatibility libraries make sure platformjs first script tag document", "d": "3/2014"}, {"body": "polyfills would cause problem polymer aware others maybe others say update error message include note polyfills nt think probably polymer job message", "d": "3/2014"}, {"body": "think onus us polymer polyfills need control whole world mar pm pete hunt notifications githubcom wrote polyfills would cause problem polymer aware others maybe others say update error message include note polyfills nt think probably polymer job message reply email directly view github", "d": "3/2014"}, {"body": "arv since errors caused including first dramatic confusing could make note polymer docs bit assertive since longer issue closing issue", "d": "3/2014"}, {"body": "would great currently use app avoid explicitly passing core application objects", "d": "3/2014"}, {"body": "cool take look week", "d": "3/2014"}, {"body": "afraid behavior intentional write things like onchange isenabled amp amp thishandlechange nt think going change", "d": "3/2014"}, {"body": "explains falsey part failing silently null value passing null values event listeners least warned", "d": "3/2014"}, {"body": "similarly could write something along lines felt like helpful behavior convenient falsey handlers ignored like nt render anything included element children", "d": "3/2014"}, {"body": "right thought standardizing boolean instead works fine maybe worth breaking change tripped couple times someone changes method name typo etc", "d": "3/2014"}, {"body": "personally find much weirder ignored nt surprise null props consistently assume equivalent specifying prop like merging result getdefaultprops would definitely change treat invalid", "d": "3/2014"}, {"body": "would also definitely fix initializetouchevents problem nt know perf impacts bubbling document though", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "anyone picking one otherwise would like give go", "d": "3/2014"}, {"body": "would also fix problem arguably bug unexpected undesirable", "d": "3/2014"}, {"body": "sanderspies exactly mind", "d": "3/2014"}, {"body": "petehunt great potential scenario seeing elements listeners level event types one event listener child element listens event parent element guess always want use parent element lifetime dom changes therefore also element needs listen would imply would also need removeadd event listeners fly sure already thinking adding something like bindlocally event plugins level like ontouchmove bindlocally true phasedregistrationnames bubbled keyof ondragover true captured keyof ondragovercapture true good idea bad idea missing stuff", "d": "3/2014"}, {"body": "really function topleveltype event wrote naming might clearer right nt believe ever remove listeners", "d": "3/2014"}, {"body": "spicyj wrote code bit hastily guess touchmove also notice ondragover ondragovercapture forgot correct", "d": "3/2014"}, {"body": "maybe best solution component want render people without js", "d": "3/2014"}, {"body": "make noscript automatically sort like existing wrappers input select textarea want take crack", "d": "3/2014"}, {"body": "sure try get pr soon", "d": "3/2014"}, {"body": "sebmarkbage codmod coming touches bunch nt jump quite yet", "d": "3/2014"}, {"body": "okay keep posted manually fix callsites slip codemod", "d": "3/2014"}, {"body": "codemod nt actually fixing touching code around would merge hell", "d": "3/2014"}, {"body": "really recommended general approach updating components stops using perhaps always reading data directly backbone", "d": "3/2014"}, {"body": "yes reading directly backbone render username changes course could use setstate something like use state seems exactly forceupdate misinterpreting understood ok call forceupdate indicate component dirty sense state outside thisstate changed understand ways use react considering using immutable collections obvious transfer backbone models however backbone react still seems advisable choice sense seems defacto reactbeginners advice think supported especially interested advantage considering error see indicate issue nt see ever really would problem", "d": "3/2014"}, {"body": "ah might make sense yes really familiar backbone ca nt say better way ultimately want pass relevant data props perhaps option viewpoint say makes sense naming perspective though current behavior seems correct unmounted component means telling update nt exist mounting component simply means nothing visual update able update state still makes sense say suggesting wrong current behavior seems line naming convention least also could consider using mixin could define whatever makes sense avoiding weird globals someone involved project decide ofc", "d": "3/2014"}, {"body": "nt setstate throw unmounted instance", "d": "3/2014"}, {"body": "spicyj yeah right distinctly remember case apparently however called mounting", "d": "3/2014"}, {"body": "see setting something mounting always considered error think unmounting considered warning though though imagine implementing might easier consider warning", "d": "3/2014"}, {"body": "working link wanted read", "d": "3/2014"}, {"body": "tnx op mrt schreef andreas svensson notifications githubcom real link wanted read reply email directly view github", "d": "3/2014"}, {"body": "currently flaw sorts react used get around issue able create separate textnodes innerhmtl able provide kind identification number different levels could attacked spicyj sumitted pr believe concatenated adjancent string children rejected broke determinism children array something like seems someone finds important enough fix solution would concatenate adjacent strings rendering likely nt easy sounds case simply put everything inside braces", "d": "3/2014"}, {"body": "case nt much really wanted output padded space got second case trying make code pretty promptly fell trap", "d": "3/2014"}, {"body": "fwiw putting onto new line gets parsed would expect awkward balance svg definitely makes trickier check", "d": "3/2014"}, {"body": "happens empty kcarnold may good know afaik recommended way dealing children etc", "d": "3/2014"}, {"body": "empty nt get exception first child element goes missing use way recommend prefer get warning eg", "d": "3/2014"}, {"body": "thanks reporting verified nt fix even though fixes another bug produces error message", "d": "3/2014"}, {"body": "happens enqueue removal children set html queued removal happens queue processed element missing confuses react queue innerhtml set well fixed kcarnold workaround bug assign different prop div react create new element instead reusing existing one", "d": "3/2014"}, {"body": "definitely want open pr need end signing cla merge feel free preemptively", "d": "3/2014"}, {"body": "sidenote details state dom batching seems like rafbatching something intend make default soon future would take care batching state dom updates believe future", "d": "3/2014"}, {"body": "yeah going figure pending state works believe still want flush updates within event loop though change still helpful", "d": "3/2014"}, {"body": "guess improved", "d": "3/2014"}, {"body": "yep errors longer rethrown react quite rediculous messes errors many browsers", "d": "3/2014"}, {"body": "feel free reopentweak issue would help top recent norethrowing improvements", "d": "3/2014"}, {"body": "already work fine master", "d": "3/2014"}, {"body": "root issue specialcase jsx apparently take account easy fix also look adding feel able easily comment code edit wrong specialcase handled correctly pr shortly", "d": "3/2014"}, {"body": "would nice created pr prepare ground discussion", "d": "3/2014"}, {"body": "thumbsup", "d": "3/2014"}, {"body": "gnijor task", "d": "3/2014"}, {"body": "pull request coming soon", "d": "3/2014"}, {"body": "actually never mind seems working thanks", "d": "3/2014"}, {"body": "sounds like got reacttools mistake way final drop", "d": "3/2014"}, {"body": "makes sense reason getting ridiculously large file sizes last night browserify gzip lightweight components around maybe minification help bit thanks", "d": "3/2014"}, {"body": "wrong react promoting virtual components instances implementation detail opinion nt rely may change also gist refers methods defined component longer available class need use", "d": "3/2014"}, {"body": "issue describing reasons behind decisions take better grasp", "d": "3/2014"}, {"body": "inside component two different things creates virtual component basically shell containing class props tells react want dom look like rendering done return verbal description expected output physical instances instances components react created physically exist basically think", "d": "3/2014"}, {"body": "thank clarification kind assuming instance use ismounted method inside component conclude used inside component life cycle componentdidmount componentwillunmount means ismounted always return true point method", "d": "3/2014"}, {"body": "component unmounted possible instance still accessible reference saved case ismounted return false", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "hllau easy fix want try fix submit pull request", "d": "3/2014"}, {"body": "vjeux sure want try contribute let", "d": "3/2014"}, {"body": "solved problem looks like setting parent first example hence wo nt render properly set parent element work", "d": "3/2014"}, {"body": "solved used window namespace", "d": "3/2014"}, {"body": "related perhaps", "d": "3/2014"}, {"body": "still working actually duplicate adding elements intended clickable still leastoffensive workaround", "d": "3/2014"}, {"body": "forget ive moved nt want ask bower redirect repo cheers", "d": "3/2014"}, {"body": "another problem warning specific reason allow onkeyup onkeydown instead onchange value depending state component want intercept keycodes change also want blinking cursor readonly option workaround use empty function onchange would nice avoid", "d": "3/2014"}, {"body": "evernight helpful warning wrong yes annoying ca nt squelched end burrying actually important warnings generally annoyance", "d": "3/2014"}, {"body": "evernight post simple example code looks like nt impression listening keydownkeyup work controlled components way would want react someone paste text move around using mouse etc way nt cause key events", "d": "3/2014"}, {"body": "syranide yeah nicer warnings especially runtime probably nt spicyj behaves exactly want exactly sure ignores mouse events though", "d": "3/2014"}, {"body": "evernight mean ignores mouse events strange case write suppress warning", "d": "3/2014"}, {"body": "spicyj mean ca nt move text around pastedelete text using mouse probably debugging would explain current behavior suits needs maybe case typical indeed still use empty function workaround", "d": "3/2014"}, {"body": "evernight yes handling onchange sounds like might want uncontrolled component see", "d": "3/2014"}, {"body": "still seeing error even inputs catch component rendered inside unwrapped polymer element sure bug react entirely unclear resolve problem anyone help nudge right direction", "d": "3/2014"}, {"body": "dlindahl post minimal jsbin jsfiddle showing problem new issue", "d": "3/2014"}, {"body": "spicyj done", "d": "3/2014"}, {"body": "discovered disable using reactminjs using proptype validation done need disable guard proptype validation", "d": "3/2014"}, {"body": "react nt problem guard either version development unminified reactjs production reactminjs former helpful warnings latter extra performance optimizations", "d": "3/2014"}, {"body": "fixed master", "d": "3/2014"}, {"body": "thomasboyt thanks tracking issue trying update react jsxrequirejsplugin puzzled disable manually modified jsxrequirejsplugin provides", "d": "3/2014"}, {"body": "works invalid version error node version npm v npm install react error reactify", "d": "3/2014"}, {"body": "guess parsing changed parsed fine fwiw npm year old would suggest updating guess could actually publish version numbers differently", "d": "3/2014"}, {"body": "trouble mrjoes shim believe underscores used following shim pulled javascript functionprototypebind var empty function functionprototypebind function bind length var target typeof target function throw new typeerror functionprototypebind called incompatible target var args arrayprototypeslicecall arguments normal call var binder function instanceof bound var result targetapply argsconcat arrayprototypeslicecall arguments object result result return result return else return targetapply argsconcat arrayprototypeslicecall arguments var boundlength mathmax targetlength argslength var boundargs var lt boundlength boundargspush var bound function binder return function boundargsjoin return binderapply arguments binder", "d": "3/2014"}, {"body": "would like well use case generally constructing object beforehand", "d": "3/2014"}, {"body": "syranide believe even part spec jsx modeled", "d": "3/2014"}, {"body": "jordwalke sure nt think like proposal discourages mutation initialization way build props ideally disallowed prop warnings issued earlier downside prevents us moving towards named arguments exploded arguments model instead passing props object", "d": "3/2014"}, {"body": "one first things struggled started experimenting react pass object sub component using jsx", "d": "3/2014"}, {"body": "going post request inline converter jsx raw js throughout online docs issue seems related find api tidy completely forgone jsx code source readable online docs require mental conversion seems silly affordance online docs convert jsx snippet js mental conversions would unnecessary would affordance bring issue close minimal grief missing something", "d": "3/2014"}, {"body": "remove since proptypes longer throws suppresses warning cpojer", "d": "3/2014"}, {"body": "oneoftype still needs skip warning", "d": "3/2014"}, {"body": "links helpful thanks sharing would great see full blown example react events tooltips hover current examples found appear static outputs event handlers", "d": "3/2014"}, {"body": "fdecampredon thanks work", "d": "3/2014"}, {"body": "explain link one solves finding exactly issues described", "d": "3/2014"}, {"body": "ran imo surprising behavior adding virtual dom nt result script evaluation would example created fiddle demonstrate issue based thread seems like expecteddesired", "d": "3/2014"}, {"body": "matthewwithanm say little use case think like least surprising thing hard know guess behavior would surprising way", "d": "3/2014"}, {"body": "one way handle nonmethod properties classes etc would use speculative annotations angular planning use might end w something like js import reactcomponent reactreactcomponent import withmixins propvalidate reactutil import props reactprops import mymixin appcomponentsmymixin var props myprop propsfnisrequired withmixins mymixin propvalidate props class component extends reactcomponent course wo nt actually table introducing required build step syntax whether traceur version sweetjs macro etc devs would like optout step could either stick maybe use syntax original snippet showed eg js class component extends reactcomponent componentaddmixins mymixin componentpropvalidate props", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "actually sure whether end transition achievable think say specific ends currently ends transition within element ends opinion bug even fixed end first transition let say first transition visibility color instance think anything beyond might crazy cornercases personally nt problem handled incomplete documented well nt supported", "d": "3/2014"}, {"body": "still undocumented purpose", "d": "3/2014"}, {"body": "yes need add project cleaning context make sure usable", "d": "3/2014"}, {"body": "chrome beta firefox change nt fire dragging mouseup listen input", "d": "3/2014"}, {"body": "happens windows bit well tried wolverex suggestion installing mingw added c mingwbin c path restarted still luck basic command fallback using virtual machine pretty heavy weight", "d": "3/2014"}, {"body": "try using command instead let know works", "d": "3/2014"}, {"body": "installs via npm jsxc nt recognized command last snippet output jsxc nodemodulesjsxc mkdirp chokidar optimist wordwrap minimist glob inherits minimatch reacttools esprimafb jstransform co mmoner tried jsxc nt recognize well full path c recognized inte rnal external command operable program batch file", "d": "3/2014"}, {"body": "sorry work", "d": "3/2014"}, {"body": "safe side guys issues make doubly sure git set wrong lineendings settings got messed used instead basically broke everything extremely weird ways including errors like", "d": "3/2014"}, {"body": "petehunt thanks npm install g jsxc worked like charm yip", "d": "3/2014"}, {"body": "feel would real use cases data visualizations computations get heavy datasets large api even convention cache computations would nice also asked stackoverflow", "d": "3/2014"}, {"body": "epeli could nt use general purpose memoizer nt necessarily need baked framework right", "d": "3/2014"}, {"body": "two separate issues allowing people easily produce components corresponding nonstandard tags making knows things given projectcodebase someone nt use jsx likely never addressing former simply exporting would big immediate win may others position well latter issue surely challenging tackled later deemed worthwhile", "d": "3/2014"}, {"body": "non javascriptfirst implementation would nt require changes facebookesprima", "d": "3/2014"}, {"body": "check", "d": "3/2014"}]