[{"title": "error message using refs outside render difficult understand", "body": "something reactowner refs intuitive", "num": "383", "d": "9/2013"}, {"title": "listen events demand instead first mount", "body": "convos chrome team indicated listening mousewheel kills optimizations agh create mapping synthetic event set real events listen attach listeners need initial diff nt even need worry removing listeners think periodic gc listeners rather last listener removed since could lead thrashing", "num": "381", "d": "9/2013"}, {"title": "listen events mount point top level", "body": "event occurs page regardless dom subtree managed react goes react event subsystem would great instead listened mount point child documents eg iframes instead top page", "num": "380", "d": "9/2013"}, {"title": "", "body": "really like plugin open source allows us implement function also function always describe structure point time api allows describe modal layers point time means open close layers function like function react assigning yungsters mastered reactlayers stuff fb stack petehunt also great experience using building layers integration react whoever timeneed", "num": "379", "d": "9/2013"}, {"title": "dangerouslysetinnerhtml nt properly reconcile", "body": "sbezboro reported following issue irc master repro case render render render div innerhtml empty instead nt really know going jordwalke petehunt guys look", "num": "377", "d": "9/2013"}, {"title": "fix direct uses document global", "body": "introduced couple uses need fix nt actually available though need careful using directly well breaks server rendering", "num": "373", "d": "9/2013"}, {"title": "documentation createclass rendercomponent vague add links", "body": "great work new documentation small remarks component api page mentions createclass rendercomponent please make reactcreateclass reactrendercomponent mentioning code please make clickable go right location documentation eg reactcreateclass go toplevelapihtml reactcreateclass", "num": "371", "d": "9/2013"}, {"title": "reactwithaddonsjs", "body": "let package separate build includes anything else would displace current reacttranstiongroupjs build", "num": "369", "d": "9/2013"}, {"title": "reset button docs live editor", "body": "", "num": "368", "d": "9/2013"}, {"title": "windows line ending jsx error message bad", "body": "using file windows line ending crlf following messages happen chrome firefox detect crlf ending throw real exception warning instead evaling nontransformed file", "num": "366", "d": "9/2013"}, {"title": "support onselect", "body": "seems currently supported would nice properly support browsers would prefer differentiate standard supporting elements input textarea see also", "num": "365", "d": "9/2013"}, {"title": "use mutationobserver instead mutation events", "body": "currently listen think make onchange work contenteditable apparently expensive look replacing mutation observer obviously api different observers get batched may build abstractions make work think relatively easy synthetic events nt looked", "num": "358", "d": "9/2013"}, {"title": "error checking binding event missing handler", "body": "javascript libraries building uis provide sort feedback thrown error notification trying bind event missing handler however react merely nothing example javascript var testnode reactcreateclass handleclick function consolelog never get called error occur render function return reactrendercomponent documentbody since nt camelcased work obviously however errors generated would love see binding mechanism explain handler nonexistent", "num": "354", "d": "9/2013"}, {"title": "error messages unclosed xml tags misleading", "body": "example app error online tag closed correctly compiling jsx compiler gives error line syntactically correct however frustrating newer developers able resolve", "num": "353", "d": "9/2013"}, {"title": "doccostyle documentation", "body": "cleans lots categorization nits made docs cleaner thanks old sections reduced sentences thinking taking occasion fully comment examples processed docco potentially replace dangling documentation sentences fresh fullyfeatured examples walkthrough explaining various points current docs one example raised irc components state machines seeing whole event explanation dedicated section sentences reduced comments said examples maybe even better docco display live editor sidebyside whatever ui works user see example code play reading comments beside still complete ref api nearby time ensures examples well separated chunks imagine front page examples comments docs idea really demo kinds things could saying way nonbrainer even without docco processing part even design new examples replacecomplement old ones expose react general ideas rather demoing small snippets components eliminate another chunk documentation examples live repo doc page goal thinking able tell people react examples api docs extra explanation needed end day nt much documentation left outside examples api docs flaws approach mainly narrative top bottom code think react nature alleviate really show example thinking starting existing comment ex prove hey details nt fit example comments cookbook still realize ambitious seems appealing enough suggested really believe good example eliminate lots explanations approach taken repos seem work well far", "num": "352", "d": "9/2013"}, {"title": "nowrap nt work table cell", "body": "creating horizontal scrolling webpage using table nowrap hack calculating width screen every time seems react ignore nowrap work around", "num": "348", "d": "9/2013"}, {"title": "classname vs class", "body": "jquerybootstrap example see would class btn equivalent classname btn one preferred", "num": "346", "d": "9/2013"}, {"title": "example todo list unable edit", "body": "fix line add onchange thishandlekey", "num": "345", "d": "9/2013"}, {"title": "support onmouseover", "body": "someone trouble irc edit changed subject document support documentation issue already", "num": "340", "d": "9/2013"}, {"title": "fails wholedocument rendering", "body": "see issue reported causes reactpage fail", "num": "337", "d": "9/2013"}, {"title": "jsx transform nt always preserve line numbers", "body": "transforming jsx gives looks like lost line break admit breaking weird since compiles nice line numbers preserved lint errors etc correspond easily", "num": "335", "d": "9/2013"}, {"title": "create sourcemaps build", "body": "browserify sort allows puts inline file far ideal consider working browserify team make possible build map outside bundle something else might able extract sourcemap might stop using browserify", "num": "334", "d": "9/2013"}, {"title": "jsx executable wrong version", "body": "outputs commoner version probably make version", "num": "329", "d": "9/2013"}, {"title": "create noncrappy standalone build reacttransitiongroup", "body": "want people able use relatively easily actually easy figure may fun things checked makes something pretty terrible packages copy react", "num": "327", "d": "9/2013"}, {"title": "finalize real public api", "body": "order number things need able access modules currently consider internal main need comes components plugins need usual example accesses nt currently want package option build standlone package without substantial changes hacks probably wo nt work everywhere ca nt without also packaging need public api make work less awkwardly soon wanted make sure filed", "num": "326", "d": "9/2013"}, {"title": "send npm package builds site well", "body": "browser packages requests npm package well", "num": "319", "d": "9/2013"}, {"title": "add stack overflow support page", "body": "already tag everything pretty dead could undiscoverable follow", "num": "317", "d": "9/2013"}, {"title": "fail run jsx compiler windows vista business", "body": "installed reacttools npm tried run jsx gives following error c usersmyusernameappdataroamingnpmnodemodulesreacttoolsbin gt node jsx throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit possible fix", "num": "316", "d": "9/2013"}, {"title": "inputs uneditable value attribute present", "body": "see element rendered value attribute already presentset input seems uneditable thought might something handlechange sure hopefully misusing jsx thanks", "num": "315", "d": "9/2013"}, {"title": "react cookbooks", "body": "case obvious watching ember lot lately pretty jealous docs efforts getting beyond started working cookbooks think awesome idea want steal could really help cut time spend answering questions would also awesome resource", "num": "313", "d": "9/2013"}, {"title": "newlyinserted svg elements render component update", "body": "components try render svg elements etc must inserted parent get rendered browser assume function uses new svg elements created way browser wo nt render standalone one quick fix add svg elements wrap tag extract may appropriateelegant solution realize svgs nt react focus thought point anyway case thanks great work far", "num": "311", "d": "9/2013"}, {"title": "label property", "body": "react nt seem support property labels search nt turn anything github repo", "num": "310", "d": "9/2013"}, {"title": "classlist wanted", "body": "adding property included components synchronised would nice think look much cleaner nt think", "num": "309", "d": "9/2013"}, {"title": "existence throws error invoking", "body": "scenario trying use react dynamically replace tag app content addition need use callback handle custom event binding problem soon callback added react throws following errors jsfiddle conclusion content still renders error bit unnerving simply removing callback prevents errors thrown brand new possible trying make react something meant handle either way think mere existence empty callback throwing errors fwiw scenarios involve injecting content rather replacing existing domnode seem work fine without callback", "num": "308", "d": "9/2013"}, {"body": "react reuse component since type position tree intentional many reasons speed memory etc since assumed opposite understand confusion coming since component reused wo nt called wo nt resetting like component initialization react provide hook though docs said think want carefully consider implications controlling component multiple places get messy make things bit harder reuse nt know full scope application maybe work great noticed though take alternative approach selection passing callback leaving entirely prop set initial state nt use", "d": "9/2013"}, {"body": "interesting agree issue remain closed componentwillrecieveprops works thanks however thoughts questions interesting react notion component identity based entirely name position would imaged would like argue components assigned properties much part identity name position current technical limitations fundamental ideologies react make", "d": "9/2013"}, {"body": "lot quirks react come desire speed case threw child away property changed would also need remove dom node create new one virtually identical except one attribute expensive slow part react philosophy data able flow application top level data changing frequently maybe backbone model something really want minimize set things change line hopefully helps bit questions great question newsgroups could probably made interesting blog post", "d": "9/2013"}, {"body": "like add used concern however props constituted identity component always throw component away whenever data changes slow also destroy eg form inputs selection position many cases reading antipattern computing value changes state value date additionally means state storing actually minimal representation component state instead try avoid reading instead compute value inside based usually want particular use case notice minimal set state needed component instead take callback asks change selected state make sense chenglou going document", "d": "9/2013"}, {"body": "one thing override identity setting key prop component", "d": "9/2013"}, {"body": "thanks additional info good know get exactly mean using callback tell needs expand new react hard know best practices thought given idea immutability telling component change would wrong given refs guess prefer idea setting key prop seems declarative using hook another thing assumed guess assumed wrong diff process currentmockdom nextmockdom thought intelligent get since changing style react would nt throw away whole node would change style calculating minimal changes required said throwing away components prop changes seems assumption wrong however seem remember video react saying something similar apply minimal set dom changes required however occurs perhaps process used react interacts real dom transitioning currentmockdom nextmockdom unless missed lot docs may also need clarification would cool read blog post dom mockdom nextmockdom nt even know real concept interact stored basic example updating internal state think understand well indepth understanding would beneficial complicated example rendered rerendered list components listapp state changes say perhaps select one component mark highlighted components rerendered criteria rerendering regardless components render identical mockdom one class added affect real dom ie minimal set dom changes applied actually written realize able answer lot questions react would consolelog minimal set dom commands applied guys flag use use developmentdebugging", "d": "9/2013"}, {"body": "tweak style attribute mutate style attribute use keys component class heuristic indicate want blow away whole subtree replace innerhtml faster dirty checking rendered markup many individual dom mutations heuristic actually quite effective experience vjeux working blog post telling component change indeed great practice especially refs however react data flows tree automatically order flow data back pass callback inform top tree data change sugar called make bit streamlined reason explicitly data fundamentally flows one way von neumann machines nt make data flow explicit found becomes hard maintain", "d": "9/2013"}, {"body": "multiple mount points attach suite listeners mount point tipping point instead go top level", "d": "9/2013"}, {"body": "fb layers many internal deps nt even use ig instead suggest open source react layers stuff plus light ig shim nt get nice behaviors value community lies mostly architecture imo yungsters redid layers today would differently ie think could composition could nice greenfield opportunity", "d": "9/2013"}, {"body": "honest nt know would done anything differently layer abstraction held really well able extend make improvements time without much code decay", "d": "9/2013"}, {"body": "yungsters yeah layer awesome wondering use mixin rather composition hook react", "d": "9/2013"}, {"body": "guess sure mean using composition hook layers react asking use instead returning components", "d": "9/2013"}, {"body": "yeah", "d": "9/2013"}, {"body": "layers inherently anchored position dom example make sense exist returned tree actually want return subtree well list layer components", "d": "9/2013"}, {"body": "makes sense return value renderlayers little confusing never used multiple layers component clear first glance follows react normal data flow", "d": "9/2013"}, {"body": "designed debated whether allow returning single layer component however want engineers learn something new use case requires one layer component also felt like painful return map one key keep mind time standard way passing children keys react component", "d": "9/2013"}, {"body": "think frags would nt mind putting components render method would kind weird anchored dom frags would precedent components nt render anything place dom would paradigm learn", "d": "9/2013"}, {"body": "would strongly opposed nt think makes code easier read makes following questions harder answer component render layers given component returned layer component component render nonlayer", "d": "9/2013"}, {"body": "think odd return things output nt exist physical tree component layers ability multiple distinct render tree roots fb reflects return value confusing constrain bit easy would require single component returned modify existing code use allow returned within frags would make sense required top render tree nothing deeper probably interested making use general abstraction solves layers also cases want dom subtree actually exist another part page yet controlled component think portal another part page even something simple current would quite awesome released separate project would nt even mind bringing ton extra js resources pete could also open source insta one quickly rather make conform get frags thoughts", "d": "9/2013"}, {"body": "clear use reactlayer reactlayeredcomponentmixin ig fb layer behaviors layer impl yet api compatible fb layers behaviors design favor bringing opensource want make sure think making api cleanup", "d": "9/2013"}, {"body": "one tidbit seems happen value exactly step step different ie things work expected", "d": "9/2013"}, {"body": "happens change step instead works right", "d": "9/2013"}, {"body": "reduced test case lines", "d": "9/2013"}, {"body": "petehunt yeah changing use span works expected", "d": "9/2013"}, {"body": "anyone wants look bug probably", "d": "9/2013"}, {"body": "brianr reproduce seeing also bugs use different string", "d": "9/2013"}, {"body": "vjeux able reproduce particular behavior given small repro case original code several layers keep trying", "d": "9/2013"}, {"body": "also trying make rendering iframes work probably usuallyalways wrong thing use", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "spicyj", "d": "9/2013"}, {"body": "great ideas", "d": "9/2013"}, {"body": "additional remarks drop toplevel api text use react esp left menu component api preferrably reactcomponent toplevel api talks reactdom reactcomponent talks getdomnode lt reactcomponentgetdomnode", "d": "9/2013"}, {"body": "also mentioned", "d": "9/2013"}, {"body": "actually want nt exist", "d": "9/2013"}, {"body": "man would love reactcomponentwithpurerendermixin default several coworkers believed think ship long sailed", "d": "9/2013"}, {"body": "seems problem jstransform library problem begins expression catering expression allows parse find jsx docblock continue rest parse seems trim strings presumably removing trailing", "d": "9/2013"}, {"body": "pr open need apply jstransform cheers paul sep jonathan jacobs notifications githubcom wrote seems problem jstransform library problem begins docblockre expression catering rn expression allows parse find jsx docblock continue rest parse seems trim strings presumably removing trailing r reply email directly view github", "d": "9/2013"}, {"body": "get next jstransform update", "d": "9/2013"}, {"body": "see onchange working contenteditable ondomcharacterdatamodified seems work would prefer drop ondomcharacterdatamodified completely deprecated support onchange oninput mutation observer using sane defaults would nice something like however implementing non mutationobserver browsers seems painful especially nt event ondomsomething event listeners", "d": "9/2013"}, {"body": "making onchange work contenteditable list things", "d": "9/2013"}, {"body": "would test performance adding mutation observers top level document heard slow suspect adding top level may even worse adding specific nodes", "d": "9/2013"}, {"body": "little experimentation shows slowdowns happen even mutations happening nodes listeners also persist listener removed one fun discovery ie slow downs persist across page refreshes thankfully looks like domcharacterdatamodified nt much negative effect domnode listeners", "d": "9/2013"}, {"body": "clarify would expect nearly javascript librariesframeworks least runtime click event triggered would see error console trying call undefined", "d": "9/2013"}, {"body": "oh gross thanks reporting definitely fix let know already working fix otherwise try look tomorrow finally get sleep", "d": "9/2013"}, {"body": "working made pull something else", "d": "9/2013"}, {"body": "right looks lik react nt support attribute could instead add css table cell achieve effect", "d": "9/2013"}, {"body": "thanks report nt plan add support deprecated part strongly suggest using css instead", "d": "9/2013"}, {"body": "cbrake use deprecated check discussion google groups also", "d": "9/2013"}, {"body": "chenglou thanks explanation", "d": "9/2013"}, {"body": "latest version master todo example work", "d": "9/2013"}, {"body": "better yet support", "d": "9/2013"}, {"body": "yeah particular reason supported", "d": "9/2013"}, {"body": "curious seen automatically injected react default use today imho much better suppose could support sake completeness thought make sure guys aware", "d": "9/2013"}, {"body": "discussed bit irc benquinn confused silently nt work whereas events perhaps adding documentation fix problem seems like might well add completeness agree enterleave much useful suggested overout likely missing simply one needed", "d": "9/2013"}, {"body": "agree believe extra allocations notpooled occuring event system already today love track adding mousemove event allocations open memory profiler chrome move mouse around see memory allocated properly freed course use es everywhere flat would make much comfortable adding edit checked already fires way frequently would probably big deal add though really get rid additional allocations event path", "d": "9/2013"}, {"body": "started look little bit allocations redefining trapbubbledevent reacteventemitter still shows allocations chrome memory timeline view convinced anything replacing trapbubbledevent noop makes allocations go away eventlistenerlisten simply calls addeventlistener", "d": "9/2013"}, {"body": "jordwalke pretty sure done least think tracked every callsite pooledclass would helped us updated recast transforms log every syntax construct would cause obvious allocation could nt find anything thinking maybe array slice bind spicyj experiment shows case", "d": "9/2013"}, {"body": "nt verify nt allocations emptyfunction case nt know good way", "d": "9/2013"}, {"body": "used extract source maps bundle related browserify issue", "d": "9/2013"}, {"body": "clsoed", "d": "9/2013"}, {"body": "possible though nt run issue nt run processes guessing seen benjamn also much information possible describe directory structure nodenpm versions run command arguments run issue", "d": "9/2013"}, {"body": "facing problem well node npm os windows bit command used src app exist compilation works without errors linux fails windows", "d": "9/2013"}, {"body": "seen problem well lorefnon please let know githubcomfacebookreactpage works windows", "d": "9/2013"}, {"body": "hi simple fix issue use defaultvalue recommended approach use value update state appropriately onchange callback read forms", "d": "9/2013"}, {"body": "ah bad something like first must typo thought everything thanks works expected", "d": "9/2013"}, {"body": "adding test gist seen irc zpao start one entry code follow others familiar jekyll nt know want put also related nits would nice code samples copypastable directly live editor ie jsx block etc maybe extreme dunno something consistent question sometimes lots things like know rather problem user encountered eg know since jsx really javascript use ternary operations room", "d": "9/2013"}, {"body": "really like idea cookbook way ember implemented experience jekyll pitch setting cookbook section", "d": "9/2013"}, {"body": "oh man sorry missed questions whatever guys need think right going step back let go wild try guide familiar cookbooks think would great working code thanks codeblock highlighting become thing one day better people code needed long perhaps pull relevant parts link working jsfiddle something mcsheffrey let handle jekyll parts thinking something sidebar navigation docs something like would work eventually rewrite docs jekyll today go wild excited work set feel free use let know need help guidance thanks", "d": "9/2013"}, {"body": "awesome reactjs questions stack overflow might make good cookbook recipes also like chenglou idea live code samples samples react homepage maybe embedded jsbinjsfiddle way ember js", "d": "9/2013"}, {"body": "saw people mention wiki irc valid put cookbook entries wiki parse jekyll", "d": "9/2013"}, {"body": "could make work might best option short term ultimately like checked ideal world one could clone react repo getting plane without wifi everything need learn react even means read markdown instead better looking site", "d": "9/2013"}, {"body": "wiki already markdown checking page", "d": "9/2013"}, {"body": "interested checking wiki though page could serve beginning index page checked working jekyll like hold checking anything point happy publishing otherwise things get way complicated working longrunning branch one repos probably best way wiki easier way organize effort made", "d": "9/2013"}, {"body": "result discussion irc wiki temp place organize stuff claim cookbook entries write actual entries checked md offline reading mcsheffrey jekyll entries taken mds", "d": "9/2013"}, {"body": "sounds good wiki act working copyrough draft recipes final recipes get added cookbook section jekyll docs zpao submitted pr us build lmk copy works intro section", "d": "9/2013"}, {"body": "also chenglou mentioned include info wiki react introduction something like interested contributing recipe react cookbook see wiki inprogress requested recipes link wiki", "d": "9/2013"}, {"body": "adding markupwrap would seem make sense also hear facebook react bindings art looks crossbrowser drawing library nudging release bindings", "d": "9/2013"}, {"body": "sklobovskaya thanks pointing going defer sebmarkbage since done svgrelated work", "d": "9/2013"}, {"body": "makes sense add markupwraps", "d": "9/2013"}, {"body": "works properly call pull request make possible say directly", "d": "9/2013"}, {"body": "thanks", "d": "9/2013"}, {"body": "another option could accept array value prop sure variant picked would line prop accepts values type", "d": "9/2013"}, {"body": "fb use function used like found much declarative succinct way build css class list give try see like chatting baking functionality react somehow hate name even mean nt sure put useful utility functions yet ideas advice love hear", "d": "9/2013"}, {"body": "petehunt thanks exactly need though still cool prop would built using function automatically like prop", "d": "9/2013"}, {"body": "preopen source prop everything nixed tomocchino yungsters may know think wanted simplify things", "d": "9/2013"}, {"body": "agree andreypopp class could accept either string object format would useful reference angular exactly", "d": "9/2013"}, {"body": "awesome still use today internally form utility helper helps declaratively specify set classes really readable form also internal transform step turns fast string concatenation without spending object allocation something like elegance transform required runtime version returns exact result fastefficient", "d": "9/2013"}, {"body": "bit tricky situation general issues thanks way browsers insert markup case mount original node nt leave document normal behavior react markup returned function inserted markup contains browsers nt like node actually dropped see happen change render function react uses node thinks created reference since browser dropped node react going confused see error actually pass dom node try get node first fail getting rid method hides error still come back bite later initial render works think run errors ever try state updates anything tries rerender think probably see cases work fine cases run issues browsers change dom example mounting likely cause problems see examples suggestion render wrapper include static content inside component", "d": "9/2013"}, {"body": "nice thing typed browser crash try recreate wrote proposing actually much practice since nt currently work props apart amp nt work consistently anyway noticed practice children think maybe ok since slightly different concepts ca nt remember right think tomocchino amp yungsters cases end day ok consistent since ca nt solve everything allows us flexible objects already special meaning things like ca nt always throw error also think would pretty cool allow automatically add separate attributes objects also special meaning children ca nt eliminate booleans special meaning props ca nt stop supporting entirely fwiw objects props allow admittedly poor way computed properties", "d": "9/2013"}, {"body": "four days ago balpert think consistent say html attributes except style etc strings numbers strings bools nullundef ignored objects errors balpert things boolean values truthy things true balpert children strings numbers strings bools nullundef ignored components components objects errors zpao well objects errors except special meaning balpert right balpert seems pretty reasonable zpao ca nt objects errors children balpert dunno string objects zpao use keyvalue maps balpert ahh right keys thing balpert yes zpao arrays also need allowed balpert children lenient allow objects balpert objects attributes seem bad zpao well make mistake hopefully fairly obvious zpao rule tostring everything except special meaning objects set expected behavior balpert right reason would want tostring object zpao accidentally assigned bool variable nt see anything harder track zpao example computed property like full name though nt know realistic zpao err guess nt actually write must lost draft balpert mean like firstname lastname balpert said balpert fwiw objects props allow admittedly poor way computed properties balpert nt elaborate zpao could person class model first last name properties tostring returns first last balpert oh see balpert yes balpert never overridden tostring far remember balpert sounds like something would nt work ie zpao neither zpao said admittedly poor p balpert mean alternative stringify everything balpert say flag amp amp zpao saying balpert see zpao oh mean children zpao balpert hmm balpert guess yes", "d": "9/2013"}, {"body": "know nt fix good first bug sitting coming next sync", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "duplicate", "d": "9/2013"}, {"body": "one came first though", "d": "9/2013"}, {"body": "well duplicates issue pull request fix closed merged though", "d": "9/2013"}, {"body": "apologies adding noise still getting used github issue tracking thanks telling saturday september ben alpert wrote well duplicates issue pull request fix closed merged though reply email directly view github", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "wanted mousemove mouseup well thinking larger declarative event system could conflict resolution probably get mean time sure api though", "d": "9/2013"}, {"body": "mousemove mouseup think jordwalke suggesting using", "d": "9/2013"}, {"body": "also add way bind onbeforeunload declaratively could helpful", "d": "9/2013"}, {"body": "thoughts think add two functions like would exposed regarding implementation strategy see lot optimisations regarding reducing allocations event dispatching reducing time reconciliation phase think make store listeners array event component pair first element array would represent primary event handler set via virtual dom returned component method settingremoving would constant time still accumulation dispatch path would require additional allocations change object component ids keys references array listeners component values overhead get executing dispatch listeners require iteration specialise common case primiary event handler set eg think may submit pull request", "d": "9/2013"}, {"body": "think something jordwalke yungsters best equipped answer since worked whole events system unfortunately vacation around comment maybe somebody else could comment petehunt sebmarkbage", "d": "9/2013"}, {"body": "tomocchino thinking declarative way component level event listeners could imagine declaring events component class mixins something like would allow separate event handlers mixin also use explicit event delegation also avoid allocation reconciliation think would solve use case currently short term road map though personally looking get away using mixins much possible lot problems composing mixins nt get composable components one things makes react great example trap clicks links could wrap components instead using mixin since events bubble link trapper catch dom node currently linktrapper must define extra unnecessary dom node attach event listeners could potentially create fake component retrieve event listeners without actually rendering dom implementation linktrapper would look something like nt see us exposing public imperative api since goes declarativefunctional approach gives us lot benefits however may expose access reacteventemitter something special lowlevel components needs reach hood", "d": "9/2013"}, {"body": "nt believe change fire contenteditable fields input see", "d": "9/2013"}, {"body": "joshduck react intentionally deviates spec see", "d": "9/2013"}, {"body": "spicyj sure might make sense polyfill oninput old browsers b make onchange depend oninput rather directly modification events way get events", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "see", "d": "9/2013"}, {"body": "many issues latest thoughts whatever get wo nt multiple ways something", "d": "9/2013"}, {"body": "think fixes right sebmarkbage", "d": "9/2013"}, {"body": "right fixed thu sep pm paul shannessy notifications githubcom wrote think fixes right sebmarkbage reply email directly view github", "d": "9/2013"}, {"body": "closing nt issue since", "d": "9/2013"}, {"body": "docs docs docs know fun write developers coming react think assumed know nothing document everything anyone actually working something community need contribute", "d": "9/2013"}, {"body": "benquinn trying good opensource stewards expected document everything rather relying contributions nt get pr community soon go ahead update", "d": "9/2013"}, {"body": "boom", "d": "9/2013"}, {"body": "recently put pull request jshint adds feature ignore block lines javascript resume linting afterward specifically jsx mind could enclose jsx within jshint comment directives rest code lint normal defining react components file get used inside jsx block typically add line near jsx block assuage unused variable warnings appreciate thoughts andor feedback", "d": "9/2013"}, {"body": "see earlier comments recommended run jshint jsx transform implemented khan academy linting tools weekend download everything work really designed external use useful looking something copy maybe make jsxhint npm package calls jsx jshint turn", "d": "9/2013"}, {"body": "spicyj understand recommendation fine something like running jshint part ci build step particular flow use intellijwebstorm jshint plugin automatically highlight linter errors even checked code let alone kicked build found handy immediate feedback since switching react regret seeing linter barf first line jsx javascript files comment jsx see rest code lints enough drag motivated work patch", "d": "9/2013"}, {"body": "gotcha maybe makes sense someone write jsxhint plugin vim configuration set use khanlinter reason know intellij ca nt", "d": "9/2013"}, {"body": "wonder could hack jshint plugin run jsx first passing jshint dogscience", "d": "9/2013"}, {"body": "plugin built intellijwebstormphpstorm separate plugin actually integrated javascript editor settings nothing tweak except version dropdown apparently reads packagejson jshint site specify path jshintrc file one edit sooner patch gets accepted new version released sooner start using new feature right inside ide", "d": "9/2013"}, {"body": "danielmiladinov handle things like coffeescript linting really seriously recommend right avoiding certain regions reason actually missing seriously awesome linting action ignoring regions sugar vim linter tells defined mispelled variable scope etc webstorm linting plugins could fork sure people around would help integrate", "d": "9/2013"}, {"body": "think jshint would receptive syntax transform patch", "d": "9/2013"}, {"body": "petehunt hard tell jsjsx superset javascript syntactically compliant another variant js trouble jshint would need assume particular transformation apply simple function calls order extract value linting process would anyone want transform jsx anything function calls something congruent respect linting likely", "d": "9/2013"}, {"body": "missed may help least short term", "d": "9/2013"}, {"body": "another version toddself", "d": "9/2013"}, {"body": "jordwalke sorry solate reply jshint plugin use nt many options setting nonstandard location jshintrc file choosing version main jshint repository want run hoping pull request make jshint proper could leverage right ide get immediate feedback run build failing may reach jetbrains see perhaps open options say something use build jshint please thank much point directory something like anybody could use whatever custom features jshint installs needed", "d": "9/2013"}, {"body": "spicyj tables issue appears fixed least partially master see jsfiddle looks like commit fixed still weirdness original inside rest directly order correct", "d": "9/2013"}, {"title": "seedanimation", "body": "probably separate module extension plugin whatever", "num": "9", "d": "9/2013"}, {"title": "template makes sense", "body": "template simply string vm constructor makes real nodes cache future instantiation clonenode faster innerhtml remove utilcollecttemplates let users handle wherehow store templates also allows better capsulation component distribution", "num": "8", "d": "9/2013"}, {"title": "seedrouter", "body": "options separate module embedded core enable tighter integration viewmodel", "num": "7", "d": "9/2013"}, {"title": "seedresource", "body": "restful sync seed separate module", "num": "6", "d": "9/2013"}, {"title": "seedvalidation", "body": "probably separate module", "num": "5", "d": "9/2013"}, {"title": "component encapsulation amp custom html tags", "body": "basically component distributed alone extended vm constructor template string globally needs method registers vms unique id nested views", "num": "4", "d": "9/2013"}, {"title": "documentation", "body": "api x class vue x instantiation options x instance properties x instance methods x global methods x directives x filters guide x installation x getting started x displaying list x listening events x directives depth x filters depth x computed properties x handling forms x using transitions x composing viewmodels x app architecture", "num": "3", "d": "9/2013"}, {"title": "complete functional tests", "body": "use casperjs see travis integration ghost x simple directive x template x form elements x expressions x component encapsulation x nested properties x nested viewmodels x repeated items x repeated viewmodels x sharing data viewmodels x todomvc", "num": "2", "d": "9/2013"}, {"title": "complete unit tests", "body": "x api x viewmodel x directives x filters x events", "num": "1", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"title": "backboneview super", "body": "seen lot users complaint wondering good reason implement solution seems elegant though", "num": "2787", "d": "9/2013"}, {"title": "fetch success response vs destroy success response", "body": "believe using success callback fetch function response object directly access properties response looks like response json parsed sent callback hand defining success handler destroy method response parsed string object returned access properties response must jsonparse behavior inconsistent nt responses consistent across success callbacks", "num": "2786", "d": "9/2013"}, {"title": "collectionfetch add true still removes original models", "body": "trying options add true reset false update true remove false together various combinations cases fetch remove original models collections replace new ones trying append new models existing models collection following simple code collectionfetch data offset add true reset false update true remove false success function", "num": "2782", "d": "9/2013"}, {"title": "wrong repo fail", "body": "", "num": "2781", "d": "9/2013"}, {"title": "allow passing custom merge function collection set", "body": "merge routine collection set makes assumption modelmodels passed merging using modelattributes sufficient always case might important instance members model modelattributes optional merge function collection set would allow total control merged one model merge routine broken set safely overridden without completely override set", "num": "2779", "d": "9/2013"}, {"title": "collections care order items insert", "body": "collection comparator etc array json objects loop array objects calling collectionadd object resulting collection original order collectionset arrayofobjects get yet another ordering objects close reality gives", "num": "2777", "d": "9/2013"}, {"title": "calling set collection merge false data ignored matching model found", "body": "calling set collection already existing model id using merge false new model values ignored would expect new values respected trumping old example var c new backbonecollection id foo value old var carlcollectionget foo cset id foo value new merge false cget foo consolelog mget value new fals", "num": "2776", "d": "9/2013"}, {"title": "byid getting lost collection model function", "body": "found bug edge version working collections extending function problem method forgetting check existence passing non model objects overridden model function possibilities may return model instance already added collection bug achieved use cases also example fails javascript var cache var model new backbonemodel id var collection new backbonecollection model cache model backbonecollectionprototypemodel function attrs options return cache attrsid new backbonemodel attrs options consolelog collectionmodels collectionbyid byid collectionset id consolelog collectionmodels collectionbyid byid", "num": "2775", "d": "9/2013"}, {"title": "backbone unavailable using lmd commonjs jquery", "body": "hello using lmd files commonjs style update jquery backbone ca nt see jquery understand reason part jquery commonjslike environments global object thus find jquery object solve problem", "num": "2774", "d": "9/2013"}, {"title": "fix way modeldefaults merged passed attributes", "body": "regression regarding attributes passed model merged defaults introduced usecase document model attributes declaring attributes eg person instantiate model pass values actually want use new behaviour impossible pass attributes value override defaults nt seem like change intentional", "num": "2773", "d": "9/2013"}, {"title": "good idea use backbone reactivejs", "body": "app uses backbone handlebars many elements maintain views tightly coupled makes hard seperate subviews tired manipulating dom elements refactoring legacy code found reactivejs invented solve problems like angular crazy suppose angular breaks solutions use use developing apps might great hard learn people like question reaplcing templates reactivejs possible backbone", "num": "2772", "d": "9/2013"}, {"title": "rangeerror maximum call stack size exceeded collectionset", "body": "chrome nodejs fire exception try call collectionset many entities something", "num": "2767", "d": "9/2013"}, {"title": "ignore hashpart", "body": "working app rely solely browsers nt support simply fall back regular page loads opened issue really way backbone handles routes declared hash backbone intelligently treat hash urls equivalent nonhash urls even possible hash containing url replaced nonhash version well good default behaviour treat url complete unit becomes problem also want support urls hashes case route match unless declared tackle currently override default version strips hash calling original personally would interested seeing either new configuration setting would enabled behaviour backbone core finding combination current configuration would behaviour would definitely interested contributing pr deemed worthy idea otherwise suppose keep monkey patching", "num": "2765", "d": "9/2013"}, {"title": "problem append collection", "body": "working add console see names li json file add next object immediately rendered code windowapp models views collections windowtemplate function id appmodelstable backbonemodelextend appcollectionstables backbonecollectionextend appviewstables backboneviewextend appviewstable backboneviewextend var tablescollection new appcollectionstables var tablesview new appviewstables collection tablescollection thanks answers", "num": "2763", "d": "9/2013"}, {"title": "every event", "body": "propose make fire additional events every regular event came idea thinking problem consistency transitions webapp states cases inner transitions transitions outer world inner transitions mean changes made using app example click ui element transitions outer world mean case user launches webapp certain state visiting url whole issue developing technique universally handle inner outer cases app state write implying webapp built eventdriven architecture use case lets say blogging webapp list blog posts area selected blog post content element list clicked highlighted blog post content must appear inner case user clicked list clear click listview triggers event passes info post selected app highlights element corresponding post contentarea view reacts event shows blog post content somewhere process current url changes something like outer case user visits clicking bookmark browser case nt want write initialization webapp particular url want fire event route visited function universally serves cases event two problems appears problem avoid unnecessary rerenders views function must universal must fully responsible whole apps tate consistency must render views user goes one blog post another rerender blog post list unnecessary solution well solution check something already rendered render example listview already initialized rendered consistencyfunction sees app already view class instantiated rendered certain area document rerenders problem bring views proper state instantiation assume consistencyfunction found view instantiated rendered make listview highlight element instantiation store somewhere state app information post selected listview use information nt like want list view listen event highlight post passed additional data event case already fired caused invocation consistencyfunction checks listview existance case creates want somehow let listview know fired let highlight element solution situation event useful makes possible checks initialization actual event release actual event application shaped consistent state difference app cases fired click ui visit url consistencyfunction check views instantiated document proper state needed data requested instantiate render views needed query server data app serve regular event", "num": "2762", "d": "9/2013"}, {"title": "collectionset peformance issues large data sets", "body": "working large datasets today discovered unfortunate performance issues backbonecollectionset following code hang browser good seconds running profile see time spent processing set function specifically preparemodel eventson get speed also affected exponentially start adding attributes data object anything done improve performance nt think unreasonable", "num": "2760", "d": "9/2013"}, {"title": "callback element created", "body": "callback element created sometimes needed pass attribues constructor extend default view attributes attributes constructor apply element viewjs var view backboneviewextend attributes datarole view beforecreateelement function apply attribues thisattributes extend thisattributes thisoptionsattrs appjs var view new view attrs class hello datatype world", "num": "2758", "d": "9/2013"}, {"title": "attributes nt applied el passed constructor", "body": "logically attributes view applied element constructor html viewjs var view backboneviewextend attributes datarole view appjs var view new view el target case attribue datarole would nt applied el target guess backboneview add attributes necessary replace", "num": "2757", "d": "9/2013"}, {"title": "name conversion methodsproperties initializeattributeschangedattributes", "body": "good naming conversions jquery world like init possible following changes initialize init attributes attrs changedattributes changedattrs", "num": "2756", "d": "9/2013"}, {"title": "collectionon myevent original model", "body": "hi guys way get original model trigger event inside collection without passing limitation experiment different projects existing way get model without pass trigger time workaround found quite boring something like", "num": "2754", "d": "9/2013"}, {"title": "model set update haschanged property correctly", "body": "consider following code mymodel foo bar id mymodelset foo baz changed consolelog mymodelhaschanged gt true mymodelset id unchanged consolelog mymodelhaschanged gt false mymodel foo bar id mymodelset foo baz id changed consolelog mymodelhaschanged gt true design set hashes separately haschanged property reflects last call", "num": "2753", "d": "9/2013"}, {"title": "clone options model fetch model destroy collection fetch", "body": "hello clone options functions", "num": "2752", "d": "9/2013"}, {"title": "changes collection models nt change tojson", "body": "possible remove attributes collection models nt translate view via steps reproduce", "num": "2750", "d": "9/2013"}, {"title": "appsync stringifying object object object", "body": "network panel see call working almost exactly want except turning object object object var data username fubar password thissync create contenttype applicationxwwwformurlencoded data data success function res status thisset res thisloginhandle null res error function model res spec thisloginhandle login time res silent true", "num": "2743", "d": "9/2013"}, {"title": "deprecation jqxhrsuccess jqxhrerror jqxhrcomplete", "body": "jqxhrsuccess jqxhrerror jqxhrcomplete callbacks deprecated jquery prepare code eventual removal use jqxhrdone jqxhrfail jqxhralways instead", "num": "2741", "d": "9/2013"}, {"body": "hi positlabs many reasons enumerated others sprinkled throughout issues interested", "d": "9/2013"}, {"body": "reproduce bug jsfiddlecodepen investigate also version backbone using", "d": "9/2013"}, {"body": "using backbone try setup jsfiddle codepen", "d": "9/2013"}, {"body": "option pass tell models remove", "d": "9/2013"}, {"body": "case let reopen ticket provide failing test case current master ask help irc mailing list", "d": "9/2013"}, {"body": "best know setup jsfiddle echo", "d": "9/2013"}, {"body": "close issue mistake", "d": "9/2013"}, {"body": "merge em case custom merge function would much", "d": "9/2013"}, {"body": "seems like merging involve duplicating lot logic collection set uses determine merges need performed hooks available operations collection set performing type customization would lot cleaner making merge function part model could take another model default behavior would simply call set routine model attributes", "d": "9/2013"}, {"body": "merge method model pretty elegant solution", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "like suggestion lot would allow primary actor control gets merged passed model could easily override", "d": "9/2013"}, {"body": "order respected provide jsfiddlecodepenetc demonstrating broken behavior", "d": "9/2013"}, {"body": "dead wrong someone modified parent object w broken comparator function told noone hah", "d": "9/2013"}, {"body": "would expect new values respected trumping old exactly working expected imo looking wipe old models use want events", "d": "9/2013"}, {"body": "caseywebdev disagree expected abstract sense calling set object never case set completely ignored regards directly collection set nt want replace every model collection using reset explicitly setting mergefalse expect set collision ids", "d": "9/2013"}, {"body": "caseywebdev would solve case model reflecting version resource update happens resource whole new different set attributes want model reflect new resource retain anything old resource", "d": "9/2013"}, {"body": "never case set completely ignored ignoring duplicate models based functionality least two years wanted replace existing models incoming matching ones presumably etc option would need good use case reasoning existing functionality suffice would solve case model reflecting version resource update happens resource whole new different set attributes saying columns resource change values changing option works great understanding correctly provide realworld example", "d": "9/2013"}, {"body": "updated house longer room mergetrue get room number model may trigger unwanted behavior might logic check room attribute want correct representation model entry user bob", "d": "9/2013"}, {"body": "limitation either way seems data model setting correct send back expected result", "d": "9/2013"}, {"body": "see changes add example work expected", "d": "9/2013"}, {"body": "hey caseywebdev kind weird set attribute inside function prototype request pull fix less macgyver way hahah", "d": "9/2013"}, {"body": "mateusmaso take look overriding actually could fetch cache create new instance", "d": "9/2013"}, {"body": "require jquery solve problem break everyone else app standard part javascript yet like use feel free patch backbone source carry", "d": "9/2013"}, {"body": "hi strange fine underscore suggestion replace current way update smth like anyway thank answer", "d": "9/2013"}, {"body": "backbone models intended able used server used node standard way load scripts using jquery node nt make much sense depending fancy getting course", "d": "9/2013"}, {"body": "still looks broken", "d": "9/2013"}, {"body": "bradleyayers version underscorejs using believe use gt see expected behavior", "d": "9/2013"}, {"body": "tgriesser underscore yes looks like master underscore changed semantics work perhaps documentation bug actual minum required version underscore either good list caveat", "d": "9/2013"}, {"body": "seems reasonable pull see people think", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "really interesting question going look mess", "d": "9/2013"}, {"body": "looks like might way work backbone", "d": "9/2013"}, {"body": "fine question fine bug ticket try irc mailing list", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "hey nikcorg thanks issue try latest develop version believe behavior looking enabled take look information", "d": "9/2013"}, {"body": "hey tgriesser looks like prs reference address issue ignoring hashpart sense nt convert url nonhash version concern really matching routes hash url contains hash matching currently done using complete url including hash afaict neither two issues mentioned address achieve looking change would either happen latter run routers configured former probably option", "d": "9/2013"}, {"body": "nikcorg would able provide failing test case behavior looking", "d": "9/2013"}, {"body": "absolutely start working", "d": "9/2013"}, {"body": "hey tgriesser think test case demonstrate mean commit fork copypaste", "d": "9/2013"}, {"body": "urgh sorry noise sailed fail boat today", "d": "9/2013"}, {"body": "hi nikcorg thanks issue see issue describing thanks test case wondering would need functionality use instead words need support hash url submit patch consider yet certain good direction", "d": "9/2013"}, {"body": "braddunbar nt want simply want hash url useful bookmarkingsharing purposes well scrolling page intended position triggered route merely want able use hashes still able match defined routes like hash nt want generalise issue desire defined routes match either hash part path part url depending configuration definitely submit patch well nt yet wanted feedback idea first", "d": "9/2013"}, {"body": "pulled nikcorg changed strip query hash matching building url seems work well enough", "d": "9/2013"}, {"body": "brilliant thanks", "d": "9/2013"}, {"body": "please use mailing list irc channel types questions", "d": "9/2013"}, {"body": "yep yep irc mailing list appropriate place sort question", "d": "9/2013"}, {"body": "related", "d": "9/2013"}, {"body": "instead push objects instance model instead regular objects see difference compare first thing strikes nonmodel code path creates new object possibly triggers modelvalidationerror anonymous objects array doubt events get triggered though would modify code create model instead anonymous object see improves performance put breakpoint backbone source preparemodel see portion nonmodel codepath code traverses", "d": "9/2013"}, {"body": "much difference creating model instead object improvement minimal see test case", "d": "9/2013"}, {"body": "well poked around bit tests nt able significantly best performance second test really need models collection best recommend move web worker might better determine really need overhead putting many models collection initializing collection models may first many bottlenecks could encounter using collection large sort underscorelodash functions may also show performance problems could use smaller set models move collection needed nt know use case seems representing say rows table nt make sense one process much data nt know necessitates collection size someone else may able help", "d": "9/2013"}, {"body": "globexdesigns might look streak method jquerydatatables backgridjs good implementations starting ideas storing many models collection lead headaches", "d": "9/2013"}, {"body": "glad brought examples exactly ie rendering html tablegrid using data backbone collection right trying evaluate whether using backbone collection able achieve performance looking hoping use collection object could make use lot builtin features sorting filtering events etc takes long initialize may stick using backbone events bypass collection initialization together regardless thought backbone team still consider investigating slow initialization models perhaps maybe offer suggestions moment still nt able track exact methodfunction bottleneck gut feeling says probably clone function somewhere", "d": "9/2013"}, {"body": "docs say core usefulness backbone collections actually implemented underscore collection methods able use underscore methods plain array add syncing events whatever behavior back models need might also look lodash lazyjs underscorecompatible apis focus speed", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "confirming improved performance somewhat new tests seeing opssec improvement item dataset scared try anything larger suspect wo nt usable real world scenario firefox profiler reports preparemodel accounts operational time instead seeing bulk majority processing time still spent backbonemodel set attribute cloning time setting backbone events collection sure anything done", "d": "9/2013"}, {"body": "performance improving patches always welcome said javascript javascript want squeeze possible performance browser especially ie going use raw arrays lots loops intermediate functions objects possible", "d": "9/2013"}, {"body": "right callback please stop opening tickets ask irc channel first", "d": "9/2013"}, {"body": "nope attaching existing element element get otherwise would catch", "d": "9/2013"}, {"body": "nope", "d": "9/2013"}, {"body": "problem simply passing model first arg convention backbone uses everywhere core", "d": "9/2013"}, {"body": "yep yep passing model first argument preferred way think find works rather well", "d": "9/2013"}, {"body": "looks dry would prefer trigger method anyway fine thanks", "d": "9/2013"}, {"body": "yes design considers differences last quick dirty dirty flag implementation looking", "d": "9/2013"}, {"body": "cloned mutated later function would unexpected side effect user options object passed methods suddenly different values nt set", "d": "9/2013"}, {"body": "nt seem like bug performing noop resetting ids model collection since default collection set attrs nt going go away try adding call object work missing something", "d": "9/2013"}, {"body": "philfreo correct want", "d": "9/2013"}, {"body": "sure nt want regardless question stackoverflow irc channel please reserve github issues bug reports pull requests etc", "d": "9/2013"}, {"body": "also sending data needs stringified", "d": "9/2013"}, {"body": "said anything json sending json string sending form data replaced backbone sync method standard jquery method works perfectly issue", "d": "9/2013"}, {"body": "issue sync meant sending data restful resources specific option need send urlencoded data overriding arbitrary options send ajax end sync produce unexpected results", "d": "9/2013"}, {"body": "correct way apparently following processdata true thanks patience sorry waste time", "d": "9/2013"}, {"body": "backbone uses success error callback handlers passed options deprecated aliases deferred callback handlers removed", "d": "9/2013"}, {"body": "ok thank explanation", "d": "9/2013"}, {"body": "sure thing thanks opening issue sake crossreference issue came always good idea search opening issues smilecat", "d": "9/2013"}, {"body": "works also notverygreat way create clientsideonly view onto data simply method model generates url way nicer keep data sync", "d": "9/2013"}, {"body": "thanks jeremy looks like staying away setting properties attributes way go instead use instancegenerated variables", "d": "9/2013"}, {"body": "henrahmagix think referring fact ca nt use neither allow early iteration exit sintanial solutions gaining early iteration exit swap lodash instead underscore lodash supports early iteration exit return return jquery recommended", "d": "9/2013"}, {"body": "correct tack situations need break iteration present collection instances", "d": "9/2013"}, {"body": "ok fair enough understood thank", "d": "9/2013"}, {"body": "would great example wrote plugin simply catch malformed urls way page occasionally times user could click something leads malformed route case definitely bug want somebody notified nt want break app either fire event would nice router fired events begin say route routemethodname route notfound easy patch source needed", "d": "9/2013"}, {"body": "even collection option really internal thing think documented folks like var new model collection c msave posts correct resourceid endpoint never add collection perhaps collection client side supposed contain subset models oneoff model nt really belong despite sharing common url endpoint change could make would remove documentation misleading actually let clarify", "d": "9/2013"}, {"body": "use case sounds like simple trick", "d": "9/2013"}, {"body": "fixed master believe", "d": "9/2013"}, {"body": "also running series errors love use master lot package management asset pipeline tools based around version bumps either bump patch number guidance get ready ship would great jashkenas tickets particular need get completed next version help", "d": "9/2013"}, {"body": "larkin package managers bower npm volo component know allow specify location git url version git sha hash pretty work next version bump", "d": "9/2013"}, {"body": "specifically using backboneonrails gem nt really want toss bower rails project months without even patch version bump commits timespan given number reports issues collection urls conflicting model urls number common use cases pagination search collections think fixes worthy patch version bump even jashkenas said time version months ago reason ca nt take current stable master tag version bump holding us back put ticket set milestone let get done", "d": "9/2013"}, {"body": "like see failing test case merged browser fragmentpushstate url encoding compatibility real headache ask braddunbar", "d": "9/2013"}, {"body": "test case let close one arrives", "d": "9/2013"}, {"body": "know nt stack overflow code linked good test case", "d": "9/2013"}, {"body": "marcomatarazzo one code using backbone better approach would pull request failing test suite test current would make possible address reliably", "d": "9/2013"}, {"body": "marcomatarazzo fair enough", "d": "9/2013"}, {"body": "ok try best put one together thank answer", "d": "9/2013"}, {"body": "thanks finding quite right sortedindex existed used use previous implementations collections comparators longer use internally nt exposed anymore remove course underscore function remains available wish", "d": "9/2013"}, {"body": "anyone thought change would work defaults without doubleparsing", "d": "9/2013"}, {"body": "get work defaults created assigned initialize function pass could applied parsing step nt know design decision would want nt able think alternate solution", "d": "9/2013"}, {"body": "let move conversation open pr", "d": "9/2013"}, {"body": "think makes sense order arguments even though error available model well", "d": "9/2013"}, {"body": "fixed added test case", "d": "9/2013"}, {"body": "many thanks", "d": "9/2013"}, {"body": "yes thanks jashkenas", "d": "9/2013"}, {"body": "fixed tim", "d": "9/2013"}, {"body": "braddunbar able find firefox bugzilla quirk", "d": "9/2013"}, {"body": "actually using firefox unable reproduce anymore dominictobias looks though fixed firefox never really able much still reproduce", "d": "9/2013"}, {"body": "issue bit today hope fix gon na released soon", "d": "9/2013"}, {"body": "affected", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "fixed master", "d": "9/2013"}, {"body": "always felt missing solid event driven getter setter defaults values also wondered views followed thought borrowed ideas emberjs coffeescript class documentsquareview extends backboneview defaults editable true transient false uploaded false initialize options gt change editable updateeditbutton updateeditbutton gt text get editable edit else ok button html text onchangeedit gt set editable true", "d": "9/2013"}, {"body": "mateusmaso check backboneattributes tiny plugin wrote add getter setter methods object would love feedback usecase", "d": "9/2013"}, {"body": "might need little work pretty sure push unshift longer return model", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "hey jashkenas could come back discussion", "d": "9/2013"}, {"body": "behavior fully reflect stated view constructor documentation compound objects fully copied uses underscorejs recursive means something like js scopemyview backboneviewextend attributes datafoo foo databar bar injected element", "d": "9/2013"}, {"body": "hey jseto correct underscore nt deep merge objects number reasons see jashkenasunderscore background good workaround might merge attributes view", "d": "9/2013"}, {"body": "real solution example need fat arrow need reference variables collection instance inside comparator method", "d": "9/2013"}, {"body": "gucki nt need fat arrow context set collection instance call comparator get need collection instance", "d": "9/2013"}, {"body": "escaping nt sufficient assumes data output either tags within quoted attributes tags simple example template using quoteless attributes", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "used dotmaster autobind gist backbone projects checking better ways become available came across issues correct implemented issue closed positive comment indicates autobind suggestion implemented looking backbone source code nt seem case something else place take care individual developer extend backbone functionality please help confused", "d": "9/2013"}, {"body": "find sort functionality usually necessary due context parameter methods underscore methods example need bind method following example js var view backboneviewextend initialize function thislistento thismodel change attr thisrender render function return others generally simply constructor", "d": "9/2013"}, {"body": "thanks good advice still using good old would better use listento instead see goes good know autobinding implemented one would like use automatic binding could look options mentioned", "d": "9/2013"}, {"body": "multiple usecases collection shown one order reverse comparator sort implementations pick one direction nt seem collectionreverse able quickly switch sort directions ascending vs descending", "d": "9/2013"}, {"body": "maintain collection instances collection clone may help", "d": "9/2013"}, {"body": "particularly useful take example situation collection represents grid data repeatedly sorting multiple directions nt make sense try maintain two different sources data switch one data object manipulate needed", "d": "9/2013"}, {"body": "stored multiple comparators collection swapped needed js var collection backbonecollectionextend comparators function b function setcomparator function key thiscomparator thiscomparators key return var collection new collection collectionsetcomparator sort collectionsetcomparator b sort", "d": "9/2013"}, {"body": "better workaround although still nt understand workaround necessary instead backbone simply supporting reverse method", "d": "9/2013"}, {"body": "could also", "d": "9/2013"}, {"body": "posabsolute wrapping return underscore collection backbone collection get backbone collection backbone methods like available wrap whatever collection using inherits backbonecollection instead example applying op code", "d": "9/2013"}, {"body": "thanks asked years ago p", "d": "9/2013"}, {"body": "posabsolute haha yea know passing thought answer future readers", "d": "9/2013"}, {"body": "thanks guys helpful", "d": "9/2013"}, {"title": "route render uses route templatename even template specified", "body": "method use given template name route defined see following jsfiddle demo behavior workaround creating view name wish pass causes correct template ultimately rendered", "num": "3502", "d": "9/2013"}, {"title": "output html broken", "body": "lot troubles trying debug following failing given following template javascript currentuserissignedin viewisdashboard else view selectedbinding viewselected navigationicon selectedbinding viewselected aangemeld als currentuserfullname linkto sessiondestroy log uit linkto follows go dashboard viewisdashboard true image rendered else rendered navigate another part application isdashboard becomes false navigationicon navigationselectmenu rendered within ptag far everything fine problem comes enter application directly another route skip dashboard example go settings isdashboard false views rendered instead html output broken html output navigating dashboard good output metamorph tags nested properly html aangemeld als username log uit html output navigating directly another page bad output metamorphs start ptag p closed content another ptag html aangemeld als username log uit strange thing leave line everything works fine", "num": "3500", "d": "9/2013"}, {"title": "event bubbling controller", "body": "events bubbling parent controllers", "num": "3499", "d": "9/2013"}, {"title": "outlet duplication", "body": "built page emberjs everything fine declared four routes one maps rest accessible linkto calling first templates everything appears perfectly outlet call one switch back three first ones template appears alongside one currently view example load page default route access fourth route switch back first route outlet contains template using development version emberjs source code", "num": "3495", "d": "9/2013"}, {"title": "odd error initialization google chrome canary", "body": "found odd error google chrome canary please look sample push button sometimes see following error chrome javascript console error loading route typeerror uncaught typeerror object function method create happens chrome canary normal chrome chrome canary version encounter error often bigger ember application anyone figure cause", "num": "3494", "d": "9/2013"}, {"title": "set element id property", "body": "wanting manually specify id input element seems ca nt specify id value property example gives id dom specified get see", "num": "3490", "d": "9/2013"}, {"title": "linkto helper renders href attribute htmlunescaped", "body": "model class string field let call name field may contain special characters like lt gt well html entities lt gt nbsp also route uses field dynamic segment problem use linkto helper render link route produces link wrong href attribute example name field contains something like one interesting thing click link get right location strangely enough correspond link href however copy link try open another tab another browser matter naturally location get wrong prevents workarounding issue htmlescaping string one extra time", "num": "3489", "d": "9/2013"}, {"title": "recent initializers fix breaks inheriting initializers", "body": "goal prevent leaking initializers application subclasses unfortunately seems unintentionally broken initializer inheritance prevents emberdata injection rules inheriting sublcasses emberapplication direct instances emberapplication receive note ca nt resolve shorty revert", "num": "3488", "d": "9/2013"}, {"title": "queryparams param named active causes stack overflow", "body": "using new queryparams system naming one params active cause overflow working example mine addition single extra param active see errors console", "num": "3486", "d": "9/2013"}, {"title": "sendaction issues input components", "body": "html xfoo input focusoutwrongcontext input focusoutdoesnotwork js app emberapplicationcreate appxfoocomponent embercomponentextend wrongcontext function consolelog thistostring logs input component actions doesnotwork function nt work maybe nt consolelog thistostring", "num": "3485", "d": "9/2013"}, {"title": "mocha nt work firefox", "body": "ah sorry nt know report found strange behavior jsbin using emberjs mocha testing framework run code safari chrome everything fine run firefox latest see error problem ember please ignore close thanks", "num": "3484", "d": "9/2013"}, {"title": "contributing guidefile unified", "body": "two guides contributing covering different parts contribute ember covers kind changes make land commit message formatted travis handles commit cherrypicking feature flags releases covers ask question report bug request feature build code run tests format commit message format code least link one another likely merged wagenet thoughts goal creating two documents", "num": "3479", "d": "9/2013"}, {"title": "fixtures set properties using emberset", "body": "given model using fixtures js appobj dsmodelextend prop dsattr string prop function key newvalue oldvalue newvalue thisset prop newvalue appobjfixtures prop awesome call accessor set attribute call get attribute case therefore get back see jsbin", "num": "3478", "d": "9/2013"}, {"title": "simple fix missing var code sample", "body": "hi slight change needed make code work example page fixed code setupcontroller controller var added model var missing documentation javascript apptardyroute emberrouteextend model function return new emberrsvppromise function resolve emberrunlater function resolve msg hold horses setupcontroller function controller model consolelog modelmsg hold horses", "num": "3477", "d": "9/2013"}, {"title": "error perform operations metamorph dom", "body": "using tom dales example found following works formatmarkdown body nt work formatmarkdown body raises error given title tried tags span ul worked ok odd", "num": "3472", "d": "9/2013"}, {"title": "collectionview wo nt set content create", "body": "using ember trying select categories list creates another list creates another list etc via subcategories chosen try implement via toplevel containerview contains childviews collectionviews dynamic nature collectionviews content need able pass content parameter collectionviewcreate method far appcategorylistitem emberviewextend tagname li classnames categoryitem isselected false defaulttemplate emberhandlebarscompile viewcontentname appcategorylist embercollectionviewextend itemviewclass appcategorylistitem tagname ul classnames categorylist selectedcategory null categories null content function return thisget categories property categories appcategoryselector embercontainerviewextend childviews rootview always exist add default rootview appcategorylistcreate categories appproductcategoriescategories numberoflists function return thistoarray length also tried appcategorylist embercollectionviewextend itemviewclass appcategorylistitem tagname ul classnames categorylist selectedcategory null appcategoryselector embercontainerviewextend childviews rootview always exist add default rootview appcategorylistcreate content appproductcategoriescategories numberoflists function return thistoarray length also tried appcategorylist embercollectionviewextend itemviewclass appcategorylistitem tagname ul classnames categorylist selectedcategory null categories null contentbinding viewcategories appcategoryselector embercontainerviewextend childviews rootview always exist add default rootview appcategorylistcreate categories appproductcategoriescategories numberoflists function return thistoarray length content categorylist collectionview never getting set like works set directly onto content within categorylist definition need content dynamic depending instance bug missing something", "num": "3471", "d": "9/2013"}, {"title": "array computed work arraycontroller mentioned docs", "body": "hi playing around array computed jsbin noticed strange behaviour nt expecting according announcement pull request array computed equivalent seem case max property updated correctly long version computed property short version nt syntax supported arraycontroller bug expected behaviour update docs syntax wo nt work arraycontrollers best regards mike", "num": "3468", "d": "9/2013"}, {"title": "inheriting controller existing actions hash", "body": "recently updated ember base controller like appformcontroller emberobjectcontrollerextend emberevented actions toggleformbox toggleproperty showformbox inherit like docs say make things consistent give flexibility action naming standardized around using hash called actions extending class actions defined merge actions defined subclass instance parent also support super wo nt lose flexibility approach call toggleformbox action handlebars like get following error message uncaught error nothing handled event toggleformbox action still makes formcontroller executes method strange", "num": "3467", "d": "9/2013"}, {"title": "related models rendered test parent model tested first", "body": "running qunit tests index page displays model attributes array related models subsequent test related model renders array related models fails appears due app thinking already models loaded neglecting fetch information unique qunit tests works correctly browsing app reversing order tests results tests passing stackoverflow post issue jsfiddle without running tests confirm application works expected", "num": "3466", "d": "9/2013"}, {"title": "attribute binding boolean value", "body": "boolean value emberjs insert name attribute instead value elementfor information read way correct", "num": "3465", "d": "9/2013"}, {"title": "proposal default embercomponent tagname name component", "body": "example becomes dom css style future proofs code webcomponents mostly css", "num": "3463", "d": "9/2013"}, {"title": "guide broken", "body": "new commer ember guide yout site broken enough turn another framework newbie since one fix get happens displaying model data section guide error get also completely stops progress guide assertion failed value loops must array passed generated application controller", "num": "3462", "d": "9/2013"}, {"title": "feature parity render view components", "body": "think want build component library made views later maybe ember components want things like render libnsviewclass author words specify view class namespace different app namespace unfortunately possible view helper view helper allow supply model dynamically future think also possible components", "num": "3461", "d": "9/2013"}, {"title": "actions contextmenu event work", "body": "created jsbin recreate issue tried debug failed get anywhere ember recognize dom event whatever reason nt triggering action controller", "num": "3460", "d": "9/2013"}, {"title": "needs broken uncaught typeerror call method null", "body": "need nest controllers page ultimatecontroller multiple playlists ultimatetrackscontroller tracks ultimatetilecontroller seems container undefined looks dependencies due needs property set getting halting exception", "num": "3457", "d": "9/2013"}, {"title": "feature public interface guid generation", "body": "would possible add public interface ember guid process input required returns guid persists lifespan ember application provide object would return guid persists long object exists could alias piggy back private method use case occasionally specific cases would useful built function return guid especially creating complex charts want easily reference objects create arbitrary unique ids realize use private method feels bit wrong", "num": "3455", "d": "9/2013"}, {"title": "didinsertelement fired", "body": "started ember one things want preserved aspect ratio view element width set browser screen size height adjusted accordingly therefore want influence view element rendered way go seemed didinsertelement event fired view changes according considered bug created representative reproducing example notice section height change changing section", "num": "3454", "d": "9/2013"}, {"title": "problem bindings", "body": "trying create bindigs different objects run singletons try instantiate complex properties non primitives false null init function work whenever create actual complex properties place within class definition work ok problem second approach properties shared among instances undesirable wrong pretty sure scenario achievable one previous versions", "num": "3449", "d": "9/2013"}, {"title": "add attributenames static attributes", "body": "static attributes", "num": "3447", "d": "9/2013"}, {"title": "ember removes leading character url", "body": "hi use file write model name lowercase like strips first character url path instead calls write leading character model uppercase like works fine", "num": "3445", "d": "9/2013"}, {"title": "memory leak clearing arraycontroller content itemcontrollers", "body": "struggling lifecycle itemcontrollers block quite clear created sure destroyed seems hanging somewhere container jsbin demo brief description happening itemcontrollers created item arraycontroller content creation destroying logged console corresponding object ids content arraycontroller cleared change sometimes triggers arraycontentdidchange synchronises subcontrollers array user leave route controllers created shown cases content arraycontroller cleared going another route itemcontrollers properly destroyed triggered first link destroyfirst action user going another route content arraycontroller cleared scheduled next runloop itemcontrollers never destroyed underlying model anymore triggered second link destroylater action reproduced ember amp ember previously thought ember tries reuse later case user accesses route creates new instances time disable clearing arraycontroller content thereby considered memory leak maybe missing something feature behaviour clear certainly described neither ember docs answers", "num": "3444", "d": "9/2013"}, {"title": "collectionview deprecation", "body": "according docs collectionview deprecated true would one implement something like jquery ui sortable would conflict metamorph tags placed outside element collectionview places tags around items issues like inability assign controller instance item inherits parent controller community thoughts", "num": "3440", "d": "9/2013"}, {"title": "query params history location clearing params load", "body": "trying new much needed queryparams implementation alexspeller noticed fairly big issue using history location api initial page load clear query params admindashboard becomes admindashboard worked way ember source found offending line located within line later code url used replace initial history state removes initial query params given complexity mocking windowlocation object really sure write failing test", "num": "3438", "d": "9/2013"}, {"title": "ember array implementation may differ spec", "body": "seems like ember array implementation may differ spec specifically think initial value nt provided first element enumerablearray provided first argument callback think aim ember implementation follow spec comment ember reduce note unlike methods method allow pass target object set callback part spec sorry observation seem correct difference design purpose ember implementation reduce function callback initialvalue reducerproperty typeof callback function throw new typeerror var ret initialvalue thisforeach function item ret callbackcall null ret item reducerproperty return ret reference implementation provided mdc copied", "num": "3437", "d": "9/2013"}, {"title": "capitalized properties work helper", "body": "using helper capitalized properties binding sets assumes path global resulting broken binding eg see jsfiddle destroy view clicked break tries unwatch nonexisting global path workaround obviously use capitalized properties convention comes naturally locally defined classes since class names conventionally capitalized analogous javac style idiom myview seems like interpreted global path according ember conventions intuitive viewmyview interpreted global ignoring view part path entirely also used convention time without issue", "num": "3436", "d": "9/2013"}, {"title": "controllers views embedded containerview instantiated", "body": "lets say mvc trio adding programmatically via inside template another view inserted programmatically first one inserted programmatically since property nt really anything associated even instance controller created hand inserting ordinary everything works expected one exception parents view access appropriate controller jsfiddle thank", "num": "3435", "d": "9/2013"}, {"title": "possible bug create table ie", "body": "hi problem create tables ember views follow markup ember application append container follow view lt th gt viewname lt th gt lt td gt viewage lt td gt var emberviewcreate tagname tr templatename row name bob age ie lt code break created example jsfiddle took look code found module ember submodule emberviews resolve fast problem changed setinnerhtmlwithoutfix function removed commented parts changed innerhtml jquery html method var setinnerhtmlwithoutfix function element html needsshy html html var matches moveswhitespace right check script tags ids goal targeting morphs html htmlreplace", "num": "3432", "d": "9/2013"}, {"title": "inheritance init mechanism", "body": "since bindings aliases seem like may many cases interact badly init trying use init unclear init properly used inheritance nt succesfully found pattern nt amount less rollyourown constructors ala naked javascript samename init functions subclass alias superclass using samename work subclass knows superclass uses name calls thissuper breaks encapsulation pretty badly using different name init functions subclass superclass requires coordination breaking encapsulation nt allow controlling order super subclass constructors executed many cases fatal problem jsfiddle illustrating issues probably lost weeds missing awesome way", "num": "3431", "d": "9/2013"}, {"title": "documentation emberapplicationregister", "body": "documentation list four paramters however examples show three think first second argument actually one options parameter lacks enumeration possible options think least option nt mentioned", "num": "3430", "d": "9/2013"}, {"title": "dynamic linkto fails bind keyword", "body": "getting uncaught typeerror objectdefineproperty called nonobject iterating array populate linkto believe issue except using linkto instead bindattr working older build based fiddle cameron pope answer question kept older build commented fiddles reference helperparamlookups true set works nt try use keyword example works allroutes linkto linkto nt work try bind keyword example note error console nt work except older builds pageroute allroutes linkto pageroute pageroute linkto", "num": "3429", "d": "9/2013"}, {"title": "emberselect valuebinding setting default selected value", "body": "documentation says emberselect render option id matching value valuebinding selected attribute however seem case stack overflow fiddle", "num": "3428", "d": "9/2013"}, {"title": "sortproperties nt work compare digits", "body": "issue dashboard creating using sort list users revenue works perfect towards end day figures digits well multiple lengths array eg nt sort correctly", "num": "3427", "d": "9/2013"}, {"title": "feature flags nt enabled tests", "body": "far tell feature flags travis ci builds means new commits could breaking existing flagged features noone would know", "num": "3421", "d": "9/2013"}, {"title": "something broken", "body": "fiddle broken checkboxes disappear line executed happens many browsers nt happen chrome canary currently issue resolved see checkboxes appear second checkboxes become checked seconds issue still present see checkboxes appear second disappear seconds", "num": "3415", "d": "9/2013"}, {"title": "remove emberbutton", "body": "emberbutton deprecated quite surprise still included removed", "num": "3411", "d": "9/2013"}, {"title": "default emberview actionhandler target parentview events bubble view hierarchy", "body": "developing desktopbased applications tended rely less controllers views found default event bubbling behavior slightly different wondering make sense set emberview target point parentview would let events bubble view hierarchy fashion similar embercontroller events bubble router still allowing overridden something similar would trick make sense", "num": "3409", "d": "9/2013"}, {"title": "observers firing computed properties", "body": "observers nt notified dependent values computed properties change reading docs seems like ember supports observing property including computed properties setting dependent property propagate changes computed properties depend way chain computed properties created seems worked earlier versions something wrong see fiddle see fiddle", "num": "3408", "d": "9/2013"}, {"title": "beforemodel receives incorrect params redirect", "body": "minimal jsbin demonstrates problem click one two see beforemodel hook fires twice transition second time fires incorrect params receives params current route new destination route ideally would fire twice see long going fire twice needs least fire correct parameters", "num": "3407", "d": "9/2013"}, {"title": "emberrundebounce immediate option call supplied method immediately", "body": "emberrundebounce method advertises supplied boolean would run method leading edge wait interval means run function run immediately future calls ignored full length specified time period future call debounced function would execute forth either thinking right something ember broken using like run immediately called instead runs default behavior immediate always set false", "num": "3405", "d": "9/2013"}, {"title": "needs partial able work together", "body": "hi thanks great framework currently facing problem wondering could bug bug render view inside template rendered partial keyword controller instantiated synced controllers need controllers change value controller needed controller associated view changed view notified asked problem stackoverflow kept searching provide information lot precise first question asked stackoverflow made simplified jsfiddle explain problem clearly explanation stack needed thanks lot sorry error mine", "num": "3404", "d": "9/2013"}, {"title": "mixin", "body": "hi would nice able mixin object proxy behavior kind class eg component say component contact model property would like able refer property directly like normal example contacteditorcomponentjs componentscontacteditorhbs properties defined component therefore proxied property component like usage spend time pr wanted hear anyone objections idea add new mixin members moved mixes course wrap feature flag check far see wo nt change anything add new capability", "num": "3403", "d": "9/2013"}, {"title": "unify emberonerror", "body": "emberonerror supposed notified exceptions thrown inside ember internals longer true least two cases exceptions thrown within parts backburner unhandled rsvp promise failures rsvp offers option propose ember use automatically user sets propose backburner get similar option ember use automatically objections prepare pull requests", "num": "3401", "d": "9/2013"}, {"title": "setting value inside init nt always update aliasesbindings point value", "body": "tried writing language couple times seems easiest describe code var myobject emberobjectextend init function thissuper myobjectcreate exception ugh aliasedvalue value complete jsfiddle showing issue variations issue including problem bindings", "num": "3399", "d": "9/2013"}, {"title": "flag make ember components raise error nothing handles event", "body": "working ember views controllers routes sent event bubbles way nt get handled get warning understand ember components designed completely isolated rest application bubbling occurs also means nt get warning unhandled event development mode flag raise warnings nothing handles component event could useful catching typos mistakes eg inside component silently nothing actual action named", "num": "3397", "d": "9/2013"}, {"title": "chrome mac intermittently shows blank screen", "body": "browser os os x noticed issue project well emberjs discussion forum go select post intermittently selecting post always result behaviour screen displays blank space like page scroll shows content", "num": "3395", "d": "9/2013"}, {"title": "documentation textfieldtextarea thisget controller refer view associated controller anymore", "body": "working fiddle using key part custom text field delegates parent controller upgrade ember custom text field longer works inspect controller call tostring see getting intentional", "num": "3393", "d": "9/2013"}, {"title": "setupcontroller receives array model param refreshing page entering manually url", "body": "using application url changes accordingly ids objects setupcontroller receives model object matches id however changing manually url address bar refreshing page model directy passed setupcontroller instead model setupcontroller receives array containing model jsbin illustrates click first item left table url explore log find line change url explore log find line application crashes unless use workaround something like", "num": "3392", "d": "9/2013"}, {"title": "queryparams likely need change emberhashlocationgeturl support parameter encodings", "body": "one piece feedback implementation think function need changed order properly support encoded parameters problem firefox automatically decode locationhash value one encoded values contains ampersand amp operator become decoded resulting operator values mixed data values way properly determine example js bin load example firefox notice difference values tried best write failing test could problem browser integration problem way reproduce using ping alexspeller", "num": "3390", "d": "9/2013"}, {"title": "documentation", "body": "far know documentation yet thread ghemptonemberscript given semantic difference terms observation small side effect observing eagerly instantiate general nt observing properties individual items use computed properties depend really nt matter created anyways could clarification docs", "num": "3388", "d": "9/2013"}, {"title": "data display mobile browser", "body": "list data computer browser chrome firefox list data server successfully mobile browser chrome firefox list data use fixtureadapter request data server works fine problem", "num": "3387", "d": "9/2013"}, {"title": "binding key doublynested key val handlebars helper raises error", "body": "actually want simplified version shows issue output whole bunch instead raises possibly related andor", "num": "3384", "d": "9/2013"}, {"title": "api", "body": "api sending actions controllers little confusing sure actionhandler mixin uses function called good idea put mixin share api opening discussion cc wycats", "num": "3382", "d": "9/2013"}, {"title": "bare tags lead render failure embedded standalone html", "body": "hello project need deliver standalone version ember app put emberjs script tags pseudo open file browser app wo nt run emberjs contains bare script tags eg temporary fix changed lines works future proof solution suggest using something like escaping like possible embed emberjs without manual changes best regards tom", "num": "3377", "d": "9/2013"}, {"title": "programmatically components creation extending components", "body": "hello sometimes makes sense extend existing components create components via usage collectionviewcontainerview currently impossible create components programmatically without explicitly redefine layout property creation extending components ember bootstraps components registration uses container inject layout property workaround maybe workaround requires documentation whenever create instance component perform lookup btw previous ember versions worked fine following commit either recommend create components codesupply layoutname manually dirty documentation stop using injection components make easier users create programatically many thanks asaf", "num": "3376", "d": "9/2013"}, {"title": "inconsistent behavior dependency injection views", "body": "simple injection coffeescript class appdep extends emobject emonload emberapplication app appinitializer name registerdep different ways rendering views templates coffeescript class apprenderhelperview extends emview init gt super consolelog dep okay class appviewhelperview extends emview init gt super consolelog dep gt undefined class appcollectionview extends emcollectionview itemviewclass appitemview init gt super consolelog dep okay class appitemview extends emview init gt super consolelog dep gt undefined", "num": "3372", "d": "9/2013"}, {"title": "reducecomputed callbacks nt undefined", "body": "cc hjdivad reason ca nt prevents things like since undefined believe would make sense callbacks", "num": "3371", "d": "9/2013"}, {"title": "action helper nt allow dynamic actions", "body": "like use action helper variable action intention drying shared dialogs needs actions delivered different places think falls scope dynamic parameter cc machty edit still case master", "num": "3368", "d": "9/2013"}, {"title": "inconsistency behavior accessing outer scope", "body": "page says template access outer scope loop added itemcontroller option line name got equal friendname outer scope although using parentcontrollername access outer scope case little weird provide syntax purpose", "num": "3363", "d": "9/2013"}, {"title": "odd behaviour generated routes", "body": "hi tracing problem app two days want dump conclusion question bug intended app creates routes explicitly automatically initializer e single call like approutermap function thisroute xxx path xxx code another initializer runs early var appctrl thisget container lookup controller application behind scenes make container lookup magically creates factory creates new instance turn calls calls routegenerating initializer runs directly calls method silently instantiates router none existing yet writes approuterrouter btw really think strange solution mess class modifications router use instance approuter router would expect instead approuterrouter seems awkward problem might guessed cases seems called different instances approuter class means routines work intended fixes two workarounds put route mapping app code runs initializer like create router instance container lookup happens instance served internal cache far understood obvious let container lookup happen router initialized unfortunately wokr intended maybe bug thanks", "num": "3362", "d": "9/2013"}, {"title": "ember issues replacestate", "body": "object nt support property method replacestate really bug since methods supported way fallback get around impression ember tested older version ie", "num": "3352", "d": "9/2013"}, {"title": "appregister documentation match parameter types", "body": "appregister documentation provides following example js app emberapplicationcreate appperson emberobjectextend apporange emberobjectextend appemail emberobjectextend appregister model user appperson singleton false appregister fruit favorite apporange appregister communication main appemail singleton false parameters however match example parameters listed sure parameters wrong example wrong one clearly string neither supposed options factory much confusion see", "num": "3346", "d": "9/2013"}, {"title": "bound parameters helpers struggle arrays helper", "body": "probably different related things going issues bindings passing string bound helper within passing null bound helper within passing string keyword bound helper passing null keyword bound helper also wat seems root cause", "num": "3342", "d": "9/2013"}, {"title": "actions keyboard input working", "body": "every action seems work html input except keyboard actions keydown keyup keypressed see following jsbin", "num": "3340", "d": "9/2013"}, {"title": "method map embedded objects", "body": "using emberjs version emberdata version follow new guide embedded object get error shown gist", "num": "3337", "d": "9/2013"}, {"title": "containerview layout able yield childs", "body": "explained", "num": "3334", "d": "9/2013"}, {"title": "arraycomputed max cp inconsistent runloop behavior", "body": "updating array cp sometimes sync sometimes async intended behaviour see based api example maybe spotted mixonic emberjsdev possibly affects arraycomputed macros", "num": "3332", "d": "9/2013"}, {"title": "observers fire arraycomputed cps", "body": "seems embercomputedmax observable see illustrate issue mixonic helped emberjsdev based observable maxchildage never fire template update", "num": "3331", "d": "9/2013"}, {"title": "support events listeners order preventdefault like", "body": "hey plans extend events feature ember really would find useful possible preserve listeners order prevent listeners invoked triggered listeners capability clarify request decent scenario wizard view component triggers events next prev user requesting move steps component listen events changes view state according fired event giving opportunity application listen events prevent component changing view state mandatory cases form failed validated whatever logical reason prevent wizard steps rendered differently currently impossible supporting listeners execution order amp preventing listeners fired solve thanks asaf", "num": "3330", "d": "9/2013"}, {"title": "reorder topics guide", "body": "topics ember guide appear newbie odd order foundation material like object model enumerables come even maybe concepts model completely optional come views model easily confused object model probably renamed ember data", "num": "3328", "d": "9/2013"}, {"title": "controller resolution embertextarea broken", "body": "hi upgrading morning found controller resolution longer works run inside function instance get instance resolution still working normal subclasses simplified example code repro issue broken var mytextarea embertextareaextend controller somecontrollerclasscreate didinsertelement function thisget controller reference embertextarea view thisget controller somefunction try call somefunction view working expected var mynormalview emberviewextend controller somecontrollerclasscreate didinsertelement function thisget controller reference controller properly thisget controller somefunction call somefunction controller glanced recent commits tried reversing changes found source bug yet continue looking", "num": "3319", "d": "9/2013"}, {"title": "emberstate deprecation info docs", "body": "noticed statemanger removed google get page nt helpful would friendly give deprecation infolink", "num": "3316", "d": "9/2013"}, {"title": "update definingmodels documentation changes emberdata", "body": "following apppost dsmodelextend comments dshasmany appcomment longer work emberdata disclaimer enough least indicate link transition guide suggest documentation updated something like apppost dsmodelextend comments dshasmany comment least example camelizedunderscored attributes asked would necessary", "num": "3315", "d": "9/2013"}, {"title": "ca nt find method inside extended view", "body": "code hit enter console says works fine seems break tried see controller object using consolelog returns class controller method tried ember inspector chrome extension still nothing ideas", "num": "3311", "d": "9/2013"}, {"title": "non singleton injections treated singleton", "body": "trying figure found bug misunderstanding registerinject functionality jsbin shows multiple instances person created using lookup would expect person unique instance appfavoritefruit injected person nonsingleton injection failing test shows different instances people created share instance favorite fruit bug tests nt cover scenario", "num": "3310", "d": "9/2013"}, {"title": "managing translations ember documentation", "body": "seems definite value least basic intro docs available languages english keeping intro docs translations original guides seems bettereasier adhoc tutorials blogs maybe set translation project kind thing makes easy keep things uptodate without good tooling painful experience find tools managing translations imagining something helps us keep translations updated sentencebysentence paragraphbyparagraph really sure ubuntu tooling perhaps good starting point look instance check softwarecenterdoc translations log see extended interface making translation suggestions seems pretty good principle continuing discussion stefanpenner wrote likely none core audit make sure convey correct idioms perhaps ok worry lot translations always fixed later people start reading contributing unusual translations somewhat unidiomatic terminology end world imo similar way keeping date yup view important issue see comments", "num": "3309", "d": "9/2013"}, {"title": "unexpected behavior functions concatenated properties", "body": "fiddle javascript emberobjectextend concatenatedproperties shared shared b aextend shared emberk consolelog bcreate get shared gt expected consolelog bcreate shared emberk get shared gt expected", "num": "3307", "d": "9/2013"}, {"title": "ember loops", "body": "version since already prod context use ember develop web app wwwchronosavecom app really cool use probably something special since ember loops searched lot discover code function flush backburner queues never go zero lines line emberprodjs order avoid works fine probably best way solve issue il works maybe help debugging good luck congratulations cool framework", "num": "3306", "d": "9/2013"}, {"title": "redirects shown guide deprecated", "body": "redirect app like one top page using ember error shown console", "num": "3301", "d": "9/2013"}, {"title": "action toggleproperty propertyname gives deprecation warning", "body": "version toggleproperty action gives following warning toggleproperty part mentioned controller way put actions object", "num": "3296", "d": "9/2013"}, {"title": "translated emberjs guide japanese", "body": "hello everyone translated almost every page emberjs guide japanese samples wrote translations using google drive rewrite markdown soon nt mind like share documents github page appropriate place share please tell would allow", "num": "3295", "d": "9/2013"}, {"title": "absence error action triggered model failure deprecation triggered", "body": "case rejected model error action defined deprecation message printed", "num": "3294", "d": "9/2013"}, {"title": "rake test gives error", "body": "hello people new emberjs trying run test type command however command giving error says manually edit gemfile write run gives error run test thanks", "num": "3293", "d": "9/2013"}, {"title": "emberviews tests busted", "body": "starting test named able push initial views onto containerview behave nt time investigate tonight seems bad edit running git bisect", "num": "3286", "d": "9/2013"}, {"body": "likely better suited stack overflow additionally providing live codeexample via jsbin jsfiddle similar would make debugging issue considerably easier issue turn bug feel free reopen issue", "d": "9/2013"}, {"body": "anyone looking also found happens use paragraph change first tag div everything works fine", "d": "9/2013"}, {"body": "hi hashg github reporting bugs please ask questions stackoverflow", "d": "9/2013"}, {"body": "general prefer reduced case jsfiddle jsbin expedite handling issue", "d": "9/2013"}, {"body": "suspect name providing causing toplevel view render ca nt really sure without jsbin", "d": "9/2013"}, {"body": "also happen html malformed browsers correct missing closing tags make markers place markup nest properly", "d": "9/2013"}, {"body": "sounds like chrome bug file error", "d": "9/2013"}, {"body": "happening nt figured root cause something really weird", "d": "9/2013"}, {"body": "use", "d": "9/2013"}, {"body": "works app since linkto executes action href actually used", "d": "9/2013"}, {"body": "nt return name encodeuricomponent modelget name route possibly decode model", "d": "9/2013"}, {"body": "uriencodingdecoding would work course although prefer much cleaner unencoded links modern browsers seem handle pretty well anyways point though really bothers inconsistency binded via bindattr helper attributes get intact dom href attribute produced linkto helper gets messed live still seems kind shady", "d": "9/2013"}, {"body": "well think work plain objects whenever possible serialize usage urls long leave app use plain strings want pass value outside living app need serialize previous ember versions deserialize serialize supposed recently model used instead deserialize still api consistent serialize models serialize produce urlcompatible results hence problem", "d": "9/2013"}, {"body": "would need check suspect improperly serialized url would appear browser address bar would contain spaces wrong sure good browsers try hide bad behaviour replacing spaces cleaning mess", "d": "9/2013"}, {"body": "ok convinced stick uriencoding said live thanks quick reply suppose still potential problems example needed create link containing amp believe valid part url uriescaped equivalent href would render single amp want extra htmlescaping whould nt help since whould break correct click action still case unlikely guess brings issue priority waay", "d": "9/2013"}, {"body": "cc lukemelia", "d": "9/2013"}, {"body": "concatenated properties never inherited concated adding base classes concatenated props post extend never support initializers concated prop served purpose prior commit extending class never anything concat single array shared subclasses nt think concatenated properties good fit initializers", "d": "9/2013"}, {"body": "extending application loading ember data", "d": "9/2013"}, {"body": "kselden test initializer added parent child extended parent believe scenario work aligned goal pr clone diverge initializers array extend tired last night possible smoking something funky extract test shortly", "d": "9/2013"}, {"body": "think fundamental issue want clone diverge extend applymixin scenarios sure able differentiate scenarios currently saturday september pm stefan penner wrote kselden test initializer added parent child extended parent believe scenario work aligned goal pr clone diverge initializers array extend reply email directly view github", "d": "9/2013"}, {"body": "lukemelia applymixin scenario think happening", "d": "9/2013"}, {"body": "jsbin", "d": "9/2013"}, {"body": "test coverage", "d": "9/2013"}, {"body": "condensed fiddle demonstrating issue", "d": "9/2013"}, {"body": "cc alexspeller", "d": "9/2013"}, {"body": "thanks look asap", "d": "9/2013"}, {"body": "relevant remove linkto helpers works fine think issue linkview tries observe active property causes infinite loop sorts", "d": "9/2013"}, {"body": "happening ends grabbing method component overwriting dom event handler textfield defocus text field calls tries call method defined hence strange behavior works way expect use dasherized form dom event handlers la nt seem like bug lem know missing something perhaps docs could cleared way", "d": "9/2013"}, {"body": "til lot renames happening rc sure docs clear clearly bug", "d": "9/2013"}, {"body": "agree unified especailly since adding new features covers name implies maybe make new comprehensive guide nt see need multiple pages yet addingnewfeatures redirect nt break links contributingmd brief overview link guide", "d": "9/2013"}, {"body": "also tested see duplicate nt appear", "d": "9/2013"}, {"body": "tallama rather computed property properties might depends jsbin", "d": "9/2013"}, {"body": "looks like emberdata issue refile emberjsdata", "d": "9/2013"}, {"body": "hey dude would likely issue repo", "d": "9/2013"}, {"body": "suspect something else complex going possibly browser screwing around markup provide failing jsfiddle jsbin also let us know browser using", "d": "9/2013"}, {"body": "guess formatmarkdown helper trying put similar inside browser wo nt like", "d": "9/2013"}, {"body": "yeah trying insert blog post inside eventually get autoclosed cause confusion general using incorrect markup produce issues like may want think produce better error message kind situation", "d": "9/2013"}, {"body": "htmlbars help us detect cases", "d": "9/2013"}, {"body": "thanks help keep good work", "d": "9/2013"}, {"body": "sure yet bug may also want try asking question stack overflow make sure nt better solution issue", "d": "9/2013"}, {"body": "wagenet closing issue verified bug lack content due race condition receiving content sorry confusion", "d": "9/2013"}, {"body": "perhaps works latest ember build possible dup", "d": "9/2013"}, {"body": "yup works emberlatest thx", "d": "9/2013"}, {"body": "coffeescript quirk return truthy value controller action ember tries bubble route coffescript uses implicit returns returns triggers error basically need add statement end actions tell bubble", "d": "9/2013"}, {"body": "sir owe drink", "d": "9/2013"}, {"body": "open ember data", "d": "9/2013"}, {"body": "yes thanks", "d": "9/2013"}, {"body": "repeating attribute name spec boolean attributes see boolean attributes", "d": "9/2013"}, {"body": "looks cool", "d": "9/2013"}, {"body": "one worry would change existing components nt know maintain backwards compatibility", "d": "9/2013"}, {"body": "also cause fun old browsers long running flag would let people test waters", "d": "9/2013"}, {"body": "stefanpenner think generally opposed long running flags discuss", "d": "9/2013"}, {"body": "think would great plugin shipit", "d": "9/2013"}, {"body": "clear find hard implement plugin happy add hooks make easier", "d": "9/2013"}, {"body": "seems like putting template template set working jsbin section confirm issue", "d": "9/2013"}, {"body": "following guide exactly says need one either update guide fix bug todo template guide says den sep skrev alex matchneer notifications githubcom f\u00f8lgende seems like putting application template todos template set working jsbin section confirm issue reply email directly view github", "d": "9/2013"}, {"body": "provide jsbin jsfiddle code step", "d": "9/2013"}, {"body": "mistyped template step get interpreted application template would lead error fairly certain cause double check code point", "d": "9/2013"}, {"body": "nt add libraries ember jquery trek glowacki notifications githubcom mistyped datatemplatename todos template step get interpreted application template would lead error fairly certain cause double check code point reply email directly view github", "d": "9/2013"}, {"body": "jsfiddle seems empty make sure click update copying link", "d": "9/2013"}, {"body": "try alex matchneer notifications githubcom jsfiddle seems empty make sure click update copying link reply email directly view github", "d": "9/2013"}, {"body": "still blank", "d": "9/2013"}, {"body": "link got updated sorry alex matchneer notifications githubcom still blank reply email directly view github", "d": "9/2013"}, {"body": "html malformatted explains code nt working particular write missing necessary closing tag inside tag suggest using editor highlight kinds formatting issues would go long way prevent kinds frustrations nt seem like anything wrong guide let us know find anything", "d": "9/2013"}, {"body": "think would better written proposal", "d": "9/2013"}, {"body": "event must work thread related whitelisting helper events still discussion use viewscomponents achieve", "d": "9/2013"}, {"body": "gotcha thanks", "d": "9/2013"}, {"body": "ultimatetilecontroller created without container get container likely use framework provided api constructing controller ensure everything wired correctly likely trick within route additionally likely assert container present provide useful error", "d": "9/2013"}, {"body": "dude lets keep proposals discourse otherwise bug vs proposal noise ratio gets pretty bad", "d": "9/2013"}, {"body": "sorry reposted discourse", "d": "9/2013"}, {"body": "nt think bug views intentionally reused model changes route remains", "d": "9/2013"}, {"body": "case route changes", "d": "9/2013"}, {"body": "nope transitioning first second route remains still sectionsroute didinsertelement called click sections back first second", "d": "9/2013"}, {"body": "right route different paths models big question work dynamic elements since route different models example two different titles rendered page needing two lines one browser sets dimensions based dimensions want adapt another element page would best way added workaround solves issue presented observing model feels like hack nice way would view method triggered view renderedupdated present dom dimensions thanks time", "d": "9/2013"}, {"body": "related code", "d": "9/2013"}, {"body": "use afterrender hook sure good idea case code might look like", "d": "9/2013"}, {"body": "believe approach seems quirky seems like good guiderecipe material though", "d": "9/2013"}, {"body": "stefanpenner definitely agree best avoid type thing recently struggled markdown highlighting project working end much better performance readability wise insert correct values initial render", "d": "9/2013"}, {"body": "bindings specific ordering good rule thumb would prefer going forward likely see two concepts combined", "d": "9/2013"}, {"body": "ok change bindings within project computed aliases working bindigs nt please explain issue", "d": "9/2013"}, {"body": "computed properties lazy bindings setting binding property exists", "d": "9/2013"}, {"body": "seems like good candidate fleshed proposal", "d": "9/2013"}, {"body": "nt part ember core data adapter using reopen relevant adapter repo sure likely emberdata", "d": "9/2013"}, {"body": "sorry looked first yes using emberdata restadapter open thank", "d": "9/2013"}, {"body": "tried recent ember version post current bugs fixed caused array observes fired correctly new version observers notified chance behaviour another manifestation old bug", "d": "9/2013"}, {"body": "collectionview deprecated powers helper instead collection helper deprecated time permits ensure functionality desire continue provided framework", "d": "9/2013"}, {"body": "sounds like bug know cleanup work people wanted ember array methods might kill two birds one stone could jump start kselden remember ticket", "d": "9/2013"}, {"body": "understanding problem correctly nt really problem rather describing expected behaviour let explain reasoning missed point please let know dig believe either circumstances instantiated provided views typically inherit controllers parents controllers entirely optin example instantiates view inherits controller parent render usersomething instantiates view instantiates new instance controller assigns context programmatically appending root views assigning controller inferring rather opaque programmatically appending child views default inherit parent deviate developer handle deviation correctly", "d": "9/2013"}, {"body": "hi stefan thanks answer missed different helpers however original issue remains wrote use helper programmatically appending view assigning controller issue assigning controller view nt work controller controller associated view part fine helper works fine inside expected behavior well jsfiddle", "d": "9/2013"}, {"body": "snickell right sticky area intended replacement constructors want complete control ordering implement call need way think shortcut subscribing object event fired immediately object created calling methods mutate state immediately object construction inferior creating objects correct state initially situations think ember making impossible would good bring attention community core team recommend strategies andor make improvements ember know kind oblique answer hope helpful", "d": "9/2013"}, {"body": "totally understand find descriptions issue end oblique hard describe sort topic directly created jsfiddle showing issues using init introduced late rc series opened issue topic recommendation use init init nt play well inheritance wonder good solution would nt best solution good inheritance story work well bindings deep objects created init", "d": "9/2013"}, {"body": "superseded", "d": "9/2013"}, {"body": "argument older usage deprecated removed also internal dependency injection work still flux likely already documented settles fully document think instantiate flag fine document", "d": "9/2013"}, {"body": "majorbreakfast want take shot submitting pr fix", "d": "9/2013"}, {"body": "machty investigate", "d": "9/2013"}, {"body": "seems valid try knock monday", "d": "9/2013"}, {"body": "notice template blank order execution issue content select initially empty updates select matching item case none match none loaded updated data loads item selected", "d": "9/2013"}, {"body": "version using works expected see javascript var array id lenumber id lenumber id lenumber var numberscontroller emberarraycontrollercreate sortproperties lenumber content array consolelog sorted numberscontrollergeteach id numberscontrollerset sortascending false consolelog reverse numberscontrollergeteach id", "d": "9/2013"}, {"body": "appears trick apologize updated submitting issue thanks", "d": "9/2013"}, {"body": "curious trick", "d": "9/2013"}, {"body": "upgrading believe ember", "d": "9/2013"}, {"body": "alexspeller correct thank bringing submitted resolve", "d": "9/2013"}, {"body": "issue present chrome safari present chrome beta", "d": "9/2013"}, {"body": "chrome weird resize result part checkboxes appears remove tag working fine nt know supports inner commit metamorphs one funny thing removing moving label makes fiddle working", "d": "9/2013"}, {"body": "sounds like may browser bug easily work around probably though however chrome may next release maybe worth", "d": "9/2013"}, {"body": "browser bug fixed new version evergreen browser let wait chrome update", "d": "9/2013"}, {"body": "shipped would need wait remove deprecated features minor release ok removing deprecated items", "d": "9/2013"}, {"body": "think wycats said ok removing old deprecated stuff minor release", "d": "9/2013"}, {"body": "going close ticket someone wants submit pr entertain", "d": "9/2013"}, {"body": "panupan uncovered one nice composable aspects ember suggesting definitely ember way something would introduce framework research experimentation find configuration shared best handles use case go", "d": "9/2013"}, {"body": "write test would nt know begin saw tests stuffed distemberspadejs might worth updating docs look simplifying process look like jasmine", "d": "9/2013"}, {"body": "hi panupan one performance improvements made observes trigger referenced property consumed changes described blog please give look fiddle", "d": "9/2013"}, {"body": "ah ok nt see mentioned guides anywhere thanks pointing right direction", "d": "9/2013"}, {"body": "file well leave one open since repo nt super active", "d": "9/2013"}, {"body": "sure thing deed done", "d": "9/2013"}, {"body": "closing favour", "d": "9/2013"}, {"body": "tried nested outlets working either usecase supported missing something", "d": "9/2013"}, {"body": "gerfaut several points confusion among using aacontroller name causes serious misdirection render outlet resolved goes hooked ui instead wired take look resolves issues using correct naming scheme recommend using help debug naming issues wagenet think closed", "d": "9/2013"}, {"body": "thanks lot mixonic help wrong naming notice savor today thanks sorry mistake", "d": "9/2013"}, {"body": "gerfaut naming tricky ember chrome extension soon firefox extension often quite helpful", "d": "9/2013"}, {"body": "installed already enjoying thanks", "d": "9/2013"}, {"body": "enabling rsvp onerror manner comes caveats one longer asynchronously attach rejection handlers rejected promises", "d": "9/2013"}, {"body": "nt require standard fail handler add one asynchronously point", "d": "9/2013"}, {"body": "note example works whether handler fire promise first rejected either way lateradded handler also fire correctly", "d": "9/2013"}, {"body": "object partially initialized observers live thus initializing need aware dependencies would like rely change events sort dependencies initializing please use init event object considered fully initialized observers live nt even need call super", "d": "9/2013"}, {"body": "use least emberview instances init significantly different init init fires view started render understand bindings implemented observers observers complicated significant performance reasons clearer semantics seems dunno intentional make bindings complicated points using observers might something idiomatically however afaik bindings going forward computedalias idiomatic fact bindings implemented observers relatively internal implementation detail imo significant bindings seem like ideally nobrainer obvious works always works sort things bound bound", "d": "9/2013"}, {"body": "one idea maybe possible schedule init fire views start render", "d": "9/2013"}, {"body": "init fires ctor everything initialized render maybe confusing things fact views created rendering", "d": "9/2013"}, {"body": "also let please separate bindings cps discussion since different actually control initialize cp bindings control ordering issues", "d": "9/2013"}, {"body": "considering reverting year old change bindings removed initial scheduled sync connect trying move bindings views use cps", "d": "9/2013"}, {"body": "ahhh yes sorry got confused replaced init function oninit function init inheritance issues subclass init dispatched case", "d": "9/2013"}, {"body": "init ingeneral recommended mechanism initialization seems like init difficulttogrok semantics aliases andor bindings suggests people avoid init unless really know", "d": "9/2013"}, {"body": "init downsides inheritance clear manage encapsulation ordering initialization without inventing rollmyown constructor convention ala naked js init downsides bindings nt allow set complex object init preexisting magicbinding bindings point complex object downsides aliases alias loses sync fetch init later overwrite target alias init probably avoid seems sketch choose inheritance get operations effect final state", "d": "9/2013"}, {"body": "jsfiddle playground showing issues init bindings objects set init", "d": "9/2013"}, {"body": "people think would useful addition completely mistaken issue happy take stab", "d": "9/2013"}, {"body": "sherwinyu could see logging logging flag useful exceptions also proposals happen discussemberjscom", "d": "9/2013"}, {"body": "gordonmattey able recreate looks related scrolling scroll page sometimes click post scrolled top page looks like discourse appspecific bug suggest report discourse ember nt handle scrolling user top page route transition need choose", "d": "9/2013"}, {"body": "tried make example jsbin nt work iframe made gist fixed issue javascript emberrouterreopen didtransition function infos thissuper infos let know better way", "d": "9/2013"}, {"body": "thanks mixonic report discourse appreciate solution heyjinkim", "d": "9/2013"}, {"body": "guess fact component components views amp controllers getting instance getting", "d": "9/2013"}, {"body": "goshakkk would got getting parent controller component", "d": "9/2013"}, {"body": "inside component use get parent controller see updated jsfiddle next time post kind questions stackoverflow", "d": "9/2013"}, {"body": "intuitivepixel thank posting work around nt understand last point though breaking change latest issue ember", "d": "9/2013"}, {"body": "tylermercier yes right breaking change somehow amp since two views converted lately components views style still applies change suggestion rename issue something like missing documentation amp converted components making refer view associated controller anymore", "d": "9/2013"}, {"body": "workaround gave completely correct since makes url id replaced undefined actually may lead crash refreshing behaves correctly entering url manually however without crash occurs refreshing navigating one links", "d": "9/2013"}, {"body": "lauhub returning array transition via helper uses site passed go via url hits method solution fix store return single item", "d": "9/2013"}, {"body": "thanks reporting take look", "d": "9/2013"}, {"body": "workmanw filed pr test", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "seems like better stackoverflow question also provide code jsfiddle jsbin might easier figure going", "d": "9/2013"}, {"body": "sorry fault reset restadapter url mobile doest server gt", "d": "9/2013"}, {"body": "running problem passing string helper var test foo bar emberhandlebarshelper printtest function obj opts return obj test printtest", "d": "9/2013"}, {"body": "found workaround means need quote object passing inside see jsfiddle var test foo bar emberhandlebarshelper printtest function obj opts return optsdatakeywords obj item test printtest item", "d": "9/2013"}, {"body": "continuata awesome thanks", "d": "9/2013"}, {"body": "agree even methods little blurry", "d": "9/2013"}, {"body": "main public api sends named event inside component though sent template included component template equivalent api methods nt meant heavily used nt documented used internally part action handling meant equivalent traditional eventbased system used internally mainly exposed publicly objects expose raw events like models ember data views", "d": "9/2013"}, {"body": "thanks response wycats follow correct way send actions route controller controller another controller needs api component component another action inside component think currently using first three fourth note app structured legacy ember possible architecture current conventions definitely sending actions views routes controllers components trying reconcile api", "d": "9/2013"}, {"body": "route controller actions flow controllers decoupling fire action nt worry much listens need communicate downward call method set property directly controller another controller needs api direct access controller call method component targetobject send action including template based definition component included inside send action called template included component public api use communicate context included component component another action inside component want communicate call method", "d": "9/2013"}, {"body": "component another action inside component want communicate call method used emit actions target tree right ie component supposed use invoke action method componentcontroller example expected behavior clicking element log better use methods directly component actions share functionality example", "d": "9/2013"}, {"body": "better use methods directly component actions share functionality yep", "d": "9/2013"}, {"body": "mehulkar sebastianseilund still issue", "d": "9/2013"}, {"body": "wagenet close open discourse need thanks explanation wycats", "d": "9/2013"}, {"body": "asaf general components dependency injection becoming dispersed codebase starting get little fuzzy injected hooked router default property suggest general fetching factories container allows know injections like emberdata store instance attached expect tl dr yes use container find factory stefanpenner cd think docs reflect using container fetch viewscomponents", "d": "9/2013"}, {"body": "ideally hide container entirely make sure api allow add viewname arguments collection allowing view system resolve instantiate everything correctly", "d": "9/2013"}, {"body": "stefanpenner considered regression", "d": "9/2013"}, {"body": "unsure way components work registered currently haphazard likely shifting around problems machty working general solution help solve holistically process benchmarking see new path effects performance", "d": "9/2013"}, {"body": "hack solution last use case coffeescript class appcollectionview extends emcollectionview itemviewclass appitemview init gt super consolelog dep okay createchildview view content gt contentdep dep super view content class appitemview extends emview init gt super consolelog dep gt okay", "d": "9/2013"}, {"body": "completely insane", "d": "9/2013"}, {"body": "machty want confirm nt known issue aware yet array computed", "d": "9/2013"}, {"body": "ran issue date ember even cross checked master somehow convinced nt changed issue", "d": "9/2013"}, {"body": "believe consistent thing using keyword itemcontroller keyword block", "d": "9/2013"}, {"body": "see thanks", "d": "9/2013"}, {"body": "agree routerrouter class quite strange caused grief let assemble exact usecase somewhat related pr meant normalize routing behaviour", "d": "9/2013"}, {"body": "hello stefan yea tracked recent work also pr saw think wo nt solve changes defaultrouter class generation approuter worked case happy test soon emberlatest build also happy hear core contributor agrees thoughts routerrouter topic", "d": "9/2013"}, {"body": "ya causes grief chance throw together quick demo save time dig", "d": "9/2013"}, {"body": "let first try pr working provide demo know merged", "d": "9/2013"}, {"body": "may want confirm quick pass suggests pr addresses issue link master ember pr applied seem work correctly", "d": "9/2013"}, {"body": "got isolated jsbin working version issue seen screwuprouter runs routergen initializer problem persists changes", "d": "9/2013"}, {"body": "vanthome seems solve part problem ideas dig tonighttomorrow", "d": "9/2013"}, {"body": "yes forgot mention enhanced situation current thx", "d": "9/2013"}, {"body": "upon research reference looks like need handle older browser support combatted following", "d": "9/2013"}, {"body": "importante el michael narciso notifications githubcom escribi\u00f3 upon research reference looks like need handle older browser support ive combatted following windowhistory amp amp windowhistorypushstate approuterreopen location history reply email directly view github", "d": "9/2013"}, {"body": "looks loose wrapper around reading code depreciation arguments really treated name actually documentation updated reflect", "d": "9/2013"}, {"body": "really want would nt class object passed", "d": "9/2013"}, {"body": "apmorton understand docs generated source code", "d": "9/2013"}, {"body": "correct documentation site generated inline comments source code", "d": "9/2013"}, {"body": "think usually input helper manage though idea use case intended work", "d": "9/2013"}, {"body": "would definitely recommend using handle case give usecase missing reopen", "d": "9/2013"}, {"body": "using input great recommendation however nt understand nt work documentation suggest upgrading ember app worked feature removed since perhaps time update docs", "d": "9/2013"}, {"body": "mrhus nt see mention inputs", "d": "9/2013"}, {"body": "hi ember data guides actually currently version ember data", "d": "9/2013"}, {"body": "hi bradleypriest maybe would beneficial version guides refer page", "d": "9/2013"}, {"body": "fair guides need updating noone chance yet would mind closing opening issue mentioning outofdatedness", "d": "9/2013"}, {"body": "ok cool put thanks", "d": "9/2013"}, {"body": "bug new feature layouts feature templates templated view", "d": "9/2013"}, {"body": "biggest issue responsible managing immediate child views templates use render time hard reconcile two concepts would hard support static layouts wrapping children html question big caveat", "d": "9/2013"}, {"body": "thinking maybe containerview follow idea component create virtual view yield childviews become dynamically manages", "d": "9/2013"}, {"body": "marcelomira easily achieve want letting use child view instead using", "d": "9/2013"}, {"body": "seems like call directly updates pushed end run loop via means loop modifies several item properties would trigger change likely wrapped true generally one wants avoid triggering observers several times important thing test changing early escape still works triggering two different changes item although really nt see would nt", "d": "9/2013"}, {"body": "woot thanks mixonic bantic", "d": "9/2013"}, {"body": "might related", "d": "9/2013"}, {"body": "concept test implementation", "d": "9/2013"}, {"body": "hjdivad look", "d": "9/2013"}, {"body": "ssured", "d": "9/2013"}, {"body": "bit late mention uh bug verified", "d": "9/2013"}, {"body": "looks good thanks diving", "d": "9/2013"}, {"body": "asaf ca nt tell exactly looking perhaps js fiddle failing test would explain clearly specific new feature proposal go ahead open thread discussemberjscom proposals tag general support dom events bubbling view hierarchy called event event handler views also handle events instead eventmanager could shared among components allows architectures supported perhaps flexibility would allow address use case", "d": "9/2013"}, {"body": "neilweber reopen emberjswebsite repo thanks", "d": "9/2013"}, {"body": "done textarea made component look source embercomponent see", "d": "9/2013"}, {"body": "got documentation incorrect still says extends lists valid property", "d": "9/2013"}, {"body": "noticed well indeed looks like documentation source date seems case controls converted extend instead", "d": "9/2013"}, {"body": "closed", "d": "9/2013"}, {"body": "think figure add inline docs generate docs", "d": "9/2013"}, {"body": "following think console error msg fine considering page emberstatemanager restored note deprecated info happened moved issue", "d": "9/2013"}, {"body": "pages api generated inline docs repo sent mailbox iphone tue sep brad oyler notifications githubcom wrote following think console error msg fine considering page emberstatemanager restored note deprecated info happened moved issue reply email directly view github", "d": "9/2013"}, {"body": "lukemelia stefanpenner wondering make sense deprecated class emberstate display list classes maybe added deprecated flag inline doc would move deprecated grouping layout menu thoughts", "d": "9/2013"}, {"body": "issue actually website project something main emberjs project needs update", "d": "9/2013"}, {"body": "looks like someone already updated website", "d": "9/2013"}, {"body": "website sorry click issue tracker link website posted possible move issue website", "d": "9/2013"}, {"body": "think issue could closed unless places website defining models page issue", "d": "9/2013"}, {"body": "apparently doc updated since morning mean morning europe wakeup us close issue", "d": "9/2013"}, {"body": "lauhub thanks work", "d": "9/2013"}, {"body": "silly nt notice page changed since rc", "d": "9/2013"}, {"body": "default lookups return singleton per container public api internal container api", "d": "9/2013"}, {"body": "ok", "d": "9/2013"}, {"body": "taras available irc emberjs want clarification part ember lack guides", "d": "9/2013"}, {"body": "stefanpenner tried find irc nt know handle sure looked jsbin seems like awkward inconsistency support injected original another intuitivepixel shows singleton injections working injected controllers could please take another look", "d": "9/2013"}, {"body": "reopening till chance digest request", "d": "9/2013"}, {"body": "stefanpenner taras narrowed failing test issue factory caching nt take account fact injections may commenting lines makes test pass obviously nuanced fix would preferable thoughts", "d": "9/2013"}, {"body": "lukemelia thanks digging ya commenting would mean every instance gets factory nondeal proper solution mind specifically work kselden discussing would solve", "d": "9/2013"}, {"body": "lukemelia thank looking", "d": "9/2013"}, {"body": "glad see great opportunity tool pretty cool using tool like strictly would cause troublesome task make documents management cost writing documents could become high worry get less able write original version documents easily think reason use tools need embed translated words os checking people realistic way keep documents date imo minimum management would nessesary suppose start making correspondence table idioms newcomer course opinion", "d": "9/2013"}, {"body": "second thoughts might missed point thought opinion earlier several problems way checking people tend dependent individual skills efforts without management tool might feel uneasy perceive state part uptodate going manage many languages tools may needed concern time cost management sorry broken english good reading english least nt worry translations", "d": "9/2013"}, {"body": "using tool like strictly would cause troublesome task make documents without management tool might feel uneasy perceive state part uptodate yes think spoton counts certainly want keep original sources markdown files git repo would great tool helps us keep translations files uptodate launchpad says gettextbased translations good us love something spirit works markdown sources", "d": "9/2013"}, {"body": "joliss thank reply upload translated documents soon possible springboard discussion translation project give time", "d": "9/2013"}, {"body": "uploaded translations problem please let know", "d": "9/2013"}, {"body": "effort awesome quite excited", "d": "9/2013"}, {"body": "stefanpenner thanks though ontheside job intend work steadily", "d": "9/2013"}, {"body": "mbixby seem unexpected create failing test", "d": "9/2013"}, {"body": "time fix tomorrow", "d": "9/2013"}, {"body": "may want cross post appears related runloop possible demonstrate failure reduced code maybe jsbin fiddle", "d": "9/2013"}, {"body": "false alarm deprecation error thrown nonexistant resource passed", "d": "9/2013"}, {"body": "lukemelia check wrong order caveat", "d": "9/2013"}, {"body": "stefanpenner right think relying fact could use toggleproperty ember object function like directly key helper nice side effect since actions hash put controllers view think must wrap toggleproperty inside action defined actions hash", "d": "9/2013"}, {"body": "oh see seeing correct behaviour seems invalid", "d": "9/2013"}, {"body": "stefanpenner agree even would bet first issue related ths change", "d": "9/2013"}, {"body": "agree closing previously toggleproperty action would invoke controller toggleproperty method behavior deprecation warning eliminate deprecation warning define toggleproperty controllers actions hash call thistoggleproperty word warning coffeescripters careful accidentally return true action handlers via coffeescript implicit return returning true cause action bubble perplexing situation especially toggleproperty sent mailbox iphone sun sep pm sylvain mina notifications githubcom wrote stefanpenner agree even would bet first issue related ths change reply email directly view github", "d": "9/2013"}, {"body": "lukemelia thanks coffeescript warning", "d": "9/2013"}, {"body": "using send hbs also throws warning example advisable follow workaround mentioned toggleproperty avoid using send cases", "d": "9/2013"}, {"body": "phkavitha define controller action hash avoid using term conflicts deprecated support removed problem go away", "d": "9/2013"}, {"body": "\u30ca\u30a4\u30b9\u3067\u3059", "d": "9/2013"}, {"body": "intention seems great concerns would likely none core audit make sure convey correct idioms similar way keeping date tomdale wycats wifelette thoughtsfeedback", "d": "9/2013"}, {"body": "stefanpenner thanks reply always ready consult core members japanese experts emberjs correct idioms intend keep date much possible future really hoping translations help emberjs become widespread japan", "d": "9/2013"}, {"body": "emadurandal also excited", "d": "9/2013"}, {"body": "wow awesome thank taking time yes please go ahead share github eventually like official story let let people run", "d": "9/2013"}, {"body": "tomdale thank kind permission continue work stefanpenner thumbsup joliss join discussion give time ysksn \u3054\u5354\u529b\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5b09\u3057\u3044\u3067\u3059", "d": "9/2013"}, {"body": "translation work spanish railstutorial back day like ember either next days whenever ya come standard way contribute like sep pm ema durandal notifications githubcom wrote tomdale thank kind permission continue work stefanpenner joliss join discussion give time ysksn \u3054\u5354\u529b\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5b09\u3057\u3044\u3067\u3059 reply email directly view github", "d": "9/2013"}, {"body": "translation work spanish railstutorial back day like ember either next days whenever ya come standard way contribute like sounds awesome say nt hold breath standard way tooling might take figure go ahead put stuff inclined could note latest commit translating way bit easier bring uptodate later markdown sources guides emberwebsite repo nt sweat always figure later", "d": "9/2013"}, {"body": "inclined could note latest commit translating way bit easier bring uptodate later ok note updating translations contents version", "d": "9/2013"}, {"body": "joliss may ask basic question note master time working latest change file working far assume ashamed say still trying get used practice git", "d": "9/2013"}, {"body": "sure either fine might better indeed git takes get used feel", "d": "9/2013"}, {"body": "thanks kindness choose", "d": "9/2013"}, {"body": "uploaded translations problem please let know", "d": "9/2013"}, {"body": "cc machty", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "os use execjs link bestavailable js runtime obviously works one otherwise need exactly would prefer ship hard dependency one js runtime", "d": "9/2013"}, {"body": "crunchbang linux waldorf thank information", "d": "9/2013"}, {"body": "nice crunchbang pretty awesome", "d": "9/2013"}, {"body": "identified cause working fix", "d": "9/2013"}, {"body": "wagenet matter templates precompiled subdirs sure confirm adding templates html file stefanpenner think use shareddashboard current convention", "d": "9/2013"}, {"body": "actually fix looking one minute", "d": "9/2013"}, {"body": "thanks much bug report taytay different fiddle note still fails two points need comparator otherwise sort according integers lookup according strings important comparator return nonidentical items change priority item comparator would incorrectly return item item must tie breaker said probably user friendly could could probably give tiebreaker think also changed example depends instead great array computed would right", "d": "9/2013"}, {"body": "wycats wagenet think comparing guids usersupplied comparator returns would help avoid footgun requiring comparators never return different items sort property values", "d": "9/2013"}, {"body": "saying use guids deterministic tiebreaker", "d": "9/2013"}, {"body": "wycats confirm", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "three issues bug report x bug sort item property changes proxy item compared item x bug sort item property triggers change dependent array computed array index updated early invalidated x implicit tiebreaker", "d": "9/2013"}, {"body": "hjdivad bumping since blocker anything get cut happy include", "d": "9/2013"}, {"body": "wagenet two remaining issues tie breaker issue chains multiple steps reuse items b depend properties", "d": "9/2013"}, {"body": "changing fiddle rely cheat incidental happens update individual item changes", "d": "9/2013"}, {"body": "said nt think issue blocker either think current state far easy wrong thing taytay initial jsfiddle pretty reasonable guess api obvious would nt work", "d": "9/2013"}, {"body": "stefanpenner new test last stable version final behavior fixed demo changed example understandable moreover real case summarize need add monitoring ember app created controller send ajax request backoffice time route change observer alone nt work solution found add render helper montoring application template remind maybe bug behaviour maybe expected find dirty add render helper template add controller", "d": "9/2013"}, {"body": "something needs create monitoring controller", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "thanks kristofor solution seem good", "d": "9/2013"}, {"body": "wagenet upgrading release problem seems resolved test days thanks", "d": "9/2013"}, {"body": "thanks testing would dropping member expensive", "d": "9/2013"}, {"body": "heartsentwined wagenet already decoded adding another decode could decode characters meant decoded fix needs normalize behavior browsers seen workaround splitting hash locationhref decoding instead relying locationhash consistently decoded", "d": "9/2013"}, {"body": "heartsentwined would interested attempting pr", "d": "9/2013"}, {"body": "idea fix avoiding doubledecoding issue browserdependent", "d": "9/2013"}, {"body": "heartsentwined locationhref never decoded using instead locationhash avoid double decoding", "d": "9/2013"}, {"body": "alexspeller seems related", "d": "9/2013"}, {"body": "believe exact issue anyone confirm issue fixed use master enable query params feature ie immediately ember loads", "d": "9/2013"}, {"body": "wagenet confirm", "d": "9/2013"}, {"body": "alexspeller circumstances would app want encoded params", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "think path least surprise applies find surprising thisconstructor nt match globally accessible constructor understanding scope works terms modules important believe important consistent semantics modules", "d": "9/2013"}, {"body": "timevans problem would equally surprising dependency injection altered global state ember manage dependencies also importing controller model route leaky abstraction", "d": "9/2013"}, {"body": "rather new ember might misguided thought current data model certain longlived source arrays want transform arrays customized suitable views models sake argument imagine source model object exposes source collections financial application master list accounts transactions populated beginning app model periodically synced server thus shares lifetime app various view models expose filtered versions source model natural way model would add new transitory properties source object instead transitory objects expose filtered collections basically exposing facade imagine short lived models would created destroyed needed user navigates around app ability observe array live filtersortmapmerge underlying array changes helpful machinery period previous life actionscriptflex developer got subset features listcollectionview class found using sorts tasks often one object observing collections another hope helps clarify edited sep add code markdown", "d": "9/2013"}, {"body": "jackfranklin comment try new guides comment experience", "d": "9/2013"}, {"body": "trek sure start fresh go newest guide", "d": "9/2013"}, {"body": "far better dare mighty things win glorious triumphs even though checkered failure rank poor spirits neither enjoy suffer much live gray twilight knows victory defeat theodore roosevelt folks", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "works correctly latest chrome beta", "d": "9/2013"}, {"body": "seems like temporary chrome thing", "d": "9/2013"}, {"body": "hmm interesting right gunn changing app using normal property fixes problem investigate evening", "d": "9/2013"}, {"body": "similar issue using iframe inside ember views like google ads breaks back button ie safari url updated properly firefox chrome opera latest versions work", "d": "9/2013"}, {"body": "nt worked since new router outlet helper", "d": "9/2013"}, {"body": "clarify would nt worked old outlet either view becomes parented view destroyed along parent", "d": "9/2013"}, {"body": "based comments krisseldon considered bug try fix", "d": "9/2013"}, {"body": "bug fix", "d": "9/2013"}, {"body": "question change currentview contract source currentview manages lifecycle change outlet view class router seems teardown views rendered outlets seems fixable question layer", "d": "9/2013"}, {"body": "hate special case outlet helper currentview implemented support outlet changing containerview nt destroy currentview seems inline currentview bound point post semantic change", "d": "9/2013"}, {"body": "ping wycats please weigh comment", "d": "9/2013"}, {"body": "checking issue debug discover problem view connected outlet rerender performed connected view destroyed recreated think happen view created rerender nt know recreate instance views created inside handlebars helpers like view someview changed viewjs located problem nt happen updated fiddle updated fiddle works unfortunately nt get tests passing change nt know correct approach worried idea", "d": "9/2013"}, {"body": "containerview changes destroy currentview would make life easier people need maintain persistent expensivetorender views least thinkhope would", "d": "9/2013"}, {"body": "still happens try update fiddle get exact scenario", "d": "9/2013"}, {"body": "never change nt set observers think better error message attempting set unobservable properties let us know", "d": "9/2013"}, {"body": "staring far long realized error originates failing test definitely leaking", "d": "9/2013"}, {"body": "definitely want fix nt think blocker suspecting ff bug point investigation warranted", "d": "9/2013"}, {"body": "alexspeller fixed", "d": "9/2013"}, {"body": "resolved believe try test", "d": "9/2013"}, {"body": "pretty sure fixed leaking test", "d": "9/2013"}, {"body": "see closure reason", "d": "9/2013"}, {"body": "api docs guides come part project solidifies", "d": "9/2013"}, {"body": "running running integration tests", "d": "9/2013"}, {"body": "wagenet stefanpenner looks like nt fixed pretty new ember safe include workaround method existing apps", "d": "9/2013"}, {"body": "eltehupkes exactly inject fix problem ca nt find location emberjs source file least latest release official fix soon", "d": "9/2013"}, {"body": "shqipognja nt go emberjs source file well could nt reopens put anywhere like long ember sources personally file project stuff like including explanations hacks elaborate possible way always see meaning fix differently future", "d": "9/2013"}, {"body": "eltehupkes understand reopen correctly essentially allows dynamically redefine classes add methods curiosity would guess impossible compiled languages right back point however regardless put code sample somewhere application like hackjs file still ensure code executed point right said included flow control somewhere point like route object hook somewhere scheduler lifecycle even simple function call unless things ember namespace automatically execute app launches said probably misunderstanding key concept upon conclusionas derived please educate haha", "d": "9/2013"}, {"body": "shqipognja correct awesome also totally horrible ca nt certain things defined hacks like awesome avoid messing core code need add hack every new release javascript code html page included using tag always executed put one links ember work", "d": "9/2013"}, {"body": "eltehupkes thank much help", "d": "9/2013"}, {"body": "hardcode solution something like overwiting behaviors application", "d": "9/2013"}, {"body": "ran issue today trick ideal still better nothing another way achieve target store context variable love make trick available without using variable unfortunately nt able find way get current context explicit target", "d": "9/2013"}, {"body": "ilovett get think already fixed somehow wagenet think issue closed", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "updated fiddle point beta build handlebars", "d": "9/2013"}, {"body": "believe use custom resolvercontainer address stefanpenner", "d": "9/2013"}, {"body": "trek issue number", "d": "9/2013"}, {"body": "trek yup totally works although may clearly documented yet support backward compatibility ember still uses internally nt actually depend merely asks resolver template nameoftemplate makes totally customizable merely subclass resolver provide custom method resolver line example ember app kit build templates unique modules resolve templates directly module system eak resolverloader pair starting mature released project", "d": "9/2013"}, {"body": "reopening since merged", "d": "9/2013"}, {"body": "update helper seem supported ember anymore way solve use lastoftype", "d": "9/2013"}, {"body": "closing favor discussion pr", "d": "9/2013"}, {"body": "wagenet issue fixed", "d": "9/2013"}, {"body": "little css hack worked", "d": "9/2013"}, {"body": "adding two cents used unbound syntax realized actually need bound adding view code like works perfectly extra code written something seems like go view nt logic rendering variable part string let know thinking incorrectly going syntax like view code like plus calling view happens lot code base could get bit heavy obviously could find way create shared view render type string url reduce", "d": "9/2013"}, {"body": "nathanpalmer ca nt use helpers external links creating custom linkto style component extreme would something like coffee appexternallinkcomponent embercomponentextend tagname classnames icon edit attributebindings href href gt get pattern fmt get contentid property contentid emberhandlebarshelper externallink appexternallinkcomponent", "d": "9/2013"}, {"body": "bradleypriest thanks info step example reusability", "d": "9/2013"}, {"body": "also address question external link case least transition another page ember app", "d": "9/2013"}]