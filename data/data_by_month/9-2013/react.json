[{"title": "error message using refs outside render difficult understand", "body": "something reactowner refs intuitive", "num": "383", "d": "9/2013"}, {"title": "listen events demand instead first mount", "body": "convos chrome team indicated listening mousewheel kills optimizations agh create mapping synthetic event set real events listen attach listeners need initial diff nt even need worry removing listeners think periodic gc listeners rather last listener removed since could lead thrashing", "num": "381", "d": "9/2013"}, {"title": "listen events mount point top level", "body": "event occurs page regardless dom subtree managed react goes react event subsystem would great instead listened mount point child documents eg iframes instead top page", "num": "380", "d": "9/2013"}, {"title": "", "body": "really like plugin open source allows us implement function also function always describe structure point time api allows describe modal layers point time means open close layers function like function react assigning yungsters mastered reactlayers stuff fb stack petehunt also great experience using building layers integration react whoever timeneed", "num": "379", "d": "9/2013"}, {"title": "dangerouslysetinnerhtml nt properly reconcile", "body": "sbezboro reported following issue irc master repro case render render render div innerhtml empty instead nt really know going jordwalke petehunt guys look", "num": "377", "d": "9/2013"}, {"title": "fix direct uses document global", "body": "introduced couple uses need fix nt actually available though need careful using directly well breaks server rendering", "num": "373", "d": "9/2013"}, {"title": "documentation createclass rendercomponent vague add links", "body": "great work new documentation small remarks component api page mentions createclass rendercomponent please make reactcreateclass reactrendercomponent mentioning code please make clickable go right location documentation eg reactcreateclass go toplevelapihtml reactcreateclass", "num": "371", "d": "9/2013"}, {"title": "reactwithaddonsjs", "body": "let package separate build includes anything else would displace current reacttranstiongroupjs build", "num": "369", "d": "9/2013"}, {"title": "reset button docs live editor", "body": "", "num": "368", "d": "9/2013"}, {"title": "windows line ending jsx error message bad", "body": "using file windows line ending crlf following messages happen chrome firefox detect crlf ending throw real exception warning instead evaling nontransformed file", "num": "366", "d": "9/2013"}, {"title": "support onselect", "body": "seems currently supported would nice properly support browsers would prefer differentiate standard supporting elements input textarea see also", "num": "365", "d": "9/2013"}, {"title": "use mutationobserver instead mutation events", "body": "currently listen think make onchange work contenteditable apparently expensive look replacing mutation observer obviously api different observers get batched may build abstractions make work think relatively easy synthetic events nt looked", "num": "358", "d": "9/2013"}, {"title": "error checking binding event missing handler", "body": "javascript libraries building uis provide sort feedback thrown error notification trying bind event missing handler however react merely nothing example javascript var testnode reactcreateclass handleclick function consolelog never get called error occur render function return reactrendercomponent documentbody since nt camelcased work obviously however errors generated would love see binding mechanism explain handler nonexistent", "num": "354", "d": "9/2013"}, {"title": "error messages unclosed xml tags misleading", "body": "example app error online tag closed correctly compiling jsx compiler gives error line syntactically correct however frustrating newer developers able resolve", "num": "353", "d": "9/2013"}, {"title": "doccostyle documentation", "body": "cleans lots categorization nits made docs cleaner thanks old sections reduced sentences thinking taking occasion fully comment examples processed docco potentially replace dangling documentation sentences fresh fullyfeatured examples walkthrough explaining various points current docs one example raised irc components state machines seeing whole event explanation dedicated section sentences reduced comments said examples maybe even better docco display live editor sidebyside whatever ui works user see example code play reading comments beside still complete ref api nearby time ensures examples well separated chunks imagine front page examples comments docs idea really demo kinds things could saying way nonbrainer even without docco processing part even design new examples replacecomplement old ones expose react general ideas rather demoing small snippets components eliminate another chunk documentation examples live repo doc page goal thinking able tell people react examples api docs extra explanation needed end day nt much documentation left outside examples api docs flaws approach mainly narrative top bottom code think react nature alleviate really show example thinking starting existing comment ex prove hey details nt fit example comments cookbook still realize ambitious seems appealing enough suggested really believe good example eliminate lots explanations approach taken repos seem work well far", "num": "352", "d": "9/2013"}, {"title": "nowrap nt work table cell", "body": "creating horizontal scrolling webpage using table nowrap hack calculating width screen every time seems react ignore nowrap work around", "num": "348", "d": "9/2013"}, {"title": "classname vs class", "body": "jquerybootstrap example see would class btn equivalent classname btn one preferred", "num": "346", "d": "9/2013"}, {"title": "example todo list unable edit", "body": "fix line add onchange thishandlekey", "num": "345", "d": "9/2013"}, {"title": "support onmouseover", "body": "someone trouble irc edit changed subject document support documentation issue already", "num": "340", "d": "9/2013"}, {"title": "fails wholedocument rendering", "body": "see issue reported causes reactpage fail", "num": "337", "d": "9/2013"}, {"title": "jsx transform nt always preserve line numbers", "body": "transforming jsx gives looks like lost line break admit breaking weird since compiles nice line numbers preserved lint errors etc correspond easily", "num": "335", "d": "9/2013"}, {"title": "create sourcemaps build", "body": "browserify sort allows puts inline file far ideal consider working browserify team make possible build map outside bundle something else might able extract sourcemap might stop using browserify", "num": "334", "d": "9/2013"}, {"title": "jsx executable wrong version", "body": "outputs commoner version probably make version", "num": "329", "d": "9/2013"}, {"title": "create noncrappy standalone build reacttransitiongroup", "body": "want people able use relatively easily actually easy figure may fun things checked makes something pretty terrible packages copy react", "num": "327", "d": "9/2013"}, {"title": "finalize real public api", "body": "order number things need able access modules currently consider internal main need comes components plugins need usual example accesses nt currently want package option build standlone package without substantial changes hacks probably wo nt work everywhere ca nt without also packaging need public api make work less awkwardly soon wanted make sure filed", "num": "326", "d": "9/2013"}, {"title": "send npm package builds site well", "body": "browser packages requests npm package well", "num": "319", "d": "9/2013"}, {"title": "add stack overflow support page", "body": "already tag everything pretty dead could undiscoverable follow", "num": "317", "d": "9/2013"}, {"title": "fail run jsx compiler windows vista business", "body": "installed reacttools npm tried run jsx gives following error c usersmyusernameappdataroamingnpmnodemodulesreacttoolsbin gt node jsx throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit possible fix", "num": "316", "d": "9/2013"}, {"title": "inputs uneditable value attribute present", "body": "see element rendered value attribute already presentset input seems uneditable thought might something handlechange sure hopefully misusing jsx thanks", "num": "315", "d": "9/2013"}, {"title": "react cookbooks", "body": "case obvious watching ember lot lately pretty jealous docs efforts getting beyond started working cookbooks think awesome idea want steal could really help cut time spend answering questions would also awesome resource", "num": "313", "d": "9/2013"}, {"title": "newlyinserted svg elements render component update", "body": "components try render svg elements etc must inserted parent get rendered browser assume function uses new svg elements created way browser wo nt render standalone one quick fix add svg elements wrap tag extract may appropriateelegant solution realize svgs nt react focus thought point anyway case thanks great work far", "num": "311", "d": "9/2013"}, {"title": "label property", "body": "react nt seem support property labels search nt turn anything github repo", "num": "310", "d": "9/2013"}, {"title": "classlist wanted", "body": "adding property included components synchronised would nice think look much cleaner nt think", "num": "309", "d": "9/2013"}, {"title": "existence throws error invoking", "body": "scenario trying use react dynamically replace tag app content addition need use callback handle custom event binding problem soon callback added react throws following errors jsfiddle conclusion content still renders error bit unnerving simply removing callback prevents errors thrown brand new possible trying make react something meant handle either way think mere existence empty callback throwing errors fwiw scenarios involve injecting content rather replacing existing domnode seem work fine without callback", "num": "308", "d": "9/2013"}, {"body": "react reuse component since type position tree intentional many reasons speed memory etc since assumed opposite understand confusion coming since component reused wo nt called wo nt resetting like component initialization react provide hook though docs said think want carefully consider implications controlling component multiple places get messy make things bit harder reuse nt know full scope application maybe work great noticed though take alternative approach selection passing callback leaving entirely prop set initial state nt use", "d": "9/2013"}, {"body": "interesting agree issue remain closed componentwillrecieveprops works thanks however thoughts questions interesting react notion component identity based entirely name position would imaged would like argue components assigned properties much part identity name position current technical limitations fundamental ideologies react make", "d": "9/2013"}, {"body": "lot quirks react come desire speed case threw child away property changed would also need remove dom node create new one virtually identical except one attribute expensive slow part react philosophy data able flow application top level data changing frequently maybe backbone model something really want minimize set things change line hopefully helps bit questions great question newsgroups could probably made interesting blog post", "d": "9/2013"}, {"body": "like add used concern however props constituted identity component always throw component away whenever data changes slow also destroy eg form inputs selection position many cases reading antipattern computing value changes state value date additionally means state storing actually minimal representation component state instead try avoid reading instead compute value inside based usually want particular use case notice minimal set state needed component instead take callback asks change selected state make sense chenglou going document", "d": "9/2013"}, {"body": "one thing override identity setting key prop component", "d": "9/2013"}, {"body": "thanks additional info good know get exactly mean using callback tell needs expand new react hard know best practices thought given idea immutability telling component change would wrong given refs guess prefer idea setting key prop seems declarative using hook another thing assumed guess assumed wrong diff process currentmockdom nextmockdom thought intelligent get since changing style react would nt throw away whole node would change style calculating minimal changes required said throwing away components prop changes seems assumption wrong however seem remember video react saying something similar apply minimal set dom changes required however occurs perhaps process used react interacts real dom transitioning currentmockdom nextmockdom unless missed lot docs may also need clarification would cool read blog post dom mockdom nextmockdom nt even know real concept interact stored basic example updating internal state think understand well indepth understanding would beneficial complicated example rendered rerendered list components listapp state changes say perhaps select one component mark highlighted components rerendered criteria rerendering regardless components render identical mockdom one class added affect real dom ie minimal set dom changes applied actually written realize able answer lot questions react would consolelog minimal set dom commands applied guys flag use use developmentdebugging", "d": "9/2013"}, {"body": "tweak style attribute mutate style attribute use keys component class heuristic indicate want blow away whole subtree replace innerhtml faster dirty checking rendered markup many individual dom mutations heuristic actually quite effective experience vjeux working blog post telling component change indeed great practice especially refs however react data flows tree automatically order flow data back pass callback inform top tree data change sugar called make bit streamlined reason explicitly data fundamentally flows one way von neumann machines nt make data flow explicit found becomes hard maintain", "d": "9/2013"}, {"body": "multiple mount points attach suite listeners mount point tipping point instead go top level", "d": "9/2013"}, {"body": "fb layers many internal deps nt even use ig instead suggest open source react layers stuff plus light ig shim nt get nice behaviors value community lies mostly architecture imo yungsters redid layers today would differently ie think could composition could nice greenfield opportunity", "d": "9/2013"}, {"body": "honest nt know would done anything differently layer abstraction held really well able extend make improvements time without much code decay", "d": "9/2013"}, {"body": "yungsters yeah layer awesome wondering use mixin rather composition hook react", "d": "9/2013"}, {"body": "guess sure mean using composition hook layers react asking use instead returning components", "d": "9/2013"}, {"body": "yeah", "d": "9/2013"}, {"body": "layers inherently anchored position dom example make sense exist returned tree actually want return subtree well list layer components", "d": "9/2013"}, {"body": "makes sense return value renderlayers little confusing never used multiple layers component clear first glance follows react normal data flow", "d": "9/2013"}, {"body": "designed debated whether allow returning single layer component however want engineers learn something new use case requires one layer component also felt like painful return map one key keep mind time standard way passing children keys react component", "d": "9/2013"}, {"body": "think frags would nt mind putting components render method would kind weird anchored dom frags would precedent components nt render anything place dom would paradigm learn", "d": "9/2013"}, {"body": "would strongly opposed nt think makes code easier read makes following questions harder answer component render layers given component returned layer component component render nonlayer", "d": "9/2013"}, {"body": "think odd return things output nt exist physical tree component layers ability multiple distinct render tree roots fb reflects return value confusing constrain bit easy would require single component returned modify existing code use allow returned within frags would make sense required top render tree nothing deeper probably interested making use general abstraction solves layers also cases want dom subtree actually exist another part page yet controlled component think portal another part page even something simple current would quite awesome released separate project would nt even mind bringing ton extra js resources pete could also open source insta one quickly rather make conform get frags thoughts", "d": "9/2013"}, {"body": "clear use reactlayer reactlayeredcomponentmixin ig fb layer behaviors layer impl yet api compatible fb layers behaviors design favor bringing opensource want make sure think making api cleanup", "d": "9/2013"}, {"body": "one tidbit seems happen value exactly step step different ie things work expected", "d": "9/2013"}, {"body": "happens change step instead works right", "d": "9/2013"}, {"body": "reduced test case lines", "d": "9/2013"}, {"body": "petehunt yeah changing use span works expected", "d": "9/2013"}, {"body": "anyone wants look bug probably", "d": "9/2013"}, {"body": "brianr reproduce seeing also bugs use different string", "d": "9/2013"}, {"body": "vjeux able reproduce particular behavior given small repro case original code several layers keep trying", "d": "9/2013"}, {"body": "also trying make rendering iframes work probably usuallyalways wrong thing use", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "spicyj", "d": "9/2013"}, {"body": "great ideas", "d": "9/2013"}, {"body": "additional remarks drop toplevel api text use react esp left menu component api preferrably reactcomponent toplevel api talks reactdom reactcomponent talks getdomnode lt reactcomponentgetdomnode", "d": "9/2013"}, {"body": "also mentioned", "d": "9/2013"}, {"body": "actually want nt exist", "d": "9/2013"}, {"body": "man would love reactcomponentwithpurerendermixin default several coworkers believed think ship long sailed", "d": "9/2013"}, {"body": "seems problem jstransform library problem begins expression catering expression allows parse find jsx docblock continue rest parse seems trim strings presumably removing trailing", "d": "9/2013"}, {"body": "pr open need apply jstransform cheers paul sep jonathan jacobs notifications githubcom wrote seems problem jstransform library problem begins docblockre expression catering rn expression allows parse find jsx docblock continue rest parse seems trim strings presumably removing trailing r reply email directly view github", "d": "9/2013"}, {"body": "get next jstransform update", "d": "9/2013"}, {"body": "see onchange working contenteditable ondomcharacterdatamodified seems work would prefer drop ondomcharacterdatamodified completely deprecated support onchange oninput mutation observer using sane defaults would nice something like however implementing non mutationobserver browsers seems painful especially nt event ondomsomething event listeners", "d": "9/2013"}, {"body": "making onchange work contenteditable list things", "d": "9/2013"}, {"body": "would test performance adding mutation observers top level document heard slow suspect adding top level may even worse adding specific nodes", "d": "9/2013"}, {"body": "little experimentation shows slowdowns happen even mutations happening nodes listeners also persist listener removed one fun discovery ie slow downs persist across page refreshes thankfully looks like domcharacterdatamodified nt much negative effect domnode listeners", "d": "9/2013"}, {"body": "clarify would expect nearly javascript librariesframeworks least runtime click event triggered would see error console trying call undefined", "d": "9/2013"}, {"body": "oh gross thanks reporting definitely fix let know already working fix otherwise try look tomorrow finally get sleep", "d": "9/2013"}, {"body": "working made pull something else", "d": "9/2013"}, {"body": "right looks lik react nt support attribute could instead add css table cell achieve effect", "d": "9/2013"}, {"body": "thanks report nt plan add support deprecated part strongly suggest using css instead", "d": "9/2013"}, {"body": "cbrake use deprecated check discussion google groups also", "d": "9/2013"}, {"body": "chenglou thanks explanation", "d": "9/2013"}, {"body": "latest version master todo example work", "d": "9/2013"}, {"body": "better yet support", "d": "9/2013"}, {"body": "yeah particular reason supported", "d": "9/2013"}, {"body": "curious seen automatically injected react default use today imho much better suppose could support sake completeness thought make sure guys aware", "d": "9/2013"}, {"body": "discussed bit irc benquinn confused silently nt work whereas events perhaps adding documentation fix problem seems like might well add completeness agree enterleave much useful suggested overout likely missing simply one needed", "d": "9/2013"}, {"body": "agree believe extra allocations notpooled occuring event system already today love track adding mousemove event allocations open memory profiler chrome move mouse around see memory allocated properly freed course use es everywhere flat would make much comfortable adding edit checked already fires way frequently would probably big deal add though really get rid additional allocations event path", "d": "9/2013"}, {"body": "started look little bit allocations redefining trapbubbledevent reacteventemitter still shows allocations chrome memory timeline view convinced anything replacing trapbubbledevent noop makes allocations go away eventlistenerlisten simply calls addeventlistener", "d": "9/2013"}, {"body": "jordwalke pretty sure done least think tracked every callsite pooledclass would helped us updated recast transforms log every syntax construct would cause obvious allocation could nt find anything thinking maybe array slice bind spicyj experiment shows case", "d": "9/2013"}, {"body": "nt verify nt allocations emptyfunction case nt know good way", "d": "9/2013"}, {"body": "used extract source maps bundle related browserify issue", "d": "9/2013"}, {"body": "clsoed", "d": "9/2013"}, {"body": "possible though nt run issue nt run processes guessing seen benjamn also much information possible describe directory structure nodenpm versions run command arguments run issue", "d": "9/2013"}, {"body": "facing problem well node npm os windows bit command used src app exist compilation works without errors linux fails windows", "d": "9/2013"}, {"body": "seen problem well lorefnon please let know githubcomfacebookreactpage works windows", "d": "9/2013"}, {"body": "hi simple fix issue use defaultvalue recommended approach use value update state appropriately onchange callback read forms", "d": "9/2013"}, {"body": "ah bad something like first must typo thought everything thanks works expected", "d": "9/2013"}, {"body": "adding test gist seen irc zpao start one entry code follow others familiar jekyll nt know want put also related nits would nice code samples copypastable directly live editor ie jsx block etc maybe extreme dunno something consistent question sometimes lots things like know rather problem user encountered eg know since jsx really javascript use ternary operations room", "d": "9/2013"}, {"body": "really like idea cookbook way ember implemented experience jekyll pitch setting cookbook section", "d": "9/2013"}, {"body": "oh man sorry missed questions whatever guys need think right going step back let go wild try guide familiar cookbooks think would great working code thanks codeblock highlighting become thing one day better people code needed long perhaps pull relevant parts link working jsfiddle something mcsheffrey let handle jekyll parts thinking something sidebar navigation docs something like would work eventually rewrite docs jekyll today go wild excited work set feel free use let know need help guidance thanks", "d": "9/2013"}, {"body": "awesome reactjs questions stack overflow might make good cookbook recipes also like chenglou idea live code samples samples react homepage maybe embedded jsbinjsfiddle way ember js", "d": "9/2013"}, {"body": "saw people mention wiki irc valid put cookbook entries wiki parse jekyll", "d": "9/2013"}, {"body": "could make work might best option short term ultimately like checked ideal world one could clone react repo getting plane without wifi everything need learn react even means read markdown instead better looking site", "d": "9/2013"}, {"body": "wiki already markdown checking page", "d": "9/2013"}, {"body": "interested checking wiki though page could serve beginning index page checked working jekyll like hold checking anything point happy publishing otherwise things get way complicated working longrunning branch one repos probably best way wiki easier way organize effort made", "d": "9/2013"}, {"body": "result discussion irc wiki temp place organize stuff claim cookbook entries write actual entries checked md offline reading mcsheffrey jekyll entries taken mds", "d": "9/2013"}, {"body": "sounds good wiki act working copyrough draft recipes final recipes get added cookbook section jekyll docs zpao submitted pr us build lmk copy works intro section", "d": "9/2013"}, {"body": "also chenglou mentioned include info wiki react introduction something like interested contributing recipe react cookbook see wiki inprogress requested recipes link wiki", "d": "9/2013"}, {"body": "adding markupwrap would seem make sense also hear facebook react bindings art looks crossbrowser drawing library nudging release bindings", "d": "9/2013"}, {"body": "sklobovskaya thanks pointing going defer sebmarkbage since done svgrelated work", "d": "9/2013"}, {"body": "makes sense add markupwraps", "d": "9/2013"}, {"body": "works properly call pull request make possible say directly", "d": "9/2013"}, {"body": "thanks", "d": "9/2013"}, {"body": "another option could accept array value prop sure variant picked would line prop accepts values type", "d": "9/2013"}, {"body": "fb use function used like found much declarative succinct way build css class list give try see like chatting baking functionality react somehow hate name even mean nt sure put useful utility functions yet ideas advice love hear", "d": "9/2013"}, {"body": "petehunt thanks exactly need though still cool prop would built using function automatically like prop", "d": "9/2013"}, {"body": "preopen source prop everything nixed tomocchino yungsters may know think wanted simplify things", "d": "9/2013"}, {"body": "agree andreypopp class could accept either string object format would useful reference angular exactly", "d": "9/2013"}, {"body": "awesome still use today internally form utility helper helps declaratively specify set classes really readable form also internal transform step turns fast string concatenation without spending object allocation something like elegance transform required runtime version returns exact result fastefficient", "d": "9/2013"}, {"body": "bit tricky situation general issues thanks way browsers insert markup case mount original node nt leave document normal behavior react markup returned function inserted markup contains browsers nt like node actually dropped see happen change render function react uses node thinks created reference since browser dropped node react going confused see error actually pass dom node try get node first fail getting rid method hides error still come back bite later initial render works think run errors ever try state updates anything tries rerender think probably see cases work fine cases run issues browsers change dom example mounting likely cause problems see examples suggestion render wrapper include static content inside component", "d": "9/2013"}, {"body": "nice thing typed browser crash try recreate wrote proposing actually much practice since nt currently work props apart amp nt work consistently anyway noticed practice children think maybe ok since slightly different concepts ca nt remember right think tomocchino amp yungsters cases end day ok consistent since ca nt solve everything allows us flexible objects already special meaning things like ca nt always throw error also think would pretty cool allow automatically add separate attributes objects also special meaning children ca nt eliminate booleans special meaning props ca nt stop supporting entirely fwiw objects props allow admittedly poor way computed properties", "d": "9/2013"}, {"body": "four days ago balpert think consistent say html attributes except style etc strings numbers strings bools nullundef ignored objects errors balpert things boolean values truthy things true balpert children strings numbers strings bools nullundef ignored components components objects errors zpao well objects errors except special meaning balpert right balpert seems pretty reasonable zpao ca nt objects errors children balpert dunno string objects zpao use keyvalue maps balpert ahh right keys thing balpert yes zpao arrays also need allowed balpert children lenient allow objects balpert objects attributes seem bad zpao well make mistake hopefully fairly obvious zpao rule tostring everything except special meaning objects set expected behavior balpert right reason would want tostring object zpao accidentally assigned bool variable nt see anything harder track zpao example computed property like full name though nt know realistic zpao err guess nt actually write must lost draft balpert mean like firstname lastname balpert said balpert fwiw objects props allow admittedly poor way computed properties balpert nt elaborate zpao could person class model first last name properties tostring returns first last balpert oh see balpert yes balpert never overridden tostring far remember balpert sounds like something would nt work ie zpao neither zpao said admittedly poor p balpert mean alternative stringify everything balpert say flag amp amp zpao saying balpert see zpao oh mean children zpao balpert hmm balpert guess yes", "d": "9/2013"}, {"body": "know nt fix good first bug sitting coming next sync", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "duplicate", "d": "9/2013"}, {"body": "one came first though", "d": "9/2013"}, {"body": "well duplicates issue pull request fix closed merged though", "d": "9/2013"}, {"body": "apologies adding noise still getting used github issue tracking thanks telling saturday september ben alpert wrote well duplicates issue pull request fix closed merged though reply email directly view github", "d": "9/2013"}, {"body": "fixed", "d": "9/2013"}, {"body": "wanted mousemove mouseup well thinking larger declarative event system could conflict resolution probably get mean time sure api though", "d": "9/2013"}, {"body": "mousemove mouseup think jordwalke suggesting using", "d": "9/2013"}, {"body": "also add way bind onbeforeunload declaratively could helpful", "d": "9/2013"}, {"body": "thoughts think add two functions like would exposed regarding implementation strategy see lot optimisations regarding reducing allocations event dispatching reducing time reconciliation phase think make store listeners array event component pair first element array would represent primary event handler set via virtual dom returned component method settingremoving would constant time still accumulation dispatch path would require additional allocations change object component ids keys references array listeners component values overhead get executing dispatch listeners require iteration specialise common case primiary event handler set eg think may submit pull request", "d": "9/2013"}, {"body": "think something jordwalke yungsters best equipped answer since worked whole events system unfortunately vacation around comment maybe somebody else could comment petehunt sebmarkbage", "d": "9/2013"}, {"body": "tomocchino thinking declarative way component level event listeners could imagine declaring events component class mixins something like would allow separate event handlers mixin also use explicit event delegation also avoid allocation reconciliation think would solve use case currently short term road map though personally looking get away using mixins much possible lot problems composing mixins nt get composable components one things makes react great example trap clicks links could wrap components instead using mixin since events bubble link trapper catch dom node currently linktrapper must define extra unnecessary dom node attach event listeners could potentially create fake component retrieve event listeners without actually rendering dom implementation linktrapper would look something like nt see us exposing public imperative api since goes declarativefunctional approach gives us lot benefits however may expose access reacteventemitter something special lowlevel components needs reach hood", "d": "9/2013"}, {"body": "nt believe change fire contenteditable fields input see", "d": "9/2013"}, {"body": "joshduck react intentionally deviates spec see", "d": "9/2013"}, {"body": "spicyj sure might make sense polyfill oninput old browsers b make onchange depend oninput rather directly modification events way get events", "d": "9/2013"}, {"body": "", "d": "9/2013"}, {"body": "see", "d": "9/2013"}, {"body": "many issues latest thoughts whatever get wo nt multiple ways something", "d": "9/2013"}, {"body": "think fixes right sebmarkbage", "d": "9/2013"}, {"body": "right fixed thu sep pm paul shannessy notifications githubcom wrote think fixes right sebmarkbage reply email directly view github", "d": "9/2013"}, {"body": "closing nt issue since", "d": "9/2013"}, {"body": "docs docs docs know fun write developers coming react think assumed know nothing document everything anyone actually working something community need contribute", "d": "9/2013"}, {"body": "benquinn trying good opensource stewards expected document everything rather relying contributions nt get pr community soon go ahead update", "d": "9/2013"}, {"body": "boom", "d": "9/2013"}, {"body": "recently put pull request jshint adds feature ignore block lines javascript resume linting afterward specifically jsx mind could enclose jsx within jshint comment directives rest code lint normal defining react components file get used inside jsx block typically add line near jsx block assuage unused variable warnings appreciate thoughts andor feedback", "d": "9/2013"}, {"body": "see earlier comments recommended run jshint jsx transform implemented khan academy linting tools weekend download everything work really designed external use useful looking something copy maybe make jsxhint npm package calls jsx jshint turn", "d": "9/2013"}, {"body": "spicyj understand recommendation fine something like running jshint part ci build step particular flow use intellijwebstorm jshint plugin automatically highlight linter errors even checked code let alone kicked build found handy immediate feedback since switching react regret seeing linter barf first line jsx javascript files comment jsx see rest code lints enough drag motivated work patch", "d": "9/2013"}, {"body": "gotcha maybe makes sense someone write jsxhint plugin vim configuration set use khanlinter reason know intellij ca nt", "d": "9/2013"}, {"body": "wonder could hack jshint plugin run jsx first passing jshint dogscience", "d": "9/2013"}, {"body": "plugin built intellijwebstormphpstorm separate plugin actually integrated javascript editor settings nothing tweak except version dropdown apparently reads packagejson jshint site specify path jshintrc file one edit sooner patch gets accepted new version released sooner start using new feature right inside ide", "d": "9/2013"}, {"body": "danielmiladinov handle things like coffeescript linting really seriously recommend right avoiding certain regions reason actually missing seriously awesome linting action ignoring regions sugar vim linter tells defined mispelled variable scope etc webstorm linting plugins could fork sure people around would help integrate", "d": "9/2013"}, {"body": "think jshint would receptive syntax transform patch", "d": "9/2013"}, {"body": "petehunt hard tell jsjsx superset javascript syntactically compliant another variant js trouble jshint would need assume particular transformation apply simple function calls order extract value linting process would anyone want transform jsx anything function calls something congruent respect linting likely", "d": "9/2013"}, {"body": "missed may help least short term", "d": "9/2013"}, {"body": "another version toddself", "d": "9/2013"}, {"body": "jordwalke sorry solate reply jshint plugin use nt many options setting nonstandard location jshintrc file choosing version main jshint repository want run hoping pull request make jshint proper could leverage right ide get immediate feedback run build failing may reach jetbrains see perhaps open options say something use build jshint please thank much point directory something like anybody could use whatever custom features jshint installs needed", "d": "9/2013"}, {"body": "spicyj tables issue appears fixed least partially master see jsfiddle looks like commit fixed still weirdness original inside rest directly order correct", "d": "9/2013"}]