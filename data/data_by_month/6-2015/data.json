[{"title": "need warning onclick case", "body": "render component prop get warning console tells need use instead", "num": "4257", "d": "6/2015"}, {"title": "extend proptypes deprecate getdefaultprops", "body": "prop types easy describe via proptypes find unfortunate obvious proptype default especially null accepted value short summary get react type warnings act intended flow syntax first optional flow somestring string react proptypes somestring reactproptypesstring getdefaultprops function return nonoptional flow somestring string react proptypes somestring reactproptypesstringisrequired getdefaultprops function return optional default value flow somestring string default react proptypes somestring reactproptypesstring getdefaultprops function return somestring default nonoptional default flow somestring string default react proptypes somestring reactproptypesstringisrequired getdefaultprops function return somestring default give type warnings would expect based flow type especially nonoptional default case really hard read react perhaps alternate syntax proptypes incorporates default values considered also solves readability issue would think resolved runtime fact considered set static values discovered issue code nonrequired prop default acceptable value issue get warning overwrite react thinks acceptable putting something default value looks really funky", "num": "4256", "d": "6/2015"}, {"title": "best way properly render tags javascript date object", "body": "rendering renders format used element see mdn info willing build custom component want make sure one already exist existing way aware", "num": "4255", "d": "6/2015"}, {"title": "ca nt reactrender tbodyelement multiple times", "body": "currently trying replace parts huge angularjs application react goal speed rendering times especially comes displaying large dataviews trying ran strange problem trying call reactrender multiple times element react throws following two warnings warning render target node markup rendered react unrelated nodes well commonly caused whitespace inserted around serverrendered markup warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client created simple fiddle demonstrating issue code works render element example missing something ps thanks awesome work reactjs still love", "num": "4254", "d": "6/2015"}, {"title": "mouseenter fires disabled inputs whereas mouseleave", "body": "asymmetry enterleave event plugin since created relativetarget event fires even though target disabled since inverse ie requires disabled element fire mouseout nt fire disabled element pretty sure correct behavior neither event fire target disabled since mirrors idea nonechrome browsers behavior mouse events fire disabled elements additional caveat realized react probably also firing events case mouse leaves disabled element non disabled element", "num": "4251", "d": "6/2015"}, {"title": "mechanism listen events", "body": "already mechanism help document like method api could call listen synthetic events something like like able stoppropagation preventdefault events well", "num": "4250", "d": "6/2015"}, {"title": "bind event render function", "body": "hi friends consolelog event shows undefined access event thanks", "num": "4247", "d": "6/2015"}, {"title": "add runtime deprecation warning clonewithprops", "body": "", "num": "4245", "d": "6/2015"}, {"title": "get dom handle", "body": "trying use reactfinddomnode item error thrown small demo shows problem parent component mounted related additionally behavior didmount didupdate handlers currently undefined regards fire relation children therefore refs example componentdidupdate guaranteed fire children fully mounted sebmarkbage source", "num": "4244", "d": "6/2015"}, {"title": "force element sub tree cleaning", "body": "hi big search result set rendered make new search request server return new unique results think case need calculate optimal dom difference simply right remove dom sub tree resultset render new understand correctly attribute key solve problem thanks answer", "num": "4243", "d": "6/2015"}, {"title": "expose specpolicy user defined methods", "body": "using sets flux event listeners using unfortunately one add mixin add mixin component already using really want would set storewatchmixin method", "num": "4236", "d": "6/2015"}, {"title": "ios extra nodes still emitted react rendering result mapping immutable collection", "body": "understand considered fixed still similar issues iphone following react immutable using webpack babel stage transpiler sure might effect works properly chrome desktop however safari iphone prints number without bullet list items user agent string safari iphone thanks andy", "num": "4235", "d": "6/2015"}, {"title": "two different outputs terminal web inspector incorrect view rendered", "body": "trouble generating views two views would like generate var initials loggedin var notloggedin var initials var isloggedin false var layout reactcreateclass componentwillmount function try window amp amp windowuser initials windowusernamefirst touppercase windowusernamelast touppercase isloggedin true catch e ignore render function isloggedin consolelog windowuser consolelog initials return else consolelog logged return run code different outputs terminal web inspector terminal web inspector object username userid address name object email bradfordli gmailcom bl first second output displayed sure occurring sure handle achieve desired logic view displayed broswer", "num": "4234", "d": "6/2015"}, {"title": "cryptic error message finddomnode unmounted component", "body": "per finddomnode throws unmounted components error message cryptic expert react users honestly thought duplicate react something nt even bother check whether component mounted nt", "num": "4233", "d": "6/2015"}, {"title": "uncaught error invariant violation findcomponentroot unable find element", "body": "modal component click button trigger gives component button happen remove onclick event trigger element ca nt figure problem", "num": "4227", "d": "6/2015"}, {"title": "wrap attribute supported", "body": "wrap missing meanwhile wrap attributes standards", "num": "4226", "d": "6/2015"}, {"title": "html elements respond mobile", "body": "hello learning react meet problem integrate zepto ratchet react develop mobile use gulp build entire app gulpreact precompile jsx works concat vendor scripts zeptojs ratchetjs reactjs one vendorcss precompile jsx one file appjs gulpreact write component named login loginjsx loginhtml elements rendered remove ratchetjs works help thanks amp regards", "num": "4224", "d": "6/2015"}, {"title": "automatic bailout nt take context account", "body": "see following thread quick fix", "num": "4219", "d": "6/2015"}, {"title": "children parentbased context changes nt update", "body": "js var top reactcreateclass childcontexttypes reactproptypesany getchildcontext return thisstatenow getinitialstate return datenow componentdidmount setinterval gt thissetstate datenow render return thisstatenow reactcloneelement thispropschildren var middle reactcreateclass render return reactchildrenonly thispropschildren var child reactcreateclass contexttypes reactproptypesany shouldcomponentupdate return true render return thiscontextnow remove bailout reconciler works reactrender documentgetelementbyid example still doesnt reactrender documentgetelementbyid example", "num": "4218", "d": "6/2015"}, {"title": "sugestion make warnings dev mode output consoletrace", "body": "seeing something like warning use keyed object wrapped reactaddonscreatefragment object passed child really useful much nt know offending code trace call would really help narrow application problematic code would also obliviate need pointless trycatch needs edited even work catches error throws", "num": "4216", "d": "6/2015"}, {"title": "warning getinitialstate defined plain javascript class even using reactcreatclass", "body": "trying migrate code base one recurring warnings though seems bit weird actual component requirejs module see javascript define function require use strict var react require react var component reactcreateclass displayname component return component something wrong inadvertently", "num": "4214", "d": "6/2015"}, {"title": "forward refs support getpublicinstance", "body": "like feature allows us forward refs define public instance component way make higher order components completely transparent", "num": "4213", "d": "6/2015"}, {"title": "documentation nt inline html taint dangerouslysetinnerhtml", "body": "tutorial uses though explicitly recommend", "num": "4212", "d": "6/2015"}, {"title": "guidance storage performance reasons", "body": "sandboxed contrived example usecase rough usecase chat app character typed stored backbone model backbone collection filtering purposes etc new character typed add new model collection use set property collection map property output text specific question best way get best way react terms storing typed text state object better way avoid rerendering whole block text typing new single character", "num": "4211", "d": "6/2015"}, {"title": "calling onblur mutating state cause onclick fire", "body": "encountered trying different parts form validation happen onblur onclick seems update state onblur state element injected dom via jsx positionally button onclick onclick fire believe related issue see variation example provided enter text click button twice see click true confident order matters dom see consistently reproducable jsfiddle andeladomonori first noticed weird behavior", "num": "4210", "d": "6/2015"}, {"title": "transitiongroup persists components assigned leave", "body": "sample list items one active maybe misusing transitiongroup keeps item replaced jsx var reacttransitiongroup reactaddonstransitiongroup var active reactcreateclass render function return active var inactive reactcreateclass handleclick function e epreventdefault thispropsactivateitem thispropsid render function return var list reactcreateclass getinitialstate function return activeid activateitem function id thissetstate activeid id render function reactrender documentbody", "num": "4205", "d": "6/2015"}, {"title": "cloneelement working expected", "body": "code lays components like xaml stack panel looks layout properties calculates style based available width height sets styles properties contained child elements inside map applies children via cloneelement var paddedcontainment thiscalculatepaddedcontainment thispropslayout thispropsstylewidth thispropsstyleheight return reactchildrenmap thispropschildren function child var expandedlayout thisexpandlayout childpropslayout var size thisgetlayoutcontainment expandedlayout paddedcontainment paddedcontainment thissubtractdockcontainment paddedcontainment size var style thisgetlayoutstyle thispropsstyle expandedlayout paddedcontainment return reactcloneelement child style style passed component defined children elements defined jsx spits note component cloned keeping ref inserted underneath single object ref style applied using clonewithprops get correct final structure ie copy original lose ref ui longer works ca nt get resultant component methods first thought might ref displayname causing issue changing either effect still insert", "num": "4203", "d": "6/2015"}, {"title": "componentrender silently swallowing errors console output", "body": "piece code render function erroring simple trycatch able capture display error without react silently proceeds returning render function error makes difficult find basically error happens render fails silently displays empty component coming jsfiddle reprod simpler case debug", "num": "4199", "d": "6/2015"}, {"title": "getinitialstate static function", "body": "understand old api design ideal disagree assigning instance property constructor better function conceptually type signature ie pure function converting props state old defined instance also access however make function static therefore making pure js allows practice stateful component would look like code javascript class counter extends reactcomponent static proptypes initialcount reactproptypesnumber static defaultprops initialcount static initialstate props return count propsinitalcount tick thissetstate count thisstatecount render return another advantage construction nt override component constructor function defined declaratively straightforward easy understand way unlike example react blog post feels like much magic gives implicit function access full instance instead props illustration proposed blog post", "num": "4197", "d": "6/2015"}, {"title": "form events ff missing targetlabels", "body": "mini search mdn specs checkbox eventtargetlabels nt seem standard defined anywhere thing chrome idea worth polyfilling firefox", "num": "4195", "d": "6/2015"}, {"title": "warn class componentdidunmount method", "body": "would nice would throw warning console lifecycle method", "num": "4194", "d": "6/2015"}, {"title": "factorytype deprecated access class directly passing createfactory", "body": "getting warning unable work find documentation explanations error mean likely causes thanks", "num": "4193", "d": "6/2015"}, {"title": "change cursor position input fields", "body": "bug happens latest ff regardless platform code type something change type middle cursor position changes goes back beginning nt", "num": "4191", "d": "6/2015"}, {"title": "make react run without", "body": "ok react requiring shims include whether react needed however nt believe react require work among reasons including shams potential break libraries page hence nt sound like good practice one library demand two shams react says requires code npm one used entire codebase function invocations nt sound like good reason requiring library potential side effects best practice react would probably provide small module providing either native function internal sham would also positive internal shams would nt waste bytes trying sham functionality react nt need could emit invariant warnings misused development instead failing potentially silently way would", "num": "4189", "d": "6/2015"}, {"title": "event handler bound correctly babeljs", "body": "hi found inspect inside event handler using syntax w babeljs using jsx embeeded parser get undefined fiddle reproduce problem sure post issue also babeljs guys thanks", "num": "4187", "d": "6/2015"}, {"title": "breakword example", "body": "example convert textarea value realtime lack wordbreak breakword output", "num": "4180", "d": "6/2015"}, {"title": "using reactaddonscsstransitiongroup adds extra", "body": "may user error maybe using babel matters renders app hello world however try mess csstransitiongroup renders extra spans hello world something wrong please point right direction maybe note docs missed thanks guys keep great work", "num": "4179", "d": "6/2015"}, {"title": "sub components nt always render", "body": "campaigns component campaignform wo nt render inside sidebar outside sidebar tag render cjsx example put directly inside sidebar render function renders fine breaks whole idea loosely coupling sidebar abstract fails render campaignform render campaignform fine", "num": "4178", "d": "6/2015"}, {"title": "website issue", "body": "text nt fit many characters typed input output example", "num": "4177", "d": "6/2015"}, {"title": "jsx compiler broken pass anonymous function one args", "body": "javascript reactrender text documentbody compile jstransform wrong", "num": "4175", "d": "6/2015"}, {"title": "typeerror checker function validate", "body": "somehow weird warning printed console property produces print warning console looks like bug using react", "num": "4173", "d": "6/2015"}, {"title": "support iframe security attribute ie", "body": "attribute allows restrictions placed iframes regardless domain useful dealing ie versions less nt attribute info", "num": "4169", "d": "6/2015"}, {"title": "style prop error lacks context", "body": "error probably please check render method message give context", "num": "4168", "d": "6/2015"}, {"title": "use inline event handlers trapbubbledeventslocal ios safari click hack", "body": "currently lot work end mount find nodes attach listeners fact severely impacting initial rendering performance click handlers instead use inline event handlers innerhtml string ios safari hack trivial handler nt even anything inline event handler would need either redispatch event call event handler system probably global listeners since could potentially multiple reacts probably chain handler already one registered although multiple reacts document already pretty broken regard nt global since inline event handlers gets element added scope around equivalent add prototype makes bit hidden unobtrusive still need render string serverside rendering avoid needing change html wire handlers afterthefact client since events fire react loaded need check existence handler used critical string short innerhtml string concat performance network performance yet needs unlikely collide anything else unicode character could use", "num": "4166", "d": "6/2015"}, {"title": "ismounted returning undefined", "body": "ismounted returning undefined instead falsetrue js checks whether composite component mounted return boolean true mounted false otherwise protected final ismounted function production processenvnodeenv var owner reactcurrentownercurrent owner null production processenvnodeenv warning ownerwarnedaboutrefsinrender accessing ismounted inside render function render pure function props state never access something requires stale data previous render refs move logic componentdidmount componentdidupdate instead ownergetname component null ownerwarnedaboutrefsinrender true var internalinstance reactinstancemapget undefined case return internalinstance amp amp internalinstance reactlifecyclecurrentlymountinginstance please check long story", "num": "4163", "d": "6/2015"}, {"title": "dangerouslysetinnerhtml putting object object dom", "body": "component making method javascript contenteditablejs makemarkup const markup thispropshtmlmap reactrendertostring join consolelog markup return markup logs however actually put dom reason", "num": "4161", "d": "6/2015"}, {"title": "accept iterables children", "body": "would allow things returns iterable", "num": "4160", "d": "6/2015"}, {"title": "capturing charcode ctrl modifierspecial key key seems unclear", "body": "contenteditable element trying capture key combos ie ctrl c using nt seem possible special keys nt reported also fails get one event ctrl key one next key could check true however nt help obtaining charcode key combo jsbin demo trying achieve type ctrl c editable advice proceed would appreciated", "num": "4159", "d": "6/2015"}, {"title": "support stateful test renderer", "body": "plan move unnecessary state production renderer therefore public api introspect current state tree ie props inspection etc react devtools maintain shadow tree introspection reflection purposes however also means use run deeply rendered unit tests longer able use various reflective apis inspect state current react tree legacy utils etc recommended unit testing solution shallow testing however would possible create new renderer keeps track whole react tree including props therefore reenables stateful unit testing might helpful upgrade path eg something like would forked version primary renderer see cc spicyj dataminr", "num": "4153", "d": "6/2015"}, {"title": "form created reactcreateclass nt work onsubmit", "body": "working project using jsx make form reactcreateclass onsubmit attribute nt seem working like jsx need set onsubmit differently using jsx", "num": "4149", "d": "6/2015"}, {"title": "make sure examples work babelbrowser", "body": "currently examples depend jsxtransformer behavior eg get rid jsxtransformer examples need updated appropriately", "num": "4147", "d": "6/2015"}, {"title": "data attributes value regular attribute value", "body": "issue react one looking native html attribute value cases passing value valid experimentation dataattributes ca nt applied without value try get attempting use tablesaw jquery plugin dataattributes require without values function properly would great dataattributes could applied without values thanks", "num": "4146", "d": "6/2015"}, {"title": "using template strings throws error safari invalid character", "body": "using template strings jsx files seems supported safari nt like backtick character safari following code throws error see jsbin one solution use inbrowser transformation good practice anyway anybody know workaround tried specifying jsx script tags nt help", "num": "4143", "d": "6/2015"}, {"title": "iife mention ifelse jsx", "body": "page offers ternary expressions solution conditional logic inside jsx perhaps iifes also get mention realizing could iifes inside jsx helped flesh mental model jsx actually works suspect would aide others way well furthermore advent arrow functions nt verbose either code example utilizing iife might overkill least passing mention would nice", "num": "4141", "d": "6/2015"}, {"title": "support xul", "body": "filing issue seriously looking using react firefox devtools starting work migrating components xul weird constraints format dom edge cases hope somehow make work longterm want migrate away xul option works nicely create custom xul elements first thing ran boolean attributes xul always specify property value invalid must fixed hidden attribute changing option foresee customize object interesting solution would private api override config somehow well along enough yet suggest real solution want document things hit", "num": "4138", "d": "6/2015"}, {"title": "implications shouldcomponentupdate render callbacks", "body": "related thread discuss understand shouldcould behave rendercallback pattern example using reactstate example clicked everything updates expected however clicked nt receive new props risks stale data wo nt reflect changes state technically correct since render callback nt pure methods think work around rendercallbackcomponent alternate name please implements always return current preferred way component kinda equivalent stateful function wrapper children children would rendered anyway reactstate works also reactsprings etc render callbacks must always pure dependent arguments passed callback also fairly performant con utility pattern diminishes little rendercallbackcomponent accepts props render callback dependent sorta like method except props nt passed callback used rcc tell update based example could look like con fiddly also looks like ember model dependency syntax might bad marking explicit dependencies thoughts advice cc chenglou", "num": "4136", "d": "6/2015"}, {"title": "release", "body": "still little ways away starting list lose track less big picture like longer tail work misc x remove reacttools jsxtransformer mentions docs x update reacttutorial repo use babelbrowser polish readme react reactdom x update fbme scripts exclude jsxtransformer x update node development better moving forward stable branch maintenance x update cdnjs jsdelivr autoupdaters account documentation changes x updates refs stateless function components x update desired api usage eg final steps x create branch x shrinkwrap x actually publish places x update jsfiddles x base x thinking react x update changelogmd x make sure master branch documentation changes made x update reacttutorial repo final changes", "num": "4135", "d": "6/2015"}, {"title": "unexpected jsx whitespace handling leading trailing tags", "body": "related closed issue sure whether considered bug working intended least throw vote behavior unexpected given following example jsx var test reactcreateclass render function return demonstration unexpected whitespace handling reactjs reactrender documentbody demonstration jsbin would suggest expected rendered output component would whereas actual output whitespace unexpected whitespace reactjs would consider unexpected two primary reasons inconsistent html handling whitespace removing tags leaving newlines indentations unchanged causes whitespace preserved simply bug suppose need belabor point rationale leadingtrailing tags behaving different leadingtrailing plain text thanks", "num": "4134", "d": "6/2015"}, {"title": "oops", "body": "", "num": "4133", "d": "6/2015"}, {"title": "stop building jsxtransformer", "body": "separate cherrypicking purposes", "num": "4130", "d": "6/2015"}, {"title": "replace jsxtransformer babelbrowser website", "body": "", "num": "4129", "d": "6/2015"}, {"title": "shallow rendering testing components render callbacks", "body": "based comment thread starting thread discuss test components render callbacks consider following app js class double render return thispropschildren thispropsvalue class app extends reactcomponent render return doubled reactrender el output expected wanted test could write something like js var stateful testutilsrenderintodocument var div testutilsfindrendereddomcomponentwithtag stateful div divgetdomnode textcontentshouldeql however ca nt test beyond callback boundary unclear approach frankly shallowrenderer recognize components like marked flag thisrenderscallback true workaround use shallowrenderer cc", "num": "4127", "d": "6/2015"}, {"title": "add event behaves similar native event", "body": "react repurposed behave like way get actual event behaviour without binding nondelegated native event lifecycle events event behaviour sometimes important like behaviour make sense react uses live updating state associated anything derived use cases like triggering ajax post user finished input require standard behaviour text inputs fired user finished input use cases reasonable support within react going changed behave nonstandard way add another custom nonstandard event name lets react elements bind behaviour closer behaves react event delegation handling event name ideas onchangecommit ted oncommit ted change onvaluecommit ted oncommitvalue oncommit idea using commit name comes html spec change event fires value committed section common event behaviours", "num": "4126", "d": "6/2015"}, {"title": "omit anchors headers feed", "body": "rss feed anchors links headings looks kinda ugly feed readers nt really serve purpose feed readers modify links relative feed url links actually becoming nt anything useful remove feed", "num": "4124", "d": "6/2015"}, {"title": "invariant violation reactmount two valid unequal nodes", "body": "trying display dropdown menu composed similar one bootstrap element used generate dropdown menu store browser correctly parsingoutputting html everytime click item got error datareactid bug probably related ca nt find solution sweat iusing react also tested latest master html dom view view tree react plugin chrome screenshot result blue element nothing", "num": "4120", "d": "6/2015"}, {"title": "optional newline support", "body": "sure best place put issue good optional newline support built jsx compiler example js render function return hi whitespace important tag see giving developers power create better elements", "num": "4118", "d": "6/2015"}, {"title": "unclear whether legal read state props externally", "body": "react api documentation give mixed messages whether state safe read externally code call componentstate figure component state useful several situations particularly valuable writing unit tests javascript convention would believe public variable nt supposed read would expect called state documentation nt appear component api examples used jest examples either componentprops similar situation although admit one much less useful since nt come frequently unit tests imagine ways make clearer depending react team intentions intend public add public component api use official examples nt intend public ideally could trickery closures inside reactrender input reactcreateclass touch variables object returned reactrender nt expose barring help names started underscore engineers would know private", "num": "4116", "d": "6/2015"}, {"title": "request option issue warning prop passed unlisted proptypes", "body": "proptypes incredibly useful feature react especially option nearly every component create started proptypes option refactors occur features added progress tdd occurs found sometime add prop component forget add proptypes like see happen option make proptypes issue warning prop passed component listed proptypes object sort opposite isrequired option isrequired issues warning specified prop passed component strictproptypes option issue warning pass component prop listed proptypes example javascript var foo reactcreateclass strictproptypes true proptypes bar reactproptypesstringisrequired baz reactproptypesstring render function return reactrender foo qux quux would issue two warnings one passing required prop another passing prop thats listed proptypes strictproptypes true", "num": "4113", "d": "6/2015"}, {"title": "npm install react fails w invalid name", "body": "trying use browserify getting error got reacttools installed globally already problem package something different end npmdebuglog", "num": "4111", "d": "6/2015"}, {"title": "question using esnext modules need import var named react jsx even explicitly referenced", "body": "happened use destructuring syntax import grabbing ref like resultant code transpiled via babel contains reference variable named ends undefined seems jsx transpiler responsible setting variables internally referenced wanted ask question best tony", "num": "4110", "d": "6/2015"}, {"title": "doc use envify react", "body": "commit removed note envify documentation related pr far understand devdependency envify react used produce distributable files reactjs reactminjs seems used using react browserify webpack suppose envify run seems rather use envify case right yes would probably good idea document", "num": "4107", "d": "6/2015"}, {"title": "new function getvaluelink accompany valuelink", "body": "building components often want support valuelink valueonchange means need function like easily end duplicated components would idea include linkedstate mixin", "num": "4106", "d": "6/2015"}, {"title": "changing defaultvalue nt rerender input causes hidden state db", "body": "posted stackoverflow dearth answers makes think might bug given following simple code js const createfactory createclass dom label input button react const tester createfactory createclass render return label input defaultvalue thispropsname button onclick thischangename change changename thissetprops name wilma reactrender tester name fred documentqueryselector body clicking button nt rerender input still says fred even though wilma demo", "num": "4101", "d": "6/2015"}, {"title": "html accesskey cause control focus", "body": "usually providing accelerator keys html accesskey attribute added label tried react code control get focused expected result pressing altn focus control working plain html see jsfiddle var hellomessage reactcreateclass render function return first name reactrender mountnode", "num": "4099", "d": "6/2015"}, {"title": "error running react nodeenvproduction", "body": "getting running production tried versions reproduce looking code reactelement seems store initialized production mode", "num": "4094", "d": "6/2015"}, {"title": "reactlibclonewithprops throws warning", "body": "reactlibclonewithprops js copyright facebook inc rights reserved source code licensed bsdstyle license found license file root directory source tree additional grant patent rights found patents file directory typechecks staticonly providesmodule clonewithprops use strict var reactelement require reactelement var reactproptransferer require reactproptransferer var keyof require keyof var warning require warning var childrenprop keyof children null sometimes want change props child passed usually add css class param reactelement child child element like clone param object props props like modify classname style merged automatically return reactelement clone child props merged function clonewithprops child props production processenvnodeenv production processenvnodeenv warning childref calling clonewithprops child ref dangerous creating new child added ref parent null var newprops reactproptransferermergeprops props childprops use provided newpropshasownproperty childrenprop amp amp childpropshasownproperty childrenprop newpropschildren childpropschildren current api nt retain owner context nt use reactelementcloneandreplaceprops return reactelementcreateelement childtype newprops moduleexports clonewithprops note well", "num": "4093", "d": "6/2015"}, {"title": "externally injected content classbased components", "body": "use case creating element one place window manager passing reference application bootstrapper application responsible injecting elements since esque methods removed classes accomplish js uipaneelement instance uipane created rendered reference passed back windowmanagercreatewindow function uipaneelement myappmount uipaneelement myappmount somewhere else system function uipaneelement uipaneelementsetprops children thiscontent", "num": "4087", "d": "6/2015"}, {"title": "setting select value null undefined change placeholderlike option", "body": "maybe ugly pattern web pretty typical first option select sort placeholder like item implemented react would expect set prop select would change placeholderlike option seems pass empty string value pull sure something react maskhandle seems like oddity browser suggesting one two things value props choose empty value option warn passing noneffective jsbin example", "num": "4085", "d": "6/2015"}, {"title": "testsutilssimulatechange select nt work", "body": "hey guys trying simulate change value nt change component test value updated anything missing thanks ton", "num": "4083", "d": "6/2015"}, {"title": "reactcloneelement uses deprecated elementtype", "body": "following call complains deprecation warning seems come using react nt happen anymore change line confirm issue nt miss something glad submit pr want", "num": "4082", "d": "6/2015"}, {"title": "still use ownerbased context context forwarding", "body": "mean still warning probably possible future use tooltip positionning library accept raw html strings want able render react content inside tooltips lib positionned generally works fine parentchild relationship tooltipable content tooltip often causes troubles zindex generally want tooltips overflow code looks like var withtooltip reactcreateclass componentdidmount function setuptooltippositioninglibrary reactrender thispropstooltipcontent thisgettooltipnode render function return thispropschildren works fine problem like able use normal application context inside tooltip content somehow forward context tooltip content possible like dynamic maintain list childcontexttypes etc log frundefined", "num": "4081", "d": "6/2015"}, {"title": "errro", "body": "error created issue wrong repo sorry", "num": "4080", "d": "6/2015"}, {"title": "key events chrome android", "body": "must missing something pretty trivial ca nt get key handler events working android chrome jsfiddle reproduces behavior seeing everywhere android chrome get desired results typing input android events differentwrong devices events nt fired first character typed number events correct moving handlers input element behaves stock browser emulator seems work fine ios etc well like said imagine must simple mistake sure nt see", "num": "4079", "d": "6/2015"}, {"title": "runtime environment able purge modulescoped global caches", "body": "many hours contortions able get react components test headless nodejs mocha environment using domino js fake dom implementation component tests run seconds first time unfortunately using command leaks large number elements memory test run digging heap dumps found elements hiding nodecache variable reactmount file definitely calling every outer component render receiving boolean response added method local build simply resets cache cut memory loss number global caches hiding handful modules include reactmount proposal reset global utility method like seems like change would approved happy put together pull request update server side rendering environments might better exist real api testutils", "num": "4078", "d": "6/2015"}, {"title": "reactjs component rendering textarea state variable", "body": "faced issue recently solved using jquery please run app reproduce missed something appologies either way please share wisdom thread", "num": "4076", "d": "6/2015"}, {"title": "performance mounting reactcomponents", "body": "hi trying implement listview components run browser found react rendertostring reactrendertostring performance well need view react source code found function mountcomponent cost performance better way code function rendertostring element return transactionperform function var componentinstance instantiatereactcomponent element null low performance var markup componentinstancemountcomponent id transaction emptyobject low performance", "num": "4075", "d": "6/2015"}, {"title": "react rerenders svg html namespace", "body": "consider following code js var thing reactrender thing thisg var thing reactrender thing thisg first line rendered second one skip first rendering works", "num": "4072", "d": "6/2015"}, {"title": "stop building reactsource gem", "body": "sure much value really reactrails already stopped using builds files cc rmosolgo", "num": "4069", "d": "6/2015"}, {"title": "react leafletjs external library dom", "body": "hello trying use react library maps sure implement best know github project case need use raw javascript library order use unsupported features supports html marker following code wrote definitely react way removes unmounts everything recreates mounts everything works many hours trial error around markers cars map different criteria hide also retrieve slightly updated data server problem use method react devtools showed components added rerender components time growing despite underlying real dom divs deleted windowmapcarslayergroupclearlayers method nt removal dom divs external library also automatically unmount related mounted components way way unmount car components alltogether without looping example something like reactunmountcomponents car loop fullproof retrieve new data old items still remain mounted appear new list looped unmounting ideas approach nonreact dom div per marker needs exist need find way react component rendered use react lifecycles without unmount recreate every rerender thank componentwillupdate", "num": "4068", "d": "6/2015"}, {"title": "passthrough children nt rerender parent changes", "body": "given following components following implementations homejs routerjs js componentdidmount var self render return reactcreateelement div classname router thispropschildren routejs running situation since creating parent passing owner children rerender parent state changes best way around seems like pretty common use case", "num": "4067", "d": "6/2015"}, {"title": "using mixin object twice fails", "body": "lets take following use case utilmixin function utilfunc used mixina mixinb class uses mixina mixinb fail react thinks define utilfunc twice non working jsfiddle opinion react allow case function redefinition new definition old definition thoughts", "num": "4066", "d": "6/2015"}, {"title": "react syntax class methods bind instance context", "body": "example", "num": "4065", "d": "6/2015"}, {"title": "wrong html file name", "body": "ghpages branch gettingstartedjajphtml tutorialjajphtml files think file name must", "num": "4062", "d": "6/2015"}, {"title": "event null onpaste event", "body": "js handlepaste function event eventclipboarddataitems getasstring function string true eventpreventdefault event null raises uncaught typeerror read property preventdefault null", "num": "4057", "d": "6/2015"}, {"title": "shallow renderer expose rendered component instance", "body": "returns rendered component instance seems return rendered component expose way maybe method testing stateful components via shallow rendering assertions made state component instance", "num": "4056", "d": "6/2015"}, {"title": "automatically populate propschildren declared", "body": "currently writing code traverse form inputs collect form data put almost one problem left children nt always populated something like recursive function coffee collect form children coffee collectallchildren target children reactchildrenforeach targetpropschildren child gt childrenpush child children inside one form component nested react elements using react bootstrap like one called problem tries collect children firstlastnameinput children wish would return properties two inputs anyway would make things lot easier prevents dirty react hacks", "num": "4055", "d": "6/2015"}, {"title": "context propschildren", "body": "hi troubles understand context passed using nt know bug expected using react make work using function using simple declarative way example application using contextemitter children function children using declarative way javascript export default class myapp render return thiscontextvalue javascript export class contextconsumer extends reactcomponent static contexttypes value reactproptypesnumberrequired render return context value thiscontextvalue thispropschildren context properly passed javascript export class contextemitter extends reactcomponent static childcontexttypes value reactproptypesnumberrequired getchildcontext return value render return contextemitter thispropschildren thispropschildren context passed javascript export class extends reactcomponent static childcontexttypes value reactproptypesnumberrequired getchildcontext return value render return thispropschildren see result meaning using function way works otherwise expected difference thanks edit several warnings console nonworking case btw warning failed context types invariant violation contextemitter child context type invalid must function usually reactproptypes check render method warning ownerbased parentbased contexts differ values vs key value mounting contextconsumer see", "num": "4053", "d": "6/2015"}, {"title": "rendertostaticmarkup side effects", "body": "see seems wrong completely unexpected", "num": "4050", "d": "6/2015"}, {"title": "bug reactfinddomnode always null higherordercomponent", "body": "const higherordercomponent component gt reactcreateclass componentdidmount consolelog reactfinddomnode gt null render return", "num": "4044", "d": "6/2015"}, {"title": "componentwillrecieveprops warning", "body": "please implement warning component tries implement method instead method almost every react person know bitten always take minutes debugging find feel like dummy rest day", "num": "4039", "d": "6/2015"}, {"title": "spec information elements", "body": "seems add spec data element firefox rendering class components innerhtml component rendered note running selenium webdriver mochify nt able exclude nt issue started creating components regular classes", "num": "4038", "d": "6/2015"}, {"title": "nt add things queues unnecessarily", "body": "currently use transaction queue much build giant array mount one simple example add things queue unnecessarily", "num": "4036", "d": "6/2015"}, {"title": "typeerror read property currentelement null", "body": "maintainers problem please see explanation test case jsfiddle error function internalinstance null mountcomponent final internal unmountcomponent function internalinstance reactrefdetachrefs internalinstance internalinstancecurrentelement internalinstanceunmountcomponent managed fix bug simply checking internal state null requires modifying react mentions bug listed", "num": "4026", "d": "6/2015"}, {"title": "problems mocha jsdom react testing", "body": "entirely sure problem mocha react really need help figuring tests failing looks like leaks across siloed documents test setup using mocha individual test spins document jsdom loading react proceed run test individual component separate documents tests run fine run single file time run tests get errors like jsdom react created repository minimal setup detailed description anyone help figure problem avoid maybe even fix", "num": "4025", "d": "6/2015"}, {"title": "please deprecate mixins", "body": "mixins make things unclear example javascript reactcreateclass mixins b c anevent function thisfoo hard people find mixin come may search mixins documentation know hard trigger even use devtool trace source code", "num": "4023", "d": "6/2015"}, {"title": "referenceerror location defined", "body": "building master getting following error looks like uninitialized variable", "num": "4020", "d": "6/2015"}, {"title": "need test setstate shallow render", "body": "related rendering component like rendering via shallow render calling handler produces following ideally module realise running server skip behaviour check", "num": "4019", "d": "6/2015"}, {"title": "componentdidupdate componentwillupdate pass incorrect state", "body": "functions able react stateprops change happening objects var component reactcreateclass getinitialstate function return componentdidmount function setinterval function thisupdatestate bind componentwillupdate function nextprops nextstate consolelog consolelog consolelog result object object object object object object see numbers states different objects states identical cant rely componentdidupdate objects prevstate already modified", "num": "4018", "d": "6/2015"}, {"title": "react throwing unexpected errors", "body": "gave test current code runs throwing unexepected errors one components simple wrapper class around select dom node code js import react react class select extends reactcomponent render var options thispropschildren name selectproptypes name reactproptypesstring options reactproptypesarray labelclassname reactproptypesstring selectdefaultprops labelclassname export default select using component within others get following errors console sure code needs migration bug willing dig ya think might bug", "num": "4017", "d": "6/2015"}, {"title": "rerendering dangerouslysetinnerhtml child fails invariant violation", "body": "run dangerouslysetinnerhtml loads initial render rerender fails invariant violation problem shows component dangerouslysetinnerhtml unmounted remounted var react require react var demo reactcreateclass reactrender documentbody jsfiddle", "num": "4016", "d": "6/2015"}, {"title": "xss issue rendering link website", "body": "", "num": "4015", "d": "6/2015"}, {"title": "redundant codes reactcompositecomponentmixinmountcomponent", "body": "tracing codes found inside reactcompositecomponentmixinmountcomponent code reads however reactclasscreateclass props context set already seems reason duplicated codes remove one two code snippets keep one reason concerns would suggest move setup props context refs back class constructor make duty constructing duty mounting clear", "num": "4014", "d": "6/2015"}, {"title": "injection implementation", "body": "researching separate server implementation found able inject different component types allows bypass much reconciliation logic needed server via types injectable exception also noticed lot component injection spread different two files neither seem like good place add compositecomponent injection injection containers also contain default implementation many methods could bloat package sizes defaults overridden would likely server would propose contains method provides injection type component defaults implementations would provided would likely also derivative would also allow removal circular dependency wrapper", "num": "4012", "d": "6/2015"}, {"title": "nt preserve context deprecated", "body": "intentional right way cloning elements passed correctly thanks", "num": "4008", "d": "6/2015"}, {"title": "custom proptype validators receive props argument", "body": "instead object contains single key matches proptype key jsx var component reactcreateclass proptypes function props propname componentname props ever contain key regardless props passed component", "num": "4005", "d": "6/2015"}, {"title": "best practice css styles", "body": "constructing react component concerns dynamic part dynamic part put css styles html elements render method component extract dynamic part component want know scenario efficient would putting css styles html elements react component resolves cross browser compatibility problem", "num": "4002", "d": "6/2015"}, {"title": "method change default event plugins", "body": "hi noticed method module marked private unit test able override event plugin configure first injecting seems neither replace default event plugins add new kind event plugin without modify code react designed like good support modifyingextending event plugins injecting default ones thanks", "num": "4001", "d": "6/2015"}, {"title": "generating randomunique attributes serverside nt break clientside mounting", "body": "consider example relatively generic component javascript var fieldcounter var field reactcreateclass getinitialstate function return inputid field fieldcounter render function var props thisprops inputid thisstateinputid order tag semantically related tag obviously need match attribute tag attribute outside requirement however need attribute solution like one convenient handles internally need consuming component pass actual value problem running however causes attributes generated clientside mismatch sent server clientside restarts every load whereas serverside reference obviously keeps growing mismatch results error thrown question overlooking obvious solution would like component able simply internalize generation implementation detail ca nt seem come good mechanism matching id generation clientside thanks advance", "num": "4000", "d": "6/2015"}, {"title": "html jsx compiler convert tabindex tabindex", "body": "used converter convert div inside conversion gave notice word capitalized consolelog gives following reasonable warning may assume bug converter thanks", "num": "3996", "d": "6/2015"}, {"title": "wrong row offset yscroll position dynamically changed row height", "body": "using rowheightgetter function dynamically change row height state change unfortunately rerender rows wo nt position correctly expanded row gets negative offset value yscroll nt recalculate calling updaterowheight method getrowposition fixeddatatablescrollhelper line thisupdaterowheight rowindex fixes offset recalculation forcing yscroll recalculation commenting lines line fixeddatatablereactjs fixes yscroll problem sure elegant solutions added information purpose whats proper solution problem", "num": "3994", "d": "6/2015"}, {"body": "yes think great idea", "d": "6/2015"}, {"body": "dupe", "d": "6/2015"}, {"body": "excellent let follow", "d": "6/2015"}, {"body": "think date must represented string project use yyyymmddthh mm ss mmm format solves many issues timezones widget think must use existing one need customization compose issue would like interesting article composability components", "d": "6/2015"}, {"body": "react could date objects considering dom property representation datetime attribute implicit string conversion expected however rare date millisecond valuable information specificity varies lot wrapper would useful eg string formatting could reusable function could used implement directly datetime attribute", "d": "6/2015"}, {"body": "rendering jsfiddle invalid nesting according browsers proceed normalize break react understanding dom ps trivial fix ca nt return list component probably need render entire table react", "d": "6/2015"}, {"body": "damn totally right provide rendering element without rendering whole react renderfunction ca nt return mutliple elements render remove already existing got ideas", "d": "6/2015"}, {"body": "right ca nt possibility render tbody transplant tbody table really nt recommend unless absolutely another possibility could render entire table react use leap back html", "d": "6/2015"}, {"body": "ok thanks lot hate dirty hacks end rendering whole table react lead work think worth", "d": "6/2015"}, {"body": "ps add could render separately insert manually would nt hack would probably good idea either would housekeeping would nt hack", "d": "6/2015"}, {"body": "ok looks like rickhub info needs thanks syranide welcome rickhub react community since nt bug react going close issue feel free continue discussion thread stackoverflow", "d": "6/2015"}, {"body": "initial attempt fix ca nt figure properly use way missing listen child events ie mouseoutover also return event nt bubble listens mouseoutover element callback attached js var eventconstants require eventconstants var eventpropagators require eventpropagators var syntheticmouseevent require syntheticmouseevent var containsnode require containsnode var reactmount require reactmount var keyof require keyof var topleveltypes eventconstantstopleveltypes var getfirstreactdom reactmountgetfirstreactdom var eventtypes mouseenter mouseleave registrationname keyof onmouseleave null dependencies topleveltypestopmouseout topleveltypestopmouseover var extractedevents null null var enterleaveeventplugin eventtypes eventtypes almost every interaction care toplevel event occurs use extract duplicate events however moving mouse browser outside fire event case use toplevel event param string topleveltype record param domeventtarget topleveltarget listening component root node param string topleveltargetid id param object nativeevent native browser event return accumulation synthetic events see eventpluginhubextractevents extractevents function topleveltype topleveltarget topleveltargetid nativeevent moduleexports enterleaveeventplugin", "d": "6/2015"}, {"body": "would want thing", "d": "6/2015"}, {"body": "reason listen events dom also event handling done one place seems like reasonable request given essentially created event system top dom intended match spec events could thing event system native dom sounds like think ridiculous request feel way", "d": "6/2015"}, {"body": "attach single listener dom events outside react", "d": "6/2015"}, {"body": "admittedly much pain use strict const usecapture true function geteventnames object let names let name object nameindexof namespush namesubstr return names export default function adddomevents emit let windowevents geteventnames window let documentevents geteventnames document let eventname", "d": "6/2015"}, {"body": "nwwells done necessity since react needs create perfect emulation dom would need clientside app businessasusual bind particular handler need given time", "d": "6/2015"}, {"body": "nt want event handling dependent rendering library businessasusual sucks whatever happened rethinking best practices", "d": "6/2015"}, {"body": "nt want event handling dependent rendering library nt think reason react create perfect emulation dom rather make addingremoving event listeners easierpossible least people experience", "d": "6/2015"}, {"body": "make addingremoving event listeners easierpossible nwwells well yeah necessary recreate dom react implementation interacted similar way think putting global event catcher top level new best practice criticizing needs curious would helpful know trying catching keystrokes shortcut purposes etc", "d": "6/2015"}, {"body": "one things trying essentially creating event stream events go system dom events serverside message events event handling coordinated one use case handling key events shortcuts closing modals etc another calling preventdefault link clicked looks like internal navigation event could also log events hit system recreate given state based stored event stream", "d": "6/2015"}, {"body": "nwwells sounds like building framework rather app goal react support use case app developers ensure sufficient escape hatches remaining nt see huge need app developers listen events since app developers generally want associate specific behaviors specific events therefore know events care since want build framework manage events sounds like escape hatch use dom api give access underlying event system let respond way want least two cents defer spicyj sees issue differently", "d": "6/2015"}, {"body": "interesting segregate framework building app development actually building app inference nt accurate however aspect app currently working could considered framework building interested handling one particular use case rather whole class use cases architecturally sane method figure case totally fine giving mechanism listen events amenable also satisfied totally disabling react event system significant interference said event system trying accomplish working sure would nice either know exactly happening listening events disable event system deal problems react expecting events fired", "d": "6/2015"}, {"body": "frameworks try bow highlevel abstractions various reasons react instance wants bypass dom entirely render pixels directly bowing browser apis bowing common desire frameworks trying support frameworks single high level api hopeless objective better us allow framework developers escape lower level api regards able disable react event system react event system interfering code stops ignoring ie using react events", "d": "6/2015"}, {"body": "one ran specify input want template value react nt allow type event handling sees value controlled ie value passed sets value input based expects update value handler tried updating value separate domlevel event handler could nt see value text field already set react worked around issue specifying every input technically using rather since breaks architecture", "d": "6/2015"}, {"body": "hmm interesting cc spicyj syranide would ideal fix look like disabling react handling event would lead data text box becoming sync value provided effectively turning component uncontrolled component wrong behavior react perspective obviously could use uncontrolled inputs support controlled components order preserve idiomatic react controlled components seems like framework specify onchange event handler using react event system correct behavior since solution would introduce race conditions data consistency issues nt really see way around ideas", "d": "6/2015"}, {"body": "would want thing agree imho power react comes isolation components readability offers personally fan able listen events unrelated ancestors onsubmit onchange etc see technical reason want less code looks sensible people previous experience html nt think many would suggest feature frontend nt get wrong nt necessarily mind shortcuts significantly experienced hard know good bad shortcuts look like actual solutions especially familiar jquery rather messy problems tend devolve pushes outside pit success worked around issue specifying onchange every input technically using valuelink rather since breaks architecture opinion absolutely right approach onchange every input free move onchange context provide custom components go special usecase inmind seems largely equivalent want nothing wrong ok complexity find tradeoffs acceptable think react fine simple could easily shed html quirks react already provides tools needed build frontendindependent abstractions introduces unnecessary complexity everyone core", "d": "6/2015"}, {"body": "jimfb nt mind react handling events rather way tap event system see events actually want controlled input want set value based props nt want set value onchange handler given component syranide rejecting use cases outlined hand also looking shortcut rather generalized mechanism using context mechanism refer would essentially bar using anyone else components unless customized one use custom version elements unless could somehow way components would forced implementation input component example", "d": "6/2015"}, {"body": "rejecting use cases outlined hand another way something nt mean acceptable tradeoff talking extending core ways seem objectionable context already largely solve problem expect react formalize api somewhat unique html dom frontends even concept bubbling listen controls individually using context mechanism refer would essentially bar using anyone else components unless customized one use custom version elements unless could somehow way components would forced implementation input component example provide wrapper factory components always introduce inconsistencies implement entirely different input methods canvas etc would able support intended wrapping allows interop component compatible api clear nt necessarily mind event system exposing functionality knowingly accepting consequences free circumvent react stuff hook dom directly react dom event system internal implementation detail confused react api generic independent underlying frontends", "d": "6/2015"}, {"body": "expect react formalize api somewhat unique html dom frontends even concept bubbling listen controls individually well fwiw would frontend html dom part got excited react unidirectional flow data fact really asking bubbling rather single place listen events generated react every frontend generates events provide wrapper factory point example mean free circumvent react stuff hook dom directly consider passing values input element part react event stuff would happily bypass react event system entirely unable without working around ways react components tied event system", "d": "6/2015"}, {"body": "well fwiw would frontend html dom part got excited react unidirectional flow data fact really asking bubbling rather single place listen events generated react every frontend generates events frontends implementing percontrol callbacks central event system subscribe simply incompatible api mean many basic game frontends provide global mousekeyboard api bubbling inherent concept controls focus context wrappers could handle fine point example mean something along lines code example could probably turned helperfactory consider passing values input element part react event stuff sure mean would happily bypass react event system entirely unable without working around ways react components tied event system want sounds like going intentions react go way benefits see versus using react designedintended wondering intentions kind sounds like building ui framework ontop react ui framework rather using react intended", "d": "6/2015"}, {"body": "would happily bypass react event system entirely unable without working around ways react components tied event system way think right dom components tied event system valuechecked handling use defaultvaluedefaultchecked react wo nt anything special", "d": "6/2015"}, {"body": "ok thanks", "d": "6/2015"}, {"body": "unless missunderstanding something javascript question react one also general usage questions better located stackoverflow use github issues track bugs react tried something like going close issue since bug react feel free continue discussion stackoverflow", "d": "6/2015"}, {"body": "behavior correct want find one children dom nodes add ref first using reactcloneelement use ref element little want render nt identity nt correspond dom node directly", "d": "6/2015"}, {"body": "next commend thread linked contradicts guarantee children componentdidmountdidupdate called parent gets", "d": "6/2015"}, {"body": "spicyj thank info correction working demo reactcloneelement reactaddonsclonewithprops deprecated renderitem childpropskey reactchildrenforeach thispropschildren child gt consolelog reactfinddomnode thisrefs", "d": "6/2015"}, {"body": "yes put new key container react render subtree scratch", "d": "6/2015"}, {"body": "ca nt repro ios repro page", "d": "6/2015"}, {"body": "huh ca nt either know babel polyfill supposed enable full iterator operation ios safari thinking might bogus ticket moment created wonder might different jsbin config", "d": "6/2015"}, {"body": "wonder subtle thing webpack supposed load polyfill", "d": "6/2015"}, {"body": "sure case nt need polyfill though plain js", "d": "6/2015"}, {"body": "requiring babelpolyfill think requiring immutable react might necessary", "d": "6/2015"}, {"body": "page claims automatically loads polyfill yeah requiring everything though still sure assume anything load order individual modules surprised works plain js thought react implicitly using iterable created case react modified something different thanks help", "d": "6/2015"}, {"body": "babelregister used node applications docs mean nt need also require polyfill case babelregister correct thing require browser environment though", "d": "6/2015"}, {"body": "immutable react fall back property symboliterator nt exist environment", "d": "6/2015"}, {"body": "huh confusing enough requiring fixed code issues ios safari anyway put entry section webpack config worked well thanks tip wish could peer deeply happening raw page ios safari nt mac ca nt remote debug moment case simple workaround right", "d": "6/2015"}, {"body": "closing since nt sound like react issue", "d": "6/2015"}, {"body": "terminal mean node environment window object available therefore passing block silently since window amp amp windowuser undefined false amp amp whatever gt false", "d": "6/2015"}, {"body": "curiosity register callback event works understand nt work react way", "d": "6/2015"}, {"body": "know function essentially seems happening code modifying dom react jealously wants full control manipulating dom proper rails way things would using state displaying modal depending state js var modal reactcreateclass getinitialstate function return ismodaled false componentdidmount function even ideal really button typesubmit click function e epreventdefault thissetstate ismodaled true bind render function thisstateismodaled return modaldom", "d": "6/2015"}, {"body": "blainekasten correct remodal likely modifying dom problem react uses change tracking optimize writes dom change things react feet things break recommendation avoid touching anything rendered react nt need anyway whole point react render function declarative thus easier reason start mutating things back imperative world use react ciaoben registering callback suggested may hiddendelayed error still would probably received error later app development cycle ie next time react needed reconcile changes component therefore app dom manipulation callback equally broken since bug react going close issue feel free continue discussion future reference questions properly use react probably better located stackoverflow since use github issues track bugs react", "d": "6/2015"}, {"body": "thank guys right difficulties forget old habits try blainekasten solution jimfb nt uderstand call function since would modify anyway dom", "d": "6/2015"}, {"body": "ciaoben point using react modifying dom correct solution use instead define ui declaratively dom manipulations needed trying popup modal would recommend watching ryan florence talk playing portals demo located", "d": "6/2015"}, {"body": "yep looks legit look forward day resolved nt deal wackamole anymore p", "d": "6/2015"}, {"body": "see", "d": "6/2015"}, {"body": "dupe", "d": "6/2015"}, {"body": "hmm consoletrace nonstandard use consoleerror warnings expand message see trace chrome firefox least using environment nt let expand error traces", "d": "6/2015"}, {"body": "point error traces error nt happen gets caught catch basically run edited version react one removing trycatch around error find sure logic functionally speaking pointless trycatch removed start tho using consoleerror would nicer throwing uncaught error", "d": "6/2015"}, {"body": "code question notice never throw yeah problem least would use useful without error least helpful", "d": "6/2015"}, {"body": "chrome allows break caught errors trycatch optionally toggle breakpoint jimfb used consolewarn nt stack associated anymore abritinthebay master upcoming release switched using consoleerror stack associated", "d": "6/2015"}, {"body": "ah excellent patched moving forward awesome wait eta btw chrome allows break caught errors btw sites really horrible debug oh god horrible easier edit code", "d": "6/2015"}, {"body": "follow checkboxes", "d": "6/2015"}, {"body": "code looks fine post simple jsbin reproduces problem", "d": "6/2015"}, {"body": "spicyj shame actually something early days react messing killed nt throw warning anymore thanks see ya", "d": "6/2015"}, {"body": "sebmarkbage told cpojer probably would nt hard implement agree semantics finddomnode etc work ref get implement getpublicinstance might really easy", "d": "6/2015"}, {"body": "rant yea thinking feature smells really wrong since whole point moving refs props make outsideconcept framework controlled seems like want control make props way ability fully control timing however nt always want resolve also nt want accidentally transfer ref using property spread although refs finally become less common probably become manually invoked functions torn nonrant sure api going sufficient use cases nt provide capability refire js class container state toggle false tick gt thissetstate toggle thisstatetoggle componentdidmount setinterval thistick render return thisstatetoggle thispropschildren class wrapper getpublicinstance return thisrefsmycomponent render return example nothing binds unmountremount scenario wrapper ca nt recall getpublicinstance get fresh component keep stale version something like might better however know ref transferred maybe function fires component didmount subtle breaks case nt fire later maybe add something like extra api would sideeffectful ideal suggestions", "d": "6/2015"}, {"body": "personally fan refs becoming manually invoked functions probably influences thinkingsolution make component manually invoke ref wrappers forward ref call avoid autoinvoking react wrapper becomes completely transparent since base component must expose manually invoked ref instead relying one provided automatically react assuming control base component works right maybe totally missunderstanding request p", "d": "6/2015"}, {"body": "request provide seamless api natural use react hoc unobservable", "d": "6/2015"}, {"body": "care unobservable could flag class says high level component nt resolve ref manually invoke andor pass someone else would make high level components completely transparent also enable clean migration path making refs manually invoked decide someday migration path every component takes ref must flag set new code looks like", "d": "6/2015"}, {"body": "already use static flags things like context types etc might want use flag indicate component state pure seems natural could potentially work stateless functions however brings interesting point stateless functions automatically transfer ref since nt instances", "d": "6/2015"}, {"body": "vote would refs illegal stateless functions since component reference allows us punt decision future date also gives us reasonable opportunity warn someone tries attach ref stateless function since likelihood implementor stateless function forgotten properly forwardhandle ref lead user confusion unless reject time ref attached thereby sidestepping issue making refs illegal stateless functions wo nt result lost functionality since user always regain potentially lost functionality wrapping stateless function hoc thereby regaining functionality including ability attach ref use finddomnode", "d": "6/2015"}, {"body": "vote would refs illegal stateless functions since component reference seems like rather arbitrary restriction finddomnode useful stateless function component fine introducing way restrict use finddomnode seems unrelated", "d": "6/2015"}, {"body": "use case stateless functions basically provide syntax sugar another component andor b lock api excluding configuration props would nice convenience forward ref b would detrimental locking api nt know cases like tend error side easiest change restrictive form ie making refs work possibly warn", "d": "6/2015"}, {"body": "sounds like got game plan", "d": "6/2015"}, {"body": "recommended cases tutorial explicitly shows marked used way sanitizes input react sanitation nt needed case actually correct choice tutorial tries explain nt use way preserve formatting generated marked", "d": "6/2015"}, {"body": "code recommended mainly explicitly bypasses security features xss protection provided react tutorial also explicitly calls security ramifications escape hatch sorts point nt never use feature inherently bad would remove point careful decision use conscious one mentioning feature tutorial nt bad thing especially since people upgrading legacy codebases ie people new react likely need feature order interoperate existing codebase going go ahead close issue think conscious decision bug feel free continue discussion community decides hiding feature good idea reopen issue burry feature deeper documentation", "d": "6/2015"}, {"body": "thought note use typetaint signature nt embedded element check return type sorts example tutorial seems suggest bad habit", "d": "6/2015"}, {"body": "ah saying safe taint moved jsx tag yeah could get behind", "d": "6/2015"}, {"body": "really nt commenting appropriateness using cases far meant suggest change ps jimfb yes exactly", "d": "6/2015"}, {"body": "fixing might well correctly homepage", "d": "6/2015"}, {"body": "approach seems reasonable defer spicyj others authoritative answer general perf starts becoming issue recommend switching immutable datastructures using avoid unnecessary rerenders nt enough trying superoptimize particular component able track changes data cache reactelements perform imperative mutations keep reactelements synchronized data obviously defeats main advantages using react recommended solution except cases need squeeze every last ounce performance component future type question probably better suited place like stackoverflow use github issues tracking bugs react since bug react going close issue tracking purposes feel free continue discussion", "d": "6/2015"}, {"body": "browser behavior seems entirely correct button receives mouse event since element moves immediately mouse happens outside click registered thing move cursor back button first release get click expected", "d": "6/2015"}, {"body": "confirmed looks like issue getting click result button moving put error output button wo nt affect positioning button everything behaves expected issue related mutating state issue related moving things dom also things syranide pointed going close react issue", "d": "6/2015"}, {"body": "pretty sure bug fixed master works fine pull latest", "d": "6/2015"}, {"body": "code", "d": "6/2015"}, {"body": "basically leave props pull inbound layout nt want pass style calculate merged", "d": "6/2015"}, {"body": "cloneelement params beyond props arg specifies children much like createelement unlike objectassignextend sounds like probably want instead", "d": "6/2015"}, {"body": "er make something like since probably nt experimental transform", "d": "6/2015"}, {"body": "ok reactcloneelement child extend style style extend style style child doubt", "d": "6/2015"}, {"body": "former", "d": "6/2015"}, {"body": "maybe something like prefer", "d": "6/2015"}, {"body": "yes tried former get result nests object contains chidren inside", "d": "6/2015"}, {"body": "two calls adds level nesting clone gt clone gt original children third level deep rather first level deep", "d": "6/2015"}, {"body": "seems understanding properly sorry make small example reactjsbincom shows problem", "d": "6/2015"}, {"body": "ok sorted well stopped symptoms also extracting thispropschildren declared spread property otherwise one properties passes thispropschildren sure would also cloned component removed behaves expected without extra level cloning children already", "d": "6/2015"}, {"body": "contained props parent component except looked something like ended making copy set children happened case element giving working intended nt want transfer specific prop take like clonewithprops would nt transfer children special case surprising many cases one reasons deprecating cloneelement treats props identically", "d": "6/2015"}, {"body": "good know thanks", "d": "6/2015"}, {"body": "see happy reopen simple case shows react something wrong", "d": "6/2015"}, {"body": "also important getting initial state instance sideloading architectures like flux leads right back constructor signature nt see much difference whether vs base component call always implement static method though", "d": "6/2015"}, {"body": "going quote allen wirfsbrock oo concept fp people nt use nt try fix oo already broken nt try fix functional current design natural someone familiar building objectoriented class using js class system something like typescript also type inference benefits since type immediately inferred however react core fp library definitely add functional alternative api nt use instances see draft example sure makes sense combine two worlds one imo clearer use one style rather trying combine", "d": "6/2015"}, {"body": "standard going polyfill", "d": "6/2015"}, {"body": "method documentation", "d": "6/2015"}, {"body": "human beings tend make mistakes especially something absent documentation think kindly warning big deal spirit react library today results google keyword componentdidunmount multiply people silently spend minutes life find stupid mistake get crowd tell", "d": "6/2015"}, {"body": "stupid messing stack caused one components checking recommended alternative component needs know type children compatible replacement", "d": "6/2015"}, {"body": "instead checking check iselementoftype pass let know nt make sense", "d": "6/2015"}, {"body": "appears internally causes warning adds getter currently bit hack nt think makes difference", "d": "6/2015"}, {"body": "thead reactdomthead", "d": "6/2015"}, {"body": "ah right factory also found using old version rather benefit anyone else reading usually resolves actual class object one returned special case elements string sorted thanks spicyj", "d": "6/2015"}, {"body": "glad figured", "d": "6/2015"}, {"body": "post simple jsbin similar repro", "d": "6/2015"}, {"body": "go type password field see cursor position behaves weird gets switched", "d": "6/2015"}, {"body": "looks like firefox reinitializes input completely change type makes intuitive sense want maintain cursor position probably best manage selectionstartselectionend maybe one day better api manage react right sorry side note component nt actually controlled like might believe starting value empty string handling change maybe meant nt affect issue though", "d": "6/2015"}, {"body": "firefox issue spicyj sorry intuitive switching type alter cursor position good use case scenario look ignore jsbin quick dirty hack demonstrate need make perfect", "d": "6/2015"}, {"body": "yes feel changing type move cursor opening firefox issue sounds reasonable fairly sure find problem exists without react personally convinced preserving cursor position even make sense sure text password look mostly similar types inputs cursor preserve date picker might multiple cursors part date", "d": "6/2015"}, {"body": "yeah types text password maintain cursor position others resetting makes sense", "d": "6/2015"}, {"body": "trying implementing discovering interesting quirks possibilities firstly objectfreeze throws given nonobject returns means one dev machine browser implementing could run fine quirky code accidentally calls primitive fail spectacularly production browser implements makes react freeze stub good place even behaviour calling nonobject react code likely mistake opted throw typeerror secondly every place code uses development would good unexpected make react internal freeze run dev last question want display warning development freeze implemented", "d": "6/2015"}, {"body": "love nt interop neatly libraries ended weird situations luckily could include certain libraries others sorted way would really like use", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "please post example original code likely something wrong", "d": "6/2015"}, {"body": "tl dr expected behavior bug react babel looks like something like classes react autobind methods anymore see", "d": "6/2015"}, {"body": "ok actually fixed using nt know doc thanks", "d": "6/2015"}, {"body": "believe documented behavior", "d": "6/2015"}, {"body": "thank much missed byline garetht", "d": "6/2015"}, {"body": "sidebar look like understand children", "d": "6/2015"}, {"body": "ok missing something", "d": "6/2015"}, {"body": "special prop created children read", "d": "6/2015"}, {"body": "example fullblown online markdown converter nt need make work every use case", "d": "6/2015"}, {"body": "got smile", "d": "6/2015"}, {"body": "tl dr compiles jstransform wrong huxpro work around removing parentheses around function please note reacttools deprecated per babel already works correctly case maybe fix anyway", "d": "6/2015"}, {"body": "spicyj thank u much think official website update", "d": "6/2015"}, {"body": "fwiw fixed newer versions jstransform changes resulted us shipping updated reacttools projects deprecated switch using babel latest jstransform jsx", "d": "6/2015"}, {"body": "paste exactly code make jsfiddlejsbin number red flags code sample takes array missing commas", "d": "6/2015"}, {"body": "valid coffeescript syntax", "d": "6/2015"}, {"body": "valid coffeescript syntax nt correct way invoke zpao noted takes array argument desugars want need write something like instead", "d": "6/2015"}, {"body": "oh right bad forgot array syntax hmmm chance could add type check throw error nt array", "d": "6/2015"}, {"body": "guess curious ended situation nt obvious cases imagine would written code seconds earlier would pretty obvious", "d": "6/2015"}, {"body": "yes case thought would good context like warnings also might obvious ported bunch templates actually would reasonable case since porting bunch stuff wrote using ractive react real reason ended running rather much earlier simply avoid using style attribute templates much possible one simple", "d": "6/2015"}, {"body": "dupe fixed master already", "d": "6/2015"}, {"body": "seems working try reduce test case", "d": "6/2015"}, {"body": "hey seems working fine oops must something else play", "d": "6/2015"}, {"body": "already works", "d": "6/2015"}, {"body": "yes works", "d": "6/2015"}, {"body": "nt think reliably get charcode nonkeypress events keyboard shortcuts probably use keycode salier might able say going close unfortunately nt think react help", "d": "6/2015"}, {"body": "advisable route take use native dom events ie keypress within react component seems strange react remove functionality charcode key combinations", "d": "6/2015"}, {"body": "always componentdidmount remove componentwillunmount fairly sure charcode wo nt work across browsers though sure test", "d": "6/2015"}, {"body": "thanks shall seems bit limbo charcode deprecated keyboardeventkey nt got great browser support", "d": "6/2015"}, {"body": "key roughly equivalent keycode nt depend keyboard layout like charcode key would work keycode", "d": "6/2015"}, {"body": "sure thing moment forgetting react exists would go capturing getting ascii decimal code two keys together using right saying unreliable also saying modern reliable way get ascii value", "d": "6/2015"}, {"body": "sorry gone offtopic react issues seems strange ca nt reliably js", "d": "6/2015"}, {"body": "listen keydown also work react", "d": "6/2015"}, {"body": "shameless plug might help able something like bit since used library plan working soon clean code", "d": "6/2015"}, {"body": "use lowercase strings calling createelement use type set special event handlers forms including submit", "d": "6/2015"}, {"body": "valueless attributes shortcut boolean attributes favorite part jsx transform exists able specify empty string ensure value react gets empty string end dom correctly without value", "d": "6/2015"}, {"body": "oh good point zpao somehow forgot", "d": "6/2015"}, {"body": "thanks worked like charm", "d": "6/2015"}, {"body": "need enable transforms adding params nt know trigger jsbin would suggest using babel anyway", "d": "6/2015"}, {"body": "thanks quick reaction impression features like template strings dealt react transformer understand correctly case", "d": "6/2015"}, {"body": "josdejong enabled default also", "d": "6/2015"}, {"body": "thanks syranide noticed babel support transform jsx files works right box using build step reason nt work running inbrowser transform babel html tags react classes nt compiled javascript", "d": "6/2015"}, {"body": "sure would interested writing something", "d": "6/2015"}, {"body": "problem without code example", "d": "6/2015"}, {"body": "code example might useful would hopefully help prevent followup questions people surely problem using", "d": "6/2015"}, {"body": "related", "d": "6/2015"}, {"body": "generate currently works xhtml work value need right react probably wo nt usable without forking property stuff sorry hopefully much else want support svg better soon maybe improved xul support come", "d": "6/2015"}, {"body": "honestly nt know xul well empty string might work tried creating following element generated markup empty attribute ie think empty string would fine worried maintain patch top react make xul compatible want migrate xul soon anyway though probably take", "d": "6/2015"}, {"body": "hm thought work", "d": "6/2015"}, {"body": "oh using latest downloadable version site version try version", "d": "6/2015"}, {"body": "oh guess release yet builds master feeling adventurous wait month", "d": "6/2015"}, {"body": "question trust builds zpao kid", "d": "6/2015"}, {"body": "definitely sneaking exploits get access machines firefox code", "d": "6/2015"}, {"body": "far add following attributes supported xul flex command otherwise attributes stripped output rendering component like sure others try make complete list point sure work web components compatibility would help nt really care web components going bet still happy small patch top react edit zpao sources hacked", "d": "6/2015"}, {"body": "add thank thank superb lifecycle methods resounding success wrapping current components react ones even complicated things like big list items really related example", "d": "6/2015"}, {"body": "neat technique", "d": "6/2015"}, {"body": "another take third option difference third parameter explicitly passes data say depends would able normal shallowly compares props shallowly compares props default would still get different good people nt know thing casually use inside callback still work somebody performance issues would advised turn lambda class method point longer forced learn third parameter", "d": "6/2015"}, {"body": "nice like better also gives way transition dumb component possibly performant one implementing logic", "d": "6/2015"}, {"body": "nt think really react issue discuss thread good place keep talking", "d": "6/2015"}, {"body": "bad talked threepointone suggested create issue initial goal turn something actionable might require reactlevel support assuming pattern makes sense think guess solve problem fine without pattern gaearon suggests also work scu normal children passed wrapper", "d": "6/2015"}, {"body": "sounds right thanks responses folks", "d": "6/2015"}, {"body": "future readers goal document potential patternsproblems children function pattern thoughts please share reactdiscuss thread", "d": "6/2015"}, {"body": "reacttools removed jsxtransformer deprecated something", "d": "6/2015"}, {"body": "activatedgeek yes favor babel", "d": "6/2015"}, {"body": "ohh using build system need change loader", "d": "6/2015"}, {"body": "activatedgeek yeah painless", "d": "6/2015"}, {"body": "great thanks", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "activatedgeek see blog post last week", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "intentional know inconsistent html honestly pretty odd reason removing spans works whole child read single string spaces detail blog post made change gt year ago short version believe lesser whitespace handling evils", "d": "6/2015"}, {"body": "zpao given tossup protecting developers whitespace unintentionally added added nonetheless vs departing obvious html analog actively trimming whitespace intentionally added stop since guess ship sailed either way thanks prompt reply mad lt team", "d": "6/2015"}, {"body": "anyone working would like give try", "d": "6/2015"}, {"body": "way handling avoid render callbacks entirely use way must pass component boundary allows developer test parent child separately knowing arbitrary code executed", "d": "6/2015"}, {"body": "nt work one shallow render rendered output rendered get point would could try verify something along lines let know nt make sense", "d": "6/2015"}, {"body": "hi spicyj thanks response would work would still require manually case hoping help writing somewhatshallow renderer could recognize rendered child rendercallback render started naive implementation swapped children element didt work investigate thank time", "d": "6/2015"}, {"body": "suggested past binding onblur semantics want work", "d": "6/2015"}, {"body": "onblur fires every blur even nothing changed developers fake event behaviour native standard event exact behaviour", "d": "6/2015"}, {"body": "super easily right since baked markdown processing", "d": "6/2015"}, {"body": "one option render clientside using utility like anchorjs anchors would nt appear rss since feed content would leave js behind looks like ids would generated uses similar regex code convert titles lowercase hyphendelimited words let know interested approach put together pull request", "d": "6/2015"}, {"body": "bryanbraun seems reasonable though let inline logic instead pulling thirdparty library let make sure regex equivalent order preserve existing links lines js", "d": "6/2015"}, {"body": "see approach uses regex patterns links backwards compatible", "d": "6/2015"}, {"body": "use returns valid string test add plugin remove plugin find plugins", "d": "6/2015"}, {"body": "looks like error happening using inside works jsx nt work defined js var dropdownitem reactcreateclass onclick function e epreventdefault estoppropagation thispropsonclick thispropsonclick", "d": "6/2015"}, {"body": "looking html view datareactid question used tags usually result browser reorganizing nodes specifically nested always get moved dom likely culprit case chances nested anchors across components definitely one anything rendered inside anchor guess one children happen happen react idea dom real dom get sync hit problem though problem might actually manifesting slightly differently could dom structure playing different tricks definitely nested anchors", "d": "6/2015"}, {"body": "thanks zpao beers stupid mistake side filtering done ensure submenus added instead nt work since child type instead convinced react rendered children calling render method parent", "d": "6/2015"}, {"body": "react warn invalid nesting like next release", "d": "6/2015"}, {"body": "spicyj saw comment another issue tested using latest master nt get warning invalid nesting", "d": "6/2015"}, {"body": "js render function return hi whitespace important tag", "d": "6/2015"}, {"body": "quite right use template string contain newlines hi whitespace important tag unlikely anything beyond", "d": "6/2015"}, {"body": "spicyj stand corrected worthy note also work inside assume wraps fine cases newlines show generated source effect page display normal html behavior", "d": "6/2015"}, {"body": "whitespace also matters", "d": "6/2015"}, {"body": "spicyj thanks help still wish handling whitespace user land nt bad whitespace also matters whitespace pre tried may done wrong suggesting js please add option keep spaces", "d": "6/2015"}, {"body": "matthewmueller need backticks mathieumg saying whitespace collapsed browser html tags notable exception pointed changing css tags also preserve space", "d": "6/2015"}, {"body": "public outside component figure solution though also related", "d": "6/2015"}, {"body": "dupe", "d": "6/2015"}, {"body": "packagejson learn react name nt use anywhere", "d": "6/2015"}, {"body": "using add dependencies though think work cl fri jun pm paul shannessy notifications githubcom wrote packagejson learn react name nt use anywhere reply email directly view github", "d": "6/2015"}, {"body": "way repro packagejson contains expecting valid npm package name ca nt contain spaces could field error stack pasted pointing something directories react perhaps something expecting read best suggest deleting directories starting certain problem react going close happy keep helping", "d": "6/2015"}, {"body": "seems jsx transpiler responsible setting variables internally referenced wanted ask question jsx nt know react made available environment even would good idea various reasons also probably best brought babel repository would expect similar answer good plan make elements work independently react", "d": "6/2015"}, {"body": "syranide kk understanding current thinking developer responsibility make react available resultant transpiled jsx variable named nt catch docs know explicitly stated somewhere", "d": "6/2015"}, {"body": "idea explicitly stated docs lazyweb looking catch jsx sugar requires scope bit indirection personally opinion whether documented better", "d": "6/2015"}, {"body": "seems someone agree", "d": "6/2015"}, {"body": "according tests seems need use envify react seems already configured seems simply using nodeenvproduction browserify actually envify react correctly exemple gulp config command produce automatically file contains etc means use deadcode elimination tool like uglify gcc think clearly documented", "d": "6/2015"}, {"body": "yup browser field get used browserify automatically envify work afaik equivalent webpack fwiw envify uglify exactly build minified builds suggestions prs wink clarifying documentation would appreciated", "d": "6/2015"}, {"body": "glad know thanks", "d": "6/2015"}, {"body": "afaik equivalent webpack zpao lt work fine", "d": "6/2015"}, {"body": "need webpack", "d": "6/2015"}, {"body": "answer got stack overflow correct specifies value input initially created want remain updated need use handle events correctly nt update changes otherwise two sources user input component props trying control value would nt clear happen conflict instead force think write actual behavior want", "d": "6/2015"}, {"body": "hold case going argue bug end scenario current html stateless specific situation ran grid double clicking row popped open dialog form edit row items noticed input values stuck first value opened even though everything else changed correct behaviour whole point state stored dom changing nt cause input rerender pass exact model twice get different html output", "d": "6/2015"}, {"body": "also docs need updated imply correct thing use nt want lock", "d": "6/2015"}, {"body": "whole point state stored dom defaultvalue state stored dom nt recommend recommend using controlled components instead docs say wanted update value response user input could use event let know still confusing", "d": "6/2015"}, {"body": "try seen warning console", "d": "6/2015"}, {"body": "also want fix warning console using", "d": "6/2015"}, {"body": "worked fixed htmlfor show error though chrome dev tool console thanks also introducing reactjsbin", "d": "6/2015"}, {"body": "unfortunately setting runtime nt going work initialization work based environment require react would guess could set env requiring react would work otherwise going support dynamically changing environment", "d": "6/2015"}, {"body": "using looks like might passing component class element", "d": "6/2015"}, {"body": "closing since nt actionable us asis without code sample zpao suggestion sounds likely", "d": "6/2015"}, {"body": "really want control children uipane imperatively way add method instance called outside updates state could wrapper component something like setprops particular confusing multiple places app disagreeing think current props jimfb also reactcomponentrenderer wrapper class might helpful like", "d": "6/2015"}, {"body": "spicyj thank much lightning reply", "d": "6/2015"}, {"body": "spicyj tried suggestion class method nt seem available reactelement js class uipane extends uiview constructor args super args later nt exist though", "d": "6/2015"}, {"body": "work component instance element ca nt anything element except render", "d": "6/2015"}, {"body": "also", "d": "6/2015"}, {"body": "yup ended thank", "d": "6/2015"}, {"body": "intended nullundefined nt empty string want select value pass interpret mean uncontrolled component similar", "d": "6/2015"}, {"body": "seems reasonable think props specified seeing many people affected referenced issue much time wasted trying figure happening would nice warned situations", "d": "6/2015"}, {"body": "blainekasten interesting idea unfortunately fairly common uncontrolled component also listen onchange nt know work", "d": "6/2015"}, {"body": "spicyj hmm guess think situations might happen interested think idea could get really crazy jsx parser lookahead things flag react information help debug ie lookahead parser could react could able throw additional warnings inputs based things like values would happen dev mode also", "d": "6/2015"}, {"body": "could move discussion idea reactfuture ya think worth discussing", "d": "6/2015"}, {"body": "nt want add domspecific logic jsx transform likely split separate components would also solve problem honestly probably nt tripping enough people worth making change us", "d": "6/2015"}, {"body": "change simulated callback get called make assertions nt believe intended change values dom", "d": "6/2015"}, {"body": "gotcha thank", "d": "6/2015"}, {"body": "takes passing component class creates element type would trigger warnings example", "d": "6/2015"}, {"body": "ok means clear docs made less sense since already pass props second argument thank quick reply", "d": "6/2015"}, {"body": "mathieumg sure probably want", "d": "6/2015"}, {"body": "spicyj need access instance methods imagine simply wrapping suggest would accomplish maybe current approach nt either nt gotten around test yet also thank deleting spam comment never seen github", "d": "6/2015"}, {"body": "basically equivalent ca nt access instance methods component without mounting use instance methods via", "d": "6/2015"}, {"body": "adding extra property saying following would nt possible js componentdidmount function thisrefsmyrefsomemethodthatbelongstomycomponent render function return would still work without requiring", "d": "6/2015"}, {"body": "would still work without cloneelement call cloneelement takes existing element creates copy useful modifying elements passed component creates new element jsx immediately creates copy", "d": "6/2015"}, {"body": "tried nt seem work suspected clarify example method defined defined recap imagine nt possible component wrap another inherit methods unless done explicitly topdown props thank", "d": "6/2015"}, {"body": "could try sure works case", "d": "6/2015"}, {"body": "imagine would work would nt transparent wrapper first hoped ie would nt possible replace js componentdidmount function thisrefsmyrefsomemethodthatbelongstomycomponent render function return js componentdidmount function thisrefsmyrefsomemethodthatbelongstomycomponent render function return words using dropin replacement thanks tips", "d": "6/2015"}, {"body": "related", "d": "6/2015"}, {"body": "yeah let track cc jimfb though", "d": "6/2015"}, {"body": "think solved using reactwithaddonsrendersubtreeintocontainer currently handles context forwarding event bubbling sounds like would work slorber use case", "d": "6/2015"}, {"body": "thanks jimfb seems looking looking event bubbling parent simply able setup click listeners handle child directly jimfb available seems achieve going wait right produces lot warnings really bothering disable warning use static markup wait produce lot warnings also really work seems assertion context forwarded commented", "d": "6/2015"}, {"body": "seems get rid warnings production mode dev still bothering quantity tried monkeypatch warning easy patching reactcompositecomponent requiring useless since warning method already used reactcompositecomponentwrapper instantiatereactcomponent would nice able disable selectively production warnings", "d": "6/2015"}, {"body": "slorber tried maybe something similar like works filters unwanted warnings note changed calls avoid endless recursion", "d": "6/2015"}, {"body": "thanks cody finally hacked", "d": "6/2015"}, {"body": "slorber never merged pr closed figured sync internally switch parent context happened", "d": "6/2015"}, {"body": "thanks jimfb mean released", "d": "6/2015"}, {"body": "yes parentbasedcontext rendersubtreeintocontainer made available publicly start playing react npm", "d": "6/2015"}, {"body": "thanks short release cycles keep using disabled warning try switch soon stable rc fixing addonsclassset body mouting errors", "d": "6/2015"}, {"body": "react fwiw", "d": "6/2015"}, {"body": "seems like limitationbug chrome seems pretty crazy keyboard events deviate behavior pretty much every platform guess react cross bear", "d": "6/2015"}, {"body": "request represents superset issue teardown testutils method", "d": "6/2015"}, {"body": "specific issue nt seem right purging cached nodes big part point unmounting perhaps bug", "d": "6/2015"}, {"body": "even concrete issue unmount purging would still much appreciate single point entry reliably destroysresets global caches react modules introduce hold would certainly benefit test environments immediately would also allow serverside rendering supported confidence ideally framework would nt create hidden global state either provide hooks clear initialization parameters clients provide shot dark potential purge issue would take look cache management implementation relies timers nt perform reliably test environment due fakesmocks", "d": "6/2015"}, {"body": "please try reproduce jsfiddle similar makes easier reproduce seems like got help switching nt explain problem applied fix follow stackoverflow", "d": "6/2015"}, {"body": "thanks added jsfiddle", "d": "6/2015"}, {"body": "defaultvalue nt update initial render makes component uncontrolled user interactions feeding back state changes user makes visible controlled components use explicitly handle user data change example adding make text area update", "d": "6/2015"}, {"body": "yes workaround implemented value onchange hoped elegant way answear question many thanks", "d": "6/2015"}, {"body": "workaround suggested way build forms use cases", "d": "6/2015"}, {"body": "agree nt understand quite well specified", "d": "6/2015"}, {"body": "sorry wasting time know guys great job", "d": "6/2015"}, {"body": "virtually component code runs call surprising found took runtime continually trying make performance improvements react continue", "d": "6/2015"}, {"body": "apparently dangerouslyrendermarkup nt work svg", "d": "6/2015"}, {"body": "maybe say createnodesfrommarkup work expected see gets markup gets wrap creates nodes via like reason", "d": "6/2015"}, {"body": "cc spicyj would nt work context scenario maybe separate renderers need top level least flag", "d": "6/2015"}, {"body": "sebmarkbage mean context scenario separate renderers top level", "d": "6/2015"}, {"body": "sorry directed spicyj based conversation yesterday", "d": "6/2015"}, {"body": "sebmarkbage thought referring pr pinging spicyj comments pr particular put tests", "d": "6/2015"}, {"body": "sebmarkbage works reactmount supplies context neojski using xhtml impression html tag explicit namespace work fine", "d": "6/2015"}, {"body": "spicyj correct using xhtml svg foreign namespaces ignored html test example works pure html suppose might right", "d": "6/2015"}, {"body": "spicyj ambiguous elements like nt context picked", "d": "6/2015"}, {"body": "sebmarkbage assumed look namespace container sorry precise", "d": "6/2015"}, {"body": "currently running find many might looks like script may take day hit end point every gem registry", "d": "6/2015"}, {"body": "made toy", "d": "6/2015"}, {"body": "really specific question better suited stack overflow discussion forums try keep issue tracker focused bugs features react", "d": "6/2015"}, {"body": "zpao right posted stackoverflow may well delete post thanks sorry trouble", "d": "6/2015"}, {"body": "running situation since creating parent passing owner children rerender parent state changes perhaps missing something nt component rerenders children renders rerender unless prevented however created externally wo nt receive new props nt rerender personal note think routing way poor practice nt see benefit specifying routes jsx elements instead using regular js structures see downsides", "d": "6/2015"}, {"body": "perhaps missing something nt component rerenders children renders rerender unless prevented shouldcomponentupdate however created externally homejs wo nt receive new props nt rerender example right nt rerendered rerendered triggers intuitively would think would cause components rerender since children nt seem case personal note think routing way poor practice nt see benefit specifying routes jsx elements instead using regular js structures see downsides thanks feedback elaborate little bit sure mean regular js structures downsides might", "d": "6/2015"}, {"body": "example right homejs nt rerendered rerendered pushstate popstate triggers intuitively would think would cause components rerender since children nt seem case yeah surprises rerenders elements render rerender using right working jsfiddle could look thanks feedback elaborate little bit sure mean regular js structures downsides might rephrase defining routes children react element using jsx necessarily bad idea js addroute function return hi index addroute usermartin function return hi martin render return routeobjectroute technically lookups constant log time preprocessedcached instead nt involve react overhead rerendering cause route elements recreated additionally routes longer centralized single file may may good idea nt neat bulletproof argument hand always strive use simplest data structures easiestmost flexible solve problem using ui elements define routes fit like using map define predefined structure bad idea", "d": "6/2015"}, {"body": "yeah surprises router rerenders elements render rerender using purerendermixin right working jsfiddle could look using purerendermixin simplest example think illustrate point example notice gets updated always strive use simplest data structures easiestmost flexible solve problem using ui elements define routes fit yah agree sentiment mostly looking alternatives reactrouter beast", "d": "6/2015"}, {"body": "using purerendermixin simplest example think illustrate point interesting cc sebmarkbage spicyj seems react skips rerendering elements pass optimization gone bad intentional", "d": "6/2015"}, {"body": "intentional optimization long time extremely rarely ever show issue evident fact syranide nt even know example one kind optimization manually automatically also useful container components updates state parents nt rerender eg scrolling surface support mutation state convenience make certain assumptions code style optimization relies heavily hard requirement must pure hard fp requirement react idempotent ie render thing regardless called neither examples uses idempotent render functions since reading globally mutated state immutable thinking ways trying enforce ideal solution put time state convenience call something know reading global state whenever changes ie thing calling needs call cause sideeffects even use mutable state objects nt mutate within render reactelements props immutable already enforced warnings however ok state within mutable eg one heuristic assume wo nt combine mutable state reusable elements eg js var mutableobject value var reusableelement class app extends reactcomponent componentdidmount mutableobjectvalue thisforceupdate render return reusableelement last part heuristic assumption theoretical case nt violate rules still breaks case never showed yet afaik awkward unnatural way structure app react however op nt related simply breaking rule number idempotent", "d": "6/2015"}, {"body": "one possible solution use subscriptions route components listens global broadcasting new route change calls subscribe unsubscribe various future options pending like could make easier", "d": "6/2015"}, {"body": "sebmarkbage thanks extremely detailed response suspected though sure best way around solution proposed observables lead multiple rerendering nested elements figure solution saw stuff seems like would solve issue tend think particular optimization default though way default seems line thinking react gives finegrained tools optimization ready generally failing understand nt problematic anytime want encapsulate complexity global windowrelated event browser history resize events geolocation etc component guess gets obscure like support nesting pretty new react guess really trying understand properly inject global events react framework encapsulated clean way example way reactrouter works seems pretty hacky maybe state dealing global events react likely familiar concept enough", "d": "6/2015"}, {"body": "matthewmueller generally failing understand nt problematic anytime want encapsulate complexity global windowrelated event browser history resize events geolocation etc component recommended approach listen whatever info need store reading state render method time update state component rerendered", "d": "6/2015"}, {"body": "spicyj recommended approach listen whatever info need store state reading state render method time update state component rerendered yah makes sense fit nested elements type one tough deal edge cases rerendering idempotent functions multiple times big deal concretely parent triggers rerender also trigger child child would also get notified event rerender", "d": "6/2015"}, {"body": "yeah could cause multiple renders cases react could intelligent scheduling updates batching together though also get unnecessary renders case new element parent new data sideloaded may relatively uncommon", "d": "6/2015"}, {"body": "awesome yah looking forward appreciate help guys keep great work", "d": "6/2015"}, {"body": "actually think made mistake ever allowing mixins able specify mixins beside point since could happen without never allowed method redefinition blanket statement exception lifecycle methods stack userspace methods intent nt clear nt allow nt know change minds cc spicyj sebmarkbage", "d": "6/2015"}, {"body": "point release longer rely abstraction use whatever class system want probably wo nt add new features instead defer standard class system thirdparty class systems mixin abstractions", "d": "6/2015"}, {"body": "react classes autobinding documented reason javascript classes autobinding neither react tries reinvent stuff already javascript nice syntax classes react invent classes classes use standard javascript", "d": "6/2015"}, {"body": "yeah sort confusing explicitly use bind arrow functions gt problem turns arrow functions invalid syntax classes", "d": "6/2015"}, {"body": "means either", "d": "6/2015"}, {"body": "still kind ugly huh ok man thanks think better binding contexts constructor", "d": "6/2015"}, {"body": "could also use bind prefix operator vladmiller works please close issue", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "called documentation classes number issue closing feel free follow along one places", "d": "6/2015"}, {"body": "thanks pushed change stable branch updated site ghpages branch soon builds", "d": "6/2015"}, {"body": "zpao thanks", "d": "6/2015"}, {"body": "events pooled recycled save memorygc overhead", "d": "6/2015"}, {"body": "preventdefault async callback would imagine want persist outside event handler call get pulled pooled class list", "d": "6/2015"}, {"body": "want prevent event based clipboard data hell get synchronously workarounds prevent event based clipboard data without producing memory leaks", "d": "6/2015"}, {"body": "ca nt get clipboard data synchronously nt know could try persisting mentioned see calling preventdefault later anything", "d": "6/2015"}, {"body": "prevent default action immediately wait async operation meantime event continue bubble tree processed option would always prevent default action manually create trigger new event prevented nt know possible clipboard data though note react issue simply events work dom browser", "d": "6/2015"}, {"body": "fkling makes sense thanks preventdefault setstate", "d": "6/2015"}, {"body": "hacky workaround access internals reactshallowrenderer seems like something part public api", "d": "6/2015"}, {"body": "yea agree probably useful convenience similar refs since ref could expose public api tested probably bad practice call handlers inspect state directly though better test public api invoking callbacks render output", "d": "6/2015"}, {"body": "guess question similar one", "d": "6/2015"}, {"body": "rendered child instances child elements provided component associated element guarantee end rendered ps may obvious consider treated exactly like difference dedicated jsx syntax children currently writing code traverse form inputs react provide way afaik never nontesting purposes goes current best practices react explicit purpose readability keeping components isolated", "d": "6/2015"}, {"body": "think get message thanks syranide", "d": "6/2015"}, {"body": "context currently owner based meaning context passed components taht owner common owner different parent based context coming source warnings owner component creates component using component nt children nt create thats get context switch parent based next version partly exactly confusion", "d": "6/2015"}, {"body": "indeed tested react works nonfunction notation makes sense thanks", "d": "6/2015"}, {"body": "thanks filing going close though leave discussion issue", "d": "6/2015"}, {"body": "giving ref passing work", "d": "6/2015"}, {"body": "giving ref passing finddomnode work", "d": "6/2015"}, {"body": "need demo", "d": "6/2015"}, {"body": "gilbox seems work", "d": "6/2015"}, {"body": "bug happens wrapped component returns null first time called", "d": "6/2015"}, {"body": "gilbox yeah sounds like correct behavior", "d": "6/2015"}, {"body": "correct nt think explaining well correct behavior ca nt reproduce simple version bug returning instead null wrapped component simple enough", "d": "6/2015"}, {"body": "gilbox try make minimal repro case react bug like fix", "d": "6/2015"}, {"body": "gilbox fail see problem fiddle outputs null long returning null associated dom node starts returning div associated dom node output console", "d": "6/2015"}, {"body": "fail see problem fiddle closed issue code application similar link posted reason nt able replicate bug simple case", "d": "6/2015"}, {"body": "gilbox mean returns null component even though rendered element replace null actually works returns correct node noscript ie something like supposedely fixed", "d": "6/2015"}, {"body": "mean returns null component even though rendered element replace null actually works returns correct node bingo ca nt prove yet", "d": "6/2015"}, {"body": "update bug react dancer", "d": "6/2015"}, {"body": "sure another common typo would cool said e except c also times english silly inconsistent", "d": "6/2015"}, {"body": "like take stab zpao would adding noop fn returns warning wrapped block make sense common place handling errors invalid methods prop names tests required", "d": "6/2015"}, {"body": "think probably belongs alongside warning componentshouldupdate already dev", "d": "6/2015"}, {"body": "looks like job linter react library", "d": "6/2015"}, {"body": "raybooysen ideally nt think many linters check undefined variables across imports react userbase nt using one whether support usecase valid question though", "d": "6/2015"}, {"body": "closed via yes ideally part lint think could cool rule feel free suggest yannickcr andor write wink", "d": "6/2015"}, {"body": "zpao comfortable typos detection see response react start officially warn typos think try mimic behavior like nounknonwproperty warn developer code execution", "d": "6/2015"}, {"body": "yannickcr call try keep pretty minimal core added years componentshouldupdate added lot earlier incorrectlycased dom props ago another mistyped event handlers adjust less later sure currently machines fix problems kick like linting nt add totally call appreciative rules somebody wants add rules eslint makes super easy write", "d": "6/2015"}, {"body": "talking xmlns field nt think react adding could confirm using logging output react renders", "d": "6/2015"}, {"body": "swaagie sounds like couple different dependencies going see issue browsers version firefox using would great could provide jsfiddle demonstrates issue", "d": "6/2015"}, {"body": "closing due inactivity assuming swaagie solved issue swaagie fiddle demonstrates issue feel free reopen issue happily investigate", "d": "6/2015"}, {"body": "nt know anything else easy", "d": "6/2015"}, {"body": "invariant violations leaves react unstable state moment expected afaik partly catching rethrowing errors crapshoot many browsers may also significant performance impact hot codepaths", "d": "6/2015"}, {"body": "invariant violations leaves react unstable state moment expected afaik partly catching rethrowing errors crapshoot many browsers rethrowing errors test case easier demonstrate way application developing error happens even rethrowing errors example function using something like simply switches pages shows error page error happened test case way manually clear state besides removing reinserting dom element tried throws error", "d": "6/2015"}, {"body": "perhaps higher level component appwrapper contains state pass pageerrorpage props setprops app toplevel component", "d": "6/2015"}, {"body": "korakon nt matter rethrow errors intended point react internally catch rethrow errors avoid internal state breaking completely least nt undesirable sideeffects many browsers currently afaik clean way invariation violation happened particularily vulnerable piece code wrap trycatch calls react", "d": "6/2015"}, {"body": "johnydays thank using syranide yeah get point know thank", "d": "6/2015"}, {"body": "clear require cache start working would nt surprised node memoization causes issues namely case bit use generate html right namespace creates node since run process requires cached looks like feature rejected mocha may make happen run process", "d": "6/2015"}, {"body": "tried clearing require cache specific tests cause problems ends propagating problem later test chain previously nt fail suddenly whole thing complicated requirejs indirection making really hard debug nonminimal case would hurt react performance great deal cache nodes original document", "d": "6/2015"}, {"body": "chance could configure react disable memoization testing", "d": "6/2015"}, {"body": "yes creating new node time would expensive potentially could check cached node ownerdocument matches windowdocument even check come cost though sure worth support use case nt currently intend support react nt really configurable like would undertaking plan making maybe one day", "d": "6/2015"}, {"body": "idea error example nt happen without call also line text removed real life tests place breaks even absurd image tag different component remove tests run nothing special image really like understand underlying logic", "d": "6/2015"}, {"body": "happens rerenders initial render innerhtml setstate triggers create new nodes insert string html add node extract dom node put right place nodes need wrapped insert correctly things probably work fine point move nodes dummy wrapper put right place cross document elements think wrong document error nt know happening image case specifically could related update creating nodes problem updating existing nodes ok", "d": "6/2015"}, {"body": "thanks explanation look like removing react module require cache test indeed alleviate error test also run bit slower surprising repeated disk reads guess", "d": "6/2015"}, {"body": "pretty much depreciated supported favor classes going forward react longer opinion components classes constructed use whatever class mechanism prefer personally agree mixins may offer benefit certain purposes largely seem poor solution problems developers usually apply", "d": "6/2015"}, {"body": "react docs say following unfortunately launched without mixin support therefore support mixins use react classes instead working making easier support use cases without resorting mixins wonder progress almost code find github uses mixins using classes difficulties using code tackle thx", "d": "6/2015"}, {"body": "syranide close issue fast understand mean users try use mixins tell react drop mixins future", "d": "6/2015"}, {"body": "ysmood react nt dropping mixins going forward react opinion effectively made separate module could warn mixins bad idea effectively everyone would see warning really prefer mixins right wrong would find annoying subscribing react heading know mixins something avoid think warning seems like great idea surface see anything disaster practice cc zpao close issue fast deprecate mixins nt seem actionable", "d": "6/2015"}, {"body": "well least warn developers official documentation mixins antipattern realworld composition", "d": "6/2015"}, {"body": "ysmood ready deprecate mixins nt good replacements use cases probably move towards deprecating mixins reactcreateclass least months away", "d": "6/2015"}, {"body": "reactstamp may provide nice alternative mixins check love get feedback", "d": "6/2015"}, {"body": "looks like spicyj broke", "d": "6/2015"}, {"body": "cc graue", "d": "6/2015"}, {"body": "yes deep updates state like tricky nature js pass object reference remain way case exactly happening generally state great things like may want consider alternatives like deep cloning immutable data structures intention state clones expensive operation lots nuance need", "d": "6/2015"}, {"body": "thanks answer words confused thinking react handle cases", "d": "6/2015"}, {"body": "words meant mutate thisstate react make copy", "d": "6/2015"}, {"body": "provide bit information using babel transform version react exactly couple alphas published maybe building masterspecific revision", "d": "6/2015"}, {"body": "yeah transpiler babel react version github master latest seems essentially ran pull github master believe", "d": "6/2015"}, {"body": "wo nt give react currently give reacttools nothing jumping though would good could create complete repro jsbin reactjsbincom change jsx option babel point build", "d": "6/2015"}, {"body": "workaround case put keys divs inside ternary", "d": "6/2015"}, {"body": "champion thanks", "d": "6/2015"}, {"body": "responsibility sanitizing user data falls helpers usually advisable reject nonabsolute nonhttp urls really applies properties interpreted way beware styles colors sizes etc", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "comment included explains reasoning convenience simpler class abstractions set fact component classes created already use classes extend base class props context set hand nt extend base class", "d": "6/2015"}, {"body": "sure intentional either way nt going change behavior point release would break things people would fix sounds like workaround use clonewithprops instead apparently preserve context starting react context parent based anyway context longer attached element therefore impacted cloneelement clonewithprops", "d": "6/2015"}, {"body": "see use work sounds good thank", "d": "6/2015"}, {"body": "works find surprising validator function gets called twice wonder", "d": "6/2015"}, {"body": "pwmckenna information seems working master find surprising validator function gets called twice wonder still validate createelement time render time since modify props creating element", "d": "6/2015"}, {"body": "really great question discussion forum trying keep questions use stack overflow keep github bugs issue tracking", "d": "6/2015"}, {"body": "injecting global event plugins sustainable approach free reach absolutely must beware longterm consequences brief discussions topic various issues throughout little movement far future please use community forum questions", "d": "6/2015"}, {"body": "considered either concatenation props passed additionally client side could store active ids map weakset throw error warning already exists another alternative setting something like brianmcdcontextify keep sides synchronized per request", "d": "6/2015"}, {"body": "good question nt know answer", "d": "6/2015"}, {"body": "iamdustan considered either concatenation props passed yeah case property particular enticing nt guaranteed unique goes combination provided properties additionally client side could store active ids map weakset throw error warning already exists actually fairly easy guarantee clientside ids kept unique code posted ok unless misunderstanding suggestion another alternative setting something like brianmcdcontextify keep sides synchronized per request would probably take bit longer grok exactly would tie solution rate would like think lighterweight read dependency free solution main approaches considered far use combination provided properties like suggested fails uniqueness test though provide sort seed value gets shared serverside clientside cumbersome though requires passed component layers obviously fails sort encapsulation test force id provided property actually right annoying feels unnecessary still presumes consuming component make uniqueness guarantee throughout entire page context use hack clientside mounting allows refer serverrendered markup never actually figured even smells like rather fragile solution anyway yeah leads issue great solution curious hear ideas react might support use case future release obviously specific example giving imagine could solved general approach enables components dynamically generate serverside propertystate values perform successful mounting client", "d": "6/2015"}, {"body": "mostly brainstorming curious hear rest team thinks nothing say constitutes official recommendation personally would go option number really looking uuid nt want use random markup would nt match ultimately serversideclock problem ie suppose component rendered current time displaying microsecond accuracy two machines going clock skew making impossible generate matching markup incidentally since reads clock literally problem p framing problem serversideclock problem think pretty clear want way controlling current time perhaps want clock red amp green christmas eggs amp bunnies easter need way test functionality per year write unit tests verify functionality would need control time difference component need unique identifier implementation detail visible user dependency sideways data kinda sucks eeh sure near future able get around cumbersome passingdownprops problem using actually could use today officially undocumented unsupported subject change distant future able use sideways data loading perhaps combination context subscribe external data like clock help little sebmarkbage thoughts", "d": "6/2015"}, {"body": "provide sort seed value gets shared serverside clientside cumbersome though requires passed component layers obviously fails sort encapsulation test might stretch approach leveraging", "d": "6/2015"}, {"body": "jimfb technically think really comes need facility centralizing perroot data optionally automatically transmitting server client ie conceptually perroot object everyone access everything else related issue like time random numbers etc implemented interms functionality really rather unopinionated flexible would nt even strictly exposed react right reusable component ecosystem thrive think one could imagine react providing perroot uids uids seeds etc api possibly opinionated possibly sufficient imagine many benefits preferred facility centralizing transmitting necessary data", "d": "6/2015"}, {"body": "syranide think pointgoal right suppose context needs initialized user ca nt first user responsible initializing style code need root enables sharing idea shared data among subtrees intended goal afik", "d": "6/2015"}, {"body": "jimfb would nt say concerned propagation data concerned source data think real issue put differently issue seems trivially solvable theory write store provides static uid per react root write store provides counter per react root combine uid counter got deterministic guid initialize server stores default data render serverside transfer markup initial store data uid counter always client initialize client stores transferred store data render clientside remember uninitialize stores unmounting per react root context probably solves today cumbersome especially isolate per component especially nt kind framework help component reinvent wheels also send data saying exact solution draw line react provide think illustrates issue already doable really realistic", "d": "6/2015"}, {"body": "syranide right nt propagation data thing able handle mean without dictating server side architecture least transport protocol nt able help source data data needs come server management domain framework like relay seems like reliably solve could maybe solve potentially help sideways data loading think far outside domain react maybe domain related projects like relay sure react canshould help anything beyond propagation data wrong andor missinterpreting point curious steps think responsible handling", "d": "6/2015"}, {"body": "jimfb right nt propagation data able handle question think wrong andor missinterpreting point curious steps think responsible handling seems like somewhat page seems options react concern problem react expose perroot uid react provide writeonce initial data store anyone claim key store whatever consumer react serialize initialize clientside data react automatically serialize data store serverside initialize clientside data store looking seems obvious option overreaching seems could considered basic necessity like ways option would detrimental legitimate usecases imagineable option enough satisfy majority usecases clear replace react library x want rocket science would democratic seems would hurtful ecosystem reusable components one wants deal library x amp amp z various components chose different library even though largely basic purpose option abundantly clear hopefully suggesting idea somewhat pseudocode solution issue context discussion nt actually wrapper kind react api js function getperrootuid context contextdatastorerootuid undefined contextdatastorerootuid mathrandom return contextdatastorerootuid var rootuidcounters function incrementperrootcounter context var rootuid getperrootuid context rootuidcounters rootuid undefined rootuidcounters rootuid return rootuidcounters rootuid class initialdatastorewrapper constructor props state context thiscontextdatastore thispropsdata class appwithguid constructor props state context thisstate guid incrementperrootcounter context server var datastoreobject var markup reactrendertostring transfer markup datastoreobject client client var datastoreobject datastoreobject server var datastorewrapper reactrender hope gets point across least total crap code correct saying solution nt trying illustrate utility something like also advocating extend percomponent data usually associated model data relay flux etc suggesting basic utility allowing components execute deterministically purpose guid generation random numbers etc shout made sense", "d": "6/2015"}, {"body": "syranide makes sense actually talks internally requiring io go react things like gettime therefore transitively getrandomnumber would count io think idea proposed mostly academic purposes thought exercise proposal implementation might add fuel discussion suppose provide uuid generator provide time api provide create huge list possible apis provide know covered everyone else use cases preference provide basic building blocks people build whatever wantneed question common theme underlying api would make easier implement things user land contextsidewaysdata fall short needed brainstorming somehow magically allowed context variable default value component could require dependency context variable could provided context allow alternativeoverwrittenmocked implementations variable nt context stack defaulted shared implementation similarly default context variable reads current system time unless overwritten manually solve serversideclock problem similarly custom datastore component could requiredesire default implementation available overwritten solve unit testing andor ssr would sufficient could somehow make work would solve problem", "d": "6/2015"}, {"body": "actually talks internally requiring io go react things like gettime therefore transitively getrandomnumber would count io think idea proposed mostly academic purposes thought exercise proposal implementation might add fuel discussion interesting discussions curious exactly mean requiring io go react kinds io referring sense data exist outside components like flux stores data serialized guaranteed represent entire state replies purely gut feeling intuition brainstorming suppose provide uuid generator provide time api provide create huge list possible apis provide know covered everyone else use cases preference provide basic building blocks people build whatever wantneed question common theme underlying api would make easier implement things user land contextsidewaysdata fall short needed way see give perroot time seed uuid way store perroot local data component able accomplish useful deterministic process without requiring additional data sent client server uuid necessary producing markup guids seems like necessity html deficiencies otherwise useful think might uses think key point features benefit one definitionsource probably detrimental even values transferred server client react provide components make demands libraries consumer component neither seems beneficial redundant leads duplication data code inconsistencies etc time seed uuid fairly limited usefulness reusable components needed could provided asneeded basis consumer want handsoff uuid intrinsically useful reusable reactdom components think primary issue perroot local data simply nt exist currently even seed unable use anything stateful nowhere appropriate store data without putting explicit requirements consumer making specific perroot data storage available context slippery slope maintenance perspective somehow magically allowed context variable default value yeah seems technically indeed solution lack root local data primary problem time seed uuid secondary problem may decide provide someall core think would mistake least make available separate preferred modules possibly even interfaces reusable components specify dependencies less immediate concern ps think must function ondemand", "d": "6/2015"}, {"body": "like said mostly academic exercises halfserious idea said couple variants idea nt allow component data enterexit jsvm without passing react maybe manage layer component flux store point manage io react gains lot power super interesting things instance replay io since beginning time restore rewind react tree point time idea would useful leads interesting conclusions uuids many use cases instance suppose result click event want create new data object new transaction sent server want identifier lookup prevent accidental replays retries allow supplied used render maybe use cases vanish regards making deterministic potentially hard part component render order guaranteed react api may notsodistantfuture start rendering parallel via workers yeah clockseeduuid need functionsdatastoressomethingmorecomplexthanaconstant especially since need able handle things like outoforder renders making naive implementations things like seeduuid nondeterministic intuition solution somehow involves default value context variable honestly nt given enough thought yet nt know thing would work", "d": "6/2015"}, {"body": "jimfb idea would useful leads interesting conclusions think seems like interesting exercise determining better ways developers structure apps perhaps much future direction react api particular mentioned gist imho strength react close featurewise manually wiring uis without associated burdens even without opinionated know academic saying uuids many use cases thought feel like overreach uuids would purpose separating react roots benefit reusable components seems uuids purpose outside scope react provides benefit communication something reusable components concerned communicate callbacks regards making deterministic potentially hard part component render order guaranteed react api may notsodistantfuture start rendering parallel via workers far understood realistically parallelized discussion relates life cycle events sideeffects allowed would unaffected yeah clockseeduuid need functionsdatastoressomethingmorecomplexthanaconstant especially since need able handle things like outoforder renders making naive implementations things like seeduuid nondeterministic clock would dynamic value seed uuid would static values per root although seed provided consumer probably mutated per use also dynamic avoid separate implementations random number generator algorithm producing sequences separately intuition solution somehow involves default value context variable honestly nt given enough thought yet nt know thing would work yeah default value inject context variable seems like solution exactly implemented make sense interesting problem sure nt want every component specifyingproviding default", "d": "6/2015"}, {"body": "soooo tried read issue conversation going head p answered forgive currently reasonable workaround problem react component libraries leverage see bunch options app builders much libraries want generate ids components control entire render tree many thanks", "d": "6/2015"}, {"body": "experimented solution making available common interface js var reactrootstore require reactrootstore var testproperty reactrootstorecreateproperty var helloworld reactcreateclass contexttypes reactrootstorecontexttypes render function var initialvalue testpropertyget testpropertyset return hello initialvalue testpropertyget root element must wrapped context variable exposed reactrender reactrootstorewrapelement function return documentgetelementbyid container works possible code repo minor errorbug committed get jsfiddle slightly older code works shows concept provide store behaves deterministically going server client perroot global", "d": "6/2015"}, {"body": "still maintain part", "d": "6/2015"}, {"body": "part reactmagic fixed need deploy web version", "d": "6/2015"}, {"body": "pushed update fixed", "d": "6/2015"}, {"body": "would probably adding property data table would manually allow agree never change row height caching performance optimizations allows default recalculate position rerender", "d": "6/2015"}, {"body": "think want file fixeddatatable repo", "d": "6/2015"}, {"body": "discussion", "d": "6/2015"}, {"body": "change made everybody please submit pull request could modify version react could specify value string react wo nt add currently public method inject properties sure ever expose one", "d": "6/2015"}, {"body": "opened pr address", "d": "6/2015"}, {"body": "merged hurray close tada", "d": "6/2015"}, {"body": "would favor creating generic query method takes query stringing using css selectors custom syntax finding non generic query stringing items ie refs ideal syntax", "d": "6/2015"}, {"body": "still days later", "d": "6/2015"}, {"body": "zpao action want take", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "still broken going leads shows page", "d": "6/2015"}, {"body": "maybe browser cached redirect working", "d": "6/2015"}, {"body": "nt realize sent back makes sense would cache", "d": "6/2015"}, {"body": "pr merged probably close", "d": "6/2015"}, {"body": "thanks taking", "d": "6/2015"}, {"body": "may u need call render extract data dependencies", "d": "6/2015"}, {"body": "cute integration observable data react components boils wrapping data observable function including mixin referencing observable data render computed observable render method changes changing observable data refrences forceupdate automatically happens might little much magic taste wrapping data nt appealing cute simple react component becomes anyways great discussion torn sideways data loading event emitters pure parameter based top style problem magical observation invariably seems like always end deeply understanding designing around magic works possibly defeats purpose magic", "d": "6/2015"}, {"body": "another workaround override initially loaded allows us set custom accepted html properties js load htmldompropertyconfig loading react ever set custom properties var htmldompropertyconfig require reactlibhtmldompropertyconfig htmldompropertyconfigpropertiesnwdisable null htmldompropertyconfigpropertiesnwfaketop null htmldompropertyconfigpropertiesnwuseragent null load react binds configs load time var react require react", "d": "6/2015"}, {"body": "going unsupported workarounds also call anytime react required", "d": "6/2015"}, {"body": "prefer term version dependant workaround something like p thanks tip cleans sanity load order", "d": "6/2015"}, {"body": "pretty sure fixed earlier closing reopen fixed", "d": "6/2015"}, {"body": "hi yall happy pr something fix still unresolved consensus correct heuristic though", "d": "6/2015"}, {"body": "isnt react answer materializecss ensures form submitted correct value sent select element instance form container id subjectupdate select name type capture change event jquery follows subjectupdate select nametype change function consolelog select changed val", "d": "6/2015"}, {"body": "issue passing callbacks around trying setstate using externally fetched value within componentwillmount encountering issue", "d": "6/2015"}, {"body": "reason using instead also provide jsfiddle demonstrates issue", "d": "6/2015"}, {"body": "noticed similar issues workers fix", "d": "6/2015"}, {"body": "jimfb thought failing different place turns trying thing original poster sorry noise initialstate constructor simpler programming model way cascading dropdowns code makes piecemeal calls setstate deal initial preselections also react valuelink requestchange events using initial state requires combine piece code pass candidate state around", "d": "6/2015"}, {"body": "sebmarkbage specific", "d": "6/2015"}, {"body": "spicyj found", "d": "6/2015"}, {"body": "stack getactiveelement reactinputselectiongetselectioninformation mixininitializeall mixinperform batchedmountcomponentintonode happen server though", "d": "6/2015"}, {"body": "someone pointed thread like chime usecase rewrite reactresolver avoid several context issues heavily dependent server desired root element rendered normally via kick lifecycle containers wrap lazyloaded components amp fetch data via promises data returned called within container promises resolve wrapped component renders kicking steps tree completes aggregates lazyloaded data final called time data already available amp full tree renders synchronously alternative would constantly rerender full tree root promises appear seems poor architecturally different algorithms server amp client rather universal ca nt say isomorphic without mjackson knowing one since neutered server eric ft", "d": "6/2015"}, {"body": "btw possible call asynchronously callback passed reactrender seems called always synchronously", "d": "6/2015"}, {"body": "bad thing still use settimeout need btw sure maybe simple usecases sync nt know nt see documented would nice know", "d": "6/2015"}, {"body": "slorber wonder reason receive callback question directly comes mind would behavior rendering triggered rendering callback called possible reproduce think nt occur callback called synchronously except using", "d": "6/2015"}, {"body": "actually seems right complex app callback seems called synchronously clear guess react guarantee synchronicity future may change behavior later like decide use something like future maybe", "d": "6/2015"}, {"body": "updates happen asynchronously calling reactrender new react element container might start batching initial renders", "d": "6/2015"}, {"body": "nice know mean new react element spicyj", "d": "6/2015"}, {"body": "result reactcreateelement jsx expression", "d": "6/2015"}, {"body": "spicyj nt asking definition reactelement rather mean new element container mean render callback called asynchronously", "d": "6/2015"}, {"body": "second third renders believe async", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "hi wonder closed lost like hour mostly fault still basically send undefined createelement happen never consider possibility sent undefined react drop dead hit anvil eventually find debugger lets get right offending createelement call still isnt exactly enough really considering possibility undefined sent anyway point really common calls really proliferate rendering something sophisticated really checked warning thrown please", "d": "6/2015"}, {"body": "unphased issue closed linked one", "d": "6/2015"}, {"body": "pretty sure fixed master also improved error message mount time", "d": "6/2015"}, {"body": "awesome thanks", "d": "6/2015"}, {"body": "using jsdom mocha unit testing ran problem", "d": "6/2015"}, {"body": "comes fairly often training sessions often someone uses instead bloodyowl looks like got good handle make pr", "d": "6/2015"}, {"body": "mjackson remaining question warn event name right letters wrong case anywhere fulllowercase event names", "d": "6/2015"}, {"body": "please add support immutablejs alike problem indeed use loop personally run issue computed styles fields expressed via getters", "d": "6/2015"}, {"body": "going count part likely support either neither", "d": "6/2015"}, {"body": "ah see thanks response since syranide pointed prop technically separate issue issue may still contender even eventually rejected good hope wo nt case see happens first though yes", "d": "6/2015"}, {"body": "true technical reason need consistent hard imagine us one", "d": "6/2015"}, {"body": "thanks bodjkin saved lot time simply forgotten add react component agree error pretty confusing even message got", "d": "6/2015"}, {"body": "issue cosmith typeerror really nt helpful real error tangentially related types", "d": "6/2015"}, {"body": "cosmith johntyree see warning console logged exception thrown one reactcreateelement type null undefined string dom elements reactclass composite components", "d": "6/2015"}, {"body": "spicyj good question probably nt recall would warning exception", "d": "6/2015"}, {"body": "case specifically want able inline calls reactcreateelement without changing runtime behavior createelement never throws", "d": "6/2015"}, {"body": "made throw granted even nt like idea much sure better solution emitting warning everything explodes end day dev going google error completely opaque find thread something similar move lives", "d": "6/2015"}, {"body": "sure help someone future another way get error referencing component nt added module exports throw error mentioned fix js const react require react class mycomponent extends reactcomponent moduleexports mycomponent", "d": "6/2015"}, {"body": "hopefully make touppercase error little less cryptic posted", "d": "6/2015"}, {"body": "nice", "d": "6/2015"}, {"body": "trying getting error later found element inline css entry root removing entry fixed", "d": "6/2015"}, {"body": "struggling error pointers main app testcomponentjsx javascript var react require react var testcomponent reactcreateclass render function return asdfasdf moduleexport testcomponent using latest version rect reactify browserify compile", "d": "6/2015"}, {"body": "runrevben file check exports line typo guess", "d": "6/2015"}, {"body": "thank saved much frustration", "d": "6/2015"}, {"body": "wow lost hours life issue glad fixed sooner released better", "d": "6/2015"}, {"body": "jun pm sam newman notifications githubcom wrote wow lost hours life issue glad fixed sooner released better reply email directly view github", "d": "6/2015"}, {"body": "next time maybe nt use unstable undocumented features nt want run trouble", "d": "6/2015"}, {"body": "franleplant question", "d": "6/2015"}, {"body": "experimenting code handle uncancellable promises issue thoughly tested solution wrap callback like componentdidmount thisifmounted initifmounted componentwillunmount thisifmountedunmount onsearch return ajax thisifmounted response gt thissetstate response notice callback wrapped code looks like function initifmounted basically keeps bag pending callbacks nullified dereference pending promises finally finish callback given see null callbacks bag nothing disclaimer whipped nt thoroughly tested yet feel free use break tell nt work", "d": "6/2015"}, {"body": "jordansexton exact issue inspect texthtml content initial http request html actually correct somehow dom rendering browser seems parse render time client side react code try reuse markup complains difference spicyj markup client reactrendertostring server browser reinterprets something different due fix issue unable sent disabled disabled instead using syntax since always converted bare attribute parsed browser described", "d": "6/2015"}, {"body": "goldensunliu actually fixed issue method suggested spicyj trick compare markup normally rendered client markup rendered server call client server compare results diff viewer see saying instances etc red herrings something else markup completely unrelated case mismatch image attributes using client side rendering images server rendering regular source changed using since nt require detection unavailable server bug gone", "d": "6/2015"}, {"body": "spicyj comes often bit surprising addition process diagnose issue pretty painful change code client use get diff replace hash generated server compare two usefully think idea warning message displays actual mismatch know would expensive warning thrown development anyway", "d": "6/2015"}, {"body": "thanks jordansexton makes quite lot sense take look actual mismatch process seems archaic gets job done", "d": "6/2015"}, {"body": "smells like bindings", "d": "6/2015"}, {"body": "sure relates current proposalimplementation found enabling composition higherorder manipulation actually key feature data dependency tracking especially use reactive data source flux flux wire anything else provides updates take following example reactnexus wonder data binding component api seems higherordercomponentsreturning decorators provide nice way expressing data binding without polluting component methods namespace however sebmarkbage noted risk pollution props namespace instead using props transformer decorator reacttransformprops clean uprename props passing inner component acknowledge might become problematic future higherordercomponents become commonplace risks name clashing increases could solved using symbols property keys checking support keyed props jsx support computed inline props keys although one always use computed properties object spread sorry gets little offtopic seems still find right sweet abstractionapi expressing data deps component level", "d": "6/2015"}, {"body": "much fun children function pattern values change time believe elierotenberg first came current usage model springs via rebound reactsprings example props collision usage owner state also nest multiple springs react manages hard bits observables ha could also accept props graphql queries rough attempt sketch flux", "d": "6/2015"}, {"body": "used pattern called render callbacks asana ultimately moving away pros potential collision props easy implement author user cons extremely difficult implement since render callback may close state imagine component tree counter state accessed render callback props updates counter update stale version counter result forced always update store testing components isolation became difficult inevitably developers put complex logic render callbacks component render wanted test logic natural way render whole tree test store component made impossible use shallow renderer moving model takes store receives new data store clones reactelement overriding specific prop many ways pattern taking component constructor props went approach easiest model typescript", "d": "6/2015"}, {"body": "terrific points ca nt think way around either without breaking sideways requirement", "d": "6/2015"}, {"body": "threepointone sounds exactly like one implementation proposals power", "d": "6/2015"}, {"body": "example serious drawback making store always update thinking children would rendered without chain anyway thanks time", "d": "6/2015"}, {"body": "threepointone exactly boundaries unclear impact exactly perf worries members team worries combined difficulty testing compelled switch using", "d": "6/2015"}, {"body": "testing angle definitely problem shallowrenderer recognized render callbacks would help ps render callback thumbsup", "d": "6/2015"}, {"body": "sebmarkbage current discussion esobservable would guarenteed async method provided shortcut subscribe synchronously though validity syncasync apis currently debated chimed ticket use case mentioned favor synchronous subscription nt know might anything add think ideas clean pattern handling external state though playing around bit leaning favor hoc approach also gaearon simplified hoc bit using static using rather looks really nice proposed decorators class decorator could even go far adding getter make come close original proposed api minus local state affecting observable subscriptions agree good thing much less noise around subscribe unsubscribe", "d": "6/2015"}, {"body": "lack synchronous subscription could huge problem", "d": "6/2015"}, {"body": "struggling issue thanks theludd least know even remotely solve added dynamic key form prettiest solution either u get around issue lost focus", "d": "6/2015"}, {"body": "ran head long problem must say agree zpao surprising rendertostaticmarkup side effects seems like bug", "d": "6/2015"}, {"body": "ran anyone else coming stoppropagation event work either ended building wrapper component handle basically acting mini router userflow", "d": "6/2015"}, {"body": "work mock function always supply object without nested objects merge correctly", "d": "6/2015"}, {"body": "language keys let say multilingual application calls kinds elements lot could move calls render method language chosen generally constant unless user wants change language case would like one time invalidation constants would something like conceivable", "d": "6/2015"}, {"body": "element already considered constant jsx element hoisted", "d": "6/2015"}, {"body": "deprecating jsxtransformer closing", "d": "6/2015"}, {"body": "zomg exciting", "d": "6/2015"}, {"body": "presence absence function closure orthogonal statefulness function references constants closure still pure function function might closure attached still sideeffectful taking parameter reference mutable data structure mutating deku approach actually react nt really separated rest programming community science matter using well known concepts nodes ui tree pure functions name correctly instead risking confusing programmers introducing creative names pretty common programming concepts", "d": "6/2015"}, {"body": "closure captured state function closure orthogonal statefulness clarified captured state nt need condescending terminology lesson thanks internal react issue tracker used communication tracking issues blog post broadcasting new creative concepts expected reader aware understands distinction", "d": "6/2015"}, {"body": "clarify matters development open curtesy lots teams kind progression private even way much virtue facetoface meetings would like us transparent make happen nt want situation tailor communication clear timely fashion blog posts definitely nt want anyone hesitate post feel need clear chain arguments make understandable broader audience without context fear terminology police space accessible core team possible even means contextual terminology missing information part wider conversations even exploratory concepts may may end already commonly known concepts pushing back feel free ask clarifying questions though", "d": "6/2015"}, {"body": "side note", "d": "6/2015"}, {"body": "jimfb pass props dev remove old props mutation warnings since handling deprecation internally", "d": "6/2015"}, {"body": "yes update umbrella issue", "d": "6/2015"}, {"body": "deprecate getdomnode replaced reactfinddomnode already deprecated nt group", "d": "6/2015"}, {"body": "chicoxyzzy nt runtime warning", "d": "6/2015"}, {"body": "spicyj maybe release point release add deprecations comes around kill code seems work time left release", "d": "6/2015"}, {"body": "nmn generally nt add new functionalitydeprecations point releases minor bug fixes also working hard get door increasing scope release wo nt make happen faster", "d": "6/2015"}, {"body": "another request react extremely difficult test headless environments issue", "d": "6/2015"}, {"body": "reference see reactwithaddonsrendersubtreeintocontainer", "d": "6/2015"}, {"body": "progress made towards", "d": "6/2015"}, {"body": "bluejamesbond none explicitly web workers though done lot refactoring recently goal making possible multiple reconcilers make things serializable helps goal", "d": "6/2015"}, {"body": "currently needing feature thanks workaround", "d": "6/2015"}, {"body": "think support createelement bypassed easily environments like om defaultprops proptypes wo nt work think everything else", "d": "6/2015"}, {"body": "useful use immutable map data structures eg immutablejs maps regular dom elements style props closed considered similar enough issue either would done probably last september also related issue specifically matter regular dom elements style props sebmarkbage remarked apropos immutable persistent data structures desired feature ability combine multiple constants lightweight way without actually copying already pointed even efficient module level scope exception dynamic values stylesbase width thispropswidth might need persistent object goal get engines need start designing mind polyfill immutable record object immutablejs something like general data structure later replaced native record object compile support nt think introduce new proprietary data type difficult upgrade general solution persistent records imminent need wo nt imminent need aspects style model proven introduce something difficult undo immutableobject abstraction palatable upgradable move forward instead prove imminent value ca nt wait data types", "d": "6/2015"}, {"body": "show benefits streaming responses third party apis heavy database requests cause used dustjs work around great react could", "d": "6/2015"}, {"body": "also streaming coming browser could become benefit client", "d": "6/2015"}, {"body": "jakearchibald help understand streams could help client us would way set innerhtml stream thinking something else", "d": "6/2015"}, {"body": "spicyj streams land browser streamsupporting apis follow pretty certain given browser already currently exposed able get streaming document fragment maybe domenic discussion links video write innerhtml twice partial result full result horribly hacky improve render time", "d": "6/2015"}, {"body": "pretty tentative current thoughts along lines", "d": "6/2015"}, {"body": "thanks references", "d": "6/2015"}, {"body": "bunch experimentation related fix able trace issue specifically fact event default event handlers added part nt removed unmounting looks like mounted attaches listeners etc leads us finally function returned getting used think exposed callable called component removed dom clear sure best handle given fairly new react source sort massive conventions use places look", "d": "6/2015"}, {"body": "pletcher right nt removed added per document top level nt really problem", "d": "6/2015"}, {"body": "right right seems like handler getting attched firing event causes node get recached unmounted least stack points climb browser native handling removing component triggering handler", "d": "6/2015"}, {"body": "yes fix probably change react event handling fire events removed nodes another root still mounted ca nt remove toplevel handler anyway cc", "d": "6/2015"}, {"body": "spicyj think intentionally fire events removed nodes pretty sure unit test ensuring fire event nodes even removed part event handler event bubbles", "d": "6/2015"}, {"body": "yeah spec says suppose sufficiently vague imply nonfatal still undefined behavior", "d": "6/2015"}, {"body": "yeah goes back", "d": "6/2015"}, {"body": "want chime cents experience using react coffeescript jsx top coffee file import elements plan using render methods end looking like render div myfirstprop test mysecondprop foobar suprisingly similar jsonml less clutter least opinion mind readability issue think unnecessary add another notation since coffeescript enforces indentation clearly demonstrates parentchild relationships elements never use jsx components jsonml necessary terms alternative jsx jsonml necessity would probably possible wrap data coming via native js function jmltonative node return null node null var elementname node elementprops node var element reactdom elementname var elementchild nodelength jmltonative node null return element elementchild elementchild render function jsonml div classname container fancybutton disabled true span return jmltonative jsonml nt know sort performance hit actual", "d": "6/2015"}, {"body": "spicyj curious problem know solution silent exceptions reactjs hard time silent breaking react time debugging understand useful app production throw exceptions talking situation app component break silently json endpoint change example way turn silent breaking reactapp would save lot time many people believe reactjs devs similar problem", "d": "6/2015"}, {"body": "repeat react eat exceptions part code throwing exception bubbling top level something react catching promises default common cause nt terminate every promise chain call libraries could also catch exceptions", "d": "6/2015"}, {"body": "spicyj thanks patience know good blog postmore reference cases someone handled kind unwanted behavior", "d": "6/2015"}, {"body": "post promises issue", "d": "6/2015"}, {"body": "spicyj thank much", "d": "6/2015"}, {"body": "closed", "d": "6/2015"}, {"body": "got wondering thing taoeffect conversation think documentation issue says emphasis mine since jsx javascript identifiers discouraged xml attribute names opinion suggests valid jsx valid javascript therefore use class changed something like since jsx expressions evaluated dom nodes attributes follow naming conventions ie instead point nt", "d": "6/2015"}, {"body": "something would really handy opinion lot render methods similar following one nt really like using prefer explicit way passing properties wish something similar object initializer shorthand bad different meaning jsx smile maybe alternative good enough though", "d": "6/2015"}, {"body": "proposal able afraid destructuring best solution", "d": "6/2015"}, {"body": "common use blacklist passing props wrapper components could use inverse whitelist probably best solve outside react like blacklist classnames similar useful modules", "d": "6/2015"}, {"body": "spicyj would love tackle jumping little lost huge codebase found seems place defines built dom nodes unsure proper place warn would also unsure proper place put test would reactdomtest reactelementtest reactelementvalidatortest reactjsxelementtest etc", "d": "6/2015"}, {"body": "probably place check dangerous tag names would reasonable place rename function add warning reactdomcomponenttest probably reasonable place test find somewhere else probably fine", "d": "6/2015"}, {"body": "would love see use csstransitiongroup animating transition screens app every screen custom enter leave animation would like set enter animation new screen leave animation disappearing screen", "d": "6/2015"}, {"body": "little control animation classes would nice addition react addition making animation libraries accessible proposal makes easier reuse existing animation css nt follow enterleaveactive naming convention", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "using componentdidupdate aside promises logical way handling post setstate hook promises reflect current stateofopinion javascript community common react code much readable optional callback argument bump", "d": "6/2015"}, {"body": "would use pattern fact probably antipattern fire event updates case may triggers multiple rendering passes multiple layout passes significantly worse performance implications", "d": "6/2015"}, {"body": "two code examples functionally different anytime parent need child updated dom place pending states resolved would candidate promise come contrived example lets say selection state changes rendered component width parent needs calculate new position account new child width yes dom issues accounted componentdidupdate others point point issue transition setstate interface something inline js community standards", "d": "6/2015"}, {"body": "problem existing js community practices often make code difficult reason nice thing lifecycle methods make easy reason nt side effects happening unexpected places due callback everything handled lifecycle methods would personally advocate removing callback altogether", "d": "6/2015"}, {"body": "get exception hope fixed soon", "d": "6/2015"}, {"body": "spicyj anything stopping people implementing suggested fix", "d": "6/2015"}, {"body": "encountering similar issue", "d": "6/2015"}, {"body": "anything stopping people implementing suggested fix guess pr would welcome", "d": "6/2015"}, {"body": "gaearon yeah", "d": "6/2015"}, {"body": "feeling proper way fix would prop like reactdominput first render client true component grab new value run onchange handler incorporate react know reusing markup came server possible however willmountdidmount feel bit hacky bits information react exposes first render server generated markup quite lowlevel implementation detail reason may worthwhile introduce new lifecycle event like accepts old dom node argument anything like values injected browser optionally slurped nodes like reactdominput incorporated react flow", "d": "6/2015"}, {"body": "like offer cents subject using parent based context form components bit lack good update mechanism parent children depending context led creating parallel flux like mechanism form functioning store instance passes method via context components register mount form trigger change propagates fluxy works ok destroys composability model react components general strategy wrapping component hoc nt work places new wrapping component outside update channel instead middle props great benefit prop system flow top intercepted anything stuck case using flux like update system wrapping component would also need listen form run issue wrapping component original wrapee component listening form instead hoc taking passing data original component context clearly needs protected somewhat components business particular context need simple jump data stream component wants specific case form components children isolated context passes component receive however consumer wants wrap hoc set defaults adjust behavior straightforward way", "d": "6/2015"}, {"body": "say context api really ought allow intermediate authorized components act reducers said context way components reducemap props pass children difference whereas props public steam context private opt stream", "d": "6/2015"}, {"body": "played bit idea subscription based context reactsidecontext hood context broadcasters expose subscribe key cb getvalue key interface children subscription context key bubbles context tree reaches either broadcaster particular key top tree broadcasters emit changes context keys via broadcast key newvalue otherkeys broadcasts keys observes keys class decorators tie api react components using propagate context tree component tree enqueue update response context change bit boilerplate setup api equivalent current proposal avoid name clashes context trees unique need reference context order broadcast observe keys within", "d": "6/2015"}, {"body": "oveddan thanks works perfectly", "d": "6/2015"}, {"body": "preferred way testing react using shallow rendering nt suffer need mock components even nt anything", "d": "6/2015"}, {"body": "useful according docs still experimental feature docs going changed soon", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "makes debugging react apps much difficult", "d": "6/2015"}, {"body": "scary one child component error take entire component tree would awesome put trycatch statements key components tree", "d": "6/2015"}, {"body": "working isomorphic app many components lean messy thirdparty apis relatively high risk developer write new component makes bad assumptions data receives since render server side destroys request user get part page decided take aggressive approach problem wrapping reactcreateelement app replacing lifecycle methods error handling thinking thing extending component class even though leaves app invalid state thought preferable rendering nothing user link code working reason really", "d": "6/2015"}, {"body": "skiano working reason stop eventual solution little flexible efficient similar spirit", "d": "6/2015"}, {"body": "key accessible via getter many instances one would need know unique child array children something happened simple example would list items get passed controller view children prop say handler takes param sets something parent internal state passes prop child parent render method like key nt accessible need pass another arbitrary prop like value child redundant", "d": "6/2015"}, {"body": "epferrari could always bind imagine", "d": "6/2015"}, {"body": "mathieumg yeah man react complain bind component method component suppose one could use utility function curry either way contrived awful add extra prop counterintuitive suppose nt want reset component since pass reference suppose someone could overwrite accident nt know course solved anyway seems lots things react built keep novices shooting foot good bad depending cest la vie", "d": "6/2015"}, {"body": "react nt complain provide second argument eg work without warnings since useless", "d": "6/2015"}, {"body": "never tried argument scoffed warning moved thanks tip", "d": "6/2015"}, {"body": "tripped expected return unmounted components", "d": "6/2015"}, {"body": "guess throwing makes sense error message cryptic uncaught error invariant violation component keys getdomnode handlechange props context state refs reactinternalinstance contains render method mounted dom honestly thought duplicate react something nt even bother check whether component mounted nt", "d": "6/2015"}, {"body": "gaearon tracking error mesage verbiage", "d": "6/2015"}, {"body": "regards original issuetopic sounds like issue might related reactbootstrap calling update unmounted reactdominput component right next steps issue confirmrepro bug latest react reactbootstrap issue still present file bug reactbootstrap updating unmounted component mfunkie wilkerlucio chetstone help one since guys ones see bug end updating unmounted component noop meaning componentdidupdate probably nt called least nt throw reactdominput see error boundaries help", "d": "6/2015"}, {"body": "appears still issue encountered trying different parts form validation happen onblur onclick seems change dom state effected onblur button containing onclick onclick fire see variation example provided enter text click button twice see click true create new issue reference one", "d": "6/2015"}, {"body": "deprecating jsxtransformer closing", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "jarsbe thank much problems default props used undefined", "d": "6/2015"}, {"body": "fwiw relatively easy hack fragment component react treated array children react autogenerate keys since happens initial validation components wo nt throw usual keys supplied error said hack solves gaearon talking deal ugly array syntaxsetting arbitrary keys jsx issue returning multiple nodes root component render method problem idea component needs return one elementnode seems perfectly reasonable jsx structure end dom foo bar baz nt think principleofleastsurprise violation components already kinds surprising things dom using lifecycle hooks look common wormhole pattern generally accepted component necessarily result single element created fine compromises made work dom nt optimizations either even liking array syntax many users mentioned wrapper elements break styling layout serious ways tables obvious flexbox also major issue already css reapplies flex rules wrapper elements exist react pretty ugly usecases presented pretty sure could replace getbunchofcomponents visual output would without introducing practical technical issues related components fragments root requires developers compromise making isolated reusable components heaven help decide want reuse bunch components elsewhere underlying implementation issue react nt think accepted", "d": "6/2015"}, {"body": "thomasboyt edit mistake conflated arguments tablediscussion largely agree saying think still problems components opaque intended useful transparent wrapper becomes opaque parent imagine see children perhaps simply better solution allaround still including necessary supporting functionality problem idea component needs return one elementnode seems perfectly reasonable jsx structure components dumb wrappers purpose imho seems returning multiple elements blocks useful expectations example get companion future renders element returns nodes must produce array nodes instead think important issue readability imho biggest selling point react everything explicit html looking makes sense cell coming perhaps actually wrong rendering cells knows perhaps actually dynamic depends prop external state many variations problem get harier consider nonhtmldom frontends may explicit expectations another thing consider elements opaque replace able interact individual cells even deduce many even though may accepts guarantee actually interact requires developers compromise making isolated reusable components heaven help decide want reuse bunch components elsewhere underlying implementation issue react nt think accepted requires developers compromise making isolated exactly problem ask component return multiple elements longer isolated substituted component leaking parent hammer nails underlying implementation issue separate issue whether actually done decision nt see one rare usecase convincing argument without considering tradeoffs comes alternative solutions imho nt see problem explicit allows us keep useful expectations performance problem rescue transparent arrayobjectlike type one update independently parent react devs authority nt see convincing argument considering various sideeffects even sure agree presented solution good pattern even supported edit clarify perhaps components may able return multiple elements future obviously beneficial usecases especially context passing children like one show thomasboyt readability maintained", "d": "6/2015"}, {"body": "think need bit coffee respond philosophical side conversation thanks good points syranide implementation side started poking around last night see viable change scope leading spike threw little demo observations implementation side things surprisingly tricky retrofit system expects component node support nodes initially thought try tracking fragments dom operations side generated mutation instructions could stay treat fragments like node could nt think good way add state node countswhich nodes fragments dom state tracking though something like comment fencing prinzhorn noted could work wary anything would require dom lookup considering relative cost idea discarded added field children component could track number root nodes fragment actually contains problem easy enough initial render counting children fragment updating fragment node count subsequent mutations seems trickier still done branch see many dom operations rely accessing parent node element looked internal node id appendmoveremove elements see since updatecomponent cycle responsible passing id along could changed lookup closest parent dom node sounds expensive alternatively may possible internal registry fragment keys real node keys still convinced requiring fragments maintain count root nodes best way though least get demo hacked together quite rapidly quite late night anyone else suggestion implementation feel free chime gt", "d": "6/2015"}, {"body": "thomasboyt iirc main implementation obstacle comes react referencing child nodes work one node suddenly become number nodes may happen without invoking parent may also happen several components deep wrapping mistaken pretty trivial react support multiple root elements long number never changes nt think would especially hard make work react truly proper solution problematic probably involve dropping", "d": "6/2015"}, {"body": "syranide right solution working actually introduces new nodeindex supposed real offset node reminds need go back remove since think unused branch note problematic number root elements changes component needs updated whenever previous sibling component node count changes still need find solution", "d": "6/2015"}, {"body": "also run flexbox issues syranide could please elaborate bit getbunchofcomponents proposed solution new react hard fully get idea define function apply", "d": "6/2015"}, {"body": "landabaso", "d": "6/2015"}, {"body": "thanks help ssorallen works great importance component keys reactjs", "d": "6/2015"}, {"body": "spicyj seems completely backwards way change behavior", "d": "6/2015"}, {"body": "tyrsius could create default react button component always", "d": "6/2015"}, {"body": "way actually override talking making latter nt really changing backwards behavior", "d": "6/2015"}, {"body": "recommending approach react focused matching browser behavior modifying regardless backwards", "d": "6/2015"}, {"body": "seeing enterleave well support transition use case handles one transition timing event", "d": "6/2015"}, {"body": "favour idea believe would side effect fixing one issues ie warnings conditionally use different content client server eg static link home server js navigation client based test probably wo nt use much also like idea able control serialization deserialization components client", "d": "6/2015"}, {"body": "able context fairly easily", "d": "6/2015"}, {"body": "deprecating reacttools amp jsxtransformer closing", "d": "6/2015"}, {"body": "using atm mridgway approach sounds reasonable", "d": "6/2015"}, {"body": "slightly different take issue handle asynchronous loading code chunks produced bundler webpack discussed ticket issue async rendering support initial render appears null relevant chunks nt yet loaded first render pass resulting root dom checksum fail everything falls place quickly afterwards result flicker ui working locally worse field especially chunks downloaded reasonable size say gt ability split big apps multiple chunks important us solved data fetching issue used reactrouter nested routes traversed prior rendering server fetch data dependencies last piece puzzle blocking us moving fully react solution frontend", "d": "6/2015"}, {"body": "anatomic react responsibility job chunk appropriately defer rendering necessary chunks loaded put differently one components dependency external library obviously problem satisify trying use react could nt even tried applies across board feel free implement alternative strategies may suit better say inherently opinionated something react even needs offer best left community", "d": "6/2015"}, {"body": "better keep async stuff outside scope react components example js import react react import layout componentslayout import notfoundpage componentsnotfoundpage import errorpage componentserrorpage const routes gt new promise resolve gt require componentshomepage homepage gt webpack script loader resolve gt new promise resolve gt require componentsaboutpage aboutpage gt webpack script loader resolve const container documentgetelementbyid app async function render try const path windowlocationhashsubstr const route routes path const component route await route reactrender component container catch err reactrender container windowaddeventlistener hashchange gt render render see webpack code splitting reactjs routing scratch reactrouting coming soon", "d": "6/2015"}, {"body": "syranide keep working away nt think binary put using reactrouter may introduce issues mix router component rather sitting outside react environment approach surely still get different dom first render still cause flickerdisappearance content", "d": "6/2015"}, {"body": "approach surely still get different dom first render still cause flickerdisappearance content nt want flicker simply matter waiting chunks depend loaded rendering webpack provides outofthebox ps yes reactrouter whatever else using surely complicates solution still react problem solve", "d": "6/2015"}, {"body": "nt want flicker simply matter waiting chunks depend loaded rendering webpack provides outofthebox requireresolve look understanding synchronous lookup module id nt involve trip server using manage chunk loading looking code think circumnavigate problem making reactrouter think rendering server following standard clientside approach javascript const history new browserhistory typeof historysetup function historysetup routerrun routes historylocation err initialstate transition gt reactrender documentgetelementbyid taapp", "d": "6/2015"}, {"body": "look understanding requireresolve synchronous lookup module id nt involve trip server using requireensure manage chunk loading sorry yes meant callback executed dependencies satisfied matter putting rendersetstate inside", "d": "6/2015"}, {"body": "ok kind thanks replies feels like something needs addressed reactrouter carry discussion sorry wrong place conversation right way go guess ultimate issue linked route currently visited directly tied router reactrouter component based ties render tree without hack left fighting way view tree everything loaded async duplicating routing logic allow relevant chunks loaded top level", "d": "6/2015"}, {"body": "right requireensure way go guess ultimate issue linked route currently visited directly tied router reactrouter component based ties render tree without hack left fighting way view tree everything loaded async duplicating routing logic allow relevant chunks loaded top level intimately familiar reactrouter still imagine simply case gt really nt practical introduce another level indirection map routes async loader write helper call instead defer updating router everything ready pseudocode kind generic seems like overall approach maybe reactrouter provide maybe maybe ideally provided external helper sure", "d": "6/2015"}, {"body": "deprecating reacttools jstransform closing", "d": "6/2015"}, {"body": "tags supported react svg marker refx refy orient", "d": "6/2015"}, {"body": "markers", "d": "6/2015"}, {"body": "svg things", "d": "6/2015"}, {"body": "support animatetransform properties currently ends", "d": "6/2015"}, {"body": "image", "d": "6/2015"}, {"body": "svg supported", "d": "6/2015"}, {"body": "element point via jquery feel like something ie maybe use instead jquery click find another way trigger appropriate event dom element nt looked deeply strongly suspect poke around able want native apis", "d": "6/2015"}, {"body": "spicyj give starting point dive like try first pr react", "d": "6/2015"}, {"body": "gyzerok fix unfortunately nearly impossible write tests react nightmare spent hours trying get working even help people react irc channel success", "d": "6/2015"}, {"body": "also getting bit specifically hrefs anchor tags minimal test case unexpected behavior happy make changes maintainers agree current behavior unexpected enough warrant change", "d": "6/2015"}, {"body": "problem help reproduce wait seconds see div destroyed transitionend event fired", "d": "6/2015"}, {"body": "ran problem new thoughts could nt detect child gets reintroduced reordered called solution child reintroduced could call case reorder assume wo nt fired remove component immediately course would smart enough ignore still get called later", "d": "6/2015"}, {"body": "nt seem working dropin replacement rather anyone luck case", "d": "6/2015"}, {"body": "rely trigger css animations dynamic grid layout set translation programatically worked best far ms longer animation fires component still mounted perform children jerk around instead animating though child order change canceling animation", "d": "6/2015"}, {"body": "timeouttransitiongroup like csstransitiongroup uses transitiongroup css animations triggering hand reason use timeouttransitiongroup", "d": "6/2015"}, {"body": "want comment say pretty tricky going flex box without spans text flow wrapped span longer preserve default flexbox css reset uses even spans break text lines use variable sure get around pretty big weirdness using react", "d": "6/2015"}, {"body": "render full react pages using reactrouter server easy workaround adding doctype returned markup server initially thought might cause invariant client nt seem cause problems sure could prepend doctype string clientside entryrehydrate file", "d": "6/2015"}, {"body": "found hack way insert comments html", "d": "6/2015"}, {"body": "tried inject shim script nt work guess since support closures javascript pageopen url function status status success", "d": "6/2015"}, {"body": "syranide since mentioned webpack use webpack server side code", "d": "6/2015"}, {"body": "another possibility generate typescript interfaces jsx files tool", "d": "6/2015"}, {"body": "think solution allow typescript used reflux", "d": "6/2015"}, {"body": "quantuminformation probably better question reflux folks", "d": "6/2015"}, {"body": "typescript may start supporting jsx per nt plans develop jsx support separately going close issue feel free continue discussing helpful", "d": "6/2015"}, {"body": "anyone annoyed uses babel wrote plugin implement part syntax mentioned", "d": "6/2015"}, {"body": "need way bind events bodydocument react way react batch setstate event handler useful", "d": "6/2015"}, {"body": "use reactaddonsbatchedupdates get functionality", "d": "6/2015"}, {"body": "news range input still broken ie works great edge though", "d": "6/2015"}, {"body": "applied nt work even edge", "d": "6/2015"}, {"body": "hello running issue unclear actually means component works fine throws error bundling simple example idea wrong", "d": "6/2015"}, {"body": "cameronjroe ownerownee relationship specific react components react uses dom created reactcreateclass react terminology help get clear idea hope helps", "d": "6/2015"}, {"body": "mean ca nt use refs dom nodes within component", "d": "6/2015"}, {"body": "nt mean input heavily uses move span nt owner element component render component render method use component ref", "d": "6/2015"}, {"body": "issue code js var dropdownlist require reactwidgetslibdropdownlist var dropdown reactcreateclass render function return dropdown moduleexports dropdown seems build part component fails suggestionsideas missing something", "d": "6/2015"}, {"body": "desmondhume makes sense nt refs example code error originating somewhere else case invoking anywhere result cause error thrown", "d": "6/2015"}, {"body": "syranide right problem seems related issue copy amp paste module instead installing via npm works right nt know going actually", "d": "6/2015"}, {"body": "desmondhume npm probably installed two separate react module requires", "d": "6/2015"}, {"body": "bitshadow following use refs dom nodes using ref different example span render method owner starrating", "d": "6/2015"}, {"body": "well wrappers written specific elements requires user interactions additional functionality test still nt see dom elements handling refs owner figure", "d": "6/2015"}, {"body": "yeah nt see wrappers ideas handling refs", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "stuff works master found issue using custom component react translate classname class ex becomes instead file makes translation", "d": "6/2015"}, {"body": "issue open years chance able use attributes wish jsx general case", "d": "6/2015"}, {"body": "ljharb custom elements ie tags dashes yes landed master tags use case attribute dash might able support jhicken custom elements uses attributes html nodes uses properties different names nt intend change consequence custom elements relying heavily attributes proper way interact dom properties", "d": "6/2015"}, {"body": "dashes see nopin attribute pinterest requires exempt image showing pin dialog nonstandard shame dashes nt something control use jsx without creating custom element", "d": "6/2015"}, {"body": "ljharb could use attribute force react ignore whitelist attribute ignoring also new master think thats really hacky way use attribute would work remember put class element attribute use like sebmarkbage thats bad nt know enough separation react deals attributes vs properties covers really present real solution problem however see api issue think custom components become popular going become really annoying goofy mix class classname attributes jsx say working project makes heavy use custom components may naive question would possible element name attribute exist convert elements html attributes react properties", "d": "6/2015"}, {"body": "jhicken nt know might mean custom component might name legit attribute convert would weird magic work breaks api unlike properties attributes strings apis safely converted additionally notice event listeners wo nt work styles opinion designers web components spec attributes mistake used directly serialized form nt used directly anything serialized html properties take however really custom elements consumed public apis right mostly attributes properties made available typically imperative methods nt translate well react declarative api forced use attributes since thing possible custom elements consistency solution would revert normal html elements apply attributes instead properties intuitive strictly inferior since nt allow us properly model things like vs etc attribute strings come richer data structures richer behavior differences serialized form allows opinion opinion react ember angular teams custom elements web components flawed model composition wo nt treated firstclass either framework many compromises make work flawlessly nt want compromise primary html api support custom elements edge case unfortunately end subpar api recommended solution wrap web components react component provide richer api use refs interact events properties methods part always translate names see fit ljharb would like support nonwhitelist solution quite sure tackle safely right workaround always get element call ofc annoying many times best practice build small reusable components compose need use hack btw address issues react europe talk july", "d": "6/2015"}, {"body": "sebmarkbage ljharb would like support nonwhitelist solution quite sure tackle safely right workaround always get ref element call setattribute nopin ofc annoying many times best practice build small reusable components compose need use hack probably wo nt work case pintrest probably executing client side js instead simply statically analyzing tags attribute", "d": "6/2015"}, {"body": "oh serverside rendering yea sucks maybe pinterest nicer community members use namespace like intended", "d": "6/2015"}, {"body": "oh assumed browser extension adds pin buttons everything", "d": "6/2015"}, {"body": "oh serverside rendering yea sucks maybe pinterest nicer community members use data namespace like intended yeah use case though data attributes also sound wrong would easier something like would viable", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "nice spicyj problem solved figured checked alternatives sick bed also lazy", "d": "6/2015"}, {"body": "sebmarkbage spicyj maybe solving specific instance still painful issue us basically forced horrible hacks workaround lack general attribute support wrote also explained workardounds employ would much like issue resloved maybe least react made configurable users could extend whitelist", "d": "6/2015"}, {"body": "gozala yes understand issue still open", "d": "6/2015"}, {"body": "kyleamathews", "d": "6/2015"}, {"title": "feat implement error propagation xhrbackend", "body": "currently response created event inside creates object body set setting properties instance furthermore error set response certain conditions emitted observablestream error instead value", "num": "2800", "d": "6/2015"}, {"title": "refactor use readystate mock connection", "body": "instances readystate property corresponding enum values borrowed readystate spec readystate useful tests easily determine connections fulfilled use cases watching changes provide good user experience able satisfied observers provided well observablesstreams returned property limited renamed changed reflect states http cares namely sent downloading completed", "num": "2799", "d": "6/2015"}, {"title": "build failing dev build dart sdk", "body": "cc kevmoo sigmundch", "num": "2798", "d": "6/2015"}, {"title": "remove version number packagejson rely git tag", "body": "currently record current version publish scripts use set version pub npm makes hard impossible release based sha latest master moving version number repo able pick sha release", "num": "2796", "d": "6/2015"}, {"title": "feat implement streaming uploaddownload", "body": "user able provide observers part object order receive progress updates chunks data uploading downloading data download observers receive upload observers receive form progress event support different semantics subscriptions rxjs observables dart streams implementation provided translate nicely platforms response observable returned still emit single value complete connection closes order perform request without requiring subscription feature would also require providing means specifying request executed immediately additional property name tbd observers tested using methods called", "num": "2795", "d": "6/2015"}, {"title": "feat directly return rxjs observable http methods", "body": "instead returning platformagnostic methods like return observable stream directly javascript dart users nt learn abstraction order make use underlying primitives blocked", "num": "2794", "d": "6/2015"}, {"title": "http backlog", "body": "prioritized list features issues take care relating library closed x chore add xmlhttprequest type xhrconnection x feat simple dynamic retrying failed requests implemented x refactor http remove httpfactory x feat eventemitter dart support x feat add jsonp jsonpbackend x refactor move http module sibling x fix use jsonpinjectables injector x feat implement support headers url params objects http x http complete response x chore convert requestmethods const list x feat observable swap underlying rxjs implementation used eventemitter rxjsnext blocked rxjs alpha release x chore remove unused properties request response x http class requires decorator injected using typescript x fix throw exception input string x feat implement error propagation xhrbackend x http requests lazy cold observables x feat accept string method requestoptions class interface x robwormald feat directly return rxjs observable dart stream http methods x fix async pipe works http proper observables x fix connectionresponse typedef observable blocked needs design rfc http interceptors transformers needs design feat helpersguides short polling security features issue yet needs design progresscurrent milestone ready implement ordered roughly factor priority amp level effort refactor move mockbackend testlib module refactor convert connection interface observable response feat add support withcredentials feat support use angularjs applications chore assert url present requestoptions creating request perf provide means optimize response parsing feat support many types body requestresponse connectionbackend implementations feat automatically set request contenttype header based body type feat add timeout support feat implement streaming uploaddownload refactor use readystate mock connection refactor rename urlsearchparams something else", "num": "2793", "d": "6/2015"}, {"title": "injector dynamiccomponentloader fails errors crypticnot helpful", "body": "eg see stack traces dehydrated components npe accessing changedetector instead actual problem eg dcl failed x provider found", "num": "2790", "d": "6/2015"}, {"title": "fix http class requires inject decorator injected using typescript", "body": "big deal work without explicit decorators ts sure need anything local environment either typings would love fix think need pointers since really idea teaches ts translate constructor type annotations parameter annotations", "num": "2788", "d": "6/2015"}, {"title": "property always string", "body": "example value number want increment press button get etc appears property value always string matter kind type give component would correct way handle add minusone method way add button work intended press plusone button actually work pressing plusone button first treats field string typescript import component view bootstrap component selector c properties value view template class c private value number component selector app view template directives c class app bootstrap app", "num": "2787", "d": "6/2015"}, {"title": "systemimport app app relative address error", "body": "use normal app seen used systemimport app", "num": "2786", "d": "6/2015"}, {"title": "moveshare much ngzone elsewhere", "body": "lots code ngzone actually pretty useful outside angular eg implementing tracking zone hate copy paste would people feel creating another pub package maybe trackedzone exporting outside angular proper ngzone could extend compose top end world idea vicb yjbanov", "num": "2785", "d": "6/2015"}, {"title": "make test injector test component builder agnostic test environment", "body": "testlib contains many helpers closely coupled jasminestyle bdd environment decouple possible particular enable running dart test package enable running javascript outside angular repository", "num": "2783", "d": "6/2015"}, {"title": "ngcontent attribute used selector even polyfillnonstrict styles custom dom elements", "body": "cc rkirov vicb", "num": "2782", "d": "6/2015"}, {"title": "ca nt bind controlgroup since nt know property div element", "body": "hi everyone trying build small app using corresponding dts typescript got following message ca nt bind controlgroup since nt know property div element matching directives corresponding property indexhtml html angular loading systemimport radarview radarviewts typescript import component view bootstrap import formbuilder validators formdirectives controlgroup component selector radar appinjector formbuilder view template formcontrolslevelsvalue directives formdirectives export class radarview form controlgroup builder formbuilder constructor builder formbuilder thisbuilder builder thisform buildergroup levels bootstrap radarview compiling tsc watch target module commonjs emitdecoratormetadata also try use validatorsrequired looks like found either error property required exist type typeof validators idea wrong code", "num": "2779", "d": "6/2015"}, {"title": "feat router user metadata route configs", "body": "relatively common practice add custom metadata route definition angular drive behavior application metadata good example permission management particular route accessible admins proposal implement data property routeconfig annotation data available components injectable property current route", "num": "2777", "d": "6/2015"}, {"title": "fix router handle navigating middle another navigation", "body": "behavior rerouting navigation components committed cancel start recognition canactivate loadresourcesresolve phases components committed phases loadresolve finish current nav beginning next", "num": "2776", "d": "6/2015"}, {"title": "feat router auxiliary aka double slash routes", "body": "", "num": "2775", "d": "6/2015"}, {"title": "feat router matrix params", "body": "", "num": "2774", "d": "6/2015"}, {"title": "support relative urls dart", "body": "dart part need make runtime transformed version componenturlmapper dynamic version use mirrors compute path based type transformer populate static map paths component types use compute relative paths root app dynamically probably populated inside ngdepsdart files", "num": "2771", "d": "6/2015"}, {"title": "dart type dom accesses", "body": "adding return types first pass adding linter better api completeness many methods dom interfaces eg typed dartanalyzer configured know neither browser might present runtime however leaving typed weakens ability use apis get typical benefits typing leave proper types commented reference issue related mprobst proposal fix iiuc dom abstraction layer angular martin please close dupe already issue tracking", "num": "2770", "d": "6/2015"}, {"title": "feat eventemitter add common combinators dart streams rxjs lite", "body": "particularly motivated quickly since lib refactored use uses rxjs implicitly private subject nt yet surface rxjs combinators list exhaustive includes combinators care cursory look many combinators look similar enough rxjs lite dart streams go ahead add methods facade class methods intervalperiodic useful short polling instance methods map dart flatmaplatest implemented dart streams retry implemented dart streams retrywhen implemented dart streams topromise tofuture implemented dart streams multicast asbroadcaststream implemented dart streams filter repeat implemented dart streams useful long polling throttle implemented dart streams brings question nt expose underlying primitive observable stream different apis like let users use whichever primitive supported language already provides method challenge forms parts angular framework may want take advantage combinators like providing simpler abstractions handle common use cases like polling without combinators existing separate specialcased implementations features would developed js dart cc vsavkin yjbanov", "num": "2768", "d": "6/2015"}, {"title": "script elements template files innert", "body": "given template associated component component instantiated script executes root cause issue appears use importing contents template main document import script element revived appended document executed angular component templates behavior undesirable since script limited access context di etc exposes large security vulnerability surface tested", "num": "2766", "d": "6/2015"}, {"title": "change cssclass selector class ngclass", "body": "mhevery would like discuss changing cssclass directive selector arguments avoid unnecessary work static class attributes cases like gt clearly follows convention directives prefixed avoids nonobvious cases like class exp gt would ease migration wdyt", "num": "2765", "d": "6/2015"}, {"title": "build typescript source npm package", "body": "many errors git source fine", "num": "2763", "d": "6/2015"}, {"title": "console warn global zonejs loaded onto page", "body": "ran issue recently spent good amount time trying find cause data updating ui realize imported zonejs wondering makes sense warn developer scenario", "num": "2761", "d": "6/2015"}, {"title": "bug directives", "body": "hello directives detected following problem include component ngfor instruction executed two times example plunker think framework need report error info render one time ngfor thanks sorry bad english smile", "num": "2756", "d": "6/2015"}, {"title": "routeregistry pipeline marked injectable injected", "body": "routeregistry pipeline marked injectable injected causes error dart transformers", "num": "2755", "d": "6/2015"}, {"title": "di transformer nt work injection namespaced", "body": "di transformer nt work injection namespaced may limitation way transformers implemented keep fast ca nt fix bug documentation somewhere would appreciated example import nt work import package show injectable class service", "num": "2754", "d": "6/2015"}, {"title": "plans directive like nginclude", "body": "looking feature allow dynamic templates component example loading text ajax means displaying also want attach click event handlers certain words using directives example parent component makes ajax request server server returns following text response like render response html directive selecor c handle clicks word", "num": "2753", "d": "6/2015"}, {"title": "baseline benchmark running full benchmark samples travis", "body": "see benchmark run firefox full sample rather spec introduced cc tbosch hankduan", "num": "2751", "d": "6/2015"}, {"title": "view container emptied dispose called dynamic component", "body": "needs check", "num": "2748", "d": "6/2015"}, {"title": "getting duplicated items using http service", "body": "hey guys problem using http requests code serviceshomets componentshomets typescript import view component ngfor import coredirectives import http import homeservice homeserviceshome component selector home appinjector homeservice view templateurl directives coredirectives ngfor export class homecomponent homeservice homeservice constructor homeservice homeservice http thishomeservice homeservice homeservicegetall homehtml html todo list todoname todochecked use component get list items duplicated nt use call list appear better way correctly thanks smile", "num": "2747", "d": "6/2015"}, {"title": "angular material loses css files build step", "body": "see dart html files css files", "num": "2745", "d": "6/2015"}, {"title": "add valid value pristine ngcontrolgroup ngcontrol", "body": "every directive bound control expose control main properties control easy user template", "num": "2741", "d": "6/2015"}, {"title": "provider typedecorator homecomponent typedecorator", "body": "hello guys problem using dependency injection code homets componentshome typescript import view component ngfor import router import location import coredirectives import homeservice homeserviceshome component selector home injectables homeservice view templateurl directives coredirectives ngfor export class homecomponent router router names array constructor router router homeservice homeservice thisrouter router thisnames homeservicenames serviceshome get error provider typedecorator homecomponent typedecorator someone help", "num": "2740", "d": "6/2015"}, {"title": "use systemjs releases codeangularjsorg", "body": "use npm package compile files use files root load together deps using following setup html systemdefaultjsextensions true systemconfig paths meta librxjs format cjs map rx librxjs systemimport appbootstrap catch consoleerrorbind console compiled files setup works fine want use release files codeangularjsorg specifically longer works newest version systemjs complains removed systemjs config example would helpful clear example setup systemjs make work would made", "num": "2739", "d": "6/2015"}, {"title": "convert relative template style urls dart transformer", "body": "convert relative templatestyle urls transformer use urls inlined application", "num": "2733", "d": "6/2015"}, {"title": "make easier extend compose directives", "body": "angular quite difficult reuse functionality provided directives ways composition either slightly inefficient eg string template compilation cost cumbersome hacking compile link functions invoke another directive facilities extensions almost nonexistent angular improve making easier invoke another directive programmatically including ability pass arguments introducing structure directive classes eg force directives break functionality standard methods calls match interfaces practical extend directives making possible extend directive metadata designing builtin directives extensible composeable example thirdparty developers provide better documentation guidelines encourage codereuse arguably asking react templating approach implemented angular believe makes better use objectoriented paradigm greatly improves maintainability angular directives really looks like writeonly c code previous century see also whether abstract small repeating code segments html templates", "num": "2732", "d": "6/2015"}, {"title": "question reason styles property view list", "body": "couple different ways apply styles components angular one using property decorators specific reason property list defined see things like also latter feels quite uncomfortable would prolly something like thoughts", "num": "2730", "d": "6/2015"}, {"title": "bind attribute label", "body": "form id input labelfor bound id correctly transformed bound value label remains written template form colourtext label present dom", "num": "2728", "d": "6/2015"}, {"title": "dev app work firefox", "body": "dev app ie work firefox driver extent nt work firefox browser first firefox driver would always crash whenever tries access element app ie following would crash javascript var webdriver require seleniumwebdriver uncomment chrome comment firefox work fine though var capabilities webdrivercapabilitieschrome var capabilities webdrivercapabilitiesfirefox var driver new webdriverbuilder usingserver withcapabilities capabilities build driverget driversleep driverfindelement webdriverbycss baselinecreatedom click driverquit app firefox browser manually open firefox browser click createdom baseline nothing happen errors either clicking createdom tree benchmark works though", "num": "2726", "d": "6/2015"}, {"title": "dart transformer nt add getters component annotations", "body": "add transformer zippycomponent example see get something like exception uncaught error find getter open", "num": "2725", "d": "6/2015"}, {"title": "issues alpha", "body": "seeing following logs show console output google chrome version anything", "num": "2723", "d": "6/2015"}, {"title": "url service need", "body": "part former implementation relying anchor element resolve urls replaced programmatic resolution benefits resolver could used server web worker env absolute urls resolved ie code copied traceur heavily based closure lib one idea tbosch would reuse code amp tests closure probably take opportunity expand generic service could reused ie router discuss methods need service addition library use ie closure cc btford igorminar could please add thoughts", "num": "2722", "d": "6/2015"}, {"title": "proposal make use native dom elements templates explicit", "body": "update mhevery use explicit binding proposal right users write following echo input value text node looking template obvious value dom element issue proposes following syntax value variable would would getter get actual dom elements instead dom element users want prevent direct access dom templates users plan use webworkers future synchronous reads nt work users want prerender server ie app runs server client native elements differ server client users important manually eg code review automatically check template reference dom element new users angular would also benefit explicit usage would reveal performance problem code dirty checks property dom element slow users still need way reference elements via variables eg query hand methods component would probably expect get value variable see eg value seems like good idea angular apis use well reference elements eg cc matanlurey cc mhevery", "num": "2721", "d": "6/2015"}, {"title": "index page example missing name behind hi", "body": "", "num": "2718", "d": "6/2015"}, {"title": "distance parent protoelementinjector reflect dynamic injectors", "body": "example injector creating mycomponent would distancetoparent rather", "num": "2707", "d": "6/2015"}, {"title": "get variables scope", "body": "let say store variables like way could get list scope containing aka data nt belong angular", "num": "2702", "d": "6/2015"}, {"title": "gulp builddart failing amp ca nt get", "body": "error line column unexpected token oin gulp tasks ends tmp deleted way figure going wrong", "num": "2701", "d": "6/2015"}, {"title": "error root causes swallowed tests using testbed asynctestcompleter", "body": "steps reproduce js run modify template trigger compilation failure example breaking object literal ex remove last see failing test message nt point root cause chrome mac os x binding css class list add classes specified object literal failed error timeout async callback invoked within timeout specified jasminedefaulttimeoutinterval vicb reproduce scenario silent failure pb discussing please let know got troubles reproducing", "num": "2700", "d": "6/2015"}, {"title": "bug binding emulatedscopedshadowdomstrategy throws error", "body": "hey everyone currently playing different shadow dom strategies also understand inline styling behaves differently throughout strategies default angular binds everything works fine binding also works expected however try use running error binding configuration js import bind import shadowdomstrategy import emulatedscopedshadowdomstrategy import styleurlresolver import styleinliner import documenttoken export function main reflectorreflectioncapabilities new reflectioncapabilities bootstrap zippyapp bind shadowdomstrategy tofactory function styleinliner styleurlresolver doc new emulatedscopedshadowdomstrategy styleinliner styleurlresolver dochead styleinliner styleurlresolver documenttoken error get seems like shadow dom strategy called strategy actually instantiated might use case method", "num": "2697", "d": "6/2015"}, {"title": "find control scetrustashtml", "body": "hello string contains html data using scetrustashtml produce safe data using ngbind string may contains hyperlinks disable binding currently using regexreplace achieve working fine think good solution var regexpatternsearchhyperlinks lt aa gt href var disablehyperlinkpattern use jqueryangular selector selfselectedmessagebody find available hyperlinks disable something like click function return false regards manish", "num": "2696", "d": "6/2015"}, {"title": "append dom elements component view", "body": "asked similar question also looked still get append dom element component view directive say following component js import component view import viewcontainerref import supportsnativeshadowdom commonshadowdom import iconstore appservices component selector icon properties src view templateurl appcomponentsiconiconhtml remove relative resolve styles work properly styles import iconcss export class icon el constructor private viewcontainer viewcontainerref public icon iconstore thisel thisviewcontainerelementdomelement set src src string let icon let root supportsnativeshadowdom root thiselshadowroot else root thisel thisiconget src svg gt rootappendchild svg works fine api would allow append dom element inside view without check", "num": "2693", "d": "6/2015"}, {"title": "need public hostregexp srcrenderapits", "body": "seems like used file make private", "num": "2691", "d": "6/2015"}, {"title": "noannotationerror passing router top level app constructor", "body": "hi trying pass router top level app component using code looks something like js import bootstrap component view import routeconfig routeroutlet routerlink router import home componentshomehome import foo componentsfoofoo component selector app view directives routeroutlet routerlink template routeconfig path component home home path foo component foo foo export class app router router constructor router router thisrouter router however get following error message passed routerinjectables bootstrap probably something wrong help would appreciated", "num": "2689", "d": "6/2015"}, {"title": "bundle contain nativeshadowdomstrategy", "body": "", "num": "2688", "d": "6/2015"}, {"title": "issue data properties working elements", "body": "playing around enjoying fair bit recently noticed think perhaps bug quite sure problem using custom data properties never able get properly display instance following code example works replacing title either lang alt id still get rendered output element however whenever put custom element replacing title say datalist string interpolation happens wondering data attributes nt specified htmlelementpropertylist would appreciate guidance repeatedly read following documentation avail indexhtml html systemconfig paths lt em gt lt em gt js lt em gt lt em gt systemimport main bootstrapjs ts import component view bootstrap attribute component selector table properties name name view template class hello name string constructor attribute name value string thisname value component selector app view template directives hello class application constructor bootstrap application", "num": "2687", "d": "6/2015"}, {"title": "generated fails definitelytyped tests", "body": "definitelytyped existing build test scheme prior releases manually work around things dgeni includes generic type parameter member eg classes start ts destructured args rewritten named interface ts change const var comply noimplicitany add return types type missing stuff note dt start accepting ts official release see", "num": "2686", "d": "6/2015"}, {"title": "rfc http interceptors transformers", "body": "issue intended define requirements library support common operations like request response transformations error handling issue nt yet proposed design discussion comments suggestions welcomed uncaptured use cases especially welcomed history two widelyused feature request response interceptors requestresponse transformers interceptors transformers different goals constraints interceptors expected side effects transformers exclusive purpose mutate requests responses synchronously interceptors may asynchronous tranformers must synchronous interceptors global configured angular compile phase transformers may global local global transformations mutated run phase error interceptors declared explicitly separately normal interceptors whereas transforms handle normal error cases error interceptors recover errors returning resolved promise common use cases interceptors setting timeouts requests setting custom xsrf tokens request headers described http docs add conditional parameters request urls like access token abtesting info check authentication state performing request prompt user authenticate side effects parts application ie response says user needs authenticate route login page log response errors returned server persisted log log total requestresponse time order performance analysis filter uninteresting requestresponses logs recover request exceptions response errors ie request times return old data cache unwrapping responses ie response data foo bar return responsedata cache responses custom cache used services common use cases transformers serializedeserialize data directions strip headers angular strips userspecified xsrf header default response transformation worth noting additional features provided angular would otherwise handled transformers urlbased caching configurable parameter serialization header serialization new considerations angular http library angular angular http technical differences philosophical differences angular mutable global state discouraged ie angular phases like config run angular provides hierarchical dependency injection allowing users modify bindings different levels application component tree angular http based primarily instead promise http goals supporting uploaddownload progress events connection retrying request cancellation caching polling firstclass use cases current options current library supports creating services would provide shared interceptors transformations example httpbased service would add custom headers cache responses log errors based current rxjs implementation js import http request irequestoptions import responsecache myresponsecache import errorlog myerrorlog class myconfiguredhttp constructor public public responsecache responsecache public errorlog errorlog request options irequestoptions optionsurl thisresponsecache naive example observable create syntax yet supported cached response url return instead performing request return rxobservablefrom thisresponsecache optionsurl questions answer final design use cases able supported shared service approach api improved make performance robustness security default path composability impacted approach improved could simple intuitive require deep knowledge observablesrx anyone actually read far github issues", "num": "2684", "d": "6/2015"}, {"title": "angular throw zonejs present", "body": "currently application bootstrap first digest run successfully application stop reacting changes extremely confusing", "num": "2683", "d": "6/2015"}, {"title": "fakeasync swallows exceptions", "body": "think uncaught exception fail fake async test instance following test fail otherwise use asynctestcompleter even fake async tests cc vicb", "num": "2682", "d": "6/2015"}, {"title": "gulp servejsprod interrupted", "body": "seems like way exit task killing gulp please restore support ctrl c", "num": "2681", "d": "6/2015"}, {"title": "refactor move http module sibling", "body": "since library dependency dependency injection could moved module nt add bytes angular bundle users may need may impacted task wait resolved determine best approach todo x move files update imports unit tests tests passing x create packagejson unique npm package name x make typings build step include separate dts file x make sure pub release script correctly publish package manually test installing application x make sure npm release script correctly publish module manually test installing application x add indexts amp indexdart toplevel x update paths docs x check angulario docs output x add readme base directory x confirm bundledistribution created consistently x change ambient module name output dts bundles add step npm distribution include http directory package rename", "num": "2680", "d": "6/2015"}, {"title": "distribute bundle dependencies included", "body": "app pretranspiled typescript compiler unless include traceurruntime html file app gives runtime error traceurruntime undefined code alpha uses traceurruntime multiple places eg line include traceur internally needed force bringing together typescript angular", "num": "2675", "d": "6/2015"}, {"title": "missing info rx rxlite", "body": "created simple helloworld app typescriptangular alpha installed using following command tsd query action install tried compile tsc got errors definitions rs rxlite missing running manually following commands code started compile fine tsd query rx action install tsd query rxlite action install tsd query action install definitions three files included", "num": "2674", "d": "6/2015"}, {"title": "current state angular new router", "body": "current state angular new router since repository moved angularangular still use comes never available", "num": "2673", "d": "6/2015"}, {"title": "using component throws range exception", "body": "use component get another component get exception sure happens also apply styling mention use js commonshadowdomjs import shadowdomstrategy nativeshadowdomstrategy import bind import document export var supportsnativeshadowdom boolean boolean document amp amp documentbody amp amp documentbodycreateshadowroot export var shadowdominjectables array supportsnativeshadowdom bind shadowdomstrategy toclass nativeshadowdomstrategy appbootstrapjs import shadowdominjectables commonshadowdom bootstrap app shadowdominjectables", "num": "2672", "d": "6/2015"}, {"title": "nested content propagate click events", "body": "related alpha may issue missing propagation click events nested content writing components using eg following container component usage context menu component nested menu item components handler invoked clicking outside text event bubble", "num": "2671", "d": "6/2015"}, {"title": "interpolation using json data dart nt work", "body": "following problem dart using json data dart thing happens list type code use template get name name use get empty list items thing happens using sorry bad english thanks help smile", "num": "2670", "d": "6/2015"}, {"title": "renderer undefined defaultvalueaccessorconstructor using cjs", "body": "using npm jspm angular works root folder cjs component using binding error occurs debugging saw renderer undefined defaultvalueaccessorconstructor export class defaultvalueaccessor implements controlvalueaccessor value string null onchange function ontouched function constructor private cd ngcontrol private renderer renderer private elementref elementref renderer undefined thisonchange gt thisontouched gt cdvalueaccessor use works fine guess module dependency order causes issue console error message", "num": "2669", "d": "6/2015"}, {"title": "autowatch nt work", "body": "fresh install master npm run touch file triggers tests rerun error console subsequent run triggered starting buildtreedart buildtreedart errored arrayforeach native mergetreesrebuild diffingpluginwrapperrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback makes working dartrelated code quite challenging atm", "num": "2662", "d": "6/2015"}, {"title": "angular nt load due typo", "body": "", "num": "2661", "d": "6/2015"}, {"title": "parent annotation others working typescript", "body": "know previous issues ca nt find anymore last saw tracked elsewhere use alpha latest dts file definitelytyped repo try basic example typescript import parent component view bootstrap component selector c view template class c app app constructor parent app app thisapp app component selector app view template directives c class app message test bootstrap app always gives following error resolve parameters c undefined parent self false make sure valid type annotations error noannotationerrorbaseexception new noannotationerror extracttoken arraymap native functionexecutelistwrappermap dependenciesfor executebindingresolve functionexecutedirectivebindingcreatefrombinding functionexecutedirectivebindingcreatefromtype anything wrong workaround issue issue tracked", "num": "2660", "d": "6/2015"}, {"title": "router needs type definitions accompany router bundle", "body": "nt contain info router http services makes hard use bundle", "num": "2659", "d": "6/2015"}, {"title": "jsonrenderer integration tests serverside rendering", "body": "right nt run integration tests serverside dart vm serverside dart complete probably never long based dart package eg events missing element classes eg missing run tests serverside javascript added lot functionality top html parsing library pretty hacky reported also want serverside rendering serverside compilation however work correctly right neither js dart eg missing element types element properties solution follows use already based implementations provide enough functionality basicly need parse createmovedelete walk dom elements plus changing dom attributes however nt need events dom properties compilation implement would create maintain json object hierarchy represents instantiated elements used tests assertions well serverside rendering capture rendered later serialized html consequences would need jsdart runs browser ones run server would use tests need run server client reduce functionality serverside implementations minimum compiler needs libraries already use good enough ie js package dart serverside rendering plus html serializer potential use little memory fast", "num": "2657", "d": "6/2015"}, {"title": "document fps metric benchpress docs", "body": "comment needs added goderbauer would mind creating pr", "num": "2656", "d": "6/2015"}, {"title": "public api docs api surface needs curation", "body": "need explicitly specify export form core annotations render similar", "num": "2653", "d": "6/2015"}, {"title": "example router add simple example app", "body": "igorminar going take branch matsko started add simple app tests router", "num": "2650", "d": "6/2015"}, {"title": "review public api content", "body": "make sure right things make sure extra things removed", "num": "2647", "d": "6/2015"}, {"title": "dart transformers add baseurl view directive transformers", "body": "angular system needs know original url view specified baseurl attribute transformers strip information inling view calculate write baseurl back directive metadata", "num": "2646", "d": "6/2015"}, {"title": "alpha input fields show text host element also value attribute", "body": "seems problem component attribute named value template view component also attribute name value component selector lull properties val value view template class lull constructor component selector app view template directives lull export class myappcomponent imageref bootstrap myappcomponent input fields nt show values case empy change attribute value component lull valwork component selector lull properties val valwork view template class lull constructor component selector app view template directives lull export class myappcomponent imageref bootstrap myappcomponent input fields show correct value working alpha nt work alpha anymore seems problem angular use attribute value component", "num": "2645", "d": "6/2015"}, {"title": "dart transformers inline import styles inlined page", "body": "low priority feature request option inline import styles tags inside html templates transformers", "num": "2643", "d": "6/2015"}, {"title": "feat router deeplinking", "body": "x takes array like returns url url must start child root parent later implement sane default behavior segments prefix x directive uses routergenerate api exception thrown route found see ability link route params current route without affecting children", "num": "2642", "d": "6/2015"}, {"title": "feat router lifecycle hooks", "body": "implement lifecycle hooks ts dart", "num": "2640", "d": "6/2015"}, {"title": "add description angular gitter chat", "body": "many questions angular angular gitter chat lately people distinguish two furthermore several questions spamming room gitter supports add descriptions header name possible add description clarify room helpful would also add links mute repeating questions ready official resources community resources", "num": "2639", "d": "6/2015"}, {"title": "method decorators live class", "body": "router need way implement lifecycle hooks chatting yjbanov sounds like dart interfaces way go js think want decorators look like want able ask decorators rather asking decorators filtering also need facade either dart checks decorators js cc igorminar", "num": "2638", "d": "6/2015"}, {"title": "complete response", "body": "making nt fire success", "num": "2635", "d": "6/2015"}, {"title": "api doc comments parsed dgeni", "body": "look members following api comment block showing unparsed api doc output api docs", "num": "2633", "d": "6/2015"}, {"title": "export api docs includes much gulp docsangulario produces unexpected filenames", "body": "please look angulario pull request files named things like petebacondarwin look see something easily fixed sure started happening post tsification vsavkin also going look export libraries try simplify published api surface forms sure related however marking urgent would really like fix big conference", "num": "2632", "d": "6/2015"}, {"title": "pub serve gets stuck never serving files", "body": "trying get component working found html file contains nonempty element caused seemingly get stuck infinite loop never serve requests yjbanov suggested something dart shim returning instead throwing implemented exception changing shim worked insofar make component work exception logged could find directive entry formdirectives parsing ng templates failed exception implemented stack trace package viewsplitteraddparentelement package viewsplitterprocess package compilecontrolinternalprocess package compilepipelineprocess package compilepipelineprocess package compilepipelineprocess package templateextractorextracttemplates package rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futurewait dart rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart asyncruncallbackloop dart asyncruncallback dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart error logged times", "num": "2628", "d": "6/2015"}, {"title": "dart htmladapter always throw unimplemented errors", "body": "today returns null lot functions cause extremely confusing errors elsewhere pipeline causes transformer hang certain programs", "num": "2624", "d": "6/2015"}, {"title": "remove app injector angular use elementinjector", "body": "remove app injector use elementinjector injection system hostinjectables visible viewinjectables default visibility tokens defaults crossshadow boundary include self", "num": "2623", "d": "6/2015"}, {"title": "post request payload empty arraybuffer", "body": "hi tried use post send bytes using arraybuffer seems request payload always empty code snippet var buffer new arraybuffer var request method post url apigetrecenthottos headers contenttype applicationoctetstream data buffer responsetype arraybuffer success function data status headers config error function data status headers config one ideas suggestions thanks advance", "num": "2619", "d": "6/2015"}, {"title": "perf systemjs create systemjs benchmarks", "body": "benchmarks test systemjs loading bundled unbundled angular using server server benchpress collect script time network time information", "num": "2618", "d": "6/2015"}, {"title": "removing route config throws exception", "body": "remove key route config alias name different path name get following exception", "num": "2616", "d": "6/2015"}, {"title": "using path routeconfig causes component rendered two times", "body": "noticed update version alpha following see two component change path anything else get behaviour", "num": "2615", "d": "6/2015"}, {"title": "european currency format", "body": "right currency filter supports american way thousand separator us use thousand separator decimal europe way around would nice support", "num": "2614", "d": "6/2015"}, {"title": "resolve parameters defaultvalueaccessor", "body": "get exception using forms sure though directly use anywhere inject component", "num": "2612", "d": "6/2015"}, {"title": "import style urls template throw cryptic npe", "body": "component style tag import like import materialbuttonscsscss throws null pointer breaks app url made absolute moved styleurls tag works expected url might invalid better error message would appreciated least null object getter nextnode nosuchmethoderror method found nextnode receiver null arguments stacktrace lifecyclelifecycle package ngzoneonerrorwithoutlongstacktrace package ngzonengzone package customzonehandleuncaughterror dart futurepropagatetolisteners dart futurecompletewithvalue dart futurewait dart ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart null object getter nextnode nosuchmethoderror method found nextnode receiver null arguments stacktrace lifecyclelifecycle package ngzoneonerrorwithoutlongstacktrace package ngzonengzone package customzonehandleuncaughterror dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart", "num": "2611", "d": "6/2015"}, {"title": "perf provide means optimize response parsing", "body": "right object lazily parses response body based getter method called etc method attempt parse body time method called expensive large requests allowing response type declared ahead time perform parsing separate thread firing event supporting would easy thought given affect existing fetchresponselike getters design design may encourage lessperformant behavior cc igorminar", "num": "2609", "d": "6/2015"}, {"title": "transformer work well web urls", "body": "angular handle templateurl templateurl gallerygalleryhtml yet transformer fail asset found asset webgallerygalleryhtml transformer find relative asset like templateurl galleryhtml yet reflective mode ca nt handle case yet", "num": "2607", "d": "6/2015"}, {"title": "refactor di subclasses baseexception immutable", "body": "related class diexceptions extends facadelang provides method append error message information yjbanov suggests agree would better implement addkey method return new merging input existing instance message encourageenforce immutability may subclasses need change well wanted get issue open left office vsavkin happy make change opposed since one done work di", "num": "2606", "d": "6/2015"}, {"title": "transformer hangs invalid templateurl used", "body": "using pub serve transformer hang using invalid url example templateurl gallerygalleryhtml actually valid pub url transformer ca nt handle file separate issue exception build completed successfully shutdownisolate unhandled exception uncaught error null object getter package nosuchmethoderror method found package receiver null arguments stack trace objectnosuchmethod dart objectnosuchmethod dart serializeid package foreigntransformgetinput package foreignbasetransform amp getinputtransformhasinput package transformassetreaderhasinput package xhrimplget package futurefuturemicrotask dart microtaskloop dart microtaskloopentry dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart roothandleuncaughterror dart microtaskloop dart microtaskloopentry dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart", "num": "2605", "d": "6/2015"}, {"title": "compilercompileinhost first check cache creating", "body": "creating quite expensive needed cached", "num": "2604", "d": "6/2015"}, {"title": "query directives self", "body": "currently query two scopes direct children descendants also possible query directives created element one example useful querying validator directives", "num": "2603", "d": "6/2015"}, {"title": "interpret double dash single dash translating names", "body": "mhevery wrote treat double dash single dash translate support renaming convert dash camel case properties need need consistent dom events nt dash camel cased code wild uses camel case custom events polymer exception kvantetore originally wrote party events eg polymer elements ironselect dash name normal binding syntax converts dashes camelcase case event handler added ironselect instead correctly named ironselect event possible trick use dashed event name instead", "num": "2600", "d": "6/2015"}, {"title": "template interpolation broken loading angular systemjs npm package", "body": "component route evaluates element bootstrap component directly works fine render component creating route using tried standard custom one get empty element errors anything console trying start working sample try break order isolate problem found include library files straight instead letting work npm repository works assume expected behavior indexhtml systemjs config packagejson version private true devdependencies grunt gruntbower grunttypescript grunttsd gruntcontribcopy dependencies gruntfilejs webappts directives loggedinrouteroutlet coredirectives routeconfig path welcome welcome component welcome path login login component login export class webapp welcomets component selector welcome view templateurl appwelcomehtml export class welcome username string welcomehtml welcome username loggedinoutletts directive selector routeroutlet export class loggedinrouteroutlet extends routeroutlet static publicroutes login true bootstrapts browserdomadaptermakecurrent var forminjectables array formbuilder var hasshadowdom boolean boolean document amp amp documentbody amp amp documentbodycreateshadowroot var shadowdominjectables array hasshadowdom bind shadowdomstrategy toclass nativeshadowdomstrategy var jitinjectables array bind changedetection toclass jitchangedetection bootstrap webapp forminjectables routerinjectables shadowdominjectables jitinjectables", "num": "2597", "d": "6/2015"}, {"title": "placing var item instead template gets wrong value", "body": "item desuggars set renders wrong since therefore render pointing element local variable", "num": "2592", "d": "6/2015"}, {"title": "interpolation broken root nodes", "body": "component text interpolate text correcty fact nt even throw however text works points indices wrong possible related inserting shimmed css breaking element counts", "num": "2591", "d": "6/2015"}, {"title": "nonsimple selectors throw error", "body": "throw error since nt support selectors cross elements", "num": "2589", "d": "6/2015"}, {"title": "gulp build fails", "body": "based latest master", "num": "2586", "d": "6/2015"}, {"title": "ca nt build project due formatexception", "body": "pulling latest changes running get npm install angular preinstall usersppprojectsangularangular node toolsnpmchecknodemodules purge npm dependencies looking good angular postinstall usersppprojectsangularangular node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall config amp amp tsd reinstall config toolstsdjson selenium standalone date chromedriver date dart sdk detected using gulpfile projectsangularangulargulpfilejs starting pubgetdart unhandled exception formatexception dart sdk version file format pub could recognize found getversion file version file main file startisolateisolatestarthandler dart rawreceiveportimplhandlemessage dart pubgetdart errored ms error formaterror gulp gulpemit gulporchestratoremittaskdone finish rejected promisewhen updated dartsdk latest version downloading website configuring accordingly version file contains version number still apparently wrong format idea problem", "num": "2585", "d": "6/2015"}, {"title": "browsers angular support", "body": "could nt find list supported browsers several references source code eg angular plan support old versions", "num": "2584", "d": "6/2015"}, {"title": "compilecontrolts suspicious member results", "body": "seems never assigned anything except never read linter", "num": "2579", "d": "6/2015"}, {"title": "causes nonzero contentlength header due passing undefined xhrsend", "body": "since confirmed calling causes nonzero contentlength header added request noticed webserver returning http error code calls tracked createhttpbackend changed post undefined problem occurs code reproduces bug essentially changing fixes problem", "num": "2576", "d": "6/2015"}, {"title": "run javascript tests strict mode", "body": "", "num": "2575", "d": "6/2015"}, {"title": "fix test test errors nt propagated gulp testunitjs possibly tasks", "body": "see job example debug code see actual error caught rethrown read property fromarray undefined error immediately know fix tinkered looks like problem calling subclass baseexception without message message would added calling gets lost pass arbitrary string super better message displayed may issue underlying engine seems related cc alexeagle looked ts issue", "num": "2570", "d": "6/2015"}, {"title": "feat docs control sorting class properties methods", "body": "docs angulario sort properties methods alphabetical order nt necessarily represent ideal order would described commit petebacondarwin introduces alphabetical ordering associated issue describing alphabetical ordering decided offline convo pete nt seem recall thought alphabetical best", "num": "2569", "d": "6/2015"}, {"title": "adding support css variable shimming", "body": "polymer support advocating using css variables pierce shadow dom boundaries instead combinator", "num": "2567", "d": "6/2015"}, {"title": "dart transformers add support styles styleurls directive", "body": "ref two new properties introduced list css text list css urls template loader modified resolved url css inline rules previously done shadow dom strategies exactly sure left done transformers use", "num": "2566", "d": "6/2015"}, {"title": "refactor http remove httpfactory", "body": "two things injected order perform http requests http class primary method plus shortcut methods like etc function equivalent think adds conceptscomplexity warranted like remove one requires two pages documentation one page document factory another document interface exists solely provide type information factory js factory import httpfactory ihttp class mycomponent constructor inject httpfactory gt thisangular ng class import http class mycomponent constructor gt thisangular ng idea simple callable function instead calling class method nice think tradeoff additional concepts nt worth overhead blesh caitp two think", "num": "2564", "d": "6/2015"}, {"title": "unit test error log message contain n", "body": "output log printed wrong ordrer know figured convinced output instead caused couple hours wtf expected value cc tbosch", "num": "2562", "d": "6/2015"}, {"title": "cleanup fakexhr tests", "body": "test use custom class fake reason introduced nt play well cascaded requests would call multiple time able use convert test flushing microtasks", "num": "2560", "d": "6/2015"}, {"title": "generated change detectors properly handle pure functions", "body": "fix handling pure functions reenable change detectors generated change detectors always reset result pure functions undefined", "num": "2556", "d": "6/2015"}, {"title": "feat router support hashchange mode", "body": "", "num": "2555", "d": "6/2015"}, {"title": "refactor move mockbackend testlib module", "body": "consistent submodules mockbackend exported new module loaded production code bundles", "num": "2554", "d": "6/2015"}, {"title": "improve support", "body": "ngoptions directive angular provides extra capabilities supported use select directly handling mismatches selected value available options handling prompt options maybe provide similar capabilities cc igorminar", "num": "2551", "d": "6/2015"}, {"title": "dear sir tring create angular base applciation net mvc amp signalr", "body": "dear sir tring create angular base application joined net mvc amp signalr first let say new world angular even js framework totally familiar even js self may issue angular hand may tring use sample change base structure jquery angularjs end change data structure customize add remove feature also create model sure scope create variable named chatmodel put variable incomplete code comment places nt convert angular lets talk issues came another first needed put msg collection add store collection data unaware create strongly typed also one constructor leave dynamic variable went like model like ui html xusername xmessage issue ui would nt get update automatically function call server example previously even conditon ui needed clicked twice update ui show one panel hide another one read lot used apply function though nt worked finally today understand start working wonder omit apply let angular self detect issues came across watch since nt worked went console see errors soon found apply self nt work properly body help put code may require page please help javascript var app angularmodule chatapp var advancechathub connectionadvancechathub appdirective ngenter function return function scope element attrs elementbind keydown keypress function event eventwhich scope apply function scope eval attrsngenter appcontroller chatctrl scope function scope chat ctrl full function aspx model dynamic viewbagtitle title layout viewssharedlayoutcshtml section headers section scripts resharper disable htmlpatherror resharper restore htmlpatherror signalr chat room name welcome chat room xusername xmessage c using system using systemcollectionsgeneric using systemlinq using systemweb using microsoftaspnetsignalr namespace chatsignalrhubs public class advancechathub hub readonly list currentmessage new list readonly list connectedusers new list one simple controller", "num": "2550", "d": "6/2015"}, {"title": "docs angulardi docs transient dependencies nt correct", "body": "docs transient dependencies say transient dependencies need transient dependency something want new instance every single time two options create child injector register factory function var inj injectorresolveandcreate bind myclassfactory tofactory dep gt gt new myclass dep somedependency var factory injget myclassfactory var factory factory depends implementation myclass generally holds expect nottobe two errors documentation according code samples token bound factory returns factory call nt returns instance factory returns class car var injector injectorcreateandresolve bind car tofactory gt return new car injectorget car error function getting instance something bound factory also always returns exact instance sure code correct docs wrong vice versa thoughts", "num": "2549", "d": "6/2015"}, {"title": "interpolation custom element working", "body": "see following plunker attribute value interpolation works element element", "num": "2547", "d": "6/2015"}, {"title": "shadowdomemulationintegrationspec test native strategy", "body": "seems like test executed times strategy instead strategies", "num": "2546", "d": "6/2015"}, {"title": "angular http service one exist features", "body": "related facts use service want without worry digest cycle basic xhr http easy angular previous http features worth considering intercepting http calls extending headers changing responses handling errors easy interface consistent technique angular apps look opposed xhr technique want thoughts", "num": "2544", "d": "6/2015"}, {"title": "using ngcontrolngmodelngformcontrol custom components", "body": "say simple component want use one would go right get exception try use", "num": "2543", "d": "6/2015"}, {"title": "set attribute component", "body": "wondering set attribute component seen issues say way go exist alpha figure renamed js import component view attribute component selector checkbox view templateurl checkboxhtml export class checkbox", "num": "2541", "d": "6/2015"}, {"title": "template input variable binding working uppercase characters", "body": "using uppercase character variable binding nt work leads following error", "num": "2538", "d": "6/2015"}, {"title": "dev experience minimal work testunit tasks", "body": "currently mbp seconds delay running one tasks till tests start run normally nt much pb since one would nt obliged start tasks often practice situations karma disconnects need kill process need switch dart js etc short starting tests tasks nt uncommon would like proposal minimal work executing tasks would propose remove clangformat circular dependencies check pub update wdyt particular reasons execute additional work booting unit tests", "num": "2536", "d": "6/2015"}, {"title": "build clang formatting errors testunitjs make karma hang", "body": "try run code base clangformat errors karma run tests opens browser window hangs without error messages warning clang imo either error fail whole build believe formatting important warning nt stop build processing personally would remove steps slow using tasks want iterate functionality fast take care formatting submitting pr cc mprobst igorminar", "num": "2535", "d": "6/2015"}, {"title": "filereaderload nt work", "body": "reading file client side typescript try use filereader way nt work filereaderonload function never called really need solution reading files please help bug work around thanks", "num": "2533", "d": "6/2015"}, {"title": "min quick start dart work", "body": "run app throw exception find reflection information testabilityregistry noreflectioncapabilitiesfactory package reflectorfactory package bindingresolve package resolvebindings package injectorresolve package injectorresolveandcreate package createappinjector bootstrap rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart ngzonerun package bootstrap main exception find reflection information package ngzoneonerrorwithoutlongstacktrace ngzonepackage main", "num": "2532", "d": "6/2015"}, {"title": "questionable initial load times systemjs", "body": "seems overhead systemjs loader compared others seems load lib initially even included bundled version angular noticeably different alternatives like webpack nt systemjs overhead since compiles simple callback style webpack systemjs", "num": "2531", "d": "6/2015"}, {"title": "feat expose api class helper methods plus optional factory", "body": "order achieve simple experience new http library somewhat match api angularjs http service implemented injectable function way use usability costs current approach interface must provided used alongside injection order provide type information would nice shorthand methods like get post etc reduce boilerplate could added onto http function decorating http factory methods would cause typescript know additional methods new design keep current workflow option require injecting instead make injectable class methods", "num": "2530", "d": "6/2015"}, {"title": "implement new content reprojection", "body": "overview current shadow dom emulation also contains content reprojection following limiations performant tries stay relatively close shadowdom spec see eg allow moving projected content programmatically somewhere else shadow dom component contains tag see main idea attach component views already compilation reproject content also already compilation performance gain everything happens compilation might executed build step reprojected nodes moved via directives shadow dom place nodes copied literally place tag compilation ie directive use also move projected content see example implementing component class tabgroup selected tab null constructor query tab tabs view template component class tab constructor public attribute label labelattribute string private viewquery templateref templates oninit thislabeltemplate thistemplatesget thisbodytemplate thistemplatesget see rules support projecting nodes directly host element locating elements work eg placed parent treated everything matched tags element destroyed nodes overflow reprojection happens compile time light dom projected content instantiated exactly regardeless whether projection actually happens via eg used via usage content light dom could side effects trying instantiate contains element multiple times needs fail light dom might side effects allow happen multiple times trying instantiate match place allowed would confusing users combination native shadowdom thing angular needs support native shadowdom place view content shadow root instead element children component declare like angular still already attach component views project content compilation however component views instantiated flag set angular move child nodes elements shadow root element notes cycles protoviews contain cycles attaching component views stop encounter nested attribute instantiation also stops places append templates nested components render side get benefits cloning single time also keep abstraction instantiating component would automatically also instantiate child views cache", "num": "2529", "d": "6/2015"}, {"title": "scroll even angular select never fires", "body": "hi created directive listen scroll event angular select ngoptions never fires however use jquery select without ngoptions everything seems fine anyone tell thanks directive like javascript appdirective scrolly function return restrict link function scope element attrs elementbind scroll function consolelog scrolled elementbind click function consolelog clicked live example", "num": "2523", "d": "6/2015"}, {"title": "use control list binding select", "body": "seems like value applied items populated cc vsavkin", "num": "2520", "d": "6/2015"}, {"title": "angular orderby empty string longer sorting index", "body": "previous versions angular passed empty string orderby ngrepeat would order index item array amp orders differently plunk shows order functions differently case order index orderby nt specified", "num": "2517", "d": "6/2015"}, {"title": "using routerinjectables throws exception", "body": "unsure updated systemjs keep getting following exception insert app bootstrap soon remove longer get issue anyone clue might cause", "num": "2512", "d": "6/2015"}, {"title": "shrinkwrap master", "body": "jeffbcross chance run shrinkwrap mac stated readme must run mac fsevents pkg get removed must admit run linux amp revert fsevents related changes see first bulltet", "num": "2511", "d": "6/2015"}, {"title": "forms unable bind controls regression", "body": "hi experiments forms found issue alpha seems inputs declared inside controlgroup unable bound ones declared inside component constructor nt find anything changelog justifies maybe missing something someone take look make plunker example left plunker pointing switch indexhtml see difference alpha alpha", "num": "2510", "d": "6/2015"}, {"title": "task build gulpfile", "body": "noticed travis dart build cause failures", "num": "2509", "d": "6/2015"}, {"title": "bug ngoptions object nt support property method prop", "body": "hello found bug ngoptions line element optiontemplateclone val optionid prop selected optionselected attr selected optionselected prop label optionlabel text optionlabel angular emulation view mode", "num": "2506", "d": "6/2015"}, {"title": "support url schemes view annotation", "body": "goal angular currently supports absolute urls angular support relative urls angular support custom url schemes addition dart plug able", "num": "2502", "d": "6/2015"}, {"title": "benchpress option save raw chrome tracing events file", "body": "file imported chrome tracing debug performance issue eg low average frame rate chrome tracing show distribution frame times tracking period", "num": "2501", "d": "6/2015"}, {"title": "viewcontainer hook injectors correctly", "body": "injector creating component cmp child injector containing fact ngif injectable cmp injector tree match dom tree since dom looks like cmp injector sibling ngif injector", "num": "2498", "d": "6/2015"}, {"title": "component changedetection parameter enum", "body": "think enum easier find different change detection types", "num": "2497", "d": "6/2015"}, {"title": "elementprobe work dartium", "body": "right using elementprobe output string", "num": "2496", "d": "6/2015"}, {"title": "benchpress refactoring split perflogmetrics", "body": "perflogmetrics split separate entities one per actual metric make easier maintain extend understand", "num": "2495", "d": "6/2015"}, {"title": "refactor directivemetadatareaderdart", "body": "relates directivemetadatareaderdart create empty instance fill fields read annotation mapping annotation fields properties get split better strategy would parse field annotation call new takes annotation fields cc tbosch kegluneq", "num": "2493", "d": "6/2015"}, {"title": "shadowdomstrategy insert styles documenthead", "body": "today emulated strategies insert tags document head work templates compiled serverside style information part template inserted doc head component first instantiated cc tbosch", "num": "2492", "d": "6/2015"}, {"title": "insert dom node inside directive", "body": "suppose directive js import directive import protoviewref viewcontainerref directive selector icon properties src export class icon viewcontainer viewcontainerref protoviewref protoviewref viewcontainer viewcontainerref constructor viewcontainer viewcontainerref thisviewcontainer viewcontainer set src src string let node dom node thisviewcontainerinsert node work way insert something view container case would element node using might mean insert shadow dom", "num": "2491", "d": "6/2015"}, {"title": "renderer using dynamiccomponentloader load component template", "body": "single binding eg text fails range exception add simple reprocase needed tbosch workaround wrap", "num": "2490", "d": "6/2015"}, {"title": "dart using identifier string literal ideal", "body": "dart used string templating using host done requires escaped alternative identifier dart", "num": "2484", "d": "6/2015"}, {"title": "want start early angular", "body": "hello folks issue wanted say developing app angular recently saw slide upcoming angular got excited want start angular early start pointers would helpful come xkcd smilecat", "num": "2483", "d": "6/2015"}, {"title": "extending query support querying name", "body": "currently query directive type flexible enough need extend query mechanism support querying querying directive children class headerfooter constructor viewquery header header viewquery header footer viewquery header footer headerandfooter queries return directives header footer querying dom result query depends provided name bound view return dom element someref points dom element return directive someref points directive mental model whatever access view also access via query cc rkirov mhevery", "num": "2482", "d": "6/2015"}, {"title": "emulatedscopedshadowdomstrategy work", "body": "following hotfix required get working locally dart injectable class hotfixedemulatedscopedshadowdomstrategy extends emulatedscopedshadowdomstrategy hotfixedemulatedscopedshadowdomstrategy styleinliner styleinliner styleurlresolver styleurlresolver document document super styleinliner styleurlresolver documentqueryselector head override future processstyleelement string hostcomponentid string templateurl styleel var csstext domgettext styleel csstext thisstyleurlresolverresolveurls csstext templateurl var inlinedcss thisstyleinlinerinlineimports csstext templateurl promisewrapperispromise inlinedcss domsettext styleel return inlinedcss future css css shimcssforcomponent css hostcomponentid domsettext styleel css domremove styleel insertstyleelement thisstylehost styleel else var css shimcssforcomponent inlinedcss string hostcomponentid domsettext styleel css domremove styleel insertstyleelement thisstylehost styleel return null", "num": "2479", "d": "6/2015"}, {"title": "styleurlresolver support package style dart uris", "body": "eg", "num": "2478", "d": "6/2015"}, {"title": "could change convertts convertdart", "body": "seems like convertts used dart un serialize directivemetadata annotation moving ts dart would allow using enum js dart handle differently kegluneq think", "num": "2477", "d": "6/2015"}, {"title": "remove allow use render services promote direct use", "body": "summary violating render separation need remove follows calls everything app side cast everything render side solve need callable independently properties methods found template compilation also less general actually need invoke method element nothing else ie simplified details make generic javascript trivial dart delegate underlying js engine using package note needs profiled performance penalties allow set properties call methods elements templates via expressions used work angular stored value variables instead always store value variable see special evaluation semantics intercept setting properties calling methods via calls make renderer api take instead example class directive javascript class ngclass constructor public renderer renderer public elementref elementref update thisrenderersetproperty elementref classes someclass true class domrenderer setproperty elementref elementref propname string propvalue var domelementref elementref renderelementrefelementclasslistset propname interface renderer setproperty elementref renderelementref propname string propvalue", "num": "2476", "d": "6/2015"}, {"title": "dynamiccomponentloaderloadintonewlocation usable elementref", "body": "component example workaround denoting simple enough workaround hidden away utility class may bump others run issue", "num": "2472", "d": "6/2015"}, {"title": "property interpolation working bootstrapped component", "body": "helloworld component displays title component used child component however interpolation nt work using bootstrap function would useful need initialize data server generated html pages indexhtml hellots javascript import component view component selector helloworld properties title view template title class helloworld title string constructor export helloworld appts", "num": "2469", "d": "6/2015"}, {"title": "quickstart nt seem work polymer components", "body": "add following quickstart indexhtml chart draw seems zonesjs conflict least exception thrown course comment script imports chart draw", "num": "2467", "d": "6/2015"}, {"title": "property binding named element eg button returns element elementref", "body": "works fine wo nt work web worker vsavkin", "num": "2461", "d": "6/2015"}, {"title": "nt use dart identical x strings", "body": "strings values guaranteed identical dart code returns even strings equal causing todo sample work dartium converted instance dart code prints", "num": "2458", "d": "6/2015"}, {"title": "directive usage app bootstrapped", "body": "suppose use directive app bootstrapped would nt work already tried anyway instance following case directivecomponent would work even transcluded tag app template way scenario work", "num": "2457", "d": "6/2015"}, {"title": "builddart expected errors", "body": "master expected cc kegluneq", "num": "2454", "d": "6/2015"}, {"title": "route problem", "body": "use rootscope routechangestart function evt next current nextoriginalpath condition check permission jump url angular js prevent id random think angular shoud let route match first", "num": "2453", "d": "6/2015"}, {"title": "fix docs resolve warnings logged gulp publicdocs task", "body": "cc naomiblack todo fix broken links pr x fix checkanchorlinks service dgeni url decode normalized urls checking dangling links x update dgenipackages dependency pr x fix document namesids include full heritage classes x merge get rid ambiguous link warnings caused opening issue track work fix errors running task petebacondarwin tells time better spent addressing issues ones generated task based current master warnings logged running", "num": "2452", "d": "6/2015"}, {"title": "support assigning expression result local variable within templates", "body": "particularly use cases piped output bound many places within template beneficial single piped expression example observable piped template html loading people personname would cause three subscriptions created people observable may redo work getting observable value observable multicast observable also problematic inside ngif evaluates true observable emitted value expressions assume people async null would raise exception since first value returned async pipe would vsavkin put together prototype directive currently using lt code gt example supports assigning result piped expression local variable within template html hello personname fetching people creates single subscription simplifies rest template implementation like add directive firstclass directive module vsavkin mhevery tbosch feedback implementation", "num": "2451", "d": "6/2015"}, {"title": "feat changedetection add bindonce support templates", "body": "troubleshooting issue related observable pipe always emitting null value observable reference passed pipe never matched already set observable instance template calling method return observable causing new observable created lifecycle tick would nice onetime binding capability angularjs bindings could expressed bind inside templates one option create pipe support soon nonundefined value returned leftside pipe would cache keep reference could add template sugar", "num": "2449", "d": "6/2015"}, {"title": "audit dependencies packagejson", "body": "currently listing obvious dev dependencies like runtime dependencies cc robwormald pkozlowskiopensource", "num": "2448", "d": "6/2015"}, {"title": "rename files npm release", "body": "extension introduced initially hint sources valid turns causing harm certain tools ca nt consume good cc robwormald pkozlowskiopensource", "num": "2447", "d": "6/2015"}, {"title": "dgeni fails process function declarations", "body": "failure cause import type import list export function getterfn works export function setterfn export function methodfn todo replace dgeni fixed export type setterfn obj value gt void fails export type getterfn obj gt export type methodfn obj args list gt", "num": "2446", "d": "6/2015"}, {"title": "use query get hold validators form controls", "body": "follow issue would nice ability query validators placed current host element use query list compose validators requires query able target host element", "num": "2443", "d": "6/2015"}, {"title": "docs add full docs http angulario", "body": "currently commented portion source angulario main entry point well backends useful classes documented examples come finished", "num": "2442", "d": "6/2015"}, {"title": "elementref exposes setters parentview boundelementindex accident", "body": "assume parentview boundelementindex modifiable api exposes tbosch", "num": "2440", "d": "6/2015"}, {"title": "proposal accessing named elements template", "body": "create following directive might want refer elements template html save right possible tbosch mentioned workaround would creating directive eg exportelement would work like", "num": "2439", "d": "6/2015"}, {"title": "testunitdart high latency karma takes long time serve contexthtml", "body": "spending mbp somewhere kicking test run tests actually running tried debug bit found dartium timeline confirms time spent fetching contexthtml deducing karma log looks like time spent watcher rather karmadart adapter generates list files serve repro run separate terminal run cc pkozlowskiopensource tbosch", "num": "2437", "d": "6/2015"}, {"title": "dart using stringsmicrosyntax properties list strange error prone", "body": "get reason move map list cases want properties reflect html mapping however either follow convention eg maxnum becomes maxnum cease list foobar foobar seems really strange dart suggestions use typed enforce convention eg camel becomes hyphenated go back angular dart semantics allow annotation property setter dart convention based auto assigns maxnum ngproperty void set maxnum int maxnum explicit ngproperty maxnum void set maxnum int maxnum", "num": "2435", "d": "6/2015"}, {"title": "consider removing tsd related definitions", "body": "might good idea remove tsd deps use typescript provides least definitions idea want use typescript def get conflicts", "num": "2433", "d": "6/2015"}, {"title": "js distribution strategy", "body": "happy tackle wanted list case already roadmap stop using extension makes quite difficult work source consumers likely going want bundle vs using prebuilt bundle consumers likely going want consume ts source vs commonjs already caused issues bunch extraneous dependencies listed packagejson currently vs devdependencies installing via jspm adds huge amount unnecessary stuff jspm systemjs support typescript including inbrowser transpilation might good time look getting set registry properly requires manually override able access source easily add registry add ovveride point would nice set correctly repo js file extensions also note loader spec changing latest version systemjs number breaking changes may bite us accounted", "num": "2428", "d": "6/2015"}, {"title": "deploy angular material components experimental internal benchmarks", "body": "want get early versions material components available gt people performance testing dart need figure deployment strategy sync internal use cases fyi rkirov", "num": "2422", "d": "6/2015"}, {"title": "build copy html files", "body": "seems broccoli removing files second build", "num": "2418", "d": "6/2015"}, {"title": "feat implement support headers url params objects http", "body": "constructors already implemented nearspec headers urlsearchparams pr incorporated request process incorporated way dictionary fullyconstructed object type attached request options passed properly attached outgoing request headers serialized url string params", "num": "2417", "d": "6/2015"}, {"title": "refactor reduce function args single parameter union type", "body": "existing implementation signature http pr similar native api makes difficult compose http observable chain use cases options also passed", "num": "2416", "d": "6/2015"}, {"title": "feat eventemitter dart support", "body": "initial implementation http pr tested js limited javascript using rxjs directly library changed use eventemitter abstraction uses rxjs javascript streams dart require extending support creation cold observable support map operator", "num": "2415", "d": "6/2015"}, {"title": "dependency injection inherited classes working properly", "body": "couple issues w di firstly unable di ngzone using appinjector syntax work around use constructor parameter syntax second issue observed ngzone getting injected twice parameters example sh class basecomponent constructor inject ngzone zone ngzone component selector todoapp appinjector store todofactory class subclasscomponent extends basecomponent constructor todostore store factory todofactory inject ngzone zone ngzone consolelog todostore result object ngzone super zone currently using version", "num": "2414", "d": "6/2015"}, {"title": "template error breaks page", "body": "error template cd stops breaks remainder page instead publish error continue processing remainder page", "num": "2413", "d": "6/2015"}, {"title": "custom render services", "body": "custom render services custom render services services live render layer accessible via interface app layer already two services users able create webworker scenario idea far create manual proxystubs able communicate processes allow user create render services would great angular provided general rpc mechanism allows generate client services given interface automatically proposal supersedes custom renderers example wrapping jquery ui dialog widget note directive specific ui dialog service used wrapping jquery widget directive properties closetext events close exportas jqdialog lifecycle ondestroy class jquerydialogdirective close eventemitter subscriptions closetext string constructor public renderer jqueryrenderer public element elementref thisrenderercreate thiselement dialog thissubscriptionspush thisrendererlisten thiselement close observer thisclose set closetext value string thisrenderersetoptions thiselement dialog closetext value todo allow directives continue living hydratedehydrate ondestroy thissubscriptionsforeach subscription gt subscriptionunsubscribe thisrenderercall thiselement dialog destroy open thisrenderercall thiselement open close thisrenderercall thiselement close class jqueryrenderer create element elementref widgetname string options stringmap observable setoptions element elementref widgetname string options stringmap observable listen element elementref event string observable call element elementref widgetname string methodname string observable class domjqueryrenderer implements jqueryrenderer examples would nt want injector per element render side well perf simplicity reasons consequence custom render logic needs encapsulated singleton services restricting custom render logic use setting properties calling actions listening events means communication app side restrictive allowing custom render logic generalization ie add new abstractions primitives angular todo discuss use render directives ca nt reference app side compiler take configuration root component restrictions interface custom render services render service ca nt call app service every method must either return eg events angular provide hooks allow users marshal object might interfaces one app side uses one render side gets dom element angular automatically unwrapping dom element vice versa implications dom elements referenced directives render services rename used signal special users write render services potential later changes allow directives app side implement hydratedehydrate survive hydration non webworker scenario dev mode enforce parameters given render service serializable todo injector separate injectors webworker scenario todo show register custom render services webworker scenario discussed", "num": "2409", "d": "6/2015"}, {"title": "fix sync bindings async dependencies", "body": "error case described make sure errors get detected bindings fix depends async depends async depends async", "num": "2408", "d": "6/2015"}, {"title": "using ngformmodel directive throws exception", "body": "updated version forms longer work looked source code found examples use forms html tasks add js component selector todos appinjector tasks view templateurl appcomponentstodostodoshtml directives ngfor formdirectives task export class todos constructor inject formbuilder builder inject tasks tasks thistasks tasks thistasks tasksentries thistodo buildergroup desc validatorsrequired thisdesc thistodocontrolsdesc add event value eventpreventdefault value valuelength return thistasksadd value thisdescupdatevalue keep getting exception tried combinations could think directives seem able figure keep getting exception pointers happening", "num": "2406", "d": "6/2015"}, {"title": "pass value parent component child via property", "body": "see following plunk two components defined trying pass data parentcomponent childcomponent using foo property child component works switch previous version", "num": "2405", "d": "6/2015"}, {"title": "lifecycle method onchange called oninit oncheck", "body": "attached lifecycle methods attached component reason sequence methods get called component instantiated method called first methods called sequence docs says notify directive bindings changed method called right directive bindings checked children bindings checked invoked least one directive bindings changed called initially component instantiating whenever change value property component fired first intended behavior simple plunker question view console sequence", "num": "2404", "d": "6/2015"}, {"title": "parser unused ast functioncall", "body": "would parsed nt think could ever generated able drop vsavkin think", "num": "2403", "d": "6/2015"}, {"title": "q router routeroutlet pass propertiesevents components", "body": "yo btford pass propertiesevents components loaded initial assumption nt work using nt make sense although allowing include hostinjectorsviewinjectors might interesting thanks", "num": "2399", "d": "6/2015"}, {"title": "question pipe pipe", "body": "debate back ngdart decided keep colon format like revive debate pipes probably used gotcha colon format currently parsed might want switching make resolving ambiguity easier", "num": "2398", "d": "6/2015"}, {"title": "style scope component aligned native web component shadow dom", "body": "understanding angular components built top web component standards per web component standards scope style inside shadow dom scoped words style light dom nonshadow dom impact elements inside shadow dom however seem case apologies missing something refer tried write native web component well angular component used page page stylesheet styles button style present light dom native web component angular component similar html markup includes button expected styling button inside native web component affected style light dom however button inside angular component styled based button style defined light dom means render behavior native web component component different ie style scoped angular component expected additionally see shadowroot rendered page angular component whereas appears expected native web component understanding angular implement native shadow dom implementation possible emulate shadow dom browsers support using chrome version believe supports native shadow dom using angular typescript code found screenshot shows difference styling button native web component vs angular component chrome browser chrome dev tools show shadowroot missing component named present native web component named", "num": "2397", "d": "6/2015"}, {"title": "anchorscroll root page", "body": "hi issue anchors go example domainfoo bar work properly want go domain bar get redirection domainbar", "num": "2396", "d": "6/2015"}, {"title": "current status roadmap angular cli", "body": "know igor working get detailed status work done remaing parts plan completing", "num": "2393", "d": "6/2015"}, {"title": "red herring error message class object instance getter value", "body": "demo see app click bindings link component fails constructed template still loaded angular evaluates template expressions instead component instance error messages quite confusing lead developer incorrect debugging path eg class object instance getter value nosuchmethoderror method found value receiver instance object arguments value bindingsview stacktrace dynamicchangedetectorcheck package dynamicchangedetectordetectchangesinrecords package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinlightdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart", "num": "2392", "d": "6/2015"}, {"title": "router propagating exceptions navigation", "body": "reproduce see demo component throws exception constructor component created exception displayed chrome devtools console", "num": "2391", "d": "6/2015"}, {"title": "dynamicchangedetectorcheck truncating stack traces", "body": "application throwing exception change detection however dynamicchangedetector reporting complete stack trace prints stacktrace dynamicchangedetectorcheck package dynamicchangedetectordetectchangesinrecords package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinlightdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart print objectnosuchmethod dart objectnosuchmethod dart localinstancemirrorinvokegetter dart localinstancemirrorgetfieldslow dart localinstancemirrorgetfield dart reflectioncapabilitiesgetter package dynamicchangedetectorcalculatecurrvalue package dynamicchangedetectorreferencecheck package dynamicchangedetectorcheck package dynamicchangedetectordetectchangesinrecords package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinlightdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart notice first stack trace missing frames", "num": "2390", "d": "6/2015"}, {"title": "test dynamic component loader propagates errors dynamic component fails load", "body": "see error case tests dynamiccomponentloaderspecdart suspect bug eating exceptions coming dynamic components", "num": "2389", "d": "6/2015"}, {"title": "benchpress documentation getting started guide", "body": "ca nt find documentation getting started guide benchpress start learning use", "num": "2388", "d": "6/2015"}, {"title": "work incremental builds", "body": "first run good changing file build breaks symlink place points invalid path", "num": "2386", "d": "6/2015"}, {"title": "base url support templates stylesheets", "body": "goal add support templatestylesheets base url components refer resources relative paths problem html prefix automatically need mark attributes take relative urls html files explicitly nt know attributes urls ones also html files could something like solution compute module see search replace url form module", "num": "2384", "d": "6/2015"}, {"title": "relative url support annotations", "body": "goal support loading resources components relative way reusability javascript commonjs modules standards publishes passed annotation dart dart user explicitly set instead extract location library path see urimapper inlining later could add predeploy step inline urls annotations directly", "num": "2383", "d": "6/2015"}, {"title": "css url view", "body": "support set urls need loaded component heave inline version", "num": "2382", "d": "6/2015"}, {"title": "transformer error almost empty files", "body": "right get following errors build think almost empty files inside look like eg compilerperfdart error build follows", "num": "2380", "d": "6/2015"}, {"title": "get rid app injector improve element injector", "body": "goals x get rid app x allow annotation declare default visibility default x directive default visibility hidden x introduce annotation inject current element x consumer injection able override default visibility x rootplatform injector element common instances location cookies etc", "num": "2379", "d": "6/2015"}, {"title": "update packagejson", "body": "current text outofdate appears users exposed", "num": "2377", "d": "6/2015"}, {"title": "angularjs expression visible", "body": "clicking contributor image first time provided description like click image second time provided following", "num": "2376", "d": "6/2015"}, {"title": "renamed imports break", "body": "common pattern angular code import viewmodule view name viewmodule known within file modules may import view choose renames currently dgenibased dts generator naively looks text declared symbols viewmodule leaks dts current workaround define nested module viewmodule declares empty interfaces type exported view bad breaks completion typechecking", "num": "2373", "d": "6/2015"}, {"title": "scrolling slow big table benchmark", "body": "seeing fps angular version benchmark code tbosch thought related test use raf interacting poorly zones", "num": "2371", "d": "6/2015"}, {"title": "gulp servejsprod building src file updated", "body": "seen file angularmodulesbenchmarkssrcnaiveinfinitescrollappts linked migration ts", "num": "2369", "d": "6/2015"}, {"title": "angular broke app", "body": "updated angular started getting errors console please help need go live tomorrow", "num": "2368", "d": "6/2015"}, {"title": "missing npm metadata", "body": "good day try deploy npm webjar error typical npms npm metadata missed example nt", "num": "2366", "d": "6/2015"}, {"title": "loading jquery angularjs", "body": "experiencing issue ngdraggable library immediately solved loading jqueryjs angularjs issue although fixes issues library breaks entire code base tons console errors including error jqlite nosel angular community insight may happening could angularjs overwriting hidding funtionality jquery loading jquery causes ngdraggable break", "num": "2365", "d": "6/2015"}, {"title": "support binding classstyle", "body": "", "num": "2364", "d": "6/2015"}, {"title": "reusable annotations", "body": "already existing angulardart applications number services reusable apps aid migration achieve one needs denote injectable significant issue service code needs import potentially run transformers ideally annotations live third package angularannotations since rarely change would add much maintenance cost allow services depend one package neither didart", "num": "2363", "d": "6/2015"}, {"title": "propertysetterfactory nt cache property setters globally leads problems transformer", "body": "old see comments transformers nt set async gap generatordart first set wait compiler compile reset state although caller particular method sequences calls call sites generatordart nt yields adding settersgetters wrong files solution change new method takes template string normal method delegate one internally change first load template set temporal call reset temporal", "num": "2359", "d": "6/2015"}, {"title": "bad exports naming directivecomponent", "body": "toplevel module reexports component componentannotation actual component class extends directive however reexport class directive directiveannotation reexported directive var declaration breaks since ends component extends directive type directive class current workaround export directive annotation dts breaks application decorators exposed js application", "num": "2356", "d": "6/2015"}, {"title": "ngif broken", "body": "repro", "num": "2355", "d": "6/2015"}, {"title": "remove favor tests", "body": "clean introducing testcomponentbuilder cc juliemr", "num": "2354", "d": "6/2015"}, {"title": "add support global helper functions within template", "body": "would great router global helper function call within portion template well javascript component code currently expression code local relative parent component within template global helper function called anywhere nt possible let make happen", "num": "2352", "d": "6/2015"}, {"title": "function", "body": "update getting error possible solution hint builded js file return empty object version everything works fine", "num": "2343", "d": "6/2015"}, {"title": "implementport standard set pipes", "body": "see behaviro currency date filter x json x limitto x lowercase number orderby x uppercase", "num": "2340", "d": "6/2015"}, {"title": "create host element", "body": "right angular ways loading dynamic components using view dynamically loads another component onto element including view component using regular creates host view via ie view contains host element component option following downsides allows component instances element including possible app injectors unexpected corner cases also lead component without view handle animations ca nt animate adding shadow root ie user wants use option animations needs use ways customer gt designed actually needs host element change option also creating host view inserting child given note would also allow remove method leaving one public method", "num": "2339", "d": "6/2015"}, {"title": "upgrade gulpclangformat", "body": "gulpclangformat prints version number clangformat uses make easier debug issues dependencies changed expect able shrinkwrap ballet", "num": "2338", "d": "6/2015"}, {"title": "router assigning component doenst component causes issue", "body": "provide annotation class referenced via route error thrown provide warning", "num": "2336", "d": "6/2015"}, {"title": "typescriptification cleanup", "body": "sources converted ts clean project x remove transpiled x publish ts sources npm remove folder npm releases", "num": "2335", "d": "6/2015"}, {"title": "performance regression tree benchmark", "body": "tree benchmark takes machine compared months ago compared baseline focus performance days get number note number kept getting worse time via single commit far tell", "num": "2334", "d": "6/2015"}, {"title": "remove dynamicchangedetectorhydrated method", "body": "used except tests removing allow us add concrete type field generated change detectors cc vsavkin", "num": "2330", "d": "6/2015"}, {"title": "router features", "body": "cc matsko igorminar outstanding items based discussions past days doubleslash syntax overlays plus good name maybe reclaim sibling somehow behavior rerouting navigation components committed cancel start recognition canactivate loadresourcesresolve phases components committed phases loadresolve finish current nav beginning next databinding parent component outlet child component allow user metadata route configs examples tests", "num": "2329", "d": "6/2015"}, {"title": "triage process impact lgtm process", "body": "questionscomments new issue triage process add impact severity attribute similar concepts bug trackers votes metoos stars signal feature important users unfortunately github lacks concept triage process compensating priority usually calculated function effort impact feature severity bug without impact attribute one would need read comments understand team decided deprioritize issue low impact effort needed could also explain team decided pursue bigeffort project high impact enough warrant effort also impact something users would lot say could used downvote proposal believe actually trouble worth similar cases yet allowed merge need cleanup think renamed would put distance end state pr always pr could also obsolete rejected superseded another pr think also need metacomponent discussing team processes triage process processes related releasing npm pub suggestions cc mhevery igorminar", "num": "2326", "d": "6/2015"}, {"title": "router mocks testing utilities location makes testing extremely difficult", "body": "ideally like something like", "num": "2325", "d": "6/2015"}, {"title": "router specifying routeconfig root component throws cryptic npe", "body": "use routerlink directive", "num": "2323", "d": "6/2015"}, {"title": "introduce types nodeselements", "body": "typing nodeselements different implementions clientserver", "num": "2322", "d": "6/2015"}, {"title": "renderer possible get reference transcluded content", "body": "eg following component dart directive selector bar class bardirective final elementref elementref final protoviewref protoviewref bardirective thiselementref thisprotoviewref component selector foo view template r prepost class foocomponent grab elementrefprotoviewref add view container elsewhere contains working intended tbosch", "num": "2320", "d": "6/2015"}, {"title": "tsd updated latest version", "body": "wondering tsd typings date latest alpha version seems like typings version alpha version available dev preview npm else could typings sync current alpha version npm build angular directory comes dist npm", "num": "2318", "d": "6/2015"}, {"title": "ts rttsassert", "body": "", "num": "2314", "d": "6/2015"}, {"title": "support assigning directives local names template", "body": "currently support following angular assign component element limiting component access native element interact directives template need able assign directive local name template example directive selector ngmodel exportas form class ngmodeldirective formvalid valid invalid resolution rules directive including component define default templatename component exported implicit multiple directives applied element define long developer try use developer tries multiple directives element exported form angular throw", "num": "2313", "d": "6/2015"}, {"title": "explicitly support dynamic application loadingunloadingmultiloading", "body": "sort moving right direction tbosch recent refactoring dynamic component loading bootstrap need formal support documentation dynamically unload application load new one well bootstrap multiple apps simultaneously", "num": "2312", "d": "6/2015"}, {"title": "ts benchmarksexternal", "body": "", "num": "2311", "d": "6/2015"}, {"title": "tests clicks working using capabilities", "body": "calls nothing run benchmarks tests using protractor capabilities errors browser log clicking buttons manually works removing entry capabilities also makes tests work probably bug chromedriver needs investigation simple reproduction case file issue browsername chrome chromeoptions mobileemulation devicemetrics width height pixelratio", "num": "2309", "d": "6/2015"}, {"title": "rename templateloading lib xhr service disambiguate forthcoming http lib", "body": "vicb adding files tests http library could confusing contributors seeing many implementations xhr shared directories like services mock like rename files better clarity purpose think prefixing existing xhr implementation filenames like", "num": "2305", "d": "6/2015"}, {"title": "refactor application bootstrap hide implementation detail user", "body": "cc yjbanov kwalrath talking folks recently need user instantiate remember spoke back concerns hiding user completely ca nt remember specifics hoping get documented since get question lot proposal applicationts export function bootstrap reflectorreflectioncapabilities null reflectorreflectioncapabilities new reflectioncapabilities bootstrapstatic export function bootstrapstatic current implementation user writes maindart rewrite think", "num": "2304", "d": "6/2015"}, {"title": "run ddc analysis part ci build", "body": "ddc new compiler dart strict catch type errors currently catching proposal introduce experimental new build job addition existing jobs", "num": "2303", "d": "6/2015"}, {"title": "public api docs api surface needs curation", "body": "public docs generated lot entries change detection di really userrelevant need go prune gets exported", "num": "2301", "d": "6/2015"}, {"title": "tsification mark fields privateprotected", "body": "convention atscript prefixing privates underscore also needed emit produces private fieldsmethods dart mark actually private typescript enforce notes could use linter warn field underscore prefix nt private sometimes access variables outside class pretending semantics underscoreprefix moduleprivate", "num": "2300", "d": "6/2015"}, {"title": "performance regression tables use shadow dom emulation", "body": "large tables eg rows columns really slow due calling see every view added resulting runtime", "num": "2298", "d": "6/2015"}, {"title": "custom events bubble", "body": "could nt get custom event ping bubble root component dom event click works fine using", "num": "2296", "d": "6/2015"}, {"title": "proposal behaviors", "body": "story consider following scenario want listen custom event defined want reuse across entire application one exist natively dom one want massage throttle etc example dart abstract class hoverhandler stream get onhover directive selector hover hostinjector const const binding hoverhandler toalias hoverdirective class hoverdirective implements hoverhandler final element domelement hoverdirective elementref elementref domelement elementrefdomelement override stream get onhover reality whole bunch black magic let dumb return domelementonmousemove want use behavior component works remember put elements proposal instead could automatically add directivesdecorators example hover may seem trivial imagine something similar standard aria access dart abstract class ariaeventshandler stream get onpress eg mouse click tap space enter key stream get onrelease eg mouse tap space enter key stream get onnext eg keyboard right horizontal lists keyboard vertical stream get onprevious opposite component selector fancyselect behaviors const ariaeventshandler class selectcomponent selectcomponent ariaeventshandler ariahandler ariahandleronpresslisten alternatives alternatives require additional boilerplate work today manually adding decorators everywhere dom creating wrapper components eg jelbourn mhevery", "num": "2292", "d": "6/2015"}, {"title": "inheriting directive overwrites annotations child class", "body": "say directive create child class functionality identical demo app element totally inert empty however change included rendered seems annotations overwriting annotations latter extends former used work components converted typescript making even clear something ts decorators fyi vsavkin rkirov", "num": "2291", "d": "6/2015"}, {"title": "clangformat break link tags comments", "body": "line wrap reformat introduced clangformat made doc comments break oddly mostly aesthetic annoyance browsing code cases formatter breaks link tag across lines dgeni doc formatter ca nt resolve link make clangformat smarter breaks lines make dgeni tolerant linebreaks link statements", "num": "2287", "d": "6/2015"}, {"title": "resource nt correctly resolve dot notation uri parameters", "body": "uri parameter contains dot notation express path retrieve value given object resource correctly collect keyvalue pairs via lookupdottedpath extractparameters however nt get applied correctly routeseturlparams issue spliting url value w results breaking dot notation parameter separate parameters example path parent parentparentidchild childid resolved given parent parentid childid expected correct value returned lookupdottedpath passed params argument routeseturlparams childid parentparentid", "num": "2284", "d": "6/2015"}, {"title": "build reports bunch error messages", "body": "tried fresh new build dart node deleted get following stack trace warning really long stack trace shell sekibomazic sekibsmbp dpaangular gt gulp build dart sdk detected using gulpfile starting buildcleanjs starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools starting builddart starting buildpackagesdart starting buildcleandart starting buildcleantools finished buildcleantools \u03bcs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools \u03bcs finished buildcleandart ms finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev starting buildtreedart starting buildtreedart starting buildjsprod starting buildjscjs starting buildjscjs tree diff diffingtraceurcompiler changes files dirs tree diff tstodarttranspiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff dartformatter changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtscompiler changes files dirs duplicate identifier clientx duplicate identifier clienty duplicate identifier identifier duplicate identifier pagex duplicate identifier pagey duplicate identifier screenx duplicate identifier screeny duplicate identifier target duplicate identifier altkey duplicate identifier changedtouches duplicate identifier ctrlkey duplicate identifier metakey duplicate identifier shiftkey duplicate identifier targettouches duplicate identifier touches duplicate identifier length duplicate identifier item duplicate identifier touches duplicate identifier targettouches duplicate identifier changedtouches duplicate identifier altkey duplicate identifier metakey duplicate identifier ctrlkey duplicate identifier shiftkey duplicate identifier length duplicate identifier item duplicate number index signature duplicate identifier identifier duplicate identifier target duplicate identifier screenx duplicate identifier screeny duplicate identifier clientx duplicate identifier clienty duplicate identifier pagex duplicate identifier pagey error diffingtscompiler typescript found errors listed error diffingtscompiler typescript found errors listed diffingtscompilerdofullbuild diffingtscompilerrebuild diffingpluginwrapperrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback buildjscjs errored diffingtscompilerdofullbuild diffingtscompilerrebuild diffingpluginwrapperrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback builddart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildpackagesdart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback broccolijsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildtreedart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildtreedart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback broccolijsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildtreedart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback broccolijsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildtreedart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildpackagesdart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback broccolijsdev errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildtreedart errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback buildjscjs errored error object object formaterror gulp gulpemit gulporchestratoremittaskdone finish cb finish gulponerror gulpemit gulporchestratoremittaskdone finish lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp internal publish lib rsvp internal publishrejection lib rsvp asap flush processtickcallback tree diff diffingtraceurcompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtraceurcompiler diffingtscompiler funnel treemerger destcopy slowest trees cumulative total avg diffingtraceurcompiler ms diffingtscompiler funnel ms treemerger ms destcopy slowest trees total diffingtraceurcompiler diffingtscompiler funnel treemerger destcopy slowest trees cumulative total avg diffingtraceurcompiler ms diffingtscompiler funnel ms treemerger ms destcopy finished broccolijsdev finished buildjsprod tree diff destcopy changes files dirs slowest trees total dartformatter tstodarttranspiler slowest trees cumulative total avg dartformatter tstodarttranspiler finished buildtreedart starting cleanupbuilder gets updated though", "num": "2281", "d": "6/2015"}, {"title": "promise wrapper return type", "body": "ref following code templateloaderts generates following error note force return type due possible widen type promise mprobst idea solve", "num": "2280", "d": "6/2015"}, {"title": "using component class detect property changes throws exception", "body": "want detect property binding changes using illustrated docs component template uses binding throws exception js import componentannotation component viewannotation view component selector task properties chore model view templateurl componentstasktaskhtml directives export class task constructor set chore value use causes exception thrown consolelog value html choredesc", "num": "2279", "d": "6/2015"}, {"title": "json pipe update object change", "body": "maybe design use pipe object inside whenever change object directive changes reflected repo actually use see", "num": "2278", "d": "6/2015"}, {"title": "changes properties expression trigger onchangeset method property change", "body": "directive called property also named assigning property expression evaluates value input typing also attached set method onchange lifecycle method property directives controller class expectation type input box set method onchange method get triggered isnt refer plnkr line number however attach event directive everything works refer plnkr line number uncomment line comment line javascript directive selector validation lifecycle onchange properties value validation class validator constructor elementref elementref thisel elementrefdomelement set value newvalue consolelog newvalue onchange p consolelog p thisvalue x component selector app view template", "num": "2277", "d": "6/2015"}, {"title": "work safari osx ios", "body": "load error failed load resource server responded status found faviconico line error parser error unexpected token column ngfor var assignee milestoneassigneesitems null baseexception error parseprimary parsecallchain parseprefix parsemultiplicative parseadditive parserelational parseequality parselogicaland parselogicalor parseconditional parseexpression parsepipe parsetemplatebindings parsetemplatebindings parsetemplatebindings process internalprocess process process process process process process compiletemplate run zoneboundfn lib promise internal trycatch lib promise internal invokecallback microtask run zoneboundfn flush logerror line defaulterrorreporter line onerror line onerror line run line anonymous function line zoneboundfn line lib promise internal trycatch line lib promise internal invokecallback line anonymous function line anonymous function line microtask line run line anonymous function line zoneboundfn line flush line", "num": "2275", "d": "6/2015"}, {"title": "events property allow renaming similar properties", "body": "following work", "num": "2272", "d": "6/2015"}, {"title": "merge facadebrowser domdomadapter", "body": "chatting tbosch nt think need separate source confusion determining type declared", "num": "2270", "d": "6/2015"}, {"title": "fakeasync run flushmicrotasks executing test", "body": "support ngmodel single fields inject testbed fakeasync tb gt var form new control var ctx mycompcreate name oldvalue form form call flushmicrotasks actually execute block think fakeasync run flushmicrotasks tick executing body", "num": "2269", "d": "6/2015"}, {"title": "single componenthost property mimics html", "body": "goal simplify binding host element get rid hostactions properties", "num": "2268", "d": "6/2015"}, {"title": "missing error message throwing js", "body": "yields karma", "num": "2262", "d": "6/2015"}, {"title": "router use strongly typed errorchecked classes maps", "body": "eg additionally could use errorsassertions catch invalid configuration eg component redirectto throw", "num": "2261", "d": "6/2015"}, {"title": "helloworld working dart", "body": "getting error master trying run helloworld looks like introduced could ptal", "num": "2260", "d": "6/2015"}, {"title": "ngaria module applies ariadisabled attribute element nonexplicit false value present", "body": "recently coding button disabled function indicating forms requirements met scopenotreadyforprocessing returns true scope variable indicating request processed scoperequestprocessing true declare requestprocessing variable true controller left undefined controllers scope applied ngdisabled directive element like found ngdisabled properly applies unapplies attribute button expression return explicit true value ngaria unapply ariadisabled attribute expression return explicit true value returning undefined javascript var scope scopea false scopea scopeb lt undefined jsfiddle example seems undefined example see undefined perhaps gets converted true assigned scope via ngmodel completely sure causing simple example see applying", "num": "2259", "d": "6/2015"}, {"title": "angular update element properties directive property binding", "body": "directive element invoke directive element invoke", "num": "2254", "d": "6/2015"}, {"title": "key events test failing azerty computer", "body": "generates following error failures keyevents display correct key names message expected q stack error failed expectation object", "num": "2253", "d": "6/2015"}, {"title": "scriptscibuildandtestsh js freezes unit tests", "body": "env ubuntu master june scripts freezes unit tests ctrlc get test running c starting cleanupbuilder finished cleanupbuilder ms selenium standalone date chromedriver date dart sdk detected dart sdk detected using gulpfile dartangulargulpfilejs starting servejsprod using gulpfile dartangulargulpfilejs starting buildcssmaterial finished buildcssmaterial starting cleanupbuilder finished cleanupbuilder ms finished servejsprod server started port testing chromedesktop starting selenium standalone server launcher running instances webdriver", "num": "2252", "d": "6/2015"}, {"title": "binding functions nested directives isolated scope failing", "body": "update seems introduced issue binding functions nested directives example plunker example code var app angularmodule myapp appcontroller myctrl function thissearchfunction function term consolelog searched term appdirective outerdirective function return restrict e scope outer amp template controller function appdirective innerdirective function return restrict e scope inner amp template click controller function thisexecute function thisinner fred controlleras cx bindtocontroller true working new way clicking link see following error console typeerror use operator search cx fred fn eval destination anonymous function inner execute fn eval callback scope eval scope apply htmlanchorelement htmlanchorelementeventhandler", "num": "2251", "d": "6/2015"}, {"body": "related need roll another dart dev build fix angular may want disable dev builds get", "d": "6/2015"}, {"body": "local build output build error transform injectorgenerator benchmarksexternalwebsrctreetreebenchmarkdart threw error caused null object getter importsandexports nosuchmethoderror method found importsandexports receiver null arguments analysistasksafelyperform package analysistaskperform package analysiscontextimplcachedartresolutiondata package analysiscontextimplgetdartresolutiondata package package analysiscontextimplcomputelibraryelement package resolverimplperformresolve package mappedlistiterableelementat dart listiterabletolist dart resolverimplperformresolve package rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart microtaskloop dart microtaskloopentry dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart caused null object getter importsandexports nosuchmethoderror method found importsandexports receiver null arguments objectnosuchmethod dart objectnosuchmethod dart libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolveraddtodependencymap package libraryresolvercomputedependencymap package libraryresolvercomputelibrariesincycles package libraryresolverresolvelibrary package resolvedartlibrarytaskinternalperform package analysistasksafelyperform package analysistaskperform package analysiscontextimplcachedartresolutiondata package analysiscontextimplgetdartresolutiondata package package analysiscontextimplcomputelibraryelement package resolverimplperformresolve package mappedlistiterableelementat dart listiterabletolist dart resolverimplperformresolve package rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart microtaskloop dart microtaskloopentry dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart package analyzersrcgeneratedenginedart analysiscontextimplrecordresolvedartlibrarytaskresults package analyzersrcgeneratedenginedart analysiscontextimplanalysistaskresultrecordervisitresolvedartlibrarytask package analyzersrcgeneratedenginedart resolvedartlibrarytaskaccept package analyzersrcgeneratedenginedart analysistaskperform package analyzersrcgeneratedutilitiesgeneraldart performancetagimplmakecurrentwhile package analyzersrcgeneratedenginedart analysistaskperform package analyzersrcgeneratedenginedart analysiscontextimplcachedartresolutiondata package analyzersrcgeneratedenginedart analysiscontextimplgetdartresolutiondata package analyzersrcgeneratedenginedart package analyzersrcgeneratedenginedart analysiscontextimplcomputelibraryelement package codetransformerssrcresolverimpldart resolverimplperformresolve dart internaliterabledart mappedlistiterableelementat dart internaliterabledart listiterabletolist package codetransformerssrcresolverimpldart resolverimplperformresolve dart asynczonedart rootzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package analyzersrcgeneratedenginedart analysiscontextimplrecordresolvedartlibrarytaskresults package analyzersrcgeneratedenginedart analysiscontextimplanalysistaskresultrecordervisitresolvedartlibrarytask package analyzersrcgeneratedenginedart resolvedartlibrarytaskaccept package analyzersrcgeneratedenginedart analysistaskperform package analyzersrcgeneratedutilitiesgeneraldart performancetagimplmakecurrentwhile package analyzersrcgeneratedenginedart analysistaskperform package analyzersrcgeneratedenginedart analysiscontextimplcachedartresolutiondata package analyzersrcgeneratedenginedart analysiscontextimplgetdartresolutiondata package analyzersrcgeneratedenginedart package analyzersrcgeneratedenginedart analysiscontextimplcomputelibraryelement package codetransformerssrcresolverimpldart resolverimplperformresolve dart internal listiterabletolist package codetransformerssrcresolverimpldart resolverimplperformresolve dart isolate rawreceiveportimplhandlemessage", "d": "6/2015"}, {"body": "fix way extra testing file merge request keep posted", "d": "6/2015"}, {"body": "cc naomiblack igorminar rkirov", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "pascalprecht version using share code example used tests injected fine without explicit decorators", "d": "6/2015"}, {"body": "alpha typescript unfortunately plunkr nt support typescript way demonstrate end really importing http angular telling ca nt resolve dependency due broken annotations push code github tho maybe something local env tue jun pm jeff cross notifications githubcom wrote pascalprecht version using share code example used tests injected fine without explicit decorators reply email directly view github", "d": "6/2015"}, {"body": "injecting somewhere along way", "d": "6/2015"}, {"body": "could try", "d": "6/2015"}, {"body": "context specific case expression literal value literal value taken html everything string passing value expression parser interpreted number literal short want enforce types use expressionbinding syntax otherwise everything string", "d": "6/2015"}, {"body": "ah clears things thanks", "d": "6/2015"}, {"body": "try using formbuilder js import component view bootstrap import formbuilder validators formdirectives controlgroup import inject component selector radar appinjector formbuilder view template formcontrolslevelsvalue directives formdirectives export class radarview form controlgroup builder formbuilder constructor inject formbuilder builder formbuilder thisbuilder builder thisform buildergroup levels bootstrap radarview", "d": "6/2015"}, {"body": "tried suggested nt work regarding guess simply missing", "d": "6/2015"}, {"body": "error says problem property div matching directive property since binding see short change get rid error reported issue", "d": "6/2015"}, {"body": "fair enough getting console btw remove", "d": "6/2015"}, {"body": "also think add form template otherwise say form wo nt work correctly working component html removal ca nt get work without", "d": "6/2015"}, {"body": "blocked", "d": "6/2015"}, {"body": "btford check whether effort assigned seems reasonable please update", "d": "6/2015"}, {"body": "punted back backlog router issues urgent", "d": "6/2015"}, {"body": "slipped work anticipated", "d": "6/2015"}, {"body": "see also adds ability inline urls", "d": "6/2015"}, {"body": "would like type methods benefit typescript usage proposal add syntax clue says type replaced even imagine comment maybe different syntax bit could work yjbanov think otherwise replacing comment pointing issue eg", "d": "6/2015"}, {"body": "yegor simple suggestion add etc maybe dom types mapped dynamic need verify whether places want types present identity mapping appropriate dom api actually present dartanalyzer", "d": "6/2015"}, {"body": "adding fake type mappings sgtm though case make type mappings smarter currently simple string substitutions nt look declaration location symbol generic type names improve type name substitution match ie instead", "d": "6/2015"}, {"body": "also clear dom abstraction proposal linked turned work", "d": "6/2015"}, {"body": "sounds good wire typechecker location need bit refactoring", "d": "6/2015"}, {"body": "issue popped today fact require components publish events eventemitter nt work well dart want able export events existing stream controllers also eventemitter simultaneously sink source events means users components push events breaks encapsulation mon jun jeff cross notifications githubcom wrote particularly motivated quickly since http lib refactored use eventemitter uses rxjs implicitly private subject nt yet surface rxjs combinators list exhaustive includes combinators care cursory look many combinators look similar enough rxjs lite dart streams go ahead add methods observablewrapper facade class methods interval periodic useful short polling instance methods map dart flatmaplatest implemented dart streams retry implemented dart streams retrywhen implemented dart streams topromise tofuture implemented dart streams multicast asbroadcaststream implemented dart streams filter repeat implemented dart streams useful long polling throttle implemented dart streams brings question nt expose underlying primitive observable stream different apis like http let users use whichever primitive supported language challenge http forms parts angular framework may want take advantage combinators like providing simpler abstractions handle common use cases like polling without combinators existing eventemitter separate specialcased implementations features would developed js dart cc vsavkin yjbanov reply email directly view github", "d": "6/2015"}, {"body": "vsavkin chatted little bit morning thinking return primitiveofchoice target platform rx observable js stream dart instead return eventemitter places framework would take advantage features observables streams would need observable implementation dart stream implementation example wanted create polling function like would need implement two versions function come around idea original proposal given limiting would single common interface plays well streams observables convenience relying distinct platformspecific primitives costs us simplicity usability build tooling communicate best practices users curious alternative costs performance usability maintenance otherwise associated porting rxjs dart fromstream tostream operators make stream interop easy idea maintenance upfront cost would would considerations yjbanov cc alxhub", "d": "6/2015"}, {"body": "vote platformspecific primitives produce much idiomatic api especially dart stream part core library familiar everyone apicompatible stream libraries several ports rx utilities dart already another port uses nonstandard api would add value dart developer would basically learn second stream api connect two means wasted brain cycles coding part also port would add code size", "d": "6/2015"}, {"body": "k sounds like lowest hanging fruit agree start exporting observables streams places currently using eventemitter concrete use cases arise build features around primitives open new discussions", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "probably want throw zone installed instead logging warning also throw zone nt support microtasks ie zonejs loaded instead zonemicrotaskjs condition", "d": "6/2015"}, {"body": "right aware see tbosch would pointers would best place fixing one quick look code fact directives type binding makes things slightly complex need wait duplicate removal till bindings resolved sure stick logic", "d": "6/2015"}, {"body": "ok thanks", "d": "6/2015"}, {"body": "mean run like chrome running ca nt done resolved", "d": "6/2015"}, {"body": "yes true probably change sample benchmark use settings uses iteration", "d": "6/2015"}, {"body": "hey lnlwd could throw complete app plunker could take look btw sideeffectfree way would let homecomponent subscribe observable keeping state service way could also hook component cancel subscription component destroyed typescript getall http return map res gt resjson export class homecomponent homeservice homeservice homeservicesubscription constructor homeservice homeservice http thishomeservice homeservice thishomeservicesubscription homeservicegetall gt thistodos todos ondestroy clean subscription abort xhr request thishomeservicesubscriptiondispose", "d": "6/2015"}, {"body": "hey jeffbcross changed code looking example get problem application available repo thanks helping", "d": "6/2015"}, {"body": "hi lnlwd thanks sharing source could throw app fullyworking example plunker like", "d": "6/2015"}, {"body": "ok used compiled javascript typescript files plunker thanks", "d": "6/2015"}, {"body": "might problem ngfor", "d": "6/2015"}, {"body": "try removing coredirectives view directives property using ngfor", "d": "6/2015"}, {"body": "ok works nt thought call many thanks", "d": "6/2015"}, {"body": "good catch hmm seems like framework throw least noop directive included twice lnlwd want open another issue affect simplified reduction plunker closing issue", "d": "6/2015"}, {"body": "yes jeffbcross tomorrow going sleep", "d": "6/2015"}, {"body": "rkirov jelbourn one look one blockers adding transformers material", "d": "6/2015"}, {"body": "run", "d": "6/2015"}, {"body": "ran gulp buildpackagesdart past always enough create folder would expect functioning maybe build command needs additional step added something", "d": "6/2015"}, {"body": "commands name anything css nt want pollute angularcore build rules additional components work give css dart also output css appropriate directories give need", "d": "6/2015"}, {"body": "sounds like yes build rules documented anywhere still seems wrong buildpackagesdart makes nonfunctioning folder", "d": "6/2015"}, {"body": "nowhere gulpfile unfortunately difference material rule latter eventually removed components extracted library", "d": "6/2015"}, {"body": "tried still nt see css files see though maybe working intended js seems like need change dart styles typically import dart wo nt able access things top level folder need maybe something else going ca nt see directly", "d": "6/2015"}, {"body": "nvm build broken state see probably going need something urls still point convert package urls thats separate issue", "d": "6/2015"}, {"body": "believe changed last two alpha versions far remember", "d": "6/2015"}, {"body": "works thanks", "d": "6/2015"}, {"body": "also similar problem trying locally nt know cdn working hope helps tiago braga", "d": "6/2015"}, {"body": "take look version see works", "d": "6/2015"}, {"body": "oh nt see using", "d": "6/2015"}, {"body": "want use latest betas systemjs best thing build source either commonjs available via npm jspm npmjspm install rather using bundled code significant number changes systemjs stable release nt make sense use yet see tips setup using beta", "d": "6/2015"}, {"body": "composition always pretty easy extending much would go far say antipattern angular", "d": "6/2015"}, {"body": "composition easy directives used elements ones used attributes options sometimes limited example say want create directive add elements certain css class use template achieve must hack function wrapping also practical would pass attributes extending part could please elaborate antipattern one basic features software frameworks especially oo world", "d": "6/2015"}, {"body": "example say want create directive add ngdisabled elements certain css class sure address specific example creating directive add another directive based particular css class seems unnatural suspect natural way accomplish end goal far composition attribute selectors time angular uncommon number directives single element", "d": "6/2015"}, {"body": "list compose styles upgrade defaults using pr merged", "d": "6/2015"}, {"body": "interesting using extensions also preprocessor pipeline making", "d": "6/2015"}, {"body": "pascalprecht oh sorry webpack personally nt think framework job handle files using webpack preprocessor pipeline example", "d": "6/2015"}, {"body": "alright clears things thanks man", "d": "6/2015"}, {"body": "actually main use case inline styles html styleurls build step nt fetch urls compile time notes using work transpiling dart may may problem build step inline styles probably disable processing styles would already processed build step means inline rules scope selector case emulated scoped strategy conclusion sure using safe longterm problem add css text", "d": "6/2015"}, {"body": "sabartius since using expression need bind property instead attribute try inside element still use since shorthand syntax property binding well attributes understand strings pass attribute string takes", "d": "6/2015"}, {"body": "binds property nt exist bind attribute need instead", "d": "6/2015"}, {"body": "ah thought would create property accordingly", "d": "6/2015"}, {"body": "funny thing bind id input like mean inputelements property called id resolves attribute domelement", "d": "6/2015"}, {"body": "sabartius elements property attribute name common html world attribute used initialise html value property later manipulated programatically closing believe things work expected", "d": "6/2015"}, {"body": "also see errors use chrome version canary", "d": "6/2015"}, {"body": "findings seeing issue also typeerror read property undefined typeerror read property undefined rootroutercommit zonerun zonengzonecreateinnerzonezoneforkfork run run zoneboundfn browserdomadapterlogerror run uncaught promise typeerror read property undefined rootroutercommit zonerun zonengzonecreateinnerzonezoneforkfork run run zoneboundfn", "d": "6/2015"}, {"body": "btford assigning triage assess whether really router issue rough estimate effort please", "d": "6/2015"}, {"body": "one possibilty might use js native url would need polyfill available ref used systemjs", "d": "6/2015"}, {"body": "could change something explicit ie", "d": "6/2015"}, {"body": "sure chose prefix already use well signify users native thing interacting note issue still proposal decided yet", "d": "6/2015"}, {"body": "would optional required syntax everyone", "d": "6/2015"}, {"body": "matanlurey idea issue make required everyone linters users detect direct dom access early", "d": "6/2015"}, {"body": "personally think using lot better adds things remember docs clearly specify use tag bind native element access properties enough think natural expect first case rather second", "d": "6/2015"}, {"body": "alexandernst respository asking angularjs related question right place related questions mailing list", "d": "6/2015"}, {"body": "oops bad repo name contain p", "d": "6/2015"}, {"body": "alexandernst probably looking something like", "d": "6/2015"}, {"body": "figured still able inspect generated file errors", "d": "6/2015"}, {"body": "full path file listed error message would providing context case useful", "d": "6/2015"}, {"body": "please reopen still issue", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "pascalprecht fyi css handling going change next days going inlineresolve styles actually compiling templates strategies become simpler sync", "d": "6/2015"}, {"body": "vicb good know stay right also idea currently solve error", "d": "6/2015"}, {"body": "strategies stay nope interested findings", "d": "6/2015"}, {"body": "okay since instance assume due fact class hoisted comes changed injector bindings sth like however results error also loaded component", "d": "6/2015"}, {"body": "okay fact fully sure understand correctly mean know problem know solve problem however seems ca nt really reproduce problem class binding injector bindings need passed injector creation anyways might rather good question", "d": "6/2015"}, {"body": "class undefined binding injector import error", "d": "6/2015"}, {"body": "ah due asynchrounicity using imports maybe clarified docs example given always work even without forwardref", "d": "6/2015"}, {"body": "ah due asynchrounicity using imports would say due typo class file name rather", "d": "6/2015"}, {"body": "uhm okay typo ca nt solved missing something", "d": "6/2015"}, {"body": "nt think need forwardref wrong", "d": "6/2015"}, {"body": "else dependency turns undefined checked file paths class names everything loaded correctly also checked tests see done pretty much thing apparently overseeing something", "d": "6/2015"}, {"body": "missing", "d": "6/2015"}, {"body": "going find nice corner cry thank vicb", "d": "6/2015"}, {"body": "wrong repo guess looking said sounds like general support question asked using appropriate support channel", "d": "6/2015"}, {"body": "thanks pkozlowski going post", "d": "6/2015"}, {"body": "note view cached add element manually persist cached version using component", "d": "6/2015"}, {"body": "vicb use get svg icons url parse response get dom node append somehow dom reason need way suggestions ways achieve", "d": "6/2015"}, {"body": "vicb closed", "d": "6/2015"}, {"body": "nope transferred commit blocked bug clang", "d": "6/2015"}, {"body": "compiling using babel traceur need use instead issue point applies annotations usually use ts issue missing annotation maybe", "d": "6/2015"}, {"body": "exported", "d": "6/2015"}, {"body": "rkirov unfortunately part bundle try simple search", "d": "6/2015"}, {"body": "problem entry point bundle nt import module instead reexport tbosch reason ok changing line", "d": "6/2015"}, {"body": "prepared pr merged tbosch made decision", "d": "6/2015"}, {"body": "yes please export everything", "d": "6/2015"}, {"body": "pascal change pr reexport reassign pr review ideally paths", "d": "6/2015"}, {"body": "yeap taking care", "d": "6/2015"}, {"body": "one quick question couple imports come exported eg shall leave makes actually hard paths render", "d": "6/2015"}, {"body": "sylus valid bug report pb steams fact special treatment properties contains dash names specialcase logic properties", "d": "6/2015"}, {"body": "fyi dariajung", "d": "6/2015"}, {"body": "sort approach makes lot sense generally feels composable less configureallthethings might worthwhile looking sort thing http returns raw response couple helper methods success error purely return response data vs whole response read nicely comes edumacatin everybody mechanics observables", "d": "6/2015"}, {"body": "ran issue times imho message reflectmeta could useful", "d": "6/2015"}, {"body": "reflectmetadata already", "d": "6/2015"}, {"body": "regular async test using would also fail fail see tl dr consistentspecified way catch rejected promise js current thinking add expectations still optin cc pkozlowskiopensource rkirov juliemr", "d": "6/2015"}, {"body": "tried approach described previous comment one problem called asynchronously issue called promise settled ation ineffective one solution could expectation delay promises settled try next", "d": "6/2015"}, {"body": "try one agree support well", "d": "6/2015"}, {"body": "agreed would nice bundle explicitly includes dependencies fwiw dependency go away resolved polyfills still required map promise etc addition currently dependency observables included bundle use cases goals support see provide easy path quickly get started without worrying dependencies need included particularly useful oneoff code samples reproductions like plunk allow using compatible version libraries like rxjs alongside dev bundle well omit polyfills target environment nt require keep byte size default dev bundle low since realistically probably used production proposal bundle contains angular bundled without dependencies traceur polyfills rx bundle contains angular bundle plus required polyfills rx examples official docs use alexeagle since working bundle week thoughts", "d": "6/2015"}, {"body": "final distribution strategy still much flux solidify get closer release going close known issue addressed later part final release design", "d": "6/2015"}, {"body": "yes aware many things missing file reworking figure best way closing since general statement rather something specific us track", "d": "6/2015"}, {"body": "would really like know since basically important feature time question asked several times old router repository never officially answered could somebody elaborate little bit state router", "d": "6/2015"}, {"body": "huge huge angular supporter bit breakdown transparency big directionmessage ngconf understood router transition path since things gotten progressively murky unclear went ahead even added support router ng transition library whole repository seems defunct lots pr contributions early since communication essentially stopped really way help think would really really help angular team make kind public statement going router coming ng things gotten unclear commitment delivering router transition tool providing transition tool instead thanks much", "d": "6/2015"}, {"body": "came angular u conference last week someone asked keynote minute mark video", "d": "6/2015"}, {"body": "igorminar please give clarification released", "d": "6/2015"}, {"body": "working router sorry lack transparency intentional trying figure make upgrade path simple moving things around part hard predict future se nt speculate ready may interested latest thinking upgrade path thinking making upgrade path even granular components addition router closing since question rather bug track", "d": "6/2015"}, {"body": "rolandjitsu could please share code ideally bare minimum reproduce issue thanks", "d": "6/2015"}, {"body": "vicb course changed used instead error clone run locally change getting exception", "d": "6/2015"}, {"body": "vicb also note want use without styles longer resolved relative component relative root resolved root instead folder component example", "d": "6/2015"}, {"body": "hopefully fixed later week currently working relative urls resolution", "d": "6/2015"}, {"body": "vicb looking forward", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "vicb seems like get exception anymore use use give wrong path get issue", "d": "6/2015"}, {"body": "thanks report take look using amp thanks", "d": "6/2015"}, {"body": "vicb using using alpha release versions npm", "d": "6/2015"}, {"body": "click bubble click", "d": "6/2015"}, {"body": "confirm works merci bcp", "d": "6/2015"}, {"body": "could try think angular pretend maps objects thing like angular dart", "d": "6/2015"}, {"body": "works fine guy many thanks smile", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "caitp might related special cleanup steps take pulling", "d": "6/2015"}, {"body": "error ubuntu", "d": "6/2015"}, {"body": "tried reverting makes incremental build work", "d": "6/2015"}, {"body": "tbosch igorminar mhevery find someone would great resolve quickly possible suggestions since caitp", "d": "6/2015"}, {"body": "take time fix today time reverting get working", "d": "6/2015"}, {"body": "pkozlowskiopensource caitp reverted commit master", "d": "6/2015"}, {"body": "using bundled version angular need include rx reflectmetadata zonejs traceurruntime", "d": "6/2015"}, {"body": "also see", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "yes tracking elsewhere", "d": "6/2015"}, {"body": "hm thought resolved already", "d": "6/2015"}, {"body": "ref", "d": "6/2015"}, {"body": "vicb issue working top level component right also nt work nested components far know tried first minimal example", "d": "6/2015"}, {"body": "agree two different issues first one resolved code hit one previously referred", "d": "6/2015"}, {"body": "forward declaration issue case declared later typescript supply type information angular hence error means angular sees type move declaration earlier use strange way works intended agree great user experience", "d": "6/2015"}, {"body": "closing since works intended", "d": "6/2015"}, {"body": "sure code belows works intended proper way typescript import inject parent component view bootstrap forwardref component selector c view template class c app app constructor parent inject forwardref gt app app app thisapp app component selector app view template directives c class app message test bootstrap app", "d": "6/2015"}, {"body": "works app file module right something like gets compiled course would get error forwardref function return guess use asomething everywhere works way", "d": "6/2015"}, {"body": "besides think everything good idea components write us import specific modules eg compile ts files get lot errors module definition exist", "d": "6/2015"}, {"body": "hello agree rolandjitsu would nice organization modules organization aligned whether ts typings jspm etc would straightforward time ts typings file somewhere currently got working setup gulp jspm systemjs typescript angular like integrate new router", "d": "6/2015"}, {"body": "dsebastien setup made custom typings file definitions need router things", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "alexeagle script generate type definition would copy dts files http router definitelytyped bundle", "d": "6/2015"}, {"body": "build system generate dts files docs generation imagine different type definition files module time help week", "d": "6/2015"}, {"body": "think fact http nt definitelytyped repo new nt copied release process router intentionally excluded bundle separate definitelytyped definition http moves get definitions opened update definitions alpha", "d": "6/2015"}, {"body": "alexeagle working updating definitelytyped definitions part contains http definitions router definitions yet petebacondarwin tried tinkering createtypedefinitionfilejs make output well could nt get cooperate would mind updating process output angularrouterdts", "d": "6/2015"}, {"body": "alexeagle fixed", "d": "6/2015"}, {"body": "issue track jsonrenderer", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "vsavkin take crack would right", "d": "6/2015"}, {"body": "sounds good", "d": "6/2015"}, {"body": "igor something july", "d": "6/2015"}, {"body": "seems missing", "d": "6/2015"}, {"body": "related", "d": "6/2015"}, {"body": "dart transformer used would get inlining automatically latest commits vicb", "d": "6/2015"}, {"body": "jk work next week", "d": "6/2015"}, {"body": "landing july missed cutoff igor brian pairing today", "d": "6/2015"}, {"body": "pushing prioritize", "d": "6/2015"}, {"body": "already something similar please follow style", "d": "6/2015"}, {"body": "happy add ca nt seem find gitter link", "d": "6/2015"}, {"body": "mhevery doubleclick white space underneath angularangular headline work", "d": "6/2015"}, {"body": "yes correct solution really intuitive thanks", "d": "6/2015"}, {"body": "needed", "d": "6/2015"}, {"body": "final proposal issue rfc point need something similar core lifecycle methods whatever decide make sure consistent", "d": "6/2015"}, {"body": "check method names structural check js implements dart ca nt implement interface ps sure feature implemented yet discussed", "d": "6/2015"}, {"body": "assignee less urgent backlog provided angular core router change", "d": "6/2015"}, {"body": "could provide info", "d": "6/2015"}, {"body": "make http call one response since stream unless specified since making get request response complete get first result observable fire oncomplete unless map returns would fire oncomplete done xhrbackendts", "d": "6/2015"}, {"body": "yes complete", "d": "6/2015"}, {"body": "strictly tags processed rest block processed seen tag converted real link think ignoring processing moment take look", "d": "6/2015"}, {"body": "hi naomi problems fixed changes mentioned days ago regenerated master may may correct issue nt appear see", "d": "6/2015"}, {"body": "indeed fixed", "d": "6/2015"}, {"body": "related", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "assigning tbosch since pr next step plate urgently needed", "d": "6/2015"}, {"body": "cc vsavkin yjbanov", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "blazingspike wrong repo looking general support questions asked using dedicated support channel", "d": "6/2015"}, {"body": "bootstrapping mobile takes way longer think high priority possible", "d": "6/2015"}, {"body": "ended redirecting suppose home route", "d": "6/2015"}, {"body": "yep thing redirecting different route", "d": "6/2015"}, {"body": "updated alpha seems like issue fixed absolutely sure mhevery", "d": "6/2015"}, {"body": "using way typescript routeconfig path home component homecomponent export class app router router constructor router router location location need manually go correct uri router fixed thisrouter router let uri locationpath uri uri routernavigate home else routernavigate uri working fine use get duplicated object anyway using hack problem solved sorry bad english smile", "d": "6/2015"}, {"body": "lnlwd use alpha version longer need use following", "d": "6/2015"}, {"body": "ok really problem solved duplicated items", "d": "6/2015"}, {"body": "wrong angular project", "d": "6/2015"}, {"body": "error seems thrown use files root npm package instead compile files using traceur instance get error anymore", "d": "6/2015"}, {"body": "discovered compile files ignoring semantic errors thrown terminal issue described transpiling files traceur get error mhevery clues happens", "d": "6/2015"}, {"body": "ran problem including formdirectives", "d": "6/2015"}, {"body": "compile files npm package using traceur error get thrown anymore sure though issue compile files", "d": "6/2015"}, {"body": "looks like something injected defaultvalueaccessorts", "d": "6/2015"}, {"body": "noticed strange use component seems injected fine", "d": "6/2015"}, {"body": "vsavkin help close", "d": "6/2015"}, {"body": "suspect might issue cyclic dependencies defaultvalueaccessor depends reexports forms check case changing import ng export class defaultvalueaccessor implements controlvalueaccessor value string null onchange gt ontouched gt constructor private cd ngcontrol private renderer ngrenderer private elementref ngelementref cdvalueaccessor writevalue value thisvalue setproperty required moment remove proper imperative api provided thisvalue isblank value value setproperty thisrenderer thiselementref value thisvalue registeronchange fn void thisonchange fn registerontouched fn void thisontouched fn", "d": "6/2015"}, {"body": "vsavkin actually fix following helped make change directive make pull request", "d": "6/2015"}, {"body": "tedsander context transformed untransformed code quick repro case", "d": "6/2015"}, {"body": "untransformed code let see get repo case tomorrow thing right part larger project ca nt share", "d": "6/2015"}, {"body": "would help repro vanilla judging traces case", "d": "6/2015"}, {"body": "take look internal tracking", "d": "6/2015"}, {"body": "quite sure understand path work file subdirectory web essentially special type absolute url", "d": "6/2015"}, {"body": "mean", "d": "6/2015"}, {"body": "tedsander confirm would like support absolute urls seems like antipattern dart code typically anything would want point via absolute url instead put inside lib access via package url", "d": "6/2015"}, {"body": "would say nt antipattern else dart web directory sure resources ca nt shared across apps lot times nt want basically support outlined barback document working angulardart nt hard get working", "d": "6/2015"}, {"body": "one question considered root application ie run server folder package nt really want opinionated telling people start server transformer nt know folder server started would assume something like top level directory package current file lives ie libwebtestexamplebenchmark somebody serves webfoo directory app runtime version going treat root transformer treat root inconsistent behavior", "d": "6/2015"}, {"body": "spoke vsavkin person affirmed approach", "d": "6/2015"}, {"body": "take look get chance tracking internal", "d": "6/2015"}, {"body": "nt able repro exact error see pub serve hang think logging error causes barback output file could downgrade warning nt really seem correct either need think one", "d": "6/2015"}, {"body": "right problem got limited control events declared component authors web components directives ca nt exclude people going create events following schema help allow us override defaults said think revisit dash camel casing event names default", "d": "6/2015"}, {"body": "maybe force people always use schema events issue hold implementing schema working", "d": "6/2015"}, {"body": "think fixed yesterday bey victor see wed jun mi\u0161ko hevery notifications githubcom wrote item desuggars item set implicit viewsetlocal implicit value renders value wrong since item div template therefore render elementref item pointing element local variable reply email directly view github", "d": "6/2015"}, {"body": "possible related inserting shimmed css breaking element counts might related removing style tags template using emulated strategy", "d": "6/2015"}, {"body": "odd affects light dom style tag inserted dom looks like surprised fixes", "d": "6/2015"}, {"body": "actually affect class whatever appended matter could affect though", "d": "6/2015"}, {"body": "vicb removal style elements definitely problem well cases tag inline tag needs load url calculate index text node siblings incorrectly calculate number root nodes incorrectly given root element", "d": "6/2015"}, {"body": "get fixed gets merged happen early next week", "d": "6/2015"}, {"body": "info actually fix styles also get removed emulated strategy could help move shadow dom compile step first position style would removed indexes computed case first implemented sure moved tbosch", "d": "6/2015"}, {"body": "another idea make locating text nodes stable work today wed jun pm victor berchet notifications githubcom wrote info actually fix styles also get removed emulated strategy could help move shadow dom compile step first position style would removed indexes computed case first implemented sure moved tbosch reply email directly view github", "d": "6/2015"}, {"body": "component selectors throw error well edit realize question silly check selector annotation properties since components special type directive said one question detecting throwing errors invalid selectors want enforce custom element spec says hyphen must included custom elements uppercase characters want leave selector rules pretty loose benefit custom element spec current html elements like p div etc would excluded used selector downside enforcing would problematic people wanting decorate existing html tags", "d": "6/2015"}, {"body": "jimthedev want able select tag custom element angular components custom components unrelated", "d": "6/2015"}, {"body": "ok thanks mon jun victor berchet notifications githubcom wrote jimthedev want able select tag custom element angular components custom components unrelated reply email directly view github", "d": "6/2015"}, {"body": "done selector directiveparser renderdomcompilerselector renderdomcompilerdirectiveparser", "d": "6/2015"}, {"body": "guess selector", "d": "6/2015"}, {"body": "seems like need put domcompilerprototypecompilehost renderdomcompilercompiler well gets triggered trying bootstrap component complex selector nt support", "d": "6/2015"}, {"body": "vicb mhevery struggling think close last problem using exact kinds selectors nt want allow exceptions native form elements like info build one builds", "d": "6/2015"}, {"body": "went well", "d": "6/2015"}, {"body": "nope crashes due", "d": "6/2015"}, {"body": "duplicate", "d": "6/2015"}, {"body": "confident gulp uses last version sdk installed", "d": "6/2015"}, {"body": "yes configuration darteditordirapplicationsdart export dartsdk darteditordirdartsdk path dartsdkbin also put package version file also build error says even manually changed version number file one used yea think sure", "d": "6/2015"}, {"body": "output", "d": "6/2015"}, {"body": "joke ca nt even run getting error pub version unhandled exception formatexception dart sdk version file format pub could recognize found getversion file version file main file startisolateisolatestarthandler dart rawreceiveportimplhandlemessage dart", "d": "6/2015"}, {"body": "link", "d": "6/2015"}, {"body": "vicb okay reinstalled dartsdk found somewhere nt know working thank much help lt", "d": "6/2015"}, {"body": "problem", "d": "6/2015"}, {"body": "afaik evergreen browsers means latest versions firefox chrome safari opera", "d": "6/2015"}, {"body": "themihai fault plans support evergreen browsers solution app work legacy browsers everything goes according plan solution would limiting course browsers solution finished ie work without much effort course crazy enough might able support everything using strategy also keep mind speaking angular team team friend making steps towards solution hope reach goal start experimenting impossible ones", "d": "6/2015"}, {"body": "makes sense guess solution legacy browsers kind polyfill wrt evergreen browsers edge list edge", "d": "6/2015"}, {"body": "saying webcomponents stuff work get info angular team agree", "d": "6/2015"}, {"body": "themihai polyfills nt fun angular currently uses polyfills even adding would really lag bootstrap time experienced polymer sorry web components wo nt ever work information coming working rather angular team everyone using developing modern browsers solution work legacy keep everyone looking forward leaving anyone behind news future reason worry browser support right especially since still alpha beta release candidate stable", "d": "6/2015"}, {"body": "web components wo nt ever work wo nt ever work", "d": "6/2015"}, {"body": "huh use without web components perfectly fine", "d": "6/2015"}, {"body": "oh sorry nt knew thought like polymer webcomponents must pawel kozlowski notifications githubcom huh use without web components perfectly fine reply email directly view github ing mario alvarez garc\u00eda tel\u00e9fono", "d": "6/2015"}, {"body": "nope like polymer use web components apps components directives web components least pretty close semantically", "d": "6/2015"}, {"body": "thought shadowdom stuff cause angular promotes custom components throught directives", "d": "6/2015"}, {"body": "thought like polymer webcomponents must yes like polymer native wc optional", "d": "6/2015"}, {"body": "actually worried support legacy browsers lack seen commit comments thus reason question afaic would vote best angular latest browsers ie chrome ff safari ie edge", "d": "6/2015"}, {"body": "hi looks like issue repository", "d": "6/2015"}, {"body": "browser tests emit strict mode code cjs nt typescript nt support moment see could hack prefixing cjs build artifacts use strict least typescript fixes issue emitter", "d": "6/2015"}, {"body": "caitp add replace pass node tree please", "d": "6/2015"}, {"body": "want tests running strict mode module code right tries blockscope function declarations nt like", "d": "6/2015"}, {"body": "actually spoke soon tests fail", "d": "6/2015"}, {"body": "js test runs still need please reopen", "d": "6/2015"}, {"body": "could help sure merged fix annoying", "d": "6/2015"}, {"body": "version typescript using alexeagle fork declares class supported according microsofttypescript though issue others issues extending class", "d": "6/2015"}, {"body": "one potential fix require every subclass constructed alreadyformatted message instead allowing construction message inside constructor", "d": "6/2015"}, {"body": "opened pr unit test js call super logic constructor initial message generated approach may flawed provided function would ever output empty string undefined eventual message may still logged", "d": "6/2015"}, {"body": "closing issue favor", "d": "6/2015"}, {"body": "happy make change posting discussion", "d": "6/2015"}, {"body": "works", "d": "6/2015"}, {"body": "also css mixins would appreciated spec css variables", "d": "6/2015"}, {"body": "could angular also expose shim injectable code manually manipulates css classes eg", "d": "6/2015"}, {"body": "think matsko plan use css variables animations sure plan use code polymer matanlurey could please create separate issue shim things detailed explanation use case", "d": "6/2015"}, {"body": "sounds reasonable note probably still able already compilation attach components already compilation", "d": "6/2015"}, {"body": "look one hoping straightforward fix transformer level", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "semantics complex use cases like post custom headers vs get put methodsverbs specified", "d": "6/2015"}, {"body": "blesh would specified requestoptions object request passed one respective shortcut methods", "d": "6/2015"}, {"body": "cool defaults", "d": "6/2015"}, {"body": "tracking note assigned vsavkin see quickly unblocked otherwise please assign yjbanov", "d": "6/2015"}, {"body": "internal issue", "d": "6/2015"}, {"body": "fixing would probably close", "d": "6/2015"}, {"body": "pretty easy landed", "d": "6/2015"}, {"body": "jeffbcross one assigned moving needs assignee suggestions", "d": "6/2015"}, {"body": "naomiblack sorry slow followup take quick change land", "d": "6/2015"}, {"body": "yes", "d": "6/2015"}, {"body": "issue tracker used report issue asking support repo angular seems like trying use angular read ask question google group stack overflow imo likely get answers small specific questions rather gigantic general question good luck", "d": "6/2015"}, {"body": "question self small copy paste project experience effect sorry like get answer also find google group hard understand stack said ask question get banned afraid naturally question foreign part less known objects one look questions make less people search review stack think bad questions sorry though see maybe something else", "d": "6/2015"}, {"body": "vs think error", "d": "6/2015"}, {"body": "vicb sorry ca nt really follow exactly comparing look like factory function", "d": "6/2015"}, {"body": "doc case factory creates factory function code example factory creates instance doc case always return factory return new instance time clear", "d": "6/2015"}, {"body": "ah thanks clarifying docs code also returns instance factory", "d": "6/2015"}, {"body": "factory class nt get nt get please ask specific questions ping hangout victorberchet gmail", "d": "6/2015"}, {"body": "exactly also factory nt additional dependency however get instance ping hangouts though", "d": "6/2015"}, {"body": "okay turned got confused oneliner syntax clear thanks vicb help", "d": "6/2015"}, {"body": "need annotation", "d": "6/2015"}, {"body": "added properties value still interpolate correctly look consolelog output see output instead actual value like", "d": "6/2015"}, {"body": "support interpolation design must use property bindings works", "d": "6/2015"}, {"body": "ok thanks", "d": "6/2015"}, {"body": "http interceptors personally use fetch works fine angular since need worry digest cycles", "d": "6/2015"}, {"body": "commit meant provide basis adding many features mentioned regarding one exist question goals provide solid conventions simplicity testability yeah core lot help folks use http choice box angular http optin interceptors design something started thinking couple thoughts head would implemented best practices would considered one strategy similar angular design componentbased hierarchy interceptor configurations rather single global interceptor configuration another strategy would encourage application developers write services wrap apply requestresponse transformations inside services think servicebased strategy may composibility costs could end complicating apps simplifying research angular apps see interceptors used great could provide ways team using apps happy jump hangout works better", "d": "6/2015"}, {"body": "jeffbcross fetch similar implementation described", "d": "6/2015"}, {"body": "rolandjitsu part comment referring", "d": "6/2015"}, {"body": "jeffbcross response transformations user apply whatever transformations heshe needs response methods provide response transformations others user implement apply promise chain eg function transforms response returns json javascript object transformations could exposed static methods class appropriate name something like", "d": "6/2015"}, {"body": "jeffbcross perhaps interceptors could application component specific user would want interceptor something every requestresponse user would use application specific interceptor maybe injected application bootstrap user wants things happen certain component heshe would use component interceptor could configured created decorator", "d": "6/2015"}, {"body": "rolandjitsu actually emitted close fetch spec body accessed see example working docs pr info hope land today tomorrow", "d": "6/2015"}, {"body": "jeffbcross working going close issue since nothing additional us already plan nt want get dawned kinds issues feel free continue discussion closed issue", "d": "6/2015"}, {"body": "understood interceptor part seems open based jeff comment see link functionality replaced", "d": "6/2015"}, {"body": "johnpapa open issue discuss new design couple days draft progress meantime could use insight using intereceptors transformers email comment", "d": "6/2015"}, {"body": "thanks jeff feel free move later use interceptors http common place add headers outgoing xhr filter incoming responses handle errors log errors returning server error codes generally also create service handles http control business specific rules", "d": "6/2015"}, {"body": "johnpapa opened issue discussion interceptorstransformers", "d": "6/2015"}, {"body": "nt list forms directives annotation start", "d": "6/2015"}, {"body": "pkozlowskiopensource custom component need directives listed place used used", "d": "6/2015"}, {"body": "rolandjitsu sorry missinterpreted code snippet nt need list things using tpl", "d": "6/2015"}, {"body": "pkozlowskiopensource worries descriptive probably form control directives expect node property otherwise unsure get exception", "d": "6/2015"}, {"body": "rolandjitsu builtin checkbox might good starting point", "d": "6/2015"}, {"body": "vicb thanks actually helps fixed version alpha api changed looking forward next release", "d": "6/2015"}, {"body": "vicb tried find way seem failing created following component combination angular material checkbox js import numberwrapper ispresent import keyboardevent import renderer elementref import component view attribute import controlvalueaccessor ngcontrol import keyspace commonconstants component selector checkbox properties checked disabled host keydown onkeydown event change onchange eventtargetchecked blur ontouched checked checked tabindex tabindex attrrole checkbox attrariachecked checked attrariadisabled disabled classnguntouched cdcontrol untouched true classngtouched cdcontrol touched true classngpristine cdcontrol pristine true classngdirty cdcontrol dirty true classngvalid cdcontrol valid true classnginvalid cdcontrol valid false view templateurl appcomponentscheckboxcheckboxhtml styles import checkboxcss export class checkbox implements controlvalueaccessor checked boolean tabindex number onchange function ontouched function disabled boolean trying use place yes include directive view use custom checkbox also attaching observer custom checkbox nothing triggers obviously binding created works fine component guidance would nice possible", "d": "6/2015"}, {"body": "problem lack documentation vsavkin could help close issue", "d": "6/2015"}, {"body": "vsavkin mhevery figured trigger event seemed get triggered used combination component sure supposed handle seems work maybe another way documented", "d": "6/2015"}, {"body": "using map decorator want set aria attributes component element host element within component code example please note introduced recently used check history linked file details", "d": "6/2015"}, {"body": "pkozlowskiopensource suppose available next release", "d": "6/2015"}, {"body": "rolandjitsu right introduced released yet mentioned", "d": "6/2015"}, {"body": "pkozlowskiopensource seem work use get exception use nothing seems respond", "d": "6/2015"}, {"body": "check example conversion send plunk need help hard assist based textual description pb", "d": "6/2015"}, {"body": "pkozlowskiopensource sorry first url lead new implementation works expected thanks", "d": "6/2015"}, {"body": "dup tl dr html angular help", "d": "6/2015"}, {"body": "hmm ca nt reproduce update latest master closing reopen see", "d": "6/2015"}, {"body": "butaixianran afaik ca nt use api directly need get instance browser ex input field hard say going without seeing runnable example plunker jsbin would help going close one ca nt see evidence issue related sounds like generic support question asked using one support channels", "d": "6/2015"}, {"body": "finally find way build online example typescript check online ide preview editor post topic google group one answer", "d": "6/2015"}, {"body": "butaixianran nt think create instances hand like try make work pure javascript without angular typescript etc asking since looks like invalid api usage see example code editor asked register log wo nt help get answers advice first try make work pure js without frameworks post issue", "d": "6/2015"}, {"body": "hi thanks patience examples easily play first mentioned fileread pure javascript works fine javascript generate typescript nt work typescript codepen typescript td file wo nt work codepen following link show ts source code online ide sandbox typescript nt work login github account preview offered online ide blame typescript find online ide way share issue others sandboxes nt work well", "d": "6/2015"}, {"body": "replicate outside typescript event firing fine nt look like zone picking also triggering timeouthack inside onload callback nt appear work either must well truly outofthezone side note angular ngsrc would nt try fetch undefined values nt appear case w src", "d": "6/2015"}, {"body": "problem zone please create issue small repo case zonejs would help bonus point pr failing tc thanks", "d": "6/2015"}, {"body": "learned following official site docs idea zone relationship sure problem anyone sure issue zone please help report issue zone project filereader important api many cases need make work thanks", "d": "6/2015"}, {"body": "vicb added couple specs probably misguided attempt fixing", "d": "6/2015"}, {"body": "closing zone issue angularzonejs", "d": "6/2015"}, {"body": "might something copypaste code works", "d": "6/2015"}, {"body": "kind hard see going info provided exact setup using jspm systemjs polyfill tranpilation packaging could please share details ideally relevant plunks start drawing conclusions screenshoots", "d": "6/2015"}, {"body": "bit play findings fair bit overhead systemregister calls fair bit lookupresolution logic exacerbated got million modules using prebundled version appears drop performance slightly better results building bundles source one reasons want get jspm building minified systemregister bundle source deps zonereflect comes around takes wholly unscientifically seconds render best results building minified sfx bundle allowed load script async top head got around render big increase perceived speed since light dom stuff rendered less instantly since blocked anything definitely set superscientific benchpress specs test stuff guybedford might bit input iirc nt really focused performance yet spec compatibilty", "d": "6/2015"}, {"body": "robwormald hmm think clarify things statements puzzling fair bit overhead systemregister calls fair bit lookupresolution logic measure overhead baseline best best possible performance limitations imply big overheadpercent wise best theoretical baseline exacerbated got million modules come mean exports instead modules still million would huge sure working jspm pointing repo dependencies gulprelated stuff moved dev dependencies takes wholly unscientifically seconds render setup minimal one got load takes ms would like move topic need make sure measuring comparing exact setup got plunker would ideal involve jspm need absolutely make sure mixing transportformat performance systemregister loader performance", "d": "6/2015"}, {"body": "btw first foremost need chose transport format systemregister vs commonjs vs requirejs vs sth different loaders package managers secondary consideration point imo need make sure chosen format desired features correct handling circular dependencies ability mix preloaded dynamically loaded content performance characteristics minimal overhead size time also needs widely supported futureproof loadable systemimport", "d": "6/2015"}, {"body": "robwormald guys concrete counterproposals output format replacement systemregister discussion started comparing performance systemjs vs webpack still nt know means", "d": "6/2015"}, {"body": "oh one last remark please make sure collect results incognito tab extensions disabled otherwise numbers ca nt trusted", "d": "6/2015"}, {"body": "data setup files served locally talking disabled cache could faster still far announced sooooo really need look details see measuring comparing", "d": "6/2015"}, {"body": "clear nt complaining inciting completely agree scientifically beyond huge proponent jspmsystemjs point begining annoy people main aim see improve throw jspm context package manager cli using systemjs builder bundling using latestbeta release working getting benchpress set currently basic metric start perf timer script tag first thing head stop bootstrap call absolutely scientific test indicator module registration complete running cpu profile reasonably clear unless seriously misreading something quite lot work going loader digging timelines shows sort behavior much overhead need work pretty lowpower machine huge amount variables play traceur vs babel vs typescript compilation example perhaps get list scenarios", "d": "6/2015"}, {"body": "ah one thing makes huge improvement importing zone reflect reflect brings huge amount crud imported via import syntax function fine way chatted rkirov day obviously set kind usage yet kind thing obvious people nt modules yet well import modules like except two special cases edit want look experimenting kinds combinations outstanding workaround systemjs bundler yet supporting typescript singlefile output", "d": "6/2015"}, {"body": "robwormald right definitively nt think load zonejs loader polyfills package manager real functional dependencies kind infrastructure files using systemjs builder bundling using latestbeta release right guess boils packager configuration see problems use official bundle beyond huge proponent jspmsystemjs point begining annoy people main aim see improve throw good fan technology works say see perf problems need super clear setup measuring trouble people use systemjs mean different things system api loader module transport format polyfill etc need precise regarding jspm still nt time dig things scare hell ex file generated huge lists many things think important understand issues systemregister module format alternatives discussion far nt look like got anything tangible actionable", "d": "6/2015"}, {"body": "robwormald still sure meant exacerbated got million modules suspect something specific way created bundle ca nt confirm one thing seems like work done perf improvements see", "d": "6/2015"}, {"body": "patrick details input ca nt see anything actionable afraid", "d": "6/2015"}, {"body": "yo town nt time fully read convo delay due systemjs example consoletime see put settimeout notice drop dropped dig around realize due systemjs nt comparing two much saying problem systemjs using webpack since packaged simple callbacks nt overhead systemjs problem systemjs nt mention io problem since angular many modules browsers limited many calls systemjs allows batched modules io problem could solved", "d": "6/2015"}, {"body": "sounds like comparing nonbundled version believe limited value practice mean would nt expect anyone run unpackaged even demos quick experiments say delay due systemjs mean exactly systemregister format systemjs polyfill one format webpack using format cover functionality need see earlier comments need precise share exact setup otherwise progressing ping back ready work topic nt think spending much time investigating unpackaged", "d": "6/2015"}, {"body": "using bundled version systemjs jspm", "d": "6/2015"}, {"body": "totally confused saying problem systemjs nt mention io problem since angular many modules browsers limited many calls systemjs allows batched modules io problem could solved would packaged would nt io http calls systemjs ok mean sth else version think best share setup look nt see delays minimal setup take time ping ready spend time currently clear exact setup ca nt see problems describing", "d": "6/2015"}, {"body": "pkozlowskiopensource heh answer question yes jspmconfjs file autogenerated managed jspm think like npm shrinkwrap going set benchmarks week one thing keep mind systemjs polyfill written futureland like norm theory might actually load something like unbundled server effectively pushing rest bundle true actually unknown theory jspmcli depcache parameter precalculate dependency tree load front vs bunch roundtrips resolve deep trees sortoftheoretical implementations wild reading guy talks options", "d": "6/2015"}, {"body": "yeah like robwormald said ideal scenario would embrace allow unbundling loading dependencies needed application way preload assets nt needed yet browser support server support nice complete story module loader support put serious thought right way load angular modules based performance flexibility easeofuse optimizations could angular like declaring angular moduledependency graph using systemjs depcache ideally could write benchmarks test backend", "d": "6/2015"}, {"body": "jeffbcross robwormald oh nt realize guys experimenting loading unpackaged files definitively looked explored point one possible solutions one imo need make sure nt require people specific serverside configuration use important question right taking risks closing doors going systemjs loader systemregister format combo drawbacks alternatives", "d": "6/2015"}, {"body": "jspm added override reflectmetadata package runtime check polyfill static analyzer picking bundling crypto shims fixed nt massively bloat build", "d": "6/2015"}, {"body": "pkozlowskiopensource talking guybedford pointed towards might explain discrepancy seeing traceur optimization babel nt yet", "d": "6/2015"}, {"body": "created issue create benchmarks measure systemjs performance different conditions", "d": "6/2015"}, {"body": "think close issue discuss data", "d": "6/2015"}, {"body": "mhevery deviated initial plan completely different implementation shadow dom used nt think need see section essentially ca nt short path need implement whole thing users use", "d": "6/2015"}, {"body": "cc matanlurey jelbourn", "d": "6/2015"}, {"body": "think good definitely something needs clear documentation end seems pretty learnable", "d": "6/2015"}, {"body": "side goals simplify renderer remove replace ie renderer need track content allow use content reprojection renderers eg dom nativescript reactnative", "d": "6/2015"}, {"body": "repo please reopen", "d": "6/2015"}, {"body": "repo angular please reopen", "d": "6/2015"}, {"body": "using bundle including angular problem eventemitter means missing rxjs since ca nt read subject rx undefined", "d": "6/2015"}, {"body": "include dep separately zonejs longstacktracezonejs rxjs angularjs tried following maybe issue add system configuration make work try use bundle codeangularjsorg get trouble system complaining", "d": "6/2015"}, {"body": "think also need set format rx commonjs systemjs post repo link", "d": "6/2015"}, {"body": "think issue closed caused bug dependency missing explained also managed get around different setup next alpha version released understood make easier include angular", "d": "6/2015"}, {"body": "sure went wrong run mac looks like dependency removed", "d": "6/2015"}, {"body": "though newer machine perhaps misconfiguration caused", "d": "6/2015"}, {"body": "submit pr soon looks like manually update chokidar restore", "d": "6/2015"}, {"body": "find forms module bit confusing got plunker work though see", "d": "6/2015"}, {"body": "ng prefix described changelog agree listed breaking changes lately api reworked examples added hopefully find using easier", "d": "6/2015"}, {"body": "mentioned slack added ci tests jeffbcross safe remove plan create new gulp task", "d": "6/2015"}, {"body": "think matsko removed gulpfile added new task must removed scripts safe remove", "d": "6/2015"}, {"body": "take", "d": "6/2015"}, {"body": "vicb caitp opened pr going go limb say nt need wait travis one one give lgtm", "d": "6/2015"}, {"body": "angular repository please file issue also please update angular latest version", "d": "6/2015"}, {"body": "oh sorryfound wrong repo", "d": "6/2015"}, {"body": "custom url schemes working angulardart using nodetreesanitizer urlrewriter would nice code core", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "ref easy switching enum beause typescript dart handle enums differently", "d": "6/2015"}, {"body": "plan", "d": "6/2015"}, {"body": "mhevery thanks", "d": "6/2015"}, {"body": "mhevery use appending elements directive see exports also used directive add class element suppose could use add node inside directive concerned happens directive shadow root still work", "d": "6/2015"}, {"body": "private api need generate js dart unless planning code run dart needed", "d": "6/2015"}, {"body": "mhevery understand actually use following appending element directive seems work fine issue use shadow root element sometimes get duplicates would twice also mentioned access changed link document showing get access future", "d": "6/2015"}, {"body": "matanlurey checked tests actually test exactly case fine could add reprocase simple still fails", "d": "6/2015"}, {"body": "matanlurey chance anywhere", "d": "6/2015"}, {"body": "nt chance write repro case let assume either works workaround good enough release", "d": "6/2015"}, {"body": "still needs one char", "d": "6/2015"}, {"body": "yeah put every component meh", "d": "6/2015"}, {"body": "currently reserved identifiers special sense declared template since identifiers discussing possibly could convinced make reserved thoughts vsavkin tbosch", "d": "6/2015"}, {"body": "nt also target removing prefix imo would make things confusing", "d": "6/2015"}, {"body": "maybe", "d": "6/2015"}, {"body": "agreed removing prefix entirely would confusing would adequate replacement though nice js", "d": "6/2015"}, {"body": "prefix prefix currently reserved bundled directives core prefixless sounds like keep way easy going close issue comment dissagree", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "thanks replying go", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "rkirov seems like something address along query updates assigning please reassign unassign wrong owner internal issue", "d": "6/2015"}, {"body": "talked rado working", "d": "6/2015"}, {"body": "merged via", "d": "6/2015"}, {"body": "fixed via merged yesterday cc rkirov", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "issue comes support", "d": "6/2015"}, {"body": "urlresolver hotfixed support think regex check styleurlresolver fails", "d": "6/2015"}, {"body": "urlresolver hotfixed support think regex check styleurlresolver fails sure", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "understanding need serialize js application render separation certain case think worth making change simplify things problem", "d": "6/2015"}, {"body": "vsavkin tbosch comment plans use js probably stay", "d": "6/2015"}, {"body": "let", "d": "6/2015"}, {"body": "idea convert type enum", "d": "6/2015"}, {"body": "reviewed mhevery good idea offline", "d": "6/2015"}, {"body": "also needed clean material design components need render logic also needed uses directly", "d": "6/2015"}, {"body": "decides leave follows rename make ask get instance work webworkers platforms eg native script serverside", "d": "6/2015"}, {"body": "use", "d": "6/2015"}, {"body": "would nt work opened bug", "d": "6/2015"}, {"body": "closing dup", "d": "6/2015"}, {"body": "aware plan lots refactorings around closing covered work", "d": "6/2015"}, {"body": "could please submit pr", "d": "6/2015"}, {"body": "vicb need patch support nt wanted capture issue first opening bug", "d": "6/2015"}, {"body": "ah yep however able generate least one operand known string cc mprobst", "d": "6/2015"}, {"body": "would depend precise type information available might turn bit problem far tell taking rough look large parts angular code base type information around people would write lots type assertions also statement", "d": "6/2015"}, {"body": "mprobst arguing smarts based types arguing support use contexts instance comparing strings nt worried squishy equality", "d": "6/2015"}, {"body": "see saying translate dart workable solution quite dangerous using nonstring arguments leads beloved oddities javascript comparison js side using leads silent errors string comparisons dart side could replace might performance issue", "d": "6/2015"}, {"body": "mprobst gah mention need know b string least type could nt allow make sure treated optional er used sparinglycarefully vicb could create another facade string equality", "d": "6/2015"}, {"body": "kevmoo someone smart already created", "d": "6/2015"}, {"body": "ha okay fix mprobst never mind thanks discussing vicb pull request inbound shortly", "d": "6/2015"}, {"body": "currently ignores lightdom top level component usually called class nt make sense bootstrap angular load loader bootstrapping angular", "d": "6/2015"}, {"body": "idea nice spinner want reusable component would used directive suppose never supported", "d": "6/2015"}, {"body": "saying loader would nt even work loader basic features default display loading css angular bootstraps add correct behavior want supported using css converting selector component", "d": "6/2015"}, {"body": "right using svg animations fine part converting component sure could elaborate simple example explain would approach", "d": "6/2015"}, {"body": "reason ignoring light dom root component also seems like nt interpolate literal values component properties root components either would helpful server generated code markup nt want go much ceremony wire angular", "d": "6/2015"}, {"body": "security reasons process directives indexhtml exception bootstrap component", "d": "6/2015"}, {"body": "errors coming original angulardart di code believe brought benchmarking code compare vs angulardart performance nt know whether expected", "d": "6/2015"}, {"body": "seems like recent first noticed pr saying pr root cause adding refs investigations could linked dependency update", "d": "6/2015"}, {"body": "guessing culprit adds empty dart files errors sound correct situation build log commit errors present area commit errors probably know idea empty dart files might cause situation", "d": "6/2015"}, {"body": "thanks analysis might transformers look di related code main multiple main take look later week", "d": "6/2015"}, {"body": "looks like duplicate", "d": "6/2015"}, {"body": "repo could close", "d": "6/2015"}, {"body": "diving little deeper see happening sure correct place fix problem keys dgeni sometimes contain spaces inheritanceimplementation descriptions links files usually contain class name even link contain full key name parser matches first space string would nt matched think right place solve place keys generated match key space character think petebacondarwin help point logic lives submit pr", "d": "6/2015"}, {"body": "jeffbcross think problem caused alexeagle added block code help generate better files think needs bit love rather modifying name export ensure contains necessary information render appropriately doc template", "d": "6/2015"}, {"body": "petebacondarwin would appropriate solution add additional alias first part name", "d": "6/2015"}, {"body": "dangling links warnings mostly related links url encoded trying match keys decoded warning unmatched links injectableindexhtml go away change line petebacondarwin reasonable fix", "d": "6/2015"}, {"body": "jeffbcross change sounds reasonable", "d": "6/2015"}, {"body": "opened pr fix submit pr angularangular lands update dgenipackages dependency recap offline convo petebacondarwin pete going take stab pr next day properly address invalid links issue pr addresses", "d": "6/2015"}, {"body": "petebacondarwin opened another pr deal side effect fix duplicate aliases added bunch ambiguous link warnings show three open prs lgtm merged think zero warnings task", "d": "6/2015"}, {"body": "remaining issue merged fixes selflinks inside annotationsts sure correct way annotate way works without warnings specify link relative path waiting advisement petebacondarwin", "d": "6/2015"}, {"body": "think final set commits resolve warnings", "d": "6/2015"}, {"body": "victor added recently able write directive without follows html", "d": "6/2015"}, {"body": "prefer using pipes new syntax deep check plays well idea pipes affecting bindings explicit compared rather syntax workaround also see json cache error removed ref cache also rather keep syntax function bind syntax update actually bind one way one time supported since still ca nt done pipe", "d": "6/2015"}, {"body": "totally agree strict put file understanding packagejson gets pushed npm generated", "d": "6/2015"}, {"body": "yes correct wed jun pawel kozlowski notifications githubcom wrote totally agree strict put file understanding packagejson gets pushed npm generated reply email directly view github", "d": "6/2015"}, {"body": "pkozlowskiopensource right technically top level never used dependency projectes since never published npm case matters would someone uses", "d": "6/2015"}, {"body": "hey everyone would mind taking care minor issue need move certain dependencies like gulpinsert runtime dependencies dev dependencies file correct", "d": "6/2015"}, {"body": "never contributed angular looks like nice super easy issue start ive used angularjs year work experience using angularjs messed around done little personal projects using angular loving even love angularjs", "d": "6/2015"}, {"body": "go make sure read nt plan work end week still open next alpha handle", "d": "6/2015"}, {"body": "fixed initial error ie service injected service", "d": "6/2015"}, {"body": "also added missing symbol type service", "d": "6/2015"}, {"body": "mhevery fixed go ahead update syntax", "d": "6/2015"}, {"body": "issue closed", "d": "6/2015"}, {"body": "happy close left open reminder mhevery could go update code code triggering bug noticed ie style declaration", "d": "6/2015"}, {"body": "think currentnew way express right yjbanov current version", "d": "6/2015"}, {"body": "alexeagle shortly release new version support interfacebased function types", "d": "6/2015"}, {"body": "chatted alexeagle one seems straightforward complete updated", "d": "6/2015"}, {"body": "actually think good go ahead land basic docs evolve issues landed", "d": "6/2015"}, {"body": "per discussion matanlurey works intended action", "d": "6/2015"}, {"body": "zzo juliemr could take look one please", "d": "6/2015"}, {"body": "sure looking", "d": "6/2015"}, {"body": "issue karma using old version glob whose async performance bad using globsync instead increases performance version glob using latest version glob performance order magnitude improved hope fix one way another soon", "d": "6/2015"}, {"body": "quick grep nt look like angular build tools using async glob directly info coming", "d": "6/2015"}, {"body": "caitp used karma dart plugin wed jun notifications githubcom wrote quick grep grep glob r nodemodules excludedirglob grep broc grep js nodemodulesbroccolinodemodulesrimrafrimrafjs glob p globopts afterglob nodemodulesbroccolifunnelnodemodulesbroccolireadcompatnodemodulesrimrafrimrafjs glob p globopts afterglob nodemodulesbroccolistewnodemodulesbroccolifunnelnodemodulesrimrafrimrafjs glob p globopts afterglob nodemodulesbroccolistewnodemodulesfsextranodemodulesrimrafrimrafjs glob p globopts afterglob nt look like angular build tools using async glob directly reply email directly view github", "d": "6/2015"}, {"body": "coming karma uses older version glob karma taking long time runrerun tests glob globbing files taking long time", "d": "6/2015"}, {"body": "fwiw karma globbing taking long time dart plugin since using dartium happening dart plugin nt anything expensive case", "d": "6/2015"}, {"body": "really would expect issue affect js tests well small delay js nowhere significant dart dart dist tree contains many files wed jun mark trostler notifications githubcom wrote fwiw karma globbing taking long time dart plugin since using dartium happening dart plugin nt anything expensive case reply email directly view github", "d": "6/2015"}, {"body": "hmm looking analysis pointing nodeglob culprit wonder start see issue migration brocolli used fast gulpbased build", "d": "6/2015"}, {"body": "back old prebroccoli days karma watched filesystem run full globs whenever file changed broccoli watching fs karma gets kicked fresh every file change must glob entire fs time looking files lot", "d": "6/2015"}, {"body": "oh nt realise got broccoli karma watching guess done like one thing charge build right instead separate broccoli karma adapter hm nt see pb js", "d": "6/2015"}, {"body": "karma longer watching broccoli broccoli detects change kicks single run karma nt looked js stuff yet nt know take look", "d": "6/2015"}, {"body": "started happening recently wonder generated files dart maybe part solution would make file patterns restrictive karma nt need much work also build could generate list changed files karma use figure paths invalidate far know run dartium http caching disabled file urls ca nt amended versioning info wed jun mark trostler notifications githubcom wrote karma longer watching broccoli broccoli detects change kicks single run karma nt looked js stuff yet nt know take look reply email directly view github", "d": "6/2015"}, {"body": "ok bad news newer globs nt automatically follow symlinks running much faster using latest glob using sync vs async globing get seconds currently seconds faster instantaneous heavy hitter pattern karmadart conf distdart matches files takes seconds glob yes way make list files smaller help", "d": "6/2015"}, {"body": "ok got sec latest karma need surgery dart karma config glob files karma changes get npm canary release send pr js unit tests take seconds glob files", "d": "6/2015"}, {"body": "files dart sounds like lot ending huge files transformers globbing pub dependencies case current unittesting workflow dart pretty much broken", "d": "6/2015"}, {"body": "info watcher pattern userstrostlerangulardistdart matches bulk far test trostler find l wc l transform directory big winner test trostler find l wc l", "d": "6/2015"}, {"body": "checking one caitp week anyone working slip igorminar clarify whether still", "d": "6/2015"}, {"body": "another option still readying karma release latest dart sdk test runner built given shot", "d": "6/2015"}, {"body": "running reduces latency seconds seconds files needed transformer work transformers run nt need also see every subdirectory contains directory links main directory root seems pretty excessive links generated anyone knows yjbanov", "d": "6/2015"}, {"body": "thnx much igorminar zzo tested locally cuts rerun delay secs secs awesome thank", "d": "6/2015"}, {"body": "matanlurey foobar work nt foobar foobar experiencing issues solve pb", "d": "6/2015"}, {"body": "work also defies html convention bit prefers camel case", "d": "6/2015"}, {"body": "note dom properties also camelcased", "d": "6/2015"}, {"body": "closing seems work intended please reopen need", "d": "6/2015"}, {"body": "understand working intended nt working wanted", "d": "6/2015"}, {"body": "tried better intentions", "d": "6/2015"}, {"body": "tasks completly rebuild way generate file resolved closing", "d": "6/2015"}, {"body": "tracking registry stuff mostly blocked js extensions note consuming commonjs works problem build like sort stuck next bump", "d": "6/2015"}, {"body": "example kind overrides needed use big issue one bit friction get running", "d": "6/2015"}, {"body": "robwormald renaming js cleaning packagejson happen noncontroversial least place someone make controversial open separate issues agree bundle way go ts consumers thats publish ts sources npm top commonjs ok adding jspm info packagejson long maintenance cost npm would still preferred method delivering consuming", "d": "6/2015"}, {"body": "superceded", "d": "6/2015"}, {"body": "published added publish scripts", "d": "6/2015"}, {"body": "probably stop issue mergetrees plugin reverted igor intends", "d": "6/2015"}, {"body": "sounds like need", "d": "6/2015"}, {"body": "thinking use creation combinators addition subscription already", "d": "6/2015"}, {"body": "assuming using typescript need annotation remove", "d": "6/2015"}, {"body": "using typescript see injecting store todofactory example however adding ngzone appinjector caused error see looking source code bootstrap method appears angular binding value instead factory ngzone hunch something wit nt dig deeper found work around things note using requirejs along side systemjs wrote require plugin load angular modules systemjs doubt causing issue", "d": "6/2015"}, {"body": "mhevery said removed inject ngzone working thought needed include appinjector property", "d": "6/2015"}, {"body": "blocking gt write regular services cc matanlurey", "d": "6/2015"}, {"body": "todo update render design doc implemented", "d": "6/2015"}, {"body": "use render services right need implement", "d": "6/2015"}, {"body": "quick question api support creating runtime eg example jquery dom renderer created new element could return elementref", "d": "6/2015"}, {"body": "need know injector hierarchy well ie would need create new places well need first created compilation templates", "d": "6/2015"}, {"body": "matanlurey use case though", "d": "6/2015"}, {"body": "considering dom render service could pass reference element back app thread", "d": "6/2015"}, {"body": "seems like binding throwing error null", "d": "6/2015"}, {"body": "mhevery tried removing actually still tells thing also see assigning", "d": "6/2015"}, {"body": "mhevery seems managed make work removed instructed written", "d": "6/2015"}, {"body": "find examples using forms", "d": "6/2015"}, {"body": "vsavkin thanks looks great especially template driven form example side note setup ts angular got branch trying nt work", "d": "6/2015"}, {"body": "vsavkin nevermind ts setup managed", "d": "6/2015"}, {"body": "vsavkin try use template driven form example get following exception know code js import component view import ngfor ngif import defaultvalueaccessor formmodeldirective formcontroldirective templatedrivenformdirective formbuilder controlgroup control validators import todo appservices import task tasktask class todomodel completed boolean value string created string updated string component selector todos appinjector todo view templateurl appcomponentstodostodoshtml directives ngfor ngif defaultvalueaccessor formmodeldirective formcontroldirective task export class todos model new todomodel todos array todo controlgroup desc control todo todo constructor todo todo thistodo todo thistodos todoentries thistodo buildergroup desc validatorsrequired thisdesc thistodocontrolsdesc add event value eventpreventdefault value valuelength return thistodoadd thismodel thisdescupdatevalue html todos task add found using causes exception thrown use fine null seems triggering interaction input intended", "d": "6/2015"}, {"body": "petersvintsitskyi syntax properties changed object key value string array list change work change syntax enable us repeat directiveproperty name bindingproperty names ex write would mean", "d": "6/2015"}, {"body": "things working new release first check changelog best list beaking changes", "d": "6/2015"}, {"body": "thank help notice chagnelog", "d": "6/2015"}, {"body": "called component instantiated vs instantiated comment render initial state currently document specific call order multiple events called actual order change init check ibhi use case order matters vsavkin document", "d": "6/2015"}, {"body": "vicb thanks quick response use case order come across share", "d": "6/2015"}, {"body": "sort document test", "d": "6/2015"}, {"body": "vsavkin could valuable api doc send pr tomorrow", "d": "6/2015"}, {"body": "consider following believe second application functioncall", "d": "6/2015"}, {"body": "note version angular new router calls methods controllers etc seems like version methods exist constructors called purpose else tap events", "d": "6/2015"}, {"body": "hostview injector way go nt plans modes yet", "d": "6/2015"}, {"body": "already existing version prefer switching rxpipests nt allow nt want arguments made issue mhevery said think would like keep syntax unless technical reason probably found technical reason", "d": "6/2015"}, {"body": "already existing version currently parsed would rewritten use delimit parameters", "d": "6/2015"}, {"body": "stick argument separator", "d": "6/2015"}, {"body": "still debating best handle css encapsulation components roadmap", "d": "6/2015"}, {"body": "add details strategies rendering component native wc emulated wc emulated wc unscoped default strategy last one explains see see applicationjs info emulated behavior strictly native one strategy automatically switched based availability wc", "d": "6/2015"}, {"body": "thanks misko victor response switch wc strategies see posts say calling bootstrap however seem help get error still go ahead run compiled javascript code assuming typedefiniton editor tooling issue using typescript angular guidance around would highly appreciated", "d": "6/2015"}, {"body": "typescript import shadowdomstrategy nativeshadowdomstrategy import styleurlresolver import bind import bootstrap import hello hello bootstrap hello bind shadowdomstrategy tofactory styleurlresolver gt new nativeshadowdomstrategy styleurlresolver styleurlresolver typescript import shadowdomstrategy nativeshadowdomstrategy import bind import bootstrap import hello hello bootstrap hello bind shadowdomstrategy toclass nativeshadowdomstrategy", "d": "6/2015"}, {"body": "repo please reopen", "d": "6/2015"}, {"body": "yes working nt anything share yet", "d": "6/2015"}, {"body": "thanks jbdeboer", "d": "6/2015"}, {"body": "jbdeboer think feature stacktrace filters internal dart frames valuables", "d": "6/2015"}, {"body": "missing frames angular issue angular catching exceptions throwing new different exceptions catch block saturday june victor berchet notifications githubcom wrote jbdeboer think feature stacktrace filters internal dart frames valuables reply email directly view github", "d": "6/2015"}, {"body": "could provide repro case", "d": "6/2015"}, {"body": "iiuc dynamic component loader passing component exception future router router anything error something zone maybe eating exception nt able verify dynamic component loader correct thing still convinced user dynamic component loader need handle error cases case would loved look spec file understand dynamic component loader intended deal errors", "d": "6/2015"}, {"body": "closing dup resolving issue include meaningful tests", "d": "6/2015"}, {"body": "hi simple example uses benchpress standlone project docs sorry right nt docs", "d": "6/2015"}, {"body": "helps lot thanks tbosch", "d": "6/2015"}, {"body": "might worth filing symlinkorcopy looks like missing trycatch", "d": "6/2015"}, {"body": "sure exactly problem coming nt affect windows machines fixed unix replacing treestabilizerts performance implications however convinced treestabilizer bug expecting multicopy funnel plugin possibly design dart treebuilder could unsafely reusing tree", "d": "6/2015"}, {"body": "oh another thing seems fix reimplementing stewmap broccolifilter new rebuildapi guess another symptom broccolifilter crazy things treestabilizer fixing properly votes approach taken fix oneliner negative perf implications vs severalhundredlines", "d": "6/2015"}, {"body": "oh bumping one well issue makes hard test dart need restart testunitdart file change looongish migration brocolli", "d": "6/2015"}, {"body": "solve issue resolving path template relative component instead writing full path eg vs js component selector app view templateurl apphtml directives class app", "d": "6/2015"}, {"body": "rolandjitsu looking", "d": "6/2015"}, {"body": "fyi vicb updated description", "d": "6/2015"}, {"body": "mhevery thanks one pasted great ideas", "d": "6/2015"}, {"body": "mhevery thought playing components whenever load stylesheet within template using experience flickering suppose due delay stylings loaded applied dom current proposal fix issue otherwise may suggest delaying dom injection styles loaded avoid flickering obvious delay eg text black milliseconds suddenly changes color styling says", "d": "6/2015"}, {"body": "rolandjitsu see", "d": "6/2015"}, {"body": "rolandjitsu experience flickering fixed fixing", "d": "6/2015"}, {"body": "mhevery actually need css already resolve much nicer imo", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "entirely sure understood suggestion completely users point view seems add boilerplate application code add every annotation would nt possible handle framework imo relative urls standard components getting anything wrong", "d": "6/2015"}, {"body": "imo relative urls standard components getting anything wrong plan relative need path component", "d": "6/2015"}, {"body": "ok get write component nt nt get framework could nt say smth like declare component speaking file containing class annotated handle urls declared relative file technical details gives access information perfect complaining add every annotation write adds one point failure imo boilerplate written user", "d": "6/2015"}, {"body": "handle urls declared relative file plan way get path file currently nt see better way achieve simpler way welcome", "d": "6/2015"}, {"body": "pretty easy argue technical details could nt added automatically framework evaluating annotation", "d": "6/2015"}, {"body": "sadly view annotation defined another module would get module defined reads moduleid ie mon jun choeller notifications githubcom wrote pretty easy argue technical details could nt moduleid added automatically framework evaluationg view annotation reply email directly view github", "d": "6/2015"}, {"body": "elements written ts want compile dart js would remove transpile necessary hooks", "d": "6/2015"}, {"body": "yes remove dart choeller would love drop unfortunately technically possible place information stored visible application file said would love hear technical solution would remove dep", "d": "6/2015"}, {"body": "said would love hear technical solution would remove dep moduleid try twitter", "d": "6/2015"}, {"body": "random thought stack traces", "d": "6/2015"}, {"body": "random thoughts cont dart take compile time ct enum module id js fn want use stack traces class module get id return thisprocess new error trace", "d": "6/2015"}, {"body": "vicb nt need moduleid dart", "d": "6/2015"}, {"body": "yep nt need want ts code transpile dart nt", "d": "6/2015"}, {"body": "vicb yes think want remove entirely transpile reasonable alternatively could make noop", "d": "6/2015"}, {"body": "way found make compile time constant noop better way", "d": "6/2015"}, {"body": "ah nt sure meant enum think probably fine", "d": "6/2015"}, {"body": "vicb stack traces wo nt work production code concatenated reading errorstack support stack traces wed jun jacob macdonald notifications githubcom wrote ah nt sure meant enum think probably fine reply email directly view github", "d": "6/2015"}, {"body": "vicb also work safari systemjs systemjs uses load scripts uses let eval show normal file inspector stack traces however safari seem support", "d": "6/2015"}, {"body": "tbosch fail see concatenated code would issue also see discussion standup channel probably issue examples would work", "d": "6/2015"}, {"body": "using systemjs commonjs provide global local module evaluated", "d": "6/2015"}, {"body": "tried unit tests context nt work send lot doc web let try chat later today available pst", "d": "6/2015"}, {"body": "time revive old commit", "d": "6/2015"}, {"body": "ref", "d": "6/2015"}, {"body": "fyi vicb updated details", "d": "6/2015"}, {"body": "note fail build", "d": "6/2015"}, {"body": "note errors coming transformer angulardart transformer angular transformer perhaps issue", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "cc matanlurey vicb tbosch yjbanov jbdeboer", "d": "6/2015"}, {"body": "case multiple ng apps multiple injectors element think ok", "d": "6/2015"}, {"body": "visibility restricted sides place token bound place token consumed via", "d": "6/2015"}, {"body": "dummies mean intent drop approach favour approach", "d": "6/2015"}, {"body": "mdausmann confusing usage declarations changing", "d": "6/2015"}, {"body": "also internal", "d": "6/2015"}, {"body": "mhevery design document anything follow along theory looks good like better understand overall picture", "d": "6/2015"}, {"body": "making progress issue see one pr left remove app injector tree", "d": "6/2015"}, {"body": "issue closed see related issue", "d": "6/2015"}, {"body": "thnx splintercode", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "vicb yes right double checked changing get fps examples see closing", "d": "6/2015"}, {"body": "servejsprod never setup incrementally build use servejsdev instead", "d": "6/2015"}, {"body": "prod version required running benchmarks plan implementing feel free close", "d": "6/2015"}, {"body": "easy implement ci also use servejsprod benchmarks endtoend tests case would rebuild whole thing twice ci bigger change gulp setup", "d": "6/2015"}, {"body": "matsko could create target like dev thanks", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "igorminar need review going close monday", "d": "6/2015"}, {"body": "wrong repo angular check", "d": "6/2015"}, {"body": "angular repo looking angular repo", "d": "6/2015"}, {"body": "woops sorry", "d": "6/2015"}, {"body": "internal", "d": "6/2015"}, {"body": "mhevery starting look one would like confirm want accept expression ngclass directive expression could evaluate one string array object maybe accept object case going support class exp would strongly suggest changing selector existing directive otherwise looks like call directive host properties btw today people nice proposed syntax least nt raise questions directive guess bottom line binding special completely separate rules compiler", "d": "6/2015"}, {"body": "cc irfantusneem", "d": "6/2015"}, {"body": "would work fine transformer long update annotationmatcher know", "d": "6/2015"}, {"body": "chat tsander deprioritizing would prevent transformers running apps transformers declared per package globally", "d": "6/2015"}, {"body": "naomiblack think patch release one otherwise transformers really usable", "d": "6/2015"}, {"body": "true makes requests block asserts meant test far come back clean use area generate getters setters amp methods instead avoiding async gap", "d": "6/2015"}, {"body": "nt think compiler parses expressions requests getterssettersmethods reflector also requests getterssetters property bindings vsavkin think", "d": "6/2015"}, {"body": "quick test confirms strategy wo nt work another potential option use data structures returned figure need register seems bit errorprone actually pulling avoids playing global state smells bad", "d": "6/2015"}, {"body": "talking kegluneq following nt create new method use directly long term plan would switching back using relying result instead listening calls reflector", "d": "6/2015"}, {"body": "reason issue cases transpiler generate property setters directive used turns transpiler code correct although code passage issue seemed suspicious could verify via statements added transformer replaces real problem propertysetterfactoryts caching property setters module global variable even though transpiler recreated compiler every template got property setters eg accross compiled files entry points caching property setters leads correctly generated setters every template transpiler checked files", "d": "6/2015"}, {"body": "kegluneq think nt need change transformer however could verify dart wo nt make calls parallel ie call another call still pending case transformer code good create separate pr changing propertysetterfactoryts cache also add test case transformer", "d": "6/2015"}, {"body": "digging today current understanding even working guarantee work future using pipeline directly might good way go directly process determine need", "d": "6/2015"}, {"body": "confirmed still make change even cause behavior observing", "d": "6/2015"}, {"body": "landed master via", "d": "6/2015"}, {"body": "alexeagle need discuss prioritize relative customerfacing issues might need slip", "d": "6/2015"}, {"body": "workaround bug fixed file removed", "d": "6/2015"}, {"body": "rather global rather allow people scope similar adding bindings bindings allows per component global app means small apps use global large apps scope", "d": "6/2015"}, {"body": "discussed think best way component inject export function main view class mycomponent route route constructor route route thisroute route current thinking works intended well changing anything", "d": "6/2015"}, {"body": "also version beginning worked nt remember changed since", "d": "6/2015"}, {"body": "need steps reproduce getting error command running etc", "d": "6/2015"}, {"body": "similar issue component maybe exception thrown hitting error directives try import directive get error", "d": "6/2015"}, {"body": "mhevery try cloning git repo currently running fine using alpha change line srcmainhtmlindexhtml using would get error uncaught typeerror function", "d": "6/2015"}, {"body": "able repro rkirov looking", "d": "6/2015"}, {"body": "confirmed bundle broken consumed commonjs looking caused regression", "d": "6/2015"}, {"body": "mhevery rkirov thanks guys really appreciate thanks work whole team behind angular", "d": "6/2015"}, {"body": "today ludohenin updated angular version issue digging systemjs found issue comes transpiled gets turned empty file dependency resolution phase getting messed dirty workaround", "d": "6/2015"}, {"body": "thanks leads slightly less dirty fix pending anyone know relevant systemjs issue", "d": "6/2015"}, {"body": "rkirov quick chat guy bedford systemjs issue systemjs related one", "d": "6/2015"}, {"body": "recommendations get alpha working fixed alpha", "d": "6/2015"}, {"body": "jomeier version updated soon initial release patch fixes issue temporarily", "d": "6/2015"}, {"body": "temporary fix landed thanks reference mgechev mentioned already bundle backpatched", "d": "6/2015"}, {"body": "fix systemjs anyone able test master case would great help know caught", "d": "6/2015"}, {"body": "note relation mgechev comment", "d": "6/2015"}, {"body": "originally wanted noticed problemsblocked listed lead issue opened questions direction etc updated issue bit questions like function bind syntax array comprehension arguments working atm able super easy ones since nt arguments depends things currency probably needs localelikeservice unless fine mvp version date probably needs localelikeservice unless fine mvp version filter need able add arguments unless file limitto need able add arguments unless file number probably needs localelikeservice unless fine mvp version orderby need something like parse parser methods requires element location also problem pipeline issue open also already use feature using parentheses arguments appcomponentsappts using getpipe", "d": "6/2015"}, {"body": "code wise would mean public api changing dynamiccomponentloader also assume host adding created host element child given element removing compiler leaving public method enforcing annotation classes", "d": "6/2015"}, {"body": "yep right uses proposed changes look good end", "d": "6/2015"}, {"body": "mhevery think", "d": "6/2015"}, {"body": "talked mhevery person red flags lowered priority mhevery said removal app injector needs go first", "d": "6/2015"}, {"body": "talked ferhat gt also need however needs following use case ie wants load component component angular also create element add component view", "d": "6/2015"}, {"body": "updated description based last comment", "d": "6/2015"}, {"body": "process much simplified", "d": "6/2015"}, {"body": "addendum think right", "d": "6/2015"}, {"body": "modifying packagejson constraints packagejson allow rewrap packagejson needed updated use", "d": "6/2015"}, {"body": "ttowncompiled please bug jeffbcross help get stuck", "d": "6/2015"}, {"body": "would also consider publish dts files within alpha releases codeangularjsorg", "d": "6/2015"}, {"body": "toedter definitely support idea alexeagle put dts file online today even alpha would appreciate way get proper dts files alpha instead searching hacks net would make things lot easier working", "d": "6/2015"}, {"body": "yes distribute typings via expected channels follow", "d": "6/2015"}, {"body": "spending week working feel issue much convoluted originally thought sure knowledge expertise accomplish would really nice traceur removed build impression one blocked issue otherwise please note therefore would like postpone receive help someone much better working knowledge build path", "d": "6/2015"}, {"body": "think good someone familiarity build process history pair ttowncompiled maybe could wait week june alpha pick back", "d": "6/2015"}, {"body": "sounds reasonable punting spend time", "d": "6/2015"}, {"body": "pushing ttowncompiled made good progress need make decision output systemjs commonjs ian summarize doc review monday june meeting", "d": "6/2015"}, {"body": "something aware removing traceur typescript currently emits incorrect sloppy mode code instead strict mode code significant issue need aware changes behavior transpiled code see", "d": "6/2015"}, {"body": "landed master", "d": "6/2015"}, {"body": "nt mind removing nt understand dynamicchangedetector affects generated change detectors could expand", "d": "6/2015"}, {"body": "removing necessary provide types used reason keep around tracks providing type", "d": "6/2015"}, {"body": "since required typing lowering priority vsavkin wants keep also remove remain consistent nt cycles atm yjbanov assigning either make case removing close", "d": "6/2015"}, {"body": "issue typing closing", "d": "6/2015"}, {"body": "would possible request bit transparency direction router current notion sibling components removed mentions another solution road afaik public information might look like documentation outdated less helpful", "d": "6/2015"}, {"body": "matsko btford looks like slipping another week provide status update whether go matsko still right owner", "d": "6/2015"}, {"body": "btford progress could please explain current state", "d": "6/2015"}, {"body": "split havenchyk check weekly meeting notes gh issues relevant tag", "d": "6/2015"}, {"body": "since still dev preview general release fulfill purpose recording user pain extent able responsive feel strongly github queue reflect actual current process like us try current process weeks making significant changes expect nt final procedural pain associated renaming labels github rather large batch highly iterative basis", "d": "6/2015"}, {"body": "hi naomiblack priority page uses navigation eg lot require mock fake router effect tests allow developers expect certain states eg navigation navigation failed already ran twice day intuitive work around", "d": "6/2015"}, {"body": "yes thanks also filing internal issue prioritization raised default absent info filed label prioritization", "d": "6/2015"}, {"body": "exported builds tbosch mhevery handle parts angular", "d": "6/2015"}, {"body": "tbosch chatted best handle class hierarchy friday since implemented changes please review really want get today", "d": "6/2015"}, {"body": "brian partial fix still work tbd", "d": "6/2015"}, {"body": "related include general fix going reassign matias move", "d": "6/2015"}, {"body": "tbosch confirm right component please", "d": "6/2015"}, {"body": "talked tbosch native shadow dom would support neither angular emulated layer may possible something like future angular evaluates alternatives see also", "d": "6/2015"}, {"body": "tbosch correct", "d": "6/2015"}, {"body": "solved", "d": "6/2015"}, {"body": "pr open days file repo days old meant serve quick fix offical one pushed think nearly done might official update soon feel free use one pr", "d": "6/2015"}, {"body": "familiar tsd typescript first time trying may ask tell tsd take patch instead official one", "d": "6/2015"}, {"body": "fixed part", "d": "6/2015"}, {"body": "rkirov aprox timespan next release fix done", "d": "6/2015"}, {"body": "grab current angular typings note use get angular build single file using almost process comes rest files folder also build rx using systemjsbuilder add router furthermore include along since angular dependency well seems everything kind throws errors terminal right since missing right typings tried though use present folder one throws even errors etc missing help would appreciated hard time figuring make fit together using typescript", "d": "6/2015"}, {"body": "rolandjitsu post repo", "d": "6/2015"}, {"body": "branch written js transpiled traceur branch tried switching ts failed task compiles ts files", "d": "6/2015"}, {"body": "rolandjitsu new update angular typings could update although limited types", "d": "6/2015"}, {"body": "give try bad typings updated", "d": "6/2015"}, {"body": "mean typings always kept typings mapped folder structure also plan typings", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "merged", "d": "6/2015"}, {"body": "cc mhevery tbosch", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "merged", "d": "6/2015"}, {"body": "note works chrome canary", "d": "6/2015"}, {"body": "using following command note benchmarks nt throw nt click button ie tree show hide benchmark running", "d": "6/2015"}, {"body": "reproduced plain old seleniumwebdriver using seleniumwebdriver node module selenium chromedriver chrome gt see new versions selenium chromedriver today going try updating see fixes", "d": "6/2015"}, {"body": "see", "d": "6/2015"}, {"body": "updated selenium chromedriver passes chrome beta fails chrome canary click goes wrong element issue submitted chromedriver", "d": "6/2015"}, {"body": "closing since issue filed chromedriver", "d": "6/2015"}, {"body": "moving xhr services", "d": "6/2015"}, {"body": "would move core would keep mock implementation mock directory", "d": "6/2015"}, {"body": "actually go used", "d": "6/2015"}, {"body": "tbosch sounds good move", "d": "6/2015"}, {"body": "kegluneq think could rewrite following instead one minor issue calling fails reason although nt would print nonsensical stack trace pointing code user nt write instead pass function call could wrap call fail meaningful message eg running application transformers enabled reflector generated transformer failed initialize original stack trace", "d": "6/2015"}, {"body": "great point including something similar avoid conflating reflector init bootstrap could", "d": "6/2015"}, {"body": "cc tbosch", "d": "6/2015"}, {"body": "discussed offline amp determined tl dr hide implementation detail former situation previously bindings provided immediately resolved meant providing binding depended instantiated since needed support providing bindings injector prior calling could nt tie instantiation current situation resolution bindings deferred later process longer need user calls meaning hide implementation detail plan going forward automatically create requires ing therefore transitively ing file defines transformer need remove avoid mirrors option provide special import dart ing creates calls standard transformer rewrites special import standard import removing transitive import pros allows us rewrite user code instead angular library code slightly simpler transformer standpoint cons leads situation user remember import special version rather standard one user forgets development fail due lack reflective access transformer fail insert calls generated code option rewrite angular code directly removing library provides adding call transformer generated code pros use looks js amp dart code cons slightly difficult transformer implementation given pros amp cons prefer go option speak polymer see inform implementation", "d": "6/2015"}, {"body": "discussed actually like option better option rewrite call generated code allows us full freedom wrap provide friendly error messages suggested yjbanov keeps complexity low since completely replaced instead modified pros use looks js amp dart code simple implementation cons none identified yet see shakes start implementing", "d": "6/2015"}, {"body": "discussed option offline pros option without cons tl dr move making facade results identical bootstrap code js dart needs minimal code rewrites transformer option reorg file layout current export corets export everythingelse corets export srccoreapplicationts srccoreapplicationts export function bootstrap export class applicationref following mirrors export export srccoreapplicationts mirrors mirrors export export srccoreapplicationcommonts mirrors bootstrapstatic rootcomp reflectorinitializerfn try reflectorinitializerfn catch e print nice message commonbootstrap mirrors export everythingelse srccoreapplicationdart mirrors bootstrap reflector new reflectioncapabilities commonbootstrap srccoreapplicationts export bootstrap commonbootstrap file existing applicationts renamed srccoreapplicationcommonts mirrors export function bootstrap export class applicationref transformer rewrite rewrite user code dart import mirrors main bootstrap mycomp instantiates reflectorcapabilities dart import mirrors import ngdepsdart generated file main bootstrapstatic mycomp mirrors", "d": "6/2015"}, {"body": "changing discussion something updated titlelabels reflect kegluneq please update issue description actually planning", "d": "6/2015"}, {"body": "pushing", "d": "6/2015"}, {"body": "vsavkin per discussion looks like change detection di export overly broadly investigate please needed create another issue", "d": "6/2015"}, {"body": "note fields private according ts definition accessed classesfunctions file used convention places think mind dart definition private ie private member library private dart accessed within library essentially file angular use mapping edit oops nt read comment end", "d": "6/2015"}, {"body": "would nt mind taking crack get started check back questions", "d": "6/2015"}, {"body": "solved", "d": "6/2015"}, {"body": "working custom event", "d": "6/2015"}, {"body": "design close issue workaround", "d": "6/2015"}, {"body": "sekibomazic oh sorry seems like bug since working", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "ah okay design means create event sent rather delegate component event makes sense since better decoupling also confusing since enforced native events like", "d": "6/2015"}, {"body": "seems verbose every component chain would need resend event like parent listen ping child listen ping resend ping even interested grand child emit ping event", "d": "6/2015"}, {"body": "sekibomazic updated example works verbose agree make component loosely coupled forces rather allowing developer take advantage", "d": "6/2015"}, {"body": "ok thanks may design different behaviours native dom events bubbling works root element custom events bubbling works parent event resent need ancestor intuitive imho", "d": "6/2015"}, {"body": "needs reviewed think sekibomazic workaround using customevent maybe parameter bubblestrue emitting event could trick js class todocmp complete new eventemitter oncompletedbutton thiscompletenext bubbles true", "d": "6/2015"}, {"body": "existing sounds like pretty close looking check hammerjs plugin source example", "d": "6/2015"}, {"body": "petebacondarwin igorminar would interested best way solve", "d": "6/2015"}, {"body": "think might able make dgeni tolerant output clang particularly ugly regard think fixed", "d": "6/2015"}, {"body": "mprobst effort teaching clangformat break lines within comment blocks kind domain specific javascript jsdoc would nice nt break petebacondarwin regardless formatting dgeni able deal linebreaks estimate effort please", "d": "6/2015"}, {"body": "nt hard functionality comments java already iirc file bug", "d": "6/2015"}, {"body": "break", "d": "6/2015"}, {"body": "igorminar text within link longer one line actually seems reasonable wrap flow text nt dgeni strip left hand case clangformat nt break consecutive hyperlinks without whitespace eg", "d": "6/2015"}, {"body": "thought dgeni resilient line breaks anyway provide reproduction breaks", "d": "6/2015"}, {"body": "repository angular looking", "d": "6/2015"}, {"body": "meant npm exact commit master", "d": "6/2015"}, {"body": "npm v master commit", "d": "6/2015"}, {"body": "also ran issue", "d": "6/2015"}, {"body": "ca nt reproduce one wondering dts files stale try reinstalling", "d": "6/2015"}, {"body": "problem still persists please open new issue", "d": "6/2015"}, {"body": "ref", "d": "6/2015"}, {"body": "closing since travis happy workaround ts issue return rejected promise instead throwing", "d": "6/2015"}, {"body": "indicated error message need add getter used change detection", "d": "6/2015"}, {"body": "vicb great thanks maybe specified docs since instance expected specifying property would enough", "d": "6/2015"}, {"body": "cc", "d": "6/2015"}, {"body": "problem might checked ref ref change reevaluated pipes pure fonctions cc vsavkin", "d": "6/2015"}, {"body": "vicb actually array objects said first post bad detection works change length array work change object values inside array angular instancem solves issue need watch changes inside array simple work unless specify deep comparison option quite sure things work angular though", "d": "6/2015"}, {"body": "able following iterablediff transforms reference check collection check", "d": "6/2015"}, {"body": "could also change json cache value", "d": "6/2015"}, {"body": "vsavkin maybe json cache values would impact performance suppose", "d": "6/2015"}, {"body": "vsavkin using throws", "d": "6/2015"}, {"body": "darn cache perf feature yeah update want cache ref add", "d": "6/2015"}, {"body": "also running problem ca nt test locally although changes removing code adding tests", "d": "6/2015"}, {"body": "think cache pipe would nice want changes reflected collection set", "d": "6/2015"}, {"body": "issue closed since fixed via merged", "d": "6/2015"}, {"body": "bit specific would say far understand change detection working local variables referring dom element example try bind obviously covered changedetection adding event trigger somehow feels like hack question need trigger change detection bind local variable property", "d": "6/2015"}, {"body": "works expected need trigger event see also note might want use form api", "d": "6/2015"}, {"body": "hi victor saw documentation realised currently need think source different case really bind property local variable basically question difference html furthermore currently trigger event magically changes recognized code also works perfectly fine developer point view feels pretty hacky inconsistent imo leads lot confusion explain differences cases thanks advance christoph", "d": "6/2015"}, {"body": "much difference evaluated change detection change detection runs async event future completes dom events changing value input field trigger change detection listen event cd run triggered understand feel intuitive first form api probably help makes sense", "d": "6/2015"}, {"body": "hi victor thanks explanations makes sense somehow guess triggering change detection input value changes performance reasons right case form api would course option cases like passing inputvalue another component like would still nice things simpler guess helpers cases future thanks christoph", "d": "6/2015"}, {"body": "thanks vicb clarification also thanks friend choeller", "d": "6/2015"}, {"body": "looks like issue", "d": "6/2015"}, {"body": "fixed alpha", "d": "6/2015"}, {"body": "take decision design plus side could help reduce boilerplate minus side kind non consistent would call first time would need call implicitly call fakeasyncquiver personnaly nt strong feeling either solution", "d": "6/2015"}, {"body": "think good idea async tests require call change reduce boilerplate negatively affect tests require call case imagine able observe difference test schedules microtask throws breaks test think throwing case actually better", "d": "6/2015"}, {"body": "vsavkin change quick let know matanlurey yjbanov might inputs well", "d": "6/2015"}, {"body": "way working every test following little crude know", "d": "6/2015"}, {"body": "schedulemicrotask fakeasyncflushmicrotasks openmouth share code", "d": "6/2015"}, {"body": "current implementation switching soon use angular test bed dart returns future facade work testing environment optionally switches tc template use html supplied future compile string html future future final fakeasync new fakeasync run fakeasync final ngzone new ngzone enablelongstacktrace true ngzonerun final rootelement new elementtag testcomponent final mockwindow new mockwindow mockwindowdocumentbodyappend rootelement final testbindings addall emulate browser environment bind window tovalue mockwindow bind document tovalue mockwindowdocument bind documenttoken tovalue mockwindowdocument", "d": "6/2015"}, {"body": "would nt outside microtask work also probably use angular ping refactor test use ng testbed", "d": "6/2015"}, {"body": "wrong introducing another decorator annotation directive selector autofocus host attrname attrvalue property expression event statement action statement class autofocus component selector home view templateurl homehtml styleurl homecss host attrname attrvalue property expression event statement action statement class home since simple case would nt need would nt see examples also would nt surprise since composition effect without guess encouraging people inherit angular annotations make sense overload draganddropdirective selector selection class selection androidcomponent selector home class home", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "still want accept maps js devs happy add idiomatic dart", "d": "6/2015"}, {"body": "internal issue", "d": "6/2015"}, {"body": "possible get refactoring type checking maps eg change api could fail silently", "d": "6/2015"}, {"body": "fault needed install new please ignore blush", "d": "6/2015"}, {"body": "redconfetti yo looking angular repo", "d": "6/2015"}, {"body": "aah sorry thanks", "d": "6/2015"}, {"body": "already captured", "d": "6/2015"}, {"body": "divdavem take look", "d": "6/2015"}, {"body": "vicb first time running test azerty computer work see issue trying execute test manually without protractor typing keyboard sample page", "d": "6/2015"}, {"body": "long since last run tests usually execute one broken really tell first part question amp everything fine might relates protractor cc juliemr", "d": "6/2015"}, {"body": "chromedriver issue", "d": "6/2015"}, {"body": "juliemr thanks link update test avoid amp add link issue", "d": "6/2015"}, {"body": "would nt affecting ci well", "d": "6/2015"}, {"body": "discussed channel tests seem affected number parameters nt necessarily affect ci server developers ones causing problems probably affecting developers maybe folks nt noticing", "d": "6/2015"}, {"body": "ca nt repro please provide instructions", "d": "6/2015"}, {"body": "igorminar works test failing", "d": "6/2015"}, {"body": "see repo angular", "d": "6/2015"}, {"body": "experience thing renders gone ps fully understand internals change detection like next tick occurs", "d": "6/2015"}, {"body": "anyone examples use child router following ibhi method", "d": "6/2015"}, {"body": "note wo nt work dart tests since dartium nt available sauce labs", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "recursive comment", "d": "6/2015"}, {"body": "vicb oops meant make comment", "d": "6/2015"}, {"body": "exactly dup primary intent one able test locally helpful dev adding supported browsers ci", "d": "6/2015"}, {"body": "mprobst love handled yet", "d": "6/2015"}, {"body": "vicb others find supported fa\u00e7ade methods facadeconverterts supported writing x x x x x x precision meaning able write maps", "d": "6/2015"}, {"body": "another option search type graph runtime determine amp something like set visited new set queue searchqueue new queue searchqueueenqueue mycomponent searchqueueisnotempty var curr searchqueuedequeue visitedcontains curr continue visitedadd curr curr onchange isonchange true else curr ondestroy isondestroy true etc searchqueueenqueueall reflectorinterfaces curr could cache answers future nt pay multiple times would nt think expensive", "d": "6/2015"}, {"body": "another option search type graph runtime exactly would issue pushing work transformers could make configurable via cli option ie runtime checks dev static prod", "d": "6/2015"}, {"body": "technical reason ca nt make transformation slow queries require nonlocal information let say want determine whether need return figure need find file defined reason making change file angular app invalidates cache bunch additional work rebuild view world original angulardart transformer used technique smarter much slower one transformer main design goals avoid requiring kind global information one option discussed slow version kind analysis fast version nt slow version could give hints make fast version work", "d": "6/2015"}, {"body": "think need bit info one see already recording interfaces methods actually invoked also complete list lifecyle methods", "d": "6/2015"}, {"body": "needs done dart transformer needs generate event corresponding interface example transformer needs generate", "d": "6/2015"}, {"body": "mhevery close", "d": "6/2015"}, {"body": "issue ionic well since cordova uses", "d": "6/2015"}, {"body": "trivial fix submit pr", "d": "6/2015"}, {"body": "dup closing", "d": "6/2015"}, {"body": "already pr blocked adding tests", "d": "6/2015"}, {"body": "reopen since close one merge", "d": "6/2015"}, {"body": "landed", "d": "6/2015"}, {"body": "reproducible anymore", "d": "6/2015"}, {"body": "additional context", "d": "6/2015"}, {"body": "classes need occur every class possible likely defeat treeshaking resulting code bloat reason prefer one options possible", "d": "6/2015"}, {"body": "also something could done checks supports information used generation change detectors imagine answer likely since change detectors created ever instance type", "d": "6/2015"}, {"body": "one idea would following take also many module systems provide via special import nodejs requirejs special import property see traceur open issue supporting something similar remember similar thing systemjs could find easy add dart could add method would get fully qualified class name either via mirrors transformer", "d": "6/2015"}, {"body": "oh nt write issues expecting possible work relative urls example folder structure something like would make easy write reusable components add boilerplate anything nt consider", "d": "6/2015"}, {"body": "superseded", "d": "6/2015"}, {"body": "probably angular related json comparison could compare objects rather serialized output kegluneq", "d": "6/2015"}, {"body": "right tests testtransform strict whitespace comparison would nt prioritize highly affect small number people modifying transformer tests", "d": "6/2015"}, {"body": "matanlurey could please confirm problem occurs transformers enabled case would reassign kegluneq", "d": "6/2015"}, {"body": "happening gen mode yes", "d": "6/2015"}, {"body": "making sure understand fix transformer needs update urls html templates relative application root rather html file correct", "d": "6/2015"}, {"body": "assigning matanlurey answer", "d": "6/2015"}, {"body": "please note process changing style loading inlining compiler load inline styles shadow dom strategies soon see transformer need anything special", "d": "6/2015"}, {"body": "matanlurey could help reproduce", "d": "6/2015"}, {"body": "gt longer using native", "d": "6/2015"}, {"body": "fyi nt think related urls resolved whatever strategy however already issues related url resolving supposed take look week", "d": "6/2015"}, {"body": "likely running dart pub command synchronously cait please take look switch async unlike commands one take desirable able kill ctrlc", "d": "6/2015"}, {"body": "ca nt repro", "d": "6/2015"}, {"body": "see time time locally ca nt pinpoint exact command root cause definitively sth fishy going one tasks", "d": "6/2015"}, {"body": "meant comment weeks ago never repro attempts nt able reproduce gave another go today still luck reproing however results slightly different get abrupt stack trace sort interesting echobeach angular caitp gulp builddart warning gulp version mismatch global gulp local gulp dart sdk detected using gulpfile gitangulargulpfilejs starting builddart starting buildpackagesdart starting buildcleandart starting buildcleantools finished buildcleantools \u03bcs starting buildtools starting buildtools finished buildcleandart ms finished buildtools finished buildtools starting buildtreedart starting buildtreedart slowest trees total tstodarttranspiler dartformatter slowest trees cumulative total avg tstodarttranspiler dartformatter mergetrees ms funnel ms finished buildtreedart finished buildtreedart starting resolving dependencies c starting cleanupbuilder finished starting buildchangedetectdart unhandled exception uncaught error load error filesystemexception open file path os error file directory errno stack trace asyncloaderrorcallback dart asyncloaderror dart loaddataasyncloadport dart rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecomplete dart cancelandvalue dart streamfirst dart rootzonerununaryguarded dart bufferingstreamsubscriptionsenddata dart bufferingstreamsubscriptionadd dart streamcontroller amp amp syncstreamcontrollerdispatchsenddata dart streamcontrolleradd dart streamcontrolleradd dart rawreceiveportimplhandlemessage dart roothandleuncaughterror dart asyncruncallbackloop dart asyncruncallback dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart finished buildchangedetectdart ms starting buildpurepackagesdart finished cleanupbuilder ms", "d": "6/2015"}, {"body": "repro", "d": "6/2015"}, {"body": "fixing", "d": "6/2015"}, {"body": "possible language within angular reflection runs reflector facilitate mirror removal accessing annotations without mirrors requires register information via true naming presently set deal making change would difficult transformer set process anything except constructors moment ca nt think technical reason ca nt support scenario currently road map", "d": "6/2015"}, {"body": "fine think like keep filed future sugar understand may happen near future maybe help chip get closer launch", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "closing favor", "d": "6/2015"}, {"body": "logs another windows laptop bits ssd antivirus encryption windows defender utilities dectivated helped lot dart sdk available dart tasks skipped using gulpfile c gitangulargulpfilejs starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtscompiler diffingtraceurcompiler slowest trees cumulative total avg diffingtscompiler diffingtraceurcompiler ms treemerger ms funnel ms treestabilizer ms finished broccolijsdev finished broccolijsdev starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat finished buildjsdev min starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver ms info karma karma server started info launcher starting browser chromecanary warn watcher pattern c match file starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtscompiler treestabilizer treemerger diffingtraceurcompiler treestabilizer funnel funnel slowest trees cumulative total avg treemerger ms treestabilizer ms funnel ms diffingtscompiler diffingtraceurcompiler ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun ms info chrome windows connected socket id", "d": "6/2015"}, {"body": "updated logs latest code level measured one machine shows degradation typescript files repo got longer task takes almost minute result takes minutes start js unit tests machines broccoli nature demanding file system without surprises better cpu hardrive faster tasks run addition utilities anitivirus encryption also kill preformances ca nt always deactivated would interesting figures highend linux macos boxes know far could please share", "d": "6/2015"}, {"body": "gulp testunitjs working directory changed dartangular dart sdk detected using gulpfile dartangulargulpfilejs starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtscompiler diffingtraceurcompiler slowest trees cumulative total avg diffingtscompiler diffingtraceurcompiler ms finished broccolijsdev finished broccolijsdev starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat min finished buildjsdev min starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver ms warn karma port use info karma karma server started info launcher starting browser chromecanary warn watcher pattern match file starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total funnel funnel treemerger treemerger destcopy slowest trees cumulative total avg funnel ms treemerger ms destcopy replacefilter ms diffingtraceurcompiler ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun info chrome linux connected socket id chrome linux executed skipped success secs secs", "d": "6/2015"}, {"body": "mlaval numbers machine year old mbp starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools \u03bcs starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev slowest trees total diffingtscompiler diffingtraceurcompiler slowest trees cumulative total avg diffingtscompiler diffingtraceurcompiler ms mergetrees ms finished broccolijsdev finished broccolijsdev starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat finished buildjsdev starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver ms info karma karma server started info launcher starting browser chromecanary starting broccolijsdev slowest trees total mergetrees funnel funnel mergetrees slowest trees cumulative total avg mergetrees ms funnel ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun ms superfast osx either seconds tests execution start normally would nt bad one needs kill karma quite often due tests messed guess connected low priority chrome process window minimized going change title issue slow machine slow", "d": "6/2015"}, {"body": "observations windows machines share topic using ssd years old computer recent one yields numbers task putting full project ram drive improves performances", "d": "6/2015"}, {"body": "already changed many plugins clangformat efficient still several related efforts help situation reduce startup cost reduce cost incremental updates", "d": "6/2015"}, {"body": "landed try reproduce issue may issue really symptom confusing logging may case", "d": "6/2015"}, {"body": "works fine closing", "d": "6/2015"}, {"body": "appears completed lifecycle typed provided docs", "d": "6/2015"}, {"body": "design create custom element fire event nobody catch event could call addeventlistener custom element constructed wo nt throw exception either create different implementation eventemitter eg replaysubject deliver event also use oninit hook", "d": "6/2015"}, {"body": "kevmoo kegluneq something could help please selfassign add", "d": "6/2015"}, {"body": "reopened push update pub verify actually fixed", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "generating dartdocs everything included public api dgeni doc annotations show output needs work petebacondarwin could investigate", "d": "6/2015"}, {"body": "pushed back got sidetracked important transformer bugs", "d": "6/2015"}, {"body": "reason", "d": "6/2015"}, {"body": "naomiblack sure fix something else need stripreplace dgeni annotations generate dart code", "d": "6/2015"}, {"body": "yes let close bother protractor", "d": "6/2015"}, {"body": "pattern documented tuesday june mi\u0161ko hevery notifications githubcom wrote closed reply email directly view github", "d": "6/2015"}, {"body": "done via", "d": "6/2015"}, {"body": "agree would really nice see simple example run tests especially using ts", "d": "6/2015"}, {"body": "discussed tbosch move away anchor element used context ie web workers server side", "d": "6/2015"}, {"body": "mhevery facades nt work need different implementation client vs server tue jun victor berchet notifications githubcom wrote discussed tbosch move away anchor element urlresolver used context ie web workers server side reply email directly view github", "d": "6/2015"}, {"body": "assigning vsavkin clarify needs implemented", "d": "6/2015"}, {"body": "productive chat vsavkin unblocked", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "naomiblack unassigned error someone else working", "d": "6/2015"}, {"body": "pkozlowskiopensource also think event schema well", "d": "6/2015"}, {"body": "mhevery started dig topic thoughts agree ewinslow bit magical top got already system place specify sth attribute binding proposal would sure feel sticking properties map maybe deserves key comes extending maybe able specify element name class tested probably many elements properties since properties remapping able remove magical mapping foo bar comes events guess ca nt find runtime would hardcode list events current understanding slightly modified proposal would could discuss items point", "d": "6/2015"}, {"body": "ah regarding implementation leaning towards adding new dedicated compilation step one would execute directives properties parsed sticking logic thoughts best place schemaverification logic implementation hints", "d": "6/2015"}, {"body": "ok good progress today first implementation workish least tsjs additional checks uncovered interesting corner cases given shell throw would say yes property element directives given java directive selector foo class foo view template directives foo would say yes property element matching directives changes syntax like throw people write mhevery could opinion cases", "d": "6/2015"}, {"body": "pb existing switch directive today works want strict would", "d": "6/2015"}, {"body": "clear yes attribute exists selector matches concern attribute implies expression none think error", "d": "6/2015"}, {"body": "considering guess schema events would also map rather list override default camel casing", "d": "6/2015"}, {"body": "kvantetore right considered", "d": "6/2015"}, {"body": "would reasonable expect closed bump", "d": "6/2015"}, {"body": "yjbanov make progress probably complete items reasonable move issue", "d": "6/2015"}, {"body": "mhevery progressing schema support implementation coding thinking items need discussing imo global vs per schema last time discussed concern declare global applicationwide would problems regular directives since specified perview distinguish binding element directive properties know query directive properties runtime need schema html elements regular custom really global interestingly seems like detect web components runtime seems like could query custom properties well need experiment bit seems like could call compilation see dealing custom element eventually query properties case would need schema events custom attributes", "d": "6/2015"}, {"body": "related find issue wonderful example open source sugar simple technical issue related developers easy explain easy understand", "d": "6/2015"}, {"body": "router src amp tests passing js locally", "d": "6/2015"}, {"body": "juliemr move ts verify still works remove dependency traceur", "d": "6/2015"}, {"body": "actually ttowncompiled working inside benchmarks juliemr hook", "d": "6/2015"}, {"body": "unit tests ported typescript", "d": "6/2015"}, {"body": "ttowncompiled working test typscriptification", "d": "6/2015"}, {"body": "ttowncompiled finished remaining examples", "d": "6/2015"}, {"body": "done ttowncompiled opened new issue next milestone tsify benchmarks external", "d": "6/2015"}, {"body": "done via", "d": "6/2015"}, {"body": "removed comments shadow dom emulation favor", "d": "6/2015"}, {"body": "changes api surface previous javascript appviewmanagercreateviewincontainer viewcontainerlocation elementref atindex number protoviewref protoviewref context elementref null injector injector null viewref viewcontainercreate protoviewref protoviewref null atindex number context elementref null injector injector null viewref methods actually cover use cases manual content projection using context case needs taken context using explicit make sense use case means show template somewhere else use execution context variables injector dynamic component loading created via call passed one methods case never context likely better api would follows javascript appviewmanagercreateembeddedview viewcontainerlocation elementref atindex number context elementref null appviewmanagercreatehostview viewcontainerlocation elementref atindex number protoviewref protoviewref injector injector null viewcontainercreate atindex number context elementref null viewref viewcontainercreatehostview protoviewref protoviewref null atindex number injector injector null viewref would always used also simplifies proposal needs", "d": "6/2015"}, {"body": "commented matan best api would bit add callback onturndone user callback called async event happened change detection ran schedule microtasks something like cc vicb thoughts last person worked zones", "d": "6/2015"}, {"body": "seems like good proposal probably needs modification zones dart amp js currently way know result enqueueing microtask easy update", "d": "6/2015"}, {"body": "see also", "d": "6/2015"}, {"body": "probably wants ngzone dart add tests", "d": "6/2015"}, {"body": "would nice detect timers added createtimer createperiodictimer apis call onstable nonperiod timers resolved", "d": "6/2015"}, {"body": "also think client api exposed lifecycle object ngzone", "d": "6/2015"}, {"body": "would nice detect timers added createtimer createperiodictimer apis call onstable nonperiod timers resolved guess would take timers fire near future account also think client api exposed lifecycle object ngzone agree", "d": "6/2015"}, {"body": "also try clean rx typings since closely related", "d": "6/2015"}, {"body": "wip still files using traceur issues traceur upgrade let put till next milestone perhaps remove traceur altogether instead", "d": "6/2015"}, {"body": "going close since want keep number bugs small nt end issue bankruptcy", "d": "6/2015"}, {"body": "trivial fix submit pr", "d": "6/2015"}, {"body": "naomiblack blocker ionic upped priority added hotlist", "d": "6/2015"}, {"body": "thanks looks like pr submitted issue already waiting tests take look tomorrow", "d": "6/2015"}, {"body": "dup pr closes one", "d": "6/2015"}, {"body": "one always use polymer since webcomponents work angular mhevery true even webcomponents available natively thinking polyfill interactions", "d": "6/2015"}, {"body": "polymer angular sharing components", "d": "6/2015"}, {"body": "fix", "d": "6/2015"}, {"body": "running well version using alpha idea fix mentioned another fix already planned make planning show demo angular u week live streamed tried adding everything think might look even though nt think required still get error based error code seems navigationhref nt created properly onallchangesdone calls router generate mentioned specific error get typeerror read property null stacktrace typeerror read property null executelocationnormalizeabsolutely executerouterlinkonallchangesdone dynamicchangedetectorexecutedynamicchangedetectorcallonallchangesdone dynamicchangedetectorexecuteabstractchangedetectordetectchanges dynamicchangedetectorexecuteabstractchangedetectordetectchangesinlightdomchildren dynamicchangedetectorexecuteabstractchangedetectordetectchanges dynamicchangedetectorexecuteabstractchangedetectordetectchangesinshadowdomchildren dynamicchangedetectorexecuteabstractchangedetectordetectchanges dynamicchangedetectorexecuteabstractchangedetectordetectchangesinlightdomchildren dynamicchangedetectorexecuteabstractchangedetectordetectchanges", "d": "6/2015"}, {"body": "danwahlin include routeroutlet seprately using", "d": "6/2015"}, {"body": "thanks patrick check nt want tweak anything point need get working since running time appreciate modified script", "d": "6/2015"}, {"body": "danwahlin would create folder called exports directivesservices etc need fix rather attach patch routeroutlet way fixed need delete delete file example routerlink gist also fixes memory leak routerlink", "d": "6/2015"}, {"body": "nice great idea thanks nt chance try yet routerlink patch require routeroutlet patch run independently", "d": "6/2015"}, {"body": "independent", "d": "6/2015"}, {"body": "great thanks", "d": "6/2015"}, {"body": "think issue fixed time ago vicb reproduce master", "d": "6/2015"}, {"body": "parametrization handled", "d": "6/2015"}, {"body": "question would best way query something like want get reference components need etc way imperatively", "d": "6/2015"}, {"body": "matanlurey support random filter function query expressed single directive type write imperative api would significantly different probably would nt make sense live list", "d": "6/2015"}, {"body": "rkirov filter approach let know file separate fr", "d": "6/2015"}, {"body": "mhevery use case mind nt quite see affects tooling example mind figure another way achieve component feature api without making change", "d": "6/2015"}, {"body": "jelbourn use case pretty close content reprojection although quite need project another component jelbourn mhevery proposal every component ask protoview represents light dom gets lot easier implement content reprojection", "d": "6/2015"}, {"body": "native content reprojection users already used thought things put light dom component show somewhere else would surprising new concept user also assume could new directive would get parent component stamp ie would simple extensible form content reprojection based views rather direct dom manipulation", "d": "6/2015"}, {"body": "discussed vsavkin tbosch decided real use case needs design doc explore", "d": "6/2015"}, {"body": "related current shadow dom emulation runtime using view containers eg tables detection place run problem tags hit someone creating big table tag see", "d": "6/2015"}, {"body": "related", "d": "6/2015"}, {"body": "despite fact removed anyway could one please give little explanation difference know creates root injector app injector child injector component bootstrapped currently sub component define bindings la allows us override existing bindings understand actually creates yet another child injector component child components right however based naming sounds like bindings also passed app injector created bootstrap since bindings flattened overriding would nt work relate creates child injector anyway nt matter renaming still unclear", "d": "6/2015"}, {"body": "host amp view injectors vs guess current state little bit confusing almost everybody better docs meanwhile find info inline coments api doc unit tests", "d": "6/2015"}, {"body": "vicb thanks confirm creates child injector component", "d": "6/2015"}, {"body": "needed ie empty", "d": "6/2015"}, {"body": "always case use right mean reason thanks least clarified", "d": "6/2015"}, {"body": "reason component simple might need probably case examples", "d": "6/2015"}, {"body": "zone updated master workaround required starting next alpha", "d": "6/2015"}, {"body": "naomiblack moved wo nt time work next week", "d": "6/2015"}, {"body": "also", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "article pascalprecht helped w basics component router annoying thing try using typescript typings files describe typesmethods file definitelytyped date contain router amp link temporary workaround", "d": "6/2015"}, {"body": "also got repo working example date latest changes workaroundshacks angular team comes good solution typings", "d": "6/2015"}, {"body": "internally also", "d": "6/2015"}, {"body": "still failing another error seems come dartfmt command case characters long limit windows command line command starts", "d": "6/2015"}, {"body": "may need quote filename could try see easy fix individual paths nt look like exceed chars might wrong", "d": "6/2015"}, {"body": "nt help", "d": "6/2015"}, {"body": "try pr patch see", "d": "6/2015"}, {"body": "works great task fails later continued", "d": "6/2015"}, {"body": "thanks help caitp improvement still failures happening working", "d": "6/2015"}, {"body": "progress building dart version windows issues later issue dartexe nt know slashes normalized stuck pubbuild step seems angular dart transformer dealing windows backslashes well", "d": "6/2015"}, {"body": "nice see alone quest identified first issues reasons follow would normalize slashes depending fixed may concern lines", "d": "6/2015"}, {"body": "thanks effort sorry part trouble working angular dart transformer stack trace look pub build step", "d": "6/2015"}, {"body": "details phases refer defined angular dart transformer doc currently run full transformer anything declares order generate code prime layer remove app phases amp dependency declares also need process generate phase binding phase process phase dependencies need run phase removes import replaces call generated code fixing issue would mean splitting transformer two run dependencies encompassing phases requiring run app encompassing phases requires involve migration pain need changed refer new transformer earlier done better", "d": "6/2015"}, {"body": "somebody wants release package entry points supplies classes would need use thing right understand correctly proposed solution would simply add option existing transformer option supplied option must supplied alternatively could force option allow empty", "d": "6/2015"}, {"body": "seem like easier solution", "d": "6/2015"}, {"body": "unclear whether fix pr seems fixing issue merged already", "d": "6/2015"}, {"body": "duplicate since tracking elsewhere", "d": "6/2015"}, {"body": "nt right file closing since tracking else", "d": "6/2015"}, {"body": "hi apologize commenting closed issue got problem jomeier find wayaround solution right wait new version dts file thanks", "d": "6/2015"}, {"body": "working generating complete dts file right hope something end week wed jun bcalou notifications githubcom wrote hi apologize commenting closed issue got problem jomeier find wayaround solution right wait new version dts file thanks reply email directly view github", "d": "6/2015"}, {"body": "mhevery since tracking else would nice reference closing like", "d": "6/2015"}, {"body": "query works di key opaque dos understand inheritance nt think easy way support explain use case", "d": "6/2015"}, {"body": "filed behest rkirov also thought work wanted inject using nt something actually need could see would useful", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "also", "d": "6/2015"}, {"body": "note inline html template styles", "d": "6/2015"}, {"body": "use transformers templateurl already inlined pull request styles", "d": "6/2015"}, {"body": "closed", "d": "6/2015"}, {"body": "would also great making directives work since", "d": "6/2015"}, {"body": "converting docs use transformer thanks bug use fwiw", "d": "6/2015"}, {"body": "igorminar chatted caitp sounds like last working slipping sure still current sent backlog", "d": "6/2015"}, {"body": "work progress ran blockers implementation addressing updated effort appropriately", "d": "6/2015"}, {"body": "pawel points plan", "d": "6/2015"}, {"body": "high level actionable goal plans something like let keep issue tracker", "d": "6/2015"}, {"body": "update generated still issues resolve merging generator", "d": "6/2015"}, {"body": "alexeagle type definition file also compatible alpha comment says alpha", "d": "6/2015"}, {"body": "yes generated comment outofdate gist updated", "d": "6/2015"}, {"body": "fixed include dist folder included release archive closing rkirov anything remaining release documentation make sure run get generated file included npm push", "d": "6/2015"}, {"body": "following see definitelytyped distribution", "d": "6/2015"}, {"body": "thanks guys awesome", "d": "6/2015"}, {"body": "rkirov release nt include dts missing something", "d": "6/2015"}, {"body": "needs copy typings dir distribute think using infrastructure correct relying npm since file matches shape bundle delivered npm rather lives codeangularjsorg", "d": "6/2015"}, {"body": "reassigning current open milestone", "d": "6/2015"}, {"body": "need post thorough design summary rkirov discussed yesterday follow quickstart examples prebundled path fetch bits get typings definitelytyped see versions fine us post typings file corresponding release think intent op install via npm coding typescript nt good answer yet problem consuming project angular could code directly ts files npm distro install via npm coding typings useful summary agree bundled nt need included npm distro least worked use cases", "d": "6/2015"}, {"body": "nt think support makes types docs weird closing", "d": "6/2015"}, {"body": "planned short hand putting everything", "d": "6/2015"}, {"body": "woo hoo", "d": "6/2015"}, {"body": "plan overall support unfortunately time get around docs infra focus developer preview core features api meantime file issues submit docs prs githubcomangularangulario", "d": "6/2015"}, {"body": "nt separate angular forum part yet prepared support large volume user questions enabled tags group possible tag post also enclose search query quotes force search angular angular alone", "d": "6/2015"}, {"body": "maybe faq would good idea answering basic user questions", "d": "6/2015"}, {"body": "absolete", "d": "6/2015"}, {"body": "might obsolete", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "still important longer considered blocking gt", "d": "6/2015"}, {"body": "obsolete already supported", "d": "6/2015"}, {"body": "yet supported running statically transformer", "d": "6/2015"}, {"body": "already happened", "d": "6/2015"}, {"body": "think elementbinders still prefixed correctly mon jun pm mi\u0161ko hevery notifications githubcom wrote already happened reply email directly view github", "d": "6/2015"}, {"body": "already documented", "d": "6/2015"}, {"body": "alexeagle verification added could close issue", "d": "6/2015"}, {"body": "makes sure nodemodules shrinkwrap file sync packagejson shrinkwrap sync", "d": "6/2015"}, {"body": "true think less issue since travis users go shrinkwrap file change packagejson alone would ignored whatever relying would break also opened issue issues shrinkwrap instructions unreliable commit adding verification else could close", "d": "6/2015"}, {"body": "nt think going relative paths closing", "d": "6/2015"}, {"body": "summarize current state bug vicb gave explanation null get application url adding information docs enough resolve issue however vicb agree interface many things could refactored work could tracked different issue priority gt", "d": "6/2015"}, {"body": "working morning seems like causes flakiness", "d": "6/2015"}, {"body": "narrow issue whichever test runs first timeout runs first fail", "d": "6/2015"}, {"body": "edit nevermind ignore everything externalbenchmarks version current problem naive infinite scroll nt loading properly see without running test running going retrospect obvious since nt js stuff", "d": "6/2015"}, {"body": "manually reproduce selecting window test running scrolling think something actually causing webpage never output finished span", "d": "6/2015"}, {"body": "juliemr see think issue even finished span scroll even happen unless arbitrary delay added suspect test starts app actually bootstrapped", "d": "6/2015"}, {"body": "milestone update still open due trouble figuring actually wrong blocker causing occasional flakes travis bumping avoid delaying anything", "d": "6/2015"}, {"body": "closing issues never get done since always update new version", "d": "6/2015"}, {"body": "already planned", "d": "6/2015"}, {"body": "solution also inline styles using native shadow dom view instantiation stays synchronous", "d": "6/2015"}, {"body": "solved automatically implemented", "d": "6/2015"}, {"body": "tbosch confirm closed", "d": "6/2015"}, {"body": "fixed gets merged reassigning pr", "d": "6/2015"}, {"body": "mhevery naomiblack gt already implementing dom readwrite queue use cases far trivial describe detail let implement angular let gt drive especially going direction custom render services users use returns event stream instead size event", "d": "6/2015"}, {"body": "discussed offline dropping prio wo nt milestone", "d": "6/2015"}, {"body": "internal issue", "d": "6/2015"}, {"body": "would propose close decided let gt drive version readwrite queue stabilized copy angular fri jun naomi black notifications githubcom wrote internal issue reply email directly view github", "d": "6/2015"}, {"body": "naomiblack get gt hotlist get priority increased blocking routing evaluation", "d": "6/2015"}, {"body": "lot etc good intention nt think work", "d": "6/2015"}, {"body": "bad guess means whatever parser come special case vars long framework introduce guess ok", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "samverschueren yeah tried way u said working fine tried without making fooservice separate file like import component view ngfor bootstrap component selector myapp appinjector fooservice view template directives ngfor class appcomponent name string list string constructor fooservice fooservice thisname ben thislist fooservicelist class fooservice list string constructor thislist foo bar baz bootstrap appcomponent get error reason", "d": "6/2015"}, {"body": "indeed work reason way transpiler transpiles source source code output piece code see variable declared thus unknown injected constructor change output following work known injected tried declare couple weeks ago gave error try transpiles correctly try like typescript import component view ngfor bootstrap class fooservice list string constructor thislist foo bar baz component selector myapp appinjector fooservice view template directives ngfor class appcomponent name string list string constructor fooservice fooservice thisname ben thislist fooservicelist bootstrap appcomponent", "d": "6/2015"}, {"body": "awesome thanks clarifying", "d": "6/2015"}, {"body": "introduced reference classes yet declared time referenced grep source code tests know see prefix", "d": "6/2015"}, {"body": "vicb thanks", "d": "6/2015"}, {"body": "guess close issue everything resolved", "d": "6/2015"}, {"body": "thanks contributed clearing", "d": "6/2015"}, {"body": "samverschueren thanks works", "d": "6/2015"}, {"body": "guys guess update working example injections simply irritates", "d": "6/2015"}, {"body": "added pr documentation website update examples property correct anymore see couple posts one", "d": "6/2015"}, {"body": "think read issues renamed well", "d": "6/2015"}, {"body": "khyamay post link discussion know find helpfull people read discussion later", "d": "6/2015"}, {"body": "see one", "d": "6/2015"}, {"body": "thanks posting become future", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "use appinjector property put service file component still getting exception error instantiation token componentref original error resolve parameters myfriendscomponent make sure valid type annotations error instantiationerrorbaseexception", "d": "6/2015"}, {"body": "take another look code example use instead added pr update docs changes accepted far", "d": "6/2015"}, {"body": "case problem missed emitdecoratormetadata compiler option ts compile options webstorm make works target module commonjs emitdecoratormetadata", "d": "6/2015"}, {"body": "things threw typeerror annotations", "d": "6/2015"}, {"body": "using latest version using correct typescript transpiler", "d": "6/2015"}, {"body": "typescript beta version run following command tsc appts module commonjs target emitdecoration threm typeerror", "d": "6/2015"}, {"body": "run tsccmd watch commonjs emitdecoratormetadata appts worked", "d": "6/2015"}, {"body": "yes planning angulario later year", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "actionable", "d": "6/2015"}, {"body": "mhevery vsavkin would like come back topic registering custom pipes would best could create custom pipe purpose handling attributes current understanding register global pipes right anything implemented respect", "d": "6/2015"}, {"body": "mhevery vsavkin news one experienced thing also get exception saying", "d": "6/2015"}, {"body": "tl dr swapped effort labels something internals angular would guess take order days track exactly happening may go faster someone knowledge willing dig details means angular requesting different things run transform time runtime transformation dry run note getters setters methods requests generate code case request setter transform time request one runtime sure would think could set given template would think runtime transformation", "d": "6/2015"}, {"body": "almost certainly fixed", "d": "6/2015"}, {"body": "going close fixed let know shows", "d": "6/2015"}, {"body": "gt concur ok push week", "d": "6/2015"}, {"body": "note probably fixed via", "d": "6/2015"}, {"body": "juliemr prioritize coming week get jeremy unit tests angular material unblocked", "d": "6/2015"}, {"body": "yup", "d": "6/2015"}, {"body": "work done using test component builder recommended solution", "d": "6/2015"}, {"body": "fixed follow reasonable selector specificity rules potential collisions example would like generic component fields selector specialized components given host element selectors would evaluate true second desired selectors mutually exclusive forces least generic component know others causing deployment new component require code modifications outside allowing order help avoid collisions comes cost extensibility components remain open modification", "d": "6/2015"}, {"body": "switched tactics component selectors using dynamiccomponentloader try overcome limitations selectors however running set roadblocks", "d": "6/2015"}, {"body": "idea exactly jvandemo passing object hash nt allow decorator directives access attributes", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "valid dart renamed longer issue", "d": "6/2015"}, {"body": "mhevery get exception use", "d": "6/2015"}, {"body": "done", "d": "6/2015"}, {"body": "reason", "d": "6/2015"}, {"body": "solved", "d": "6/2015"}, {"body": "reproduce master", "d": "6/2015"}, {"body": "actually nt work tag template", "d": "6/2015"}, {"body": "solved", "d": "6/2015"}, {"body": "zones give onerror hook expect angular exception handler use feature", "d": "6/2015"}, {"body": "status issue fixed push", "d": "6/2015"}, {"body": "nt taken look fredsa seeing recent beta still much changed since reproduction", "d": "6/2015"}, {"body": "demoting one backlog fredsa let us know still issue", "d": "6/2015"}, {"body": "igorminar need know repro case", "d": "6/2015"}, {"body": "sorry nt understand issue description tokens expand relate vs issue discussed", "d": "6/2015"}, {"body": "kevmoo ping", "d": "6/2015"}, {"body": "mprobst digging provide details shortly", "d": "6/2015"}, {"body": "mutable hash ideally", "d": "6/2015"}, {"body": "kevmoo support const hashes", "d": "6/2015"}, {"body": "see already fixing", "d": "6/2015"}, {"body": "mprobst blocked though help", "d": "6/2015"}, {"body": "issue need work closed would reasonable expect closed", "d": "6/2015"}, {"body": "think fixed kevmoo", "d": "6/2015"}, {"body": "got cl landed takes care toplevel members lib think lot places things final toplevel members since shared clearly important may need occasional review api find bad examples", "d": "6/2015"}, {"body": "solved syntax", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "cgarciae problem updating js model element directly input fixed next release since correctly wires databinding nt mind javascript small example showing updated parts form submission", "d": "6/2015"}, {"body": "mhevery shell rename existing class directive done etc would solve particular issue ways solving course", "d": "6/2015"}, {"body": "pkozlowskiopensource nt think rename goal consistent", "d": "6/2015"}, {"body": "think dup", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "unable reproduce get descriptive error message open pr add url though", "d": "6/2015"}, {"body": "closing discussion came end separate effort streamline verbosity", "d": "6/2015"}, {"body": "mhevery maybe mention docs somewhere created value cost bit time spot browser", "d": "6/2015"}, {"body": "used issues running solved since release clangformat windows binary aligned ones fresh solve issue side note install visual c redistributable packages visual studio machine bits version otherwise missing", "d": "6/2015"}, {"body": "oh god unknowingly maneuvered us dll hell try see produce statically linked build next time", "d": "6/2015"}, {"body": "nt tried long time probably works marc said closing file new issue run something future", "d": "6/2015"}, {"body": "leaving community", "d": "6/2015"}, {"body": "fair enough", "d": "6/2015"}, {"body": "think linters ides provide feedback framework want get information statically editing code page refresh possible though need change compiler pipeline collect errors throw composite error message end proto view construction mhevery tbosch think", "d": "6/2015"}, {"body": "talked misko provide linter provide feedback high priority right", "d": "6/2015"}, {"body": "vsavkin context issue support dart analyzer plugin channel warning directly ide integrated dart analyzer practically every dartaware ide order plugin able reuse compiler code compiler needs provide good interface plugin work otherwise plugin parsing angular code practice showed angulardart quickly leads two implementations deviate point analysis longer useful therefore providing linter solve issue need make compiler suitable static tools btw includes transformer", "d": "6/2015"}, {"body": "maybe something bundling guru", "d": "6/2015"}, {"body": "systemjsbuilder uses uglify hood called already partially minified zonejs concatenated unminified afterwards makes look unminified action item concatenate minified deps zone reflectmetadata also need minified output executing bundle result still pretty good codeangularjsorg", "d": "6/2015"}, {"body": "design doc soon", "d": "6/2015"}, {"body": "update", "d": "6/2015"}, {"body": "getting close component part mostly finished also dealing modules sync monday", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "rkirov urgent alex list", "d": "6/2015"}, {"body": "nope urgent good keep track outputting clean usable urgent fixing sourcemaps", "d": "6/2015"}, {"body": "anyone idea", "d": "6/2015"}, {"body": "prs implemented ngmodel misko pointed one look pr adds example using ngmodel", "d": "6/2015"}, {"body": "hi victor thanks great really like see noticed new xyz binding provide info point webressource best wishes manfred", "d": "6/2015"}, {"body": "ok found aswer blog wishes manfred", "d": "6/2015"}, {"body": "yes one things covering angulario dev guides would appreciate input chapters complete see", "d": "6/2015"}, {"body": "please provide link angulario issue tuesday june naomi black notifications githubcom wrote yes one things covering angulario dev guides would appreciate input chapters complete see reply email directly view github", "d": "6/2015"}, {"body": "angulardart problems deferred code loading code size one motivations moving bindings bootstrap current solution requiring component specify using largely solves ewinslow said making easier developer solution take account performance", "d": "6/2015"}, {"body": "current thinking view baseview annotations view extends baseview automatically adds angular core directives way time nt specify core directives user want core directives way like idea many apps see several directives needed list directives would suck would help baked ng ones", "d": "6/2015"}, {"body": "mhevery need input best way forward implementation please weigh", "d": "6/2015"}, {"body": "naomiblack guess missed link", "d": "6/2015"}, {"body": "nope wanted current days ago discussing person", "d": "6/2015"}, {"body": "decided approach subclassed allows view add app developer subclass decided global state since would make component reuse problematic", "d": "6/2015"}, {"body": "would hope tooling ide would get good enough auto import add directives typing template type js import component template component view inline class simple suggest import ngif intellij java type class nt imported yet say yes please import would import top also add directive array creating array end js import component template component view inline directives class simple yay tooling", "d": "6/2015"}, {"body": "timkindberg proposal discussed nt prevents tools describing tools ca nt answer plenty tools getting good support take time even tool generate code us still code read download browser", "d": "6/2015"}, {"body": "extending deadline one give pkozlowskiopensource time dig details", "d": "6/2015"}, {"body": "taking account experience java languages support wildcard imports similar proposed viewbaseview approach think quickly run issues experienced systems see especially future expansion core directives become problematic parts template previously inert trigger directives means upgrading new framework version contains directives suddenly break existing templates could worked around creating view annotations eg really ugly unmaintainable java languages execution flow constructs keywords language nt require imports case angular causes issues ease use one option create small set directives maybe ngif ngswitch ngswitchwhen ngfor auto import rest angular directives would still require imports would compromise would allow us evolve framework personally prefer use explicit imports everything makes difficult import needs specified twice via es second time via array nt see discussed ideally like import template belongs nt right module loader issues would create one solution could generate code template example would get compiled import form ngmodel view directives form ngmodel kind transformation difficult requires tooling angular relies anyway nt want use tooling always stick manual import definition keep working", "d": "6/2015"}, {"body": "putting imports template would ideal", "d": "6/2015"}, {"body": "nt realize still table", "d": "6/2015"}, {"body": "igorminar thnx writeup raising number important points fact many nt know start thoughts assorted order still believe semantically makes sense list directives templates rather annotation ewinslow impression ruled option sure exact reasons guess main one difficulty coming syntax would easy write parse load breaking things adding directives base real concern impression want list core things class etc used templates somehow would correspond set keywords still potential accidental breakage tooling take syntax easy pleasant use box tools make whole experience awesome view tools ca nt prerequisite mandatory frameworks clear coming dev experience awesome tools required things easy write editor baseline compared baseline seems verbose painful atm especially things using almost every template taken perspective nt shock place list commonly used keywords still pondering global registry bit know problems well need balance system correctness dev experience perfect system use painful use practice happy dig discuss details important", "d": "6/2015"}, {"body": "would something like fly ensuring maintainability performance document usecases amp benefits typescript indexts import bootstrap ngswitchdefault component view import reflector import reflectioncapabilities import todocommonlyuseddirectives todorarelyused directivestododirectives import store todo todofactory servicestodostore typescript directivestododirectivests disclaimer syntax may exact", "d": "6/2015"}, {"body": "already works least js", "d": "6/2015"}, {"body": "introduce simple concept containers needs better name may mhevery said settling ngcoredirectives go baseview understanding creating injectables container suppose custom injectables core directives named sub class injectors components would like use combination injectables may would like bring combination different component want combination etc developer create custom injectable container create sets containers combination instance app injectable container combination call paymentdirectives ever combination required would something like view directivecontainer paymentdirectives directive still want keep single injection dev like directivecontainer still pass array class mycrazycomponent", "d": "6/2015"}, {"body": "sure introducing yet another decorator property good idea ca nt devs arbitrarily package multiple directives array add directives array like", "d": "6/2015"}, {"body": "exactly mean say arbitrarily package think talking thing except proposed new property new property wont using properties time wish inject single directive always use directive property wish inject different combination directives actually make sense particular component first create injectable container use property proposed another way want use directive property angular engine smart enough recognize whether injected object container several directives referring directive case able keep name particular directive particular injectable container makes sense", "d": "6/2015"}, {"body": "mhevery community consensus favor current proposal need new one think", "d": "6/2015"}, {"body": "maybe missed fire action eg focus element several levels deep eg nested within component within component would recommended pattern get", "d": "6/2015"}, {"body": "discussions decided extend query mechanism first see sufficient cover use cases need implement actions closing issue", "d": "6/2015"}, {"body": "highly wish bindings work across dynamically loaded components otherwise dynamic component forced know binding needs client components going try work around application forcing client components loaded host dynamic component implement sort interface help facilitate delegation", "d": "6/2015"}, {"body": "closing duplicate", "d": "6/2015"}, {"body": "kegluneq assigning kevin says needs scripting please reassign overloaded", "d": "6/2015"}, {"body": "going take quick stab see get done hour rather day nt work behind items prioritywise reassign ca nt get leave context something might add alongside dartanalyzerjs maybe line hasa contents source file", "d": "6/2015"}, {"body": "unfortunately priority sorry", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "blocked design custom reprojection", "d": "6/2015"}, {"body": "please link issue worked saturday may naomi black notifications githubcom wrote closed reply email directly view github", "d": "6/2015"}, {"body": "dup", "d": "6/2015"}, {"body": "naomi nt see anything validates tag names", "d": "6/2015"}, {"body": "matanlurey says need schema say schema complain think closed dup could explain use case covered", "d": "6/2015"}, {"body": "closing dup", "d": "6/2015"}, {"body": "closing issue agree something would useful priority release something could also developed independently communitybuilt module", "d": "6/2015"}, {"body": "obsolete finished part testbed api", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "note something would done", "d": "6/2015"}, {"body": "alexeagle check whether still issue posttsification", "d": "6/2015"}, {"body": "closing dupe fixed next release", "d": "6/2015"}, {"body": "closing covers use case please add discussion find add", "d": "6/2015"}, {"body": "get reference directive element follows used template follows solve problem", "d": "6/2015"}, {"body": "vsavkin sure ca nt use mixed cases templates one would write right", "d": "6/2015"}, {"body": "nt know thought youtuberef gets lowercased", "d": "6/2015"}, {"body": "feature implemented yet right would add could nt use name directive hash", "d": "6/2015"}, {"body": "hrajchert html casesensitive browsers autocorrect attributes making lowercased short ca nt attributes tag names mixed case browsers see lowercased", "d": "6/2015"}, {"body": "yes im talking camel casing example unfortunate wanted focus rather maybe clearer idea would myelementref points googleyoutube api mytooltipref tooltip api", "d": "6/2015"}, {"body": "feature implemented yet right implemented could nt use name directive hash way works follows directive author provides exportas name developer using directive use name right hand side variable binding see", "d": "6/2015"}, {"body": "ok vsavkin see understood correctly assuming component called directive called minimum code would want different handler api would ref tooltip directive must annotation correct", "d": "6/2015"}, {"body": "yup correct", "d": "6/2015"}, {"body": "cool feel free close issue", "d": "6/2015"}, {"body": "appears implemented configurable", "d": "6/2015"}, {"body": "assigning tbosch owner goderbauer working actively", "d": "6/2015"}, {"body": "last two pull requests following metrics added benchpress mean frame time ms target worst frame time ms best frame time ms percentage frames hit collect metrics need execute either benchmark application benchmark driver via webdriver metrics mentioned collected two calls recommended wrap timetimeend calls closely possible around action want evaluate get accurate measurements addition also need pass one extra binding benchpress tests want collect metrics tbosch yjbanov believe metrics issue closed feel like add metrics related issue let know", "d": "6/2015"}, {"body": "closing reopen know things missing specifically benchmarks written", "d": "6/2015"}, {"body": "internal", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "take one", "d": "6/2015"}, {"body": "ugly urgent returning backlog long nt checked packages get published big deal", "d": "6/2015"}, {"body": "think done reopen", "d": "6/2015"}, {"body": "done", "d": "6/2015"}, {"body": "obsolete done", "d": "6/2015"}, {"body": "mhevery think pr closes issue directive export view get access everything else via directive instance", "d": "6/2015"}, {"body": "actionable", "d": "6/2015"}, {"body": "mhevery yes although matter much want manage require bit diligence throughout ts files may want wait linter help", "d": "6/2015"}, {"body": "request dart team provide instrumentation pubtransformers agreed something could leverage", "d": "6/2015"}, {"body": "actionable", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "obsolete reopen still relavant", "d": "6/2015"}, {"body": "done", "d": "6/2015"}, {"body": "juliemr spin smaller issues assign upcoming milestones big chunk triage assign", "d": "6/2015"}, {"body": "would great isomorphic since create macro decoratetransform provide correct legacy attributes etc keeping transparent user benefit would nt need include isomorphic macros client since needed server goes seo macros would include correct itemprop schema also transparent user", "d": "6/2015"}, {"body": "private api impact external devs plans love issues closing", "d": "6/2015"}, {"body": "update", "d": "6/2015"}, {"body": "behavior ported long time ago", "d": "6/2015"}, {"body": "assigned since working", "d": "6/2015"}, {"body": "closing since dup vicb says done", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "blocking internal issue", "d": "6/2015"}, {"body": "feature requests api standard futurepromise allow us use dart function return status code indicating much work done whenstable one use feature assert work done whenstable calls prevent test developers adding unnecessary whenstable tests", "d": "6/2015"}, {"body": "pushing nt make", "d": "6/2015"}, {"body": "brief discussion yjbanov coming across issue working router seems yjbanov well internal bug report referring different related issue one referred original post original issue expose something similar testabilityapi whenstable callback angular js needed proper protractor integration primarily interested waiting system finish async tasks spawned within angular change detection zone things like animations tasks nt require change detection omitted yjbanov internal bug way similar unit tests want include task relevant change detection like animations", "d": "6/2015"}, {"body": "issue", "d": "6/2015"}, {"body": "done via thanks hankduan", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "really sure throw ts class tsclass myprop string initialized later point time tsclassmyprop would weird throw although property declared", "d": "6/2015"}, {"body": "think check case via myprop tsclass thu jun victor berchet notifications githubcom wrote really sure throw class tsclass myprop string tsclassmyprop would weird throw although property declared reply email directly view github", "d": "6/2015"}, {"body": "nt seem like ts class tsclass prop number var tsclass new tsclass transpiles var tsclass function function tsclass return tsclass var tsclass new tsclass", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "relevant", "d": "6/2015"}, {"body": "obsolete", "d": "6/2015"}, {"body": "nt know means source maps", "d": "6/2015"}, {"body": "actionable", "d": "6/2015"}, {"body": "late party simply treating property binding event would ngon would reserved prefix bonus might actually useful able execute arbitrary expression bind time", "d": "6/2015"}, {"title": "repeat component identifier", "body": "vuecomponent vueitem props content replace false template vuecomponent vuelist props items replace false nt work template try use identifier pass value child component props get message", "num": "992", "d": "6/2015"}, {"title": "child component data parent component", "body": "way get data input component back form component html markup bad practice separate elements", "num": "991", "d": "6/2015"}, {"title": "arrayprototype remove longer returns removed element", "body": "using splice works fine since documentation imply functions similarly removing element think makes sense return removed element previous versions ended slight pain trying upgrade feel free close", "num": "990", "d": "6/2015"}, {"title": "implementing ckeditor", "body": "trying implement ckeditor tabbed form generated vue every tab different translation store database nl en fr language moment remove attributes div get editor seems vrepeat something strange get working see discussion", "num": "989", "d": "6/2015"}, {"title": "watcher behavior", "body": "created watcher binding also using computed property dependent value watched positively surprised computed property executed watcher standard behavior think better documented watcher section", "num": "988", "d": "6/2015"}, {"title": "vif working partials", "body": "following code compiling even index deal template tag wrapping partial order make works", "num": "987", "d": "6/2015"}, {"title": "subcomponents", "body": "way create nested components vuejs case newform component rendered nested components files", "num": "986", "d": "6/2015"}, {"title": "memory leak uncleared ref static components", "body": "brief static component eg caused wo nt invoke clean ref context leads situation component destroyed destroyed deferred cleanup context still manipulate ref unexpected example detail check demo", "num": "985", "d": "6/2015"}, {"title": "twoway directivevmodel", "body": "got questionissue hidden form input gets updated via jquery function part autocomplete tried putting vmodel form input learned wo nt update tried adding custom directive added vmemberid newmemberid form input newmemberid getting updated thanks", "num": "984", "d": "6/2015"}, {"title": "using computed properties w vmodel", "body": "vue longer use computed properties directive super helpful input masking better way workarounds", "num": "983", "d": "6/2015"}, {"title": "rework boolean attributes", "body": "reason boolean attributes go completely spec since blindly following spec break compat suggest following middleground boolean attribute nt exist set false per spec boolean attribute exists either true false use current handling since spec prohibits values maybe deprecate syntax boolean attribute exists either empty string name attribute set true per spec values trigger warning map undefined technically spec mandates case insensitive comparison unsure would translate vue believe properties case sensitive javascript end nt know handled edit seems attribute mapping works lowercase properties case insensitive comparison acceptable", "num": "981", "d": "6/2015"}, {"title": "surprising behavior using filter object inside vrepeat", "body": "nt know intentional better documented object passed vrepeat gets transformed array containing objects key value passing filter", "num": "980", "d": "6/2015"}, {"title": "someway easy know objects exists array", "body": "currently project validation would cool something like", "num": "979", "d": "6/2015"}, {"title": "alternate props syntax", "body": "currently properties defined array names array objects first syntax okay enumerating properties second one bit awkward inconsistent way entries specified propose following syntax extensions inspired mongoose believe could implemented without breaking compatibility", "num": "978", "d": "6/2015"}, {"title": "lifecycle hooks like componentdidupdate let refresh iscroll", "body": "working sth like change filter view update insert remove nodes refresh iscroll make iscroll work react things use hook refresh iscroll vue tried sure work normally leave enough rest try refresh iscroll something like works", "num": "977", "d": "6/2015"}, {"title": "please provide forum", "body": "hi new noob vuejs javascript please provide forum asking simple questions like add data using json remote url thanks lot sorry bad english", "num": "976", "d": "6/2015"}, {"title": "problem using webcomponentsjs firefox", "body": "using latest version vuejs webcomponentsjs try load simple component firefox throws error com console examplehtml html vuecomponent mycomponent template lt span gt hello nome component lt span gt data function return nome awesome var vue new vue el body bowerjson dependencies json dependencies vue webcomponentsjs console log", "num": "975", "d": "6/2015"}, {"title": "watcherspecific options namely", "body": "current version currently defining watcher via vue constructor register watcher deep watcher however passing property constructor options sets watchers deep nice able set specific watcher possibly like could accomplished modifying function follows special case necessary since method nt support options argument thus making tad less flexible future watchers may get added however would work", "num": "974", "d": "6/2015"}, {"title": "default value component props", "body": "would nice apologies easy ways implement ie setting manually constructor", "num": "973", "d": "6/2015"}, {"title": "twoway component binding broken", "body": "please check demos jsfiddle version version click parent checkbox component switcher child changes passed parent view examples code vue version chnaged", "num": "972", "d": "6/2015"}, {"title": "duplicating data object", "body": "hello order duplicate object children use jquery function please better way vue using vue duplicatethis function field var currentfield thisfields fieldindex thank", "num": "971", "d": "6/2015"}, {"title": "handle array checkboxes input", "body": "need result multiple select tag using array input checkboxes like posttypes field box array contains values related checked checkboxes", "num": "970", "d": "6/2015"}, {"title": "render extra html component", "body": "bootstrap dialog use backbone bootstrapdialog write coffeescript think understand add extra html show like vue idea", "num": "969", "d": "6/2015"}, {"title": "reserved word char breaks minification", "body": "think use char identifier getpathchartype function causing yuimin minifiers break reserved possible future keyword ecmascript specification swapping character fixes issue", "num": "968", "d": "6/2015"}, {"title": "vue\u4e2d\u80fd\u5426\u5728 compiled resolve \u6548\u679c", "body": "\u539f\u6765\u7528 ng resolve defer ng hook compiled", "num": "967", "d": "6/2015"}, {"title": "prevent propagation lifecycle hooks super vueextend classes", "body": "base class create subclass instantiate compile subclass normal behaviour shows classes methods called anyway force class method called class compiled method overridden thanks", "num": "966", "d": "6/2015"}, {"title": "waitfor rendering child components even emit correct event", "body": "created fiddle illustrating experience ideally templates rendered block however nothing happens advice", "num": "965", "d": "6/2015"}, {"title": "von change triggered filters", "body": "hey working form fields want fire method input changed working expected fields without filter input changed filter event isnt working searching events might work also tried avail example form inputs first doesnt work filter changes input exit field work exit field debounce kicks expected second field works fine sure expected behaviour recommended workaround thanks", "num": "964", "d": "6/2015"}, {"title": "bring vcomponent back configurable", "body": "noticed line release notes vcomponent removed components use custom tag syntax dynamic components new syntax introduced today switched cms building vuejs wrap vuejs renaming require setting custom prefix specifically made change move away using syntax site building also uses vuejs vue would one catch custom elements rather renamed one race condition reckon goes way entirely sure could two vuejs play without race condition thoughts smilecat", "num": "963", "d": "6/2015"}, {"title": "components registering", "body": "new vuejs library creating little example ca nt get components work correctly even tried copying example net progress example trying replicate page code lt p gt helloworld lt p gt app script js vuecomponent thatscool template myowntemplate replace true data function return helloworld thats cool var demo new vue el demo data name richard griffin ubicacion tijuana bc foto using demo object another div tha loads correctly component part working using lates dev version vuejs help appreciated", "num": "962", "d": "6/2015"}, {"title": "problem variables like", "body": "bug example props x data variable x twoway binding also x working number try jsfiddle html javascript lt input type text name name vmodel value gt props data json html data json js javascript vuecomponent mycomponent template mycomponenttemplate props name value new vue el demo data x", "num": "961", "d": "6/2015"}, {"title": "gruntcoveralls missing packagejson", "body": "used gruntfile nt packagejson", "num": "960", "d": "6/2015"}, {"title": "hide component tag", "body": "recently updated project encountered problem html somecomponent content rendered prev like example list components html content output html content hide somecomponent tag think rendering types usage case list need hide tag css get messy otherwise", "num": "959", "d": "6/2015"}, {"title": "custom directives attributes broken well attrs dashes accessibility", "body": "see fiddle provided attributes class role etc work properly well attributes dashes like ariavaluemin ariavaluemax since invalid left assignment using string eg thisel ariavaluemin also work obviously problem accessibility", "num": "958", "d": "6/2015"}, {"title": "orderby using natural sort", "body": "way achieve natural sorting ootb orderby filter default sort works like item item item item instead expected item item item item", "num": "957", "d": "6/2015"}, {"title": "using vue data html image source", "body": "hi html tag see biding data imagelink html image src tag works image displayed normal chrome shows found image link since checking html img src syntax way correct better way", "num": "956", "d": "6/2015"}, {"title": "logic expressions working vclass", "body": "using binding value boolean enable class two subexpressions work combine get errors vclasschecked pagemode tags lt lt works vclasschecked curshowtags value lt lt works vclasschecked pagemode tags amp amp curshowtags value lt lt nt work error message vue warn error evaluating expression pagemode tags amp amp curshowtags value typeerror read property tags null", "num": "955", "d": "6/2015"}, {"title": "odd issue currency filter", "body": "currency gt", "num": "954", "d": "6/2015"}, {"title": "applying currency filter returns", "body": "created filter add tofixed currency symbol", "num": "953", "d": "6/2015"}, {"title": "subcomponents", "body": "ran following problem possible access data passed inside components except component nt possible add subcomponents inside components missing something code course example hope get point", "num": "952", "d": "6/2015"}, {"title": "force update data", "body": "method vue js component relativedate function date return moment date fromnow html relativedate notification datetime would like update every obviously reason way wit vuejs", "num": "951", "d": "6/2015"}, {"title": "maxupdatecount causing false positives", "body": "constant causing false positive reports way adjust", "num": "950", "d": "6/2015"}, {"title": "el text node using inlinetemplate", "body": "provide inlinetemplate get text node back produce template string get element code see happening", "num": "949", "d": "6/2015"}, {"title": "read property previoussibling null", "body": "upgrading get weird error update data shown vrepeat filter uncaught typeerror read property previoussibling nullfindprevvm first two updates clicks work fine third time throws error", "num": "948", "d": "6/2015"}, {"title": "nested vrepeat access parent index inside child", "body": "unable candy index", "num": "947", "d": "6/2015"}, {"title": "csp version error minified", "body": "building chrome app use minified version using uglifyjs get following error help using browserify babel templates inlined script", "num": "946", "d": "6/2015"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u4f7f\u7528\u7591\u95ee", "body": "", "num": "945", "d": "6/2015"}, {"title": "keepalive", "body": "using keepalive switch different component back scrolling overflow auto div component always appears scrolled back top expected behavior changed show code need", "num": "944", "d": "6/2015"}, {"title": "vif reevaluated nested components", "body": "given setup like following container avatar components reevaluated root data updated fiddle demonstrates problem console outputs despite template tag dom updates warning expected code working thank", "num": "943", "d": "6/2015"}, {"title": "mustache evaluation work directives unless isliteraltrue", "body": "fiddle demonstrates problem related indicated mustache evaluation work directives general apparently currently restricted directives marked isliteral note trying achieve dynamic twoway binding would like onetime mustache evaluation directives isliteral directives enjoy ie directive isdynamicliteral false update function case", "num": "942", "d": "6/2015"}, {"title": "restore vcomponent lists", "body": "hi prototyping app vue nestedsortable working vue nb demo works firefox amp opera chrome ie vue end vcomponent nt succeeded porting code nestedsortable library made use custom components always something working variation tried would possible make exception ulolli elements still vcomponent directive like exception table elements order break usage jquery plugins use list elements thanks", "num": "941", "d": "6/2015"}, {"title": "suggestion vtransition done callback vs transitionend", "body": "docs done callback described following finally enter leave optionally take second callback argument indicating want explicitly control transition end instead waiting css transitionend event vuejs expect eventually call callback finish transition would loved use done callback fallback method failed inexistent transitionend events chance could implement concurrent handling end transition marked either transitionend event done callback whatever comes first easiest way patch current behaviour something like", "num": "940", "d": "6/2015"}, {"title": "", "body": "component conponent", "num": "939", "d": "6/2015"}, {"title": "dynamic component vrepeat alias breaks computed properties", "body": "needed computed property vrepeat alias check data available came across following problem without alias computed property works perfectly add alias vrepeat variable ca nt access computed property alias anymore working example without alias jsfiddle javascript html html text timestamp working example alias jsfiddle html html msgtext msgtimestamp mentioned reason adding alias reference item vclass directive", "num": "938", "d": "6/2015"}, {"title": "multiple transclusions changed", "body": "hi trying port app vuejs unexpected behaviors components transclusion multiple content insertion points selectors vue multiple content insertion point selectors one without elements matched selectors removed selectorless content vue component matched selectors removed selectorless content star operator vue possible use star operator vue anymore operator vue possible use negation operator vue anymore last points operators behavior seems match first element", "num": "936", "d": "6/2015"}, {"title": "documentfragment undefined", "body": "trying make vue work necessary shims polyfills facing troubles line something case", "num": "935", "d": "6/2015"}, {"title": "keep vevents special way pass callbacks hooks", "body": "know callbacks passed props cases use simple way listen hook events like ready dynamic components like controlled course expose property accept hook callback call explicitly component couple component check callback", "num": "934", "d": "6/2015"}, {"title": "pass one time value props watch", "body": "find long pass variable matter one time prop component always create directive watcher fact pass one time binding want compiler resolve value without watching especially case pass callbacks", "num": "933", "d": "6/2015"}, {"title": "throws error transcluded content undefined", "body": "component uses template cnotents embed comipler throw error example demo see error console html issue raises commit", "num": "932", "d": "6/2015"}, {"title": "data delete method bug", "body": "key mlist datamdata mlist datamdata key middatamid mlist datamdata delete key consolelog jsonstringify mlist datamdata break key item nt remove output null", "num": "931", "d": "6/2015"}, {"title": "single class vclass", "body": "need add two classes based condition classes currently like also add class without adding another attribute without appending current value fact expected following work", "num": "930", "d": "6/2015"}, {"title": "error append component vrepeat svg", "body": "javascript var vue require vue var arr name foo isshowing true name goo isshowing true name bar isshowing true new vue data items arr template components test template mount body settimeout function arr isshowing false settimeout function error happen arr isshowing true code run error version code", "num": "929", "d": "6/2015"}, {"title": "filterby false property nt work", "body": "use true condition filterby nt work use false condition ps sorry poor english", "num": "928", "d": "6/2015"}, {"title": "vif multiple conditions", "body": "could nt find part documentation wanted ask way vif evaluated multiple condition something like", "num": "927", "d": "6/2015"}, {"title": "switch rc version", "body": "done vue app using stable documented version considering jumping latest rc version rather finishing app converting stable enough develop features stable enough would nt rewrite things others switching figure feature documentation differences issue two new docs progress already pulled attributes switched big changes thanks advance", "num": "925", "d": "6/2015"}, {"title": "mustache evaluation fails props attribute contains newline", "body": "see fiddle formatting purposes would nice able use newlines formatting attribute value", "num": "924", "d": "6/2015"}, {"title": "improve communication transcluded components", "body": "ref would nice expose formal apis component work child components transcluded content", "num": "923", "d": "6/2015"}, {"title": "template tag still svg", "body": "use vrepeat template tag svg compiled template tag still", "num": "922", "d": "6/2015"}, {"title": "suggestion support string paramattributes value", "body": "would nice strings much less noise typing", "num": "921", "d": "6/2015"}, {"title": "prop assertions", "body": "nice components able check props receives makes reusable components robust eg could backwardscompatible totally optin", "num": "920", "d": "6/2015"}, {"title": "type number \u65e0\u6cd5\u8f93\u5165\u5c0f\u6570", "body": "input type number vmodel amount \u65e0\u6cd5\u8f93\u5165\u5c0f\u6570", "num": "919", "d": "6/2015"}, {"title": "componentlevel delimiter option", "body": "pointed global delimiter option makes application custom delimiters incompatible components assumes default delimiter settings solution would either allow components define componentlevel delimiter setting overwrites global components intended generally reusable lock delimiters b remove global delimiter setting make strictly componentlevel option backwards compatible requires component authors aware requirement option b breaking requires option every component needs custom delimiters however noted cases component needs custom delimiter root instance html compatible serverside templating languages also uses mustaches", "num": "918", "d": "6/2015"}, {"title": "use safehtmlstring syntax", "body": "currently syntax escape html use triple mustache like safehtmlstring would really neat change variable like laravel easier see unescaped variables also emphasizes potential danger thoughts make pull request found normal delimiters far", "num": "917", "d": "6/2015"}, {"title": "data inheritance tag", "body": "hi trying create generic form component handles bunch stuff like validation formatting etc tried mix vue components use tag structure x root view gt x customform component tag gt n x customforminput component example markup problem ca nt access data customform component customforminput component probably transcluded contents compiled parent component scope child scope way without polluting data root view", "num": "916", "d": "6/2015"}, {"title": "possibly silly request", "body": "nt like mustache bindings think noisy hurt readability managed avoid vue app except one place component dynamically bound logical way remove need would suggest change made things orthogonalconsistent overall maybe argument like", "num": "915", "d": "6/2015"}, {"title": "multiple validators", "body": "", "num": "914", "d": "6/2015"}, {"title": "filter ca nt sync value", "body": "hi used filter change select value option still stay selected value input text right try trigger select change input nt work fix fix", "num": "913", "d": "6/2015"}, {"title": "directive parser nt properly parse regular expression directive expression contains", "body": "recreate console javascript vueparsersdirectiveparse pattern ab expression lt ab vueparsersdirectiveparse pattern ab expression lt seems like work least vuevalidator expects work seems like reasonable workaround javascript vueparsersdirectiveparse pattern new regexp ab expression lt new regexp ab nt work vuevalidator coded work directive literal expression instead value even though set directive definition sure opened", "num": "912", "d": "6/2015"}, {"title": "sort vmodel value nt update", "body": "name", "num": "911", "d": "6/2015"}, {"title": "able access data json array vrepeat", "body": "array json items trying use vrepeat output series table rows row empty cells output every item json vuejs getting property values even though confirmed definitely exist get values vrepeat something like getting errors warnings json output vue data object", "num": "910", "d": "6/2015"}, {"title": "vrepeat nt remove elements change", "body": "jsfiddle fiddle show problem approximates clicking populate show list values three sections left center right arrays problem items array stay display get removed listeners elements get stripped away looks something like found two changes help issue remove issue disappears line removed restore lines problem also goes away need couple small changes", "num": "909", "d": "6/2015"}, {"title": "vrepeat singleitem errors trackby", "body": "jsfiddle though probably good way write things constructing array fly single item throws", "num": "908", "d": "6/2015"}, {"title": "vrepeat requires data properties create using objectdefineproperty", "body": "demonstration see nt render", "num": "907", "d": "6/2015"}, {"title": "vrepate \u6307\u4ee4", "body": "\u6709\u8fd9\u4e48\u4e2a\u9700\u6c42 \u4e00\u4e2a \u5217\u8868items \u624d\u6362\u4e00\u884c \u8bf7\u8d50\u6559", "num": "906", "d": "6/2015"}, {"title": "cordova \u73af\u5883\u4e2d\u8fd0\u884c", "body": "\u7528 vuejs \u642d\u914d\u81ea\u5df1\u5199\u7684\u6846\u67b6\u505a\u7684\u4e00\u4e2a spa vue \u6ca1\u6cd5\u5728 cordova compontent mgview", "num": "904", "d": "6/2015"}, {"title": "objectobserve", "body": "hi think great piece code although ca nt use currently trying use within atom point using eval forbidden hand supported ask plan support maybe hidden behind flag replacing function runtime like rivets would willing help able looked code gettersetter generation seems pretty entangled everything thanks", "num": "903", "d": "6/2015"}, {"title": "vue devdocs", "body": "posted suggestion include vue devdocs site best way get site provide docs format understand opensource pr already form api docs machineread like json file", "num": "900", "d": "6/2015"}, {"title": "proposed changes prop work computed setters", "body": "hi trying build components use settable computed property bound parent vm components may also need set default value calling property setter compilation rather setting custom events duplicate role seemed cleaner make changes vue think", "num": "899", "d": "6/2015"}, {"title": "key set repeating object", "body": "got object called like repeating like results key root element working fine descendent element undefined would really nice access key inside repeated element well possible", "num": "898", "d": "6/2015"}, {"title": "question regarding components data scoping", "body": "got question regarding components data scoping hope right place ask got root vue instance two vue components instantiated via component array called responsible creating showing items component b responsible deleting items array would access list component component b delete item", "num": "897", "d": "6/2015"}, {"title": "\u5173\u4e8e\u6a21\u677f\u4e2d\u8c03\u7528\u8c03\u7528\u6570\u7ec4 length \u7684bug", "body": "\u6211\u7684\u4ee3\u7801\u91cc\u6709\u4e00\u4e2a info event infolength length", "num": "896", "d": "6/2015"}, {"title": "trigger animation dynamic vcomponent exchanged", "body": "several components live exchangeable pages within container way trigger vtransition behaviour switching component would usable implement page transitions", "num": "895", "d": "6/2015"}, {"title": "url routing", "body": "proper way route values url hash respond url changes", "num": "891", "d": "6/2015"}, {"title": "dynamic select attr", "body": "writing component content dynamic would great support expressions inside attribute tag example template html tabtext usage way make components dynamic like also possible access components content case inside components", "num": "890", "d": "6/2015"}, {"title": "staggered vrepeat transitions", "body": "like staggered animations like angular ngrepeat tried implement using transitiondelay getting index transitiondelay enter animation really ugly hack also nt look right first animation finished yet eg click add items click add three items first ten finished animating also nt know calculate index leave animation think could get repeat directive check oldvms another ugly hack another problem click add items click empty transitions finish elements remain stuck forever dom looks like transitionend event never called transition cancelled start", "num": "889", "d": "6/2015"}, {"title": "passing vmodels arguments filters working", "body": "judging page appears possible pass vmodels arguments filter functions however working working example expected see values inputs combined however get value first input name string lname returned always appears filter parameter lname passed string vmodel actual value", "num": "888", "d": "6/2015"}, {"title": "filter write detected correctly checkfilters warning vmodel filter readonly", "body": "code buggy filter read write hasread set get warning vmodel filter readonly", "num": "887", "d": "6/2015"}, {"title": "vmodel properly updated used vrepeat", "body": "hi currently running issue vue latest stable version basically variable list input fields dynamic vmodel like facing issue values input fields get updated immediately changed happen using method pushes string mails array jsfiddle entering values input fields nothing happens soon press add another input field appears current values shown something wrong love hear", "num": "886", "d": "6/2015"}, {"title": "\u63d2\u4ef6\u4e8b\u4ef6", "body": "", "num": "885", "d": "6/2015"}, {"body": "seems wrong try need props vrepeat bind data child iterance", "d": "6/2015"}, {"body": "miljanaleksic yes work work sake consistancy work repeat identifier commonstandard way loop thing", "d": "6/2015"}, {"body": "read", "d": "6/2015"}, {"body": "please read example nt work component expression prop compiled parent scope case prop needed simply access inside component", "d": "6/2015"}, {"body": "use communicate data childparent components website documentation communicating instances bad practice separate elements thats employ modularity helps simplify", "d": "6/2015"}, {"body": "use twoway props also please use vuejsdiscussions questions", "d": "6/2015"}, {"body": "found solution vuenexttick", "d": "6/2015"}, {"body": "yep computed properties directives considered internal watchers always get notified user watchers closing opened issue docs repo", "d": "6/2015"}, {"body": "see use tag insert content", "d": "6/2015"}, {"body": "sorry nt see den documentation working thanks", "d": "6/2015"}, {"body": "thanks detailed report really appreciated", "d": "6/2015"}, {"body": "getting called", "d": "6/2015"}, {"body": "weird put right shows page gets loaded", "d": "6/2015"}, {"body": "note setting value programmatically either via trigger event update model directly without relying hidden inputs closing vue bug feel free continue discussion though", "d": "6/2015"}, {"body": "oh make sense thanks way recommend way set model directly via jquery function thanks", "d": "6/2015"}, {"body": "setting model nt via jquery function", "d": "6/2015"}, {"body": "well thing autocomplete function chose member depending chose id set use jquery plugin autocomplete learned vuejs set", "d": "6/2015"}, {"body": "initialize autocomplete lifecycle hooks component needs reference component instance good practice also teardown autocomplete component hook", "d": "6/2015"}, {"body": "course thanks lot", "d": "6/2015"}, {"body": "update looks like breaking change might early", "d": "6/2015"}, {"body": "using filters", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "note vue prop system semantics aim map strictly html attributes semantics agree prop expects boolean type makes sense map absence prop nt like making map even give bogus value boolean attribute set true eg spec design imo quite confusing literal nt think necessary deprecate simply spec nt allow", "d": "6/2015"}, {"body": "disagree change think create confusion prop attribute like think prop always needs value instead prefer say template partially rendered server comes would nt want casted boolean would like restrict prop boolean purpose prop assertion also vue directive params used without value eg confusing", "d": "6/2015"}, {"body": "yeah maybe deprecation bit extreme suggestion within suggestion notice terminating question mark azamatsharapov precisely initially proposed prop somethingexceptprop trigger warning map undefined consideration realizing browsers nt care value much going backtrack say presence attribute always bind true except using old syntax value false describe legit use case want single expression truefalsestring opposed using exception mechanism explicit exceptions node err value pair rust option", "d": "6/2015"}, {"body": "zacreature sorry sure understand mean describe legit use case want single expression truefalsestring opposed using exception mechanism said template may partially rendered server meant something like returns error want error casted true course prevent error simple example everybody expert may make mistake mainly mentioned confusion introduced proposed changes", "d": "6/2015"}, {"body": "legit case meant piece code average programmer would write particular purpose maybe optimist like believe average programmer sense returning error instead using language built error handling mechanism believe php two nt agree newbies favor tolerating mistakes eventually designing functions behave way get trouble see example modern languages builtin error handling mechanisms reason things fail good code always fail safe technically errors propagated crossing language barriers php html js propagation needs explicit framework unless ask since realm confusion sooner later someone expect regular html components work truefalse thing way expected vue handle boolean attributes per html spec would result checkbox always checked even returns error proposal attempts mitigate half sources confusion deprecation would long run remove confusion vue components would behave way html components", "d": "6/2015"}, {"body": "would want vuejs strictly follow html spec prop assertion must support casting right still nt agree opinion let see people maintainer framework say thank detailed explanation", "d": "6/2015"}, {"body": "modern languages builtin error handling mechanisms yes many argue using exceptions unless absolutely needed trycatch slow operation also lose much context caused error many including prefer deal errors happen mon jun azamat notifications githubcom wrote would want vuejs props strictly follow html spec prop assertion must support casting right still nt agree opinion let see people maintainer framework say thank detailed explanation reply email directly view github", "d": "6/2015"}, {"body": "markhahn intentionally used error handling opposed exception handling effort avoid confusion obviously failed point generally better send errors separate channel opposed returning low memory environments c functions manipulate data pointers sent arguments return integer status code nodejs continuations expect called rust haskell scala use course lots languages good old fashioned propagating exceptions big fan agree downsides even situation mandates errors sent results checking return code special values equivalent handling errors one expect backendagnostic mvvmframework", "d": "6/2015"}, {"body": "evan changed looked changes looks like missing prop boolean assertion casted false", "d": "6/2015"}, {"body": "azamatsharapov yes affect write code falsy anyway simply longer warns prop expected boolean missing assuming prop assertion html", "d": "6/2015"}, {"body": "hmm thought would useful case prop value prop nt passed could logical imo false false true true undefined missing yeah big deal", "d": "6/2015"}, {"body": "falsy anyway ca nt see use case differentiating boolean property vs one want make sure provided still add", "d": "6/2015"}, {"body": "meant kind case yes solves nt realize thanks", "d": "6/2015"}, {"body": "yeah documented somewhere preprocessed array array filters work object well", "d": "6/2015"}, {"body": "vue extends observed objects ensure change detection help therefore part vue responsibility", "d": "6/2015"}, {"body": "right way", "d": "6/2015"}, {"body": "use", "d": "6/2015"}, {"body": "share variables trough componentes new vue ready function access socket variable component nt want repeat code", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "nt work print console object root show io object right use show undefined", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "hmm better like current props syntax first array object array string identical format array second format keyvalue pair nt know value means type configuration target property rather configuration like validate require although type configuration might used widely doubt bit confusing", "d": "6/2015"}, {"body": "key", "d": "6/2015"}, {"body": "butsalt talking consistency attribute keyvalue map arrays string work well excellent readability want enumerate list properties also want add options reading list becomes difficult imo thing shortcut designed condense stuff like easy read", "d": "6/2015"}, {"body": "yes keyvalue map style consistent options used array syntax mostly extended original array processing logic landed without breaking backcompat", "d": "6/2015"}, {"body": "list items async transitions", "d": "6/2015"}, {"body": "oh u r right actually use hooks", "d": "6/2015"}, {"body": "transitions gets bit tricky need nested nextticks transitions buffered another tick reflow happens think make less ugly", "d": "6/2015"}, {"body": "use vuejsdiscussion gitter chat ask questions also check contributing guide", "d": "6/2015"}, {"body": "looks like webcomponentsjs bug mount directly instead everything works firefox returns wrapped object wrong attributes array", "d": "6/2015"}, {"body": "thanks suggestion landed although difference", "d": "6/2015"}, {"body": "cool thank much taylorzane", "d": "6/2015"}, {"body": "props data return become default parent nt provide although agree default directly seems better", "d": "6/2015"}, {"body": "usually key defined observed defined default value without also defining breaks assumption", "d": "6/2015"}, {"body": "without also defining data breaks assumption nt everything props independent data whether default thu jun pm stephen young notifications githubcom wrote usually key defined data observed defined props default value without also defining data breaks assumption reply email directly view github", "d": "6/2015"}, {"body": "love see prop property set natural assume default value provided nt necessarily needs come parent", "d": "6/2015"}, {"body": "markhahn hmm yeah maybe wrong", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "thanks fast catch detailed repro fixed release soon", "d": "6/2015"}, {"body": "yeah thanks", "d": "6/2015"}, {"body": "tried", "d": "6/2015"}, {"body": "please use questions nt codebase use approach nirazul mentioned use external utility lib function eg underscore lodash type functionality fall within vue scope", "d": "6/2015"}, {"body": "sorry try options afraid use nirazul approach may working browsers thank", "d": "6/2015"}, {"body": "fselias actually quite safe side", "d": "6/2015"}, {"body": "issue tracker help platform please go stackoverflow receiving help code think found bug please make sure read contribution guidelines first describe bug experiencing", "d": "6/2015"}, {"body": "vue documentation example handle array input checkboxes solution tried work correctly already posted issue different place nobody give solution", "d": "6/2015"}, {"body": "suggested please use questions example anyway", "d": "6/2015"}, {"body": "thank much apologies posting wrong section", "d": "6/2015"}, {"body": "oh submit discussion sorry", "d": "6/2015"}, {"body": "change variable name nt really see would break things maybe update minifier use uglifyjs instead", "d": "6/2015"}, {"body": "vuerouter", "d": "6/2015"}, {"body": "resolve vue", "d": "6/2015"}, {"body": "\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u52a0\u4e2a \u8bbe\u6210", "d": "6/2015"}, {"body": "vshow vuecomponent mgslider page \u9875\u9762beforecomplete", "d": "6/2015"}, {"body": "loadview loadview \u4f20\u8fdb\u53bb\u7684\u4e00\u4e2a defer", "d": "6/2015"}, {"body": "\u8fd9\u4e2a\u5c31\u8ddf vuerouter", "d": "6/2015"}, {"body": "loadview", "d": "6/2015"}, {"body": "\u5f53\u7136\u5f97\u662f\u5f02\u6b65\u7684\u5566", "d": "6/2015"}, {"body": "\u4f60 readmemd bug", "d": "6/2015"}, {"body": "\u770b", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "point extension subclass inherit everything superclass looks like case use mixins instead", "d": "6/2015"}, {"body": "also rendering works take attribute block", "d": "6/2015"}, {"body": "played around little seems like event run current tick picked updated previous fiddle illustrate seems like bug think support synchronous eventfiring", "d": "6/2015"}, {"body": "read link seems like solve problem going close issue apologies spam hope helps someone else", "d": "6/2015"}, {"body": "listener simply listens native change event fire blur input work type need provide jsfiddle reproduction finally want react data changes nt rely dom listeners better way use underlying data directly", "d": "6/2015"}, {"body": "saying compiling template two versions vue nt sound like would work properly two versions vue probably better clearly divide areas managed eg use version compile element use version b compile element compiling piece dom two versions vue sounds like really bad idea", "d": "6/2015"}, {"body": "also like directive nice way turn html element component dynamically basically like custom element spec element turned custom element using attribute vue html item component pseudo code template lt div gt item lt div gt need order get result dynamic components work tag attribute like vue html item component pseudo code replace true needed remove lt component gt template lt div gt item lt div gt directive makes dynamics components easier apply existing elements keep semantics html good semantics wrong semantics", "d": "6/2015"}, {"body": "sure understand correctly would nt replace option solve problem like dynamically attach component different contexts like", "d": "6/2015"}, {"body": "steffans plan default always include correct semantic element use component template leave case raw template looks like html rendered result would semantically correct", "d": "6/2015"}, {"body": "recent commit replace option default probably combat exact problem thing note less obvious actually without digging template using component nt seem like huge problem knowing html element type styling etc useful", "d": "6/2015"}, {"body": "example tag would need added component template html item component pseudo code template lt li gt lt div gt item lt div gt lt li gt actually liked directive behavior exactly using custom elements nt replace element extendenhance way replacement optional needed times web component vue component default replace could somehow confusing element always part template html auto replace true implicit template lt button gt mega button lt button gt recreate button element vue directive would actually never use new syntax directive looks nicer html works maybe nicer", "d": "6/2015"}, {"body": "disagree proposal adds need know exactly element type megabutton targeting good", "d": "6/2015"}, {"body": "steffans nt use", "d": "6/2015"}, {"body": "post default true recommended usage would always include root element component template use custom element component whenever possible use dynamic components use table elements guess relaxing restriction bit nt hurt strong preference style", "d": "6/2015"}, {"body": "yes would first choice well previous comments mainly using dynamic component case applying directive existing element seems easier creating generic tag relaxed", "d": "6/2015"}, {"body": "keeping configurable prefixed around trick purposes appreciative smile", "d": "6/2015"}, {"body": "vote shorter vcomponent works tables provide flexibility replacing", "d": "6/2015"}, {"body": "fail see advantage know use megabutton component need know requires button tag p", "d": "6/2015"}, {"body": "thelinuxlich normally custom element used whenever possible however using directive actually intended apply component certain tag like way component could work multiple tags always considered replace option disabled current would replaced anyway wink", "d": "6/2015"}, {"body": "relaxed limitation since still useful tablesvg elements cases provide component different element type functionality changing could get confusing time breaking change", "d": "6/2015"}, {"body": "please use vuejsdiscussions repo questions code looks fine although nt post template component please make jsfiddle show problem", "d": "6/2015"}, {"body": "thanks fixed", "d": "6/2015"}, {"body": "ok found replace answer expected directive functionality", "d": "6/2015"}, {"body": "btw directive could solve table issue", "d": "6/2015"}, {"body": "oops thiselsetattributes proper method", "d": "6/2015"}, {"body": "always write custom sort filter make sure call copy array", "d": "6/2015"}, {"body": "hmmm thing happened last issue deleting code rewriting memory everything works problem development environment try harder submitting issues sorry trouble", "d": "6/2015"}, {"body": "known issue fixed", "d": "6/2015"}, {"body": "nt think understanding mean", "d": "6/2015"}, {"body": "closing inactivity feel free reopen could provide jsfiddle demonstrating issue clearly", "d": "6/2015"}, {"body": "try computed property view synced property also check", "d": "6/2015"}, {"body": "provide context curious know use case would need recursively update watcher times", "d": "6/2015"}, {"body": "editor arbitrary json data widgets components responsible various subsections json data widgets appear editor template many times widget responsible subsection json via key defines json looks like within subsection creates manages ui widget updates editor overall document json realtime via watcher tried twoway binding nt work well bootstrap scenario ie json document blank widget needs initialize subsection problem coming initialization sure exact path execution basically editor template compiled widget initializing subsection json overall json document managed editor overall json document one getting many updates one widget widget initializes finds needs initialize subsection json causes update editor document json wrestling trying come elegant way implement vue suggestions welcome", "d": "6/2015"}, {"body": "saying toplevel json object passing sub trees child components child component modifies sub tree gets initialization", "d": "6/2015"}, {"body": "yep put way makes think work around registering watch nexttick", "d": "6/2015"}, {"body": "nt quite understand component needs mutate sub tree gets though give example initialization", "d": "6/2015"}, {"body": "instance widget manages address city etc nt want editor know understand create proper default value widget start blank ie overall document want widget initialize subsection sane default let bindings inputs ui take", "d": "6/2015"}, {"body": "guess make number configurable lifting max update count make app work intended", "d": "6/2015"}, {"body": "yes templates max complexity tens widgets would probably set around", "d": "6/2015"}, {"body": "thanks btw really appreciate admire work vue", "d": "6/2015"}, {"body": "welcome", "d": "6/2015"}, {"body": "please make sure upgrade provide jsfiddle reproduction issue", "d": "6/2015"}, {"body": "fiddle found click moreless link first two times works third time throws error mentioned", "d": "6/2015"}, {"body": "use please read issue reporting guidelines opening issue thanks", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "thanks lot", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u8fd9\u91cc\u9700\u8981\u7528 \u53e6\u5916\u4ee5\u540e\u7528", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "realized easy way showing template compiled", "d": "6/2015"}, {"body": "simply removes instance dom reinserts later likely reset scrolling position behavior different", "d": "6/2015"}, {"body": "behavior different nt implement upgraded guess save position leave page restore return nt big deal thinking maybe way use keepalive changed maybe make plugin mon jun evan notifications githubcom wrote keepalive simply removes instance dom reinserts later likely reset scrolling position behavior different reply email directly view github", "d": "6/2015"}, {"body": "yeah common issue spas nt think could potentially offer option behavior", "d": "6/2015"}, {"body": "application need router jun pm evan notifications githubcom wrote yeah common issue spas nt think keepalive vuerouter could potentially offer option behavior reply email directly view github", "d": "6/2015"}, {"body": "think domfragment state preservation plugin alternative directive keepalive replace using name new directive something different directive pr core code enhance keepalive nt think performance problem since happens component changes code set scroll position fast", "d": "6/2015"}, {"body": "code works fast notice functionality placed scrolling element ca nt figure add scrollable elements entire page replacing keepalive option guessing proper way add feature make new directive needs added scrollable element although work developer hoped give control choose elements fix need develop new directive maybe called vkeepscroll adds functionality element assume put two handler functions global code nt studied write directive template methods onscroll e gt ele etarget elesetattribute datavuescrllft elescrollleft elesetattribute datavuescrltop elescrolltop attached gt ele elqueryselectorall datavuescrllft elescrollleft elegetattribute datavuescrllft elescrolltop elegetattribute datavuescrltop let know posting much detail thought maybe someone would let know heading wrong path", "d": "6/2015"}, {"body": "custom directives pretty easy", "d": "6/2015"}, {"body": "mean reevaluated seems thing different warning", "d": "6/2015"}, {"body": "wrapper prevents signedin content appearing consider following javascript initial load application state rootdata profile null user authenticates ui updates reflect rootprofile username foobar image user signs ui updates reflect rootprofile null vue warn error evaluating expression profileimage warning implies something done incorrectly approach replacing logged user object incorrect warning misleading thank help", "d": "6/2015"}, {"body": "due internal changes relating order prop changes synced practice affect app behaves safely ignore warnings next release restore old behavior longer throw warnings case", "d": "6/2015"}, {"body": "well tried patch method immediately ran situation since passing value needed directive expression prop instead using constant directive expression proper value directive expression evaluated ie guess really asking two way dynamic binding sigh case curious use case need create user interfaces json data hardcoded values template bind inputs model based runtime information", "d": "6/2015"}, {"body": "think misread code sample mustaches supported nt recommend usage either reason appearance interpolation tags explicitly indicates whole thing evaluated string mixing interpolation inside expressions makes difficult read understand whether something string expression meant following usage supported", "d": "6/2015"}, {"body": "completely agree drawbacks struggling find good way deal dynamic binding issues tested jsfiddle worked safe top level attribute binding", "d": "6/2015"}, {"body": "yes fine", "d": "6/2015"}, {"body": "great think gives need solve", "d": "6/2015"}, {"body": "put outer component template use custom element replaced one additional note following line needs changed empty textnode want make sure accessing first element child fixed example", "d": "6/2015"}, {"body": "wow great many thanks best", "d": "6/2015"}, {"body": "want prevent called twice using flag variable", "d": "6/2015"}, {"body": "good catch implement like anyone looks working solution use one vuetransition fade leave function el done var isdone false", "d": "6/2015"}, {"body": "\u5347\u7ea7\u5230 content \u786e\u5b9e\u6709", "d": "6/2015"}, {"body": "\u5347\u7ea7\u5230\u4e86", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u66f4\u65b0\u5230\u6700\u65b0\u7684 dev \u770b\u4e0b mon jun pm \u6728\u98ce notifications githubcom wrote reply email directly view github", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "getting property like works nt equal msg since alias", "d": "6/2015"}, {"body": "vrepeat identifier instead passing repeated object component pass prop instead expected behavior however noted actually bug code working without attribute content inside compiled parent content discarded component nt template", "d": "6/2015"}, {"body": "computed properties behaving expected mentioned bug fixed", "d": "6/2015"}, {"body": "thanks reporting issue fix asap", "d": "6/2015"}, {"body": "thanks works great", "d": "6/2015"}, {"body": "sorry vue never work way polyfill", "d": "6/2015"}, {"body": "use troubles documentfragment part", "d": "6/2015"}, {"body": "none polyfills make work nondom objects limitation browser even get past fragment error still wo nt work properly", "d": "6/2015"}, {"body": "cry", "d": "6/2015"}, {"body": "like communication parent child explicit passing callback may mean check presence callback makes possible side effects child component actions explicit look callback passed parent problem events although decoupled idea many listeners could triggered side effects emit something hand like reduce amount apis serve similar purposes feel fit use case better check implemented past commits use custom directive", "d": "6/2015"}, {"body": "official release fact one time one way syntax uses different syntax", "d": "6/2015"}, {"body": "use splice method right key mlist datamdata mlist datamdata key middatamid mlist datamdata delete key mlist datamdatasplice consolelog jsonstringify mlist datamdata break", "d": "6/2015"}, {"body": "work objects need use arrays", "d": "6/2015"}, {"body": "yes correct mentioned discarded solution read care note condition classes would performancewise perform condition check instead twice", "d": "6/2015"}, {"body": "yes sorry nt paying attention enough \u0433 \u0447 j bruni wrote yes correct mentioned discarded solution read care note condition classes haserror field would performancewise perform condition check instead twice reply email directly view github", "d": "6/2015"}, {"body": "cases going cause performance issues unless method takes must serious problem implemented said directly pass object returned computed property inside computed property call", "d": "6/2015"}, {"body": "work tried also please read issue guidelines opening one questions opened vuejsdiscussion", "d": "6/2015"}, {"body": "thank much worked sorry posting discussion great library getting hands wet", "d": "6/2015"}, {"body": "nt wan na upset anyone think worth reading issue reporting guidelines following", "d": "6/2015"}, {"body": "sorry forum somewhere general discussion", "d": "6/2015"}, {"body": "post non featurebug related issues", "d": "6/2015"}, {"body": "btw changes far documented release notes officially later week might breakage since still early project think switch", "d": "6/2015"}, {"body": "thanks suggestion home page", "d": "6/2015"}, {"body": "could give example necessary mustache tags directive values contain one expressionstatement", "d": "6/2015"}, {"body": "large constant particular case documentation purposes value best kept model template", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "love see happen perhaps something like template might look like var mycomponent new vue data function foo name bar name bat exports function return thisfoo template something want support think possible custom directive", "d": "6/2015"}, {"body": "mechanism restricts parent children context signatures situation eg menu sub menu good way communicate parent children", "d": "6/2015"}, {"body": "latest branch changes related issue transcluded components considered children host component means following case two use event system communicate content still properly compiled parent scope note issue specifically transcluded components host", "d": "6/2015"}, {"body": "content still properly compiled parent scope currently would compiled scope changing next release misunderstand", "d": "6/2015"}, {"body": "azamatsharapov even current version compiled parent scope scope template belongs", "d": "6/2015"}, {"body": "oh course thinking instead get", "d": "6/2015"}, {"body": "nt think good idea opens possible typing errors eg missing comma adds internal overhead converting array get purely stylistic preference", "d": "6/2015"}, {"body": "opens possible typing errors many fewer current typing requirement adds internal overhead converting array kind conversion fast maybe usecs vue compile time nt hotspot means get purely stylistic preference nt precedence done elsewhere vue personally nt see need current array syntax tue jun evan notifications githubcom wrote nt think good idea opens possible typing errors eg missing comma adds internal overhead converting array get purely stylistic preference reply email directly view github", "d": "6/2015"}, {"body": "see typing errors latter would throw former would result unknown run time behavior", "d": "6/2015"}, {"body": "understand also ca nt find similar examples use coffeescript teacup coffeescriptbased template noisy things like mustaches really stand typical vue code looks like note looks compared rest vuecomponent showlist paramattributes curshowidx allshows template render gt div showlist gt div showlistinner gt div show vrepeat show allshows vtext showtitle vclass selected showshowidx curshowidx way plugin current option maybe different name converted like could multiple things like call plugin", "d": "6/2015"}, {"body": "possible implement mixin", "d": "6/2015"}, {"body": "looks like easy solution lucky run used vue expandability impressive impressive vue code small clean begin notice used instead planned change like ps atom editor currently trying decide recommended framework arguing use vue time", "d": "6/2015"}, {"body": "yes renamed checkout upcoming changes beta rc release notes", "d": "6/2015"}, {"body": "markhahn unfortunately realized mixin example would work properly data initialization process relies initialize props happens hook however think easier write small helper function similar using preprocess template", "d": "6/2015"}, {"body": "thanks thinking educational greedy want exactly way grown appreciate vue complaints sat jun evan notifications githubcom wrote markhahn unfortunately realized mixin example would work properly data initialization process relies optionsprops initialize props happens created hook however think easier write small helper function similar using render preprocess template vuecomponent showlist props parseprops curshowidx allshows reply email directly view github", "d": "6/2015"}, {"body": "wow reactjslike looks pretty good prefer", "d": "6/2015"}, {"body": "interesting could give real world use looks cool ca nt think way using", "d": "6/2015"}, {"body": "looks good required prop provided", "d": "6/2015"}, {"body": "mostly intended shipping standalone reusable components props essentially api exposed component required prop provided type mismatches vue throw warning", "d": "6/2015"}, {"body": "thank evan think good addition current component system", "d": "6/2015"}, {"body": "shipped", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closing repro inactive", "d": "6/2015"}, {"body": "option b makes sense think vast majority users rely classic mustache tags arguing custom tags akin spacesvstabs debate option b opinionated component remains compatible ecosystem opinionated app still use common third party components", "d": "6/2015"}, {"body": "change normal delimiters triple changes would turn triple general want avoid breaking changes stylistic preferences", "d": "6/2015"}, {"body": "like syntax escaped variables would opposed adding config option specify unescaped delimiters could still default triple mustache", "d": "6/2015"}, {"body": "sounds like good idea probably consider part", "d": "6/2015"}, {"body": "awesome thanks", "d": "6/2015"}, {"body": "please report bugs questions posted seems similar think discussed", "d": "6/2015"}, {"body": "markhahn sure helps always change delimiters something prefer eg", "d": "6/2015"}, {"body": "hmm think see pass dynamic props dynamic component syntax although different still needs mustaches think tags somewhat necessary attribute start since otherwise way tell databound plain string attribute", "d": "6/2015"}, {"body": "thanks tip replacing mustaches necessary attribute start v well another request mine wish vue components used v mon jun pm evan notifications githubcom wrote hmm think see vwith pass dynamic props prop something dynamic component syntax although different still needs mustaches think tags somewhat necessary attribute start v since otherwise way tell databound plain string attribute reply email directly view github", "d": "6/2015"}, {"body": "chosen something much less noisy", "d": "6/2015"}, {"body": "btw nt use mustaches problem including modules use", "d": "6/2015"}, {"body": "hmm interpolation config global might issues use thirdparty component template probably add componentlevel option delimiters", "d": "6/2015"}, {"body": "probably add componentlevel option delimiters would cool seems global one useless deprecated think modules important issue global like general globals suck mon jun pm evan notifications githubcom wrote hmm interpolation config global might issues use thirdparty component template probably add componentlevel option delimiters reply email directly view github", "d": "6/2015"}, {"body": "kinda unusual use case instead using write filter probably use watcher since vmodel locks writing model need use wait unlocks overwrite affect select vmodel", "d": "6/2015"}, {"body": "thanks lot help", "d": "6/2015"}, {"body": "tricky parse regex literals inside directives easily confused division operator think reasonable change making vuevalidator also accept string pattern validator", "d": "6/2015"}, {"body": "sounds like reasonable solution means regexp literals used inside directive expressions documented", "d": "6/2015"}, {"body": "yes rare use case since validation probably use case would happen cases possible use filter computed property avoid add note docs", "d": "6/2015"}, {"body": "sounds good thanks", "d": "6/2015"}, {"body": "closing resolved", "d": "6/2015"}, {"body": "\u4f60\u8fd9\u4e2a \u662f\u60f3\u5e72\u5565 \u4e0d\u662f\u8fd9\u4e48\u7528\u7684\u554a", "d": "6/2015"}, {"body": "sort \u518d\u7528 sort", "d": "6/2015"}, {"body": "\u5c31\u4f1a\u6539\u53d8 dom dom nodes jquery \u52a8\u753b\u5b8c\u6210\u7684\u65f6\u5019\u4fee\u6539\u6570\u7ec4\u987a\u5e8f", "d": "6/2015"}, {"body": "\u4f60\u8fd9\u4e2a\u4e0d\u5c5e\u4e8e", "d": "6/2015"}, {"body": "update initialize items array strange get errors though empty rows still output could access data", "d": "6/2015"}, {"body": "vue works converting data fields gettersetters nt initialize field want add later call mentioned model section guide", "d": "6/2015"}, {"body": "tried updating latest", "d": "6/2015"}, {"body": "yes updated comment unfortunately nt help still trying figure missing fiddle reproduce problem", "d": "6/2015"}, {"body": "okay think finally got reproduced steps reproduce click one number list repeatedly click first number second list second list grow length repeated elements three factors contributes problem outer component inner component uses inner component uses css transition new fix found implement function transition simple call", "d": "6/2015"}, {"body": "applied css animation using time vue running transition detects element css animation vue assumes want trigger transition based css animations listen animationend event determine transition ends however case leave animation leave transition never finishes providing explicit leave callback fixes problem think unexpected side effect new mixed cssjs transition mode maybe need allow js transition indicate knows pure javascript transition try detect css properties", "d": "6/2015"}, {"body": "added give transition things work properly", "d": "6/2015"}, {"body": "okay makes sense nt think css animations anything took little longer reproduce fast thanks updates think also nice either give warning simply require transitions present happens would nt first thing think searching", "d": "6/2015"}, {"body": "obvious reading updated transition docs yet", "d": "6/2015"}, {"body": "indeed recommended usage error fixed anyway btw expose prop use", "d": "6/2015"}, {"body": "see second section faq vuejs nt support custom gettersetters data objects however use computed properties instead", "d": "6/2015"}, {"body": "well completely rules vue im using breezejs get data server uses getters setters everything sun jun pm evan notifications githubcom wrote closed reply email directly view github", "d": "6/2015"}, {"body": "surprised client data management solution nt offer sort unwrap plain json functionality guess bad match", "d": "6/2015"}, {"body": "unwrapping objects plain javascript object would defeat purpose breezejs objects entities lots nice behavior built find getting breezejs entities working mvvm library choice keen writing one rather working app instead fighting tools shame getterssetters vue supposed chosen one", "d": "6/2015"}, {"body": "well possible vue wrap original property descriptor support objects gettersetters performance implications take account aware could become potential issue rare use case decided implement", "d": "6/2015"}, {"body": "\u5f00 issue \u975e bug \u95ee\u9898\u8bf7\u53d1\u5230", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u6211\u521a\u7528 cordova cordova android cordova \u770b\u770b\u5427", "d": "6/2015"}, {"body": "htc \u5199\u9053 \u6211\u521a\u7528 cordova cordova android reply email directly view github", "d": "6/2015"}, {"body": "\u5199\u9053 \u6211\u521a\u7528 cordova cordova android reply email directly view github", "d": "6/2015"}, {"body": "branch rely precisely used csp enforcing environments observation mechanism nothing moment supporting objectobserve really high priority chromechromium still environment supports requires pretty heavy changes made nt think spec reaches stage browsers start implement", "d": "6/2015"}, {"body": "hmm doc source markdown work", "d": "6/2015"}, {"body": "nt know nt studied contribution guidelines surely markdown would easier port html plain text use atom editor lets bring devdocs selection source selfishly asking one experienced area willing may take stab fri jun pm evan notifications githubcom wrote hmm doc source markdown work reply email directly view github", "d": "6/2015"}, {"body": "docset dash osx app asume easy apply devdocs experience devdocs", "d": "6/2015"}, {"body": "good idea guidelines documentation using scraper", "d": "6/2015"}, {"body": "demonstrate use case change necessary getting first glance", "d": "6/2015"}, {"body": "full context vueformidable built vue branch scenario without changes compile parent vm passes value child child computed property setter type casting sets default value issues watcher fire compilation value parent stays sync also component casting set watcher fire anyway props missing data initialized rather seems appropriate problem json schema primitive type", "d": "6/2015"}, {"body": "possible plugin work without proposed changes ran tests changes prop test cases failing agree initializing props would reasonable change though", "d": "6/2015"}, {"body": "yes work less straightforward ways using custom events maybe adding one level nesting data model initializing props would already help way", "d": "6/2015"}, {"body": "thanks props initialized think initial set order needs maintained behavior consistency past versions", "d": "6/2015"}, {"body": "make jsfiddle", "d": "6/2015"}, {"body": "self closing tag syntax xhtml need close properly templates", "d": "6/2015"}, {"body": "please post questions vuejsdiscussion thanks", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u9ebb\u70e6\u770b\u4e0b\u5f00 issue", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u4e0d\u8981\u518d\u50cf\u4e0a\u6b21\u90a3\u6837\u4e0a\u4f20\u6574\u4e2a\u4ee3\u7801\u4e86 jsfiddle", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "change component vue fires transition misunderstood", "d": "6/2015"}, {"body": "ah ended transition nt actually anything right works expected", "d": "6/2015"}, {"body": "using vue version refer routing section guide page vuerouter progress yet already work check issue reporting guidelines report appropriate issues repo", "d": "6/2015"}, {"body": "thanks exactly looking also support hashbang", "d": "6/2015"}, {"body": "sounds like useful improvement think possible requires changes current content resolution algorithm static probably look actually makes realize rewrite elementdirective would make transclusion logic much simpler", "d": "6/2015"}, {"body": "wow turns works", "d": "6/2015"}, {"body": "use inside hooks points instance animated yeah staggering tricky get right take look improved", "d": "6/2015"}, {"body": "list already elements add another one nt want delay transition ca nt use index need element index array newly added elements", "d": "6/2015"}, {"body": "nkovacs nt think task javascript managed achieve effect wanted writing confess ugly custom css selectors looks like tedious approach quite manageable preprocessor mostly even unwanted animate classes still perfect pressing soon", "d": "6/2015"}, {"body": "interesting thing items stuck leave applying exactly opacity css transition triggered item removed transition delay passed fix behavior giving small nonzero opacity eg", "d": "6/2015"}, {"body": "experiments branch simply add container looks like working alright possible add finergrained control maybe reverse order eg", "d": "6/2015"}, {"body": "looks pretty good exactly looking", "d": "6/2015"}, {"body": "awesome played around bit added animation reorder first emptying array repopulating nexttick perfect try pin elements place animation nt jump around also ran bug version nexttick hack click add items click empty finishes try adding items give time get uncaught typeerror read property removechild null", "d": "6/2015"}, {"body": "one suggestionwish hook control staggering eg speed slow element instead constant really important would nice", "d": "6/2015"}, {"body": "fixed jumping around giving leaving elements absolute position reorder animation looks good remove items broken assumes every element current one beforeleave going leave gives absolute position", "d": "6/2015"}, {"body": "alternative solution fixes remove items makes reorder empty look bad", "d": "6/2015"}, {"body": "ok managed get look way want think need hook runs stagger settimeout started give elements going removed absolute position animation starts hooks need run beforeleave hooks", "d": "6/2015"}, {"body": "made bunch improvements fiddle work without errors", "d": "6/2015"}, {"body": "define custom stagger amount providing hooks transition object", "d": "6/2015"}, {"body": "ship part", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "doc example indicates passed string retrieving value example fixed note filter syntax changed behave like expected original fiddle", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "good catch", "d": "6/2015"}, {"body": "general avoid binding like array primitive values use objects mutate object", "d": "6/2015"}, {"body": "ah see thanks taking time headsup works looking forward", "d": "6/2015"}, {"body": "\u5f00 issue \u7c7b\u4f3c\u95ee\u9898\u8bf7\u53d1\u5e03\u5230", "d": "6/2015"}, {"body": "vuenexttick", "d": "6/2015"}, {"body": "believe similar issue array objects data using populate list front end using use filter show certain records works great nt seem way access filtered records within javascript make calculations perform actions records total filter filterby show easy way get array data filtered records", "d": "6/2015"}, {"body": "using vref", "d": "6/2015"}, {"body": "wow exactly looking thank", "d": "6/2015"}, {"body": "closing original author nt provided explanation also nonbug moved vuejsdiscussion anyone wishes continue discussion", "d": "6/2015"}, {"body": "iscroll touchstart refresh \u5f53\u524d\u7684 iscroll ng reslove vueroute vueroute", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closing since really marginally useful clear proper way access attribute value changes within directive code", "d": "6/2015"}, {"body": "objects supported via", "d": "6/2015"}, {"body": "cool thank much great work way help push project forward", "d": "6/2015"}, {"body": "moment helpful thing probably hanging gitter channel vuejsdiscussions help people also writing tutorials blog posts would great", "d": "6/2015"}, {"body": "implemented", "d": "6/2015"}, {"body": "jcoffland thinking making template syntax cleaner taking another look proposal think makes sense start feel actually fall category directives deserve better semantic syntax want support dom events vue component events gets bit tricky comes naming think clean well suited dom events means need use different syntax vue event handlers currently thinking would look like would trigger child emits event", "d": "6/2015"}, {"body": "proposed way looks good would impose restrictions event naming right use complex event names like namespaceeventname action submit etc possible guess though may good thing ps agree jcoffland something like would nice", "d": "6/2015"}, {"body": "agree cleaner current directives vs one disadvantages see conflict ca nt name prop like onclick example never named props like people may highlighting caveat guide would helpful though", "d": "6/2015"}, {"body": "like v prefixes simply says reader vue attributesyntax makes kind vue namespace", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "azamatsharapov pass data props prop name like nt make much sense internally throw warning people actually name props", "d": "6/2015"}, {"body": "yeah know everyone english speaker around globe warning would good yes", "d": "6/2015"}, {"body": "agree v prefix good", "d": "6/2015"}, {"body": "think vue events different dom events cleaner separation good vue similar dom event system would prefer another way like events looks new event directives looks good usable", "d": "6/2015"}, {"body": "prefer v prefix vue related attributesproperties", "d": "6/2015"}, {"body": "prefer prefix", "d": "6/2015"}, {"body": "prefix useful working team tell designer colleagues mess anything prefixed long also since everybody prefers prefix changing everything vue related html prefix example directive nt prefix", "d": "6/2015"}, {"body": "azamatsharapov depending docs directive params", "d": "6/2015"}, {"body": "since deprecated one component related directive", "d": "6/2015"}, {"body": "oevgeny thanks reminding directive param takes argument anyway saying changing everything vue related html prefix ask ok without prefix anyway sound weird prefix", "d": "6/2015"}, {"body": "azamatsharapov also said directive nt prefix sounds weird like also look", "d": "6/2015"}, {"body": "oevgeny meant directive items things earlier said everything vue related let argue nonnative english speakers also said depending docs probably meant according docs anything related languagegrammar terminology mistakes discussed", "d": "6/2015"}, {"body": "azamatsharapov want say others list directive params ok according docs reason nt prefixes hope english bad know agree mistakes sorry", "d": "6/2015"}, {"body": "looks like community prefers stick current syntax think worth giving better clearer name changed going move forward prefix", "d": "6/2015"}, {"body": "agree sticking prefix vuejs directives original feature request user already create component parameters namespace via issue asks ability create user defined callbacks similar manner perhaps using component option named", "d": "6/2015"}, {"body": "big fan functionality pretty much achieved using already come long way reducing api removing multiple ways thing abbreviation entirely clear unless already know used functionality would good candidate mixin really desired", "d": "6/2015"}, {"body": "jcoffland mentioned original proposal usage already simulated directly calling parent easy abstract mixin although like idea well mostly style preference seems others prefer directive style also youngsteveo mentioned like avoid vue official api multiple ways thing best left userland strongly prefer style", "d": "6/2015"}, {"body": "agree keeping api simple angular went wrong still bothered squirrelly nature event system vs direct callbacks mentioned return values supported thing nt like events run tree caught explicitly stopped component emits event nt use event runs willy nilly around component tree direct callbacks happen cases one receiver easy default case events multiple receivers default also need three different functions amp emit events first place could wire components together explicitly method callbacks code would readable simpler imho note work around call parent method works want map callback parent would also nice able map callbacks siblings using ref id example example defines callback user maps defines callback mapped method would also like able put expressions callbacks", "d": "6/2015"}, {"body": "aha realized wanted already works due internal compilation improvements", "d": "6/2015"}, {"body": "even works sibling calling idea", "d": "6/2015"}, {"body": "awesome looks like pretty much exactly looking documentation syntax", "d": "6/2015"}, {"body": "normal props paramattributes renamed props except pass methods methods autobound parent", "d": "6/2015"}, {"body": "got thanks tried passing methods beginning great allows asking adding extra option never really liked name anyway attempt conform existing scheme like better tried run fiddles nt work load although appears run browser console get expression run expression evaluated vuejs load time function call usage work return values eg like", "d": "6/2015"}, {"body": "call braces treated statement return value remove braces work", "d": "6/2015"}, {"body": "oh see mean parenthesis braces though", "d": "6/2015"}, {"body": "oops yes", "d": "6/2015"}, {"body": "dgerber use get count", "d": "6/2015"}, {"body": "masoodahm please post solution im trying load laravel pagination ajax get pagination instead actually works pagination huuge hehe", "d": "6/2015"}, {"body": "hi anything changed vue introduction business need use typescript application self made set small medium size independent decoupled components vue looks like natural choice lack ts support big blocker us rivetsjs looks like abandoned option neither however way bind js object jquery node object nice fact solves problem possible vue implement reasonable time amount behavior mean implementing way embedding custom object inside vuecomponent object anything like likely cause problems road anyway options far tell quick looking vue code concept goes quite deep ca nt see easy solution solutions indus sure understood correctly byt must say beginning big app rewrite feelings strong avoid hacking unusual use libraries really happy hack vue extend concept way anyway indus manage solve otherbetter way think possiblereasonable alter vue extend mechanism hard eventually would", "d": "6/2015"}, {"body": "slcodenine think would possible simulate using annotations similar angular declare options static property simply add decorator maybe even make look classy bit plumbing decorator sure feasible end vue subclass defined prototypally inheriting static object contains component options merge step happens decorator extracting options class declaration seems static properties obviously requires using typescript", "d": "6/2015"}, {"body": "one issue vuets end fighting internal nature vue vue elegant api use js objects cramming ts via classes ts language features may best choice using vue ts simply typing values directly using classmodules would love see deeper integration typescript something lost process unless done ground similar approach one key issue misalignment model definitions model instance use within vue makes ts compiler go stir crasy model properties created one place yet used runtime somewhere else mapping hard wrap typescript definition properties app specific something vue knowledge take example var demo new vue el demo data message hello vuejs demomessage hello vuets typescript see el data message part app model definition problem comes demomessage set typescript know came thus clearly error compiler perspective vuets solution class extend vue define properties class members thus instance api sync class definition sort favoring vue instance api generating vue constructor api suit works ideal pretty sure great solution would love see ts vue work closer together would happy help projects using vuets would love better solution ted", "d": "6/2015"}, {"body": "thinked gwt vue small project github repos test uses vue gwt generate application skeleton compile time ts requirement would nice solution java developers", "d": "6/2015"}, {"body": "never used gwt honestly idea needed make work vue", "d": "6/2015"}, {"body": "btw able write decorator talked albeit transpiled using babel decorator work ts familiar ts packagingbuild setups want try adapting ts welcome", "d": "6/2015"}, {"body": "seems going offtopic try explain better typescript java features mentioned gwt enables compile java source code javascript code furthermore gwt let reuse preexistent javascript code java code interested make fork contribute java version api vuegwt vuets would great", "d": "6/2015"}, {"body": "welcome find useful although probably wo nt able help much since nt use gwt java", "d": "6/2015"}, {"body": "slcodenine still using tsclass based approch works well couple projects made adoptions reflect newer versions ts eg union types vue eg newer version ts definition file found hack using tsclasses inherit vue would normal way block ts extend function extend manually vue even never problems would happy see first class support", "d": "6/2015"}, {"body": "indus sorry late response nt much time test options anyway thanks help helped lot overall decided go class decorator pattern looks less invasive rest ts code needs annotation managed make work ts mean solution created pr would cool confirm correct work road looks like working indeed end one knows vue better maybe see possible problems ready work make usable everyone basically business done basic transformations make typescriptish removed part introducing error basically sure necessary anyway ps would nt better provide write access everyone master branch one contribute small example style repo without need fork", "d": "6/2015"}, {"body": "slcodenine cool glad get working necessary make sure instance gets fresh copy initial data otherwise object shared among instances class class function called plain function otherwise would easier needs bit work deal maximum call stack issue likely handling circular references public write access sounds bit open fork pr pretty standard imo since long run may use official recommendation ts users", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "started experimenting picking hints part branch got simple text binding far looks like html soon vue initialized overwrite serverside text clientside text could skipped making linking functions aware run first time would skip dom manipulation set watchers", "d": "6/2015"}, {"body": "nkovacs wow nice please keep updated wondering possible expose compilation hooks made optional plugin", "d": "6/2015"}, {"body": "vmodel seems work box tried implement vrepeat reusing elements generated server think works pretty ugly hack though edit fixed handling vrepeat initialization items rerendered vstart vend anchors correctly placed nt need render separate template last normal element", "d": "6/2015"}, {"body": "nkovacs looks great could combine serverside vuelike rendering would work completly perfect", "d": "6/2015"}, {"body": "nkovacs mean already able things like", "d": "6/2015"}, {"body": "opened issue fork todo list stuff already works box great", "d": "6/2015"}, {"body": "running issue trying build form based data one part model need bind input values another part model based data would happy entertain work arounds far watches ends model order make work think would work completely dynamic two way binding onetime evaluation mustache reactive expressions sort like dynamic literal evaluated directive update function powerful complex completely dynamic two way binding would solve problem well enough instance right fails", "d": "6/2015"}, {"body": "already work long initialized data properly provide fiddle working intended", "d": "6/2015"}, {"body": "think demonstrates", "d": "6/2015"}, {"body": "chance reopen happy open new issue", "d": "6/2015"}, {"body": "sorry annoying reason new versions nt pushed jsdelivr", "d": "6/2015"}, {"body": "greenify nt set auto updating use cdnjs though", "d": "6/2015"}, {"body": "darn really hoping find built way push copy whole object case breaks lot pointless repetition instead using jquery since already", "d": "6/2015"}, {"body": "internal equivalent although documented", "d": "6/2015"}, {"body": "awesome looking created stackoverflow q hopefully help others run includes fiddles show", "d": "6/2015"}, {"body": "think understand right updating data run asynchronously instance calling updates vm dataitems things asynchronously calling jquery check element right changing data might return one would expect dom nt updated yet take fiddle example question wait items propagate entirely running jquery realworld case faced loading select options calling call fits width select element prior dataitems loading select box stays really small another damn question see fiddle running jquery wait long enough fiddle nt case app guess app lot processing going dom nt updated tick", "d": "6/2015"}, {"body": "dutgriff see call right changed data dom updated callback", "d": "6/2015"}, {"body": "darn right mentioned previous comment tried nt work must something going app missing fiddle shows nexttick working example hmmm side note thank much dedication vuejs really killing man", "d": "6/2015"}, {"body": "deleted key object used dom reflect change html js vue data snippet data tenants id name john id name joe id name sarah id name mary somewhere code inside vm method delete vmtenants element kept unchanged although object modified", "d": "6/2015"}, {"body": "jbruni need use reason mentioned docs scroll red tip section", "d": "6/2015"}, {"body": "perfect thanks lot including amazing ultrafastspeed support", "d": "6/2015"}, {"body": "accroding also possible expose data prop passed value must object replace component default data raise error", "d": "6/2015"}, {"body": "kikyous believe bug please open separate issue reproduction", "d": "6/2015"}, {"body": "kikyous btw seems trying bind unobserved data prefixed wo nt work", "d": "6/2015"}, {"body": "recommended best practices section al properties model objects defined case huge object string array values set fields using direct assignment ajax success display view get console warnings saying error evaluating expressions code snippet view file line throws warning correct way need iterate response object set properties object one one using set", "d": "6/2015"}, {"body": "abhijitghogre actually safely ignore warning suppress expression evaluation warnings setting initialize data specifically although verbose benefits know shape ajax response looks like", "d": "6/2015"}, {"body": "thanks evan", "d": "6/2015"}, {"body": "evan used set image src change coverimagepath model image nt update workaround", "d": "6/2015"}, {"body": "work show code creates andor passes value sat jun abhijitghogre notifications githubcom wrote evan used set image src change coverimagepath model image nt update workaround reply email directly view github", "d": "6/2015"}, {"body": "coverimagepath get computed automatically college changes right college model changed ajax success declared data javascript data college", "d": "6/2015"}, {"body": "abhijitghogre looks like work open issue vuejsdiscussion make fiddle reproduction please", "d": "6/2015"}, {"body": "fiddle also created issue discussion repo", "d": "6/2015"}, {"body": "aristidesfl thanks repo thats first guess works fine forum slack group dunno filled info chatting minutes later evan didnt know gitter guess tell guys vueslack think dont know either since vue getting visibility laracasts think people kinda lost comunity think point gitter chat repodiscussion vuejs website session called comunity something thats always look thanks best regards", "d": "6/2015"}, {"body": "dominiquedutra actually guy created slack channel called users gitter channel gitter knows think knew making slack channel sure nt like gitter much users growing everyday gitter meant open source project hosted github even activity sidebar shows activity repo real time also look readme main repo see questions section telling use gitter month already laracasts maybe comment vuejs videos gitter channel already first lesson even vuejs videos", "d": "6/2015"}, {"body": "azamatsharapov thanks glad know place chat must admit really didnt even glance readme used cdn vuejs started coding still going trough docs", "d": "6/2015"}, {"body": "great looking project would consider ready production planning using large application framework evolve time need always maintain backward compatibility would consider api final release new versions would maintain backward compatibility deprecated features remove completely", "d": "6/2015"}, {"body": "fergaldoyle intended last point release yes think suitable production", "d": "6/2015"}, {"body": "hi newbiequestion related trying something similar troubles vcomponent element repeat like put registred subcomponent computed property sorry coffescript get error directive component nt resolve compiledirectives turns undefined vcomponent dirdef resolveasset options directives dirname vtext stuff inside works fine component optionsdirectives passed built stuff like text without underscore wrong thanks viktor", "d": "6/2015"}, {"body": "hi fiddle pointing quite old version vue vuejs version want using", "d": "6/2015"}, {"body": "nah code seems legit still", "d": "6/2015"}, {"body": "could come around current issue simply using filter compute property simple data object iterated think still need computed properties involved things future", "d": "6/2015"}, {"body": "hedefalk fiddle nt loading vue correctly also note using component treats content inside external content redistributed template need give component template options use attribute working", "d": "6/2015"}, {"body": "yes reworked using coffeescript", "d": "6/2015"}, {"body": "thanks guys exactly would wanted using inlinetemplate however real app still get vue warn failed resolve directive component trying put vcomponent element vrepeat guess something different nt understand guess need try isolate issue production code back", "d": "6/2015"}, {"body": "hedefalk using real app deprecated use custom element components", "d": "6/2015"}, {"body": "oh guess dependencies vue next", "d": "6/2015"}, {"body": "oh definitely sooo really nt want stay behind would achieve something like nt want break template mean use case simply iteration lot elements retrieved json backend use vrepeat everything fine done realize need one thing inner thing needs computed json data nt yet nt want rearrange templates would like able add computed attribute elements use inside vrepeat makes sense vcomponent removed need stuff around template vrepeated computed property needs actual element vrepeat case styleclass thanks patience", "d": "6/2015"}, {"body": "nt think understand problem fiddle using custom element component notice option component", "d": "6/2015"}, {"body": "thanks lot trying use approach production code nt seem work tried boil particular problem wild guess would something related use table custom elements nt know figured might jsfiddle first moved repeat table element giving template js problem remains even though used scripttag template custom element seems moved table thanks patience guess real wtf", "d": "6/2015"}, {"body": "hmm okay indeed due browsers allowing nontable elements inside tables use table elements something overlooked deprecating official release make still usable table elements", "d": "6/2015"}, {"body": "ah ok thanks investigating guess moving template script nt help since shadow dom thing going transformations applied template put dom browser already fixed template starting vuejs nt want get stuck old version rather follow development bleeding edge couple followups strongest reason choosing vuejs instance mithriljs react ones looked dumping angular fan kind templating coming background used liftscala done server side rendering using functional transforms pure correct documents mock data adding data attributes know times changing frontend people need js really liked way able work design person htmlcss git repo adding unobtrusive data attributes binding data guess bit interested rationale deprecating vcomponent expect future attributes attributes correct instance using vtext mustache bindings guess esthetic preference due background possible kind want sometimes large correct document mock data bind shit js without external templates thanks help", "d": "6/2015"}, {"body": "sorry bug much one last question need styleclass tr depends data repeated ca nt seem find way use vrepeat vcomponent vclass tr seems vclass evaluated outside vrepeatvcomponent scope", "d": "6/2015"}, {"body": "hedefalk", "d": "6/2015"}, {"body": "azamatsharapov sorry nt help looking way use element iterated set style class simply added text evaluating static value true thanks viktor", "d": "6/2015"}, {"body": "hedefalk quite forgiving terms custom tags attributes nt substantial downside using hand custom elements actually worked official spec going common future component props firstclass concept vue get dedicated syntax directives remain prefixed attributes scoping question see blog post", "d": "6/2015"}, {"body": "thanks read blog post ca nt seem understand use get want current example since inlinetemplate gives inner template subcomponent seems ca nt fix thing without resorting external templates correct thanks viktor", "d": "6/2015"}, {"body": "two options use component include root node component template recommended use block repeat", "d": "6/2015"}, {"body": "sorry thick brick makes original element replaced case adding loose altogether", "d": "6/2015"}, {"body": "avoid inline template case", "d": "6/2015"}, {"body": "yeah afraid actually trying really hard avoid find little better would rather able one template transform explained come idea superhappy thanks viktor", "d": "6/2015"}, {"title": "click back button twice go back backbone app", "body": "using", "num": "3698", "d": "6/2015"}, {"title": "issue backbone collections", "body": "hi everyone likely found bug concerning backbone collections first run next code javascript var model backbonemodelextend idattribute id var new backbonecollection var model new model id alladd model consolelog allget model execute previous code using latest backbone version get false consecuently using custom idattribute add collection wo nt able get back id means get method otherwise case using backbone truly works expected", "num": "3697", "d": "6/2015"}, {"title": "plans modularize backbone", "body": "would love able something like js import events backbone objectassign mymodule events", "num": "3696", "d": "6/2015"}, {"title": "docs viewremove", "body": "jeremy imo absolutely positively needs read nt make clear el goes missing call elremove hiding inside remove dangerous one thing could pass boolean remove decide whether delete dom element", "num": "3694", "d": "6/2015"}, {"title": "removemodels regression bug", "body": "looks like removemodels simplified introduced regression bug removemodels function models options var removed var lt modelslength var model thisget models model continue code removed removed following lines means listening remove event check removal get infinite loop event called id removed think byid code put back events fired represent uptodate state", "num": "3693", "d": "6/2015"}, {"title": "listento scroll events", "body": "listento scroll events", "num": "3691", "d": "6/2015"}, {"title": "collection get idaddreference broken", "body": "looks like method broken around line nt look like trying index model value rather value course breaks well probably things", "num": "3688", "d": "6/2015"}, {"title": "deferred undefined requiring backbone gt", "body": "gist problem run install packagejson today install latest backbone version strangely undefined versions backbone greater backbone works expected console output anyone know going", "num": "3687", "d": "6/2015"}, {"title": "using backbone webpack without jquery throws errors", "body": "following guide get error uncaught error find module jquery seems like webpack defaulting amd trying load jquery throw error fails tried forcing webpack use commonjs using imports loader result following error message uncaught referenceerror backbone defined although backbone present js file sure getting error", "num": "3683", "d": "6/2015"}, {"title": "replace", "body": "wanting cut aliases lodash wondering would cool dropping use favor esfriendly flavor", "num": "3677", "d": "6/2015"}, {"title": "drop method use", "body": "underscore method dropped favor bb", "num": "3672", "d": "6/2015"}, {"title": "ditch bindall use", "body": "used backbone could swapped", "num": "3671", "d": "6/2015"}, {"title": "help mobile terminal tap event nt work", "body": "mobile terminal tap event nt work", "num": "3669", "d": "6/2015"}, {"title": "collectionat behavior change", "body": "release collectionat function specified follows beginning function specified prior providing index lt would return undefined may may return undefined depending index supplied behavior change would nice mentioned release notes", "num": "3668", "d": "6/2015"}, {"title": "type error html canvas", "body": "hello get type error backbone cdnjs rendering model within view document ready function var box backbonemodelextend defaults x w h var boxset backbonecollectionextend model box var boxview backboneviewextend render function var modelthismodel ctxthisoptionsctx var setview backboneviewextend initialize function thiscollectionon thisrender render function var canvasthis elget ctxcanvasgetcontext var cnew boxset cadd var vnew setview el canvas collection c vrender", "num": "3666", "d": "6/2015"}, {"title": "trigger change", "body": "line nt contain model amp amp setting value using silent true chaining amp triggering change event throws error modelset data silent true trigger change know says use silent", "num": "3662", "d": "6/2015"}, {"title": "model destroy method call success callback method server response", "body": "code var model collectionfindwhere id id modeldestroy success function consolelog seems success callback method never executed check source code optionssuccess function resp optionswait modelisnew destroy success success model resp options modelisnew modeltrigger sync model resp options optionssuccess executed please help", "num": "3654", "d": "6/2015"}, {"title": "routerhistory", "body": "backbone router inspired ye olde routers several years ago singlepage applications thing one usually reached handful jquery plugins build javascript app routers distinguished three characteristics route independent routes route callback triggered associated url matched router used bootstrap page never used pretty clear backbone router exhibits first two characteristics time changes router made number lil less obvious existence option fact default evidence third characteristic numerous blog posts books always warn setting additionally jashkenas expressed believed router used chatted bbconf months ago every popular javascript libraryframework moved away pattern place style routing pioneered ember become de facto way structure single page apps ember router went heavily influence react router angular ui router angular router reaching feature parity ember router might bit much backbone would prob increase size library lol think looking inspiration coming minimal version sort routing system would tremendously improve backbone think could done pretty small amount code providing right hooks would make easier third party developers create emberstyle router backbone third party library quite challenge right end post gathered important characteristics routers routes states router state machine transitions states asynchronous state optionally encoded url transitioned states children states large part complexity emberstyle routing comes routes minimum two callbacks associated asynchronous callback synchronous callback route activated every time url changes history readwrite interface browser history roles faq points two hooks generally two things want url changes fetch data maybe render view also maybe time generally fetching data asynchronous showing html synchronous two hooks routerjs breaks async method three async methods cover variety use cases complexity covers important use cases transitions might outofscope bb cover cases cool part single hook could split hooks plugin authors nested routes nesting routes makes easy compose nested view states also aids preserving view data state imagine route called uri route also imagine two child routes uri uri user active user navigates would nt want refetch data already got also probably would need render view one edge case router solves noted nested states likely far complicated backbone include flat route structure would keep code small right hooks would allow someone rewrite routes transition state machine well come representing many applications states router transitions truly simplify things much added bonus router also used manage state apps nt persist state url like embedded widgets whatevs since encoding state url optional ca nt create current router difficult right two main reasons current router developed different use case mind makes hooks provides bad purpose roles history router conflated think put another way backbone router characteristic emberstyle routing recent changes method attempt resolving first problem sort band aid solutions fundamental problem examples roles history think include url match algorithm history loadurl route execution history loadurl would argue router manage things easilyoverridable separate hooks willing put together poc router interest something like backbone", "num": "3653", "d": "6/2015"}, {"title": "lection id attribute", "body": "", "num": "3652", "d": "6/2015"}, {"body": "using backbone", "d": "6/2015"}, {"body": "need tell collection model class nt support using collection without setting model class", "d": "6/2015"}, {"body": "already work", "d": "6/2015"}, {"body": "removes view dom nt clear would rather removes view dom kinds changes make pull request issue", "d": "6/2015"}, {"body": "yes said would much much clearer", "d": "6/2015"}, {"body": "nt know make pull request", "d": "6/2015"}, {"body": "changed mean right jridgewell solution ca nt find pull think changed ordering collection updated little back way reconcile", "d": "6/2015"}, {"body": "move call trigger", "d": "6/2015"}, {"body": "would fail unbinds model listener trigger happens model collection alternatively could move call trigger trigger model collection directly juggling args bit align", "d": "6/2015"}, {"body": "yes use case unfortunately control flow little tricky would go one least side effects regarding moving call manually triggering sure cases users libraries might registered something get cleared triggering would get skipped personally would inline cleanup code like alternatively could update removereference unbind model events call manually take optional parameter skip clearing call twice without option", "d": "6/2015"}, {"body": "reason trying get model event part nt make sense already providing parameter collectionon remove would fail removereference unbinds model listener trigger happens model collection agh forgot fixes would acceptable think cleanup code left makes sense", "d": "6/2015"}, {"body": "listento scroll events", "d": "6/2015"}, {"body": "specifying event object works perfectly keep mind caveat scroll event sent element user scrolls different place element applies window objects also scrollable frames elements overflow css property set scroll auto element explicit height width less height width contents", "d": "6/2015"}, {"body": "please use mailing list stackoverflow gitter channel questions", "d": "6/2015"}, {"body": "code working intended docs confusingly worded meant return value given model attributes equivalent result update docs", "d": "6/2015"}, {"body": "see updated documentation however really misunderstanding moment documentation get collectionget id get model collection specified id cid passing model seems able use retrieve model collection reading code fetch model id literal string instead running issue live site case misreading backbone code currently process constructing smaller test case", "d": "6/2015"}, {"body": "grabbing model id handled first conditional ignoring call", "d": "6/2015"}, {"body": "hello constructing test case see problem code working properly thanks efforts", "d": "6/2015"}, {"body": "requiring backbone requires jquery set window var jquery ca nt detect global variable value factory function takes argument simple answer move backbone require setup also set later", "d": "6/2015"}, {"body": "oh okay thanks help", "d": "6/2015"}, {"body": "ah sorry never added let fix said loader work see example try whittle might causing referenceerror", "d": "6/2015"}, {"body": "yep works perfectly referenceerror came bad code referencing backbone without importing thanks", "d": "6/2015"}, {"body": "canonical name underscore anyways pr", "d": "6/2015"}, {"body": "sure moved", "d": "6/2015"}, {"body": "definitely weird maybe add alias deprecate existing method", "d": "6/2015"}, {"body": "relevant bit saw", "d": "6/2015"}, {"body": "mean relevant bit opening issue great pull request better always tweak code style", "d": "6/2015"}, {"body": "mapping older alias newer alias alias preferred alias longer documented", "d": "6/2015"}, {"body": "bump order remove able add though wo nt define used", "d": "6/2015"}, {"body": "cool cool", "d": "6/2015"}, {"body": "open pull", "d": "6/2015"}, {"body": "eh resolved sorry browser problem", "d": "6/2015"}, {"body": "definitely added change future feel free open pull request documentation merge", "d": "6/2015"}, {"body": "longer attach view error trying access property", "d": "6/2015"}, {"body": "thanks sent sony smartphone justin ridgewell wrote longer attach options view error render trying access ctx property reply email directly view", "d": "6/2015"}, {"body": "sure needs fixed event always passes first argument object second anything else breaking contract", "d": "6/2015"}, {"body": "hi justin odd happens model collection guess code somewhere regards john schroeder johns artisancolourcom jun pm justin ridgewell notifications githubcom wrote sure needs fixed change event always passes model first argument options object second anything else breaking contract modeltrigger change model options reply email directly view github", "d": "6/2015"}, {"body": "since model success callback executed asynchronously server responds successfully questions like better left stackoverflow though", "d": "6/2015"}, {"body": "hi jashkenas thanks lot reply question said since model id success callback executed asynchronously server responds successfully know concerns server already response client success callback method still executed understanding response code means responds successfully could please kindly help case confused much time thanks lot justin ridgewell date jashkenasbackbone cc miracleqsc subject backbone model destroy method call success callback method server response since model id success callback executed asynchronously server responds successfully questions like better left stackoverflow though reply email directly view github", "d": "6/2015"}, {"body": "examples roles history think include url match algorithm history loadurl route execution history loadurl would argue router manage things easilyoverridable separate hooks completely agree would much rather event system alerting changes url router holding onto routes detecting match would also help allowing router trigger errors etc", "d": "6/2015"}, {"body": "generally fetching data asynchronous showing html synchronous two hooks could nt async model stuff synchronous callback way often rerendering route already data need two callbacks seems like overkill backbone nt need handling fetching used ember router found massively overengineered nt think need go ahem route added bonus router also used manage state apps nt persist state url like embedded widgets whatevs url pretty poor way encode app state much better serialize cookie localstorage server depending use case backbone nt need handle think nested routes another area things get dicey pretty quickly agree common pattern nest resources general nt want go one two levels deep sure need business wiring connections disparate parts app given complications seems best book route handles pretty handily already optional syntax agree history probably nt responsible handling route callbacks fall router implement history stateless dumb router significantly decoupled rest backbone originally backbone nt even include router could probably try test plugin first even think replacing already really like see history would look nt manage callbacks", "d": "6/2015"}, {"body": "could nt async model stuff synchronous callback way often rerendering route already data need two callbacks seems like overkill backbone nt need handling fetching right backbone nt need two callbacks need handle fetching think exposing callback router calls rather inlining would take make far easier another dev make plugin implements rest complexity used ember router found massively overengineered nt think need go ahem route oh yeah sure question emberstyle routing covers lot ground given far complex backbone may late change original post rewrote would emphasize detangling current router easier create different router top rather pointing style router want build top p url pretty poor way encode app state much better serialize cookie localstorage server depending use case backbone nt need handle nt really know mean url string represents state application whether good idea router interprets string configures application corresponding state think nested routes another area things get dicey pretty quickly intended include information nested states fully describe emberstyle router know backbone would never implement smile thinking back prob nt need go much detail pretty late wrote issue sleeping general nt want go one two levels deep tangent think want go deep necessary make application current url four levels using emberstyle router get hang emberstyle routing actually even hard set reason test could probably try test plugin first even think replacing already really like see history would look nt manage callbacks work give update got one", "d": "6/2015"}, {"body": "url pretty poor way encode app state much better serialize cookie localstorage server depending use case backbone nt need handle interested kind app state mean struggling find single web app nt encode app inside url looking examples backbone site every single one works way mean state individual page part devs tend encode query params anything important enough query params gets discarded", "d": "6/2015"}, {"body": "nt much time brief alternative approaches great router plugin replaces backbonerouter fine idea go see like think overengineered routers terrible waste time sweat tears using overengineered router organizing app along lines urls brief string serialization application state paradoxically less rich htmly app better works richer featureful app worse state fits nice urls useless router organizing principle using router organize state transitions inside app fundamentally assbackwards already app state real js objects disposal serializing string state deserializing reinflating silly business worrying refetching data already access part idea backbone router drop url breadcrumb whenever application reaches state user might want bookmark go back button nothing think right model minimalist library", "d": "6/2015"}, {"body": "interested kind app state mean struggling find single web app nt encode app inside url location sure state nope url entry point application guaranteed point resource nt particularly good storing state widgets things nt urls nt storing state router jashkenas said already real js environment work current url repository resource name identifier issues resource route looks like repoissues issueid also happens slash work give update got one awesome looking forward", "d": "6/2015"}, {"body": "already app state real js objects disposal serializing string state deserializing reinflating silly business worrying refetching data already access part would discard existing objects order serialize state url routebased app organization code flow anything else pseudocode example books bookid pages pageid model page function pagehandler params options let model optionsmodel new page let view new pageview model let fetching modelisnew fetching modelset id paramspageid fetch return promiseresolve fetching gt viewrender", "d": "6/2015"}, {"body": "location sure state nope url entry point application guaranteed point resource nt particularly good storing state sounds like talking individual view state rather application state work app entirely widgetcard based approach works really well outside global components state every widget gets tossed route another page needed persist yes would likely use localstorage accomplish nt see two things incompatible", "d": "6/2015"}, {"body": "conversation router philosophy really interesting love continue maybe belongs elsewhere rather issue focus concrete changes router agree go backbone agree think backbone router pretty lightweight backbone router history extensible backbone router history currently implemented way makes easily extensible three things currently plan investigate changing expose callback executed whenever route matched rather defining inline scope expose route sorting algorithm separate method modify history solely readwrite interface browser url move features router", "d": "6/2015"}, {"body": "sidenote jmeas link code sure link tag revision line numbers master shift time make links harder follow future", "d": "6/2015"}, {"body": "sidenote jmeas link code sure link tag revision line numbers master shift time make links harder follow future good call always forget update links updated", "d": "6/2015"}, {"body": "three things currently plan investigate changing expose callback executed whenever route matched rather defining inline scope expose route sorting algorithm separate method modify history solely readwrite interface browser url move features router define either inline regular vanilla instance method router preferable nt know exposing would mean changing router ordering algorithm seems like opposite minimal router ordering one predictable order easy change order define routes changing balance code history router totally style question could nice refactor historical reason split history must logically singleton object whereas reason routers need object", "d": "6/2015"}, {"body": "define either inline regular vanilla instance method router preferable nt know exposing would mean ah sorry callback one tried include link whenever used inline posts may used term without accompanying link somewhere might like dumb nt need really follows naturally number list refactor makes reason use inscope variables callback separate method router makes easier test isolation crazy people like gives hook override explicit talking difference always ask inline ask wait check refactor first changing router ordering algorithm seems like opposite minimal router ordering one predictable order easy change order define routes know feel way people disagree whether disagree sort algorithm currently tied definition handler callback makes tough anything router without overriding code many many developers would appreciate method exposed separately nt want well ca nt stop ya mind wanders angular ember think libraries make incredibly difficult change features though one main reasons devs know use backbone customizable ask wait refactor forming strong opinion expose changing balance code history router totally style question hm interesting think analogous saying changing balance given view given model style question sure may get result one seems philosophically sound think much elegant history interface browser history api nt concern routers said succinctly think history stateless dumb jashkenas preview going soon make clearer hope possible evaluate refactor without thinking turning backbone router ember router think cleanup valuable even one intends use backbone router exact way today", "d": "6/2015"}, {"body": "sure thing happy wait see", "d": "6/2015"}, {"body": "sounds like talking individual view state rather application state work app entirely widgetcard based approach works really well thejameskyle distinction two types state distinguishes application state view state mind imo backbone none sure supporting application state way eg selection listing view possibly worth effort problem fundamentally nt handled way great discussion folks thinking yesterday well one point kept popping head able use application without even knowing address bar forwardbackward navigation adding bits straightforward encapsulable task sense liken modules talking building principals behind ampersandjs components", "d": "6/2015"}, {"body": "distinction two types state distinguishes application state view state mind imo backbone none imagine github exactly singlepage application application state would particular issue page view state would something typed new comment textarea persisted page reload github stores information different places would challenge find application make distinction application state belongs url vs view state either discarded page reload stored something like localstorage", "d": "6/2015"}, {"body": "sorry idea blank issue created", "d": "6/2015"}, {"body": "similar problem gaperton backbone marionette modelevents mapping object nt seem trigger change sync callbacks revert back backbone everything works", "d": "6/2015"}, {"body": "message maps broken code triggering b c wo nt fire event handler normal object syntax works fine spaceseparated object syntax bug", "d": "6/2015"}, {"body": "ah explains things thanks looking next backbone version bump", "d": "6/2015"}, {"body": "actually used anywhere nt work affected anything", "d": "6/2015"}, {"body": "asking space separated callback syntax used anywhere documented marionette marionettecompositeviewextend modelevents change name namechanged thatthing namechanged function thatthing function", "d": "6/2015"}, {"body": "stevewillard case concerned use code workaround javascript var events backboneevents bblistento eventslistento eventslistento function obj events typeof events object var event events bblistentocall obj event events event return model collection view router history foreach function name var type backbone name typeprototypelistento eventslistento yes used somewhere otherwise one would made comments works perfectly regular listento calls clearly reason consistent least", "d": "6/2015"}, {"body": "sure understand backbone nt use strings callbacks anywhere deals keys listeners object event names values callbacks multiple event names keys listener objects nt supported previously ca nt causing breakage understand marionette uses hood split strings listento callback separately yes used somewhere otherwise one would made comments point specific line telling broke something nt help unless track", "d": "6/2015"}, {"body": "upgraded backbone version one unit tests framework started fail one interested figured posted quite clean example comments month ago think big deal fix fine anyway got lot backbone things overridden one one less nt matter though might concerned", "d": "6/2015"}, {"body": "figured posted quite clean example comments month ago referring second form never worked literally added support morning point line test code broken ca nt see anything obvious repository linked nt time follow rabbit holes", "d": "6/2015"}, {"body": "sorry mistake looks like form working fix shortly", "d": "6/2015"}, {"body": "literally added support morning nice hear point line test code broken yes insist easy test tests related nested collection change detection broken collection several reasons changed internally modelcollection metatype definition message map used subscription turn created bug events ignored nested collection changes detected course since live bad thing spend couple minutes adding lines code trying good boy reported bug maintainers story ps helpful first comment left month ago curious", "d": "6/2015"}, {"body": "look think workarounds nt work property model method wo nt work backbone uses access property model constructor nt seem support adding properties options altogether", "d": "6/2015"}, {"body": "think workarounds nt work idattribute property excellent catch work pr addressing meantime use getter notation supply custom js class model extends backbonemodel get idattribute return id get cidprefix return c", "d": "6/2015"}, {"body": "method wo nt work backbone uses modelidattribute access property getter method accessed like normal property", "d": "6/2015"}, {"body": "beginning sound like major rewrite required backbone perhaps", "d": "6/2015"}, {"body": "beginning sound like major rewrite required backbone perhaps already support subclassing exception models think interesting someone explored static property suggestion even nt necessary two solutions original post", "d": "6/2015"}, {"body": "jridgewell many thanks quick solution", "d": "6/2015"}, {"body": "decorators mentioned thread specifically yehuda katz proposal unresolved whether would solve issue playing around proposed write decorator like example using written like javascript props tagname li classname documentrow events click icon open click buttonedit openeditdialog click buttondelete destroy class documentrow extends backboneview seems work fine decorator applied class prior class constructor executed declarative version saying class documentrow extends backboneview extend documentrowprototype tagname li classname documentrow events click icon open click buttonedit openeditdialog click buttondelete destroy actually nt tested could probably make entire backbone extend function decorator wanted static prototype props unfortunately proposal babel supports behind experimental flag people feeling adventurous possible solution", "d": "6/2015"}, {"body": "problem found answer right needed run", "d": "6/2015"}, {"body": "caeost ran issue resorted following workaround use case js var collection new backbonecollection var model collectioncreate data wait true modelvalidationerror", "d": "6/2015"}, {"body": "would nt write need know whether model set valid data set happened already match data model application member loaded login application requires able ship products need make sure real information account thus walk steps verify data ux chosen one button design advances step eg first namelast name section address section phone number section etc model filled piecemeal due one aggregate endpoint member data thus multiple views map one model model info collected steps confirmation step actually sends entire dataset backend chose control transitions steps listening change event custom event overriding set whose purpose prevent ui locking user satisfied existing data opts click next button without changing model requesting feature added something needed address purposes thanks making great library public consume looks like coffee script", "d": "6/2015"}, {"body": "custom url inside destroy method url constant base url", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"title": "closure actions used event handlers safari", "body": "chrome new closure actions used event handlers directly element throw exception safari handlebars clicking safari throws gt syntaxerror function statements must name line sure officially supported functionality though jsbins canary", "num": "11604", "d": "6/2015"}, {"title": "deprecatedlinkviewextend needs return", "body": "", "num": "11602", "d": "6/2015"}, {"title": "documentation easy understand", "body": "hardly find proper documentation online compared angular proper structure ember provided", "num": "11601", "d": "6/2015"}, {"title": "problem classnames given component template duplicates dom", "body": "see expected dom generated dom", "num": "11600", "d": "6/2015"}, {"title": "queryparams declared route nt always sticky url", "body": "jsbin access click page two get taken however access click page two get taken location always acts like first case transitions lose query params declared", "num": "11597", "d": "6/2015"}, {"title": "clear information happens jquerybootstrapdom manipulation glimmer", "body": "really crucial everyone real life prod app yet though asked many times nt heard clear statement whether rewrite bits rely directly touching dom every jquery plugin bootstrap javascript widgets etc dom events please release information people know decisions make", "num": "11596", "d": "6/2015"}, {"title": "linkto url serializes inaccurately nested routes param name", "body": "expected go subroute link actual link shows transitions manually specifying values url seems work expected", "num": "11595", "d": "6/2015"}, {"title": "bug additional attributebindings linkview work", "body": "developers wish add attributes anchor tags beyond standard set supported ember box advised approach something like approach works ember due replacement proposed fix something like seems work happy work pr get go ahead approach", "num": "11593", "d": "6/2015"}, {"title": "", "body": "updated app try latest canary appears break query params us seeing backtrace see reproduce smaller app asap", "num": "11592", "d": "6/2015"}, {"title": "delete stale branches", "body": "stale branches although major nuisance would cleaner removed easier browse list branches better cli autocompletion remote branches etc also guess nowadays people commit bit mostly work branches forks instead directly origin feel free close issue", "num": "11590", "d": "6/2015"}, {"title": "test suite ignores jshint jscs errors files", "body": "introduce jshint jscs failure files see console test suite still pass noticed jshint failure", "num": "11574", "d": "6/2015"}, {"title": "way render component instance", "body": "possible achieve something like ca nt find documentation used possible using views", "num": "11573", "d": "6/2015"}, {"title": "component attributes shadow properties", "body": "jsbin summary component takes property changes say component template see original value", "num": "11571", "d": "6/2015"}, {"title": "docsguides component", "body": "ran case using really useful recently however nt know existed implemented quite bit code bundling logic multiple component one great feature really part guide either component section rendering helpers article think feature available since ember since emberview friends deprecated component even useful important example plans writing guide core team make something", "num": "11568", "d": "6/2015"}, {"title": "arrangedcontent readd item even item removed source array", "body": "make change sortproperty arraycontroller block remove modified item source array calling item reappear arraycontroller even though longer source array link jsbin following example songs emberobjectcreate tracknumber title obladi oblada emberobjectcreate tracknumber title back ussr emberobjectcreate tracknumber title glass onion songscontroller emberarraycontrollercreate model songs sortproperties tracknumber sortascending true emberbeginpropertychanges var backinussr songs set something fire tracknumber change event backinussrset remove item collection songsremoveat cool array controller heard change correctly removed item consolelog removing back ussr controller songscontrollerget length items expected going fire pending changes emberendpropertychanges consolelog calling endpropertychanges woah item reappeared arrangedcontent array nt happened consolelog songscontroller length songscontrollerget length consolelog songs length songslength ussr appeared array controller even though original array consolelog last item songscontroller songscontrollerget lastobjecttitle back ussr happening two reasons firstly property gets changed change event fired queued currently deferring property change events due call item removed source list code runs however removing observer remove queued event array still going hear property change call code runs contentitemsortpropertydidchange item var arrangedcontent get arrangedcontent var oldindex arrangedcontentindexof item var leftitem arrangedcontentobjectat oldindex var rightitem arrangedcontentobjectat oldindex var leftresult leftitem amp amp thisorderby item leftitem var rightresult rightitem amp amp thisorderby item rightitem means item nt even arrangedcontent anymore code continues anyway see item moved item found sorted element list actually gets inserted thus reappearing arrangedcontent array proposed fixes make calls remove even calls currently queued believe would safest change object nt expect hear changes stopped listening object particular case simply early function adding following line", "num": "11567", "d": "6/2015"}, {"title": "deprecate immediateobserver", "body": "nothing switch observer", "num": "11566", "d": "6/2015"}, {"title": "ensure beforeobserver deprecated", "body": "internals refer beforeobserver entirely removed", "num": "11565", "d": "6/2015"}, {"title": "chains uncaught typeerror read property willchange undefined", "body": "seeing error added debugger statement catch error happens problem new logic try debug stefanpenner", "num": "11564", "d": "6/2015"}, {"title": "qp transition beforemodel application route throws error", "body": "reproduction app checking data see location user operating know query param provided call order force user location logic added promise chain part noticing error shown jsbin interesting thing trying recreate promise chain qp set second transition fire correct query param user wo nt notice failure", "num": "11563", "d": "6/2015"}, {"title": "acceptance testing fillin helper support modals", "body": "seems fillin input possible opened modal test allow add project project system function assert assertexpect authenticatesession visit projects testhelperhandlefindall workspace testhelperhandlefindall project andthen function assertequal find addprojectbutton length page contains add project button var modalclick find addprojectbutton click addprojectbutton waitformodalopen modalclick andthen function assertequal find modalfade length opened modal modalfade focus function consolelog see focus event triggered fillin projectsystemselect project system click buttonprimary fillin projectinput new project andthen function assertequal find modalfade length error", "num": "11562", "d": "6/2015"}, {"title": "regression ember initial literal values component attributes updated", "body": "see jsbin pass literal attribute value component update mycomponent first work updated component template second works expected migrating jsbin", "num": "11559", "d": "6/2015"}, {"title": "test component yield block", "body": "currently tried ember get compiled html inputted component via yield block expression see test import moduleforcomponent test emberqunit moduleforcomponent protablink unit component pro tab link specify units required test needs component foo helper bar unit true test renders function assert assertexpect creates component instance var component thissubject template emberhandlebarscompile hello world consolelog component assertequal componentstate prerender var component thisappend emberrun function componentset isopen true consolelog component consolelog componenthtml assertequal componentstate indom assertok componentisopen template reason tag passed yield component get working also missing docs present", "num": "11557", "d": "6/2015"}, {"title": "view path tagname nt update classnamebindings initial load", "body": "view defined like toggle class element appears set instantiated updated fact subsequent changes bound property wondering missing something js import ember ember export default emberviewextend tagname path classnamebindings active active embercomputedalias controlleractive toggleactive function var ctrl thisget controller didinsertelement see example repo", "num": "11556", "d": "6/2015"}, {"title": "linkto cause infinite rendering loop", "body": "nt really stand going working krisselden today listview glimmer ran issue helper causing infinite render loop noticed periodically see errors removing list resolved issue kris saw stack trace noted something setstate willrender sorry vague report nt quite get best recreate jsbin issue may also related", "num": "11555", "d": "6/2015"}, {"title": "regression rerender newlyadded subviews nondirty parent components wrong parentview", "body": "appears bug relative newlyadded items loop get set template view rather component appear template js bin demonstrating issue essentially code like child components parentview rerender new appears parent view whatever view houses template parentcomponent", "num": "11554", "d": "6/2015"}, {"title": "input type returns error", "body": "using emberjs using shows command supported error guess result type set input element rendered possible", "num": "11553", "d": "6/2015"}, {"title": "regression itemcontroller taken account anymore", "body": "emberjs itemcontroller taken account anymore occurs whether itemcontroller set template loop see js bins bellow arraycontroller like js bins emberjs emberjs", "num": "11552", "d": "6/2015"}, {"title": "use multiple action input helper", "body": "input name nm action oknm focusout also want define action focusin", "num": "11551", "d": "6/2015"}, {"title": "regression fails duplicate values", "body": "might duplicate landed yet", "num": "11549", "d": "6/2015"}, {"title": "missing emberdata url conventions hyphenated model names", "body": "documentation emberdata url conventions examples singleworded model names example multiworded hyphenated names like adminuserprofile afaik url camelcased eg", "num": "11548", "d": "6/2015"}, {"title": "documentation", "body": "ember guides include", "num": "11546", "d": "6/2015"}, {"title": "component computed properties get clobbered", "body": "sure exactly going called look template logs jsbin property array array value string clobbering ideas stefanpenner reporting behavior seeing addon running canary", "num": "11542", "d": "6/2015"}, {"title": "emberset chaining removal needs blog posted", "body": "cc mixonic cover", "num": "11541", "d": "6/2015"}, {"title": "firing run loop mousemove unnecessary", "body": "looks like new run loop kicked every time mouse moves really necessary stefanpenner suggested might instead components optin needing instead assuming need run loop mouse movement", "num": "11540", "d": "6/2015"}, {"title": "ember willdestroyelement never called", "body": "know view deprecated shouldnt still work anyway jsbin showing issue change see work", "num": "11539", "d": "6/2015"}, {"title": "possible glimmer regression accessing component array attribute", "body": "summary array passed parameter component wrapped object seems behave differently beta canary explanation given following handlebars html model item item additem itemsmodel button action additem gt add item behavior following green added list js appapplicationroute emberrouteextend model function return red yellow blue appadditemcomponent embercomponentextend actions additem function thisitemsaddobject green example beta canary behavior changing action function following shows array wrapped presumably glimmer example", "num": "11538", "d": "6/2015"}, {"title": "setproperties pass attrs expected", "body": "wrapping component yields component think form control group table cell component make flexible possible pass property component set works fine strings objects mywrapper component correct value see template passed property set transformed see consolelog transformation happens expected behavior approach considered antipattern workaround mean", "num": "11537", "d": "6/2015"}, {"title": "currentview containerview set properly", "body": "applicationis utilizing emberanimation addon upgrade ember break library reason animateout never triggered reason seems come following code snippet emberanimation observe changes property keep tracking newold view swap user step routes meantime limited emberanimation containerview whole since hook well works ember containerview never set issue seems coming specific commit feb commit removed changed emberjspackagesemberroutinghtmlbarslibhelpersoutletjs later view class got created method find streambindings attr outlet view seems reason currentview never set properly wonder bug reason also looked documentation containerview still talks attribute make believe silently deprecated hope chased right path attribute observe instead may separate question noticed file got removed came ember deprecating view general however heavy relied original routecontrollerview structure may still need rely emberview addon completely switch routable components could one provide best practice move forward thanks", "num": "11534", "d": "6/2015"}, {"title": "queryparams linktos update anymore routeurl change", "body": "please consider see change route nomodel model queryparams route refresh show new route still href nomodel previous version ember would update based current pageurl", "num": "11533", "d": "6/2015"}, {"title": "willrender called correctly", "body": "nested components demo jsbin output init viewport render viewport init panel render panel insert panel insert viewport container rendering fired early nt know intentional expecting init viewport init panel render viewport render panel insert panel insert viewport basically correct willrender fired right rendering component", "num": "11532", "d": "6/2015"}, {"title": "unable define service function without warningserrors thrown", "body": "want expose global variable service like angular exposes window improve testability code setting middle test obvious disastrous impacts since ember services required extensions ie set true like register window variable service without worrying potential deprecations recommendations", "num": "11531", "d": "6/2015"}, {"title": "something cause view destroyedrecreated instead updated", "body": "trying migrate seems like using deprecated helper inside component block leads view controller property set component instead right controller seems like underlying cause instance view first time property changes view view simply updated destroyed recreated top component ancestor controller see jsbin illustrate fact view destroyedrecreated instead updated", "num": "11530", "d": "6/2015"}, {"title": "passed actions component override methods", "body": "recently upgraded ember created component component looks something like use component like passing action name method component overwrites component method method component never called desired behavior seems like bad idea consumers component modify behavior component without component knowing", "num": "11527", "d": "6/2015"}, {"title": "bug dupe items arrays nt render properly helper", "body": "chatting krisselden slack array dupe primitive values helper render numbers key identity item item letters key identity item item dedupe arrays works failing jsbin get null reference following error obvious use case comes mind spread sheet type app columns number arrays want use helper template render data obvious workaround select different key type numbers key index item item letters key index item item given default behavior believe nuance behavior might lost users serious dupe primitive value shows somewhere deep array problems much likely scenario think known issue posting case others stumble across obvious bug looking explanation see creating failing test case soon figure write ember identity helper implemented like function identity item let key let type typeof item type string type number key item else key guidfor item return key", "num": "11524", "d": "6/2015"}, {"title": "able create block helper emberjs", "body": "want create linkto dynamic route dynamic segments dont see way achieve", "num": "11520", "d": "6/2015"}, {"title": "passing block param component modified twice single render", "body": "sure related experiencing similar issue able reproduce issue jsbin first two uses editablething work fine last pass param via yield starts unending warning loop fair warning open chrome task manager kill runaway process click third edit button bug misusemisunderstanding block params either way would love understand better", "num": "11519", "d": "6/2015"}, {"title": "cleanup tag missing contributing guide", "body": "", "num": "11518", "d": "6/2015"}, {"title": "calling rerender views call render", "body": "view implements custom rendering specifying function called failing jsbin demo", "num": "11515", "d": "6/2015"}, {"title": "array observer triggering change", "body": "created jsbin demonstrate case link trying modify array triggers set whole new array whilst modifying existing array trigger anything wrong thanks edit updated ember version saw version", "num": "11514", "d": "6/2015"}, {"title": "components nt see updates external bound properties", "body": "given following template gets correct value correctly setup change behaves properly changes without changing instances nt get update case working looks like sure matters prevent attaching using custom", "num": "11508", "d": "6/2015"}, {"title": "add measure hook", "body": "add measure hook corresponds didrender silences deprecation notice scheduling revalidation render currently cause revalidation render render get deprecation rendering implying support eventually go away still exists use case need render something different based measurements rendered far example would increase height wanted add additional subtree like listview", "num": "11506", "d": "6/2015"}, {"title": "wrong view hook deprecation render revalidation render", "body": "change state render deprecation message output tells wrong view triggered hook hard coded didinsertelement", "num": "11505", "d": "6/2015"}, {"title": "regression typeerror read property key null advancetokey", "body": "yesterday upgraded w issue today upgraded get error occurs transition detail route parent simple loop like special sort mixin rolls sorts special attr realize full jsbin useful see reproduce clarity meantime wanted get quick others might issue", "num": "11504", "d": "6/2015"}, {"title": "uncaught error route named", "body": "repo functions properly found changing version breaks app error get tests run app load unsure go debugging issue", "num": "11503", "d": "6/2015"}, {"title": "component creation performance slower", "body": "performance initial component render times seems significantly slower ember ember ember ember ember ember", "num": "11502", "d": "6/2015"}, {"title": "possible memory leak", "body": "think found memory leak navigate taking heap profile time memory usage steadily climbs seems getting pretty high retained size", "num": "11501", "d": "6/2015"}, {"title": "arrayunshift throwing error init uncaught typeerror read property key null", "body": "hello simply formatting array rendered helper getting error add element array using ember embercli template controller stack trace uncaught typeerror read property key null advancetokey anonymous function anonymous function foreach eachhelper enifedcompute streamvalue invokehelper anonymous function renderandcleanup hostblock continueblock block alwaysdirtyvisitorblock renderresultpopulatenodes renderresultrender render currentmorph anonymous function anonymous function foreach eachhelper enifedcompute streamvalue invokehelper anonymous function renderandcleanup hostblock continueblock block alwaysdirtyvisitorblock renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block keywordsyield handlekeyword handleredirect inline alwaysdirtyvisitorcontent renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block anonymous function instrument viewnodemanagerrender exportsdefaultrender handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block anonymous function instrument viewnodemanagerrender exportsdefaultrender handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent anonymous function dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith validatechildmorphs dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith validatechildmorphs handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent anonymous function dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith renderresultrevalidate rendererrevalidatetoplevelview emberviewsviewscoreviewdefaultextendrevalidate queueinvoke queueflush deferredactionqueuesflush backburnerend backburnerrun run ember data lib system adapter adapterextendajaxemberrsvppromisehashsuccess jquerycallbacksfire jquerycallbacksselffirewith done jqueryajaxtransportsendcallback", "num": "11500", "d": "6/2015"}, {"title": "viewrerender nt work", "body": "updating new version changing templates views nt seem work anymore still works", "num": "11499", "d": "6/2015"}, {"title": "called model id serializing url", "body": "model id includes slash character ember still serialize asis dynamic route url resulting broken url example jsbin tested ember canary example router approutermap function thisroute user path users userid template linkto user abcdef user nonstandard id linkto following link changes url usersabcdef user reloads page results error seems like id serialized url changes usersabc", "num": "11497", "d": "6/2015"}, {"title": "size increase built emberjs file size jun", "body": "created chart currently tracks size built file shows june got merged file size increased kb kb similar bump happened also file size would good check way avoid undo rwjblue mixonic", "num": "11494", "d": "6/2015"}, {"title": "property modified inside didinsertelement hook deprecation warnings", "body": "upgrading ember data seeing lot warnings however hooks read properties set jquery stuff see message even none called else might cause also nt deprecation guide", "num": "11493", "d": "6/2015"}, {"title": "framework deprecations userland deprecations", "body": "really strive make distinction deprecations caused code written user app vs code exists framework addon external library ember data otherwise lot noise clear call action user example take ember data deprecation deprecation default behavior shouldbackgroundreloadall change ember data always return false least one productrelation record store would like preserve current behavior please override shouldreloadall adapter application return true good know something directly act upon unless want monkey patch ember data also user experience around deprecation notices website quite confusing page prominent reference like one open secrets insiders know hostile new comers second useful page totally divorced guides separate deprecations page yet none guides obvious deprecations navigation", "num": "11492", "d": "6/2015"}, {"title": "updating bound property component triggers observers bound properties component", "body": "component several bound properties controller also observers properties inside component properties updated controller observers bound properties fired component twice example b bound properties controller c internal property component", "num": "11491", "d": "6/2015"}, {"title": "error read property match null inside fetchsourcemap", "body": "tried upgrading ember errors thrown outside expected deprecation warnings particular following occurring stepping debugger ends null fetchsourcemap function stackstr var self thisget embercliconfig amp amp thisget embercliconfigenvironment development return thisget sourcemap map stackstr function mapped mapped amp amp mappedlength gt var source mappedfind function item itemsource null return itemsourcematch new regexp selfget embercliconfigmoduleprefix source sourcefound true else source mappedget firstobject sourcefound false return source else return rsvpresolve null emberinspector versions using someone point right direction happy debug able figure part application code could causing issue thank", "num": "11490", "d": "6/2015"}, {"title": "containerview children fire observers creation", "body": "containerview child views firing observers parentview property upon creation working observers nt fire observer triggers alert upon startup", "num": "11489", "d": "6/2015"}, {"title": "isany companions addons", "body": "deprecated favor works expected prototype extensions turned however addons seems way access missing something additionally nt references methods docs", "num": "11488", "d": "6/2015"}, {"title": "ca nt use underscore route name", "body": "ember nt render template route underscore name replacing hyphen makes work ember inspector shows proper current route nt get rendered using emberjs stable", "num": "11487", "d": "6/2015"}, {"title": "ember add classes root view", "body": "following way style root emberview app ember views deprecated tried follow deprecation guide migrate using applicationview using component new way equivalent old one extra view element added expected structure first jsbin actual structure second jsbin migrate case ember", "num": "11486", "d": "6/2015"}, {"title": "remove bound attribute setting null firefox", "body": "regression appeared ember prevents remove bound attribute element setting property back bound attribute element using input helper initial value expected element attribute setting property another value correctly adds attribute element correct value however setting property back remove attribute expected instead set value bug appeared ember still present today affects firefox tested version chromium affected tested version ember setting property null correctly removes attribute js bin testcase", "num": "11485", "d": "6/2015"}, {"title": "action helper nt allow dynamic actions name ember", "body": "update ember problem dynamic action name component template error console specified quoteless path action helper resolve action name string", "num": "11483", "d": "6/2015"}, {"title": "error installing emberjs", "body": "interested ember trying install get following error every time using mac osx npm install g embercli npm err darwin npm err argv node usrlocalbinnpm install g embercli npm err node npm err npm npm err code npm err found expresss npm err npm err expresss npm registry npm err bug author publish use name npm err specified dependency embercli npm err npm err note also install npm err tarball folder http url git url tried many different things none worked including downgrading node version way nt express instead expresss", "num": "11482", "d": "6/2015"}, {"title": "ember test suites spew warnings", "body": "warning using without specifying key lead unusual behavior please specify identifies unique value item iterated eg ensure test exists tests warning occurs ensure occurrences fixed tested", "num": "11481", "d": "6/2015"}, {"title": "regression views nt use attributebindings", "body": "hello using attributebindings id order assign id route view way namespace css route stopped working since components understand reasons valid routes view since written templates folliwing right way really regression please feel free replace title thanks", "num": "11480", "d": "6/2015"}, {"title": "enrich controllers actions", "body": "app use crud heavily want save delete actions controllers crudcontroller initializer works fine feels wrong abuse private property actions reason private better way", "num": "11477", "d": "6/2015"}, {"title": "context within", "body": "problems following fetch data store add variable controller whilst template component passing context name player rendered template following card component template looks like short example btw get rendered list yes apparently know many elements without name filled could emberdata issue ed uptodateready", "num": "11475", "d": "6/2015"}, {"title": "inconsistent behaviour helper", "body": "ember component inside helper component rerendered condition change colors color mycomponent datacolor example entire block rerendered seems becomes synonim expected behavior", "num": "11473", "d": "6/2015"}, {"title": "beta channel compatible ember data beta channel", "body": "stefanpenner went tear last night removing stuff beta still relied upon ember data nt time dig specifics try circle back around", "num": "11472", "d": "6/2015"}, {"title": "href property linkcomponentlinkview recomputed promise resolves linkto", "body": "run issue using emberdata association receives promise resolves model ordinarily link able render successfully unresolved object already property fetched id however implemented return property href computes model resolved ca nt find property looking seems link recomputed model resolving really using proxy output changing bin illustrates issue ember also present ember", "num": "11471", "d": "6/2015"}, {"title": "allowing rejected promises tests", "body": "writing tests ember simple auth want test case authenticator rejects authentication therefor stub method return rejected promise problem ist immediately causes run fails test nt see clean way disable behavior allows specific promise rejection working solution came js var originalpromiseerror beforeeach function originalpromiseerror emberrsvppromiseprototypeonerror emberrsvppromiseprototypeonerror emberk sinonstub authenticator authenticate returns emberrsvpreject error aftereach function emberrsvppromiseprototypeonerror originalpromiseerror obviously sth want uses private api think would great way using unhandled promise rejections tests would likely use applications assume addons esa might need sth like", "num": "11469", "d": "6/2015"}, {"title": "rip dom related hacks", "body": "", "num": "11467", "d": "6/2015"}, {"title": "deprecate arrayproxy", "body": "", "num": "11457", "d": "6/2015"}, {"title": "need deprecated immediateobserver", "body": "", "num": "11453", "d": "6/2015"}, {"title": "need deprecated freezable", "body": "", "num": "11452", "d": "6/2015"}, {"title": "need deprecate enumerable", "body": "many methods appear documented deprecated mixinsenumerablejs", "num": "11451", "d": "6/2015"}, {"title": "need deprecate arraycontroller", "body": "cc mixonic", "num": "11450", "d": "6/2015"}, {"title": "instance initializers container lookup yield undefined beta", "body": "appinstanceinitalizersessionjs var container instancecontainer registry instanceregistry consolelog service containerlookup service store consolelog container containerlookup controller sessions currently displays application main undefined designed lookup controllers anymore designed lookup controllers initializers", "num": "11444", "d": "6/2015"}, {"title": "setupcontroller nt fire model refresh", "body": "ember updating route model route example via queries setupcontroller nt call coffeescript model return ember getjson json gt obj name val json storepushmany namecamelize val obj namecamelize storeall namecamelize set dict obj return storeall project setupcontroller controller model", "num": "11442", "d": "6/2015"}, {"title": "newly generated embercli app issuing reduce computed depreciation warning", "body": "created demo repo issue went updated ember ember data nothing else got following deprecation warning cc rwjblue", "num": "11435", "d": "6/2015"}, {"title": "collectionview fails init", "body": "error says check points following lines code childviewsupportmixin init function thissuperapply arguments know deprecated least work correctly", "num": "11434", "d": "6/2015"}, {"title": "deprecate renderbuffer", "body": "renderbuffer deprecated", "num": "11431", "d": "6/2015"}, {"title": "broken", "body": "looks like nt work ember looks like fixed definitely broken jsbin broken behavior jsbin behavior working", "num": "11430", "d": "6/2015"}, {"title": "emberobjectcontroller deprecation error trace useful", "body": "process upgrading removed object controllers know warning still happen using modelproperty however combed code ca nt figure happening trace seems point internal ember code know one errors application controller nt anything application template besides outlet get deprecation warning even remove outlet however leave outlet index route seems weird ember pro yet line trace exportsdefaultobjectproxydefaultextendinit superwrapper init new class functionclassmixinpropscreate instantiate lookup objectcontainerlookup emberobjectdefaultextendcontrollerfor emberobjectdefaultextendsetup", "num": "11429", "d": "6/2015"}, {"title": "transitioning error page yields unuseddummyerrorpath url", "body": "application catch errors subroute parent route transitioning error subroute get weird structured url coming changeleave handling transition wrong way could find documentation", "num": "11427", "d": "6/2015"}, {"title": "ember freezes transitioning amp amp func accesses collection model", "body": "believe found bug canary introduced replacing model transitioning amp amp canary freeze route accesses collection jsbin wcanary jsbin jsbin freeze occur subroutes access parent model children ember jsbin jsbin deprecation thrown leads believe something causing infinite loop continuously invalidating revalidating view rendering intentional fact regression interested writing failing test amp trying fix already taken cursory look objects methods hinted nothing jumped would really appreciate someone point right direction reason", "num": "11424", "d": "6/2015"}, {"title": "use action helper grab route action", "body": "working new helper toplevel template seems nt possible grab bind action route given controllers sticking around would make sense implement action lookup would first look controller route mirror behavior old string style example issue cc mixonic", "num": "11420", "d": "6/2015"}, {"title": "blank render ie using attributebindings", "body": "report found solution problem stumbled ie fails offending line removing last fixes issue browser breaks code report maybe fix nt crash ie thanks hard work", "num": "11417", "d": "6/2015"}, {"title": "select view work properly initialisation", "body": "select view show prompte message value null instead last value content shown", "num": "11404", "d": "6/2015"}, {"title": "inside collectionview returns ember", "body": "upgrading ember noticed nt working digging code noticed returns even though component call tried using seem return", "num": "11402", "d": "6/2015"}, {"title": "emberlookuplocationorigin undefined old ie versions", "body": "tested minimal example steps reproduce open minimal example chrome firefox safari observe origin displayed open minimal example older observe origin blank problem despite bunch polyfills old browsersie defined location object used ember nt polyfilled directly solution propose object placed polyfills like getorigin run access directly", "num": "11398", "d": "6/2015"}, {"title": "binding style attributes warning", "body": "unfortunately nt seem way disable warning link given code escapecss given use need calculated rgb value return htmlsafe thanks", "num": "11395", "d": "6/2015"}, {"title": "linkto datasomeattr value longer works", "body": "guides allow data attributes added linkto helper suggests reopening emberview functionality longer works likely related jsbins ps thanks jmurphyau used jsbins", "num": "11391", "d": "6/2015"}, {"title": "linkto class updating", "body": "contents linkto updated class passed nt built jsbin demonstrates issue fails works", "num": "11390", "d": "6/2015"}, {"title": "explicitly setting component property via attribute including causes immutable", "body": "affects steps reproduce included example data reference parentheses create component attribute rely attribute way contents component template eg use swap content depending value output content set explicitly via attribute including component try mutate property via action expected results property would mutated component visible ember inspector dom would update accordingly actual results property mutates component visible ember inspector well dom nt reflect new property made jsbin demonstrating behaviour functions fine remove explicit declaration property including component remove template html could easily something added missing however", "num": "11388", "d": "6/2015"}, {"title": "send event destroy emberobject destroyed", "body": "already allow use case nt like call mixin", "num": "11385", "d": "6/2015"}, {"title": "array booleans nt work input type checkbox binding", "body": "possibly cantwontfix unsure full reproduction", "num": "11382", "d": "6/2015"}, {"title": "beta canary computed array", "body": "please see use pattern wrap proxy items array works great beta fails jsbin fails means eachelse showing removal item weird error within ember happens line", "num": "11380", "d": "6/2015"}, {"title": "test runner working phantomjs", "body": "could something specific machine tried run ember tests via command line getting error message emberjs git master npm test ember pretest userstomdalecodeemberjs ember build version building babel note code generator deoptimised styling embertestsroutingbasictestjs exceeds max built project successfully stored dist ember test userstomdalecodeemberjs binruntestsjs running phantomjs bowercomponentsqunitphantomrunnerrunnerjs disttestsindexhtml packagecontainer unable access network fail downgraded phantomjs everything worked expected may fixed upgrading dependency nt investigated", "num": "11378", "d": "6/2015"}, {"title": "deprecate views addonize remove core", "body": "quest issue tracking process removing views ember x ember following apis deprecated x x x using view x using except internals ember using warn become component x ember following apis removed ember x x x using view x ember become component instead view x addon released called latest x provides x toggles private flag enables x provides toggles private flag x provides documentation updates need happen deprecation guide views deprecation guide select since select removed alternative existing addons suggested review guides remove view documentation select documentation", "num": "11377", "d": "6/2015"}, {"title": "error currentstate property component", "body": "ember component property method call property causes following error see extract documentation specified private property appears used internally code ref", "num": "11374", "d": "6/2015"}, {"title": "update eachin", "body": "use shoulddisplay helper function use use instead prevent deopt", "num": "11370", "d": "6/2015"}, {"title": "input helper nt let set list attribute", "body": "tested log code edit forgot tell breaks page loaded", "num": "11364", "d": "6/2015"}, {"title": "ember rendering polymer elements", "body": "ember works polymer polymer elements render placed inside indexhtml inside route like applicationhbs render well big problem tags image explain whats happening inside indexhtml element rendered content going right place inside topbar div content go applicationhbs content doenst go right place somehow related ember rendering templates use console insert element jquery works saw article ember web components uses tag insertion point work would good ember working polymer way works", "num": "11361", "d": "6/2015"}, {"title": "linkto support custom data attributes", "body": "would like able add whatever attributes want links like expected output cc nathanhammond", "num": "11358", "d": "6/2015"}, {"title": "component instances isolating model correctly", "body": "use case follows allow users select number widgets added workflow may add multiple widgets kind would different content associated technical standpoint created collectionview also tried viewcontainer keep widgets together give simple way quickly addremove widgets screen user selects widget create model widget associated new instance widget component also tried using views add newly created component collectionview renders screen expectation instance component create copy model manipulate independently however create widget twice assigning two different instances model end showing data code example click button type something input box shows click button text first input box shows second one typing either box update text tested ember jsfiddle bug implementing something incorrectly thanks roy hello lt button type button id btncreateivr action createivraction gt create lt button gt lt hr gt view appcontainerview lt div gt ivrsay component lt div gt log model input type text placeholder enter text valuetext", "num": "11356", "d": "6/2015"}, {"title": "inherit view action helper custom component", "body": "like create button component make easy manage button loading states however use component view actions trigger expected need enable actions component ones view without nest template div angular replace true works charm", "num": "11355", "d": "6/2015"}, {"title": "components nt isolate properties", "body": "hi developing addon faced problem two components one used container one item item component hook pushes kinda decorated item container component items property container component also initialize jquery logic received items item components problem put container components page second container component placed get items property contains items first container component tried run master result created jsbin illustrate see", "num": "11354", "d": "6/2015"}, {"title": "extending view component breaks template lookup", "body": "idea correct title basically broken beta canary realize nt greatest practice probably pretty common nt break reproduction", "num": "11351", "d": "6/2015"}, {"title": "shadowing inherited properties nt work", "body": "js var parent emberobjectextend age var child parentextend age undefined childcreate get age demo believe solution simple accurately since typically fast could use sentinel value cc jiahanwang", "num": "11350", "d": "6/2015"}, {"title": "glimmer binding issue", "body": "sure issue difference behaviour nt aware sorry bad title preglimmer binding works glimmer binding nt work", "num": "11345", "d": "6/2015"}, {"title": "yielded component action used component block", "body": "using ember beta trying yield action closure call inside component block causes compile error hbs apptemplatescomponentsuipopoverhbs yield action toggleisopen apptemplatesanythinghbs uipopover toggleisopen uipopover", "num": "11344", "d": "6/2015"}, {"title": "key allow integers", "body": "work returns integer", "num": "11343", "d": "6/2015"}, {"title": "componentnodemanagerrerender nt use renderenvchildwithview", "body": "causes issues later steps something calls longer exists", "num": "11340", "d": "6/2015"}, {"title": "deprecate without key specified", "body": "default key confusing deprecate usage keyless", "num": "11337", "d": "6/2015"}, {"title": "error provided unique", "body": "using value error warn given following demo", "num": "11336", "d": "6/2015"}, {"title": "emberjscom search feature broken context guides", "body": "reproduce navigate type test text field enter url updates reflect query nothing happens page following error displays developer console search still appears working least areas emberjscom great able search within guides", "num": "11335", "d": "6/2015"}, {"title": "embercomputed cached accessed nested set", "body": "see believe property cached called instance appfoo created", "num": "11334", "d": "6/2015"}, {"title": "embercomponent destroy nt tear properties", "body": "property maintained component destroyed currently clearing think torn destroy", "num": "11332", "d": "6/2015"}, {"title": "application template wo nt render using pods structure", "body": "moved application template route env config following something wrong application route firing tried console logging beforemodel hook template nt render therefore app nt render help would appreciated thanks", "num": "11331", "d": "6/2015"}, {"title": "ember chai expect unusable", "body": "simple unit tests timing little investigation found ember bad interactions chai javascript consoletime expect var lt expect model tobeok consoletimeend expect expect consoletime assert var lt assertok model consoletimeend assert assert anyone else experienced something like", "num": "11327", "d": "6/2015"}, {"title": "textfieldcomponent resolver issue", "body": "use default globals resolver app issue trying use helper app upgraded apparently default component name resolves defined app spoke rwjblue slack agreed bug looked", "num": "11326", "d": "6/2015"}, {"title": "glimmer view lifecycle hooks incorrectly invoked server rendering", "body": "crossreferencing since would fixed ember since glimmer hooks invoked fastboot visiting url", "num": "11325", "d": "6/2015"}, {"title": "uncaught error assertion failed expected component chosenselect resolve embercomponent instead subclass emberselect", "body": "getting error extending default emberview big deal made embercomponent updated lines code want extend emberselect built components ie embertextarea right technique thanks help", "num": "11324", "d": "6/2015"}, {"title": "unable override model hook error substate route", "body": "minimal example using also tested unable override hook model reference also null understand design perspective maybe ember nt allow hook overridden substate case assertion point devs right direction took figure hook nt respected", "num": "11321", "d": "6/2015"}, {"title": "ca nt look template named main", "body": "process upgrading ran trouble toplevel route called main use wrap everything except user onboarding different look nt want share layoutlevel template rest application ember main template skipped see console message standalone tests renaming template associated route etc maim solved issue jsbins illustrating problem template called template called", "num": "11319", "d": "6/2015"}, {"title": "odd behavior historyback ember app using replacewith running iframe ff", "body": "ember app running iframe page link page b page b link page c implemented using route replacewith b remain history stack page c link invokes return page return page firefox reloading page iframe reason reloading page behavior observed chrome behavior also occur unless app running iframe app routerjs var router emberrouterextend location hash routermap function abcsplit foreach x gt thisroute x export default router aroutejs export default emberrouteextend actions b function thistransitionto b atemplatejs broutejs import ember ember export default emberrouteextend actions link function thisreplacewith c btemplatejs b croutejs export default emberrouteextend actions back function historyback ctemplatehbs c change b c everything works fine reload occurs viable solution since browser back button must also take user back c using change easily problem occur reason think firefox might reloading page trying return due aggressive cache management fact problem wonder way tell firefox relax take pages back history cache instead going back server fyi fresh little ember app running latest versions everything stack reproduce clone repo ideas appreciated", "num": "11318", "d": "6/2015"}, {"title": "ember packages include dir", "body": "disclaimer use package found automated npm packages downloading npm packages commonly include directories directories sizes mib mib per package include duplicate copies scripts suspect actually needed distribution suspect directories grow time release release seems common problem packages hence reporting list packages may incomplete directory size bytes found dir packages dir packages could", "num": "11316", "d": "6/2015"}, {"body": "xtian behavior emergent really intended api would like introduce something called kabob event listeners near term would look like needs rfc implementation though immediate case suggest using combination element space action helper closure action example alternatively behavior slightly different similar keep using element actions", "d": "6/2015"}, {"body": "ok good know", "d": "6/2015"}, {"body": "confirm canary also fails", "d": "6/2015"}, {"body": "embercanary get seems ember trying set observer see", "d": "6/2015"}, {"body": "please release information people know decisions make nt documented nothing changed maybe talking two different things could enumerate specific concerns would gladly respond note discourse may also better venue use description", "d": "6/2015"}, {"body": "specific concerns manipulate real dom bootstrap many jquery plugins use direct dom manipulation keep using introduction virtual dom analogous react example people say react broadly speaking nt manipulate hand dom react created kosher create empty react populate hand even okay modify properties reactrendered element long nt later try change properties react causing react perform dom updates move element react may look get confused ca nt find means cantshould nt dom manipulation never seen statement dom events firing dom events ember still virtual dom going get way many people going wonder thing", "d": "6/2015"}, {"body": "nt documented nothing changed agreed used manipulating dom triggeringhandling events via jquery plugin bootstrap js via native js methods components absolutely still work prior versions specific example please share general ember differ capability", "d": "6/2015"}, {"body": "manipulate real dom yes prior ember versions manipulate dom components view hook dom events firing dom events ember still yes virtual dom going get way virtual dom smilecat", "d": "6/2015"}, {"body": "used manipulating dom triggeringhandling events via jquery plugin bootstrap js via native js methods components absolutely still work prior versions great know thank run problems real examples introducing glimmer share", "d": "6/2015"}, {"body": "keep using introduction virtual dom yup reasonable worked continue work let share additional information may help fill missing pieces reason many incorrectly refer glimmer virtualdom implementation believe confusion arises somewhat popular incorrect description concept glimmer react share virtualdom rather diffing detect work needs keep dom presentation insync glimmer react implementing diffing turns diffing two different things glimmer diffs data powers templates given following template hbs title static text glimmer template rerendered diff input data template uses case compares data title last known data data nt change nothing happens change glimmer performs lowest cost transform possible case something like react similar component entire component component tree would rerendered produces new tree virtual dom nodes tree virtualdom nodes diffed last tree virtualdom nodes changes detected react decides operations need applied real dom bring back sync tl dr react diffs virtualdom nodes glimmer diffs data ultimately though ember react provide correct lifecycle hooks didrender inform manipulateaugmentdecorate dom infact true start addingremoving nodes managed either framework strange things start happen example given following template hbs books book bookname using jquery begin add remove ember react wont past get along well summary reasonable jqueryraw dom manipulation already works continue work", "d": "6/2015"}, {"body": "stefanpenner thanks best explanation heard far", "d": "6/2015"}, {"body": "seems like acceptable way provide backward compatibility looks little wat since accessing linkview already deprecated ok", "d": "6/2015"}, {"body": "see reproduce smaller app asap definitely would helpful", "d": "6/2015"}, {"body": "managed reproduce jsbin looks query param computed property", "d": "6/2015"}, {"body": "delete ones created double check authors deleting branches although suspect fine delete", "d": "6/2015"}, {"body": "yes packagelibmainjs files hinted console fail build due globs used emberjsbuild test file inclusion match thingjs main files end thingjs", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "ok possible reading correct way achieving something like", "d": "6/2015"}, {"body": "quantumking might looking", "d": "6/2015"}, {"body": "component helper requires components looked container allow locally defined components accessed take look proposes solution similar example code", "d": "6/2015"}, {"body": "jamesarosen samesimilar issue", "d": "6/2015"}, {"body": "orkon yes seem related", "d": "6/2015"}, {"body": "submitted address", "d": "6/2015"}, {"body": "guides work happening feel free make pr", "d": "6/2015"}, {"body": "closing joeruello mentions guides repo issue", "d": "6/2015"}, {"body": "already fixed pending tests time add test get", "d": "6/2015"}, {"body": "checked issues prs bad think familiar enough yet ember unit tests chaining implementation add test right unfortunately", "d": "6/2015"}, {"body": "still seeing latest canary see reduce something reproducible looks like guarded didchange nt touch willchange check need done similar stack trace original report", "d": "6/2015"}, {"body": "yes seems reasonable guard didchange also guard willchange stefanpenner objections", "d": "6/2015"}, {"body": "also appears reasonable feel free add todo pr", "d": "6/2015"}, {"body": "stefanpenner pr closed merged acrc pr since commit branch", "d": "6/2015"}, {"body": "rwjblue deleted stefanpenner onlyinvokestillpresentchainentries branch day ago", "d": "6/2015"}, {"body": "yes closed duplicate pr already master", "d": "6/2015"}, {"body": "similar issue running tests chrome run headless phantomjs well nt know result modal adding debugger statement fills text perfectly guess something run loops rendering note use pausetest see cursor jumping around nothing filled worked previous ember version pre", "d": "6/2015"}, {"body": "rwjblue suspect also something todo textfield textarea implemented problem replace statements fine would somehow related well", "d": "6/2015"}, {"body": "would assume would way deal defaults", "d": "6/2015"}, {"body": "stefanpenner problem one override defaults", "d": "6/2015"}, {"body": "submitted address", "d": "6/2015"}, {"body": "rwjblue thanks lot fix appear release may expect", "d": "6/2015"}, {"body": "yes day two", "d": "6/2015"}, {"body": "dug things little realized docs tried test resulted", "d": "6/2015"}, {"body": "unit true", "d": "6/2015"}, {"body": "stefanpenner get error guess rule thumb use integration tests use unit tests", "d": "6/2015"}, {"body": "using component use integration test", "d": "6/2015"}, {"body": "resolve error", "d": "6/2015"}, {"body": "used component integration tests see example newer component integration test syntax", "d": "6/2015"}, {"body": "rwjblue thanks getting back quickly reference found great blog anyone else stumbles upon still confusion excuse ignorance ember still learning decide unit test vs integration test specifically component think general rule thumb uses yield integration choose let alone thanks", "d": "6/2015"}, {"body": "paste template produces error jsbin", "d": "6/2015"}, {"body": "jmurphyau yup brain dumping long pairing session today try gather details reproduction asap", "d": "6/2015"}, {"body": "triggered set called like guess edge case relationship said relationship loaded data route side loaded", "d": "6/2015"}, {"body": "discussed raytiley slack think duplicate template snippet comes block param", "d": "6/2015"}, {"body": "raytiley confirm dupe comment issue", "d": "6/2015"}, {"body": "behavior", "d": "6/2015"}, {"body": "using works edit second value bindings nt work point", "d": "6/2015"}, {"body": "lt case consider using action notified dom change", "d": "6/2015"}, {"body": "temporary solution would rwjblue said look", "d": "6/2015"}, {"body": "temporary solution would actually likely best solution moving forward although original also continue work", "d": "6/2015"}, {"body": "idea would land week", "d": "6/2015"}, {"body": "michaelvdheeren week nt fixed issue yet", "d": "6/2015"}, {"body": "open new issue something similar kind thing array controllers arraycontroller actual array controllers action target controller context outside block previously would current controller iterated assuming legacyeachview controller would assigned view case jsbin jsbin", "d": "6/2015"}, {"body": "using block params deprecated syntax context therefore action context absolutely outside lower exhibit bug fixed even though different behavior prior versions much line intent keywordblock param concepts think regression", "d": "6/2015"}, {"body": "action targeting behavior existed versions prior emergent behavior line intent noncontext shifting versions absolutely understand uncommon pattern fix massive change reintroduce amounts bug going close issue point truly hope decision makes sense happy reevaluate additional information", "d": "6/2015"}, {"body": "correct pattern send action parent controller together contextual data like item", "d": "6/2015"}, {"body": "nt want fixed putting something noticed broken upgrade friday june robert jackson notifications githubcom wrote action targeting behavior existed versions prior emergent behavior line intent noncontext shifting versions absolutely understand uncommon pattern fix massive change reintroduce amounts bug going close issue point truly hope decision makes sense happy reevaluate additional information reply email directly view github", "d": "6/2015"}, {"body": "jaswilli totally understand greatly appreciated", "d": "6/2015"}, {"body": "ok good know refactor something similar mmun described thanks", "d": "6/2015"}, {"body": "use native input element rather htmlbars helper following need define action handlers applicable component controller route depending implemented field actions focusin function focusout function", "d": "6/2015"}, {"body": "related pr present future stackoverflow probably better location howto qa", "d": "6/2015"}, {"body": "trek nt believe works component said better asked stackoverflow much better venue qa bug arise feel free open issue", "d": "6/2015"}, {"body": "ping rwjblue cibernox toranb", "d": "6/2015"}, {"body": "seems like duplicate", "d": "6/2015"}, {"body": "added useful error error previously super obtuse take look jsbin fix issue duplicates general theory could continue add prefixes like index andor guid key get unique value therefore avoiding collision feels like kludge could easily submit pr others think would useful proper path forward understood krisselden wycats completely clear", "d": "6/2015"}, {"body": "duplicate values list common enough require fix nt", "d": "6/2015"}, {"body": "seanpdoyle unsure first issue smileycat also fix mostly hack continue fiddling unique real fix upstream almost certainly involved require many changes us comfortable landing", "d": "6/2015"}, {"body": "rwjblue tried get failing test submitting issue could nt test would good copy alter looked module title", "d": "6/2015"}, {"body": "failing tests tests changed asserting proper output", "d": "6/2015"}, {"body": "encountering well migration sure using good workarounds also seems like embersource gem date useful warning", "d": "6/2015"}, {"body": "guides repo issues related guides reopen thanks", "d": "6/2015"}, {"body": "raytiley believe related", "d": "6/2015"}, {"body": "mixonic possibly although myjsbin computed consumed layout component internal correct sure relates", "d": "6/2015"}, {"body": "cc tomdale wycats", "d": "6/2015"}, {"body": "stefanpenner pending issue website repo", "d": "6/2015"}, {"body": "maybe need open usual locked issue tracking contents upcoming release blog post", "d": "6/2015"}, {"body": "rwjblue c", "d": "6/2015"}, {"body": "happening incase someone mouse related handler one rendered components instead components informed event dispatcher events need render longer need un render could remove instead listening exactly required mousetouch events introduce unfortunate cost especially frequently used", "d": "6/2015"}, {"body": "way infer component would component need manually declare needs latter need choose set events listened default set events need manually opt", "d": "6/2015"}, {"body": "way infer component yes one declares interest event component", "d": "6/2015"}, {"body": "could ref count component creation decrement destruction add remove listener needed", "d": "6/2015"}, {"body": "think gets tricky improved actions declare event handlers template completely loose ability introspect class", "d": "6/2015"}, {"body": "chadhietala scenario actually using ember event bubbling registering custom handler", "d": "6/2015"}, {"body": "rwjblue nt cause runloop old syntax well", "d": "6/2015"}, {"body": "chadhietala would definitely go would issue cautioning nt take account", "d": "6/2015"}, {"body": "yup causes run loop one want since absolutely invoking ember code much better preemptive handlers run mouse events regardless handler present interim step actually skip run loop events nt find handler", "d": "6/2015"}, {"body": "could likely detect given view handler invoke runloop enter user code handle bubbling correctly may need slightly creative approach believe easiest ref counting needed sure sill need attach event listeners everything bother invoking runloop truely invoke code requires suspect cure original concern prompted issue", "d": "6/2015"}, {"body": "make sure understand idea check immediate view see actually handler given event handler present proceed repeat parent parent noop sounds like address issue however expensive traversing view hierarchy looking handlers executing noop run loop", "d": "6/2015"}, {"body": "traverse anyways", "d": "6/2015"}, {"body": "mousetouch events introduce unfortunate cost especially frequently used jquery fast paths event handling many events think ember likely look addition inquiry using events therese huge perf win able delegate directly instead bubbling current implementation needs bubble needs run multiple checks viewcomponent layer handlers put overall cost extra touchmove mousemove event used manipulate position screen much depends many layers needs bubble etc horrendous definitely expensive lots events involved edit cost peg rough eyeball difference using touchmove ember using direct handler component", "d": "6/2015"}, {"body": "believe limited support true bubbling phase maybe would love someone dive area propose improvements enumerating costbenefit would also handy", "d": "6/2015"}, {"body": "allows support nt", "d": "6/2015"}, {"body": "also got resourcesknowledge decent costbenefit run see whip", "d": "6/2015"}, {"body": "good thing dropped", "d": "6/2015"}, {"body": "yep", "d": "6/2015"}, {"body": "ember bumped issue", "d": "6/2015"}, {"body": "issue anybody luck", "d": "6/2015"}, {"body": "updated jsbin nt seem like route backing views actually destroyed", "d": "6/2015"}, {"body": "also running blocking upgrade", "d": "6/2015"}, {"body": "workaround hotfixes", "d": "6/2015"}, {"body": "wrapped mutable object discovered bindings twoway default components invoked curly brackets future enabled angle bracket invocation components bindings oneway default standard value mutable object wrapper must use access attributes passed components updating example jsbin use works expected unfortunately accessing directly without worked older versions always documented folks use access properties component sorry nt think going consider regression", "d": "6/2015"}, {"body": "rwjblue thank originally using using problem however nt clear could access attributes directly ever since separated component properties", "d": "6/2015"}, {"body": "using recommended oneway bindings default work nt really great always due mutable object default kinda sucks main reason advertised heavily use things passed yet", "d": "6/2015"}, {"body": "makes sense thanks", "d": "6/2015"}, {"body": "views definitely deprecated nt use official library animations", "d": "6/2015"}, {"body": "emberanimation overriding private methods containerview without reworking going work heavy relied original routecontrollerview structure may still need rely emberview addon completely switch routable components could one provide best practice move forward thanks still shipping view support addon ember exactly reason describe", "d": "6/2015"}, {"body": "thanks btecu providing official information moment seems maintainer repo actively pursuing toward ember standard go checkout repo see possibly switch existing staff liquid fire however understand overhead concern reopen view class animation method mandatorily stefanpenner pointed however liked emberanimation right box directly plugged code without modificationi wonder liquidfire plan provide outofbox feature like emberanimation future take", "d": "6/2015"}, {"body": "actually main maintainer indeed easy use outofbox", "d": "6/2015"}, {"body": "however liked emberanimation right box directly plugged code without modification need update code take advantage either library either deriving new base class adding animation methods updating template include animationaware helper liquidfire generally requires single line change template design whatever animation wish without impacting existing code templates realize experienced ember people heavily micromanaging code long time become used way thinking done lot good reasons moving ember away model toward component composition time split behavior separate components compose template win clarity performance", "d": "6/2015"}, {"body": "looked liquidfire repo looks awsome decide switch application got one specific question implementation hope may give clue may tackle applicationhbs like case user authenticated content take whole page user authenticated take width original logic works controller runs view render tried switch liquidfire since hook route actually first time sidebar got rendered aware sidebar possible somehow defer animation controller compute put sidebar run animation", "d": "6/2015"}, {"body": "view deprecated ember problem closing issue since seems containerview deprecated together view opened issue iquidfire conversation hope may help great thanks advance", "d": "6/2015"}, {"body": "provide jsbin older version demonstrate working see query param set applicationcontroller always active seems like normal behaviour something route", "d": "6/2015"}, {"body": "version see first link params href update move route route clicking bottom links case version using ember", "d": "6/2015"}, {"body": "update bins canary pr compare working version thanks", "d": "6/2015"}, {"body": "jmurphyau familiar code behind would try fix know start", "d": "6/2015"}, {"body": "nt getting updated changes logic runs every time url changes gets run run wondering meant triggered solution call solution fix tracked correctly route changes feels like component rerendered called looks like would solve problem", "d": "6/2015"}, {"body": "believe ordering correct", "d": "6/2015"}, {"body": "predict child views parent rendering", "d": "6/2015"}, {"body": "need layout calculation right injecting dom seems haselement state proper point doesnt hook willrender parent nt know child components point right direction handle layout calculation", "d": "6/2015"}, {"body": "relevant", "d": "6/2015"}, {"body": "something support hence warning see", "d": "6/2015"}, {"body": "way get around use hooks ember object", "d": "6/2015"}, {"body": "mmun stefanpenner ping would consider regression maybe close", "d": "6/2015"}, {"body": "would consider regression sounds like regression", "d": "6/2015"}, {"body": "behavior long time well prior definitely good actively moving away towards setting attributes passed attrs hash instead root object using angle bracket component invocation opt new semantics avoid breaking change take look pending rfc discussing angle bracket unification", "d": "6/2015"}, {"body": "wow right using ember since apparently first time run name collision like least first time remember running one confused thanks clarifying rename methods angle bracket components land", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "awesome save lot tears unsuspecting thanks quick turn around", "d": "6/2015"}, {"body": "bpcrao seems vague normally would recommend component cases might desire block form helper already helper nt think looking going close please let know missed something", "d": "6/2015"}, {"body": "mixonic blocklinkto routename model linktitle blocklinkto blocklinkto template linkto routename model yield want possible currently routename want pass linkto dynamic segments passed also dynamic", "d": "6/2015"}, {"body": "looks like seeing stefanpenner rwjblue ideas", "d": "6/2015"}, {"body": "seeing less identical issue app", "d": "6/2015"}, {"body": "problem", "d": "6/2015"}, {"body": "looks like seeing stefanpenner rwjblue ideas need ping review every notifcation", "d": "6/2015"}, {"body": "sorry nt sure seemed sneak even though reported days ago", "d": "6/2015"}, {"body": "samsinite positive limited hands review fix bugs guess core team prioritizes fixes guessing means issues get fixed release cycle could make suggestion notice issue perhaps harder verify bc clone whole repo run project locally test maybe slowed review process", "d": "6/2015"}, {"body": "possibly thanks duplicating issue jsbin guessing core team little swamped right looking number open issues github nt mean sound ungrateful ember core team awesome work wanted aware issue", "d": "6/2015"}, {"body": "samsinite worries want close issue roll one jsbin", "d": "6/2015"}, {"body": "sounds good one newer likely visibility", "d": "6/2015"}, {"body": "issue", "d": "6/2015"}, {"body": "tldr using variable yielded component template causes loop using manually calling works around issue time looked could find might help someone experience solve problem first render constructs block blockargument blockargument subsequent renders value changes constructs block blockargument blockargument calls blockargument step rerender issue starts call triggers component rerender causes call start step looks like component subscribed particular stream subscribed stream used template body component changing variable used component tempalte body nt cause issue nt update template commenting line fixes issue sure side effect would someone knowledge htmlbars would able best come solution think jsbin bare minimum needed get issue occur jsbin uses nt issue manually calling nt ideal might get people time work around", "d": "6/2015"}, {"body": "better workaround create computed property used yielding produces value eg text line inside component danger danger update danger value yield dangeryield jsbin", "d": "6/2015"}, {"body": "looking", "d": "6/2015"}, {"body": "issue glimmer reusing yielded stream shadow scope instead creating proxy stream revalidates light scope template triggers change notification block param stream unfortunately stream shadow scope yielded example causes infinite loop shadow scope light scope continuously invalidating one another", "d": "6/2015"}, {"body": "believe line culprit reading code may assume value always wrapped believe original author intended unfortunately true value stream returns identity true", "d": "6/2015"}, {"body": "think call unnecessary well jmurphyau pointed theory need invalidate stream source changes indeed calling stream automatically question whether need create new block param theory could reuse value passed stream get notified changes primitive wrap update whenever new primitive comes ca nt come reason force revalidation block param stream rerenders maybe forgetting something seems like performance win avoid", "d": "6/2015"}, {"body": "rad thanks guys go release right", "d": "6/2015"}, {"body": "samsinite yes absolutely", "d": "6/2015"}, {"body": "confirm solved issue thanks jmurphyau tomdale boat", "d": "6/2015"}, {"body": "thank opening issue reproduction", "d": "6/2015"}, {"body": "update array rather voila works", "d": "6/2015"}, {"body": "aight indeed works thanks however tell push nt work need search butt eventually find nothing interwebs thanks", "d": "6/2015"}, {"body": "documented source information instead interwebs", "d": "6/2015"}, {"body": "hi btecu last time checked ember documentation interwebs suppose answer lies kvocompliant part", "d": "6/2015"}, {"body": "jsbin suggests wrong something else happening", "d": "6/2015"}, {"body": "wrote tests showed current behavior correct", "d": "6/2015"}, {"body": "yay thorough tests", "d": "6/2015"}, {"body": "krisselden schedule measure actions new hook causes performance penalty current usage seems fairly arbitrary least kicking actions means hopefully get single rerender even many components measure", "d": "6/2015"}, {"body": "krisselden schedule measure actions didrender didrender hooks including one may actually schedule stuff actions mix result interleavings aim avoid bucketed runloop approach", "d": "6/2015"}, {"body": "time measure cause schedule revalidate stefanpenner think means schedule thing would cause invalidation think would work try need list view case run reuseable bins need add size estimate correct", "d": "6/2015"}, {"body": "think would work try would result interleaving non rendertemplate related work believe actually want avoid consider nested component case", "d": "6/2015"}, {"body": "stefanpenner unpack didrender hooks including one may actually schedule stuff actions suggesting schedule automatically important difference timing difference timing suggest difference warning poor performance logged", "d": "6/2015"}, {"body": "cost minimal js function invokedidrender thismeasure thismeasure warnagainstrevalidation thisdidrender", "d": "6/2015"}, {"body": "alternatively poweruser helper could exist", "d": "6/2015"}, {"body": "foreseeing warning like point devs dump logic blindly guess saying like idea somehow informing people done something might bad second junk drawer silence message seem great", "d": "6/2015"}, {"body": "guess saying like idea somehow informing people done something might bad second junk drawer silence message seem great poweruser helper reality multipass layouts norm ui development somehow expose something allow throwing something onto another queue nt seem correct either", "d": "6/2015"}, {"body": "necessarily prefer approach eccegordo advocating us handle logging level instead log warning silencing system idea would persist though", "d": "6/2015"}, {"body": "mixonic end day care mostly whatever messages warning deprecations etc emitted system reasonably actionable silencing message one potentially valid course action course different ways tackle problem generally thinking case help relatively inexperienced devs effectively divide conquer problem faced flood warnings go update project", "d": "6/2015"}, {"body": "eccegordo nt need address every deprecation right away deprecations breaking flagging things go away eventually", "d": "6/2015"}, {"body": "krisselden understood actually trying clear everything could immediately try unfortunately inspector iswas broken could nt use interface review deprecations wade lot noise spewed console prompted desire selectively silence warnings plus bad ocd smile", "d": "6/2015"}, {"body": "confirm deprecation behavior caused confusion trying fix deprecation notices upgrade adding deprecation notice case people searching deprecation property emberoutletview modified inside didinsertelement hook never change properties components services models didinsertelement causes significant performance degradation", "d": "6/2015"}, {"body": "believe related cibernox issue mentioned", "d": "6/2015"}, {"body": "rwjblue ah yes seek issue seeing thanks dude", "d": "6/2015"}, {"body": "rwjblue let decide close use track regression", "d": "6/2015"}, {"body": "leave open track think need reproduction properly track get whatever going wrong test", "d": "6/2015"}, {"body": "keep open issue scenario complex easy reproduce try anyway", "d": "6/2015"}, {"body": "seems issue", "d": "6/2015"}, {"body": "btecu yep agreed still need help reproducing fix", "d": "6/2015"}, {"body": "jsbin reproducing error remove line work", "d": "6/2015"}, {"body": "nt jsbin run working addon pull click pagination ellipses click get error see also", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "rwjblue sure worthy separate issue situation log menu item real route action empty string argument always worked previous versions however moving ceased work gave error able track issue made sense however error message help without context knowing issue jsbin shows issue", "d": "6/2015"}, {"body": "possibly dupe come across", "d": "6/2015"}, {"body": "would like see numbers without ember inspector open inspector negatively affect performance instrumentation overhead nt nontrivial possible merely instrumentation changed favor former even noninspector would provide accurate perspective", "d": "6/2015"}, {"body": "quick stab removing need measuring inspector also please note production builds still included deprecations issue build pipeline fixed", "d": "6/2015"}, {"body": "drops may also slightly different babel transpiled output although hope lesser degree", "d": "6/2015"}, {"body": "see builtin helper streams among leaks would leak morphs leaking", "d": "6/2015"}, {"body": "mixonic going looking would love help learn little bit debug issues", "d": "6/2015"}, {"body": "quick guess familiar code nt see corresponding unsubscribe", "d": "6/2015"}, {"body": "actually look attrmorph retained", "d": "6/2015"}, {"body": "probably still work however use new syntax issue probably related try explicitly setting one", "d": "6/2015"}, {"body": "yes error coming glimmer optimizations advancing next key whip jsbin demoing issue difficult track fix without one", "d": "6/2015"}, {"body": "nt jsbin run working addon pull click pagination ellipses click get error see also", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "issue custom render hook called", "d": "6/2015"}, {"body": "kanongil seem related issue would mind opening new one", "d": "6/2015"}, {"body": "moveniumville yes specifying template layout dynamically initial render work couple open issues related clear path forward making work", "d": "6/2015"}, {"body": "rwjblue ok issue created", "d": "6/2015"}, {"body": "believe emberdata something similar buildurl posting api seems like good change possible rely current behavior need make two step change deprecate detect may issue fix subsequent release use one new emberhelperhelper urlencode argument hopefully unblock", "d": "6/2015"}, {"body": "ok great take look submitting fix using hooks route also seems work fine workaround", "d": "6/2015"}, {"body": "created pr routerecognizer correctly handles decoding uri segments recognizing urls encoding segments generating urls merged create pr ember point new versions fix issue little research discovered rails router decoding encoding well rails app route users id route url usersabc route likewise rails id abcdef go url usersabc", "d": "6/2015"}, {"body": "thanks spotting reporting try dig see going", "d": "6/2015"}, {"body": "prodjs merge kb prodjs merge kb", "d": "6/2015"}, {"body": "ilkkao reopened make sure well confirm fixed close", "d": "6/2015"}, {"body": "ilkkao nice chart", "d": "6/2015"}, {"body": "thanks davidpett release channels tracked verify canary release back kb fix rwjblue issue solved", "d": "6/2015"}, {"body": "looks like caused component based alexspellerembercliactivelinkwrapper since activelinkcomponent sets cc rwjblue", "d": "6/2015"}, {"body": "essentially code queued setting childviews afterrender hook technically probably causing two renders easiest approach get rid deprecations js import ember ember function filterattrmorphs node return nodeattrname undefined export default embercomponentextend tagname li classnamebindings active active function return thisget childviews anyby active property childviews eachactive didrender function emberrunscheduleonce afterrender calcchildviews calcchildviews function var childnodes thisrendernodechildnodesfilter filterattrmorphs childnodes childnodes amp amp emberisarray childnodes var childviews childnodesmap function node return nodeemberview thisset childviews embera childviews problem seems like screaming new ui looking internally find active chidren seems like mega hack would really make better could easily get state router component know tomdale pr rfc make router service place helper could easily written could used wycats count addon relying private api needs made public", "d": "6/2015"}, {"body": "think updated schedule setting actions queue use instead property nt get passed route want check activity routing service wo nt help raytiley crazy wording messaging deprecation sure basically think need set value render schedule set actions yes means second render exactly deprecation message telling however thing multiple places least triggers one rerender think scheduling solution reasonable one times need rerender something like wants read children state case design decision one cause perf hit requiring path passed twice link active checker obviously clumsy would need rerender maybe could yield passed path block param nt need typed twice forcing layout calculations use positioning strongly suggest couple dom even example alexspeller addon could simply check dom avoid coupling internals complex fragile internals probably slower work dom query anyway well maybe lastly yeah love see router api gotten look rfc though also nt deprecation guide possible good excuse skipping guide entry simply written obviously written", "d": "6/2015"}, {"body": "mixonic gone road using jquery look class nt work correct initial render route changes nothing trigger wrapping component reexecute dom query", "d": "6/2015"}, {"body": "raytiley ah right need hook routing trigger dom check let us push rfc forward", "d": "6/2015"}, {"body": "sure rfc yet tomdale pr", "d": "6/2015"}, {"body": "also user experience around deprecation notices website quite confusing page prominent reference like one open secrets insiders know hostile new comers page heavily referenced many deprecations link directly suggest resolution url ember inspector links links deprecations tab release blog posts link page appropriate deprecations second useful page totally divorced guides separate deprecations page yet none guides obvious deprecations navigation legacy guide page old website trek idea adding disclaimer top linking active url", "d": "6/2015"}, {"body": "yeah currently ember inspector broken might something app use console log output see deprecations find link seems show boot ember cli nt see deprecation notices either like also would expect see note deprecations guides link side bar routes back main deprecations page would helpful anyway upgrade going relatively smoothly good work around", "d": "6/2015"}, {"body": "another obvious deprecation notice link console output", "d": "6/2015"}, {"body": "problem ember inspector go file issue believe problem exceptions thrown bugs project perhaps would useful ember inspector mode would temporarily swallow exceptions get around particular corner case review deprecations", "d": "6/2015"}, {"body": "last error almost certainly thing thanks reporting inspector repo", "d": "6/2015"}, {"body": "clarify ember data deprecation reading closely obvious fix override method adapter silences warning console wondering makes sense even really sure behavior would ultimately want current default new ember data behavior understand warning nt want catch people guard ed changes particular case seems pretty esoteric desire acknowledge change hide deprecation without actually add code userland inside adapter would personally see framework level change kind lot like saying hey changed something deep framework code nt directly violating deprecation going keep warning upgrade framework call action ambiguous wondering future makes sense concept log level deprecations categories etc way could selectively enable disable certain deprecation notices deal highly mechanical deprecations first deal subtle framework level changes secondly could also dovetail well lts release plans could start classify deprecations according urgency severity perhaps something like", "d": "6/2015"}, {"body": "eccegordo thanks much detailed descriptions thoughts encounter errors definitely help us improve process reporting errors errors next time around", "d": "6/2015"}, {"body": "wycats problem overall upgrade process going relatively smoothly like deeply understand reasons behind change make sure performing cargo cult code overall though deeply impressed glimmer updates lot refinements lot things much faster great job everybody keeping announced schedule bright days ahead sure", "d": "6/2015"}, {"body": "exactly issue observers bound properties fired twice", "d": "6/2015"}, {"body": "seems error within emberinspector teddyzeenny agree", "d": "6/2015"}, {"body": "thanks quick response disabled error went away seem culprit submit new issue", "d": "6/2015"}, {"body": "confirmed inspector code", "d": "6/2015"}, {"body": "getting error", "d": "6/2015"}, {"body": "disable since part prototype extensions disabled addons ensure addons written way shared sorts apps even prototype extensions disabled", "d": "6/2015"}, {"body": "ensure addons written way shared sorts apps even prototype extensions disabled agreed although viewing api docs isany explicitly recommended although nt docs enumerableutils deprecated would expect find function respective docs nt docs back recommendation perhaps remove altogether fyi use lodash array manipulation hence reason closed issue", "d": "6/2015"}, {"body": "think functionality lost assume able create component routable components implemented workaround implemented may put element desired classes indexhtml change root element", "d": "6/2015"}, {"body": "confused previously lt ember using views add class view root dom element something like import ember ember export default emberviewextend classnames accountview views deprecated removed view classes wrapped view handlebars template div added class existing template code removing views getting rid deprecations even deleted views folder project noticed top level app still wrapped class gone views deprecated least class renamed safe apply style emberview assumption one application assuming got rid views thanks", "d": "6/2015"}, {"body": "answering question style class assumption exists top level div wrapping application shows components well", "d": "6/2015"}, {"body": "could nt one specific selectors styling work styling root ember view application edit said could require updating existing css update", "d": "6/2015"}, {"body": "expresss seems many name", "d": "6/2015"}, {"body": "complete uninstall npm node ember reinstall appear solved issue", "d": "6/2015"}, {"body": "silly npm", "d": "6/2015"}, {"body": "pr exists remove warning", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closed", "d": "6/2015"}, {"body": "confirmed working jsbin demo", "d": "6/2015"}, {"body": "rwjblue jsbin demo", "d": "6/2015"}, {"body": "suggest using binding like seems like regression", "d": "6/2015"}, {"body": "use inheritance export controller ember type automagically generated controllers also use class", "d": "6/2015"}, {"body": "joeruello thought know export basic controller ember type automagically generated controllers also use class sounds like real magic ember know automagically generated controllers inherit class name basis trick would like control enrichment one place import inherit controller file fine reopening embercontroller easier still nt get private cause problem use beside ugly underscore", "d": "6/2015"}, {"body": "exactly ember first looks falls back embercontroller using private apis risky nt covered semver removedchangedbroken time probably close stackoverflow question issue feel free open question email want talk", "d": "6/2015"}, {"body": "try logging see data", "d": "6/2015"}, {"body": "michaelvdheeren provide jsbin repo embercli demonstrating issue", "d": "6/2015"}, {"body": "thejameskyle get using", "d": "6/2015"}, {"body": "michaelvdheeren nt seeing internal models get", "d": "6/2015"}, {"body": "pangratz using controller", "d": "6/2015"}, {"body": "hmm nt look like valid since model called change check everything works expected", "d": "6/2015"}, {"body": "pangratz sorry typo use player query changed", "d": "6/2015"}, {"body": "code use use implement sort infinite scrolling loading", "d": "6/2015"}, {"body": "pangratz replace get correct class internalmodel everything works however documentation says arraypromise resolved result", "d": "6/2015"}, {"body": "ed version", "d": "6/2015"}, {"body": "pangratz canary", "d": "6/2015"}, {"body": "see tried passed needed access", "d": "6/2015"}, {"body": "pangratz works perfectly thx", "d": "6/2015"}, {"body": "ok great wondering found documentation since nt documented way point open issue", "d": "6/2015"}, {"body": "pangratz voila", "d": "6/2015"}, {"body": "michaelvdheeren wonderful thank sir", "d": "6/2015"}, {"body": "expected new glimmer rendering engine optimized update changed areas dom rather fully renderer everything glimmer works templates added dom nodes using another method jquery knowledge wo nt touch usecase could implement using templates", "d": "6/2015"}, {"body": "thank answer joeruello yes usecase within block render table jquery datatables rendering done datatables pass data render manner avoids rendering table twice well perhaps one half first time template second time datatables need parse dom make pagination add classes another usecase charts entire chart must rerendered model change perhaps understand done glimmer", "d": "6/2015"}, {"body": "look blog post specifically part component life cycle hooks nt tested seems move manually clear dom time get effect looking although probably nt best practice gives tools update charts rather rendering also allows cool animationstransitions modelsdata changes table front looked ember table probably close issue feel free email want talk", "d": "6/2015"}, {"body": "hi joeruello usecase reproducing issue yes saw blogpost thought workaround problem use hooks clear rerender data agree cool staff transition animations sometimes need rerender entire area current data chart nothing new arrived data let say chart potatos cosommation per capita last years monthly user wants fuel consommation family since yearly try give yet another example number charts vary let say represent electric energy production evolution year country want chart energy type imagine country x produces nuclear energy petrol energy render charts nuclear petrol user chooses another country produces solar energy scincefiction anyway render one chart solar something like jsbin usecase table component chart type letters let say ab replace cd nothing happens another case type ab replace cde cd effect tables ab stay displayed table e added imho helper place otherwise coding overheads components observe data completly changed clear stale data render new one", "d": "6/2015"}, {"body": "tested workaround suggested move table creation didinsertelement didrender check datatable exists destroy recreate new one", "d": "6/2015"}, {"body": "stefanpenner went tear last night removing stuff beta still relied upon ember data nt time dig specifics try circle back around sounds like ed bug got stuff take care today conf tomorrow im done ember go pass emberdata", "d": "6/2015"}, {"body": "may culprit", "d": "6/2015"}, {"body": "may culprit yeah sorry wrong repo move issue seeing morning nt found thought saw commit last night removed", "d": "6/2015"}, {"body": "thought saw commit last night removed yup longer present deprecated easy move emberdata use builtin helpers", "d": "6/2015"}, {"body": "started going ed making good progress inprogress pr land shortly", "d": "6/2015"}, {"body": "started work finish tonight", "d": "6/2015"}, {"body": "branch emberdata green tests ember canary", "d": "6/2015"}, {"body": "happens stubbing using mocha assume works rejection handled inside", "d": "6/2015"}, {"body": "seems dubious allow rejections tests", "d": "6/2015"}, {"body": "yeah understand nt use case actually valid", "d": "6/2015"}, {"body": "think discussed could wrong costs maintaining", "d": "6/2015"}, {"body": "think discussed could wrong costs maintaining much think actually many extra bytes suspect ed relies cc igort", "d": "6/2015"}, {"body": "evaluating move iterable iterable like", "d": "6/2015"}, {"body": "think lots apps rely moving away us would nt hard started implementing emberarray instead extending arrayproxy", "d": "6/2015"}, {"body": "think lots apps rely moving away us would nt hard think rewrite arrayproxy iterable still exposing existing api bonus iterate structures like map stuff like transducers sounds like fun monday morning hack", "d": "6/2015"}, {"body": "exactly needs deprecated enumerable mixin seems heavily used rest ember added deprecation warning edit running emberruntime tests tests failed public usage already marked private", "d": "6/2015"}, {"body": "reminder please add deprecations guide", "d": "6/2015"}, {"body": "reopened issue pending addition deprecations guide", "d": "6/2015"}, {"body": "nt seem like embercli issue", "d": "6/2015"}, {"body": "ember ember looks like typo", "d": "6/2015"}, {"body": "stefanpenner fixed", "d": "6/2015"}, {"body": "bug emberdata opened issue", "d": "6/2015"}, {"body": "awesome fast p", "d": "6/2015"}, {"body": "ghostavio remove ember data packagejson test app stop restart server see clears deprecation issue closed favor ed one", "d": "6/2015"}, {"body": "ghostavio remove ember data packagejson test app stop restart server see clears deprecation issue closed favor ed one rwjblue totally emberdata confirmed would like closed instead ameta tracking close", "d": "6/2015"}, {"body": "ghostavio fix app", "d": "6/2015"}, {"body": "yonida need update least", "d": "6/2015"}, {"body": "pangratz using ember ember data emberdata", "d": "6/2015"}, {"body": "emberdata released days ago blog post coming announces officially guess deprecation warnings reported issue fixed since available since", "d": "6/2015"}, {"body": "great thanks", "d": "6/2015"}, {"body": "michaelvdheeren trying observe childviews", "d": "6/2015"}, {"body": "yes never problems know docs say ca nt manipulate childviews property directly nothing observing", "d": "6/2015"}, {"body": "krisselden removing observes fixes indeed question going trigger masonry rerender childview added", "d": "6/2015"}, {"body": "michaelvdheeren didrender event hook", "d": "6/2015"}, {"body": "didrender trigger childview added", "d": "6/2015"}, {"body": "nt believe hasblock feature", "d": "6/2015"}, {"body": "really docs", "d": "6/2015"}, {"body": "alexlafroscia docs incorrect feature still behind feature flag unsure howwhy listed docs", "d": "6/2015"}, {"body": "oh okay see would sworn tried adding feature flag maybe need restart server adding edit enabled feature flag still nt seem working canary release use feature flags available releases", "d": "6/2015"}, {"body": "alexlafroscia disabled features stripped beta release builds opt feature flag unless use canary", "d": "6/2015"}, {"body": "gotcha thanks help smile go ahead fix docs", "d": "6/2015"}, {"body": "fyi docs api doc generation nt remove feature flagged docs never definitely something intend fix upcoming versions", "d": "6/2015"}, {"body": "nt issue post please let know still learning right way bring kinds things", "d": "6/2015"}, {"body": "good chance coming generated controller either silence warning creating using emberdisableproxycontrollers warning latter turns arraycontrollers normal controllers well", "d": "6/2015"}, {"body": "probably coming least one case application controller generated automatically application fact warning still shows nothing application template even outlets blank file make declare application controller plain embercontroller makes think either warning error case perhaps package case way knowing package since trace nt tell", "d": "6/2015"}, {"body": "aaahhhh never mind missed loading templates fact declared objectcontrollers nt ever done find objectcontroller project reason sure edge case deprecation warnings knowing substates newbie mistake part", "d": "6/2015"}, {"body": "believe", "d": "6/2015"}, {"body": "update regression occurs yielding resource via block params using component vs works fine even use parent template jsbin running canary", "d": "6/2015"}, {"body": "update checked fixed canary yet landed", "d": "6/2015"}, {"body": "closing issue resolved", "d": "6/2015"}, {"body": "awesome thank confirming", "d": "6/2015"}, {"body": "mitchlloyd stumbled failing current setup old helpers fire sendaction new helpers create closure correct inconsistent immediate suggestion always use nested helper invocation would like replace early series deprecate old style planning implement action bubbling routable components instead route would pass actions routable component manner component passes actions ticket identified awkwardness stick around land routable components", "d": "6/2015"}, {"body": "thanks response good know plan think might talking something slightly different seeing connection nested action invocation behavior hoping way close route action like could pass component stands jsbin get error thinking maybe would nt hard look route actions well controller event probably falls worth implementing let get routable components already smile", "d": "6/2015"}, {"body": "exactly must define controller call goal better way post routable components", "d": "6/2015"}, {"body": "going close please reopen appropriate", "d": "6/2015"}, {"body": "fyi emberselect deprecated moved core addon", "d": "6/2015"}, {"body": "rwjblue replacement emberselect recommended way implement select ember order bind options selected values properties thanks", "d": "6/2015"}, {"body": "ok blog example select impletmentaion references addons thnak info", "d": "6/2015"}, {"body": "ember version also gone generally use must", "d": "6/2015"}, {"body": "output", "d": "6/2015"}, {"body": "believe would prefer move away extending native objects prototypes instead doubling fwiw app code sure accessing instead best really internal allows us retarget global scope imo ideal solution addon js lib exposes bunch crossbrowser utilities reading writing location fact something similar stub writes location object testing going close issue nt think polyfilling native location object please reopen missed something", "d": "6/2015"}, {"body": "oh yeah use mocked location history assertions testing", "d": "6/2015"}, {"body": "please provide demo jsbin help bit better", "d": "6/2015"}, {"body": "demo jsbin showing behavior using computed property inside string generates warning even value cp safe string emberset color emberstringhtmlsafe blue generates console warning emberset mystyle emberstringhtmlsafe color blue console warning show console warning", "d": "6/2015"}, {"body": "yes bantic correct return cp use unquoted template avoid warning quote property trigger warning would like avoid warning concatenating safe strings occur future version", "d": "6/2015"}, {"body": "think discovered issue experimenting new computed property getter setters appears happen passedin property literal value ie passedin property another property name proper behavior exists although property twoway bound outside component scope example changing jsbin pass property rather literal allows action update value expected pretty involved jsbin showing issue using computed property gettersetters broken behavior passing string literals breaks expected behavior passing bound properties instead restores expected behavior", "d": "6/2015"}, {"body": "use super less caveats much performant", "d": "6/2015"}, {"body": "think currently agree stefanpenner", "d": "6/2015"}, {"body": "destroy enable", "d": "6/2015"}, {"body": "nt believe correct thing add destroyinit ordering often important unfortunately events concise ordering possible especially inheritance various user provided mixins provided luckily super chain concise predictable", "d": "6/2015"}, {"body": "added init crutch people relying property change events work ordering initialization property change events fire init event addon developers framework developers use init initialize object good initial state without relying property change events", "d": "6/2015"}, {"body": "ok agree standing point measurable performance hit using init event vs overriding init krisselden mean init method different mechanics init event", "d": "6/2015"}, {"body": "fixed latest canary", "d": "6/2015"}, {"body": "thank reporting", "d": "6/2015"}, {"body": "strange ci runs tests phantomjs appears green confident phantomjs works comment wrong repo assumed embercli", "d": "6/2015"}, {"body": "believe seen issue past file permission issues", "d": "6/2015"}, {"body": "appears runner tries run query param appears confuse removing prevents network fail clearly goal appears query params problem reading disk rather server move part emberjsbuild emberjs use already built functionality provided embercli server apps addons already use would mean could drop bower qunit runner", "d": "6/2015"}, {"body": "viewname", "d": "6/2015"}, {"body": "emberselect converted component also like embercheckbox packaged separate addon seems html select element something pretty much projects use", "d": "6/2015"}, {"body": "would prefer addon things also wonder make emberselect component well addon", "d": "6/2015"}, {"body": "would like keep ticket fairly tactical would happily discuss detail discussemberjscom take discussion know items may controversial select view terrible performance robert showing one versions day easily order magnitude faster pathological able improve within semver constraints constraints also limit us making component select view also relies heavily two way binding idiomatic development style ember select view would quickly become exception entire programming model datadown actionsup excited even could make component would unlike expect components two reasons needs go viable component version uses modern idiomatic style instead pushing select implementation back addonland iterated upon already decent options sure arise using new apis angle components land time perhaps one could become official select view part emberlegacyviews addon supported ember provide plenty time well performing modern option mature", "d": "6/2015"}, {"body": "upgrade path scenario going away useful pattern granular control component rendered specific example component loads async content renders separate related component different part dom components initialised arbitrary hash possible would result specific example modal dialogs nt accept attrs signature edit reference people issue", "d": "6/2015"}, {"body": "might related", "d": "6/2015"}, {"body": "fixed next update htmlbars dependency likely helpers rfc", "d": "6/2015"}, {"body": "fixed master working update jsbin demo", "d": "6/2015"}, {"body": "hitting problem working fine update could fix backported please js bin testcase", "d": "6/2015"}, {"body": "tried ember", "d": "6/2015"}, {"body": "surprised see everything works fine ie firefox chrome", "d": "6/2015"}, {"body": "believe browsers may fall back polyfils things chrome already implements", "d": "6/2015"}, {"body": "yes im currently using polymer dom shadow instead shady almost worked except elements", "d": "6/2015"}, {"body": "best chance someone tackling provide example demonstrates issue", "d": "6/2015"}, {"body": "forget last comment config actually makes things buggy another guy problems", "d": "6/2015"}, {"body": "hey stefanpenner uploaded demo testing github ghpages repository ghpages see elements indexhtml render expected inside applicationhbs content goes right insertion point", "d": "6/2015"}, {"body": "issue repository two routes papertoolbar component one wrapped version demo visible first time click papertoolbar version title rendered outside toolbar go polytoolbar works back papertoolbar work", "d": "6/2015"}, {"body": "problems ref works firefox chrome edit tried test ember versions none works polymer also try import eg paperheaderpanel polymer component like eg applicationhbs rendered result html polymer however result really like works put polymer component inside indexhtml file eg contentfor html polymer one see first sample vs correct one nt move respective components recursively idtopbar element conclusion nt move dom elements correct position render components via hbs files", "d": "6/2015"}, {"body": "apparently insane design decision rescinded", "d": "6/2015"}, {"body": "yknow going reopen discussion would love hear would make useful thing supported natively difficult implement", "d": "6/2015"}, {"body": "would love hear would make useful thing supported natively difficult implement made difficult definitely nt try make anything particular difficult ember currently uses whitelist decide bound components element optionally reopen add however nt think anyone finds ideal solution exploring idea attribute string value set attribute", "d": "6/2015"}, {"body": "agree would useful good reason missing whitelisting", "d": "6/2015"}, {"body": "nt understand solution listed documentation nt default", "d": "6/2015"}, {"body": "rwjblue said issue nt set javascript objects arrays objects properties", "d": "6/2015"}, {"body": "thanks solved problem", "d": "6/2015"}, {"body": "hi followed direction issue made corrections component however still broken iooking prototype chains see dsmodel create components share prototype since creating new instance dsmodel every one components data enter one shows others test created instance model time explicitly set objects bound input box attributes object model creation everything worked expected model data shared across components said lead believe issue things handled models type created jsbin shows issue jsbin use click button next hello type something box click button create another instance modelcomponent show text previous input box expect share data thanks roy", "d": "6/2015"}, {"body": "thanks bmac answer", "d": "6/2015"}, {"body": "define nonprimitive value objects prototype shared across instances object nt really ember issue normal javascript behavior consider following function thing thingprototypeitems var new thing var new thing item item point exact array instance contents gt item item want need instance create array shared prototype would like like following plain js working jsbin", "d": "6/2015"}, {"body": "exactly thanks lot", "d": "6/2015"}, {"body": "hi opened similar issue around time closed fairly quickly pointed issue however solution still broken iook prototype chains see dsmodel create components share prototype since creating new instance dsmodel every one components data enter one shows others nt know resolve issue jsbin use click button next hello type something box click button create another instance modelcomponent show text previous input box expect share data thanks roy", "d": "6/2015"}, {"body": "provide pr solves", "d": "6/2015"}, {"body": "explanation used able mutate foo ca nt init time mutable broken could use instead however hook happen initially many times subsequently useful need happen could set flag seems silly", "d": "6/2015"}, {"body": "didinitattrs hook want fires attrs initialized first time", "d": "6/2015"}, {"body": "thankyou nt mentioned", "d": "6/2015"}, {"body": "rwjblue said fix smile", "d": "6/2015"}, {"body": "false alarm typo", "d": "6/2015"}, {"body": "see", "d": "6/2015"}, {"body": "good number various apps worked stable unique prop key quite pain decorate item key helped way autogenerating per item perhaps stored realize brittle userprovided string relies objects references maybe time case thoughts testing canary one apps noticed incorrect domreuse array changed info discover cause create ticket", "d": "6/2015"}, {"body": "index guid use index using default", "d": "6/2015"}, {"body": "testing canary one apps noticed incorrect domreuse array changed generally default usage item array index key", "d": "6/2015"}, {"body": "defaulting guid", "d": "6/2015"}, {"body": "done", "d": "6/2015"}, {"body": "whoops sorry thought meant adding option nt default actually mutates object call add guid long term could use map nt good polyfill know nt mutate object", "d": "6/2015"}, {"body": "maybe instead deprecating spit warning whenever without key", "d": "6/2015"}, {"body": "knownasilya much different people supplying key deprecation vs warning nt seem make much difference", "d": "6/2015"}, {"body": "deprecation means eventual removal jayphelps case case stable id guess small use case really use guid otherwise use key guess convinced smilecat", "d": "6/2015"}, {"body": "jayphelps case case stable id either case always used case would use key like deprecation means eventual removal completely agreed review rest team deprecation intend allow keyless usage long term like native map nt need mutate object deprecate", "d": "6/2015"}, {"body": "implemented warning closing", "d": "6/2015"}, {"body": "feel like syntax looking bit unfriendly complicating simple looping construct opinion also nt know index coming difference guid", "d": "6/2015"}, {"body": "simpleinefficient sure keyoption unfriendly guid generated guid probably based item index index item hence efficient since sort array loose key", "d": "6/2015"}, {"body": "guid new default required specify", "d": "6/2015"}, {"body": "christophermlne default previously index nt performant must specify key see warning", "d": "6/2015"}, {"body": "must specify one key another recommended fast option guid make default", "d": "6/2015"}, {"body": "great point submitted pr exactly", "d": "6/2015"}, {"body": "helper documentation implies key purely help renderer nt care convention configuration etc", "d": "6/2015"}, {"body": "rwjblue fixing code even someone realize problem since xx", "d": "6/2015"}, {"body": "fyi warning removed favor default key nt amp also according", "d": "6/2015"}, {"body": "correct missed commit released shipping within day two", "d": "6/2015"}, {"body": "thanks rwjblue wanted make sure anyone came across thread knew plan", "d": "6/2015"}, {"body": "documentation added", "d": "6/2015"}, {"body": "ps tested chrome version mac yosemite", "d": "6/2015"}, {"body": "jdbo probably want file emberjsguides", "d": "6/2015"}, {"body": "yes please file guides", "d": "6/2015"}, {"body": "cleanup needs done component destroyed exactly please share jsbin showing right solution case", "d": "6/2015"}, {"body": "ah impression cleaned", "d": "6/2015"}, {"body": "necessarily wrong solution something assumed nt appear working", "d": "6/2015"}, {"body": "nt really know kind cleanup talking demoexample would helpful", "d": "6/2015"}, {"body": "created jsbin appears working outside app basically experiencing maintained go back index route back address route must something wrong else thanks help going ahead closing", "d": "6/2015"}, {"body": "seems like issue chai reason assert model slow could see deepequal slow due complex structures", "d": "6/2015"}, {"body": "react uses chai nt seem problems", "d": "6/2015"}, {"body": "different object structures clearly something wrong chai ca nt functionality quickly mentioned something renders diff enumerates full object would likely slow example nt appear likely due meta enumerable browsers fail make quick let grab laptop confirm", "d": "6/2015"}, {"body": "interestingly attempt reproduce successful iterations ok chai test chai spewing deopts suspect addressed numbers would closer provide reproduction example would interested inspecting", "d": "6/2015"}, {"body": "run get big warning console click chai run button get error click ok button", "d": "6/2015"}, {"body": "yup get well simply add top results end view profiler indicates chai deopting provide example demonstrates mentioned suspect timeouts due deepequals sort something generates diff appear snippet displays please provide working example demonstrates issue otherwise nt terribly actionable", "d": "6/2015"}, {"body": "adding top makes ember inside chai order magnitude slower ok ok chai", "d": "6/2015"}, {"body": "bjornstar yes chai legitimately slower regardless ember replace times stay exactly still nowhere near bad numbers provided although iteration count several orders magnitude greater", "d": "6/2015"}, {"body": "mentioned suspect timeouts due deepequals sort something generates diff appear snippet displays please provide working example demonstrates issue otherwise nt terribly actionable", "d": "6/2015"}, {"body": "thanks reporting try look tonight", "d": "6/2015"}, {"body": "global resolver resolve case conflicting another component demo jsbin", "d": "6/2015"}, {"body": "right remedy could perhaps make default component name something specific reduce likelihood people run", "d": "6/2015"}, {"body": "globals resolver looking would conflict explaining happening saying yall something wrong definitely bug need fix", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "luck like try update still ca nt none input work", "d": "6/2015"}, {"body": "nt going fixed please let know move change code work broken resolver", "d": "6/2015"}, {"body": "thanks opening", "d": "6/2015"}, {"body": "assertion changed deprecation updated soonish use latest beta channel", "d": "6/2015"}, {"body": "since deprecation new method extending existing components", "d": "6/2015"}, {"body": "extending something totally fine nt issue extending though component triggers deprecation", "d": "6/2015"}, {"body": "see wanted extend controls still able could wrap inside component necessary work wrapped elements nt going something access", "d": "6/2015"}, {"body": "change made tweaked need var customselect emberselectextend customselectreopenclass iscomponentfactory true export default customselect get rid deprecation", "d": "6/2015"}, {"body": "good go always seriously appreciate beers", "d": "6/2015"}, {"body": "potentially adding sentence guides clarifying ca nt override model hook substates would also beneficial", "d": "6/2015"}, {"body": "fix mind know happening ember resolver uses main indicator lookup base class something resolverresolve controller main lookup appcontroller templates nt use classes could probably fixed template case however sure working route sure actually loading route base route class thinking probably ca nt main anything looks like behavior added commit", "d": "6/2015"}, {"body": "ideas", "d": "6/2015"}, {"body": "ember bug rather firefox bug see", "d": "6/2015"}, {"body": "reported three packages already want fix perpackage could file appropriate issues", "d": "6/2015"}, {"body": "migrated irc discussion", "d": "6/2015"}, {"body": "fixed included versions since embercli packages update gt unless opt upgrade properly ignore dist", "d": "6/2015"}, {"body": "issue seems resolved", "d": "6/2015"}, {"body": "submitted allow usage determine block provided failing test rerendering changes", "d": "6/2015"}, {"body": "actual implementation removed docs still property definition gone find see gone", "d": "6/2015"}, {"body": "sirzach implemented template see emberhtmlbarslibhooksgetroot never implemented component class", "d": "6/2015"}, {"body": "mmun implemented class nice find thanks newer implementation approach way get hold component js code", "d": "6/2015"}, {"body": "sirzach oops right nt way get right fairly convinced nt need though use case accomplished within template explain would helpful", "d": "6/2015"}, {"body": "use case backwards compatibility pre could check know component used block form later use hasblock order components could work block form glimmer nonglimmer apps going computed property component would check two properties", "d": "6/2015"}, {"body": "sirzach yeah planning making boolean mostly backwards compatible people using fire deprecation warnings consumption definitely semver violation broken terms adding new api component js convinced need", "d": "6/2015"}, {"body": "makes boolean pending review", "d": "6/2015"}, {"body": "thanks rwjblue sorry realize talking thread thanks mmun quick replies", "d": "6/2015"}, {"body": "explanation working redirects basically need wait instance boot call wait settle observe final url final url different initial url want issue also need add way signal different story currently initial url redirects different url via promise reject also means never get reference application instance check url etc explanation solved wrapping inside handle rejection call different method router good first step relatively cleareasy define real use case test think long run better providing finegrained api bootstrap instance see also", "d": "6/2015"}, {"body": "discussion may helpful edit yes know another root causeissue error thought may help understanding may causing problem also suggestion keep issue succinct updateedit instead posting stream consciousness comments", "d": "6/2015"}, {"body": "sandstrom really completely different issue modification going edit looks like issue goes away pass pojo instead null number", "d": "6/2015"}, {"body": "closing favor attached jsbin well", "d": "6/2015"}, {"body": "dpwrussell bug", "d": "6/2015"}, {"body": "confirm alco", "d": "6/2015"}, {"body": "locks confirm removing emberdisableproxycontrollers packagejson fix issue", "d": "6/2015"}, {"body": "seems work error goes away case get action triggered expected editing nt work could nt supposed work point guide longer remember", "d": "6/2015"}, {"body": "locks confirm also solved issue running tutorial ryan labouve youtube got stuck bug thanks alco posting absolute beginner ember js matter quickly got lost learning components pick better understanding ember fundamentals", "d": "6/2015"}, {"body": "issue closed", "d": "6/2015"}, {"body": "anyone else confirm bug created jsbin problem", "d": "6/2015"}, {"body": "used preload data initializer pushed store storepushpayload since possible access store initializer containerlookup forbidden anymore ca nt deferreadiness instanceinitializer preloading data seems pretty hard job typically implemented", "d": "6/2015"}, {"body": "fixed issue pulling data beforemodel hook application route", "d": "6/2015"}, {"body": "intuitivepixel refactor like would probably work requires moving setup logic setup controller initializer big thanks jakesjews moved code initializer application route worked nt even need rwjblue might worth adding something using application route deprecations used", "d": "6/2015"}, {"body": "example docs release uses plan support instance initializers docs wrong", "d": "6/2015"}, {"body": "intuitivepixel solve problem personally nt need use get access ember data store initializer lookup longer available", "d": "6/2015"}, {"body": "making initializers promiseaware would solve issues promise returned ember would wait resolve running next initializer line according dag would even improvement upon even possible async things initializers retaining dag invokation order edit using hook application route works well", "d": "6/2015"}, {"body": "custom piece code provides promiseaware initializers would cool functionality supported ember", "d": "6/2015"}, {"body": "updated blog post three spots initial render sequence discussed specific role application initializers responsible loading app code setting dependency injection load code require ability defer app boot instance initializers specifically intended run entire app present set initial configuration values prep app handle first request fastboot phase run request async hooks application route always run anything else absolutely putting things require async boot phase display loading state errors occur result error handler invoked strongly suspect things want async instance initializers moved async hooks application route route turn access services parts framework appropriate going close issue fairly sure consider bug missed significant usecase handled described please reopen reach thanks", "d": "6/2015"}, {"body": "thanks mixonic got addon related use case nt feel quite solved thread got spree ember lib collection ember cli addons work together provide fully functional ember storefront spree package called provides service needs async load application ready moving code hook host application would mean package parent addon checkouts package would generate application route developer host application application route would look something like import ember ember export default emberrouteextend beforemodel returns promise return thisspreesetupcurrentorder nt feel great muddys concerns packages storefront nt really need worry initialization nested package nt believe developer conscious code addon developer harder provide consistent experience harder maintain project general developers code handled background addon moved host application thoughts thanks much hard work", "d": "6/2015"}, {"body": "would excellent addition engines rfc discussion cc tomdale fact upon reading think usecase already discussed", "d": "6/2015"}, {"body": "thanks mixonic tomdale meaning dig engines rfc spree ember lib close could get building fullblown ember engine ember current iteration right saying generating application route host application way move forward supporting ember", "d": "6/2015"}, {"body": "hhff would suggest making mixin added application controller two thoughts add autorun blueprint tries generate application view upon would make things easy devs without existing view alternatively instanceinitialization could lookup factory application route reopen add mixin would automatically add custom functionality presuming use correctly would work", "d": "6/2015"}, {"body": "yup already got autorun blueprint happening trying minimize surface exposed host application mainly ahh ok applying mixin application route sounds like way go package parent addon none wiser go report back tried something similar without much luck", "d": "6/2015"}, {"body": "problem topaxi", "d": "6/2015"}, {"body": "timohofmeijer solved using following imho weird solution js const computed ember emberlinkviewreopen activelink computed set key value valueset linkview export default embercomponentextend tagname li classnames activelink classnamebindings active active computedalias linkviewactive linkview null use like sure acceptable solution though", "d": "6/2015"}, {"body": "looks pretty good topaxi thanks sharing thing need wrapper get active state nested helpers becomes active moved back computed property observing quite painless since template question already controlled applicationcontroller", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "stefanpenner think attributeproperty handled also like", "d": "6/2015"}, {"body": "afarkas fixed", "d": "6/2015"}, {"body": "removing milestone anglebracket components punted", "d": "6/2015"}, {"body": "got exact issue app ember ember data jquery model fragments", "d": "6/2015"}, {"body": "also seeing issue mobile safari ember ember data jquery model fragments", "d": "6/2015"}, {"body": "narrow version mobile safari troublesome", "d": "6/2015"}, {"body": "mixonic mobile safari", "d": "6/2015"}, {"body": "ios happens different pages app know vague seems always one component stack trace might hint stack trace sentry generated sourcemap support probably wo nt help much anyways", "d": "6/2015"}, {"body": "mixonic seeing well", "d": "6/2015"}, {"body": "might redundant information seeing similar problems", "d": "6/2015"}, {"body": "sirzach error one issue dealing later versions emberqunit fix particular error likely trigger one issue intended trackfix", "d": "6/2015"}, {"body": "rwjblue indeed getting different error upgrading", "d": "6/2015"}, {"body": "also facing issue updates", "d": "6/2015"}, {"body": "try find time next days update api docs well", "d": "6/2015"}, {"body": "implemented basic api docs guide pr pending", "d": "6/2015"}, {"body": "wycats angular react nt mean best agree conceptual mapping argument important aesthetic consideration html angle brackets ugly like xml ugly little bit react code seen makes shudder maybe one bikeshed questions worth fighting sure ever use angle brackets syntax though would see action feel comfortable would hope plan deprecate mustache curly braces day forced use angle brackets syntax day quit ember confirm whether long term plan actually remove mustache curlies handlebars long term time frame would prefer use handlebars stuff indefinitely even though means opting one way binding fact like distinction would assume angle brackets mustache templates supported long time reason ca nt", "d": "6/2015"}, {"body": "eccegordo confirm whether long term plan actually remove mustache curlies clear talking removing curlies invoking components nobody proposed removing curlies entirely things like data binding invoking helpers yes intend eventually drop curly components presumably ember may optional builds sooner svelte builds remove people already fully migrated would assume angle brackets mustache templates supported long time reason ca nt one problem syntax change also tied behavior change implement components maintaining old behaviors performance cost make ember faster smaller soon drop would hope plan deprecate mustache curly braces day forced use angle brackets syntax day quit ember would far easier implement whatever template transpiler want continue benefit rest ember community actual amount code involved supporting mode want tiny reasons officially supporting technical social need balance needs learners existing large codebases alike without leaving anyone behind app owner less constrained feel free experiment whatever syntax like long compile standard ember htmlbars templates", "d": "6/2015"}, {"body": "thanks clarifications feel free experiment whatever syntax like long compile standard ember htmlbars templates looking coming ruby world great options templates slim haml erb etc long ember remain faithful satisfied fact stuff like emblem still possible gives hope seems like worlds angular react java php monolithic corporate cultures behind imposing hideous code aesthetics god help us jsp tag libraries still way things ugly ugly ugly angular suffers lack soul ember certain cool hope remains trying keep social trends popularity becomes fools errand least leads blandness anyway thinking biases showing shut respect performance argument long reasonable transpile path think sufficient read far code write humans make code humans code thoughts expressed terms computer understand let transpilers compilers make code optimal machines", "d": "6/2015"}, {"body": "hit helping update app error message pretty unhelpful wonder could warn time observer created instead exploding view teardown", "d": "6/2015"}, {"body": "use createchildview helper allows use bootstrap popover current context see sources idea port ember nt find way continue use component", "d": "6/2015"}, {"body": "closing initial issue addressed via emberjsrfcs emberjsrfcs pierrickrouxel nt seem directly related seems like something suited needhelp community slack stackoverflow", "d": "6/2015"}, {"body": "rwjblue might fixed recent work", "d": "6/2015"}, {"body": "certainly possible would mind confirming updated jsfiddlejsbin", "d": "6/2015"}, {"body": "swapped urls canary fiddles yes issue gone", "d": "6/2015"}, {"body": "awesome thank", "d": "6/2015"}, {"body": "updated jsbin", "d": "6/2015"}, {"body": "also found wrap nt happen rather using option", "d": "6/2015"}, {"body": "inconsistent works sometimes seen bin however comment todos user model goes fine", "d": "6/2015"}, {"body": "updates found happens routes ember form element application eg seems nt get torn correctly wrap entire template get error", "d": "6/2015"}, {"body": "using helper inside component need access user data normally inject routes controllers accessible inside helper passing every component seems efficient would need make example username every component components would need pass value components access helper inside component way resolve", "d": "6/2015"}, {"body": "addressed emberjs closure actions please see", "d": "6/2015"}, {"body": "bit unlike original fiddle specifying option selected last option works fine chrome broken ie firefox anyone workaround", "d": "6/2015"}, {"body": "yeah major bummer use ember selects bling app placeholderprompt nt work firefox one case add icons autocomplete functionality users use component straight away adding select dom via vanilla ember select mention first scenario nt run problem traditional cases set using code hope helps coffeescript emberselectextend onchange undefined classnames change e gt super e onchange get controller send onchange get selection valueobserver gt changingfrom isnt get value emrunscheduleonce afterrender notifyvaluechange changingfrom get value observesbefore value afterrenderevent gt notifyvaluechange gt val get value trigger change", "d": "6/2015"}, {"body": "cc krisselden well", "d": "6/2015"}, {"body": "thanks sukima added edits suggestion also deprecation fixed current implementation nt require predefine queryparams use ember current implementation queryparams route controller need change route import ember ember export default embermixincreate setupcontroller function controller model thissuperapply arguments controllerset queryparamsready true actions issuequerychanged function changedparam thisqueryparams amp amp thisqueryparams changedparam amp amp thisqueryparams changedparam refresh thisrefresh controller import ember ember export default embermixincreate needs application queryparams queryparamsready false init function var thisget queryparams foreach function param thataddobserver param thatissuequerychanged willdestroy function var thisget queryparams foreach function param thatremoveobserver param thatissuequerychanged issuequerychanged function sender key value rev currentpath null application loading first time forcing reload loading state would needless since already going load model var hascurrentpath thisget controllersapplicationcurrentpath hascurrentpath amp amp thisget queryparamsready usage eg search query parameter route import ember ember import route route export default embermixincreate route queryparams query refresh true controller import ember ember import controller controller export default embermixincreate controller init function thisqueryparamspush query thissuperapply arguments query searchquery issearch function thisset searchquery thisget query return thisget query length gt property query actions search function thistransitiontoroute queryparams query thisget searchquery trim", "d": "6/2015"}, {"body": "rwjblue jayphelps tested ember beta seems issue sure ember release working fine", "d": "6/2015"}, {"body": "davidpett provide steps reproduce", "d": "6/2015"}, {"body": "work demo repo link done first sorry thu jun pm robert jackson notifications githubcom wrote davidpett provide steps reproduce reply email directly view github", "d": "6/2015"}, {"body": "done first sorry worries really want make sure page talking took bit time replicate issue embercli originally use nt occur due browser default behavior tag", "d": "6/2015"}, {"body": "happy investigate reproduction steps take look diff see see anything suspicious", "d": "6/2015"}, {"body": "rwjblue jayphelps removed base tag get issue beta fixed", "d": "6/2015"}, {"body": "davidpett rwjblue figured beta yet gotten fix basically concrete location class nt getting beta excluded route recognizer thanks demo app would taken lot longer find without ember beta ember canary app runs fine ember canary", "d": "6/2015"}, {"body": "awesome little harder embercli issues ca nt simply jsbin anymore thanks", "d": "6/2015"}, {"body": "rwjblue chance getting pr merged beta branch release tomorrow", "d": "6/2015"}, {"body": "davidpett embercli jsbin workinprogress might helpful", "d": "6/2015"}, {"body": "yeah acorncom yet good start faster run cli create demo app", "d": "6/2015"}, {"body": "davidpett sounds good good know", "d": "6/2015"}, {"body": "great catch sorry extra work tracking mistake cherrypicked beta", "d": "6/2015"}, {"body": "confirm works thanks jayphelps finding rwjblue pushing", "d": "6/2015"}, {"body": "case nt believe issue ember rather cost inserting massive amounts svg suspect glimmer work prevent unexpected redraws cases going close feel free convince actually ember issue reopen", "d": "6/2015"}, {"body": "fastboot back good thanks rwjblue working making work today hopefully time look week", "d": "6/2015"}, {"body": "fixed master working update jsbin demo", "d": "6/2015"}, {"body": "news worked around interested know bug", "d": "6/2015"}, {"body": "unfortunately chance investigate", "d": "6/2015"}, {"body": "mmun pinging see premise sounds correct might try hand patching seems handlebarsy chose sorry direct ping", "d": "6/2015"}, {"body": "slexaxton think essentially issue confirm", "d": "6/2015"}, {"body": "yea look like thing though spose issue could saved first half sleuthing issue smile maybe brave subscribe agree whitelist approach think actually crazy find list attributes attributes throw", "d": "6/2015"}, {"body": "async test helpers nt available unit tests intended way unit test promisey behavior", "d": "6/2015"}, {"body": "banged submitter rafalp posted quick workaround", "d": "6/2015"}, {"body": "pr change", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "rwjblue plan fix issue", "d": "6/2015"}, {"body": "trying understand report minutes trouble understanding saying provide structure around descriptions seeing expect see steps reproduce limit code portions required illustrate issue think describing intended behavior", "d": "6/2015"}, {"body": "following correctly think duplicate along lines", "d": "6/2015"}, {"body": "rlivsey would underlying cause problem really implementation detail amurchick uncovered still trying figure public api bug based report", "d": "6/2015"}, {"body": "trek accurate describe problem ok try bug occurs use query parameters nested routes produce navigate see elements developer console see routes value try change example see elements whats wrong every values query parameter equals happens please see first comment expect expect value query parameter changed routes every query parameter must value described case exists worked described yes use nested routes navigate see correct since query parameter defined level click link url changed simply add url reload page write end url press enter see eg every route query parameter value", "d": "6/2015"}, {"body": "basically bug query params sticky nested routes cachekey calculated correctly since nested routes dot name nt work keys dot trek got pr failing test fix query params controllers query params routes feature nt enabled yet though spent time trying figure could nt manage ca nt spend time push within next hr", "d": "6/2015"}, {"body": "nt get chance push pr may got route defined query params push tomorrow", "d": "6/2015"}, {"body": "closed posted work around uses fix want style textstyle anotherstyle style textstyle nt seem supported add extra function simply bolt onto result textstyle far elegant", "d": "6/2015"}, {"body": "documentation would helpful noticed helper pointing instance populated headed stability issue", "d": "6/2015"}, {"body": "upgrading ember fixed issue per previous comment upgrading closing issue smile", "d": "6/2015"}, {"body": "also seeing issue would useful could fixed failing workaround would cool", "d": "6/2015"}, {"body": "wonder ultimately related issue well", "d": "6/2015"}, {"body": "seems related line transitionqueryparamsonly appears set false refreshing model replaceurl variable read declaration edit updated link reference original code", "d": "6/2015"}, {"body": "machty tomdale created rfc", "d": "6/2015"}, {"body": "still seeing nt think fixed post jsbin issue reason jsbin works versions ember due another issue unfortunately ca nt upgrade much deprecated", "d": "6/2015"}, {"body": "sure else could post getting error even remove outlet application template created application controller could addon package causing deprecation warning", "d": "6/2015"}, {"body": "feature enabled removed milestone", "d": "6/2015"}, {"body": "seems like aurelia making use features wycats mentioned using decorators dependency injection also support dropped seems like could movement happening direction", "d": "6/2015"}, {"body": "also support dropped seems like could movement happening direction yes iswas largest barrier next largest actually copious amount refactoring incompatibility classes specifically lack desugaring super", "d": "6/2015"}, {"body": "would great use powered methods instead magical guess possible ember switch classes base classes support understand ember drop problem", "d": "6/2015"}, {"body": "much work done pending pr stefenpenner makes required changes still needs changesfixed iirc", "d": "6/2015"}, {"body": "guess possible ember switch classes base classes classes works correctly superwrappering makes work today mostly waiting things decorator spec finalized ca nt start relying onfinalized spec dropped extraction mixin helper without serves little value core although may provided addon", "d": "6/2015"}, {"body": "updated checkboxes edited words loose mode proto fivetanley im sure means suspect nt matter ember drops", "d": "6/2015"}, {"body": "kagemusha kind tests failing application fix first test working looks like setup nt creating new ember app", "d": "6/2015"}, {"body": "alvinvogelzang get error without reregister already resolved", "d": "6/2015"}, {"body": "input valuefirstname action didtype input working ember", "d": "6/2015"}, {"body": "stefanpenner sorry prod feel free ignore wondering thoughts component performance process migrating leaning heavier components moving away controllers views vast majority changes certainly better awesome ember year far componentheavy parts gotten quite bit slower together generic example got time look would much appreciated", "d": "6/2015"}, {"body": "sandstrom nt chance work yet many ideas soon dedicate time instead embercli absolutely said able spend time removing related cruft deprecated code helping reduce complexity offending code goal work make easier implement perf ideas also know rest team also shares goals anyways thanks demo app use dedicate time", "d": "6/2015"}, {"body": "stefanpenner sounds great feel bad asking ideally dig try improve performance unfortunately wellversed perf optimizations working awake hours small startup happy dropped looking forward see perf magic conjure honeypot fireworks", "d": "6/2015"}, {"body": "vicentereig communicating state query params parent controller coupling two controllers together", "d": "6/2015"}, {"body": "got equivalent take keys seems strange helpers work way nt", "d": "6/2015"}, {"body": "afaik nothing like need normal built", "d": "6/2015"}, {"body": "edit able get changed params syntax experiencing well use case kamalaknn find solution", "d": "6/2015"}, {"body": "meggers yup first argument changed params caveat dealing removed params use couple hacks get current state clean solution would neat actually returned current state machty best practice would suggest reloading model route changes without want child routes rerender path follow new component hooks rewrite", "d": "6/2015"}, {"body": "curiosity get current state", "d": "6/2015"}, {"body": "meggers basically wrapped couple hacks may best solution use make", "d": "6/2015"}, {"body": "glimmer api removed seanpdoyle thank effort research pushing forward", "d": "6/2015"}, {"body": "dropped believe solution wip hopefully get completion test weekend", "d": "6/2015"}, {"body": "forgot smile", "d": "6/2015"}, {"body": "issue never called aborts", "d": "6/2015"}, {"body": "skoryky workaround works fine", "d": "6/2015"}, {"body": "bump makes sense empty object nt empty", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "yay future generations ember noobs know struggle", "d": "6/2015"}, {"body": "thanks last comment hit wall found post google search", "d": "6/2015"}, {"body": "run problem see make change actions action", "d": "6/2015"}, {"body": "long ember supports perhaps issue closed ember wo nt support browser nanoscopic market share days", "d": "6/2015"}, {"body": "think useful explicitly point document deconstruction pattern useful able quickly refactor use native promises smaller bits ember future eg import ember ember const rsvp ember const promise rsvp var apromise new promise globals either case use native implementation necessary drop globals definition top file use mentioned wanting blog architecting way", "d": "6/2015"}, {"body": "think one best strategies ember community futureproofing aligning future specs would definitely useful document advantages patterns enable", "d": "6/2015"}, {"body": "pretty annoying behaviour particular manual transition route explicitly specifying new query params object expect controller set given query params reset old remembered ones preferably oneway binding query params properties way around", "d": "6/2015"}, {"body": "ran issue today running unit test component used fade text getting error worst part error causes test fail related test actually causing problem making bit tricky figure using stefanpenner suggested fix inside emberrunlater function worked fix problem testing edit see stefanpenners post makes good point cleaning timer component destroyed nt run yet prevent issue testing", "d": "6/2015"}, {"body": "therefore willdestroy guarantee run outstanding debounced functions calling super nice way part framework nope general destructors extra sideaffects seen antipatterns", "d": "6/2015"}, {"body": "using stefanpenner suggested fix selfisdestroyed return inside emberrunlater function worked fix problem testing idiomatic oo created something must clean gc language often happens nt true timers object spawns also sure cancel although verbose following would correct solution js export default emberobjectextend startpolling thispoller throw new error concurrent pollers thispoller emberrunlater stoppolling emberruncancel thispoller willdestroy thissuper arguments thisstoppolling possible add sugar believe left addon ecosystem flesh", "d": "6/2015"}, {"body": "stefanpenner thanks seems like better way clean gets rid testing issue", "d": "6/2015"}, {"body": "thanks seems like better way clean gets rid testing issue also important nontesting scenarios imaging leaving lingering pollers user navigates app", "d": "6/2015"}, {"body": "compatible way unregister items container well", "d": "6/2015"}, {"body": "unregister", "d": "6/2015"}, {"body": "react folk boasting hot reloading modules js", "d": "6/2015"}, {"body": "emberjsdata better solution use instead", "d": "6/2015"}, {"title": "event module listed twice modules dropdown qunit test page", "body": "event module listed twice modules dropdown qunit test page probably timmywil idea written way screenshot", "num": "2437", "d": "6/2015"}, {"title": "feature request jquery fn argn", "body": "like method signature jquery callback changed allow optional parameters passed callback function allow write instead", "num": "2435", "d": "6/2015"}, {"title": "ajax empty response required rfc parse attempted", "body": "ajax response status code rfc requires empty body jquery attempts parse using json converter fails know parsing empty string json fail attempt parse made status code surprisingly status code parse attempt still made inevitable errors empty content discarded surely parsing attempted rfc disallows content", "num": "2434", "d": "6/2015"}, {"title": "inadequatedangerous jquery behavior party textjavascript responses", "body": "every textjavascript response gets executed even made request another service cors created exactly prevent kind behavior jsonp arbitrary code execution get like rails jqueryujs form sent automatically attacker respond us textjavascript execute arbitrary code origin demo fix execute responses party origins default make option nt know cc discuss ps would switch origin either using subtle redirectto saving tricks redirect user local jsonp endpoint still get xss much sophisticated vectors", "num": "2432", "d": "6/2015"}, {"title": "jquerygetjson fails silently json parsed", "body": "jqueryparsejson function following code throws error data parsed nt quite follow point used jquerygetjson first encountering issue looked getjson callback simply called would nice kind error propagation error", "num": "2431", "d": "6/2015"}, {"title": "ready promise breaks emulation mode", "body": "tries calling addeventlistener either document window fails nt really make sense since checked immediately prior note reference jquery bug script bundle bug using scriptbundle results uaddeventlistener removed using scriptbundle result uaddeventlistener removed please close reference", "num": "2430", "d": "6/2015"}, {"title": "set width issue value percentage element uses boxsizing borderbox border set pixels", "body": "hi sorry issue name bit long obscure nt manage describe bug properly could reproduce issue following jquery versions demo purpose use jsfiddle uses let imagine html structure html output addition see working demo issue jsfiddle dug little could determined problem comes method seems augmentwidthorheight nt take account borderpadding different unit compared content width sure best way fix issue create issue instead pull request feel free ask questions thanks hard work", "num": "2429", "d": "6/2015"}, {"title": "data bug", "body": "key xxxxxx divdata aaabbb divdata aaabbb note use way modify values consolelog divdata aaabbb output divdata aaabbb divdata aaabbb consolelog divdata aaabbb output right", "num": "2416", "d": "6/2015"}, {"title": "svgelement getelementsbyclassname undefined ie", "body": "previously using rails project jqueryrails gem used jquery code see used statement versions jquery used always since works well html dom elements though works well svg elements ps change made version", "num": "2415", "d": "6/2015"}, {"title": "empty attribute selector nt work since", "body": "empty attribute selector works href nt work since", "num": "2414", "d": "6/2015"}, {"title": "ajax datatype script pending indefinitely case error jquery", "body": "jquery script request kind error user online dns ca nt resolved server responds http etc promise never resolved rejected stays pending indefinitely jquery gets instantly rejected worked around attaching timeout users tend causes lots components stall indefinitely certain problems occur server user connection pending indefinitely using jquery latest chrome sure test http origin otherwise chrome might prevent request security reasons though errors nt propagate either js ajax url datatype script cache true function consolelog done function consolelog fail ajax url datatype script cache true function consolelog done function consolelog fail", "num": "2413", "d": "6/2015"}, {"title": "illegal constructor chrome requires new ff", "body": "trying use jquery create fancy box issue loading jquery script tried different versions return error chrome uncaught typeerror illegal constructorj gt querycallbacksfire jquerycallbacksselffirewith jqueryextendready firefox typeerror constructor document requires new method related list amp amp firingindex lt firinglength firingindex list firingindex apply data data false amp amp optionsstoponfalse memory false prevent calls using add break idea could comes", "num": "2412", "d": "6/2015"}, {"title": "latest jquery xhtmlfriendly internet explorer", "body": "case page indexxhtml helloworld page served applicationxhtmlxml rendered xhtml strict mode loaded jquery error said illegal xml character line column dev tool console script circumstance user agent text file encoding content type xml declaration charset tried several times order ensure problem caused jquery case script error shown case simple script alert hello world error shown case import jquery error said illegal xml character line column dev tool console case import jquery error case case import jquery error shown", "num": "2411", "d": "6/2015"}, {"title": "middle click delegation", "body": "probably know event delegation working button click line avoid nonleftclick bubbling firefox read original bug request tried remove avoid found anything bad click delegation allowed found something bad disallowed especially case ca nt switch behavior without fork almost whole jquery please take look searching better solution old issue", "num": "2410", "d": "6/2015"}, {"title": "possible simplification support functions", "body": "functions check environment invariants could also check state properties inconstant states example instead could encapsulating simplifying conditions", "num": "2409", "d": "6/2015"}, {"title": "remove possible overmodulization", "body": "identify places like could considered since increases size complicates code", "num": "2407", "d": "6/2015"}, {"title": "reverse supportownlast", "body": "support test supposed succeeds confusing reverse value", "num": "2406", "d": "6/2015"}, {"title": "try reuse div creation", "body": "construction used many places try modulize", "num": "2405", "d": "6/2015"}, {"title": "consistent checking node connected", "body": "usually tested switching", "num": "2404", "d": "6/2015"}, {"title": "add method", "body": "method terminates last filter never fond nothing force proper pairing opening indentation developer deprecate favor ruby inside function query however deep need full assurance come function right back started language semantics enforce clearly presents one wishes retain original scope ulfirst tap function thisfind foo css backgroundcolor red find bar css backgroundcolor green consistency ulfirst tap function thisfind foo css backgroundcolor red tap function thisfind bar css backgroundcolor green added noise go away realized whether function called tap would pass context andor first argument offers room discussion examples assume tells us return former scope fact eg somewhere original tells us front going want maintain scope way thinking stating earlier better later also provides opportunity use higherorder functions means greater potential reuse method offers opportunity function bg selector color return function thisfind selector css backgroundcolor color ulfirst tap bg foo red tap bg bar green alternately provide another version etc though prefer added benefit easily see returned function reuse function number ways", "num": "2403", "d": "6/2015"}, {"title": "jquery ajax request handles temporary redirect error", "body": "something like getjson toolscheckifemailexistsphp emailemail function consolelog success fail function consolelog error php server answers temporary redirect browser redirect directly answers expected response jquery handles response error bug intended behaviour", "num": "2402", "d": "6/2015"}, {"title": "build process requires space closing", "body": "build process requires space closing variable modules ie paths containing makes impossible follow style guide write modules way instead currently required may cases like used regexes assign timmywil since code hope nt mind timmy", "num": "2399", "d": "6/2015"}, {"title": "remove testdatauatxt", "body": "seems leftover existed data compare nothing refers seems remove", "num": "2398", "d": "6/2015"}, {"title": "fails undefined", "body": "passing throws instead silently skipping iteration tried versions", "num": "2395", "d": "6/2015"}, {"title": "microsoft edge fails iframe dispatch affect jquery test", "body": "microsoft edge newest windows build fails iframe dispatch affect jquery test error others pass test modules individually couple support tests pass compared one nt pass previous build april test fails see interestingly enough run whole test suite fails lot tests likely one leaves browser bad state screenshot", "num": "2390", "d": "6/2015"}, {"title": "microsoft edge fails focusin support test", "body": "microsoft edge newest windows build makes support test fail use polyfill event edge would good contact ms team problem windows arrives dmethvin", "num": "2389", "d": "6/2015"}, {"title": "handlers ability specify order execution", "body": "event systems like eventmanager ability specify order priority handlers execution currently jquery impossible execute handlers order different one attached without hacking internals think order execution something could land jquery without breaking bc priority put arguments", "num": "2388", "d": "6/2015"}, {"title": "vs addeventlistener multiple identical event listeners", "body": "attach event listener multiple times jquery attached multiple times attach event listener multiple times native attached demo prefer jquery work native discard subsequent attaches event listener", "num": "2387", "d": "6/2015"}, {"title": "add children nodes dom generating api attrdict children", "body": "possible write clean ui code together coffeescript similar jade page template wrote lines code achieve please read createtable creategridtables function usage think still simplify wondering possible merged jquery code amount small", "num": "2386", "d": "6/2015"}, {"title": "width height return adding element styled dximagetransformmicrosoftgradient", "body": "company work web pages use ie compatibility mode updating form jquery width height methods return adding element styled filter progid dximagetransformmicrosoftgradient call method one line first call return correct width run html internet explorer using ie compatibility mode reproduce understand issue iebugexample filter progid dximagetransformmicrosoftgradient startcolorstr endcolorstr function replacing tfoffsetwidth tf width produces results var tf tf button click function alert tfoffsetwidth body append template html alert tfoffsetwidth alert tfoffsetwidth jquery following test performed jquery test removed seems cause wrong result returned instead issue seems appear internet explorer running standards compatibility mode weird thing reproduce real ie unfortunately bug prevents updating latest version jquery thank support", "num": "2385", "d": "6/2015"}, {"title": "jquery bug web page", "body": "", "num": "2383", "d": "6/2015"}, {"title": "handle ajax error callbacks crossdomain jsonp amp scripts", "body": "like see become possible since would simplify dependency handling involves scripts loaded different origin possible using event code snippet swiped mdn javascript var importscript function ohead function loaderror oerror throw new urierror script oerrortargetsrc accessible return function ssrc fonload var oscript documentcreateelement script oscripttype textjavascript oscriptonerror loaderror fonload oscriptonload fonload oheadappendchild oscript oscriptsrc ssrc documenthead documentgetelementsbytagname head importscript onload function function alert read alert script correctly loaded", "num": "2382", "d": "6/2015"}, {"title": "selectelement using val setting option blank wrong value passed", "body": "per latest specs clearly stats value setting selectelement exists point first option release behaviour working latest specs url nodes inserted nodes removed causing list options gain lose one option elements option element list options asks reset select element multiple attribute absent select element display size option elements select element list options selectedness set true user agent must set selectedness first option element list options tree order disabled true older tickets related issue marked closed stating inconsistent behaviour jsfiddle url", "num": "2381", "d": "6/2015"}, {"title": "placeholder problem filtered html", "body": "hello think found bug jquery interact placeholders first see jsfiddle notice load example static placeholder text works properly dynamically loaded placeholder stores actual placeholder text textarea content html also logged console clearly see filtered result dynamic textarea content contains placeholder text believe problem exists filter find jquery methods james w", "num": "2380", "d": "6/2015"}, {"title": "css layout container sizing", "body": "experiencing strange behavior trying proportionally adjust font size parent container issue function called via document ready compute accurately resizes firings function reaches equilibrium fiddle illustrating issue also see issue change dimensions container rerun fiddle", "num": "2379", "d": "6/2015"}, {"title": "refactor effects module", "body": "example offend anyone something horror movie crazy big cyclomatic complexity vague logic mean five nesting", "num": "2378", "d": "6/2015"}, {"title": "refactor manipulation helpers", "body": "specifically high cyclomatic complexity long signature stuff like also bad", "num": "2377", "d": "6/2015"}, {"title": "following code works input type submit fails add disabled button", "body": "strange case sure think something promise open console disable button fine inside function code pictured work using input type submit instead buttons", "num": "2375", "d": "6/2015"}, {"title": "click event brick default browser shortcuts behavior link", "body": "middleclick work perfect perhaps catch default click event soon everyone starts hang handlers event click together forget behavior browser behavior examples open background tab ctrl leftclick middleclick open foreground tab ctrl shift leftclick shift middleclick open new window shift leftclick link suggest default process events click ok browser make possible switch behavior example used project rewrite handlers", "num": "2372", "d": "6/2015"}, {"title": "could trim regular expression simple", "body": "found jquery use following regular expression trim whitespace string javascript support android lt make sure trim bom nbsp rtrim g found think equal contained equivalent whitespace characters may simple cause problem thank", "num": "2371", "d": "6/2015"}, {"title": "traversing use jquery push avoid unnecessary loop find", "body": "see", "num": "2370", "d": "6/2015"}, {"title": "remove additional parameters easings", "body": "currently passed arguments gnarf said legacy behavior maybe remove thanks digging", "num": "2367", "d": "6/2015"}, {"title": "remove document jqueryfn push sort splice", "body": "deprecate document private stuff currently methods comment internal use summoning paulirish amp fitzgen believe least chrome devtools using presence sth list indicator object arraylike makes jquery objects display little nicer regular objects", "num": "2365", "d": "6/2015"}, {"body": "call ready module needed separated ready tests need load synchronously amd mode", "d": "6/2015"}, {"body": "call ready module", "d": "6/2015"}, {"body": "jquery function already lot signatures nt seem worth add another one especially proposed api nt sound intuitive", "d": "6/2015"}, {"body": "thank taken time undoubtedly busy schedule take look must however point understood request consider modifying existing third signature allow optional parameters adding another one away first part reason clear section page reference consult prior coming would look like next nothing jquery intuitive made merely follows design patterns also madeup learned like jquery api however assume talking jquery way light would loved received oneliner response masters showing proper way pass parameters callback function rather nt seem worth something different said especially nt understand say however take discussion leave important matters", "d": "6/2015"}, {"body": "ca nt done without change inside jquery agree signatures already pretty complicated even talking changing args passed function capture information would explicit happening change signature would tied jquery code would potentially fail older versions", "d": "6/2015"}, {"body": "nt discussion approach however lot requests extend jquery api via various helpers consider proposal useful get included since everyone pays price size addition potential bugs happen etc proposal included need get convinced useful enough would nt many drawbacks case original slightly modified proposal instead written currently could written way cleaner understandable amp nt require changes inside jquery", "d": "6/2015"}, {"body": "hi thanks attention understand making changes api done lightly merely wanted raise issue considered well documentation purposes given relatively recent availability right third snippet clean explicit actually initial attempt unfortunately work time function called alternatively jquery might provide function sometime future works contexts approach likely even bigger impact", "d": "6/2015"}, {"body": "time function called documentcurrentscript null right nt think makes little ugly deal reopen still sure want let hear opinion others", "d": "6/2015"}, {"body": "ca nt use quite clean still obvious fairly short", "d": "6/2015"}, {"body": "works indeed little cleaner iife", "d": "6/2015"}, {"body": "duplicate jquery parses output provided header option set explicitly header disallowed response", "d": "6/2015"}, {"body": "would pretty significant backcompat implications get thin wrapper around ajax intelligent guess logic problem caller use ajax explicit text data type conversion manuallyexplicitly", "d": "6/2015"}, {"body": "dmethvin generally agree developer responsibility use ajax properly options control response processing however google jquery cors request good half results nt use datatype setting anyway seems hard monkey patch cross domain requests fine", "d": "6/2015"}, {"body": "made clear really dislike intelligent guess logic reason taken caller declare data type explicitly tell us guess hole would close suspect would break ton world sites others think", "d": "6/2015"}, {"body": "suspect would break ton world sites nt see break something fix cross domain requests using datatype script expecting javascript jsonp would website load js domains via ajax really weird feel safe patch", "d": "6/2015"}, {"body": "homakov thanks opening issue would comfortable opening pr proposed changes think could evaluate change thoroughly could see code", "d": "6/2015"}, {"body": "timmywil security see write thing", "d": "6/2015"}, {"body": "thank opening issue could provide reduced test case help us assess issue", "d": "6/2015"}, {"body": "mean emulation mode mode nt support document modes latest browser", "d": "6/2015"}, {"body": "know ended trying find solution managed figure writing figured would save others bunch time searching posted closed summary scriptbundle minification break minified version jquery sometimes check first", "d": "6/2015"}, {"body": "ok closing bug might want post stack overflow selfanswered question likely people find", "d": "6/2015"}, {"body": "thanks report seems duplicate", "d": "6/2015"}, {"body": "thanks report issues like made us decide want go route ie keys always camelcased fix already present preview version available jquery see details", "d": "6/2015"}, {"body": "thank duplicates fixed jquery already checked", "d": "6/2015"}, {"body": "document value attribute value either unquoted single word quoted string think correct implementation nt", "d": "6/2015"}, {"body": "value attribute value either unquoted single word quoted string humble opinion ambiguous please clarify empty string thanks nice day", "d": "6/2015"}, {"body": "empty string word must quoted used lenient moved align css specifications value must either quoted string unquoted identifier check eg", "d": "6/2015"}, {"body": "tested css queries works correctly said thank reply", "d": "6/2015"}, {"body": "confirmed firefox amp chrome works fine", "d": "6/2015"}, {"body": "thank opening issue find support forums jquery irc channel", "d": "6/2015"}, {"body": "looks like duplicate noisy harmless fixed fuweichin confirm problem nt exist load instead jquery", "d": "6/2015"}, {"body": "problem disappears load according guide", "d": "6/2015"}, {"body": "workaround", "d": "6/2015"}, {"body": "see also think root cause", "d": "6/2015"}, {"body": "oth variable helps size always bad size removing helps size may use variable cases doubt removing module would help much", "d": "6/2015"}, {"body": "used words like possible identify overmodulization modulization nt help removed stay assumptions bad actually check stuff", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "currently four uses one needs stay three csscurcssjs cssvarishiddenjs amp srcmanipulationbuildfragmentjs interestingly enough srccsshiddenvisibleselectorsjs use", "d": "6/2015"}, {"body": "actually uses whereas used module think perf", "d": "6/2015"}, {"body": "would request following fulfillment ticket csscurcssjs change appropriate applicability controlled attachment visibility cssvarishiddenjs use efficient combination hopefully omits former matches srccsshiddenvisibleselectorsjs srcmanipulationbuildfragmentjs change appropriate jquery script evaluation dependent upon document attachment srccsshiddenvisibleselectorsjs use", "d": "6/2015"}, {"body": "nt basically using jquery object rather dom element question implied loop happens cost low especially number iterations construct like would typically really wanted could plugin documentation issues describing method since nonpluginwriter scenarios always dom element jquery object type inconsistency really trip people would another reason put directly jquery core never fond nothing force proper openingclosing pair need close result nt needed eg reallife cases seen written people rarely need complex chains require coming back previous stacked results", "d": "6/2015"}, {"body": "yes good point used capacity suffice reminded", "d": "6/2015"}, {"body": "response return valid json", "d": "6/2015"}, {"body": "yep response id type user", "d": "6/2015"}, {"body": "would really help test case debug debug let us know failing", "d": "6/2015"}, {"body": "know debuggin platform force redirect", "d": "6/2015"}, {"body": "unfortunately need create test run locally server sure nt conditions server causing case browser following redirect jquery wo nt even see final url browser meaning jquery nt even know redirect", "d": "6/2015"}, {"body": "know debuggin platform force redirect nt know force via handy service testing crossorigin stuff", "d": "6/2015"}, {"body": "ok seems something header field xrequestedwith xml playground server adds field redirect gets content directly within one request add crossdomain true ajax options redirect jquery output success", "d": "6/2015"}, {"body": "dmethvin close ticket underlying problem solved found quirky workaround", "d": "6/2015"}, {"body": "oh thought saying understood happened sounds like local server redirected remote resource result request crossdomain nt preflighted say crosscomain nt something jquery know request succeeds", "d": "6/2015"}, {"body": "thats magic happen status code depending request requires get post status gt amp amp status lt status", "d": "6/2015"}, {"body": "yea make optional", "d": "6/2015"}, {"body": "nt autoclosed", "d": "6/2015"}, {"body": "yes guessed used see results seemed sane go", "d": "6/2015"}, {"body": "fixed soon", "d": "6/2015"}, {"body": "duplicate", "d": "6/2015"}, {"body": "note added ms edge support test results amp browser erroneously detected chrome", "d": "6/2015"}, {"body": "sizzle issue", "d": "6/2015"}, {"body": "jacobrossi specifically would issue ie edge nt throw permission denied accessing document unloaded iframe see", "d": "6/2015"}, {"body": "specifically would issue ie edge nt throw permission denied accessing document unloaded iframe yup especially change code many older jquery versions live wild", "d": "6/2015"}, {"body": "people following discussion", "d": "6/2015"}, {"body": "mark blocker simple revert additional check good alpha require sizzle update though leave", "d": "6/2015"}, {"body": "tracking fixing unfortunately fairly gnarly issue related iframe security features make quite issue fix working stabilizing edge first release means massive change like nt appropriate time going look fixing nonetheless get first version door", "d": "6/2015"}, {"body": "oh god bad nt good way feature test behave according specification follows chrome style said need reliable way test jacobrossi could please help us", "d": "6/2015"}, {"body": "let look change made specifically reply back details", "d": "6/2015"}, {"body": "jacobrossi thanks", "d": "6/2015"}, {"body": "update already internal bug tracking since run jquery test suite automation reached bug owner details something deliberate changed bug suspect changed match chrome behavior", "d": "6/2015"}, {"body": "jacobrossi thanks looking forward love help well workaround ie sniffs breaks", "d": "6/2015"}, {"body": "jacobrossi thank replay suspect changed match chrome behavior please nt follow chrome behaviour contradicts specification case", "d": "6/2015"}, {"body": "might switch email conversation case cc reybango", "d": "6/2015"}, {"body": "thank opening issue reflects zindex problem css massive potential abuse complicates signature", "d": "6/2015"}, {"body": "thank opening issue discussed weekly meeting decided would cause many breakages closing backcompat reasons also nt think complication codebase worth case encountered often handled user code", "d": "6/2015"}, {"body": "thanks suggestion already many signatures liking considering first argument behavior differs functions html strings selector strings arraylike objects objects anything handled subsequent method composition preferred though free continue extending functionality shown", "d": "6/2015"}, {"body": "thanks report jquery never supported ie compatibility modes things may break lot configurations basically every ie x ie mode cases currently could decide important like mode would still require additional work make happen thing couple breaking changes coming jquery compat continuation jquery support eg deferreds promisesa compliant likely enterprise upgrade jquery compat comes taking account might fix code breaks nonbackwards compatible changes jquery developing jquery line anymore new browser configuration support would arrive jquery compat make happen know people upgrade version use fact added support seems unlikely thoughs", "d": "6/2015"}, {"body": "thank response agree supporting various compatibility modes internet explorer ridiculous fact supporting one configuration ie ie mode drives crazy control javascript code products would support ie users using ie chrome installed jquery bug seen occurring ie compatibility mode reason nt report bugs agree jquery bugs internet explorer x mode bugs usually work around bugs difference bug regression pointed issue exact code worked jquery stopped working problem working around bug used work thought appropriate report let handle regards jquery compat excited eager try products fortunately control code running jquery products sure upgrade jquery compat soon released speak behalf companies know lot ie dependent code javascript vbscript activex etc enterprise products also use jquery believe benefit new versions jquery may choose upgrade immediately jquery compat released almost sure want road", "d": "6/2015"}, {"body": "know lot ie dependent code javascript vbscript activex etc enterprise thing mode one thing add also mode mode mode etc becomes way harder seems microsoft urging enterprises update use mode transition phase wonder many configurations wild significantly often problem working around bug used work thought appropriate report let handle sure good know problem anyway difference bug regression pointed issue exact code worked jquery stopped working technically speaking regression one version works particular supported browser new one nt unsupported configurations tested may break time btw nt see test removed conditions swapped code code sure problem experience really lies", "d": "6/2015"}, {"body": "enterprise mode offered supposed become standard way enterprises execute legacy intranet apps need functionality early next year real supported microsoft nt much reason anyone test real new development target development enterprises use enterprise mode companies able specifically turn mode old sites need crutch nt need turn mode new code using recent jquery writing today since wo nt using legacy features necessitated mode first place said clarify testing recent version mode sitecode also need run recent firefoxchromesafari supporting ancient code bases probably better using older jquery anyway", "d": "6/2015"}, {"body": "hi please provide us details code causing issue example reproduce using jsfiddle js bin", "d": "6/2015"}, {"body": "attach source code zip file may email address", "d": "6/2015"}, {"body": "nt need send code please use one two services suggest previous comment", "d": "6/2015"}, {"body": "use jquery web applications many js files required downloaded source code ie save also safari webarchive please download sharings safari web archive useful contains js files including ajaxloaded js", "d": "6/2015"}, {"body": "webmailer normally provide minimal jsfiddle showing bug think bug repare two days ago write waiting futur version", "d": "6/2015"}, {"body": "thank opening issue issues need fleshed opened repo said assessment likely correct closing duplicate", "d": "6/2015"}, {"body": "sorry", "d": "6/2015"}, {"body": "thanks found jquery plugin causes error jquery think needs stable write codes like obj obj function codes right jquery plugins failed causes error means plugins written others cause error jquery updated someone fix", "d": "6/2015"}, {"body": "webmailer opportunity fix already nt know exactly choose going next version", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "thank opening issue part spec quoted actually refer programmatically setting value refers cases specifically addingremoving nodes nt apply option element asks reset also nt apply multiple display size options selected makes browser responsible setting first option selected state true believe applies default state dynamic state actually right thing per another part spec selectedindex idl attribute getting must return index first option element list options tree order selectedness set true nt one must return dictates programmatically times selected option passing value present select element set selectedindex discussion", "d": "6/2015"}, {"body": "digging think may actually ie bug apparently running getelementbyid ie decides dump placeholder textarea content", "d": "6/2015"}, {"body": "nt understand reading fontsize modify surprising may change", "d": "6/2015"}, {"body": "fontsize change however computed ratio document ready inconsistent leaves varying font sizes page loads according docs jquery ready event nt fire dom full constructed javascript provides load event executing code page rendered event get triggered assets images completely received cases script run soon dom hierarchy fully constructed question nt parent height width accurately measured document ready", "d": "6/2015"}, {"body": "fiddle executing anything document ready window load later also please try edge version look weekend micha\u0142 go\u0142\u0119biowski", "d": "6/2015"}, {"body": "unrelated document ready think algorithm fitting problem jquery", "d": "6/2015"}, {"body": "fine reducing cyclomatic complexity needs balanced performance remember john going methods one point reducing number function calls across board increased complexity performance jquery methods across board may much issue tho since longer support ie", "d": "6/2015"}, {"body": "may much issue yeah exactly function calls nt expensive especially comparing", "d": "6/2015"}, {"body": "plus function simple many current browsers inline function big complex functions usually excluded optimizations size always risky think much microoptimization rules changing possible case make code faster modern browsers easier maintain", "d": "6/2015"}, {"body": "offense taken super complex handles many corner cases", "d": "6/2015"}, {"body": "code snippet nt making sense post complete example jsbincom", "d": "6/2015"}, {"body": "closing due inactivity reopened reduced test case", "d": "6/2015"}, {"body": "sure jquery issue reporting post code example jsbincom perhaps", "d": "6/2015"}, {"body": "wrote small example", "d": "6/2015"}, {"body": "links work identically chrome firefox", "d": "6/2015"}, {"body": "links work identically chrome firefox use shift ctrl softkey written link description", "d": "6/2015"}, {"body": "yes used ctrileftclick shiftleftclick link", "d": "6/2015"}, {"body": "check example firefox chrome windows links dont work idenically link handler respond clicks softkeys though ctrileftclick work shiftleftclick", "d": "6/2015"}, {"body": "thanks analysis try android code mostly targetted branch needed ie maybe", "d": "6/2015"}, {"body": "android guess mean less", "d": "6/2015"}, {"body": "yes sorry", "d": "6/2015"}, {"body": "checking", "d": "6/2015"}, {"body": "mzgol thanks", "d": "6/2015"}, {"body": "timmywil think need jsperf verifying performance impact committing could easily see improvement less work overwhelmed using array methods nonarrays reason change back actually slows us", "d": "6/2015"}, {"body": "fair enough perf tue jun richard gibson notifications githubcom wrote timmywil think need jsperf verifying performance impact committing could easily see improvement less work pushstack overwhelmed using array methods nonarrays reason change back actually slows us reply email directly view github", "d": "6/2015"}, {"body": "exposed use tests ca nt find docs jqueryuijquerymobile nt use think safe change cc scottgonzalez arschmitz", "d": "6/2015"}, {"body": "markelog nop contrary mzgol said gnarf added tests recently would love make pr think remove", "d": "6/2015"}, {"body": "markelog nop contrary mzgol said gnarf added tests recently tests talking specific changes legacy behaviour would love make pr think remove say okay removal would love would send mzgol nt mind", "d": "6/2015"}, {"body": "used jquery mobile", "d": "6/2015"}, {"body": "three years since rewrote jquery ui easings use one parameter", "d": "6/2015"}, {"body": "pr welcome", "d": "6/2015"}, {"body": "think timmywil gnarf opinions could interesting would suggest wait pull yet", "d": "6/2015"}, {"body": "guess would imagine jqueryeasing plugin still gets lot usage concerned breakage however used", "d": "6/2015"}, {"body": "contacted dev already one month ago find answer mysterious arguments think change part would update plugin copypaste jqueryui right", "d": "6/2015"}, {"body": "think change part would update plugin copypaste jqueryui right opposite jquery ui used import easing plugin rewrote easings scratch years ago", "d": "6/2015"}, {"body": "yeah know said upgrading easily plugin copypaste version", "d": "6/2015"}, {"body": "could also detect arity easing function migrate effects prefilter land backport easing functions provide deprecation warning using migrate", "d": "6/2015"}, {"body": "gnarf good idea", "d": "6/2015"}, {"body": "seems good change pr welcome", "d": "6/2015"}, {"body": "yea good idea gnarf tue jun oleg gaidarenko notifications githubcom wrote seems good change pr welcome reply email directly view github", "d": "6/2015"}, {"body": "believe least chrome devtools using presence objectsplice sth list indicator object arraylike imagine would use purpose similar jquery concept isarraylike method like push sort splice actually right satisfied triggered objects", "d": "6/2015"}, {"body": "case disagree nt deprecate couple reasons part public api would need nt remove used internally long whole time pointed used qualify jquery objects arraylike good nt documented internal use given think leave", "d": "6/2015"}, {"body": "said agree methods internal use moved jquery object easily moved think better leave particular ones", "d": "6/2015"}, {"body": "part public api would need hiding lot methods exposed officially public etc think worth hiding things otherwise people start using end situation exposed untested code people rely change sth may break party code situation nt seem different ones least comes argument nt remove used internally long whole time done amp others yet hiding pointed used qualify jquery objects arraylike good doubt really chrome easily check property presence backwards amp forwardscompatible", "d": "6/2015"}, {"body": "hiding lot methods exposed officially public swap buildfragment dommanip etc like said hiding swap buildfragment dommanip deprecation applies documented apis think worth hiding things otherwise people start using end situation exposed untested code people rely change sth may break party code let make exception agree neither document remove done jqueryswap jquerybuildfragment jquerydommanip amp others yet hiding true something said fact one complained whole time easily check jquery property presence backwards amp forwardscompatible nt feel comfortable asking prefer fit broader rules determine objects arraylike let force vendors make special rules us", "d": "6/2015"}, {"body": "hiding lot methods exposed officially public swap buildfragment dommanip etc like said hiding deprecation applies documented apis right said remove document issue title updated done jqueryswap jquerybuildfragment jquerydommanip amp others yet hiding true something said fact one complained whole time also case amp friends decided hide nt issues easily check jquery property presence backwards amp forwardscompatible nt feel comfortable asking prefer fit broader rules determine objects arraylike see neither firefox edge treats jquery objects special way displays regular objects chrome amp safari sth universal others think cc jquerycore", "d": "6/2015"}, {"body": "btw talking making jquery array subclass nt done mostly due handling impossible correctly crossbrowser amp rwaldron might know already define array methods intended make available possible maybe document methods aliases proper array methods done nt like semiprivate apis problematic", "d": "6/2015"}, {"body": "confirm also never work correctly without builtin subclassing semantics classes", "d": "6/2015"}, {"body": "guess lean towards documenting choose one document think note recommending methods like add issue minor enough feels little like bikeshedding mon jun pm rick waldron notifications githubcom wrote confirm also never work correctly without builtin subclassing semantics classes reply email directly view github", "d": "6/2015"}, {"body": "nt see us ever documenting methods mutate context collection rather creating new one note one public returns properly able jquery object cursory look nt reveal actual use three although could easily oversight part real abandonment ever subclass array possible caveats better size andor performance leave public api unchanged reserve freedom later abandon implementation", "d": "6/2015"}, {"body": "nt looked two used heavily sizzle", "d": "6/2015"}, {"body": "ok think better leave wo nt push nt seem terribly important", "d": "6/2015"}, {"body": "used heavily sizzle usually always actual array instead jquery collection", "d": "6/2015"}, {"body": "yea wow looks like changed", "d": "6/2015"}, {"body": "wonder affected performance", "d": "6/2015"}, {"body": "actually could avoid double loop pushstack uniquesort pushstack beforehand", "d": "6/2015"}, {"body": "looks like commit changed experimenting quick unique check", "d": "6/2015"}, {"body": "yea inclined change back surprised nt catch given tests would fail", "d": "6/2015"}, {"body": "think methods could useful kind cool useful think document", "d": "6/2015"}, {"body": "hey miketaylr dmethvin say ff good case usecase found ticket fiddle updated reality list lis user hits enter li gets replaced value input another li gets generated new input causes issue", "d": "6/2015"}, {"body": "ps fiddle says ff good case seems wrong still would good behave consistently work around", "d": "6/2015"}, {"body": "dmethvin yes possible work around issue implemented fix one affected control however issue affect web platform agree good idea remove element focus complex scenarios happens best solution think fix root cause issue bugmissing feature firefox web browser miketaylr firefox browser still nt support focusin focusout events nicholas czakas nzakas", "d": "6/2015"}, {"body": "one problem even focusout triggered removed element jquery runs parent focusout handlers example console output chrome", "d": "6/2015"}, {"body": "hmm seems partially took care via see also summary staying ms edge", "d": "6/2015"}, {"body": "search code apart event test place sniff chrome places sniff android ios firefox one place disable focus tests chrome amp ie therefore test place left change said test description amp message changed include edge seems", "d": "6/2015"}, {"body": "closing inactivity dupe concrete test case report little vague reopen", "d": "6/2015"}, {"body": "please vague look jquery window width height return incorrect different values depending long page open code posted works correctly time wasting time building ya fullon reduced testcase ya take decentsized jpg resize jquery window resize myresize function myresize jquery jpeg css width jquery window width height jquery window height run go apple store using jquery call anymore using code posted earlier fix part javascript framework code", "d": "6/2015"}, {"body": "wasting time building ya fullon reduced testcase ya sorry dig every single code nt work developer wants work voluntary wants something get fixed need try help us understand issue nt know exact nature problem forums amp stack overflow places pinpoint issue hope realize wasting time attitude making us likely fix issue opposite", "d": "6/2015"}, {"body": "seductiveapps removed offensive comment locked issue nt", "d": "6/2015"}, {"body": "going blog post asking community feedback issue", "d": "6/2015"}, {"body": "code one ideas mentioned meeting", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "closing due inactivity", "d": "6/2015"}, {"body": "label issues hiding private methods nt share seems use public api changes", "d": "6/2015"}, {"body": "documented property private behaviour change ie backcompat nt find terrible complex way test values property say could document internal", "d": "6/2015"}, {"body": "right forgot micha\u0142 go\u0142\u0119biowski", "d": "6/2015"}, {"body": "one thing keep mind working around test results weird setups wo nt possible change see eg discussions around", "d": "6/2015"}, {"body": "discussed meeting nt think worth effort remove property convenience someone feels inspired open pr consider", "d": "6/2015"}, {"body": "ticket filed chromium request profiling focused recommendationswarnings provided problem detected", "d": "6/2015"}, {"body": "punch line nt dom api would right api jquery methods could fast could thorough case would needed jquery first place would least simple things", "d": "6/2015"}, {"body": "paulirish ticket filed chromium request awesome thank", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "alternative pr", "d": "6/2015"}, {"body": "another one", "d": "6/2015"}, {"body": "assuing makes use etc invalid appears like best", "d": "6/2015"}, {"body": "assuing makes use settimeout etc invalid appears yup matters", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "fourth pr", "d": "6/2015"}, {"body": "ok see hard fix without breaking backwards compatibility stand corrected still tag equivalent let explicitly document suggestion mentioned would nt work suggestion developer calls nt explicitly set could jquery internally download data via xhr use instead introducing tag think answer would break many sites crossdomain queries site nt set cors allow crossdomain request xhr could fail situations would currently succeed essentially bypassing browser security model xhr nt dropin replacement similarly approach first tries xhr fails access control error falls back current approach would nt help attacker choose url probably typically choose url trigger fallback behavior leaving vulnerability place wanted document eg help future self remember simple solutions wo nt work thanks evaluating", "d": "6/2015"}, {"body": "record since mentioned nt think specific jquery think specific jquery surprising simply calling side effect inserting script tag attackercontrolled url surprising enough documentation describe circumstances happen steps need taken avoid vulnerability thank allowing make case", "d": "6/2015"}, {"body": "attacker control url", "d": "6/2015"}, {"body": "fixed amp available jquery compat", "d": "6/2015"}, {"body": "words issue duplicate", "d": "6/2015"}, {"body": "relevant fiddle confirming works changed jquery version jquery compat edge", "d": "6/2015"}, {"body": "thanks mzgol accessed fiddle saw working appreciate support", "d": "6/2015"}, {"body": "issue still open", "d": "6/2015"}, {"body": "green open yes comment asks test case make one", "d": "6/2015"}, {"body": "fix bug copy jquery ui try create isolated test case using latest jquery ui create minimal patch turn pull request objections", "d": "6/2015"}, {"body": "sounds good tue jun martin n notifications githubcom wrote fix bug copy jquery ui try create isolated test case using latest jquery ui create minimal patch turn pull request objections reply email directly view github", "d": "6/2015"}, {"body": "right test case found try write unit test might need bit help let see", "d": "6/2015"}, {"body": "argh realised part manifestation bug fixing actually jquery ui using directly also open pull request jquery ui regarding droppable", "d": "6/2015"}, {"body": "right basically idiot two weeks ago test case christopher perfect test case using written small patch nt able construct reasonable unit test think", "d": "6/2015"}, {"body": "reopen frozen pr", "d": "6/2015"}, {"body": "first attempt note latest master without change old new think class attribute change nt forcing relayout otherwise think offsetx test much slower button test also seeing relayout chrome timeline let know think probably want lot test cases handlers access event properties", "d": "6/2015"}, {"body": "really sure want change developer asks really wants know much space available actually also true media queries even possible scrollbar customized much larger reason media queries include scrollbar media queries need calculable without knowing styles document contents nt know whether applied example necessary shortcoming mq api changing semantics existing api match another less useful api nt really great maybe add new method think important end would even always prefer use right api want exact sync time semantics css media queries", "d": "6/2015"}, {"body": "nt take comment serious case plan change semantics leave like suggested", "d": "6/2015"}, {"body": "decided going taking", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}]