[{"title": "router hashlocationstrategy must follow routeproviders order nt matter", "body": "reported angulario issue quote followed documentation setting hashlocationstrategy nt work bootstrap appcomponent provide locationstrategy useclass hashlocationstrategy src crisiscenter routerproviders switch bootstrap provider list order around put hashlocationstrategy second list everything seems work updating documentation suggests note nt tested original", "num": "6201", "d": "12/2015"}, {"title": "async validators promise", "body": "hello write simple async validator taken another issue angular throw error uncaught promise typeerror thissubscribe function use angular alpha meteorangular package sorry really bad english thank", "num": "6200", "d": "12/2015"}, {"title": "camelcase ngcontent", "body": "since moving kabob case attributebased directives also change ngcontent ngcontent tripped today writing bootstrap wrapper library directives still use ngcontent beta", "num": "6199", "d": "12/2015"}, {"title": "suitable spa", "body": "happy new year try bit needs following features exist interacting html tags exist sometime needs attach behavior like jquery one component root component sometime need render page server data model eg aspnet mvc interact user javascript client example need two components rate itadd favorites section", "num": "6197", "d": "12/2015"}, {"title": "model getting refreshed form reset", "body": "sure behavior expected easy workaround press clear form bound model updated newreset values form resets expected using angular beta", "num": "6196", "d": "12/2015"}, {"title": "testcomponentbuilder needs common directives referenced view", "body": "currently common directives coredirectives formdirectives included automatically need manually referenced component view annotation however case testcomponentbuilder fails build component component uses unreferenced common directives example error message possible add references component definition ideally tcb able build whatever angular builds normally also way tcb handles errors calling onrejected callback promise seldom see anyone binding means tests regarded passing component fails build pass tcb fails create component proposed solution would make common directives available tcb", "num": "6195", "d": "12/2015"}, {"title": "surrounding indexhtml tags within app component nice", "body": "think angular approach get data apis render things client mvc server frame work many features approach think must release features send data client case need ajax call server functionalities eg like thing add favorites cases angular ca nt must create corresponding components mvc server side views architecture things opinion surrounding indexhtml tags app component nice thanks attentions", "num": "6194", "d": "12/2015"}, {"title": "child route upto levels bug", "body": "today built routing mechanism included level child route looks like maincomponent gt frontcomponent gt aboutcomponent gt aboutpagecomponent aboutpagecomponent actual view show user said route configurations every component maincomponent routeconfig name home path component frontcomponent useasdefault true frontcomponent routeconfig name home path component homecomponent useasdefault true name path component aboutcomponent aboutcomponent routeconfig name aboutpage path component aboutpagecomponent useasdefault true face problems structure routelink problem html using routerlink aboutpage template attached maincomponent produce error error component maincomponent route named aboutpage aboutpage maincomponent route problem page refresh navigate page comes work finehappy however refresh page url changes observer double slash url automatically appended strange next refresh page second time application redirects even strange behavior kindly advice going wrong somewhere", "num": "6193", "d": "12/2015"}, {"title": "support svg foreignobject adding xhtml namespace", "body": "following usecase quite common svg embed html content via especially since svg supporting multiline text programmatically means elements within svg foreign objects need created corresponding namespace html elements need get namespace since angular currently supports namespaces proposing add namespace following example would work javascript import component component selector app template export class app changes presumably go", "num": "6190", "d": "12/2015"}, {"title": "enableprodmode console message mysterious", "body": "got message console curious behaved literally typed console point greeted error console message link docs explaining enableprodmode example exactly enable example something like would much clearer sure exactly import enableprodmode enableprodmode", "num": "6189", "d": "12/2015"}, {"title": "routerconfig put component root component", "body": "due one put entire app routing config single file inside single annotation config simply scalable large scale app please allow putting routerconfig multiple components split router config across files", "num": "6188", "d": "12/2015"}, {"title": "ngrouteshim nt load map undefined router thrown", "body": "luckily found someone else route example modified add ngrouteshimjs using ie switch edge dev mode get error bottom post angularrun method ngrouteshimjs nt run error occurs navigation occurred file referenceerror map undefined routeregistry routerfactory invoke enforcedreturnvalue invoke anonymous function getservice invoke anonymous function foreach referenceerror map undefined routeregistry routerfactory invoke enforcedreturnvalue invoke anonymous function getservice invoke anonymous function nodelinkfn", "num": "6187", "d": "12/2015"}, {"title": "add massive demo angaulr app resource list", "body": "angular still young finding examples online hard decided develop real app application developed scratch angular awesome checkout app checkout source recommend adding central link repository begin tracking different applications setups regards sean", "num": "6186", "d": "12/2015"}, {"title": "remove rx webworker bundles", "body": "rxjs longer bundled main angular distribution still bundled worker ui worker app bundles nt bundled either additionally nt think users ever need load ui cc jeffbcross afaik removed rx reduce bundle size kept small chunks inside angular exposed correct", "num": "6185", "d": "12/2015"}, {"title": "workerrenderapp renamed workerrenderapplication", "body": "makes sense since workerapp name background bundle workerappapplication used workerrenderapp deprecated", "num": "6184", "d": "12/2015"}, {"title": "contentchild query work string queries", "body": "using contentchild annotation type query works well try use string query reason annotated field always null following sscce reproduce problem import component contentchild import bootstrap component template selector ctr class testcontainercomponent contentchild inner inner ngaftercontentinit consolelog inner thisinner component template selector app directives testcontainercomponent class testappcomponent function main return bootstrap testappcomponent catch err gt consoleerror err documentaddeventlistener domcontentloaded main running code result console inner null view text although api docs show usage example type query type definition indicates query either type string type string", "num": "6182", "d": "12/2015"}, {"title": "use local template variable within ngif", "body": "hi beta template like even boolvalue true input visible test undefined click handler fix someone gave make directive autofocus problem everytime need access field may hidden embedded template wo nt able use even plain javascript could test value defined plunker link bug expected behaviour efficient way deal", "num": "6179", "d": "12/2015"}, {"title": "using existing html tags", "body": "n angular set html tag razor view use functions defined angular controller within tag achieve view exapmle want click html tag razor view call method component directive word need component without template view methods call indexhtml possible", "num": "6178", "d": "12/2015"}, {"title": "fetching static resource test", "body": "test data stored json files shared server client nt update data many places models change attempting fetch data using http use tests test failing debugging pause debugger momentarily request sent test completes sucessfully sure whether log angular replace angular http instance promise observable constructed directly xhr request tests pass without issue", "num": "6176", "d": "12/2015"}, {"title": "question formatter parserequivalent angular", "body": "hi searched sources find equivalent parser formatterconcept angularjs looks like use custom valueaccessors format parse bindings good idea yes following implementation works parsesformats german date format daymonthyear ok using multibindings angular behave one accessor one component wishes manfred import directive renderer elementref self forwardref provider import ngvalueaccessor defaultvalueaccessor import constexpr const provider constexpr new provider ngvalueaccessor useexisting forwardref gt datevalueaccessor multi true directive selector input date host input input eventtargetvalue blur blur bindings provider export class datevalueaccessor extends defaultvalueaccessor", "num": "6174", "d": "12/2015"}, {"title": "warningerror messages links", "body": "brought mind message devmode tells use prodmode nt tell think think link links great also helped size production version sure let", "num": "6173", "d": "12/2015"}, {"title": "available javascript", "body": "available typescript would possible made available javascript well thank", "num": "6172", "d": "12/2015"}, {"title": "ca nt explicitly validate controlgroup", "body": "would nice possibility explicitly call validate method controlgroup starting invalid form user still nt entered anything nt always ideal forms guide quite convenient start populated model hence nt need check fielddirty fieldtouched view please see video check repo always easier show problem", "num": "6170", "d": "12/2015"}, {"title": "ca nt reset controlgroup", "body": "submitting form would nice could somehow reset controlgroups state perhaps reset method controlgroup current way accomplish rebuilding entire form using formbuilder tried several approaches eg twowaybinding property component clearing value updating controls value updatevalue problem obviously internal state nt reset ie controls dirty touched even reset values form look differently since probably bind error divs checking fielddirty fieldtouched please see video check repo always easier show problem would also nice able explicitly call validate ie form nt validatedinvalid default created separate issue", "num": "6169", "d": "12/2015"}, {"title": "use objectdefineproperty windowangular causes typeerror", "body": "upgradejs line hasownproperty check alone causes typeerror use objectdefineproperty define setter function windowangular windowhasownproperty returns true even angular actually undefined local angular object also undefined really local copy declared jsfiddle demonstrate example propose actually null amp undefined check instead would make safe use objectdefineproperty add setter function listen angular initialized", "num": "6165", "d": "12/2015"}, {"title": "problem ngcontent select atribute components encapsulation", "body": "problem one component wraps another one trying provide nested content wrapped component additionally trying take nested content selectors case goal provide component xb encapsulate component xa possibility provide nested content xa usage xb xa component xb component example usage output got case everything works fine expected case lets modify xa component whit adding selectors ngcontent eg reverse order children real case placing content different places page layout xa component output contains content provided xb component output got case workaround repackage content xb component good always know exact xa ngcontent selectors xb component superb flexible xb component output looks better still problem ngcontent taking whole selected element duplicated think best flexible solution support case directly alternative solution case ngcontent provide additional attribute unwrap content selected element angular version browser chrome", "num": "6164", "d": "12/2015"}, {"title": "templateref accessible local variable", "body": "expecting following would possible comes undefined real usecase class tooltiplike directives one could cases people want specify html tooltip popover content", "num": "6163", "d": "12/2015"}, {"title": "query string parameter name case sensitive via routeparams instance", "body": "found routeparamsget case sensitive example query string page parameter included route config path routeparamsget type work routeparamsget type wo nt work", "num": "6162", "d": "12/2015"}, {"title": "enforcing unidirectional data flow dev mode", "body": "currently following wo nt work dev mode dev mode angular walks change detection graph twice first time apply changes second time check nothing changed mean nothing changed currently make sure bindings produce object case means instance make code work specify custom equality template following done right without changes framework listeq pipe noop prod mode dev mode structural check solution works ergonomic pros works right explicit cons bad dev ergonomics specify custom equality registry could make change detection pluggable could specify custom equality checks datatypes pros good dev ergonomics cons new concept slow run checks dev prod modes nothing changed means nothing changed visually instead checking bindings produce instances check changes dom special flag renderer running change detection second time set flag true directive invokes renderer throw pros performance impact new concepts easy explain cons relaxed check", "num": "6160", "d": "12/2015"}, {"title": "ngclass nt work element ngfor", "body": "nt work html works html", "num": "6158", "d": "12/2015"}, {"title": "templates update", "body": "testing simple app using following code data updated ie works browsers libraries used componentts import component component selector myapp template export class app public title string current title constructor settimeout gt thistitle updated title bug missing library need include thanks", "num": "6157", "d": "12/2015"}, {"title": "lack src link errors silently", "body": "hello working personal project could figure expressions getting rebound views new data getting compile console errors eventually found linking indexhtml know quickstart tutorial tells include link think would helpful raise sort error imported", "num": "6156", "d": "12/2015"}, {"title": "life cycle hooks firing classhidden working", "body": "hello initially used classhidden hidedisplay popups router took new page popups would displaying default fixed issue ngif new issue popped ie firing ngoninit interact page page loads see icons either hidden displayed depending state assume using classhidden still icons separately two tabs side display different content using ngswitch ngoninit ngaftercontentinit firing toggle two tab pages documentation mentioned initialization work make initial api calls get information load page something incorrectly bug", "num": "6155", "d": "12/2015"}, {"title": "bug router navigating imperatively routernavigate causes unexpected browser reload", "body": "stumbled strange behavior router basically navigating imperatively seems force browser reload nt wrap call additionally see character appearing url brief moment reload let code speak shows faulty behavior whereas works fine failed put plunkr demonstrates bug created repository instead reproduce behavior follow steps clone repository run run click contact click edit click cancel see browser reloading described caused line comment line uncomment instead works fine", "num": "6154", "d": "12/2015"}, {"title": "time support list menu slider tabs", "body": "time support list menu slider tabs thank", "num": "6153", "d": "12/2015"}, {"title": "ngaftercontentchecked ngafterviewchecked triggering mouse movement", "body": "hi trying make component using gridifier quickly ran problem would trigger like crazy found least one culprit mousemove listener sure design bug created plunkr creates mousemove listener highlight problem since component init gridifier turn listens mousemove mousemove listener external lib example manually added div using jquery cause angular trigger bug initiated mouselistener trigger angular methods", "num": "6152", "d": "12/2015"}, {"title": "simple use ngmodel fails unintuitive error", "body": "reproducible simply adding attribute custom element following error induced anyone unfamiliar source code error helpful error resolved simply commenting following line imported included portion initialized", "num": "6151", "d": "12/2015"}, {"title": "deeply linked auxroutes working", "body": "hie trying use auxroutes routeroutletbut working came know deep linking auxroutes supported true created plunker demo hope someone helps", "num": "6150", "d": "12/2015"}, {"title": "quick start documentation order script tags could cause problems routerlinkactive", "body": "see issue documentation add indexhtml part fragment changed systemsrcjs fixes routerlinkactive problems", "num": "6149", "d": "12/2015"}, {"title": "router user goes away current state comes back state view somehow cached", "body": "plunker problem user made changes components template bound controller example simple check box without ngmodel navigates another state comes back first one controls preserved state look explanations plunker behavior breaks synchronization view controller state example user uses changed event drop parent state change child states navigating away parent state coming back shows last selected drop value loaded route default possibly different one selected drop caching current view state user navigates away intentional", "num": "6148", "d": "12/2015"}, {"title": "routeparamsparams type map", "body": "docs aid routeparamsparams type always case seems see debugging message case value type", "num": "6147", "d": "12/2015"}, {"title": "dart nt accept components without selector", "body": "trying convert typescript routing tutorial dart seems work differently dart example following code fails seems dart nt accept components like without selector class crisislistcomponent component template heroes get heroes class herolistcomponent component selector myapp template component router crisis center heroes directives const routerdirectives routeconfig const const route path crisiscenter name crisiscenter component crisislistcomponent useasdefault true const route path heroes name heroes component herolistcomponent class appcomponent main bootstrap appcomponent routerproviders", "num": "6146", "d": "12/2015"}, {"title": "hero tutorial typescript nt work", "body": "typescript angular resolved object promise always runtime emits error code tutorial changed public heros hero public heros error", "num": "6145", "d": "12/2015"}, {"title": "root element gets replaces using class name app selector", "body": "plunkr order reproduce use class name selector add multiple classes root element addition app component selector class symptom additional classes removed", "num": "6144", "d": "12/2015"}, {"title": "ngcontent work root component", "body": "look provided example see attempts make use ngcontent work reason work seems attempting use contents root component appears indexhtml however soon intermediary component introduced example ngcontent works correctly also basically lumping two things together one nt ngcontent become ngcontent ngif ngfor etc", "num": "6143", "d": "12/2015"}, {"title": "http headers caseinsensitive", "body": "current implementation got case sensitive http headers return however http spec section quite specific header keys case sensitive", "num": "6142", "d": "12/2015"}, {"title": "http response headers seem incomplete", "body": "reading httpresponse headers following plnkr get entries issuing request adress via curl get lot headers seems angular implementation ignores headers missing something", "num": "6141", "d": "12/2015"}, {"title": "router routerlinkactive class set previous link current one version", "body": "occurs chrome firefox ie plunker code click first link first component loaded routerlinkactive class added first link red click second link second component loaded routerlinkactive class added first link second component screen first link made active red background", "num": "6140", "d": "12/2015"}, {"title": "host impot", "body": "exception resolve parameters child host make sure valid type annotations", "num": "6139", "d": "12/2015"}, {"title": "http return status code text properly errors", "body": "currently defaulting base incorrect network errors cors etc", "num": "6138", "d": "12/2015"}, {"title": "style ngstyle bindings fail trailing semicolon present", "body": "using one binds style ngstyle presence trailing comma prevent binding occur without exception thrown console css statements usually end semicolon confusing eg", "num": "6137", "d": "12/2015"}, {"title": "cssselectorgetmatchingelementtemplate nt handle known void elements correctly", "body": "angular version os browsers ubuntu firefox nightly chrome beta following component directive trying dynamically create component get handle known void elements like forbidden use known void elements component selector", "num": "6136", "d": "12/2015"}, {"title": "animation oncomplete triggered using animationname fadein fadeout", "body": "using transition animationname fadein fadeout handleanimationcompleted oncomplete method triggered chrome latest version os x firefox scaleinscaleout works fine", "num": "6132", "d": "12/2015"}, {"title": "using moduleid component makes load", "body": "trying hero example angulario using jspm load scripts nonbundled get relative urls templates tried method added component import component import hero hero component selector myherodetail inputs hero moduleid moduleid templateurl heroeshtml however running app makes html stuck loading errors console screenshot", "num": "6131", "d": "12/2015"}, {"title": "question editable form service using observables", "body": "hi got plunker describing simple form service provides data form shows ui user editable fields bound model departmentslistts component shows list departments current person department user changes name model name changed user changes department clicking model departmentid changed user clicks save console see current model screen everything works fine except toy example real world need fetch data server delays prepared servicets lines need uncommented use completely data pretending fetched server got stuck question implement kind form using observables server delay thanks advance", "num": "6130", "d": "12/2015"}, {"title": "sending array object input considers string ngfor", "body": "sending array object input considers string ngfor import component input directive component selector bankaccount template class bankaccount input bankname bankname string input accountid id string property bound wo nt automatically updated angular normalizedbankname string component selector myapp template directives bankaccount export class appcomponent constructor thisname name rbi name note demo", "num": "6129", "d": "12/2015"}, {"title": "feat router resolve inbound links pathlocationstrategy", "body": "issue afaik routing pathlocationstrategy serverside requires redirecting requests root url assuming following routes user bookmark common practice redirect incoming request root breaking expected behavior direct linking possible setup server maintain inbound link prepending route hash example gt except currently builtin support resolve hash path proposal managed resolve inbound links following javascript import location export class maincomponent dependency injection static get parameters return location redirects inbound hashurl corresponding route ex evanplaicecom designs gt evanplaicecomdesigns function resolvehashurl location let hash locationplatformstrategyplatformlocationhash hash let path hashsubstring consolelog redirectto path locationgo path hash present converts hash route path stripping hash char seems like fragile approach works basic routes ie wildcardauxsub routes would make sense split path pop chunk route matched followed addition history updated resolved path currently hashurl gets pushed history breaking forward button familiar internals feel like users choose use framework ability implicitly resolve inbound links note searched documentation googled exhaustively solution issue better way resolve inbound linking ears see action evanplaicecom full source available githubcomevanplaiceevanplaicecom", "num": "6127", "d": "12/2015"}, {"title": "angular support template tag templateurl", "body": "angular script tag templateurl load script tag exist load disk angular could support similar way template tag would nice could open possibility bundling template allow writing template outside javascript file control template loading instead rely angular load url stackoverflow question issue", "num": "6126", "d": "12/2015"}, {"title": "dart needs specify directives ngfor ngif typescript nt need", "body": "noticed typescript nt need specify directives like dart get error build error transform templatecompiler threw error template parse errors property binding ngforof used directive embedded template heroes error error selectedheroname details id parserdart templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates dart asyncfuturedart futurefuturemicrotask dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart startmicrotaskloop dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates", "num": "6125", "d": "12/2015"}, {"title": "add support template data", "body": "think would awesome could insert template inside component tags allow separation concern make template dynamic per sliderpanel instance regards sean mediasignagecom free digital signage everyone lindero cyn rd westlake village ca phone fax live support", "num": "6124", "d": "12/2015"}, {"title": "", "body": "n", "num": "6121", "d": "12/2015"}, {"title": "proposal styleref api", "body": "motivation currently modify style component must use element class elementa constructor elm elementref renderer renderer renderersetelementstyle elm display block renderersetelementstyle elm backgroundcolor fff renderersetelementstyle elm padding works well think intuitive goal provide easy way access component styles intuitive api proposal propose idea accesses styles component directly element b class elementb constructor style styleref styledisplay block stylepadding style backgroundcolor grey simple intuitive want feedback please let opinion", "num": "6120", "d": "12/2015"}, {"title": "keypress event handler binding error", "body": "", "num": "6119", "d": "12/2015"}, {"title": "allow prod mode enabled via buildtime environment variables support deadcode elimination", "body": "frameworks support dce deadcode elimination environment variables switching modes webpack w defineplugin browserify w envify replace would replaced uglifyjs statement would removed would great list standard environment variables libraries could use universal modules example env platform related", "num": "6118", "d": "12/2015"}, {"title": "angularjs http post drops syntaxerror wellformed firefox", "body": "scenario nodejs server accepts post requests given url returns get url get requests frontend code executes expected angular post returns ok server response functions execute correctly firefox inspect console chrome neither firebug http post request function promise function drops either syntax error wellformed url js error end request data uploaded pointing url would get request wondering firefox angular bug", "num": "6117", "d": "12/2015"}, {"title": "rfe way prevent twoway data binding echos", "body": "hello currently trying integrate custom thirdparty input field source code editor written javascript based angular thus need wrap component use report changes outside use apply changes coming outside component named named components take advantage twoway data binding noticed parent component applies twoway data binding child emits event change parent data emits another event sent back child imagine calls expensive method handles change probably agree effect something would like avoid please provide mechanism achieve something wrong done better plunk demonstrating echo effect ps sure related ps feel free make title understandable", "num": "6114", "d": "12/2015"}, {"title": "angular requestanimationframe error", "body": "followed quickstart working fine browser far found working full log navigation occurred exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails original exception typeerror object nt support property method requestanimationframe exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails stacktrace async gap original exception typeerror object nt support property method requestanimationframe error exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails original exception typeerror object nt support property method requestanimationframe error loading functions description undefined message exception error instantiation function browserdetails token promise gt function dynamiccomponentloader gt function compiler gt function runtimecompiler gt function protoviewfactory renderer platformpipes directiveresolver viewresolver piperesolver appid gt function renderer gt function domrenderer gt function animationbuilder browserdetails gt function browserdetails original exception typeerror object nt support property method requestanimationframe error loading name error number nan stack undefined appears angular expecting exist nt confirmed caniusecom expect similar error occur android also claimed supported also nt support raf everything built downloaded today everything latest version time writing let repeat followed quickstart nothing else need code might causing problem please refer quickstart", "num": "6111", "d": "12/2015"}, {"title": "optimise acl redirects bug", "body": "want make router redirects another components instantiated extend routeroutlet class fix bugs redirects reuse read comments code javascript import directive attribute elementref dynamiccomponentloader import router routeroutlet import auth appresourcesauth import promisewrapper directive selector approuter export class approuter extends routeroutlet main app component javascript import component import router routeconfig routerdirectives import asyncroute apptoolsasyncroute import auth appresourcesauth import config appconfig import approuter appdirectivesapprouter import membercomponent appcomponentsmember import guestcomponent appcomponentsguest component selector app templateurl configviewspath apphtml directives routerdirectives approuter membercomponent guestcomponent routeconfig path name home data memberonly true loader asyncroute configcomponentspath memberhome memberhomecomponent path login name login data guestonly true loader asyncroute configcomponentspath guestlogin guestlogincomponent export class appcomponent constructor public auth auth router router app template different layouts another better ways check redirect users nt access routes", "num": "6110", "d": "12/2015"}, {"title": "access demo", "body": "hi china know website access like google twitter uesd shadowsocks access google twitter ca nt access plnkrco demo used plnkrco write demo thank used one site site use plnkrco maybe used plnkrco jsbincom jsfiddlenet codepenio plunker used ca nt something", "num": "6109", "d": "12/2015"}, {"title": "referenceerror require defined", "body": "hi setup basic project based minute quickstart tutorial afterwards created service load external pure js library defined following indexhtml html monitoring logging loading service wanted load elasticsearchbrowser like ts import observable rxjs import rxjsaddoperatormap injectable export class elasticsearchservice elasticsearch require elasticsearchelasticsearch tsconfigjson looks like packagejson like idea wrong trying couples hours load specific service component get", "num": "6108", "d": "12/2015"}, {"title": "ngfor adds extra element used ngif", "body": "ngif ngfor element adds extra element end", "num": "6107", "d": "12/2015"}, {"title": "router automate focus management", "body": "proper focus management really improve user experience everyone something easy forget development would awesome angular smart things default suggestions navigating new page autofocus set element focus element otherwise focus component set tabindex necessary navigating back restore focus element focused info available otherwise fall back rules", "num": "6106", "d": "12/2015"}, {"title": "declaring factory providers easy declaring class providers", "body": "would awesome instead could write sure feasible given decorators spec nt allow decorating plain functions iirc figured let preference known", "num": "6105", "d": "12/2015"}, {"title": "services tutorial broken getheroesslowly", "body": "hi please closed fixeddupeetc javascript thisheroservicegetheroesslowly heroes gt thisheroes heroes typescript compile error type assignable type hero thisheroservicegetheroesslowly heroes hero gt thisheroes heroes ok getheroes promise callback required cast type getheroesslowly thanks", "num": "6104", "d": "12/2015"}, {"title": "angular codemirror chromium developer tools gt aw snap", "body": "hello experiencing weird issue tried integrate codemirror application registered change listener emits events via start typing codemirror editor hold key seconds chromium developer tools enabled crashes aw snap error reproducer nt able reproduce without codemirror instance also decorator seems important developer tools must enabled also could reproduce without angular last least specific chromium firefox crash versions affected components angular well angular codemirror chromium well chromium please let know provide data turns chromium bug would glad could give simpler reproducer post mean know happens angular", "num": "6103", "d": "12/2015"}, {"title": "dart ngmodel nt support nonstring values", "body": "trying use enums values nt work optionelementvalue must string proposal implement something like ngvalue would allow dynamically typed option values", "num": "6102", "d": "12/2015"}, {"title": "beta function", "body": "work prior alpha version returned observable missing operators typeerror function myserviceexecutemyservicegetstuff new mylist injectorinstantiate injectorinstantiateprovider injectornew injectorinlinestrategyinstantiateprovider elementinjectorinlinestrategyhydrate elementinjectorhydrate appviewmanagerutilshydrateview", "num": "6101", "d": "12/2015"}, {"title": "error using attribute label inside ngfor", "body": "playing todo list example came across error trying set attribute label template html todotext error change template another attribute used without error remove attribute errors course ca nt use label check box", "num": "6100", "d": "12/2015"}, {"title": "new template parse errors beta", "body": "crafted example using one templates material design lite alpha template compiled worked largely correctly equivalent converted beta throws multitude parsing errors like dashboardcomponenthtml file worked older version note nt matter remove three subcomponents put template main component get parsing errors", "num": "6099", "d": "12/2015"}, {"title": "new", "body": "crafted example using one templates material design lite alpha template compiled worked largely correctly equivalent converted beta throws multitude parsing errors like dashboardcomponenthtml file worked older version note nt matter remove three subcomponents put template main component get parsing errors", "num": "6098", "d": "12/2015"}, {"title": "angular quickstart liveserver error", "body": "new angular trying learn followed getting started guide create project however running command npm start browser start everything fails second content npm error log file help figure wrong regards", "num": "6097", "d": "12/2015"}, {"title": "misleading message call enabledevmode enable development mode", "body": "angular version use see message console message misleading since ca nt see cc vsavkin", "num": "6096", "d": "12/2015"}, {"title": "router link never sets routerlinkactive class", "body": "router link calls routerisrouteactive compare current instruction components host anchor component problem routercommit assigns current instruction state becomes called isrouteractive call directive description", "num": "6095", "d": "12/2015"}, {"title": "markforcheck inside ngafterviewchecked onpush change detection strategy", "body": "change detection strategy inside works wrapped expected behaviour correct way recheck component", "num": "6094", "d": "12/2015"}, {"title": "passing elements view arguments hostlistener fails", "body": "following dart code hoped work get following error exception error evaluation click anonymous function original exception class appcomponent instance getter textarea nosuchmethoderror method found textarea receiver instance appcomponent nt know bug supposed another way would like learn want achieve user clicks somewhere parent element actually focus textarea element", "num": "6093", "d": "12/2015"}, {"title": "able call webapi heroservicets file given official site heroes example", "body": "working hero example given official site trying give call webapi checking fiddler even calling webapi cross checked api working fine exposing json data appheroservicets gt import hero hero import heroes mockheroes import injectable import http response request import httpbindings injectable export class heroservice constructor public http thishttp consolelog task service created getheroes map responsedata gt return responsedatajson", "num": "6092", "d": "12/2015"}, {"title": "routedata empty object component", "body": "set data route get empty routedata component", "num": "6091", "d": "12/2015"}, {"title": "option emitdecoratormetadata specified without specifying option experimentaldecorators", "body": "different cloned projects get command failed exit code indeed several times repo emitdecoratormetadata used without experimentaldecorators something wrong", "num": "6090", "d": "12/2015"}, {"title": "using immutable ios throws find differ error", "body": "application running fine ios component binding immutablelist template iterating using ngfor directive get following error console hope issue uploading screenshots copypast work vm using", "num": "6089", "d": "12/2015"}, {"title": "causing problems settimeout", "body": "according doc settimeout fuction supports syntax version support syntax casing problems aspnet generates code using version understand version avoided able replace old aspnet code stages", "num": "6088", "d": "12/2015"}, {"title": "unused peer dependencies", "body": "getting started guide directed add various peer dependencies via npm however dependencies actually used sample application confirmed removing extra dependencies app still worked fine question sample application encourage add none actually used application", "num": "6087", "d": "12/2015"}, {"title": "polyfillunscopedrule friends ca nt use attribute value selectors", "body": "example consider rule selector valid regex used shim matches quote see also bug webcomponentsjs implementation notice line", "num": "6085", "d": "12/2015"}, {"title": "tutorial section angular javascript", "body": "see available typescript nt understand precious tutorial available pure javascript oo", "num": "6084", "d": "12/2015"}, {"title": "possible error forms documentation", "body": "documentation issue confusing hoping get clarity think line added ngcontrol directive bound model name property wrong bound model name property something else sure express clearly someone change else let know misunderstanding thanks", "num": "6083", "d": "12/2015"}, {"title": "use slot concept instead routeroutlet", "body": "trying times want later use target route nt possible use one case nt tried using sidebyside seems ugly suspect would cause problems shadowdom seems conceptually similar default one without name named slots like named outlets auxiliary routes using custom similar thing seems like could unify concepts fewer concepts better right decouple components knowing much routing making testable isolation", "num": "6082", "d": "12/2015"}, {"title": "less coupling components routeparams", "body": "currently components need depend route params order initialized often want route params deserialized domainspecific object anyways end constructor situation causes following issues route param names shared across multiple files making renaming harder work happening constructor hurts testability model may requested async ts export default class edit private model model constructor service service params routeparams thismodel servicegetmodel paramsget alias natural improvement would move component providers nt seem possible due limitations typescript able annotate arrow functions still nt solve route param names shared across files problem instead relying routeparams components routed could declare public api like normal route configuration uses ts routeconfig path aliasedit component edit inputs similar resolve router model service service params routeparams gt servicegetmodel paramsget alias class parent class edit input private model model alternatively component could request inputs via constructor injection routeconfig would configure injector ts routeconfig path idedit component edit providers provide model usefactory service service params routeparams model gt servicegetmodel paramsget id class parent class edit constructor private model model way components encouraged clear public api entangle router much great news ever wanted switch another router makes components reusable across multiple routes since tied particular param names", "num": "6081", "d": "12/2015"}, {"title": "routerisrouteactive issue", "body": "code method looks bit strange admitting fully familiar component router came code wanted figure wrong child active via css class parent route active links root level root router injected current component instruction top component also compared router one links active btw put child links child outlet work fine since loop iterates child router injected maybe explanation wrong issue somewhere else nt issue ask dig deeper source", "num": "6080", "d": "12/2015"}, {"title": "reusable component template newbie question", "body": "hi everyone first like apologize question sounds stupid pretty new user let say menu component inline template want use component another app different template best way achieve angular playing directives little ended using template function passing template string parent via attribute maybe bad practice", "num": "6079", "d": "12/2015"}, {"title": "add", "body": "adding shim samples default order avoid complaints users older browsers one free remove worried browsers able get shim party libs use plunkers current workaround go elsewhere using", "num": "6077", "d": "12/2015"}, {"title": "component router nt work components restrict e directives", "body": "issue ngcomponentrouter outlet directive place component name attribute div tag instead creating element using angular building ngcomponentrouter current angular master motivationuse case exploring migration uirouter ngcomponentrouter looking ngoutlet using restrict needs result using element wo nt display assuming behind scenes works elements attributes changing line something like seems work also consideration working ngupgrade comments indicate restrict must e", "num": "6076", "d": "12/2015"}, {"title": "changelogmd wrong", "body": "says produces error working fine", "num": "6075", "d": "12/2015"}, {"title": "get files property element", "body": "running using get file element typescript tells files property htmlelement", "num": "6074", "d": "12/2015"}, {"title": "http headers tojson returns values keys headers", "body": "current implementation tojson headers class returns jsonobject containing values imo return json object mapping keys values", "num": "6073", "d": "12/2015"}, {"title": "appviewmanagercreateroothostview elementref", "body": "currently possible specify position component instantiated providing working want reinitialize component changed works limitation update first component dom due behavior method creates instance component attaches first element global view usually dom document matches component selector overrideselector possible create version called elementref way achieve want see current implementation", "num": "6072", "d": "12/2015"}, {"title": "dynamiccomponentloader loadintolocation firstlast child", "body": "currently option load dynamic component first last child specific element loadintolocation requires anchorname since content targetet element variable would nice load specifying index nobody could help stackoverflow", "num": "6071", "d": "12/2015"}, {"title": "ngfor nt work dart", "body": "build error transform templatecompiler ngforlibappelementngmetajson threw error template parse errors property binding ngforof used directive embedded template appelement error f appelement package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates dart asyncfuturedart futurefuturemicrotask dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart startmicrotaskloop dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen web get served assets dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates web get mainngdepsdart gt ngforwebmainngdepsdart build completed errors web get served assets web get packagesngforappelementngdepsdart gt could find asset ngforlibappelementngdepsdart web get served assets", "num": "6070", "d": "12/2015"}, {"title": "q promise api chaining behavior", "body": "may may reading spec correctly interpretation suggests bug chaining logic suggests chain resolved rejected callback return value next chain resolved rejected original value turn please see example option see undefined behavior state spec involving neither onfilfilled onrejected returns value situation feel specificity supersedes undefined behavior ticket deemed bug would suggest updating docs mention onfulfilled onrejected callbacks least return original result", "num": "6068", "d": "12/2015"}, {"title": "uncaught error find module rx", "body": "tried use umd built file webpack required dependency upper case modify lower case works might typo", "num": "6066", "d": "12/2015"}, {"title": "redigest lot ten times", "body": "hi one simple component like javascript import component component selector myapp template class appcomponent get title consolelog fetching title return angular console get filled ten times ie getter method called times design expecting two calls getter method due change detection angular understand angular early state ca nt expect great performance yet feels like bug", "num": "6064", "d": "12/2015"}, {"title": "implementing controlvalueaccessor complex controls", "body": "working updating angular material prototypes work ngcontrol means implement controlvalueaccessor hitting walls around change propagation wrt wondering recommended approach would ngformmodel calls writevalue inject data dependent inputs standard inputs update relevant dom angular material inputs nt wrap standard inputs child components state radio group obvious example two issues possible writevalue called component child components instantiated ca nt use dom store state needs state component writevalue function call nt trigger change detection component internal state updated throws changed checked tried syncing dom internal state ngafterviewinit throws outside change detection cycle moment way get work put updates ngafterviewinit settimeout feels ugly guidelines would help anyone writing custom controls", "num": "6062", "d": "12/2015"}, {"title": "http requestoptionsmerge combine headers search params", "body": "headers search present base options merged options merged options overwrite rather combine base options makes things like setting default contenttype providing headers purposes impossible headers able merge overwriting per header basis problem applies search params suppose could apply things method body url strings time", "num": "6060", "d": "12/2015"}, {"title": "add support anonymous functions", "body": "able implement ngfortrackby need add support anonymous functions closures itemtext able access local variables context anonymous function", "num": "6059", "d": "12/2015"}, {"title": "binding getter function returns new array elements causes exception dev mode", "body": "getter function component like bind like get expression changed checked exception get happening dev mode angular call function second time return different array instance call best way avoid exception come following solutions wondering simpler way assume could solve custom pipe feels like bit kill filtering logic simple used one component could watch events might cause output function change manually update extra state controller would store filtered objectshowever would require state potentially lot code lot events might change array objects filtered could use something like underscore memoize function return instance array inputs nt changed seems like leaky abstraction though rather ideas one ideas mentioned best bet", "num": "6057", "d": "12/2015"}, {"title": "bug styleurls component configuration", "body": "angular loaderhtml loadercss located directory adminangulartwocomponentsloader code nt work component selector loader templateurl adminangulartwocomponentsloaderloaderhtml styleurls adminangulartwocomponentsloaderloadercss works component selector loader templateurl adminangulartwocomponentsloaderloaderhtml styleurls adminangulartwocomponentsloaderloadercss base url setted documentwrite", "num": "6054", "d": "12/2015"}, {"title": "relative templateurl systemjs", "body": "mention could use relative templateurl setting property module inside component decoration actually unable use feature use systemjs described min quickstart ts sample nt moduleid set loader question simple use relative templateurl systemjs", "num": "6053", "d": "12/2015"}, {"title": "observables nt seem contain higher order functions", "body": "longer access rxjs higher order functions like map filter etc example throws error due map method import component import observable observer rxjsobservable import rxjsoperatormap component selector testapp template export class test source observable", "num": "6052", "d": "12/2015"}, {"title": "freshly generated svg nt render correctly edge", "body": "nt seen introduction new parser refresh page rather large generated svg first thing edge renders something like clicking elements magically move expected position really put finger going example time top center literally element five characters maybe angular needs instruct edge sort layout refresh adding new elements via dom", "num": "6050", "d": "12/2015"}, {"title": "congratulations going beta phase", "body": "want congratulate every one wholeheartedly getting angular beta phase awesome", "num": "6047", "d": "12/2015"}, {"title": "ngcontent work root component", "body": "", "num": "6046", "d": "12/2015"}, {"title": "mulitline expressions working", "body": "mulitline expressions working put template ok hello world one line ok hello world split get output expression parsed expression split multiple lines ok hello world one line ok hello world split using latest beta version", "num": "6044", "d": "12/2015"}, {"title": "adding svg elements htmltagsts", "body": "currently svg element configured within file add default namespace svg elements otherwise svg elements need written using prefix elements really feel like writing modern svg browsers today", "num": "6043", "d": "12/2015"}, {"title": "directive selector fails match attributevalue", "body": "per docs css selector attribute contains value attributevalue supported however ca nt seem get pick exact matches work contains added selectors main css file show matching apply font colors", "num": "6042", "d": "12/2015"}, {"title": "setting modelbased form triggers classic expression changed checked error", "body": "alpha could set form using form builder within component constructor could also use control valid touched showhide error messages however upgrading beta get classic expression xxx changed checked error guessing angular form create controls set values form creation change value flags bound template without triggering another round change detection therefore exception however ca nt seem find appropriate way setting form anymore seems formbuilder triggering another round change detections initializing form avoid common scenario plunker issues opened exception due changes boud properties within lifecycle hooks one different sense formbuilder making changes seems preventing users setting modelbased forms option use least wierd require component setting modelbased form formbuilder trigger another round change detection seems far better approach", "num": "6041", "d": "12/2015"}, {"title": "rename routeconfig routes", "body": "bad two words suffix makes sense similarly could instead like long time ago galaxy far far away actually use specify list routes route config proposed name one word correct meaning list routes example btford mhevery igorminar ps course deprecated removed", "num": "6040", "d": "12/2015"}, {"title": "tour heroes tutorial broken md file links", "body": "throughout tour heroes typescript tutorial inline references render quite instances bad filename current path docs ts latest tutorial pathtodocs seeing part part sections", "num": "6039", "d": "12/2015"}, {"title": "getting standard mobile behavior navbar", "body": "might nothing bootstrap perhaps underlying bug getting standard mobile menu bar bootstrap nt try versions compliant browser html mobile emulation get standard mobile square menu use nav code get standard desktop version disregard collapse behavior wire later toggle navigation brand link current", "num": "6037", "d": "12/2015"}, {"title": "exception template parse special char", "body": "hi want show special characters template html file try save file encoding got error fine", "num": "6036", "d": "12/2015"}, {"title": "setting dom adaptor testing", "body": "trying instantiate test injector getting error referencing however dom adaptor never set test environment since test suite bootstrapped", "num": "6034", "d": "12/2015"}, {"title": "question http xhr contenttype multipartformdata", "body": "working app user able post avatar problems creating postrequest using currently use workaround var data new formdata dataappend jahrgang userusername dataappend image userimage wondering make work using observeables also issue file input typefile element wo nt set image property image user userimage type file works changeevent also getting error working", "num": "6030", "d": "12/2015"}, {"title": "quickstart js fauxpas fauxpas", "body": "sentence javacript quick start application files export one thing fauxpas namespace read application files export one thing faux namespace namespace embarrassing social mistake simply fake", "num": "6029", "d": "12/2015"}, {"title": "dart build fails templateurl using directives", "body": "problem whenever use directives annotations tried build using inline build fine tried using well produces error like component html html todo add todo dart file dart library userinputtodolist import dart html import package component selector todolist view templateurl todohtml directives const ngfor class todolist list todos eat breakfast walk dog breathe learn angular bool really true addtodo string todo todosadd todo donetyping keyboardevent event eventkeycode keycodeenter inputelement e eventtarget addtodo evalue evalue null error produces building note check line error produces lowercase instead maybe cause failure building build error transform templatecompiler threw error template parse errors property binding ngforof used directive embedded template error todo todolist package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates dart asyncfuturedart futurefuturemicrotask dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates ca nt read package could find asset import package member named initreflector build failed process finished exit code heredart vm version thu dec", "num": "6028", "d": "12/2015"}, {"title": "render escaped html", "body": "content sanitized way render escaped html", "num": "6027", "d": "12/2015"}, {"title": "order providers bootstrapping", "body": "playing angular realized order providers bootstrapping important understood would great someone explain hashlocationstrategy work hashlocationstrategy worked", "num": "6026", "d": "12/2015"}, {"title": "broken link routing amp navigation", "body": "link appbasehref developer guides hashlocationstrategy broken think point", "num": "6025", "d": "12/2015"}, {"title": "unable run example quick start guide beta version", "body": "able run example error appears console says unable load bootjs anyone idea wrong browser firefox", "num": "6024", "d": "12/2015"}, {"title": "bumb", "body": "language ruby rvm rbx uncomment line project needs run something script bundle exec rspec spec openidcertified tiff uploaded using zenhubio", "num": "6022", "d": "12/2015"}, {"title": "strict bug", "body": "lt param log gt travisyml lt param log gt language ruby rvm rbx uncomment line project needs run something script bundle exec rspec spec", "num": "6021", "d": "12/2015"}, {"title": "servejsdev use webworker bundle", "body": "load webworker app gulp task loads ui bundle file opposed loading transpiled js file system breaks sourcemaps ui code also prevents live reloading point need restart entire gulp task load change ui code worker code loaded properly", "num": "6020", "d": "12/2015"}, {"title": "providers swallowing exceptions", "body": "similar issue sure workaround nt work may related close dup think wrong basically whenever class injected throw exception nt throw swallows check plnkr run application work really note throw infamous error importing uncomment code exception thrown service test commented happen error thrown like said nt think issue referenced exceptionhandler nt work added plnkr maybe misusing guidance anyway issue seems left nothing", "num": "6019", "d": "12/2015"}, {"title": "styling markdown", "body": "utha sedac cc sudoku param openidcertified tiff uploaded using zenhubio", "num": "6017", "d": "12/2015"}, {"title": "option apply stateless pipes base component like services", "body": "many custom pipes stateless could singletons simple transformations services add providers bootstrap base component use instance throughout nt option certain pipes components using simple custom pipe one rely pipe instance transformation conscious design decision nt know whether pipe stateful leave user", "num": "6010", "d": "12/2015"}, {"title": "error formatting currency safari referenceerror ca nt find variable intl", "body": "relocated issue safari", "num": "6009", "d": "12/2015"}, {"title": "zone defined", "body": "zone defined following files changing line code fixes issue notice capitalization change parameter breaking builds long expect take fix link pull request thanks", "num": "6007", "d": "12/2015"}, {"title": "router exception expression changed checked", "body": "use routerlink somefunction route example taked docs changed appappcomponentts", "num": "6006", "d": "12/2015"}, {"title": "exception expression changed checked", "body": "wrong", "num": "6005", "d": "12/2015"}, {"title": "nested form validation status rolling angular", "body": "property component address component property physical billing address property template create new property save button property formvalid check validate whether required fields entered case save button enabled required property fields entered ignores address component validate entire form address components used work angular", "num": "6004", "d": "12/2015"}, {"title": "unexpected token error using router", "body": "attempting follow instructions crisis center example adding routerconfig annotation even adding routerproviders bootstrap call cause unexpected token error running plunker example locally runtime transpiling remote script tags works fine even copying plunker ts files project transpiling npm start error appears", "num": "6003", "d": "12/2015"}, {"title": "jsonp nt work", "body": "anyone explain simple jsonp getrequest nt work get strange error exception object object exception object object tlogerror anonymous function", "num": "6002", "d": "12/2015"}, {"title": "http use thisrequest getpostputdeletepatchhead methods", "body": "would make subclassing http easier since method overwritten anyway proper oop design", "num": "6001", "d": "12/2015"}, {"title": "angular beta html parser correctly processing tag", "body": "test include", "num": "6000", "d": "12/2015"}, {"title": "uncaught typeerror read property split undefined", "body": "working tutorial getting error starting example npm start console shows error", "num": "5999", "d": "12/2015"}, {"title": "referenceerror zone defined", "body": "function patcheventtargetmethods zone nt defined using globalzone working", "num": "5998", "d": "12/2015"}, {"title": "improve ngformngcontrol confusing syntax naming choice", "body": "hi tried latest beta confusing others spoken template variable binding ngcontrol would visually written template binding ngform instead current beta requiring according documentation believe one design goals angular make clear template happening currently clear required template syntax control binding within form match actually occurring according documentation one wants refer ngcontrol form using template local variable binding look like following confusing syntax name template variable tied ngform directive instead shown documentation page confusing current beta ngcontrol name name ngform better ngcontrol name name ngcontrol would nt better syntax bind template variable control ngcontrol actually intent effect syntax even documentation describes would even better ngcontrol name would autocreate name template variable one attribute rather would required perhaps interest highly explicit possibly could make sense purpose explicitness perhaps tool binding would nice able indicate ngcontrolname done even name tied ngcontrol nt template reflect done clarity using namengcontrol rather namengform one form page controls inside nt form template variable set ngform heroform ngform controls set shown template ngcontrol ngcontrol name name ngcontrol ngcontrol ngcontrol ngcontrol city city ngcontrol shown documentation initialize template local variable name value ngform name ngform angular recognizes syntax resets name local template variable ngcontrol directive instance instead words name local template variable becomes handle ngcontrol object input box asking issue documentation says syntax sets instance ngcontrol directive syntax written actually showing name ngform intuits setting template instance variable ngform consistent actually happening would nt clearer syntax ngcontrol name ngcontrol form syntax paragraph documentation explaining says namengform actually makes name point ngcontrol directive html name required address first line required city required", "num": "5997", "d": "12/2015"}, {"title": "async pipe handle default scheduled observable values appropriately", "body": "recommended way passing observable ngfor loop async pipe try following dev mode itemname export class child items observable constructor thisitems observablecreate subscriber gt subscribernext name foo raises exception", "num": "5992", "d": "12/2015"}, {"title": "component detecting changes", "body": "component property called message must updated view everytime source receives next element trigger click view updated call component update view bug", "num": "5991", "d": "12/2015"}, {"title": "dynamiccomponentloaderloadnexttolocation injector", "body": "hi pass instead writing small dialog system method uses load component inside dialog working fine loaded component asks providers add parameters method means user explicitly make something like would like let use injector let possibility something like best way thanks", "num": "5990", "d": "12/2015"}, {"title": "changes applied onload method", "body": "typescript isloading false constructor private cdref changedetectorref private el elementref input set url val string thisloadimage url loadimage url string thisisloading true let img new image imgsrc url imgonload gt thisisloading false thisrenderersetelementstyle thisel backgroundimage url url thiscdrefdetectchanges bugfix changes assigned otherwise force changes applied manually invoking otherwise spinner always visible", "num": "5988", "d": "12/2015"}, {"title": "hashlocationstrategy working anymore beta version", "body": "hi using hashlocationstrategy location strategy angular alpha working like charm unfortunately case anymore nt change anything still using following code like strategy changed best daniel", "num": "5987", "d": "12/2015"}, {"title": "input gets blured every keystroke ngmodel inside ngfor", "body": "see plunker see input gets blured every time write something one also input view synced model somehow characters type appear input input type", "num": "5986", "d": "12/2015"}, {"title": "properly handle http error exception", "body": "method handles error passes http observable farther typescript private preparerequest response observable let res responsemap res gt try return resjson catch e throw url wrong json share get uncaught exception probably subscribe response nt add error method fix put error handling empty method everywhere", "num": "5985", "d": "12/2015"}, {"title": "found", "body": "tried import getting searching whole success", "num": "5984", "d": "12/2015"}, {"title": "test failures reported without timeout", "body": "hello written unit test component uses testcomponentbuilder unfortunately test always passes even fail noticed adding following line code fixes problem windowsettimeout function however seem natural attaching test collectionsappspectstxt regards vasil", "num": "5983", "d": "12/2015"}, {"title": "dart enableprodmode seems working", "body": "browser console", "num": "5982", "d": "12/2015"}, {"title": "", "body": "removed browser support run works fine", "num": "5981", "d": "12/2015"}, {"title": "issue loading zone", "body": "hello getting issue zone enablelongstacktrace enabled line might wrong think zone lower case missing something", "num": "5980", "d": "12/2015"}, {"title": "change detected electron ipcmessage event", "body": "case automatic change detection working making electron app multiple windows send messages one another via ipc code elsewhere javascript const links outside fooservice force singleton sure matters yet appfooservice function thislinks links thisopen function url initsubject subject electron browserwindow instance subjectopendevtools subjectloadurl url subjectshow subjectwebcontentsaddlistener ipcmessage e args gt const obj args objtype links todo keep stable sorted figure clone necessary const newlinks clone objlinks arrayprototypepushapply newlinks links remove links trigger refresh doesnt arrayprototypepushapply links uniq newlinks return consolelog obj", "num": "5979", "d": "12/2015"}, {"title": "router navigate called twice hashlocationstrategy", "body": "navigating browsers backforward button locationback forward call router navigation function twice using hashlocationstrategy angular version created plunk consolelog navigating", "num": "5978", "d": "12/2015"}, {"title": "eliminate cast form controls updatevalue", "body": "formbuilder controls collection typed abstractcontrol abstractcontrol updatevalue method requires cast control updatevalue method control updatevalue method preferred shorter better thismyformcontrols goalweight updatevalue cast required currently thismyformcontrols goalweight updatevalue thismyformcontrols goalweight control updatevalue could consider using types would require cast update value perhaps making controls collection contain actually controls class items rather abstractcontrol items perhaps could move updatevalue method abstractcontrol class example template using myform weight goal", "num": "5977", "d": "12/2015"}, {"title": "empty controls invalid required false property defined", "body": "small example import component import formdirectives control component selector logincomp directives formdirectives template export class app logincontrol control new control login string isrequired return false plnkr", "num": "5976", "d": "12/2015"}, {"title": "target typescript possible regression", "body": "right appears impossible use directly nodemodules typescript targetting indirectly referenced zonedts appears regression happened zonedts directly references confusing zonedts definitelytyped always referenced therefore never worked reference chain", "num": "5973", "d": "12/2015"}, {"title": "docs bad link lifecycle hooks api doc component var", "body": "", "num": "5972", "d": "12/2015"}, {"title": "dart optimize browserdomadaptersetproperty shows cpu profile lot", "body": "try new jsinterop api lighterweight old one", "num": "5971", "d": "12/2015"}, {"title": "dart optimize localsget showing profiles lot", "body": "defeats type inference expects arbitrary map type passed constructor argument reality ever use maps string keys could reduced plain js object eg compiles note may see different js code smaller apps smaller apps tend use fewer kinds maps could lead better inference problem happens larger apps dart code typescript code dart library import package show ispresent import package show baseexception import package show listwrapper mapwrapper class locals locals parent map current locals thisparent thiscurrent bool contains string name thiscurrentcontainskey name return true ispresent thisparent return thisparentcontains name return false dynamic get string name thiscurrentcontainskey name return thiscurrent name ispresent thisparent return thisparentget name throw new baseexception find name void set string name dynamic value todo rado consider removing check guarantee void clearvalues mapwrapperclearvalues thiscurrent cc sigmundch hterkelsen rakudrama", "num": "5970", "d": "12/2015"}, {"title": "enforce dash componentdirective selector comply custom element spec", "body": "kebabcase removal kept element selectors dasherized custom element spec component name remains dashcased dash required custom element spec use guidance since even making angular templates casesensitive templates remain valid fragments although higher fidelity due casesensitivity html parser see people know custom element spec guarantees dash gives us think would better enforce directivecomponent element selectors least single dash way opt via flag metadata nt default someone unfamiliar custom element spec benefits adding dash element name element becomes custom element type dom node instead case need benefit unresolved psedoclass registering fake element via spec guarantees browsers introduce native elements dash name meaning apps wo nt break future browsers natively implement element matches angular component selector eg info custom elements make point errorprone current behavior attaching screenshot angulario front page uses element even get wrong time time", "num": "5968", "d": "12/2015"}, {"title": "duplicate tbody ngfor", "body": "write something like uses following component produces invalid html two nested tbody tags like real application use group together multiple tr tags tbody table many tbody tags get kinds malformed tables also breaks usual css rules actually invalid html worked fine broken since demo", "num": "5967", "d": "12/2015"}, {"title": "box header quickstart omits app", "body": "seems whiteonblue box heading quickstart read appappcomponentts export instead appcomponentts export", "num": "5966", "d": "12/2015"}, {"title": "zone throwing maximum call stack", "body": "upgrading switching loading zone reflectmetadata get maximum call stack size exceeded page load large lms app smaller app app served webpack larger app cycles around patching addeventlistener smaller app throws following exception error instantiation browserdetails token promise dynamiccomponentloader compiler runtimecompiler protoviewfactory renderer domrenderer animationbuilder browserdetails browserdomadapterlogerror browseradapterjs browseradapterjs anonymous function anonymous function browserjs bootstrap bootstrap bootstrap anonymous function browseradapterjs exception rangeerror maximum call stack size exceeded browserdomadapterlogerror browseradapterjs anonymous function anonymous function browserjs bootstrap bootstrap bootstrap anonymous function browseradapterjs stacktrace browserdomadapterlogerror browseradapterjs anonymous function anonymous function browserjs bootstrap bootstrap bootstrap anonymous function browseradapterjs maximum call stack size exceeded e anonymous function globalzone anonymous function e anonymous function globalzone anonymous function e anonymous function globalzone anonymous function e anonymous function globalzone anonymous function e anonymous function globalzone anonymous function", "num": "5964", "d": "12/2015"}, {"title": "wrong component name herolist achitecture overview developer guides", "body": "seem exported component named heroescomponent code explanation later speak herolistcomponent seem exported component name code snippet herolistcomponentts may named herolistcomponent", "num": "5963", "d": "12/2015"}, {"title": "duplicate text architecture overview developer guides", "body": "herodetailcomponent code shown presents facts particular hero hero user selects list presented herolistcomponent herodetailcomponent child herolistcomponent search two text", "num": "5962", "d": "12/2015"}, {"title": "wrong anchor lifecycle hooks architecture overview page developer guides", "body": "lifecycle hooks link point instead description seem defined wrong", "num": "5961", "d": "12/2015"}, {"title": "components create style default", "body": "let say create new component attempt style ts helloworldcmpts component selector helloworld styleurls helloworldcss template hello world class helloworldcmp helloworldcss host background red styling fails applied sole reason browsers clue html element expected tricky debug new angular web components also case predefined angular components like solution think best angular keeps track components created application builds css selector placed head indexhtml file within style tag since css selectors tag selectors means lowest specificity fact styles placed top indexhtml document allows uilibraries userdefined styles easily override styles without use heavier selector eg selector used match components user style like would lose specificity battle also flag disable", "num": "5960", "d": "12/2015"}, {"title": "publish prod sources root npm", "body": "currently got files inlined data maps published root npm repository files picked webpack result large bundle default config consider pushing files instead ease live people using bundlers default config ultimately issue solve one cc robwormald", "num": "5959", "d": "12/2015"}, {"title": "error reflectmetadata zone upgrading", "body": "hi trying upgrade newest version initially problems rxjs zonejs eventually sorted stuck error regarding reflectmetadata shim error reads follows stage code already transpiled nt really understand getting error get around tried import zone reflectmetadata bootstrapjs file add following map systemconfig file reads results another error solve ps congrats beta", "num": "5958", "d": "12/2015"}, {"title": "zone defined angular beta", "body": "clone update angular beta updating dependencies like test website navigating angular fails load get error console anyone help", "num": "5957", "d": "12/2015"}, {"title": "csp chrome app angular", "body": "rewrite example given angulario building project launch chrome app trouble csp pubspecyaml yaml name version environment sdk gt lt dependencies browser chrome darttojsscriptrewriter transformers entrypoints webmaindart darttojsscriptrewriter chrome csp true manifestjson json name example version manifestversion minimumchromeversion icons darticonpng app background scripts backgrounddartjs indexhtml maindart dart import package import package component selector myapp view template angular class appcomponent main bootstrap appcomponent backgrounddart dart import package chromechromeappdart chrome main chromeappruntimeonlaunchedlisten data chromecreatewindowoptions createwindowoptions new chromecreatewindowoptions createwindowoptionsid createwindowoptionsbounds new chromecontentbounds width height chromeappwindowcreate indexhtml createwindowoptions error uncaught evalerror refused evaluate string javascript unsafeeval allowed source script following content security policy directive defaultsrc self blob filesystem chromeextensionresource thanks", "num": "5956", "d": "12/2015"}, {"title": "warn using boolean attributes directives", "body": "created custom directive defined use attribute nt know time boolean attribute partial got minified open attribute value disappeared took figure know occurred poor knowledge bet one encounter kind issue would handy angular optional functionality display warning native html boolean attribute used directive", "num": "5955", "d": "12/2015"}, {"title": "exception expression checkmarxchecks filter team entc orderby riskscore e changed checked", "body": "happens since beta something wrong bug typescript code custom pipe typescript import pipe pipe name limitto pure false export class limittopipe public transform value num number value valueslice return value", "num": "5954", "d": "12/2015"}, {"title": "support", "body": "hi beta release great guys started compile feature list help us decide move big project angular looking localization serviceand found today blog post support natively right eta preview release important feature thanks", "num": "5953", "d": "12/2015"}, {"title": "injecting providers given interface", "body": "suppose kind interface like say component wants injected service implements interface possible let say found discussion following blog post seems little bit outdated proper way deal problem", "num": "5952", "d": "12/2015"}, {"title": "documentation error", "body": "documentation injection contains lines saying think may wrong ought", "num": "5951", "d": "12/2015"}, {"title": "devmode expression xxxx changed checked", "body": "started getting lot error code since dev mode enabled default happens bound expression changed various times one times sometimes useful want set value based etc example add class based big content set display value custom select component options loaded another example class binding prod mode works without throwing error", "num": "5950", "d": "12/2015"}, {"title": "valuechanges undefined asyncvalidator first time runs version", "body": "trying test asynchronous validator checking value control start control initial value aaa asyncvalidator check value actually aaa first time control valid plunker see controlvalid false exception thrown update value input valuechanges undefined anymore asynchronous validator works expected problem first time function executed control nt valuechanges defined example plnkr code throws exception typeerror read property subscribe undefined control created works fine update control value typescript root app component import component import validators control import bootstrap function control let p new promise resolve gt controlvaluechangessubscribe value gt first time valuechanges undefined value aaa resolve null else resolve async true pcatch e gt consoleerror e return p component selector myapp template export class app mycontrol constructor thismycontrol new control aaa validatorsrequired bootstrap app catch err gt consoleerror err", "num": "5949", "d": "12/2015"}, {"title": "dev mode ngfor slice pipe throws", "body": "chaining pipe throws errors realized dev mode enabled default gives runtime works despite errors unit tests failing related think", "num": "5948", "d": "12/2015"}, {"title": "update http docs mention rx operators remove observer", "body": "", "num": "5944", "d": "12/2015"}, {"title": "warning using", "body": "importing via webpack get following warning import done via way import various polyfills individually used zone started giving errors imported", "num": "5942", "d": "12/2015"}, {"title": "ngfor fails binding function beta", "body": "noticed beta longer supported bind ngfor function instead assign results function array binding pre beta could beta nt seem work bind function directly something like case switch ok think needs documented function bindings nt supported going forward function binding currently throws following error expression getheader spreadsheet changed checked previous value b c current value b c getheader spreadsheet", "num": "5941", "d": "12/2015"}, {"title": "issue ngfor syntax developer guide", "body": "hi following tutorials provided website developers guide displaying data page using code display list heroes code throwing console errors page displayed changed ngfor page working fine please check", "num": "5940", "d": "12/2015"}, {"title": "removing unused modules application loads angular", "body": "nt think increase performance website reduce number modules framework used application mean suppose creating angular application application use directives like ngswitch ngmouseover etc able load application even include modules even filters sometimes filters unused whole application sometimes feel filter heavy application need simple date filter want options date filter either able select options require application able write simple filter including date filter angular angular ability remove unused modules size file reduces unused modules load browser lot better angular application performance thought might wrong please correct wrong", "num": "5939", "d": "12/2015"}, {"title": "feat router include routerdirectives routerproviders export", "body": "going use router need routerdirectives use outlets links bundling routerdirectives routerproviders would one less thing set make directives available globally submit pr needed", "num": "5938", "d": "12/2015"}, {"title": "dart transformer tests probably skipped", "body": "think conflict causing tests registered via wrapping methods skipped definitely happening locally due limited output travis difficult tell know soon", "num": "5934", "d": "12/2015"}, {"title": "allow asynchronous appinitialiazer", "body": "sometimes may want async appinitializer needs resolved bootstrapping example webworker may want receive values ui browser location history app bootstraps distinct bootstrapping di providers asynchronous rather async work must done providers set cc vsavkin", "num": "5929", "d": "12/2015"}, {"title": "include licenses umd bundles", "body": "system bundles need license jsdoc comment including license body licensed work included bundle", "num": "5926", "d": "12/2015"}, {"title": "rx debouncetime nt work", "body": "modified example works expected created service notify scroll end never fired typescript import eventemitter import rxjsaddoperatordebouncetimejs export class scrollservice scrolled new eventemitter debouncetime using service another component replace events fired fine need debounce behavior throttle one think might issue angular jsfiddle example pure rx working expected", "num": "5925", "d": "12/2015"}, {"title": "upgrade dependency observable analyzer latest", "body": "", "num": "5922", "d": "12/2015"}, {"title": "ngfor blocks screen sec medium data sets", "body": "hi simple list names ngfor directive angular tries show would imagine generates performance drawback issue blocking screen secs angular angular material virtual repeat instantiated many items could show scroll used one left screen show next one showing way would avoid instantiating whole lot items dom thus giving better performance angular material soo far implemented angular angular staff give solution", "num": "5921", "d": "12/2015"}, {"title": "possible slice bug beta", "body": "possible bug change slice recently exception expression heroes dashboardcomponent changed checked previous value current value heroes dashboardcomponent app gets list slices changes made load app works without slice cc wardbell", "num": "5918", "d": "12/2015"}, {"title": "avoid fat arrow calls parameter implicitly type", "body": "set noimplicitanytrue tsconfigjson enforce type declarations compilation fails adding http call map res gt resjson error line implicit res subscribe data gt thiscats datacats error line implicit data fine adding res data syntax generates error expected resolve without setting noimplicitanyfalse fixes code compiles runs fine", "num": "5917", "d": "12/2015"}, {"title": "routerrenavigate nt work routernavigate", "body": "alpha angularjs used reload contents app received notification stale data server trying use angular solve problem working us problem uses last url given stored methods navigation set value set entering url browser directly using discouraged using encouraged effect calling nt necessarily reload current page often reloads another page happens starting point app place app hit created plunker demonstrate issue follow steps click nested page url button uses public behavior bottom app shows nested page also see top changes click home button uses use home link public behavior bottom app shows home also see top still shows click reload button uses see bottom page changes back nested page uses stale intent reload home public value change need way renavigate honors routing happened via", "num": "5916", "d": "12/2015"}, {"title": "test run tests system umd bundles", "body": "tests currently use version bundles since added umd bundles well run tests umd nt expect simple task going start today", "num": "5915", "d": "12/2015"}, {"title": "form submitted ngsubmitted incorrectly triggering elements dynamically added within tags", "body": "form setup inside content block editor allows dynamically add set blocks eg text video image bug occurs try add block submitted triggers even submit button page created fiddle show problem click add block see issue seems affect versions angular onwards", "num": "5913", "d": "12/2015"}, {"title": "remove rxjs bundle licensepatching script included bundles", "body": "blocked remove edit execute", "num": "5912", "d": "12/2015"}, {"title": "codeangularjsorg", "body": "tried update play plunker recent version turned load see anything like module like source plunker everything works fine using ts projects", "num": "5911", "d": "12/2015"}, {"title": "add async validators control throws error", "body": "typescript function control return new promise resolve gt settimeout gt resolve null component selector formdemo template export class formdemo mycontrol constructor thismycontrol new control somevalue validatorsrequired fails throw error happening works fine", "num": "5910", "d": "12/2015"}, {"title": "ctrlclick behaviour open new tab work routerlink", "body": "chrome ff often like ctrlclick link open new tab anchor directive behave way affects current browser tab could annoying users", "num": "5908", "d": "12/2015"}, {"title": "enable public api specs", "body": "publicapi specs disabled current test harness nt support fetching symptom configure test harness js systemjs configure test harness dart uncomment stuff uncomment stuff uncomment stuff fill list approved symbols", "num": "5906", "d": "12/2015"}, {"title": "remove", "body": "convert ca nt remove", "num": "5905", "d": "12/2015"}, {"title": "include rxjs bundles codeangularjsorg push", "body": "convenience development host rxjs bundles codeangularjsorg include release process make sure license included see", "num": "5904", "d": "12/2015"}, {"title": "load viewchildren", "body": "new release viewchildren always null ngafterviewinit gets never invoked create component use dynamiccomponentloaderloadintolocation release worked", "num": "5903", "d": "12/2015"}, {"title": "testing regression beforeeach inject", "body": "think introduced regression used work perfectly fails suspect arrow function returns object thus undefined suggests use necessary current workaround write overall got point migrate tests bit painful thousands errors maybe could warning instead error see think something like would great separate concerns cc juliemr", "num": "5902", "d": "12/2015"}, {"title": "newest quick start tutorials requires python installed first", "body": "newest quick start tutorials requires python installed first think accidetly case complained missing python stuff disspeared installed python windows machine python ps packagejson form tutorial", "num": "5901", "d": "12/2015"}, {"title": "directive parsing correctly", "body": "see example parse correctly given instead get error", "num": "5894", "d": "12/2015"}, {"title": "ci flake enoent file directory angularbuilderjsmap", "body": "", "num": "5890", "d": "12/2015"}, {"title": "transformed files different line numbers causing coverage data wrong", "body": "thought preserving line numbers files important seeing cases transforming changes line numbers though gets transformed worse appears getting fmted gets transformed allllll way breaks reports generated dart coverage tooling", "num": "5887", "d": "12/2015"}, {"title": "remove rxjs bundles", "body": "rxjs publishes bundles npm package rxjs removed bundles blocked", "num": "5886", "d": "12/2015"}, {"title": "invokeelementmethod nt return values", "body": "returns expect return clientrect object", "num": "5885", "d": "12/2015"}, {"title": "forms api control directives trigger valuechange event ngifed", "body": "using ngform subcontrols smartly add remove form upon oninit ondestroy events works great coordination ngif directives applied controls however needs kind event triggered happens form listeners aware changes currently addsremoves call updatevalueandvalidity emitevent false controls trigger valuechange event reason currently set false calls triggered upon initial construction form presumably nt want valuechange event triggered every control form constructed need way distinguish construction phase ngif becoming truefalse trigger valuechange events proper time", "num": "5884", "d": "12/2015"}, {"title": "turn dev mode default dev bundles", "body": "currently dev prod bundles differ inlined sourcemaps additionally obvious need something special turn dev mode believe actually one flag needs turned document turn dev mode checks vsavkin wardbell pad dev bundles code turns dev mode default vsavkin pkozlowskiopensource print message tells developers mode example angular starting development mode production replace development production vsavkin", "num": "5883", "d": "12/2015"}, {"title": "ngmodel ngcontrol fails unit test", "body": "component following code lines omitted brevity task title export class newtaskcomponent run browser everything works expected however run unit test component using following code javascript import provide import beforeeach beforeeachproviders describe expect fakeasync inject injectasync testcomponentbuilder tick import newtaskcomponent appscriptscomponentsnewtasknewtask import taskservice appscriptsservicestask class mocktaskservice constructor describe component taskcomponent gt beforeeachproviders gt provide taskservice useclass mocktaskservice get following spit failed template parse errors ca nt bind ngmodel since nt known native property task title ngmodel newtasktitle remove tests run successfully something wrong unexpected behavior", "num": "5882", "d": "12/2015"}, {"title": "router enable descendant components terminate route configurations", "body": "sometimes required nested route linked component direct child within component tree currently usecase supported nested routes need follow direct configuration path along component tree would nt make sense allow skipping parents component found route configuration design point view route could establish mix relevant irrelevant components therefore naive view angular source code would nt hurt would traverse find next configured route example code javascript import component directive input inject viewchild ngfor import routeconfig routeroutlet routerlink routeparams route redirect component selector contentone template export class contentone component selector contenttwo template export class contenttwo component selector descendant template directives routeroutlet routerlink routeconfig new route path contentone component contentone name contentone useasdefault true new route path contenttwo component contenttwo name contenttwo export class descendant component selector child template directives descendant export class child component selector app template directives routeroutlet routerlink routeconfig new route path child component child name child useasdefault true export class app", "num": "5879", "d": "12/2015"}, {"title": "feat router add directive active route link", "body": "common use case attach class element router link inside element active html menu home built directive set class element nt directly routerlink element html menu home", "num": "5877", "d": "12/2015"}, {"title": "observables make sense", "body": "nt want sound critical questionsconcerns observables context angular since started using http angular always wondered decision made go observables promises nt get wrong think observables without rxjs cool enjoyed learning comes plain http calls struggling see clear advantage regular promises one arguments seen promises good one time calls stream left open indefinitely view though one time http calls probably make use case definitely see application open ended streams experience see one case business applications basically find using observables way mimics promises see applications observables though examples seen include streams events eg click event patterns etc think definitely merit seems trying shoehorn use case use case incorporating alternative technologies question pivot observables worth reeducation developers comes http calls wonder would make sense offer lean promise based http implementation masses encourage people real streaming needs use rxjs directly instead think allow us benefit best worlds better enable us pick best tool job clear questionsconcerns predates new approach bring rxjs dependencies piecemeal tor", "num": "5876", "d": "12/2015"}, {"title": "router proposal creating bindings", "body": "router great also comes imperative way handling things sometimes hard leverage full potential component based ui approach using router current understanding router came conclusion current design following implications component created dynamically router automatically looses connections parent component template glue parent component missing using router already existing input output properties longer work whole component needs redesigned work router component used routing break existing event chain component able bind function component higher component able propagate ui component tree components used pure ui composition differ components used routes quite lot implications consider problem one needs decide component build pure ui composition composition router components build routing nt use input properties events rather rely router lifecycle hooks also responsible load required data based route parameters user interface component standpoint break reusablity wanted open issue discussion starting point maybe people feel also came naive example problem could solved uses directive configure routes template uses templates activate components configured declaratively within view additionally syntax binding directive allows extract resulting activation see second comment updated proposal think btford mhevery cheers gion", "num": "5875", "d": "12/2015"}, {"title": "angularcommon vs angularcore seems bit ambiguous", "body": "seems continues approach splitting larger modules smaller targeted ones surprising find naming conventions like vs bit ambiguous core common seem generic almost sounds like referring type module might make sense define granular modules specific names core might ok common module well might make hard remember one anyway cents", "num": "5874", "d": "12/2015"}, {"title": "use updatevalue control constructed via controlgroup", "body": "nt work typescript import control controlgroup let group new controlgroup name new control john groupcontrols name updatevalue jack error property updatevalue exist type abstractcontrol typescript import control let name new control john nameupdatevalue jack problem comes srccommonformsmodelts controlgroup extends abstractcontrol still learning typescript first opened issue github believing typescript related issue seems fact normal behavior correction may simply add generic type controlgroup like may break something else guess beginner", "num": "5871", "d": "12/2015"}, {"title": "components contain viewchild need change detection view init", "body": "following example shows component reference child directive using query input changes causes create new components execute view bindings child directive obtained component using annotation view child set lifecycle hook called additional change detection component thinks clean however component reference view child reference used within components view component dirty lifecycle hook following example show even numbers blue odd numbers red due change detection issue clicking cause change button inconsistency view model example used follows reproduce issue click cause change button change input array directive detect third fourth element new creates view bindings access child directive execute viewchild initialized component stays checked even viewchild referenced within components view click cause change button additional components get created list differ job view bindings execute issue gone javascript import component directive input viewchild ngfor directive selector number export class numberdirective input number iseven return thisnumber component selector numbercomponent template directives numberdirective export class numbercomponent viewchild numberdirective numberdirective input number constructor consolelog constructed ngonchange consolelog change thisnumberdirective ngafterviewinit consolelog view init thisnumberdirective getcolor consolelog getcolor thisnumberdirective return thisnumberdirective amp amp thisnumberdirectiveiseven blue red component selector app template directives numbercomponent ngfor export class app numbers change thisnumbers", "num": "5870", "d": "12/2015"}, {"title": "missing", "body": "looks like release nt made", "num": "5869", "d": "12/2015"}, {"title": "content children created dynamically templates using ngfor ngif inserted", "body": "given use case dynamically instantiating content children using ngfor ngif directives found working thought working testing seems never working expect work thought reason content children represented first place javascript import component input ngfor ngif component selector child template export class child input text component selector parent template export class parent component selector app template outside parent directives parent child ngfor ngif export class app text child child child", "num": "5868", "d": "12/2015"}, {"title": "dart map keys change detection exception", "body": "using ngfor mapkeys throws exception dart", "num": "5865", "d": "12/2015"}, {"title": "review packagerooturl appbasehref injectables", "body": "yesterday jeffbcross removed via made realized still two similar apis public api surface appbasehref packagerooturl review check could nt merged one clearly document use jeffbcross tbosch compiler matsko packagerooturl btford appbasehref router wardbell docs", "num": "5860", "d": "12/2015"}, {"title": "issue navigate anchor", "body": "use hashlocationstrategy routing web ok following code click tag throw exception exception typeerror read property tourlpath null link demo please help fix error navigate anchor without error thanks", "num": "5859", "d": "12/2015"}, {"title": "adds docs observable user guide", "body": "since longer reexport observable core need move info api docs user guide", "num": "5858", "d": "12/2015"}, {"title": "make workerapp bootstrap use application instead asyncapplication", "body": "nt asynchronous work since need return promise thus bootstrap workerapp platform using", "num": "5857", "d": "12/2015"}, {"title": "query contentchildren type", "body": "could possible select anyall child directives example let say component users put number random components inside iontoolbar get references iontitle ionsegment query exactly two type components would possible generic query gets child components type cc tbosch igorminar", "num": "5855", "d": "12/2015"}, {"title": "rendering template fails safari", "body": "angular fails render template safari contains plain text eg template getting following exception sample code reproduce bug attached safaribugzip", "num": "5852", "d": "12/2015"}, {"title": "using label element", "body": "trying following throwing error however native property", "num": "5851", "d": "12/2015"}, {"title": "router erroneously recognizes nonparameter urls", "body": "ideally like remove url right though interpreted fails requiring add prefix", "num": "5848", "d": "12/2015"}, {"title": "jsonp never finished", "body": "jsonprequest new request request jsonbackend never calls finished function call manually exception jsoncallback never invoked thrown", "num": "5846", "d": "12/2015"}, {"title": "router parent component one routeconfig needs know", "body": "child route activated use case something like icon change depending selected route imagined api workaround create custom routeroutlet extending directive overriding activate prefer longterm", "num": "5842", "d": "12/2015"}, {"title": "takes forever running", "body": "happen time changing large files like workaround change function use", "num": "5839", "d": "12/2015"}, {"title": "templatecompiler issue ngmodel", "body": "repro works fine mirrors based version compiled version fails", "num": "5838", "d": "12/2015"}, {"title": "publicapispec missing several barrels", "body": "commondom animate bootstrap http router testing", "num": "5836", "d": "12/2015"}, {"title": "bootstrapping js add sugar method abstract away dom interaction", "body": "write seems necessary launch app following angular goal abstract away interaction dom would nice function added event listener us perhaps also trapped bootup failure reported nicely", "num": "5834", "d": "12/2015"}, {"title": "redirecting binding errors routed view console", "body": "hi see way redirect console error generated bootstrap phase opening main page catch nt cover errors happening rest program activity yesterday updating program trying open view program completing changes ngmodel ngmodel loading fails leaving blank page aborting creation component class never received error message log console nt found resource explains problem calls changes rxjs tracking execution see error tracked nt see anything log console find resource explain route kind errors sorry posted asked gitter day without answer", "num": "5833", "d": "12/2015"}, {"title": "official hero form demo angulario broken alpha", "body": "upgrade latest alpha beside noticing child dependencies need added manually npm like rxjs others things stopped working imagining must related problems official hero form plunk angular update alpha sure bug alpha needs fixed demo needs update either way something need done", "num": "5831", "d": "12/2015"}, {"title": "ngfor work dart", "body": "following inline template works ok pub build output build error transform templatecompiler curcumacustomerlibshareditemslistngmetajson threw error template parse errors property binding ngforof used directive embedded template error gt shareditemslist package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates dart asyncfuturedart futurefuturemicrotask dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package templateparserparse package templatecompilerprocesstemplatecodegen package templatecompilercompiletemplatescodegen dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates", "num": "5826", "d": "12/2015"}, {"title": "random failures adapter", "body": "simple component import component component selector template export class counterpagecomponent counter number using ngupgrade import reflectmetadata import upgradeadapter const adapter adapter new upgradeadapter const module angularmodule moduledirective counter counterpagecomponent getting error time refresh page error expecting protoviewref directivefactory angular component called", "num": "5825", "d": "12/2015"}, {"title": "seems te working", "body": "simple app works chrome firefox internet explorer please check missing something url app sources", "num": "5824", "d": "12/2015"}, {"title": "click event handler raises exception even empty body", "body": "using raises exception right running click event handler event handler body runs even empty exception raised find plunker click click see console log javascript function var clickmecomponent ngcore component selector clickme template click class constructor function thisonclickme function consolelog hero var appcomponent ngcore component selector myapp templateurl appapphtml directives clickmecomponent class constructor function documentaddeventlistener domcontentloaded function ngplatformbrowserbootstrap appcomponent", "num": "5823", "d": "12/2015"}, {"title": "typing issue didts", "body": "getting typing error didts typescript compiler version complains token property error error type expected changing solves problem", "num": "5822", "d": "12/2015"}, {"title": "ngif somenonboolvar fails dartium", "body": "working tomplusplus work right even would illegal expression dart html template language nt dart background macs using version dart stable channel possible using different versions dartium since used running dev channel first might uninstalled dartium uninstalled homebrew dart versions check dartium version reproduce download files added run example dartium tom amp used webstorm rightclick indexhtml choose either run indexhtml open browser gt dartium see one line hero list sample broken see lines working always broken dartium works chrome changing line fixes problem error see dartium exception failed assertion boolean expression must null selectedhero herolistcomponent program exception failed assertion boolean expression must null selectedhero herolistcomponent program original exception failed assertion boolean expression must null program original stacktrace program ngifngif package package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefloadcomponent package applicationrefbootstrap package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart program error context program dartobject uncaught unhandled exception exception failed assertion boolean expression must null selectedhero herolistcomponent original exception failed assertion boolean expression must null original stacktrace ngifngif package package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefloadcomponent package applicationrefbootstrap package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart error context instance context abstractchangedetectorthrowerror package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefloadcomponent package applicationrefbootstrap package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart", "num": "5818", "d": "12/2015"}, {"title": "test publicapi ensure publicapispec tests imports barrels instead", "body": "deprecated let make sure spec testing real public apis may possible lands since partially exporting compiler barrel", "num": "5816", "d": "12/2015"}, {"title": "chore bundle determine compiler barrel omitted", "body": "handful symbols exported compilerts inside may necessary public apis decide symbols part public api whether barrel included bundle symbols required perhaps separate minimal barrel warranted look core codebase make sure safely removed check internally make sure depended", "num": "5815", "d": "12/2015"}, {"title": "need implement oninit etc lifecycle events", "body": "totally wrong need implement etc order hook component lifecycle events right said docs would need updated wanted get confirmation happy provide pr desired smile", "num": "5814", "d": "12/2015"}, {"title": "update party libs dec", "body": "typescript systemjs", "num": "5813", "d": "12/2015"}, {"title": "could accept camelcase dashcase html", "body": "casesensitive camelcase templates kebabcase removal breaking change introduced big impact could accept style new camelcase old kebabcase dashcase jquery converts kebabcase style data attributes camelcase names automatically data method people familiar converting name behavior difficult change behavior please tell reason change introduced read documentations ca nt find kebabcase bad course know angular alpha stage breaking changes inevitable like know case previous kebabcase dashcase causes problems sorry bothering big fan angular creating angular application fun creating angular application planed release next month january regards", "num": "5812", "d": "12/2015"}, {"title": "allow omitting template file resides directory", "body": "suggested munificent cc yjbanov tbosch vsavkin situation could omitted buttondart", "num": "5811", "d": "12/2015"}, {"title": "ngmodel behaves buggy extreme use case", "body": "type extremely fast ngmodel behaves buggy debug found next condition inside ngmodel directive reference source suppose code inside condition run model property updated user ngmodel directive actually try type instance fast events emitted code notify model late reference source lateness causes update input due next code reference source process nt visible human eye due speed debug looks like input box work laptop windows successfully reproduced latest chrome version latest edge version also tried latest firefox reproduces less frequently believe due slower event dispatch reproduce debug source angular hitting break point inside next condition function note write extremely fast", "num": "5808", "d": "12/2015"}, {"title": "typings conflict project typings", "body": "already including file angular also includes get lots errors really solution solution someone point find something would make work besides including typings file", "num": "5807", "d": "12/2015"}, {"title": "use zonejs packagejson", "body": "would good idea use deps make sure always get latest patches would also avoid things like dependency", "num": "5804", "d": "12/2015"}, {"title": "ngfor working alpha downgrading fixes", "body": "getting errors alpha exception template parse errors ca nt bind ngforof since nt known native property ngfor component components componentid sitecomponents component definition import component injectable coredirectives import componentservice servicescomponentservice import isitecomponent typesisitecomponent component selector sitecomponents templateurl srcappmodulessitecomponenttemplatehtml directives coredirectives providers componentservice downgrading alpha fixes issue ngfor works expected", "num": "5802", "d": "12/2015"}, {"title": "proposal reinstate typings bundle", "body": "hi typings always issue angular different strategies followed since beginning project example ps available implement team feels like way go forward also available provide justificationclarification topic want motivation latest strategy although suitable todo app fails work complicated environments targeting typescript example deploying anything npm also work better know bower package managers used need entire angular source code every dev machine bundle suffices also breaks compatibility typings global definitions internal modules yet fully supported ide like visual studio changing cjs always option goal ease mediumlarge size projects development allowing different distribution channels allow direct compilation proposal distribute typings packages module angularcore angularcommon dgeni longer required thus removing one tool maintain use tools like soon available compiler option achieve simple test shown cleanup somethings code like promise defined declared file catched generator thus making hard even read code dtsgenerator work example imagine frontend project following structure frontend project uses framework business logic internally uses core modules use parties case angular need something like simple structure easily distributed", "num": "5796", "d": "12/2015"}, {"title": "overridden component classes input properties", "body": "subtle bug export class basecomp input val component export class comp extends basecomp input val output evt new eventemitter lt uncomment one uncomment also input line overwise component would nt see variable ngoninit consolelog see ya fine try uncomment output thisval", "num": "5794", "d": "12/2015"}, {"title": "abstractcontrol internal members needed extending classes", "body": "currently value initobservables public marked internal means classes extend abstractcontrol access typescript compiler complains nt exist removing internal comments fixes problem variables public internal ca nt protected dart nt support protected variables use case control extending abstractcontrol handles immutable data imagine use cases extending abstractcontrol happy pr unsure intent behind marked internal called extending class control", "num": "5793", "d": "12/2015"}, {"title": "including router produces error", "body": "made simple app test compatibility ie seems adding router gives following error ca nt really say line exactly produces error debugging ie really painful especially vm tips regarding welcome main component looks like js import component import routeconfig routerdirectives import testcomponent componentstest component selector app template directives routerdirectives routeconfig path component testcomponent export class app js import component component selector test template hello component test export class testcomponent public test string test", "num": "5792", "d": "12/2015"}, {"title": "method listening customevent triggered eventemitter runs windows scope", "body": "method binded custom event triggered using eventemitter executed window scope based scope class belongs sample code passing items array method oncardboundedrectavailable already available viewportts file yet unaccessible using version viewporthtml html name viewportts typescript component selector pbviewport templateurl appcomponentsviewportviewporthtml directives card coredirectives providers chartservice export class viewport implements oninit ondestroy onchanges static cardgap input pbname name string public items cardservice cardts typescript component selector pbcard templateurl appcomponentscardcardhtml directives coredirectives export class card implements oninit afterviewinit aftercontentinit input carditem item cardservice output rectavailable boundedrect eventemitter new eventemitter included html template relavant issue complete source found based quickstart code", "num": "5791", "d": "12/2015"}, {"title": "case sensitive template nt work html minifyer", "body": "becomes resulting compiler error", "num": "5789", "d": "12/2015"}, {"title": "bug templateparser substring tags creates problems parser", "body": "create component selector component selector use template parser going say myfielset matches two components", "num": "5788", "d": "12/2015"}, {"title": "regression typescript error type expected", "body": "seems bug typescript introduced dts produce publish npm fail typecheck compiled angular app originally reported mhegazy known issue seems related changes make angularangular get us onto", "num": "5784", "d": "12/2015"}, {"title": "router app base root routes working properly", "body": "considering scenario appbasehref set myapp use hash location startegy version component selector app template directives routerdirectives routeconfig path component somecmp export class appcmp component selector template yo directives routerdirectives routeconfig path component othercmp path smthg id component someothercmp someother export class somecmp loading leads gt fine navigating leads gt extra match routes load fine first time page reload forward button nav broken something wrong bug", "num": "5782", "d": "12/2015"}, {"title": "stop reexporting observable via", "body": "blocked", "num": "5780", "d": "12/2015"}, {"title": "wrong type definition attributemetadata", "body": "type definition incorrect since", "num": "5778", "d": "12/2015"}, {"title": "document bundle contents formats intended usage", "body": "need document current state packaging suggest table bundle files one axis barrels info format devprod minified axis example filename list barrels format devprod minified usage systemregister dev development systemjs publish md file similar later incorporate dev guide docs copy bundles folder appears npm well codeangularjsorg write doc copy doc npm bundles directory build ensure doc also copied right folder appears codeangularjsorg", "num": "5777", "d": "12/2015"}, {"title": "unify bundle names", "body": "ones stick webworker bundles special dir prefix something put dir equal comes content make name look like differ format prefixed bundles variant others nt seems bit random uses underscore separators use dashes need maybe rename webworker bundles suggested first item avoid inconsistency", "num": "5776", "d": "12/2015"}, {"title": "shim requestanimationframe", "body": "tried run pretty clean app angular deps webpack dev server got following error found code library testing maybe added also core", "num": "5775", "d": "12/2015"}, {"title": "parsing html template hidden fails", "body": "started test app built top different environments turned issues ie mostly try let know one html parser trying parse following lines get error code works modern browsers like charm fix make workaround seem problems", "num": "5774", "d": "12/2015"}, {"title": "windows dart transformer error view styleurls", "body": "following component component selector main view templateurl package styleurls const package class maincomponent execute pub build get following created example also tested ubuntu machine pub get executed without problems dart vm versions machines", "num": "5772", "d": "12/2015"}, {"title": "support async filter field param", "body": "support observable object field access", "num": "5771", "d": "12/2015"}, {"title": "problem component host bindings", "body": "specifically binding classes host element refuses work using component similar one template give target testing click event works nt work host binding using literals works extremely simple string expressions anything complex dead water error message example following host class binding nt work js component selector mylayout host classmenuopen menuisopen click togglemenu template export class layoutcomponent menuisopen false edit", "num": "5770", "d": "12/2015"}, {"title": "flaky perf test firefox", "body": "currently common flake know disable test ff something else prevent failing builds several times day", "num": "5769", "d": "12/2015"}, {"title": "router isrouteactive defines active rendering component", "body": "multiple routes point single component know route used eg dart routeconfig const const route name path component portfolioconditionalviewcomponent useasdefault true const route name planning path planning component portfolioconditionalviewcomponent class portfolioconditionalviewcomponent portfolioconditionalviewcomponent router router var planninglink routergenerate planning routerisrouteactive planninglink came planning something special isrouteactive currently works another way get information expose current instruction one hack seems could overwrite store instruction maybe better suggestion", "num": "5768", "d": "12/2015"}, {"title": "karmabrowserstacklauncher generates bogus warning", "body": "blocked update packagejson reshrinkwrap", "num": "5767", "d": "12/2015"}, {"title": "declare hammerjs peerdependency npm", "body": "event plugin depends hammer currently nt officially declare dependency optional peer dependency declared included currently blocked release see get hammerjs released update update add documentation update remove inlined hammerjs build pull file nodemodules vicb pkozlowskiopensource adamdbradley", "num": "5766", "d": "12/2015"}, {"title": "ngclass bugs alpha multiple css classes", "body": "plunk official one api preview multiple class added instead change click button disabled back forth see class nt get added", "num": "5763", "d": "12/2015"}, {"title": "remove methods dart js", "body": "eg ca nt removed cjs adapter different", "num": "5760", "d": "12/2015"}, {"title": "use corejs instead", "body": "reason using corejs compat table corejs covers lot", "num": "5755", "d": "12/2015"}, {"title": "typescript guide error", "body": "typescript tutorial due wrong markup template parsed error thrown anyway wanted point case nt opened yet remove perfect cheers", "num": "5752", "d": "12/2015"}, {"title": "map breaking changes lossing hair loss sleep", "body": "really love guys angular best even nt done yet vent somewhat morning hankey two letter changes put table somewhere listed breaking cause old man cry heart attack time case refer exportas form exportas ngform disregard rant recommendations nt seem work right left breaking changes even figuring typo operation operations still ca nt figure imported everywhere use even nt someone please explain also purpose map seems kinda pointless resultjson itype could even leave itype guess really way get rid red lines thats noticed change numbers keep amazing work please reference point change documentation match letter changes", "num": "5749", "d": "12/2015"}, {"title": "htmlparser check top level tag", "body": "generate html hello", "num": "5748", "d": "12/2015"}, {"title": "npm install complains peer deps", "body": "get following warnings install latest alpha version", "num": "5746", "d": "12/2015"}, {"title": "ngrepeat elements flickering issue animations onload", "body": "dealing flickering issue dom elements animation loading list nested html elements ngrepeat pageload event hiding elements list using animation hide elements gets hided page load flickering shows hide webkitanimationname hide animationname hide webkittransformstyle webkitbackfacevisibility hidden webkittransform due ngrepeat rendering model animation transition issue", "num": "5744", "d": "12/2015"}, {"title": "ngbootstrap application alpha", "body": "trouble making application start alpha see reorganization ng information sfx umd changelog found ngcomponent moved ngcorecomponent ngbootstrap go appear published bootstrap ngbootstrap ngcorebootstrap ngcommonbootstrap anywhere else could spot look test suite nt see lists maybe missed see bootstrap nt see anything relevant changelog", "num": "5743", "d": "12/2015"}, {"title": "error message named redirect router", "body": "hi think found problem router navigation useasdefault use defaultrouter redirect inside child router triggered may confirm plunkr works hit button best regards tbragaf", "num": "5742", "d": "12/2015"}, {"title": "router recognition behaviour", "body": "hi following resource app component router components home login problem explained right link home login components ca nt recognize home pathyou check console simply html rendered navigate home login using navigatebyurl method instance router injected home login components like app component best regards tbragaf", "num": "5740", "d": "12/2015"}, {"title": "remove upgrade barrel bundle", "body": "even putting aside fact goes away namespace need agree content corresponding bundle today exports barrel discussing igorminar looks like go away corresponding systemregister bundle alternative ngupgrade users use umd bundles would breaking change people tried use ngupgrade systemjs loader current systemregister bundles cc wardbell teropa pascalprecht previous chat looked like teaching upgrade systemjs loader typescript case please speak", "num": "5739", "d": "12/2015"}, {"title": "trying use observablefrom exported rxjsobservable luck", "body": "seems related code used work import observablefrom new response new responseoptions body message color red upgrade stopped working observable seems trimmed would expect code still work part import rxjsobservable observablefrom new response new responseoptions body message color red", "num": "5736", "d": "12/2015"}, {"title": "web worker bundle size", "body": "today webworkerrelated bundles systemregister format respective size gzipped uidevjs bytes workerdevjs comment uidevjs currently script intended run standalone ui thread without also loading idea uidevjs contain parts absolutely necessary loaded ui workerdevjs contain everything need worker thread nothing ca nt loaded worker based uidevjs quite minimal practice size close entire bundle bytes could please verify indeed add minimal part maybe bundles optimized already cc igorminar decide need", "num": "5735", "d": "12/2015"}, {"title": "problem testcomponentbuilderprototypecreateasync", "body": "hi set component test similar bordercomponenttestts uses works fine update inner closure assertions called spec js import progressbarcomponent progressbar import component import describe expect injectasync testcomponentbuilder beforeeachproviders component template directives progressbarcomponent class testcomponent describe progressbarcomponent gt progressindicator correct scale injectasync testcomponentbuilder tcb gt consolelog foo return tcb overridetemplate testcomponent createasync testcomponent fixture gt consolelog bar also changed update location browseradapter module js import browserdomadapter location changed import browserdomadapter browserdomadaptermakecurrent also deprecated tried use instead bar still wo nt show console missing something using karmajspm run tests", "num": "5731", "d": "12/2015"}, {"title": "controlgroupvaluechange firing anymore input text cleared protractor", "body": "hey since merge harder test protractor could clear inputfield text webelementclear amp webelementsendkeys formvaluechange would fire change since pr valuechange firing anymore way clear input text send backspaces nt convenient", "num": "5730", "d": "12/2015"}, {"title": "running scriptscibuilddartsh fails locally", "body": "matsko hit clue going seems caused something fishy might red herring", "num": "5729", "d": "12/2015"}, {"title": "published", "body": "looks like nt deployed", "num": "5728", "d": "12/2015"}, {"title": "nghttp packagejson broken", "body": "missing comma throws errors using build tools build angular", "num": "5726", "d": "12/2015"}, {"title": "upgrade typescript", "body": "x requires upgraded x broccolitypescript plugin needs small tweak config parsing x hopefull dgeni keep working alexeagle petebacondarwin", "num": "5725", "d": "12/2015"}, {"title": "upgrade rxjs", "body": "", "num": "5722", "d": "12/2015"}, {"title": "manual shutdown support", "body": "typical use case instead letting angular framework takes whole app certain parts app uses angular would nice angular selfcontained least clear boundary interacts global component like disentangle see discussion angular tracking", "num": "5715", "d": "12/2015"}, {"title": "rename externaldependenciesjs bundle", "body": "sooo love naming discussion one currently got bundle contains zonejs reflectmetadata idea rename sth like name might confusing zonejs polyffil nt include would kind expect something named guess questions content bundle shell add would best name thingy", "num": "5714", "d": "12/2015"}, {"title": "reapply pipe item added array", "body": "imagine situation need filter items array using pipe html code look like everything works perfectly add one item array normally would filtered removed pipe would expect pipe transform function called happens stays nothing changes nt think expected behaviour would expect pipe recalled think thanks", "num": "5711", "d": "12/2015"}, {"title": "remove support kitchen sink barrel", "body": "barrel reorg done bundle reorg almost done time remove barrel entry point force everyone import correct location rule export symbol via one public entry point prevent confusion code portability issues due duplicateplatformspecificbundlespecific imports change affect following x remove remove requires fixing fix ts side leave item open need time fix x update internal imports depend x update systemregister bundle config x update umd bundle config x update api docs update dev guide docs x update dgeni doc generation entry points x update cli blueprints x update seed pkozlowskiopensource vsavkin robwormald wardbell yjbanov petebacondarwin", "num": "5710", "d": "12/2015"}, {"title": "stop bubbling event event binding returns falsey", "body": "following saves twice click button save propagation regardless returns vsavkin responded think call preventdefault stop bubbling might misled previously actually surprised stop bubbling seems reasonable think matter angular honoring flag", "num": "5708", "d": "12/2015"}, {"title": "bug must mention directive name binding one outputs", "body": "detected alpha vsavkin thinks might fixed coincidentally recording report track confirm report following works click nt directive never instantiated click directive", "num": "5707", "d": "12/2015"}, {"title": "template syntax support", "body": "shorthand operators especially useful event binding template expressions vsavkin opines belong easy add", "num": "5706", "d": "12/2015"}, {"title": "mechanism control css classes applied selector", "body": "want way listitem control css classes applied element list classes apply might static dynamic", "num": "5705", "d": "12/2015"}, {"title": "dart dependency injection ignores type arguments component constructors parameters", "body": "provide injection generics via however appear extended injection parameters component constructors eg takes parameter constructor adding provider result value injected constructor add provider writes type name parameter model ignoring type arguments believe resolved writing parameters type arguments adding case providerts set token", "num": "5704", "d": "12/2015"}, {"title": "styles applied custom component selectors", "body": "running issue applying styles custom elements sure bug lack understanding simple component called want apply styles part component definition example components trying typescript import component coredirectives component selector mycmp template styles export class mycmp component selector myapp template directives coredirectives mycmp export class app would expect outputted html look something like styles applying directly mycmp mycomponent border around nothing applied plunker demonstrating example", "num": "5702", "d": "12/2015"}, {"title": "angular router typescript", "body": "trying use angular router new project typescript able load module jspm also typing file router would like contribute angular router trying load angular var require line need also expect router release pushing", "num": "5701", "d": "12/2015"}, {"title": "suspicious exports", "body": "current superbarrel mostly reexports symbols barrels core common etc suspicious exports nt seem exported main barrels exports part barrel belong need answer question kill barrel", "num": "5700", "d": "12/2015"}, {"title": "passing url params wo nt parsed", "body": "currently passing url like routeparams imported component params object key value instead full url passed param cause behaviour regex urlparserts limitation intended behaviour", "num": "5699", "d": "12/2015"}, {"title": "tests passed alpha failing alpha", "body": "skipped alpha upgrading directly tests started failing cases seeing message tests spying sample test file tests fail even though spying level typescript import describe expect import cardselectionenum cardselectionenum describe aesruleenum gt right number values gt expect cardselectionenumvalueslength tobe describe fromname gt correctly return value gt cardselectionenumvaluesforeach value cardselectionenum gt expect cardselectionenumfromcode valuecode tobe value error message karma see error thrown ngtestzone nt understand problem another error message another test test exercises static method components error message refers componentref obviously three stack traces come error handling location nothing much us go time excluding tests hope able revive next alpha release comes", "num": "5698", "d": "12/2015"}, {"title": "ngfor rendering dom firebase data called", "body": "getting data firebase using code able create array using code storing data thisposts trying use view like ngfor post posts display anything data printed console anyone help", "num": "5696", "d": "12/2015"}, {"title": "wrong import rxjs", "body": "heyho want leave comment installed lastest alpha npm get error webpack problem wrong correct import would change use angular sources", "num": "5695", "d": "12/2015"}, {"title": "pass template", "body": "element working fine angular alpha template start broken alpha version still working seems new template parser like non closed adding remove error message would invalid made example please let know anything wrong need open console see error audio important us normally load src dynamically version add source creating new element", "num": "5694", "d": "12/2015"}, {"title": "resolve module rxjsoperatorstopromise", "body": "looks like angular tries load files path called like seems path called without webpack error", "num": "5693", "d": "12/2015"}, {"title": "attribute work typescript", "body": "tried pass attribute constructor component using attribute got compile error unable resolve signature parameter decorator called expression using typescript", "num": "5692", "d": "12/2015"}, {"title": "web worker api changes included change log", "body": "looks like recent changes web worker api omitted change log web worker bootstrapping api changed quite bit think go change log changed simple bootstrapwebworker call slightly verbose working new api feels awfully verbose compared original code ca nt wrap single method instead use original bootstrapwebworker wrapper anyway thought", "num": "5690", "d": "12/2015"}, {"title": "proposal input observable", "body": "sorry good english property values provided parent component changes come asynchronously input property changed child component property property change detector never notice goal parent input data child input property synchronized developers understand input properties changed asynchronously proposal js component selector child class child input input inputvalue observable ngoninit thisinputvaluemap value gt component template class parent valuetochild code work currently receive input must write like js component selector child class child input input inputvalue observable component template class parent valuetochild observable new observable observer gt observernext val example works well essential parent input data simple data originally think proposal make us happy thanks", "num": "5689", "d": "12/2015"}, {"title": "upgrade rxjs alpha", "body": "less circular imports", "num": "5687", "d": "12/2015"}, {"title": "attrdisabled remove disabled state regression", "body": "never mind please close issue", "num": "5686", "d": "12/2015"}, {"title": "handling lt html", "body": "allows lt text nodes throw however valid html would valid html one potential issue current approach would parsed html tag would easy user debug could solve making lexer aware angular expression cc tbosch edit could also cause pb", "num": "5679", "d": "12/2015"}, {"title": "proposal angular quickstart add distance information hyperlinks", "body": "point view angular documentation well done yet read hit sentence containing hyperlink follow hyperlink scroll three lines see actual hyperlink documentation confused information found find asking found another file found within current document already read referenced information get next many times find controlclicking hyperlink open new tab wo nt forget read content time later see new tab displays next paragraph document read hyperlink fragment identifier avoid confusion suggest indocument hyperlinks text followed term resp make clear whether hyperlink rather comfort necessary reveal information make clear whether hyperlinked information already read information current hyperlink page whether information revealed next information current hyperlink page concern also true cases document supposed printed read without hardware readers blind suggestion help identify whether hyperlinked information revealed within current document whether already read whether action needs taken read referenced information three examples bold face added sake clarity explained another document explained detail explained detail", "num": "5677", "d": "12/2015"}, {"title": "dynamically attach validator control", "body": "way attach validators existing control option found pass validators constructing control developing complex validationsystem different validators order minimize markup code needs written designers looking way shorten declaration trying develop attribute directive maps value concrete validators example directive map value lookup dictionary concrete validators attach control achieve need way manipulate validators existing control currently getter implemented", "num": "5676", "d": "12/2015"}, {"title": "angular inheritance injection", "body": "hi following setup typescript import injectable inject import http injectable export class foo constructor inject http public http injectable export class bar extends foo import component typescript import component import bar foobar component providers bar selector app templateurl home export class app constructor private bar bar debugger debugger see expected contrary since injected super class constructor well defined use thanks advance", "num": "5675", "d": "12/2015"}, {"title": "router diagnostics retrieve currently active route", "body": "angular dart possible inject retrieve allowed added diagnosticslogs part unique key component see private public interface something similar", "num": "5674", "d": "12/2015"}, {"title": "question way attach validator directive via dynamically computed selector", "body": "couple validators adding order available templates want implement custom input component control attached validators set selector constant plunk example problem validator correctly applied set fixed input type property want input fields validated way", "num": "5673", "d": "12/2015"}, {"title": "fix changelog include refactor commits", "body": "changelog seems omit refactor commits even breaking changes example commit included cc robwormald", "num": "5672", "d": "12/2015"}, {"title": "alpha custom elements css style", "body": "hi upgrading referred versions realised css odd behaviour custom elements components also lineheight body lineheight nt affect custom elements anyone confirm best regards tbragaf", "num": "5671", "d": "12/2015"}, {"title": "browser back button work page refreshed several times", "body": "using router strange behaviour refresh page suppose located certain url xxxx yyyy previous page ion normal case going back yyyy requires one click back button strangely refresh xxxx page n times would clikc back button times get back yyyy page using hashlocationstrategy route configuration would say behaviour got expected implementation class line pushes state refresh well workaround need implement matter many times user refreshes page url xxxx always go back yyyy page single click back button thanks", "num": "5670", "d": "12/2015"}, {"title": "ngobservablefromarray present", "body": "following code nt work", "num": "5667", "d": "12/2015"}, {"title": "invalid name reactivexrxjs", "body": "execute npm systemjs save saveexact got errors using steps install npm systemjs save saveexact npm warn engine reactivexrxjs wanted npm current node npm npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm systemjs save saveexact npm err node npm err npm npm err invalid name reactivexrxjs npm err npm err need help may report error npm err", "num": "5666", "d": "12/2015"}, {"title": "changes sfx bundle", "body": "start current sfx bundle contains following barrels zone reflectmetadata common core instrumentation platformbrowser upgrade router common core instrumentation platformbrowser exported namespace http exported namespace router exported namespace using output nt minified nt source maps provides support noconflict mode although broken since nt restore namespaces part bundling discussion several times touching upon role content setup sfx bundle specifically open questions main consumer sfx bundle ngupgrade afaik rkirov aware another usecase shell use bundle ngupgrade scenarios content barrels noncontroversial common core instrumentation platformbrowser disputable exact namespaces shell used export different barrels keep nonconflict mode list see number small decisions need take", "num": "5665", "d": "12/2015"}, {"title": "tag throwing error since", "body": "appears wants tag closed invalid according spec far know markup console log ref", "num": "5663", "d": "12/2015"}, {"title": "testcomponentbuilderinject work component templateurl", "body": "following test fails expected component selector header template hello welt export class describe testcomponent gt fail inject testcomponentbuilder tcb gt return tcbcreateasync fixture gt fixturedetectchanges expect toequal moving template external resource test passes without failing async part nt get executed component selector header templateurl srctesthtml export class testcomponent describe testcomponent gt fail inject testcomponentbuilder tcb gt return tcbcreateasync testcomponent fixture gt fixturedetectchanges expect toequal", "num": "5662", "d": "12/2015"}, {"title": "input changes error ngformcontrol valuechanges", "body": "getting following exception control instantiated original exception typeerror thisfiltertextvaluechangesdebouncetime function plnkr example sure missing something", "num": "5661", "d": "12/2015"}, {"title": "feat ngforon add ngforon directive async support", "body": "robwormald came via jhusain implementation basically like resolves observables automatically implementation example wonder could add core", "num": "5660", "d": "12/2015"}, {"title": "change preposition ngfor expression", "body": "standard english preposition trying describe relationship object container every programming language think uses java foreach syntax look language oracle uses paragraph pronounced python javascript angular wtf please change malediction spreads", "num": "5659", "d": "12/2015"}, {"title": "rfc rename exportas form exportas ngform", "body": "angular core directives start ng prefix avoid name collision renaming form ngform reason cc vsavkin", "num": "5658", "d": "12/2015"}, {"title": "question ist redirectto router definition array", "body": "hey together playing typescript alpha polymer referring typedefs array code works well router stopped working without error message got something wrong slight mistake", "num": "5655", "d": "12/2015"}, {"title": "strange bug alpha svg graphics", "body": "strange took come simple test case worked alpha longer works alpha use html straight browser component alpha end square however alpha end square others might struggling way fix meantime alpha insert scale transform like something alpha producing something different straight browser behavior alpha assuming culprit alpha however quick check specs might seem correct literal rendering might alpha browsers automagically scaling background nonetheless inconsistent behavior bigger problem think alpha one fixed", "num": "5654", "d": "12/2015"}, {"title": "consider new pipe syntax proposal", "body": "proposal reminds angular filter syntax function doublesay str return str str function capitalize str return str touppercase strsubstring function exclaim str return str var result exclaim capitalize doublesay hello result gt hello hello var result hello gt doublesay gt capitalize gt exclaim result gt hello hello", "num": "5645", "d": "12/2015"}, {"title": "bad rxjs import facadeasyncjs", "body": "line calls folder renamed result jspm install angular without bundling gets following error rxjs version either fixed version reference udpated", "num": "5643", "d": "12/2015"}, {"title": "docs observable document compose operators", "body": "upgrading noticed http module longer stand according examples import even get access essential map method wondering nt bit clunky unnecessary reveal dependency rxjs like nt abstracted us seems like also include rxjs separately addition angular rx visible angular provide map etc via http module ca nt use rxjs directly ps listed breaking change change log", "num": "5642", "d": "12/2015"}, {"title": "testing small type error fakeasync", "body": "returning whereas expects get right return functionwithparamtokens like put together pr way fix", "num": "5640", "d": "12/2015"}, {"title": "mockbackend longer exported", "body": "looks like longer exported module since docs still refer package listed breaking change release notes may missing something break dozen tests apps maybe robwormald answer", "num": "5639", "d": "12/2015"}, {"title": "tbody wrap tr template", "body": "", "num": "5638", "d": "12/2015"}, {"title": "feat make controlgroupfind instance method observable", "body": "would nice find method observable controls initialized yet find example custom validator js import provide directive attribute input host import ngvalidators ngform controlgroup abstractcontrol control validators validator import ispresent commonlang directive selector equalto ngcontrol equalto ngformcontrol equalto ngmodel providers provide ngvalidators useexisting equaltovalidator multi true export class equaltovalidator implements validator target abstractcontrol constructor host formdir ngform attribute equalto target string let form controlgroup formdirform even though fetched also set right value constructor invoked controls set try call get null may design maybe bug makes kind impossible set watcher value changes another control trying method async think observable would solve issue something like following js constructor host formdir ngform attribute equalto target string let form controlgroup formdirform ways creating subscription value changes control feature would course needed", "num": "5637", "d": "12/2015"}, {"title": "responsejson type object", "body": "hello call json response objet returns type object think comes nt method return type try access property object get typescript error thank much basile", "num": "5636", "d": "12/2015"}, {"title": "validator access another control", "body": "testing validators morning created simple validator tests equality values two controls js import provide directive attribute input import ngvalidators control validators validator import ispresent commonlang directive selector equalto ngcontrol equalto ngformcontrol equalto ngmodel providers provide ngvalidators useexisting equaltovalidator multi true export class equaltovalidator implements validator input equalto target control constructor thistargetvaluechangessubscribe args gt consolelog args validate control control key string ispresent validatorsrequired control return null consolelog control return thistargetvalue controlvalue equalto true null would use seems work fine one issue user types validation pick makes perfect sense since nothing links something would like tried use point control problem constructor gets initialized got stuck sure bug something possible also think using lookup control issue look children think way could achieved", "num": "5635", "d": "12/2015"}, {"title": "npm install failed", "body": "npm install npm err shasum check failed npm err expected npm err actual npm err env windows nodejs npm", "num": "5633", "d": "12/2015"}, {"title": "function working alpha", "body": "since updated alpha longer working injectable export class wpservice implements iwpservice baseurl string http constructor http thishttp getposts var query thisbaseurl getposts return new jsonobject injectable export class jsonobject constructor json observable jsonmap res gt resjson map data gt lt var entry data datahasownproperty entry entry data entry subscribe downgraded alpha map worked maybe something integrated rxjs", "num": "5632", "d": "12/2015"}, {"title": "html parser lf textarea pre", "body": "per spec lf immediately following start tag ignore tags textarea pre listing", "num": "5630", "d": "12/2015"}, {"title": "commit method prefix slash none needed", "body": "case root router config route path linked component child router config following example javascript component selector app view template apphtml directives routerdirectives routeconfig path subapp component subapp path login login component login class app component selector subapp view templateurl subhtml directives routerdirectives routeconfig path home component home path whatever whatever component whatever export class trainer config pointing browser simply points home route login login whatever whatever structure allows put header subhtml file nt appears access login route works well except part commit method rootrouter class make emitpath object get prefixed empty case empty path subapp root already add every time making appearing twice state pushed history consequently makes fail fixed extending statement verification said slash beginning path creating pull request right away", "num": "5627", "d": "12/2015"}, {"title": "di adding provider class component", "body": "service class internally uses http injectable export class productservice use service external component must specify httpproviders breaks encapsulation productservice aka leaky abstraction reusable black box strings attached decide replace http another service code external component must modify code well would nice way allow class component specify providers asking much", "num": "5622", "d": "12/2015"}, {"title": "http add factory static methods request class", "body": "rather enable", "num": "5621", "d": "12/2015"}, {"title": "add optional selector argument http methods", "body": "rxjs common provide optional resultselector arguments operators commonly right done avoid incurring additional subscription operator since really likely next thing happen proposing changing line others like appropriate handling means want mapping pump value observable think means pass mapping backend handle also want send errors occur mapping function observable error path", "num": "5619", "d": "12/2015"}, {"title": "html tokenization handle cr correctly", "body": "upgrading seems extra spacing added projecting elements via using anything related copied filipe issue registered angulario plunker plunker", "num": "5618", "d": "12/2015"}, {"title": "need clarification rewriting application", "body": "hi trying rewrite flow chart like intranet application poc started quickstart guide configured typescript mentioned starting development took time get familiar typescript find comfortable implement cheatsheet docs able develop single page components model injectable service struck questions nt know proceed listing question though development made using node export project quickstart prescribed setup minified files single js file resources deployed part war file floating component positioned according arrangements chart though template working fine inspected element found component selector working block element occupies complete width parent tried apply style class id control behaviour inspect able find difference style class id ignored host event mapping gets triggered first card inspite ever card click affecting development part rewrite would like make everything work based event output requires read array data provided rootcomponent top level component included bootstrapped application injected service rootcomponent trigger event listened card components mentioned placement cards depends card array need card component trigger event dom shadow dom width height coordinates listened card component rootcomponent image explain overall application requirement watching module able learn component extends directives earlier use create directives restrict e creating everything component however would like know use directive instead component component view meta decorators almost properties would like know use view instead along component source code available repo please suggest implement api use better implementation amp solution documentation tool eg jsduck use would read code generate documentation similar docs available angulario regards yogesh surendran", "num": "5615", "d": "12/2015"}, {"title": "using corejs angular", "body": "trying compile project directly use corejs shims seem cover lot looks like get error sure though compile works perfectly fine reference", "num": "5614", "d": "12/2015"}, {"title": "jsonp jsoncallback undefined", "body": "overview making jsonp request expected able set parameter query string set per issue angular unwrap response without extra configuration however exception uncaught referenceerror jsoncallback defined exception typeerror jsonp injected script invoke callback thrown way around found set parameter equal however seems bit hacky noticed issue noted times angular users set parameter angular version found browsers operating system tested chrome ie reproduce error working jsonp angular working angular import bootstrap component import jsonp jsonpproviders component selector search templateurl appsearchhtml class searchcomponent jsonp jsonp bootstrap appcomponent jsonp jsonpproviders", "num": "5613", "d": "12/2015"}, {"title": "test flaky", "body": "", "num": "5611", "d": "12/2015"}, {"title": "build gulptestunitjs complains missing map files switching git branch", "body": "starting broccolijsdev removing outputs broccolijsdev errored ms error native objectfsunlinksync diffingtscompilerremoveoutputfor arrayforeach native diffingtscompilerrebuild diffingpluginwrapperrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback", "num": "5610", "d": "12/2015"}, {"title": "dart router routercanreuse called", "body": "attempting use router reuse methods dart looking docs expect called determine whether component reused expect occur early lifecycle management practice nt seemed called example based mycmp plugged playgroundrouting example import package import package import package loggingloggingdart component selector mycmp view encapsulation viewencapsulationnone template hello name directives const class mycmp implements oninit ondestroy canreuse onreuse final logger logger new logger mycmp string name mycmp loggerfine mycmp ngoninit loggerfine ngoninit ngondestroy loggerfine ngondestroy routercanreuse componentinstruction nextinstruction componentinstruction previnstruction loggerfine routercanreuse return true routeronreuse componentinstruction nextinstruction componentinstruction previnstruction loggerfine routeronreuse nextinstruction nextinstruction previnstruction previnstruction thisname nextinstructionparams name log output switching routes mycmp routeonecmp mycmp expected see call mycmp reused", "num": "5608", "d": "12/2015"}, {"title": "integrate angular visual studio typescript", "body": "hi best approach integrate angular visual studio typescript thanks best regards sam", "num": "5602", "d": "12/2015"}, {"title": "templateurl work fakeasync", "body": "tests run issue fakeasync creation components templateurl following code illustrates problem via project updated angular component template directives bordercomponent class testcomponent describe fancy border injectasync gt fancy border injectasync works injectasync testcomponentbuilder tcb gt return tcboverridetemplate testcomponent content createasync testcomponent fixture gt fixturedetectchanges var compiled fixturedebugelementnativeelement fancy border fakeasync inject testcomponentbuilder fakeasync tcb gt var fixture tcboverridetemplate testcomponent content createasync testcomponent rootfixture gt fixture rootfixture create componenttick initializes fixture variable tick invoke ngoninit etc input etc set fails following fixturedetectchanges irrelevant bug report would conceptually like use injectasync let promise ngoninit complete tick let view update model fixturedetectchanges first first test works expected second test fails failed read property detectchanges undefined limited debugging seems indicate templatenormalizernormalizetemplate calls xhrget promise resolve fakeasync context templateurl styleurls commented bordercomponentts inline template supplied works may related possibly could provide workaround", "num": "5601", "d": "12/2015"}, {"title": "npm install folder available", "body": "hello upgraded folder available need bundled typings order compile project regards vasil", "num": "5600", "d": "12/2015"}, {"title": "windows dart pub get transformer errors", "body": "windows run pub get geeting large set transformer errors also ubuntu installation seems work fine", "num": "5599", "d": "12/2015"}, {"title": "using map res gt resjson gives type error", "body": "hi following typescript compiler gives error message code understand using fixes wondering whether typescrip able infer automatically without casting", "num": "5597", "d": "12/2015"}, {"title": "references coredts nt", "body": "moving starting hit typescript compiler errors like importing pulling pulls however importing longer pull file results kinds typings missing work around developers need explicitly refer dts file via trippleslash reference via tsconfigjson example note actually pretty problematic pulls type definitions shims also jasmine promises bunch stuff pretty messy find better way separate issue rkirov alexeagle mprobst cironunes vsavkin", "num": "5596", "d": "12/2015"}, {"title": "integration angularjs typescript", "body": "hi angularjs built keeping component based architecture example exists application thanks best regards balram", "num": "5595", "d": "12/2015"}, {"title": "unable configure hammerjs", "body": "attempting use tap event hammerjs however appears way configure settings events specifically speaking touch action interferes application using native click events really optimal solution touch action documentation well example hammerjs tests", "num": "5594", "d": "12/2015"}, {"title": "exports router symbols windowng object", "body": "looks like last root clobbers symbols", "num": "5593", "d": "12/2015"}, {"title": "routeuseasdefault change url", "body": "reproduction case add following html dart root component child component intended behavior clicking anchor tag navigates component url reflects change actual behavior component loaded url stays missing", "num": "5590", "d": "12/2015"}, {"title": "feat router api generating menus routeconfig", "body": "", "num": "5589", "d": "12/2015"}, {"title": "dart urls files resolved relative compilation unit", "body": "example maindirmaindart dart library main part subdirfoodart maindirsubdirfoodart dart part main component templateurl templatehtml class mycomponent transformer look templatehtml maindir maindirsubdir workarounds place part files subdirectories use absolute uris specify", "num": "5587", "d": "12/2015"}, {"title": "platformdirectives defined tests", "body": "uses bindings missing means user defines component uses example nt specify explicit dependency via work app fail tests", "num": "5585", "d": "12/2015"}, {"title": "unknown entity laquo exception template parser", "body": "html template gives error issue introduced alpha issue alpha valid html entity", "num": "5582", "d": "12/2015"}, {"title": "add umd testing bundles", "body": "need add testing umd bundles testing bundles mirror umd bundles publish today would testing bundles core bundles source maps nt need minified version corresponds dev", "num": "5581", "d": "12/2015"}, {"title": "track untransformed helloworld size", "body": "see gulpfilejs", "num": "5577", "d": "12/2015"}, {"title": "testing http testing really verbose", "body": "typical http test looks like typescript describe raceservice gt beforeeachproviders gt mockbackend baserequestoptions provide http usefactory backend defaultoptions gt new http backend defaultoptions deps mockbackend baserequestoptions raceservice return observable races inject raceservice mockbackend service mockbackend gt fake response let hardcodedraces new race london new race lyon let response new response new responseoptions body hardcodedraces return response connection mockbackend mockbackendconnectionssubscribe connection gt connectionmockrespond response really verbose especially beginner friendly also easy several mocked requests test test url http verb missing something plan something like make kind test easier single class inject would great utility method like etc cc juliemr jeffbcross", "num": "5575", "d": "12/2015"}, {"title": "enums plurals", "body": "would make sense plurals looks bit weird would better imho enums code base singular example agree change submit pr", "num": "5574", "d": "12/2015"}, {"title": "bug event afterviewchecked fired many times", "body": "version previous versions event afterviewchecked fired time changes model versions event fired twice short example typescript import bootstrap component afterviewchecked component selector myapp template class appcomponent implements afterviewchecked afterviewchecked consolelog view checked bootstrap appcomponent load application click button wait seconds click another time console output version predictable next version console output actions see event afterviewchecked fired twice timeout situation try use socketio application event fired twice callback problem officially ttl event must fired one time user event want manipulate domelements changes change scroll position want one time changes", "num": "5572", "d": "12/2015"}, {"title": "html parser issues", "body": "migration alpha issues html parser couple tags like add find", "num": "5571", "d": "12/2015"}, {"title": "testing inject could better name solves async problem also", "body": "deprecated got lot tests looks like describe raceservice gt let service beforeeachproviders gt raceservice beforeeach inject raceservice raceservice gt service raceservice return promise races inject gt servicelist races gt expect raceslength tobe works great feels awkward test use method called test needs something injected sure asynchronism correctly handled maybe decoupled another function another name cc juliemr wardbell", "num": "5570", "d": "12/2015"}, {"title": "dynamically added ckeditors inside ngfor loop break", "body": "issue dynamically added ckeditors rendred via sure issue maybe related ckeditor live demo available open link see three ckeditors right work correctly click add button bottom add new editor result editor works editor works editor nt work throws exception action editor works add another editor editor works editor works editor nt work throws exception action editor nt work throws exception action editor works typescript directive selector textarea class ckeditor constructor elm elementref ckeditorreplace elmnativeelement component selector myapp view directives ngfor ckeditor template class appcomponent items seems like somehow manipulates last element breaks ckeditor issue angular also tried using instead result first spotted issue using ckeditor component created using thought related demo behaves exactly", "num": "5569", "d": "12/2015"}, {"title": "controlgroup ca nt set pristine", "body": "controlgroup marked dirty ca nt mark pristine anymore method nt expect parameter used set dirty also property seems getter setter short dirty ca nt set pristine", "num": "5568", "d": "12/2015"}, {"title": "pass components properties", "body": "react usefull mechanism allow pass type view element inside another element even powerfull composition much helps build reusable view libraries achieve behaviour angular working code examples would pleased", "num": "5566", "d": "12/2015"}, {"title": "external typings referenced anymore", "body": "probably design typing zonejs referenced anymore easily get around installing typings seems issues missing zonejs referencing installed conflict", "num": "5565", "d": "12/2015"}, {"title": "error messages descriptive", "body": "multiple occasions seen messages giving clue reason error got runtime message exception error trying diff object object null go figure googling found three cases similar messages angular test classes one executable code something collections example error trying diff collection got error app processing collection clear original error message case error message include word collection one case error handling angular clearly room improvement", "num": "5564", "d": "12/2015"}, {"title": "decide whether allow custom selfclosing elements", "body": "need discuss decide whether angular allow custom void elements nt permitted html specification cc vicb tbosch", "num": "5563", "d": "12/2015"}, {"title": "declare peer dependencies peer dependencies", "body": "packagejson lists many peer dependencies dependencies reflected peer dependencies reflectmetadata rxjs zonejs make sure duplicates nt end bundles make sure angular sharing instances modules particularly important rxjs importing operators side effect monkeypatching imported", "num": "5560", "d": "12/2015"}, {"title": "apis agree reflectioncapabilities amp noreflectioncapabilities", "body": "specifically takes incorrectly typed parameters takes parameters vs", "num": "5559", "d": "12/2015"}, {"title": "fix rxjs license addition script license included", "body": "right pr including apache license exact license used blocked", "num": "5558", "d": "12/2015"}, {"title": "feat router implement link dsl", "body": "following routerlink accept something like nonexhaustive list dsl corresponding angular expression link transformed incorrect uses dsl throw always comes two slashes row allowed allowed beginning link update needed", "num": "5557", "d": "12/2015"}, {"title": "template parser error unknown entity", "body": "since upgrading alpha longer able load app using identical html suddenly greeted html element deemed offensive follows submit plunker nt think update version fast", "num": "5553", "d": "12/2015"}, {"title": "lifecycle hooks change appear breaking changes", "body": "use etc etc required changed think appear breaking changes cheers", "num": "5551", "d": "12/2015"}, {"title": "html parser lt allowed text node", "body": "past could anymore raises issue makes think need lot conditionals check plunker put works", "num": "5550", "d": "12/2015"}, {"title": "available bundle", "body": "tried alpha seems like available sure load loading", "num": "5549", "d": "12/2015"}, {"title": "incorrect namespace applied binding xlink href attribute svg use elements", "body": "attempting bind values attribute element contained inside element like work either alpha alpha svg image displayed see following plunk illustrates problem looks like attribute missing correct namespace binding executing following statement chrome developer console targeting element fixes problem", "num": "5548", "d": "12/2015"}, {"title": "svg components nt work", "body": "created plunkers demonstrate several issues first selectors nt work correctly components use selector nt match anymore class selector matches correctly fixed second selector nt work data binding defined error message invalidcharactererror parser tries instantiate element find unknown property fixed third even everything setup correctly component instantiated actual child component svg nt rendered tested firefox chrome edge black circle covering red circle plunker dom would nt render fixed prefix template", "num": "5547", "d": "12/2015"}, {"title": "consider adding html entities", "body": "picked immediately stumbled en exception unknown entity top link search contained entity consider adding least entities list", "num": "5546", "d": "12/2015"}, {"title": "implement sideeffect free frompromise topromise observablewrapper", "body": "pending resolution reactivexrxjs makes possible want support existing logic provided without making available prototype currently way import individual operator rxjs without automatically monkeypatching prototype could lead users depending angular version containing methods would make sad someday remove reason want remove facade operators used internally forms core needs shed bytes", "num": "5542", "d": "12/2015"}, {"title": "produced dom contains closing tags", "body": "check plunker color names show next radio buttons still dom nt display apparent reason wrapping color names enclosing tag generates generate closing tag believe require closing tag looks like bug introduced custom html parser reported wardbell", "num": "5541", "d": "12/2015"}, {"title": "div tags inside p tags alpha fails parser invalid html fair", "body": "looks like view parser much stricter think behavior correct intentional view parser failing encounters div tags nested inside p tags fair divs inside p tags valid html perhaps error message clear though including something like fail view rendering error exception template parse errors unexpected closing tag p error exception typeerror read property ngcontentselectors undefinedbrowserdomadapterlogerror anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush stacktrace browserdomadapterlogerror anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush typeerror read property ngcontentselectors undefined", "num": "5540", "d": "12/2015"}, {"title": "update typings entry point npm packagejson", "body": "alexeagle suggested point instead side effect would thing", "num": "5539", "d": "12/2015"}, {"title": "angular directives properly modify polymer local dom", "body": "trying use polymer elements within angular components one issues ran polymer elements aware dom modifications performed angular directives plunk demos issue please read text demo page explains sample app expected work afaiu happens angular directives modify dom using browser api directly polymer requires local dom modifications done using dom api quick investigation impression right way fix create custom extending use api local dom modifications realize angular polymer integration nt top priority task angular team right wink could advise right way make work together status integration polymer already looking radar moment", "num": "5531", "d": "12/2015"}, {"title": "missing gulp tasks generating documentation", "body": "tasks building documentation seem missing running fails search gulpfilejs shows tasks cleaning documentation none generating", "num": "5530", "d": "12/2015"}, {"title": "rename querylist something mentioning query", "body": "since query annotation deprecated odd type contentchildren viewchildren querylist good name contain imperative verbs like query search find etc", "num": "5529", "d": "12/2015"}, {"title": "html parser text nodes close void tags", "body": "br closed", "num": "5528", "d": "12/2015"}, {"title": "nginvalid class added required set false null", "body": "binding required dom property input element nginvalid class always added xrequired xclassname yrequired yclassname", "num": "5527", "d": "12/2015"}, {"title": "router navigate page refresh", "body": "hi came across weird behaviour router navigation child routers parent router child router use router navigation api navigation seems working neither refresh page work refresh child even instanciate child router child router redirect seems working router link possible occuring since url match pattern anyone confirm best regards tbragaf", "num": "5526", "d": "12/2015"}, {"title": "feat add support withcredentials flag", "body": "flag object important allow sending cookies cors scenario nt seem supported currently reference angular codebase regarding implementation", "num": "5525", "d": "12/2015"}, {"title": "form component ca nt see ngcontrol inside child component", "body": "nt know issue confused supposed work within compared summary current scenario container component form secondary component input field container component control group would like assign input field inside secondary component control group container component code control new control control new control containerform controlgroup new controlgroup based secondary component included containerform secondary component code html secondary component secondary component code ts get component start talking control group container", "num": "5524", "d": "12/2015"}, {"title": "access template variable level parents", "body": "doc said access newhero variable sibling child element actually access newhero level parents sure bug code", "num": "5523", "d": "12/2015"}, {"title": "angular execute amazon kindle experimental browser", "body": "previously written webapp angular runs kindle experimental browser curious see angular would also run answer time calling bootstrap component never initialized since debugging capability browser impossible say causing issue thought file issue case anyone else curious fully selfcontained angular app tested based min quickstart desktop browser see component rendered debugging appcomponent instantiated message div block however amazon kindle experimental browser see message bootstrapping tested current previous generation amazon kindle paperwhite latest firmware user agent u linux like android enus khtml like gecko note shim files necessary test even print bootstrapping code anyone ideas polyfillsshims might address issue", "num": "5521", "d": "12/2015"}, {"body": "drbrooklyn impossible say without repro make plnkr", "d": "12/2015"}, {"body": "hi ca nt make plunker dont found meteor plunker give live demo sources link sources appts import component view import bootstrap import formdirectives ngif formbuilder controlgroup validators abstractcontrol import meteorcomponent bootstrap function control return new promise resolve gt settimeout gt resolve null component selector myapp view template class myapp extends meteorcomponent formgroup bootstrap myapp indexhtml thank", "d": "12/2015"}, {"body": "already asked stackoverflow github issues bugs feature requests think gitter angular google groups better place question", "d": "12/2015"}, {"body": "thanks go", "d": "12/2015"}, {"body": "press clear", "d": "12/2015"}, {"body": "guess sure mean say press clear regular buttoninput type reset without angular annotationsdirectives thu dec g\u00fcnter z\u00f6chbauer notifications githubcom wrote press clear reply email directly view github", "d": "12/2015"}, {"body": "see nt think still looking way reset angular form", "d": "12/2015"}, {"body": "try follow examples given angularjs form documentation see make deep copies models involved allow actual reset form especially form empty begin hth", "d": "12/2015"}, {"body": "using angular beta sure similar code base thu dec pm fr notifications githubcom wrote try follow examples given angularjs form documentation see make deep copies models involved allow actual reset form especially form empty begin hth reply email directly view github", "d": "12/2015"}, {"body": "fix", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "template contain tag nt know well works root component think remember open issue basically done", "d": "12/2015"}, {"body": "give reference please think", "d": "12/2015"}, {"body": "selector random use instead include component template example notice weird issue nt work space works", "d": "12/2015"}, {"body": "sasxa using body body go away replace page display plank page think searching possible angular", "d": "12/2015"}, {"body": "sasxa actualy nt work leaving space ngcontent throws error means never completely compiles case anything browser rendering html see dom pure html", "d": "12/2015"}, {"body": "nt think going supported angular primarily designed singlepage application framework intent angular control content inside root app element said look project enables prerendering angular apps server side", "d": "12/2015"}, {"body": "angular angular spaangular", "d": "12/2015"}, {"body": "perhaps could explain use case exactly root component template thus would replaced application boots theory might enable would unlikely functionality available way question prerendering content universal designed handle case", "d": "12/2015"}, {"body": "yes want severside rendered page aspnet mvc try universal think add multi root components indexhtml thay solve many issues least opinion angular suitable web angular suitable mobile spa think single page aplication different web application", "d": "12/2015"}, {"body": "watch demos experimental asp universal setup", "d": "12/2015"}, {"body": "sachingk first issue deep link route using routerlink second issue looks like bug one slash front", "d": "12/2015"}, {"body": "pr second issue", "d": "12/2015"}, {"body": "created pr", "d": "12/2015"}, {"body": "could nt get enableprodmode work dart either", "d": "12/2015"}, {"body": "already defining route root component like note three dots route path subroute component define routeconfig like normally", "d": "12/2015"}, {"body": "yes supported beta sample root routeconfig new route path component name data project new route path demo component demopage name demo inside demopage routeconfig new route path spreadsheet component spreadsheet name spreadsheet new route path jquery component jqueryintegration name jqueryintegration info also live demo nested routing described", "d": "12/2015"}, {"body": "thelgevold none links showed example navigate link programatically eg submission form api even exist huge omission", "d": "12/2015"}, {"body": "yes navigate directly route programatically assumes instance router class somecomponent", "d": "12/2015"}, {"body": "also", "d": "12/2015"}, {"body": "router require separate path name every route react router recently dropped favor path dont see use case separate path name per route", "d": "12/2015"}, {"body": "mbordogna using ngroute currently ngrouteshim optional", "d": "12/2015"}, {"body": "using component router actual app looks like angular module app angular modules ngcomponentrouter ngrouteshim ngmaterial angular rtm rc bower dependencies angular angularresource angularmessages angularsanitize angularanimate angulararia angularmaterial npm angularrouter wed dec pm brandon notifications githubcom wrote mbordogna using ngroute currently ngrouteshim optional reply email directly view github", "d": "12/2015"}, {"body": "mbordogna ok nt need route shim unless using component router existing ngroute configuration", "d": "12/2015"}, {"body": "forgot mention works n chrome safari firefox timing issue sure move run implementation earlier load process correct issue also without shim issue observed prints error console instead breaking line wed dec pm brandon notifications githubcom wrote mbordogna using ngroute currently ngrouteshim optional reply email directly view github", "d": "12/2015"}, {"body": "crossed streams last email nt see reply sent issue ngcomponentrouter shim thought shim fix error get looking wrong place fix error ng component router support reconfigure plunker get issue without shim wed dec pm brandon notifications githubcom wrote mbordogna ok nt need route shim unless using component router existing ngroute configuration reply email directly view github", "d": "12/2015"}, {"body": "edit link clean component example isolates issue believe using angular issue code base using may may much difference since error either way btw thanks quick reply help beating head hours nothing else stopping shim rabbit hole much appreciated mike wed dec pm brandon notifications githubcom wrote mbordogna ok nt need route shim unless using component router existing ngroute configuration reply email directly view github", "d": "12/2015"}, {"body": "add script tags", "d": "12/2015"}, {"body": "brandon thanks bunch glad something simple wed dec pm brandon notifications githubcom wrote add script tags reply email directly view github", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "nice thanks sharing", "d": "12/2015"}, {"body": "sure glad help frustrated lack demos decided create one regards sean", "d": "12/2015"}, {"body": "correct import rxjssubject rxjsobservable nt bundled subject base eventemitter afaik makes ends eventbus workers right", "d": "12/2015"}, {"body": "tried", "d": "12/2015"}, {"body": "yes way selector ctr export class testcontainercomponent viewchild inner inner ngafterviewinit consolelog inner thisinner way selector ctr class testcontainercomponent contentchild inner inner ngaftercontentinit consolelog inner thisinner returns output", "d": "12/2015"}, {"body": "bennylut wrong p first string selector must variable name ca nt say sure nt work css selectors must content passed ngcontent ngcontent check code example plnkr component selector mycmp template class mycmp contentchild somediv somediv lt lt lt variable constructor ngaftercontentinit consolelog thissomediv component selector myapp template directives mycmp export class app", "d": "12/2015"}, {"body": "see conflicting behavior ngcontent select contentchild thought processed way way get content passed containercomponent content defined type ie component", "d": "12/2015"}, {"body": "bennylut actually different could inject access children using question nt explain actually try accomplish", "d": "12/2015"}, {"body": "zoechi according docs used last resort touches dom directly requires direct coupling rendering layer source bennylut right safe way access transform components contents without adding additional read unnecessary complexity technical reason facade nt provided allows access component", "d": "12/2015"}, {"body": "evanplaice aware wants access dom manipulate direct dom access anyway guess use well think clear original question", "d": "12/2015"}, {"body": "zoechi seems pretty clear whether takes place child bennylut attempting select log inner text passes contents component template afaik provides facility access contents", "d": "12/2015"}, {"body": "evanplaice really doubt bennylut actually wants log html xd", "d": "12/2015"}, {"body": "see test variable refers field component class since field defined getting passed method one fix know use viewchild annotation actually declare test field plunker link", "d": "12/2015"}, {"body": "see test variable focusinput test refers field test component class since field defined getting undefined passed focusinput method think must bug use instead everything works fine", "d": "12/2015"}, {"body": "nt know razor view maybe looking github issues bugs feature requests questions please use channels like stackoverflow google groups gitter", "d": "12/2015"}, {"body": "zoechi create plunker mind nt know scenario support think good feature thank time", "d": "12/2015"}, {"body": "adamchenwei repo website besides pretty sure working", "d": "12/2015"}, {"body": "ericmartinezr ah thought post issue shall repost issue move thanks info btw", "d": "12/2015"}, {"body": "imho would easy enough create appropriate validate method using discrete form control properties call appropriate point user interaction undesirable dynamic validation may applications generic validate method would require application specific configuration would probably confusing little code", "d": "12/2015"}, {"body": "bothering solved adding flag form components set true form submitted error styles may applied think much sensible default would consider empty untouched fields valid form validated", "d": "12/2015"}, {"body": "appears none methods ngmodel implemented implementation methods still appropriate would solve reset requirement", "d": "12/2015"}, {"body": "dups", "d": "12/2015"}, {"body": "posted repository", "d": "12/2015"}, {"body": "wesleycho bug caused source code repository upgradejs angular code piece error due statement mentioned repo checking windowhasownproperty angular", "d": "12/2015"}, {"body": "vote nothing changed means nothing changed visually", "d": "12/2015"}, {"body": "igorminar mhevery wardbell", "d": "12/2015"}, {"body": "first question make code work realize offthecuff example ca nt see good reason enable sort thing rather throw error point towards documentation section explaining change detection trigger side effects probably bad idea would preferable assign filtered list property nothing changed means nothing changed visually seems solve problem annoying error messages dev would seem allow lessperformant code actually ship production get missed misunderstanding maybe dev mode nothing changed means nothing changed visually strict mode devmode today throw errors help optimize app preproduction", "d": "12/2015"}, {"body": "even nothing change visually could side effects xhrs actually happened past visually kind arbitrary line sand mon dec pm rob wormald notifications githubcom wrote first question make code work realize offthecuff example ca nt see good reason enable sort thing rather throw error point towards documentation section explaining change detection trigger side effects probably bad idea would preferable assign filtered list property nothing changed means nothing changed visually seems solve problem annoying error messages dev would seem allow lessperformant code actually ship production get missed misunderstanding maybe dev mode nothing changed means nothing changed visually strict mode devmode today throw errors help optimize app preproduction reply email directly view github", "d": "12/2015"}, {"body": "mhevery clear side effects xhrs bad thing yes", "d": "12/2015"}, {"body": "correct mon dec pm rob wormald notifications githubcom wrote mhevery clear side effects xhrs bad thing yes reply email directly view github", "d": "12/2015"}, {"body": "might related issue feeling something change detection know nothing", "d": "12/2015"}, {"body": "suggestion mentioned fixed issue looks like systemjs needs included first", "d": "12/2015"}, {"body": "right already tracking issue actually zonejs contained within making app working closing duplicate", "d": "12/2015"}, {"body": "add api calls back constructor gets information view still update interact page", "d": "12/2015"}, {"body": "try suggestion mentioned", "d": "12/2015"}, {"body": "fixed issue hopefully nt cause others though", "d": "12/2015"}, {"body": "might bug event bubbling issue form return false functions works expected use button outside form tags works expected also", "d": "12/2015"}, {"body": "hey brandon great find thanks looking nt think form behavior also fixed simply giving buttons omit type become browser default think see browsers default submit behavior also appending char url browser exactly forms without even angular nt used leads us question fall back browsers default submit behavior particular case others instance add form click nothing happens would actually expected form get submitted like regular form case also add click nothing happens angular seems prevent default browser submit action even cases would expect get prevented ironically lets happen case invoke action calls", "d": "12/2015"}, {"body": "good explanation christoph also thought default behavior prevent default action long nontruthy value returned function made think form unexpected consistent across forms though", "d": "12/2015"}, {"body": "please use stackoverflow gitter slack channels google groups questions issues bug reports feature requests", "d": "12/2015"}, {"body": "guess question given material component supported answer dates set hear progress material design components angular video starting minute seconds", "d": "12/2015"}, {"body": "update code add listener angular pick updated plunkr showing", "d": "12/2015"}, {"body": "use hook accomplish", "d": "12/2015"}, {"body": "ah thanks", "d": "12/2015"}, {"body": "running naming conflict angular directive ngmodel renamed input param works nt need form directives", "d": "12/2015"}, {"body": "ah see impression one could utilize similar fashion angular ie specifying directive definition seems though mistaken thanks much response", "d": "12/2015"}, {"body": "use angular", "d": "12/2015"}, {"body": "gregmd problem bind certain view elements component controller use view controller data flow others like case changing drop calling method navigate away current state come back drop show say third item selected state controller view parts bound controller initial state behavior confuses little developing everything initial state view controller synchronized runtime", "d": "12/2015"}, {"body": "understood use angular return default state angular save component state background could also try canreuse interface", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "gregmd tried use canreuse returning false nt help check boxes text fields select elements retain values interesting thing canreuse onreuse called second state click second state link even values input element survive router navigation", "d": "12/2015"}, {"body": "components instantiated routing need pass directives remove directives property try", "d": "12/2015"}, {"body": "ericmartinezr tried problem removed also sample", "d": "12/2015"}, {"body": "see repo reproduce", "d": "12/2015"}, {"body": "sorry problem fake delay using settimeout included", "d": "12/2015"}, {"body": "related specifically", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "yup agreed", "d": "12/2015"}, {"body": "agreed bit harder seems must possible send cased headers interfaces require makes tempting solution downcase keys unworkable imo headers behave like set header foo set header foo former replaced set header foo append header foo values appended appended foo set header foo delete foo foo deleted set header foo get header foo values foo returned way setting cased headers possible still confirming spec", "d": "12/2015"}, {"body": "two scenarios cover retrieving headers responses setting headers requests first relatively straightforward fetch specification appears lowercase works fine retrieval simple lowercase key used eg headersget foo foo request headers appears fetch spec chrome firefox implement natively always lowercase key would make sense per http spec original post nt work must possible send cased headers interfaces require nt think possible native implementation fetch would seemingly violate originally quoted spec well imo would bad idea deviate spec behavior cc jeffbcross thoughts", "d": "12/2015"}, {"body": "ok realized headers exposed automatically making cors request angular issue", "d": "12/2015"}, {"body": "varadero comment line works fine need system polyfills", "d": "12/2015"}, {"body": "brandonroberts think systempolyfillsjs needed page loaded least makes additional request systemjs writes additional script tag document systempolyfillsjs served throws exception system undefined happens simple indexhtml angular import systemjs systempolyfillsjs requested indicates polyfill systempolyfillsjs actually breaks logic angular router ps removing line loads systempolyfillsjs fixes problem firefox chrome still exists", "d": "12/2015"}, {"body": "varadero may issue order scripts move typescript script tag see helps", "d": "12/2015"}, {"body": "brandonroberts moving systemjs script tag trick thank brandon following angular quick start angularpolyfillsjs script tab first place maybe moved systemjs script tag order overcome problem surprisingly problems original plunker", "d": "12/2015"}, {"body": "separate issues plunker imports alright verify putting log statement imports print imported values suspect due cycles imports nt dig expose services directives used component template need use instead suspect might broken code examples somewhere sure add proper documentation working plunker showing believe wanted achieve", "d": "12/2015"}, {"body": "believe actionable item documentation update", "d": "12/2015"}, {"body": "tl dr browser nt accept fails silently info simple experiment browser chrome executing code printing content variable shows desired style set conclude behavior coming browser angular sure best action could try truncate trailing style expressions renderer suspect characters might triggers similar failures different browsers could try parse throw invalid expressions sure worth", "d": "12/2015"}, {"body": "valid html component nt make sense nt want support invalid html selectors hence current behaviour error message correct closing works expected", "d": "12/2015"}, {"body": "valid html component nt make sense definitely talking angular tries create invalid using valid selector component selector pkozlowskiopensource called hood tries instantiate component dynamically ca nt return instead eg using flag returned mean restricted non void elements maybe custom non void elements noted documentation", "d": "12/2015"}, {"body": "provided commonjs module set tsconfigjson order activate relative paths feature jspm typescript set property typescript plugin", "d": "12/2015"}, {"body": "seems like even module commonjs option place issue still exists bundling systemjsbuilder", "d": "12/2015"}, {"body": "using systemjsbuilder moduleid property set location name bundled file due relative assets assumed directory bundle option either set component property manually right directory build step copy assets directory bundle", "d": "12/2015"}, {"body": "would make sense seeing runtime errors module undefined might something configured wrong nt know would though strip moduleid moduleid component definitions everything runs fine config build command", "d": "12/2015"}, {"body": "see one thing notice config using deprecated internal transpiler systemjs use plugin see configuration using plugin repository", "d": "12/2015"}, {"body": "frederikschubert great idea nt realize transpile option date know point ts mapping folder nodemodules pulled library npm quite sure js file map updated config", "d": "12/2015"}, {"body": "uwouldllose enclosing source blocks triple backticks inline code single backticks make comments readable", "d": "12/2015"}, {"body": "could enclose tag using ngif person department ngif department template get behaviour seeking eg personname etc etc basically would show person name till object name available null could better way achieving behaviour sticked moment works fine", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "planning add mechanism tags templates also plans supporting tags embed templates code used urls instead w planning precompiler buildtime templates precompiler would convert html javascript bundled minified app", "d": "12/2015"}, {"body": "use case would nt want specify template time add component somewhere", "d": "12/2015"}, {"body": "retrospect think ngcontent fills gap closing", "d": "12/2015"}, {"body": "plunker", "d": "12/2015"}, {"body": "modify style component create bindings host style properties element host styledisplay hostdisplay stylebackground hostbackground stylepadding hostpadding class elementa hostdisplay block hostbackground fff hostpadding see plunk", "d": "12/2015"}, {"body": "alexpods yes property useful specific fixed styles want want handle style object thanks", "d": "12/2015"}, {"body": "use ngstyle", "d": "12/2015"}, {"body": "ngstyle nt work good adding dynamically loaded components fri dec aleksey podskrebyshev lt notifications githubcom wrote use ngstyle reply email directly view github", "d": "12/2015"}, {"body": "alexpods ngstyle handle component style", "d": "12/2015"}, {"body": "sounds like problem probably posted reproduction", "d": "12/2015"}, {"body": "probably belong might need give information reproduction preferrably reproduction help though", "d": "12/2015"}, {"body": "ahh yes sorry", "d": "12/2015"}, {"body": "nt investigate plunker closely afaik nt need set value fire event instead", "d": "12/2015"}, {"body": "yes right updated plunk otoh nothing issue unfortunately", "d": "12/2015"}, {"body": "would need polyffil raf couple apis polyffil see minimal list cc wardbell documentation part", "d": "12/2015"}, {"body": "support needs polyfills claim support btw also nt work android stock browser", "d": "12/2015"}, {"body": "thany opinion better support polyfill lot people nt need support angular bundle nt useless code modern browsers", "d": "12/2015"}, {"body": "true things like clearly noted browser support section example could use colours indicate support red support yellow support polyfills green full support something anyway npm module include packagejson one referenced looks like meant testing purposes nt look like published npm like keep things way quickstart tought use packages via npm", "d": "12/2015"}, {"body": "speaking documentation wardbell halfway quickstart tuorial matter end billion files unminified needs tidied production present coworkers keep straight face subject distribution minified absolutely huge reason depends external library rxjs huge also weird since never needed anything basic use", "d": "12/2015"}, {"body": "would unwise think show quick start docs represents performancetuned app facilities formulas getting skinny per specific needs app entirely inappropriate learning platform strive rather reduce friction free experience angular course need provide guidance advanced scenarios say half way docs hope like half high hopes great guidance community", "d": "12/2015"}, {"body": "reason depends external library rxjs huge also weird since never needed anything basic use fwiw complete rxjs roughly unminified bring default users opt operators rxjs provides", "d": "12/2015"}, {"body": "plunker moment temporary", "d": "12/2015"}, {"body": "oh really thank used one site site use plnkrco maybe used plnkrco jsbincom jsfiddlenet codepenio plunker used ca nt something", "d": "12/2015"}, {"body": "plunkr one multiple javascript file support", "d": "12/2015"}, {"body": "sounds like temporary pb plunker", "d": "12/2015"}, {"body": "use similar", "d": "12/2015"}, {"body": "ca nt typescript file expect work systemjs loader got typescript compiler configured output code using format afaik ts compiler wo nt touch means transpiled file going call without anyone handle got different ways handle external dependency stick systemjs use systemjs loader actually load modules different formats use commonjs based bundlers webpack browerify similar going close one question module loading angular", "d": "12/2015"}, {"body": "indeed nicer unfortunately ca nt emit metadata functions lack typescript support", "d": "12/2015"}, {"body": "think tutorial wrong maybe forgotten finished yet subsequent sections missing well order fix bug need declare promise return hero using generics ps sure ts compiler able derive proper type return wo", "d": "12/2015"}, {"body": "interesting consistently reproduce chrome devtools open os x appear fixed chrome canary though canary devtools feels responsive canary generally confirm end spooky bug though nice reproduction general advice sort thing holding key nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn gon na thrash whatever run devtools crashes work might want consider leveraging observable throttle output firing ridiculous rate typescript import observable rxjsobservable import rxjsaddobservablefromevent import rxjsaddoperatorthrottletime let editor codemirrorfromtextarea thisfieldnativeelement wrap observable let changes observablefromevent editor changes throttle pipe event emitter roughly changesthrottletime subscribe modelchanges assume proper app standalone component could wrap stuff nicely", "d": "12/2015"}, {"body": "demo", "d": "12/2015"}, {"body": "thank much response tip guess suggest implementing directly codemirror canary seem available linux confirm reproduce chrome dev actually ok even beta however reproduce chrome version failing chromium well sure means unfortunately failed find betadev releases chromium opensuse report back soon notice update", "d": "12/2015"}, {"body": "use typescript easily switch enum values int strings", "d": "12/2015"}, {"body": "dart typescript version also contains defect", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "fixed say looks little magical compared every import", "d": "12/2015"}, {"body": "kiswa attribute therefore add work", "d": "12/2015"}, {"body": "well nt feel like idiot works thanks ericmartinezr necessary", "d": "12/2015"}, {"body": "case anyone else comes across issue found helpful", "d": "12/2015"}, {"body": "parser chirping valid closing tag notice tag closed parser looking closing encounters instead ditto next error proceeded unclosed sure leniency switch html", "d": "12/2015"}, {"body": "ugh went fixed every slash end bracket clear fully formed elements one tag stopped throwing error started working hey kids make sure svg html perfectly formed hoping say anybody course said alpha nt freaked oversights google material design lite template examples cough beta unhappy", "d": "12/2015"}, {"body": "also initially quite surprised see suddenly become picky working lot code angular come much appreciate think overall results terms delivering highquality software timely way etc much improved toolset emits errors mistakes rather letting slide one side effect angular send people want write invalid html templates looking elsewhere could win actually nt mind teaching classes teach lot importance writing correct code", "d": "12/2015"}, {"body": "apologies accidentally saved beta plunk altered elements closing slash appeared fixed rolled back earlier version without frozen", "d": "12/2015"}, {"body": "johnmunsch couple images second plunker appears work fine perhaps misunderstanding directions also would mind fixing title issue currently reads new", "d": "12/2015"}, {"body": "might better asked stack overflow within slack google group chat room issues really things confirmed satisfaction actually issues software", "d": "12/2015"}, {"body": "case steps use packagejson instead one quickstart page", "d": "12/2015"}, {"body": "expectation would external event would trigger markforcheck like promise resolving button click calling markforcheck inside afterviewcheck would effectively send change detector infinite loop work use case", "d": "12/2015"}, {"body": "cases yes however case router please check issue especially comments solution mentioned router issue works fine onpush change detection strategy requires additional setup child components nt know parent component passed new value plunker sleeping post practical example", "d": "12/2015"}, {"body": "robwormald line", "d": "12/2015"}, {"body": "new hostlistener idea quick poc sure exactly going lets click anywhere component trigger focus textarea import component elementref import hostlistener component selector myapp template testing export class appcomponent", "d": "12/2015"}, {"body": "thelgevold right works however wondering normally would something like parent host thought seems logical way template passing hostlistener dart code typescript code similar guess normally trying avoid use maybe solution", "d": "12/2015"}, {"body": "yeah agree proposed syntax elegant", "d": "12/2015"}, {"body": "please edit comment wrap code triplebackticks make readable", "d": "12/2015"}, {"body": "assume gethereos going return observable caller subscribe going make http call happen", "d": "12/2015"}, {"body": "seems work component access data like demo write routedata console loading page", "d": "12/2015"}, {"body": "different cloned projects get open issues projects indeed several times repo emitdecoratormetadata used without experimentaldecorators could point specific examples", "d": "12/2015"}, {"body": "snippset newscomponent export class newscomponent implements onactivate", "d": "12/2015"}, {"body": "fixed would belong", "d": "12/2015"}, {"body": "reflectmetadata zone actually bundled polyfills file probably including page already also declared dependencies would prefer include directly upstream sources promise shim needed older browsers understand correctly would guess beta proceeds end chart somewhere showing polyfills needed versions browsers", "d": "12/2015"}, {"body": "reflectmetadata zonejs included nt needed peerdependencies depends rxjs think depended", "d": "12/2015"}, {"body": "tbosch", "d": "12/2015"}, {"body": "seeing even tutorials typescript still written probably matter waiting contributing", "d": "12/2015"}, {"body": "would nice author wrote type script make javascript parallel since basically go sort compiler typescript lol", "d": "12/2015"}, {"body": "jsversion quick start online", "d": "12/2015"}, {"body": "pkozlowskiopensource would kindly read topic quick start tutorial section available thank available javascript", "d": "12/2015"}, {"body": "see already pr method curious solves problem afraid wo nt", "d": "12/2015"}, {"body": "ribizli works us applying patch build since always solves problem us post patch using soon get office", "d": "12/2015"}, {"body": "usually apply patch build following command", "d": "12/2015"}, {"body": "thanks ciriarte currently using bundles patching easy anyway proof bug method ps still clear logic loop", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "eschultz override restrict work component helper set e default", "d": "12/2015"}, {"body": "thanks overlooked able", "d": "12/2015"}, {"body": "problem using ngforward component decorator defaults restrict e currently way override", "d": "12/2015"}, {"body": "use directive decorator want use component router ngforward", "d": "12/2015"}, {"body": "zoechi thanks noticing fixed kebabcasemd changelog", "d": "12/2015"}, {"body": "needs reproduction guess happening likely invalid file input since browser allows read write input", "d": "12/2015"}, {"body": "also probably wrong way go unless crazyspecific use case better use something like", "d": "12/2015"}, {"body": "wesleycho atm waiting change call codesnippet robwormald okay thanks", "d": "12/2015"}, {"body": "cc know added universal input", "d": "12/2015"}, {"body": "yeah fix idea behind able recreate client typescript var serverheaders new headers serverheadersappend contenttype imagejpeg var serialized jsonstringify serverheaders null consolelog serialized var clientheaders new headers jsonparse serialized", "d": "12/2015"}, {"body": "needs changed camel case", "d": "12/2015"}, {"body": "stupid aware change missed time nt change thanks look", "d": "12/2015"}, {"body": "phsstory repo want", "d": "12/2015"}, {"body": "using webpack nt use umd bundles really usage", "d": "12/2015"}, {"body": "common practice skip babel transpilation directory much easier contains router http also even necessary use transpilation webpack mention browserify written style file would use webpack besides still bug umd module", "d": "12/2015"}, {"body": "source files nodemodules commonjs nt need retranspiled webpack pick right bug specific module rewrite build rely globally loaded version rx attaches rather importing modular version", "d": "12/2015"}, {"body": "yes im retranspiling umd file compatible commonjs liked umd files compatible sides seems file compatible global window objects rx exported global windowrx umd unnecessary dont see purpose file right modular version one put behind", "d": "12/2015"}, {"body": "using webpack use files root npm package let webpack bundle files users include script tag nt use modules", "d": "12/2015"}, {"body": "umd inside script tag lets look jquery example exports window windowjquery u use umd package dont call require jquery even name jquery lower case letters two names dont identical would nice require rx lowercase use rx getting global object thats problem dont wan na bundle used libraries webpack wan na use common skip transpilation nodemodules considered good practice also users even use might blind dont see indexjs root directory single entry point use", "d": "12/2015"}, {"body": "per tutorials two primary entry points main reason use umd file require syntax multiple entry points retranspiling files already transpiled commonjs using modules use webpack bundle", "d": "12/2015"}, {"body": "think misunderstand completely works replace lower case much much much easier use single entry point nodemodules bundling client see point multiple entry points good usable server side client side client side bundling best solution use single entry point comes problem commonjs incompatible umd module format modules lower case use shim transform upper case lower case everyone shall reopen feature request rather bug open use cases outside", "d": "12/2015"}, {"body": "client side bundling best solution use single entry point comes problem commonjs incompatible umd module format disagree specifically provide single file build case multiplatform various entry points single entry point unnecessarily brings code may needed platforms may break platforms designed using unbundled source rxjs using webpack bundling tools opt use umd file also need include global version rxjs exports global need rename lowercase anything explicit source looks like transpiles rewrite nt rely external module statements using npm module named presumably think simply lower casing work using wrong module older version rxjs longer support", "d": "12/2015"}, {"body": "much clearer fooled renaming rxjs rx insanely confusing requires one line makes assume typo", "d": "12/2015"}, {"body": "requires mean rxjs", "d": "12/2015"}, {"body": "configured something worrycare purely internal detail files designed using global using modules dec so\u00f3s g\u00e1bor notifications githubcom wrote requires mean rxjs reply email directly view github", "d": "12/2015"}, {"body": "cool thanks help", "d": "12/2015"}, {"body": "question one asking need getter something calculated would infinitely preferable calculate set property changes happen rather change detection actually calculation", "d": "12/2015"}, {"body": "previous comments right computing value time change detection triggered said probably running code dev mode see enableprodmode meaning time change detection triggered two passes first pass actual change detection second pass verifies change detection side effect model changed cd reason see half cd runs prod mode still many already bug tracking see ultimately run cd prod mode thelgevold sure issues referring returning new string time problem issue arrays objects amp case second cd pass throws returning new string time would alter functionality efficient see previous comments", "d": "12/2015"}, {"body": "thelgevold seems give result robwormald vicb yeah know one recalculate value time change detection triggered curious many times triggered one returning primitive like string nt think mater using getter property point view change detection except extra function call ie vicb thanks explanation keep eye plans implementing onetime binding", "d": "12/2015"}, {"body": "tricky thing conflict headers example appended additive set replacement headers object expected behavior sort ambigious honestly love current api making override thing needs consideration either case", "d": "12/2015"}, {"body": "use case accessing api want able set default content type json append auth header via jwt wrapper still adding headers requests changing content type something else pr jwt library get match http api drop replacement would nice take step able compose wrappers together expect work within reason really going work without merging replacement individual header entries", "d": "12/2015"}, {"body": "see necessary implement track completely generic way wonder really best answer want live world people write javascript like functions sort semijavascript angular expression language inside strings inside html templates long run wonder angular developer community would best served making expression language weak possible", "d": "12/2015"}, {"body": "think standard way solving variation following thisfilteredobjs thisgetfilteredobjs", "d": "12/2015"}, {"body": "thelgevold would still take approach several things could cause result change eg whenever http call finishes underlying array objects gets updated would need recalculated whenever use types something search field function might filter different items watch dom events field update whenever one fired", "d": "12/2015"}, {"body": "probably since mutate array somewhere cases even original code getter called view probably amount work mutate directly vs reassigning", "d": "12/2015"}, {"body": "nice thing original code getter called view single source truth field generated state fields storing separately opens potential inconsistencies within component state anyway thanks feedback wanted make sure nt feature angular totally missing nt used pipes maybe try refactoring function pure pipe see solves change detection issue without loosing single source truth", "d": "12/2015"}, {"body": "actually ran issue days ago discussion might want check", "d": "12/2015"}, {"body": "thanks looks like still air angular handle keep eye issue linked", "d": "12/2015"}, {"body": "already reported", "d": "12/2015"}, {"body": "believe issue include following component decoration appears undefined get error using systemjs per quickstart dependencies packagejson json dependencies systemjs reflectmetadata rxjs zonejs devdependencies concurrently liteserver typescript", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "importing rx wrong import component import observable observer rxjsobservable import rx rxjsrx component selector testapp template export class test source observable", "d": "12/2015"}, {"body": "one thing quite peculiar element attributes note element allcapital expected lower case", "d": "12/2015"}, {"body": "angular version use chance share source code small repro case", "d": "12/2015"}, {"body": "version share application however try reduce problem see though elements seem affected", "d": "12/2015"}, {"body": "reduced code insofar reasonably exclude culprit create layout issue albeit ngonchanges method setting rotation attribute value width svg element somewhere", "d": "12/2015"}, {"body": "someone interested", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "get much mentioned related issues trying something equivalent ngapp angular root component without template transclude", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "describe depth since enough detail angular throw error instead handles way input output strips new line character actually interpolate", "d": "12/2015"}, {"body": "really bug could multiline expressions", "d": "12/2015"}, {"body": "pascalprecht opened pr fixing turns fix super simple probably supported although one probably avoid complex expressions template maintenancetestability reasons", "d": "12/2015"}, {"body": "element switches parser svg mode child svgelements nt need prefixed namespace prefix needed template starts middle svg like template root element case disambiguates svg element html component", "d": "12/2015"}, {"body": "tragetaschen perfectly right one thnx", "d": "12/2015"}, {"body": "okay thanks explaining nt way parser inherit state component subtree kind dislike idea need wrap component content single root element already host element single root element would lead additional unnecessary element given example javascript import component component selector graphic template export class graphic component selector app template directives graphic export class app would always lead following dom additional group element unnecessary purpose work around issue parse ca nt detect namespace automatically would nt nicer parser could know current namespace context parent component already", "d": "12/2015"}, {"body": "looks like happening matching attribute values fetches map never checks keys noted keys typically attribute name used key stored css selector one implementation fix likely store key map try getting attribute name relatively quicker fix another approach perhaps modify selector stored instead storing keys list may involve bit refactor fix behavior whatever solution gets chosen probably add consideration supporting various attribute selectors probably needs thought put best path forward", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "like", "d": "12/2015"}, {"body": "would nt say makes sense like proposal point wonder somehow collides existing imperative counterparts router apis", "d": "12/2015"}, {"body": "rethinking whole routing api definitely change nt details figured stay tuned sun dec pascal precht notifications githubcom wrote would nt say routeconfig makes sense like proposal point wonder somehow collides existing imperative counterparts router apis reply email directly view github", "d": "12/2015"}, {"body": "igorminar anywhere follow along apirethink", "d": "12/2015"}, {"body": "interested learning rewrite well may matter feature totally changing like name routeconfig routes since section routes also defines stuff around routes like component load instantiate components lazy loaded etc", "d": "12/2015"}, {"body": "thelgevold pointed make indeed sense", "d": "12/2015"}, {"body": "think alexpods good point nt know point though discussing naming good lord right since may change anyway goes opinion sounds configuring one route route vs routes technically speaking correct think something like actually holding array configurations configurating nothing passing array configurations component fact configuration made object", "d": "12/2015"}, {"body": "also interested information api rethink", "d": "12/2015"}, {"body": "discussion author arguments three imo important thing clear believe succeeds respect need freak new api currently gleem igor eye supplement existing link parameters array understand plan striving avoid big breaking changes see", "d": "12/2015"}, {"body": "fxck ewinslow thelgevold check still issues design need resolve think problems solvable design much better currently", "d": "12/2015"}, {"body": "hm interesting idea one thing prefer current design though components completely decoupled routes fact components knowledge part router configuration means component agnostic caller whether route template include unit test new design see specific routes given component injected component tightly coupled component implementation little bit circular dependency anyway initial reaction", "d": "12/2015"}, {"body": "igorminar version google doc looks nice lot clearer current implementation imo interested seeing changes router progress", "d": "12/2015"}, {"body": "igorminar actually curious short comings existing router trying address new router implementation working existing router actually happy point actually reminds bit durandaljs router back day thing nt like array format creating links html however radical shift like feels like cure worse disease though really nt like circular dependency component depends route turn depends component slightly verbose javascript code view eg approach breaks router designs seen far maybe amount risk involved well existing router config part plain js new proposed syntax vary degree across different environments generally skeptical major rewrites late game unless tremendous value added far seeing need hoping share major reasons around decision", "d": "12/2015"}, {"body": "di amongst things problems described issue well sure think new api addresses", "d": "12/2015"}, {"body": "really happy routerlink syntax new design route thing reference gives us place expose apis listening events like route change additionally allows us route information covered type system allows us error checking auto completion ides tue dec ale\u0161 notifications githubcom wrote di canactivate comment amongst things reply email directly view github", "d": "12/2015"}, {"body": "routable components reusable components unless built routable reusable components fact tied router already unavoidable might well take full advantage tie tue dec torgeir helgevold notifications githubcom wrote igorminar think run risk putting much logicresponsibility router risk creating applications unnecessary dependencies angular router get nice tie general authentication check router think done general request validation mechanism component individual route level secondly nt like idea running specific canactivate logic component govern routeslinks opinion better suited custom logic running outside router ensure logic decoupled free router dependencies year porting solution relies heavily specific router implementation seem desirable unit testing seems challenging well reply email directly view github", "d": "12/2015"}, {"body": "thelgevold highly sympathetic point components completely decoupled routes reread igorminar proposal nt see dependency see specifically nt see router logic creeping component talking component leaf destination route free route configuration perhaps worried routing component component attached router typically attached component purpose facilitate routing reusable system imo nt much going maybe misread igor spec problems addressed igor enumerated repeat better need custom dsl ugly arrays bound routelink templates magic strings static type check template imperative code autocompletion works canactivate part routeconfig class avoid awkwardness static class hook route config points component way around reuse component across multiple routes route config separate file make scaffolding easier component class files shorter due static nature opportunities code gen speculative would add potential intuitive natural routelink syntax agree many provide information necessary reroute preserve original intended route future retry", "d": "12/2015"}, {"body": "wardbell igorminar possible lack context misunderstood intentions guess part dislike router configuration bleeding class part component creates coupling level consider current example old way component selector demoapp templateurl demoapphtml directives demopage routerdirectives entire router config independent block inside implementation class routeconfig new route path component name new route path demo component demopage name demo new asyncroute path lazy loader gt componenthelperloadcomponentasync lazyloaded componentslazyloadedlazyloaded name lazy router knowledge beyond point unless want use routerlocation objects directly specific reasons class mydemoapp class portion consider heart component agnostic used router unit test example design doc creates two classes userroutes usercomponents circular dependencies seems bit odd also like current routerconfig acts summary routes level", "d": "12/2015"}, {"body": "definitely better write javascript expression part get benefits dsl pointed month ago prefer change", "d": "12/2015"}, {"body": "igorminar new router design cool easy understand", "d": "12/2015"}, {"body": "part problems except little bug refer entire tutorial seems finished yet available interesting parts routing missing", "d": "12/2015"}, {"body": "since really css nt think problem angular create plunk demonstrates issue though given snippet unfortunately nt help", "d": "12/2015"}, {"body": "template plunk know somewhere could fork", "d": "12/2015"}, {"body": "sorry pushed close mistake", "d": "12/2015"}, {"body": "help getting started", "d": "12/2015"}, {"body": "ok turned problem forgotten dom ready end body loading bootstrap related js collapse behavior part problem going collapse pure event hidden instead thanks sorry", "d": "12/2015"}, {"body": "please provide context mean instantiating test injector instantiating injector manually tests generally using injector tests code would helpful ideally plunk", "d": "12/2015"}, {"body": "sorry nt include much information assumed problem would common obvious one idiot able call tests instantiating test injector meant angular trying construct one trying manually plunk demonstrating error see pretty minimal", "d": "12/2015"}, {"body": "looking code runs internal angular tests line would fix problem maybe needs documented somewhere nt find initially code outside folder however call initialise would better suited function library part public testing api since otherwise would expose angular internals perhaps usefully part api preserve platform independence testing library probably line suggesting fix found workaround meantime thanks help", "d": "12/2015"}, {"body": "fix possible work around obvious start writing tests need set browser adapter injector work", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "found culprit bad pubspec transformers transformer bottom transformers", "d": "12/2015"}, {"body": "think looking see plunk html", "d": "12/2015"}, {"body": "alexpods thank much find articles says forget", "d": "12/2015"}, {"body": "would great someone explain end day need list array providers arrays containing default providers one example providing array arrays ca nt multiple providers one key array arrays flattened duplicates discarded algorithm flattening duplicates discarding override earlier providers later ones want override defaults understand intention need list defaults", "d": "12/2015"}, {"body": "technically correct multiple providers single key explained", "d": "12/2015"}, {"body": "uhmmm example code inject service providers nt pass constructor seems thing triggers expected behavior closing", "d": "12/2015"}, {"body": "stumbled upon platformpipes good enough", "d": "12/2015"}, {"body": "looks like happening never implemented stack trace points culprit seems also suggest also problem could use issue guess intention user implements interface consumed perhaps users able provide implementation method numberformatter dateformatter", "d": "12/2015"}, {"body": "known issue see afaik vicb workingwill work solution nt rely internationalization api", "d": "12/2015"}, {"body": "files mentioning generated pb needs fixing", "d": "12/2015"}, {"body": "noticed problem updating beta seems affect app dev mode using prod mode workaround currently fixes issue", "d": "12/2015"}, {"body": "pkozlowskiopensource yeah right posting places failed ts file needs changed c", "d": "12/2015"}, {"body": "hi guys opened pr last night potential fix", "d": "12/2015"}, {"body": "ciriarte saw earlier seems like failed one tests added link pull request issue", "d": "12/2015"}, {"body": "fix ngzonets check longstacktracezone", "d": "12/2015"}, {"body": "definitely found problem believe trying ought work looking ca nt find example cite anywhere docs would please find location", "d": "12/2015"}, {"body": "anyway reason getting error devmode default angular runs fn normal time check ensure nt changing things nt change viewgeneration pass semantically changing anything specifying route time technically returning different array time solution run fn inside component capture value component property bind property instead pseudocode routerlink theroute component theroute routerlink theroute somefunction whatever", "d": "12/2015"}, {"body": "mean live example docs yes tried function called times example", "d": "12/2015"}, {"body": "searched code could nt find think understand problem think old plunker earlier version doc click live example link get different result problem real router doc think close one", "d": "12/2015"}, {"body": "oh yeah doc forked example changed problem use function input parameter routerlink directive", "d": "12/2015"}, {"body": "facing similar issue appears due child initialized parent might update child part initialization process similar sample ugly workaround using zone workaround looking like following constructor private zone ngzone ngafterviewinit void thiszoneoverrideonturndone gt thischildtitle title parent", "d": "12/2015"}, {"body": "bug feature dev mode working intended calling see updated plunk bootstrapping app prevents exception thrown said thrown good reason short every round change detection dev mode immediately performs second round verify bindings changed since end first would indicate changes caused change detection plunk binding changes result call occurs fired happens part initial change detection turn nt problematic though problem changes binding trigger new round change detection means binding updated future round change detection", "d": "12/2015"}, {"body": "need setup component initialized correct way make change wrap call", "d": "12/2015"}, {"body": "need something anything triggers another round change detection method emit event whatever wrapping timeout queue flashback p one way work feels super messy", "d": "12/2015"}, {"body": "nt look user friendly think method place complete component initialization children defined turns custom rules think internally force new change detection round hidden inside user", "d": "12/2015"}, {"body": "could post representative sample trying achieve image spinner better using standard binding", "d": "12/2015"}, {"body": "ditto reason ca nt use simple binding achieve overriding zone behavior typically going recommended", "d": "12/2015"}, {"body": "robwormald yea case could property binding real case also involves another property bit complicated array custom objects certainly could set via property binding suppose thing would nt care much would reasonable way pass information however excited see could work component references code simplifies markup allows control via code additionally valuable typescript tooling support like intellisense compile time checking also simplifies container component track member variables intended used state child another minor point looking application using property binding syntax inspect template see ultimately consuming data would obvious wired via code", "d": "12/2015"}, {"body": "cleaned code show matters example idea show spinner image loading remove spinner show image image loaded element visible screen typescript import component input renderer elementref afterviewinit viewchild component selector inflate templateurl inflatehtml styleurls inflatecss export class inflate implements afterviewinit input inflate url string viewchild holder holder elementref isloaded false isloading false constructor private renderer renderer ngafterviewinit settimeout gt thisinflate bugfix inflate let bounds thisholdernativeelementgetboundingclientrect boundsbottom gt amp amp boundstop lt windowinnerheight thisisloading true let img new image imgsrc thisurl imgonload gt thisisloaded true thisisloading false thisrenderersetelementstyle thisholder backgroundimage url thisurl", "d": "12/2015"}, {"body": "need keep image host fadesin animation load complete nt affect host background opacity", "d": "12/2015"}, {"body": "got potentially related problem nested directive binding ngstyle progressbarts logging styles object returning prove equal also get expressionchangedafterithasbeencheckedexception", "d": "12/2015"}, {"body": "actually returning different object function call return new object instance equal previous one terms keys values terms instances references number ways dealing situation update values one object instance instead returning new copy using strategy function invoked one input changes ex might want check another example progressbar directive using bootstrap html css", "d": "12/2015"}, {"body": "pkozlowskiopensource thank much read stumble upon change detection strategies yet great", "d": "12/2015"}, {"body": "angular", "d": "12/2015"}, {"body": "issue raised angular using angular", "d": "12/2015"}, {"body": "issue raised angular using angular got confused used work angular please provide minimal live reproduction scenario plunker similar otherwise clear problem", "d": "12/2015"}, {"body": "want submit button enabled required fields physical address section entered example uses formbuilder", "d": "12/2015"}, {"body": "robiferentz add router bundle example", "d": "12/2015"}, {"body": "well helped errors also adding router bundle nt seem mentioned docs", "d": "12/2015"}, {"body": "error helping add either bootstrap", "d": "12/2015"}, {"body": "hmm thanks explanation element needed", "d": "12/2015"}, {"body": "also make sure nt use directives nt use security server rendering reasons html loading ensure bootstrap top level component selector app change bit use selector divapp document html loading", "d": "12/2015"}, {"body": "sure answer relates issue also know angularair vids feel like met celebrity smilecat", "d": "12/2015"}, {"body": "robiferentz thought using directive body tag turns colorzilla browser extension thanks watchinglistening angularair suggestions us feedback feel free tweet us angularair attending meet us person smile", "d": "12/2015"}, {"body": "israel shai reznik though know chances slim able get conf anytime soon wish could fine wish audio clearer sometimes btw know element required routing normally create quite bit annoying issues anchor tags etc wondering use", "d": "12/2015"}, {"body": "use unminified angular source easier debug", "d": "12/2015"}, {"body": "exception object object exception object object browserdomadapterlogerror anonymous function anonymous function stacktrace browserdomadapterlogerror anonymous function anonymous function stacktrace browserdomadapterlogerror anonymous function anonymous function async gap error getstacktracewithuncaughterror zonefork zonebind htmlscriptelementobjaddeventlistener esubscribe esubscribe homecmpklick eval abstractchangedetectorhandleevent appviewdispatchevent", "d": "12/2015"}, {"body": "ok tryed mapping logerror err consoleerror error err error following error object object homecmplogerror anonymous function terror terror terror run anonymous function zoneboundfn", "d": "12/2015"}, {"body": "neridonk debug use bundles", "d": "12/2015"}, {"body": "browserjsonpsend anonymous function esubscribe esubscribe homecmpklick handleeventinternal abstractchangedetectorhandleevent appviewdispatchevent appviewdispatchrenderevent stringfy err error body null status statustext ok headers type url null", "d": "12/2015"}, {"body": "hello pascal using angulartranslate staticfilesloader tell method translate return key language activated time thanks", "d": "12/2015"}, {"body": "okey got working deactivating eset antivir holy crap thx", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "dupe", "d": "12/2015"}, {"body": "please include polyfills first", "d": "12/2015"}, {"body": "still nt work", "d": "12/2015"}, {"body": "afvieira could please try reproduce plunker ca nt reproduce see least chrome ffox", "d": "12/2015"}, {"body": "could include", "d": "12/2015"}, {"body": "still work making using pkozlowskiopensource plunkr reproduce problem", "d": "12/2015"}, {"body": "one probably nesting tag inside tag believe invalid html", "d": "12/2015"}, {"body": "afvieira wrap tags tags", "d": "12/2015"}, {"body": "one probably nesting tag inside tag believe invalid html root cause issue see equivalent closing p without matching opening tag trigger issue", "d": "12/2015"}, {"body": "browser using", "d": "12/2015"}, {"body": "chrome newest version schrieb pawel kozlowski notifications githubcom browser using reply email directly view github", "d": "12/2015"}, {"body": "thnx info tmundt could please try reproduce problem plunker similar tool plunker forked quick start page works perfectly fine chrome ffox would interesting compare setup one plunker linked", "d": "12/2015"}, {"body": "hello also problem using visual studio update nt know proper form stackoverflow question list bunch file configurations feels like visual studio angular setup trying things comes typescript resources know specifically getting angular work visual studio trying update used workreally well change script imports local files hosted ones plunker still get errors see chrome edge firefox get require error elsewhere instead read property split undefined get typeerror p undefined systemsrc thank hope clear anything else need know let know", "d": "12/2015"}, {"body": "ahitchen visualstudio would help us reproduction scenario run browser asked plunk nt access environment figuring root pb trivial could please try reproduce plunker modify one linked presume going http request trigged js file nt exist server responds html error page indexhtml configured routing please try open dev tools network tab check request triggered mean request js file results html response server", "d": "12/2015"}, {"body": "could include polyfills html", "d": "12/2015"}, {"body": "plunker seems get errors seeing tried reproduce quickstart", "d": "12/2015"}, {"body": "think might caused build error switched commonjs system system says find angular modules still builds annoying work top priority made sure clean solution longer get require read property split undefined error instead get hoping actual error routeconfig", "d": "12/2015"}, {"body": "ahitchen mind sharing code use routeconfig", "d": "12/2015"}, {"body": "go need update register component name", "d": "12/2015"}, {"body": "importing", "d": "12/2015"}, {"body": "update updating project running alpha looked change notes know changes make go fixing lowersnake kabab case camelcase everywhere wanted get application least running", "d": "12/2015"}, {"body": "yep demo doesnt work get error think tried everything thing shows loading", "d": "12/2015"}, {"body": "got error live example", "d": "12/2015"}, {"body": "function fnapply got called lot times first get argument applyto fails power debugger get applyto value equal", "d": "12/2015"}, {"body": "add", "d": "12/2015"}, {"body": "could try load appcomponentjs contains", "d": "12/2015"}, {"body": "guys could someone reproduce problem plunker many reports problem reproduce seen far one really messed js files transpiled cjs etc please see problem side put together plunker shows exact error otherwise actionable really", "d": "12/2015"}, {"body": "coming trought example today got working change source could found breake code experiments set", "d": "12/2015"}, {"body": "gintsgints thnx reporting back glad got working going close issue since nt single reproduce scenario could use actually figure going would happy reopen investigate reproduce scenario surfaces", "d": "12/2015"}, {"body": "pkozlowskiopensource also problem forgot export class appcomponent created mharwood import component component selector myapp template first angular app export class appcomponent missed tutorial glanced small step", "d": "12/2015"}, {"body": "including polyfill script tag", "d": "12/2015"}, {"body": "followed intro", "d": "12/2015"}, {"body": "remove", "d": "12/2015"}, {"body": "remove page wo nt even load nwjs ok chrome", "d": "12/2015"}, {"body": "ok problem nwjs environment", "d": "12/2015"}, {"body": "suggesting removal needed browsers guess order inclusion correct go zonejs would suggest including things order javascript", "d": "12/2015"}, {"body": "issue opened specific reason failure work around fix", "d": "12/2015"}, {"body": "pr sent issue", "d": "12/2015"}, {"body": "yeah saw failed tests though", "d": "12/2015"}, {"body": "pkozlowskiopensource thought included polyfill updated nvm included polyfills", "d": "12/2015"}, {"body": "absolutely agree whole forms part indeed confusing feels like step backwards reread form guide times still nt know add custom validation ngmodel b take controlgroup update values json get server feels like square wheel", "d": "12/2015"}, {"body": "see ngform directive working", "d": "12/2015"}, {"body": "result delivered synchronously watch console typical observable use case would nt issue say http request similar people certainly going run said truly sync thing better use simple array simple workaround moment use subscribeon pass scheduler seen investigate", "d": "12/2015"}, {"body": "cc jeffbcross vsavkin", "d": "12/2015"}, {"body": "sorry tried simplify issue plunk ended making synchronous trying render list todos retrieved ngrxstore", "d": "12/2015"}, {"body": "see issue firebase implementation progress link moreover possible would like see goal include obvious trivial cases like one rpark started observable already emitted one values wired async pipe", "d": "12/2015"}, {"body": "oops forgot link unfortunately nt example program using sitting online anywhere moment", "d": "12/2015"}, {"body": "things note reason wait wire sorts things especially dealing observables avoiding stop cases going fully reactive turn onpush change detection strategy big win trigger change detection new value arrives initial value exists startup use behaviorsubject see", "d": "12/2015"}, {"body": "kylecordes look sara firebase pipe angularconnect like async pipe hooks change detector allows far efficient operation require change detection new value arrives", "d": "12/2015"}, {"body": "case using per robwormald seems fix issues thanks", "d": "12/2015"}, {"body": "robwormald change detection strategy appears optimization useful component applies bindings influence correctness right behaviorsubject developer component may find receiving code observable arrived whoknowswhere nt know care whether values come seems like essential part contract observable use without worrying point consumption whether data started flowing ready consume firebase event pipe example angular connect read depth working stuff aiming avoid coupling code notion subscribing firebase hooking rendering intentionally looking separate concerns observable interface understand async pipe correctly code cares firebase example responsible hooking change detection operate efficiently data coming observable changes sorry many words looking back wonder expectation async pipe offbase would like handed arbitrary observable arbitrary state without regard scheduler work realize still early days documentation inprogress promise looking", "d": "12/2015"}, {"body": "kylecordes reason nt work see obviously bug hence investigate comment bug label issue rpark presumably containing state observables extremelyalphanotsupporteddonottrythisathome library might add onpush basically ideal solution ditto application fully embraces reactivity observable contract agree quite simple observables rx flavor hope support bacon kefir es proposal etc flavors subject variety scheduler implementations deliver values various fashions interact event loop sorts fun ways may take time massage various permutations work nicely change detection worries words equally passionate stuff", "d": "12/2015"}, {"body": "fixed", "d": "12/2015"}, {"body": "kylecordes robwormald make firebase reactive use async pipe", "d": "12/2015"}, {"body": "rosendi sure exactly mean wrote approximately firebase observable wrapper progress internally create async pipe produces observable used offtheshelf async pipe", "d": "12/2015"}, {"body": "detectchanges needed call sorry", "d": "12/2015"}, {"body": "vincentdieltiens", "d": "12/2015"}, {"body": "yes thing nt accepts injector array way get array given injector one appcomponent know create injector array inverse", "d": "12/2015"}, {"body": "another resulting problem using main injector use directive like ngmodel get exception missing providers code edit solutions problem get injected constructor add providers given get injected constructor add providers given", "d": "12/2015"}, {"body": "vincentdieltiens try upgrade give hint solution would fix line changing removed loadintonewlocation loadnexttolocation", "d": "12/2015"}, {"body": "thing takes array injector way get resolved providers injector change method accepts input array providers instead injector note nt use separate component backdrop div displayed click event dialog", "d": "12/2015"}, {"body": "thanks help", "d": "12/2015"}, {"body": "try addeventlistener", "d": "12/2015"}, {"body": "actually ca nt reproduce code zonejs included page", "d": "12/2015"}, {"body": "using included", "d": "12/2015"}, {"body": "strange definetly bug yesterday comment code everything works fine", "d": "12/2015"}, {"body": "example routing code still works ok including hashlocationstrategy maybe example program showing failure", "d": "12/2015"}, {"body": "koblass also nt see problems please provide reproduction via jsbin plnkrco jsfiddle otherwise going close issue", "d": "12/2015"}, {"body": "ok found think nothing angular router strange reason webpack nt take account changes bootstrap file changing locationstrategy reflected sorry noise made tests router working expected best daniel", "d": "12/2015"}, {"body": "checked seems need put error handling method everywhere think better error handled exception nt fire subscribers", "d": "12/2015"}, {"body": "sure understand question asking error handling http calls done something like subscribe method take success handler error handler", "d": "12/2015"}, {"body": "returns subscribe way get exception changed works fine", "d": "12/2015"}, {"body": "indeed nt include barrel systemregister bundles igorminar matsko shell add bundle create separate bundle kind leaning towards nt want systemregister bundles animate", "d": "12/2015"}, {"body": "alternative way make work looking around use animate could nt find example case nt want systemregister animate could point complete example use animate already available imports scripts included scripts", "d": "12/2015"}, {"body": "miqmago answered check play plnkr", "d": "12/2015"}, {"body": "ericmartinezr thanks already seen thread live example found noticed importing seemed logical going change future", "d": "12/2015"}, {"body": "hello vavasilev test asynchronous need use return promise see injectasync docs realize documentation right way unit tests lacking working testing docs place learn", "d": "12/2015"}, {"body": "hi julie initial variant test injectasync later upgraded stopped working reason found testing use zones avoid need injectasync changelog removed injectasync returned back injectasync still problem described put windowsettimeout function test never fails attaching test regards vasil collectionsappspectstxt", "d": "12/2015"}, {"body": "one note everything ok problem started upgraded", "d": "12/2015"}, {"body": "found solution put following line beginning test jasminedefaulttimeoutinterval sure though ok find usage defaulttimeoutinterval angular sources", "d": "12/2015"}, {"body": "could make sure updated latest version versions ago", "d": "12/2015"}, {"body": "working imported core", "d": "12/2015"}, {"body": "also problem pub serve pub build", "d": "12/2015"}, {"body": "use dart version yes code looks like import package import package import package main enableprodmode bootstrap appcomponent", "d": "12/2015"}, {"body": "dug langdart found forcedevmode true default prevents enabling prod mode though look says", "d": "12/2015"}, {"body": "see green status saucelabs", "d": "12/2015"}, {"body": "polyfills required classlist eg requestanimationframe eg top may want mock console object something like", "d": "12/2015"}, {"body": "thats helpful response thanks miaval", "d": "12/2015"}, {"body": "error within following bootjs file looking like following compiled descriptive p ideas", "d": "12/2015"}, {"body": "hard say could share reproducer plnkr way", "d": "12/2015"}, {"body": "one also needs url polyfill systemjs", "d": "12/2015"}, {"body": "could please send plunker reproduce scenario lack context", "d": "12/2015"}, {"body": "ca nt connect plunkr moment try minutes context bootstrap component lot childs problem comes bootstrap nt even load component edit using jspm transpiling ts browser", "d": "12/2015"}, {"body": "updated alpha beta started get issue little details uncaught referenceerror zone defined ngzonecreateinnerzone ngzone createngzone platformrefapplication bootstrap anonymous function anonymous function webpackrequire anonymous function anonymous function webpackrequire anonymous function anonymous function", "d": "12/2015"}, {"body": "dblvs eav sorry guys really need reproduce scenario help eav issue sounds like bad webpack config one reported originally see minimal webpack setup compare use one existing webpackbased seeds already updated", "d": "12/2015"}, {"body": "sorry pkozlowskiopensource something else reproduce plnkrco jspm would ok create repo problem", "d": "12/2015"}, {"body": "dblvs jsmp pretty hard moment nt play nicely ts types resolution nodemodules super keen debugging people jspm setups feel free post link repo better yet ask people currently using jspm might help", "d": "12/2015"}, {"body": "ok fixed issue including zonejs bundle explicitly", "d": "12/2015"}, {"body": "problem requiring file like something similar like set global variable zone root file look follows js use strict var core require core var browserpatch require patchbrowser globalzone new corezone moduleexports zone corezone zone globalzone browserpatchapply globally available made workaround app like another solution use files like", "d": "12/2015"}, {"body": "please please import zone package managers cause kind grief see", "d": "12/2015"}, {"body": "said included polyfills without package management even every script still get issue", "d": "12/2015"}, {"body": "pkozlowskiopensource way including package managers importing seems also little bit dirty", "d": "12/2015"}, {"body": "wkwiatek good old tag zone loaded package manager", "d": "12/2015"}, {"body": "pkozlowskiopensource working fine assume problem devmode nt default relying window variable right choice ps renaming zone zone fixed launching app problem hack since attached error particular zone", "d": "12/2015"}, {"body": "zone loaded package manager pkozlowskiopensource could please expand strict zone even exists package curious", "d": "12/2015"}, {"body": "pkozlowskiopensource fixed issue component uses zonebind using hellojs nt capture events removed fixed end able get zone react changes hellojs", "d": "12/2015"}, {"body": "zonejs nontrivial monkeypatching loaded via package manager might able properly might patch wrong things ex polyfill used loader instead api used application usage zonejs support zone loaded via script tag early possible", "d": "12/2015"}, {"body": "surprise recently last alpha beta zero angular actually work loaded zone via webpack perhaps accident along still surprising find working code months suddenly need elevate one library way script tag even though everything else loaded via module system feels like step backward even though strong technical reasons behind jspm jspm transforms files jspm install ca nt merely scriptsrc file put place jspm jspmpackages bundles file enhanceddamaged relative file installed npm found needed revamp jspm examples also depend angular via npm order grab original", "d": "12/2015"}, {"body": "related issue", "d": "12/2015"}, {"body": "pkozlowskiopensource closing issue thanks help", "d": "12/2015"}, {"body": "agree kylecordes feels like regression liked able systemjs loaded script tag felt cleaner course come world everything loaded script tags people tasted modular js world write", "d": "12/2015"}, {"body": "one library loaded systemjs stop agree ultimately want load systemjs loads everything ultimatelyultimately want systemjs esm built browser import app everything works grinning", "d": "12/2015"}, {"body": "still require reflectmetadata zonejs jspm install reflectmetadata zonejs loading zonejs via script tag getting uncaught rangeerror maximum call stack size exceededobjaddeventlistener ximum call stack size exceeded evaluating evaluating evaluating", "d": "12/2015"}, {"body": "expected zonejs knows nothing electron ipc stuff therefore ca nt patch able inject service", "d": "12/2015"}, {"body": "tried posting issue luck nt understand zone stuff enough gather probably wrong zone context call case ensure right context", "d": "12/2015"}, {"body": "bad missed injection bit mentioned leads another question inject service service js function wrapped stuff like went route docs give js function example wrapping something else", "d": "12/2015"}, {"body": "something like also try typescript love see also might find interesting", "d": "12/2015"}, {"body": "alright got code working thanks considering lot new stuff learn atm cool check repo", "d": "12/2015"}, {"body": "comment removed igorminar violates code conduct constructive respectful", "d": "12/2015"}, {"body": "looking code abstractcontrol base control well controlgroup value updatevalue etc would probably lead many problems much extra typing cast control thu dec notifications githubcom wrote formbuilder controls collection typed abstractcontrol abstractcontrol updatevalue method requires cast control updatevalue method control updatevalue method preferred shorter better thismyformcontrols goalweight updatevalue cast required currently thismyformcontrols goalweight updatevalue thismyformcontrols goalweight control updatevalue could consider using types would require cast update value perhaps making controls collection contain actually controls class items rather abstractcontrol items perhaps could move updatevalue method abstractcontrol class example template using myform submit onsubmit myformvalue classhaserror myformvalid weight goal class formcontrol id weightinput placeholder weight goal pounds weight form ngformcontrol myformcontrols goalweight reply email directly view github", "d": "12/2015"}, {"body": "ask one would ever abstractcontrol instance controlgroup abstract base class typical meaning intent actual live instances abstractcontrol correct would nt simple fix make controlgroup defined hold real instances rather abstract instances could nt controlgroup set thing ever real nonabstract instances control rather instances abstractcontrol", "d": "12/2015"}, {"body": "controlgroup holding live instances abstractcontrol abstractcontrol base several different types control control controlgroup etc sure seen typescript abstractcontrol till cast controlgroup hold controlgroups controls side side arraymap call get controlgroup control abstractcontrol clue knowledge classes holding long extend abstractcontrol thus need cast either controlgroup control reality abstractcontrol never instantiated directly controlgroup holding instances abstractcontrols holding instances control abstractcontrol controlgroup abstractcontrol hope makes since could write methods like getcontrol getcontrolgroup casting done end really save anything fri dec notifications githubcom wrote ask one would ever abstractcontrol instance controlgroup abstract base class typical meaning intent actual live instances abstractcontrol correct would nt simple fix make controlgroup defined hold real instances rather abstract instances could nt controlgroup set thing ever real nonabstract instances control rather instances abstractcontrol reply email directly view github", "d": "12/2015"}, {"body": "ok missed must hold controls controlgroups see requiring cast", "d": "12/2015"}, {"body": "duplicates", "d": "12/2015"}, {"body": "frickt required attribute must add", "d": "12/2015"}, {"body": "ericmartinezr work binding properties property generally speaking prefer binding properties currently main use case binding attributes aria support attributes one would like add styling", "d": "12/2015"}, {"body": "different implementation know using built form validators like approach since enables manage validators central location working example", "d": "12/2015"}, {"body": "make final private public nonfinal fields appear overwritten random code also fields name prevents type inference figuring type probability type inference accident increases code size fact occurs twice succession generated code indicates thinks might changed uses ca nt use temporary using trusttypeannotations specific type could use declaration call result map api really need lookup method takes default pass token detect missing elements without two calls", "d": "12/2015"}, {"body": "actually thinking removing constructor parameter completely making private final instantiate something close plain js object possible perhaps even use js interop given class already need leave wide open intrusion", "d": "12/2015"}, {"body": "angulario fixed via", "d": "12/2015"}, {"body": "actually issue nt depend ngfor thing happens template like problem caused fact template parser required parent logic applies template root elements parent element template root element unkown time template compiled revealed component inserted page change angular html parser skip required parent logic root element everything works fine htmlparserts", "d": "12/2015"}, {"body": "ggmod version using could please provide reproduce scenario plunker similar online tool", "d": "12/2015"}, {"body": "plunker version number original post using beta version mistake appeared", "d": "12/2015"}, {"body": "michaelrommel repo reporting issues website one", "d": "12/2015"}, {"body": "reported repo thank pointing", "d": "12/2015"}, {"body": "bundling wit webpack meant included via script tag share webpack config sample repo need info", "d": "12/2015"}, {"body": "including zone one webpack chunks well removing fixed issue closing", "d": "12/2015"}, {"body": "please see correct way integrate polyfills webpack", "d": "12/2015"}, {"body": "moving dev guides reside", "d": "12/2015"}, {"body": "would default better nt understand would style css using css creatordesigner web component would know best display block display inline", "d": "12/2015"}, {"body": "want would vote creating stylesheet rather setting property browser need parse dynamically generated stylesheet general sure whether component author interested appearance component would already create stylesheet rules component adding extra property already existing rule bad know component author actually needs general problem custom elements making angular components behave differently might convenient need document", "d": "12/2015"}, {"body": "tbosch ca nt use inline style inline styles highest specificity something like would always require css component host display block important parent component helloworld display block important tbosch kasperpeulen reason use almost components contain inner element data block default html think even elements like block level proof said higher chance user expects default overrides support something like nt much component author vs template author allowing user skip annoying step every component created", "d": "12/2015"}, {"body": "vote well remember maxlynch raised fact wonder nt also default custom elements wc spec although angular actually nt create custom elements sense", "d": "12/2015"}, {"body": "chatting tbosch realized much complex first thought due issue lazyloading code upon execution would require another tag created fly", "d": "12/2015"}, {"body": "experience polymer also think common value could also fixed tools generate boilerplate include default style tag like live templates webstormintellij", "d": "12/2015"}, {"body": "think need two npm packages dev prod", "d": "12/2015"}, {"body": "yeh would another way solving problem although mental burden cost developers package need pull maintenance cost us developers ok go prod need change could work nt seem developer friendly", "d": "12/2015"}, {"body": "two npm packages going require either rewriting paths loader config trickery make work neither sound nice think avoid possible going make already complex loader configuration much complex", "d": "12/2015"}, {"body": "hitmanmcc please go breaking changes short nt load zones reflectmetadata system loader include using script tag instead info might check working setup systemjs", "d": "12/2015"}, {"body": "pkozlowskiopensource thanks quick reply indeed read breaking changes always read whole changelog working angular since first alphas way since time nt immediately update following versions guess must missed stopped alpha trying upgrade thank much quick reply additional links information working setup also something trying find posted", "d": "12/2015"}, {"body": "number breaking changes authors update repo new version would happy help needed till check minimal webpack starter kit", "d": "12/2015"}, {"body": "closed seeing problem moving alpha beta clear starter projects anything fix changelog lists breaking changes beta breaking changes alpha seems irrelevant seen problem two projects people reported gitter need information", "d": "12/2015"}, {"body": "lmfinney closed since nothing repo linked working starter declared help authors starter kits", "d": "12/2015"}, {"body": "ah one needs go breaking changes version currenlty used ones listed braking changes", "d": "12/2015"}, {"body": "nt problem issues breaking changes course started happening moved", "d": "12/2015"}, {"body": "lmfinney really trying help cloned opened app worked repo already updated stage sure exact problem facing breaking change might caused even due breaking change still face problems please open issue repository provide detailed info reproduce scenario would happy help resolving issue maintainers know reach help point got absolutely nothing fix repo", "d": "12/2015"}, {"body": "hi lmfinney take look changes done repo originally referenced made error original comment actually updated pkozlowskiopensource found sorry found going commits starting helped get project updated also looking project referenced pkozlowskiopensource useful", "d": "12/2015"}, {"body": "configuration based webpackstarter weeks ago approach changed significantly since nt something report able resolve issue steps added first script call indexhtml removed entries webpackconfigjs added imported calling bootstrap resolve issue think first two steps might key others situation steps apparently became necessary skipped pkozlowskiopensource saw gitter frustrated flux build processes around angular think frustration similar hope community consolidates standard approach soon", "d": "12/2015"}, {"body": "lmfinney refactor implementation latest changes webpackconfigjs vendorts still use using", "d": "12/2015"}, {"body": "look nt using vendorts yet might sufficient motivation thanks", "d": "12/2015"}, {"body": "see also ongoing discussion boolean attributes", "d": "12/2015"}, {"body": "note angular html file probably minified tool htmlminifier talking angular directivecomponent would either name binding html boolean attribute since element attributes angular wrapped inside brackets developer uses boolean attribute directive presence attribute html markup may interpreted angular browser resulting unpredictable behavior know developers prefix directives supposed know html specifications us perfect even knows attribute able see warning may help note trying open discussion best solution may simply kangaxhtmlminifier", "d": "12/2015"}, {"body": "see", "d": "12/2015"}, {"body": "thanks pkozlowskiopensource", "d": "12/2015"}, {"body": "comments", "d": "12/2015"}, {"body": "problem typescript nt retain interface info runtime best way use abstract classes instead interfaces", "d": "12/2015"}, {"body": "magnayn right see buggy code example could please link page question thnx", "d": "12/2015"}, {"body": "way", "d": "12/2015"}, {"body": "thnx moving documentation resides", "d": "12/2015"}, {"body": "see", "d": "12/2015"}, {"body": "yeah seen issue specifically seems like issue broader", "d": "12/2015"}, {"body": "seems like issue broader yes mutating model previously checked", "d": "12/2015"}, {"body": "reopening one since model mutation lifecycle callbacks needs thinking", "d": "12/2015"}, {"body": "problem javascript private getformclass isadsblock boolean object let isshowads boolean thisselected thisisadsloaded changes async script google ads", "d": "12/2015"}, {"body": "miqmago problem code return new object time called one possible way solve would ts class component classes true pullleft false pullright true private getformclass isadsblock boolean object update classes object possible recompute values events efficient thisclasses pullright thisclasses pullleft main idea always return object", "d": "12/2015"}, {"body": "worked thanks", "d": "12/2015"}, {"body": "vicb problem miqmago suggestion fixed modify return existing object getformclass called rather always returning new one docs however example showing use ngclass shows setclasses return new object time need updated docs consequence dev mode", "d": "12/2015"}, {"body": "solved thanks ericmartinezr nt use valuechanges access control value directly typescript root app component import component import validators control import bootstrap function control consolelog control control let p new promise resolve gt controlvalue aaa resolve null else resolve async true pcatch e gt consoleerror e return p component selector myapp template export class app mycontrol constructor thismycontrol new control aaa validatorsrequired bootstrap app catch err gt consoleerror err", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "apply fix one biggest reasons use webpack ability files within module apply transforms loaders import bundled prebuilt file webpack detects warns us fact webpack trying get us adding regexp may correctly ignore prebundled files providing webpack way ignore files already parsed bundled bundlers would prevent lot unintended sideeffects loaders", "d": "12/2015"}, {"body": "ahhh thanks ton", "d": "12/2015"}, {"body": "thanks encountered issue today", "d": "12/2015"}, {"body": "works fine though recommended likely issue returning new reference time function called makes change detection see new array time checked works fine reference returned time complains new reference check", "d": "12/2015"}, {"body": "agree reason working fine beta fails maybe change towards end alpha point references change tracking though update plunker still works even though return new array reference clicking button nt theory confuse change tracking since changed reference thisrows assigning brand new array click variable new memory reference every time import component component selector myapp providers template directives export class app constructor thisname thisrows thislength createrows arr thislength var temp var lt thislength temppush thisrows temp getrows return thisrows", "d": "12/2015"}, {"body": "change beta turned dev mode checks side effects caused change detection real issue first example time change detection run get new array side effect second get new array explicit user action would trigger change detection second check get instance way supposed work", "d": "12/2015"}, {"body": "thanks helps clarify behavior guess throw error teaches people avoid code needlessly creates new instances change tracking triggered something unrelated think bugs logged today based similar scenarios", "d": "12/2015"}, {"body": "sounds like older alpha version angular check version loading upgrade beta work", "d": "12/2015"}, {"body": "thelgevold right aallaparthizc going close one could link exact dev guide page mix cases versions could check mistakes docs", "d": "12/2015"}, {"body": "zamamohammed use term treeshaking thing describe much would love solution like sure form another fact dart today solution rather going come projects like typescript proper much aware requirement working towards goal repo", "d": "12/2015"}, {"body": "brandonroberts would nt better use platformdirectives avoid specifying every component", "d": "12/2015"}, {"body": "ericmartinezr suggesting put routerproviders array normally include bootstrap instead", "d": "12/2015"}, {"body": "good point sorry noise way awesome idea save us lot", "d": "12/2015"}, {"body": "understand sympathize impulse nt believe nt believe team router part angular core router separate optional feature many apps wo nt use router apps choose different party router yet available easily anticipated router independent evolutionary track priorities timetable quite apart angular core nt want burden core router weight nt want force router follow core priorities think expect team close issue form thanks", "d": "12/2015"}, {"body": "wardbell thanks response poor job explaining asking nt want part angular core wanted one less step setting router outlets router links components using router right routerproviders looks like asking line make routerdirectives global added routerproviders export would look like", "d": "12/2015"}, {"body": "sure good idea given directives providers different kinds things true collections loaded providers separate tokens nt mean values mixed token imagine register even numbers even token odd numbers odds token yes registered providers nt think get want saying lets mix integers token maybe bad analogy easily tell apart easy tell router directive class router provider service class maybe misunderstood point tired", "d": "12/2015"}, {"body": "wardbell nt think point mix two different concepts nt know something worried may wrong point easy set router consider followibng tree cases like add component may lot save us using brandonroberts showed proposal likely solution every user uses routing personally ended wrote first comment issue guys could save us even adding router related router nothing added core want simplify setting routing everyone quoting great philosopher seems like natural progression start putting router directives component move putting router directives platform directives include router providers gon na need using router one less thing anonymous", "d": "12/2015"}, {"body": "agree brandonroberts ericmartinezr also similar used defining module dependency angular modules sense anymore need add providers injector configuration added used sounds like reasonable thing saves us typing nt conflict concepts anything thing tiny bit worried fact move tokens people surprised specify directives code ones nt part basically custom directive user builds", "d": "12/2015"}, {"body": "ah coming around tiny bit could nt see point worry config case adding routeproviders routedirectives yes must currently added routing component honest nt going need components many views need routerlink running realistic cases still sold much issue fortunately easy extend platformdirectives although team nt keen encouraging potential abuse think little spike particular use case laptop throw comment", "d": "12/2015"}, {"body": "think especially bigger applications quite common almost component needs router capabilities view routeroutlet router link already public api fact could imagine becoming good widely used pattern reusable third party libraries make directives automatically available throughout entire application also nt add additional overhead runtime maybe overseeing something let hear core team say dec pm ward bell notifications githubcom wrote ah coming around tiny bit could nt see point worry config case adding routeproviders routedirectives yes must currently added routing component honest nt going need components many views need routerlink im running realistic cases still sold much issue fortunately easy extend platformdirectives although team nt keen encouraging potential abuse think little spike particular use case laptop throw comment reply email directly view github", "d": "12/2015"}, {"body": "quite common almost component needs router capabilities router outlet fascinating unlike experience eager see works beauty software diversity extending platform set something team needs easy intend demonstrate eat hat", "d": "12/2015"}, {"body": "nt know ts use angular dart could nt create file exports combined set import file instead everywhere app want use", "d": "12/2015"}, {"body": "zoechi whenever need kind router directive need import specify view dependency component want use like every component needs router directives however could add using multi providers allowing use directives ever want without specifying explicitly particular line could easily added reducing code would nt worry adding everywhere really ergonomics fact far see downsides whatsoever win fascinating unlike experience talking particularly complex applications nested components auxiliary routes decoupled time technically win unless overseeing sth really say could rather could pattern modules sit top core add commonly used directives using consumer nt worry router think third party libs might end using maybe platform rather reserved things provided core could least introduce another opaque token namespace could also part", "d": "12/2015"}, {"body": "tests currently skipped upgrade latest versions incorporate working upgrading packages without losing tests close since actual problem", "d": "12/2015"}, {"body": "option support follows function funcreturningapromise promise platform myplatform asyncapplication gt provide appinitializer usefactory gt funcreturningapromise appref gt applicationasyncapplication option another option would following function funcreturningapromise promise let appref platform myplatform application platform appinitializer usefactory gt funcreturningapromise apprefget appinitializerscompleted gt would work think option cleaner", "d": "12/2015"}, {"body": "also think option cleaner happy go ahead implement want think option allow people pass first argument well function", "d": "12/2015"}, {"body": "alexeagle nt bundle stuff bundles license issue asking since sure got license added bundles", "d": "12/2015"}, {"body": "rkirov looking synced week bundle rxjs current umd bundle include zonejs reflectmetadata sfx bundle nt see license newest", "d": "12/2015"}, {"body": "alexeagle code master nt rxjs bundles umd nt rxjs see still bug fix sfx bundles gone sure one referring", "d": "12/2015"}, {"body": "pkozlowskiopensource correct need licence bundle", "d": "12/2015"}, {"body": "could reproduce plunker", "d": "12/2015"}, {"body": "tomorrow", "d": "12/2015"}, {"body": "tried create plunker nt know add method complete", "d": "12/2015"}, {"body": "fact using subject nt use eventemitter either fwiw anything see exhibits behavior correctish way thing original fiddle would something like using observablefromevent ideally like make easier getting proper observables view see info blesh would expected behavior subject seems kinda weird", "d": "12/2015"}, {"body": "thank explanation looks strange working nt subject create related issue rxjs", "d": "12/2015"}, {"body": "problem plunker", "d": "12/2015"}, {"body": "jorgeunimicro importing operator wrong", "d": "12/2015"}, {"body": "still nt work validation keep false", "d": "12/2015"}, {"body": "far seems fix pass anything emit event example instead emit everything works fine", "d": "12/2015"}, {"body": "ca nt handle controls emit depends user input", "d": "12/2015"}, {"body": "robwormald import operator correct way defined see consolelog still nt work even import addoperator instead operator", "d": "12/2015"}, {"body": "robwormald seems start validation throws exception cvaluechanges undefined", "d": "12/2015"}, {"body": "likely bug rxjs beta", "d": "12/2015"}, {"body": "file issue take look holiday season slow things bit though", "d": "12/2015"}, {"body": "cc kegluneq", "d": "12/2015"}, {"body": "took quick look saw number errors updated dependencies also time discovered got preempted", "d": "12/2015"}, {"body": "luchillo sound odd simple list items nt cause performance problems could please demonstrate issue using plunker similar tool", "d": "12/2015"}, {"body": "ok performance issue dropped half second angularbeta try put plunker together", "d": "12/2015"}, {"body": "returns new array time called confuses change detection pipe behavior changes see error dev mode enabled default since", "d": "12/2015"}, {"body": "actual bug needs fixed applicationexample code", "d": "12/2015"}, {"body": "nt help", "d": "12/2015"}, {"body": "helps pipe removed workaround", "d": "12/2015"}, {"body": "tagging others help igor exception looks like unidirectional dataflow issues ping vsavkin tbosch mhevery help", "d": "12/2015"}, {"body": "point offering pipe nt work bet pipes chapter template syntax chapter samples broken think use certain pipes shows check later update happy report console pipes sample plunker errorfree template syntax unhappy find bit", "d": "12/2015"}, {"body": "offending line code worked gives error", "d": "12/2015"}, {"body": "ran opened duplicated issue missed one sorry even runtime works despite errors unit tests failing", "d": "12/2015"}, {"body": "maybe issue", "d": "12/2015"}, {"body": "think variation issue found behavior seems changed beta", "d": "12/2015"}, {"body": "based modified plunker seems sometimes support new object reference times think consistently allow new reference disallow consistently allowing", "d": "12/2015"}, {"body": "issue general instance following work either even though acceptable maybe even preferred way writing apps filteredlist class mycmp todos filteredtodos return thistodosfilter gt tcompleted one solution would create pipe called example listeq would noop prod mode would compare list previously passed list dev mode would return prev list following would work component template filteredlist listeq class mycmp todos filteredtodos return thistodosfilter gt tcompleted fix something similar change example use cache subarray component", "d": "12/2015"}, {"body": "vsavkin point show pipe tutorial got another suggestion hoping show something useful perhaps lowercase uppercase", "d": "12/2015"}, {"body": "johnpapa see think async pipe useful one requires explanation also show datepipe uppercasepipe", "d": "12/2015"}, {"body": "ok thanks remove slice go uppercase", "d": "12/2015"}, {"body": "removed angular vsavkin", "d": "12/2015"}, {"body": "see slice used way", "d": "12/2015"}, {"body": "seems code somewhere going apply rule input change output must change even something equal value different identity real question whether something angular apply around pipes seems closely related pure flag whether rule us including core team slice pipe need follow pipe implementations without precedent us learned early angular filters quite tolerant manner incoming data including undefined cooperate nicely typical use cases want something better know find one numerous programming languages based values immutability etc rather references mutable things ship sailed javascript years ago", "d": "12/2015"}, {"body": "vsavkin mean compare list compare every item recursively huge waste resources big complicated lists please explain issue first place forget hope get rid scope apply therefore seamless compatibility nonangular js libraries could killerfeature angular promised even blog post", "d": "12/2015"}, {"body": "code like vsavkin example trying figure best get working filteredtodos class mycmp todos filteredtodos return thistodosfilter gt tcompleted seems like issue dev mode throwing false positive rather take performance hit dev mode try bit harder check weather subsequent calls binding equal refactor code works prod mode get working dev mode maybe misunderstanding problem though implemented like pipe name pure export class pure transform dummyinput purefunc args return purefunc args component template pipes pure class mycmp todos filteredtodos todos return todosfilter gt tcompleted added benefit caching result calling looks bit ugly nt understand pure pipes check changes arguments input docs pure pipes checked changes input could call like update replacing new array work mutate todos pipe wo nt called would nice could give pipe compare strategy could tell something like check weather elements array changed getting bit ahead would really cool syntactic sugar wrapping pure function pure pipe take advantage cacheing eg filteredtodos class mycmp todos pure filteredtodos comparestrat comparestratarray todos return todosfilter gt tcompleted", "d": "12/2015"}, {"body": "btw slice pipe pure return value different input value args changed", "d": "12/2015"}, {"body": "slice pure array identity may change array items sat dec artem andreev notifications githubcom wrote btw slice pipe pure return value different input value args changed reply email directly view github", "d": "12/2015"}, {"body": "mean spliced sorted etc maybe need bit clever change detection strategy instead marking slice pipe nonpure something like watchcollection", "d": "12/2015"}, {"body": "yes clever change detection would solve much clever trouble approaches point fall clever cliff surprised matter clever make construct case would caught stop arrays objects well slippery slope leads performance problems inconsistencies going references simple fast importantly predictable even cases one would expect surface sat dec pm artem andreev notifications githubcom wrote mean spliced sorted etc maybe need bit clever change detection strategy instead marking slice pipe nonpure something like watchcollection reply email directly view github", "d": "12/2015"}, {"body": "hmm far understand already introduced respectively possible use approach slice pipe case", "d": "12/2015"}, {"body": "yes slice pipe chose properly implement think means pipe deal arrays needs worry sun dec artem andreev notifications githubcom wrote hmm far understand already introduced iterablediffer keyvaluediffer ngfor ngstyle respectively possible use approach slice pipe case reply email directly view github", "d": "12/2015"}, {"body": "tried", "d": "12/2015"}, {"body": "thanks worked would think precedence colon foo bar would sufficient maybe compiler handle unassisted future definitely feeling good turning noimplicit switch mountain code", "d": "12/2015"}, {"body": "looks like bug want try workaround could subscribe url updates update routerlastnavigationattempt manually", "d": "12/2015"}, {"body": "brandonroberts great simple workaround thanks", "d": "12/2015"}, {"body": "nt able get today unassigning since going ooo bit", "d": "12/2015"}, {"body": "quirksmode repo looking one", "d": "12/2015"}, {"body": "ah crap many thanks move", "d": "12/2015"}, {"body": "wkwiatek path bootstrap", "d": "12/2015"}, {"body": "proper import path also see", "d": "12/2015"}, {"body": "jorgeunimicro seems related rx stacktrace takes code plnkr code working although could nt reproduce error remove rxjs app nt load add rx using bundling system", "d": "12/2015"}, {"body": "rxjs project loaded script tags load rx need use thought requires rxjs needs thank help ericmartinezr", "d": "12/2015"}, {"body": "jorgeunimicro actually nt need full rx least want course want avoid adding operators individually plnkr thing add config file way skip adding full rx html automatically match internal paths uses files nodemodules", "d": "12/2015"}, {"body": "ericmartinezr configuration see log frompromisejs downloaded every rx files needed ask explicitly load rx app", "d": "12/2015"}, {"body": "ericmartinezr worked whe added requireresolve rxjsbundlesrxminjs vendors bundle", "d": "12/2015"}, {"body": "frickt would mind sharing plunker", "d": "12/2015"}, {"body": "template", "d": "12/2015"}, {"body": "soon solved", "d": "12/2015"}, {"body": "hey pkozlowskiopensource manually pushed bundles codeangularjsorg make automatic future releases", "d": "12/2015"}, {"body": "plunker working fault used nodemodulesreflectmetadatareflectjs sry", "d": "12/2015"}, {"body": "right suspicion could write slightly simpler test see point could check return value promise instead checking undefined cc igorminar thoughts breaking changes less frequent beta sorry churn know frustrating migrate lots tests", "d": "12/2015"}, {"body": "aholbreich could please provide relevant part npm log error warning", "d": "12/2015"}, {"body": "lot npm packages try optional dependency recompile natively via ran example got apparently tried recompile found could nt option though mean failed though actually fine went end printed list installed packages gyp errors npm errors npm error would something like except tried adding hypothetical version npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install npm err node npm err npm npm err version found npm err npm err need help may report error npm err npm err please include following file support request npm err e sandboxquickstartnpmdebuglog notice every line starts end generated real npm errors", "d": "12/2015"}, {"body": "pkozlowskiopensource unfortunatelly works python installation ut filipesilva provided one", "d": "12/2015"}, {"body": "filipesilva gyp errors maybe also fine least thet explanation tutorial site appears maybe ok fix", "d": "12/2015"}, {"body": "aholbreich ideal sure since part dependency dependency dependency nt much done dependency optional also minor performance impact see general yes exemplify npm error would look like", "d": "12/2015"}, {"body": "flag life saver nodegyp plague", "d": "12/2015"}, {"body": "oh nice idea existed", "d": "12/2015"}, {"body": "preventing proper demo home page", "d": "12/2015"}, {"body": "please give valid plunker link", "d": "12/2015"}, {"body": "actually desugars error seems legit", "d": "12/2015"}, {"body": "updated plunker right desugars desugars throws instead believe used work", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "cc kegluneq cbracken", "d": "12/2015"}, {"body": "found remove dartfmt problem two lines converted one probably need comment old lines instead replacing keep line numbers example", "d": "12/2015"}, {"body": "bug appearing test code using transformer inline amp values code tests place maintain line numbers seem working cases like ted suggestion fixing", "d": "12/2015"}, {"body": "bad tim tests work print input output maintain line numbers replacing values get bug caused using dartfmt transformed code thanks tedsander kegluneq", "d": "12/2015"}, {"body": "change merged rxjs release still pending starting work", "d": "12/2015"}, {"body": "able work web workers renderer would return promise result could add expect methods dom elements actually return non serializable values case example returning nothing safer use case already assume code running main thread browser ie serverside webworker working directly case makes sense call method directly", "d": "12/2015"}, {"body": "tried avoid using suggestion always use", "d": "12/2015"}, {"body": "general rule want interact directly dom using dom specific idioms like use dom directly via want write cross platform application webworkers nativescript serverside use renderer ca nt use something like would need separate implementation platforms need document btw usecase already service see", "d": "12/2015"}, {"body": "see tracking extend write service", "d": "12/2015"}, {"body": "changed directives use seems like everything works reason works inbrowser using versus unit tests", "d": "12/2015"}, {"body": "part browser platform directives cc vsavkin thing dart dev vs prod mode plan make consistent", "d": "12/2015"}, {"body": "thanks explanation vicb", "d": "12/2015"}, {"body": "seeking similar solution using component access view works well believe good solution however seems change detection issue related forces use hook opened issue", "d": "12/2015"}, {"body": "gionkunz thanks suggestion something similar nt know bug happens though think default implementation instead everyone implementing solution many different ways accomplish thing", "d": "12/2015"}, {"body": "little experience angular concern trying new angular http calls promise would best way go curious know angular team made decision use observables", "d": "12/2015"}, {"body": "guys make choose car transtorm optimus prime regular car go b would totally go first one", "d": "12/2015"}, {"body": "observables way powerful easily create code retries http calls case first one failed similar things ca nt promises addition another thing ca nt promises cancelling calls think use case build type ahead component keystroke throttle ms send actual xhr easy observables observables make sure always execute return call right order cancel calls promises suited wonder would make sense offer lean promise based http implementation masses encourage people real streaming needs use rxjs directly instead turn observable promise calling stream subscription ends soon first call comes back make sense thelgevold", "d": "12/2015"}, {"body": "pascalprecht see advantages cases describe guess time tell benefits warrant new direction could wrong convinced use cases describe huge pain points developers past generally find http needs super simple typically amounts fetching simple json without need either cancel retry trying fight change convinced yet necessary core implementation especially api bit cumbersome piecemeal includes nt agree statement promises nt allow guarantee correct order execution though", "d": "12/2015"}, {"body": "nt agree statement promises nt allow guarantee correct order execution though right emulate actual order chaining actual point eg could say fire xhr calls interested last one still pending common case build search inputs etc observables requests cancelled nt eat resources always fallback promises want one forces use observables", "d": "12/2015"}, {"body": "agree using promises definitely alternative likely experiment least ongoing blogpoc work let go still convinced observables enough real use cases context http warrant switch ability cancel cherry pick requests nice also question underlying architecture system constantly gets state requests cancelled ignored retried search box might exception request control predictability also part good design performance still impacted fire requests needlessly still hit server even though ability ignore results", "d": "12/2015"}, {"body": "imo learning basic syntax making http requests observable pretty easy even interested cancellable requests retries using approach processing data regardless come http websocket event beneficial", "d": "12/2015"}, {"body": "yfain yeah syntax pretty straight forward played around found solution needs plain call chaining etc angular sample project think though http worked well angular one concepts could allowed migrate default implementation pretty much based around standard promises also lot back forth implement rx integration angular assume contributes delays getting angular market suspect things still flux comes", "d": "12/2015"}, {"body": "preface months ago literally making argument thelgevold currently probably vocal advocate rxjs observables team first simple promise based api want already exists native modern browser fetch api works fine without set issues epic thread mostly due fact promises exist today nt semantic way describing cancellation cancelled promise success error neither something else decided one big focuses mobile able cancel requests longer care pascalprecht mentions dealbreaker rather trying shoehorn promises observables provide functionality box beyond cancellation promises reusable promise fails think spotty network connection mobile device completely reinitialize whole request observables retry times incremental backoff touches surface sort stuff trivial observables agree look http isolated context promises might seem make sense excluding argue context reactive application dealing single request dealing stream actions get transformed requests touching surface worth rxjs beat beta one day blesh co great partners us certainly contributing delays huge fan promises easy turn observable promise promise effectively observable single value opposite difficult http nt yet complete standalone module option use completely penalty opting said stay tuned lots interesting stuff come top see angular tactical prototype built top observables closing decision pretty much made absolutely feel free continue discussion ask questions", "d": "12/2015"}, {"body": "single page application promises suboptimal choice http promises cancelled user clicks link starts loading view routingview logic starts loading data via promisewrapped ajax user changes mind leaves view would nice cancel ajax request resolution logic step ca nt promises nt support go promises problems ca nt cancelled going execute code nt occasion promises gets worse resourceconstrained devices trap errors throw inside block must another block error lost best might get helper message console globally catch like unhandled errors handle one value filtering etc used mapping functionality sideeffects makes little harder determine sideeffects occur allinall see heavy promise use code suspect could bugs unwanted behavior", "d": "12/2015"}, {"body": "robwormald blesh open observables general still convinced advantages clear case run mill http requests cancellation granted nice able cancel requests nt consider frequent operation besides devices cancellation navigation may often theoretical value time get back small hamburger menu navigate somewhere else initial call likely already finished also think could get cancellation benefits extending promise standard include cancellation call since seems cited benefit see added feature observables something necessarily tied observables remember plain xhr requests jquery contained request cancellation feature event view benefits cancellation weigh reeducation devs shift approach also presented challenge comes angular http api since heavy bring entire library side effects agree junior developers often set global variablesside effects promise handlers observables also callback oriented devs likely thing using observables always make sure return results chain opinion makes clean promise handling without side effects limitation one result real issue since return object anywhere chain also reuse promise easy caching mechanism errors true need subsequent handle error catch pattern great convention never use thens two callbacks since wo nt handle issues success handler instead use catch since makes readable code btw understand catch disguise said impressed rxjs implementation general please nt see criticism library view clear best choice default http implementation however see great benefits people real streaming needs though ps assumption promise based code buggy general far broad", "d": "12/2015"}, {"body": "welcome use whatever like nothing stopping anyone using number promisebased ajax implementations long aware inadequacies willing work around fine however advice going allocate object async abstraction use observable benefits mentioned many times elsewhere promises okay need know might get", "d": "12/2015"}, {"body": "ok thanks points made regarding definitely keep exploring observables dive advanced use cases currently think normal observable use cases covered blog anyway take deep dive report back later let know become believer", "d": "12/2015"}, {"body": "posted read thread try answer question right saying reason angular nt simply return promises let people turn observables feel like using rxjs cancelling resulting observable would nt cancel underlying http request returning observables natively cancellation cancel underlying http request", "d": "12/2015"}, {"body": "right saying reason angular nt simply return promises let people turn observables feel like using rxjs cancelling resulting observable would nt cancel underlying http request returning observables natively cancellation cancel underlying http request correct", "d": "12/2015"}, {"body": "related reading fwiw", "d": "12/2015"}, {"body": "benjamingr oh dear hoped seen last thread", "d": "12/2015"}, {"body": "historical reference point demonstrating way decisions bring made project clearly users best interests come first one push spec tc use aurelia really angular user least yet pushing observables use spec expense angular users nt want see happen aurelia", "d": "12/2015"}, {"body": "think people move angular question going keep reoccuring benefits using observables single http requests immediately obvious people first encounter even rxjs readmemd says promises good solving asynchronous operations querying service xmlhttprequest expected behavior one value completion nt help explain things probably worth distilling reasoning various threads helpful piece documentation referred future people ask question showing implement advanced retry function based failure reason would also quite enlightening something people need seeing many examples using frustrating would nt actually use real life http requests", "d": "12/2015"}, {"body": "retry cancellation examples translated promises trivially observables shine complicated examples like autocomplete infinite scrolling etc want show shine need show use cases promises capable", "d": "12/2015"}, {"body": "benjamingr please show trivially cancel promise", "d": "12/2015"}, {"body": "think google groups thread contains lot cancelling promises need start", "d": "12/2015"}, {"body": "fxck although internet full examples angular quirky still cancellation", "d": "12/2015"}, {"body": "think google thread interesting read still planning using promises observables think better documentation key ideally neutral documentation describing pros cons approaches currently search topromise yield single result api preview perhaps documentation describe actually might clear benefit observables right biased towards observables also would nt mind explicit optin approach either one based application needs developer experience key points always nt necessarily agree ability cancel request necessarily outweighs burden reeducating developers might even utilize cancel feature instead defaulting observables could make explicit people educate one makes sense vs better documentation describing pros cons might make easier pick one best suitable specific needsteam skills", "d": "12/2015"}, {"body": "thelgevold observables much possible adoption get smoother sail proposal tc stages language", "d": "12/2015"}, {"body": "benjamingr fair cancellable promises nt really promises anyone talking thread standard promises vs observable type languages years cancellation completely breaks one good thing promises making mutable debate another day", "d": "12/2015"}, {"body": "blesh cancellation nt make promises mutable agree pretty cancellation promises signals disinterest abort consumer signal interested return value change handlers fire exception analogous generator less promises imo unicast vs multicast semantics always multicast means promises refcount order sound cancellation meaning abort semantics option promises also swallow errors even native ones promises fire event error happened handled windowaddeventhandler unhandledrejection processon unhandledrejection node like emphasize observables angular http help push spec battle test many users frameworks year lifespan observables stay language good get work good default functional abstraction handling events dom event emitters think need sell observables users motivating examples spec examples retry cancel things promises ca nt elegantly like autocomplete working websockets progression anything many semantics painful observables trivial", "d": "12/2015"}, {"body": "benjamingr agree conditional retry done promises trivially help people like adapt angular way would still nice see recommended approach observables guess implementing something like operator retry predicate rxjava would good approach could nt find equivalent rxjs already googling clear talking retrying communications failures nontransient failures like authorization found etc nt mean drag offtopic guess main point showing trivial realistic scenarios observables help get people board people ca nt easily work trivial stuff wo nt even get reading advanced scenarios", "d": "12/2015"}, {"body": "jamesthurley simplest example uses operator looks like got bit carried away tinkering configurable exponential backoff retrier thing adapted certainly add docs sort thing well", "d": "12/2015"}, {"body": "benjamingr agree conditional retry done promises trivially help people like adapt angular way would still nice see recommended approach observables yes need two distinct things sell people observables aggressively show people use docs need", "d": "12/2015"}, {"body": "tinkering predicate determine recover posterity", "d": "12/2015"}, {"body": "thanks robwormald really invaluable see would approach must admit brain started melting reading complicated examples need dedicate time picking learning rx gives good motivation", "d": "12/2015"}, {"body": "jamesthurley robwormald backoff example complicated way without comments golfed one liner yet see complicated examples observables really make complex async flows easier promises btw comparison verbosely look lot simpler used rx takes get used rx coding style sometimes pays sometimes complicated", "d": "12/2015"}, {"body": "personally start basics work decent understanding use observables mimic promises comes normal requests single chained requests parallel requests still familiar enough syntax go advanced observables yet get take lot effort become familiar promises first step understand new functions meaning relatively steep learning curve framework moving target still developed honest admit observable retry sample far advanced moment able get eventually bit discouraging ca nt find clear examples observables truly shine compared promises midsenior level programmer take two second look promise based equivalent sample understand right away true observable based solution appreciate observables designed complex workflows find world coding often complex often job make less complex", "d": "12/2015"}, {"body": "exponential backoff usually use something simple like little mutable counter js let backoff myobservableretrywhen errors gt errorsswitchmap gt navigatoronline internets take next step back delay increment backoff return observabletimer mathpow backoff else internet wait window come back online return observablefromevent window online take successful message reset backoff working gt backoff two downsides people nt like mutable state like personally long keeping control think legit going set every successful message pretty lowcost though nt impact anything terribly edit want stop retrying return", "d": "12/2015"}, {"body": "thought simpler case observables actually greatly simplify things past implemented countless master detail grids user clicks row load ajax details particular item along need way prevent multiple calls flight user clicking rapidly multiple rows server responds without way cancel current request either temporarily detach event handlers otherwise disable row clicking unsubscribe feature observables seems trivial since unsubscribe call sure elegant implementation seems work idea hope unsubscribe prevent results processed order match current row results belonging different row assuming results prior calls simply ignored results recent request processed client would appreciate ideas improvements test added simple countrycapitol grid project demo getcapitol country guess variation type search filter think might common feature since master detail grids common guess could argue could add cancellation promises least observables supported box", "d": "12/2015"}, {"body": "thelgevold built rx operator aka except cancel pending observables new one comes pipe ideally eventsactionwhatevers would start observable would make system fully reactive nt ability yet see proposal fix easily use subject accomplish html get capitol capitol async name slightly expanded demo note spam buttons quickly see xhrs getting cancelled network log illustrates one nt think http observables isolation plugged reactive way working benefits stand", "d": "12/2015"}, {"body": "awesome thanks taking time explain definitely play around bit better understand details subject idea seems pretty powerful combination switchmap though", "d": "12/2015"}, {"body": "thelgevold thought simpler case observables actually greatly simplify things trivial build combinators promises based observable example execute last request course trimmed even without cancellation signal disinterest last request libraries promises several years subjects like promise deferreds pretty much used convert apis promises writing new combinators never scenarios rx elegantly lets combine things automatically old rx demo used talk observables angular back may thanks blesh reviewing finding embarrassing errors demonstrates autocomplete elegantly imo implementing promises would considerable overhead dig demos like blesh exponential backoff usually use something simple like retrywhen yes probably implement code simpler requires much less understanding model probably bit faster nt want demonstrate mutable state observable chain recall one strongest advocates esobservable guess agree pure function mutates data order produce immutable value fine", "d": "12/2015"}, {"body": "trivial build combinators promises based observable example correct wrong still nt going cancel underlying xhr right subjects like promise deferreds agreed nice way currently manually grabbing dom element observablefromevent verboten using subjects prevent usage webworkers like ideally implement observable decorator typescript class foocomponent observechild mybtn click buttonclicks observable observechild somechildcomponent somecustomevent childclicks observable ngafterviewinit thisbuttonclicksswitchmap subscribe", "d": "12/2015"}, {"body": "also cool demo dec pm benjamin gruenbaum notifications githubcom wrote thelgevold thought simpler case observables actually greatly simplify things trivial build combinators promises based observable example function last fn let prev cancel function return function prev amp amp prevcancel prevcancel prev fnapply arguments return prev execute last request course trimmed function last fn prev return function prev amp amp prevcancel prevcancel return prev fnapply arguments even without cancellation signal disinterest last request libraries promises several years subjects like promise deferreds pretty much used convert apis promises writing new combinators never scenarios rx elegantly lets combine things automatically old rx demo used talk observables angular back may thanks blesh reviewing finding embarrassing errors demonstrates autocomplete elegantly imo implementing promises would considerable overhead dig demos like blesh exponential backoff usually use something simple like retrywhen yes probably implement code simpler requires much less understanding model probably bit faster nt want demonstrate mutable state observable chain recall one strongest advocates esobservable guess agree pure function mutates data order produce immutable value fine reply email directly view github", "d": "12/2015"}, {"body": "correct wrong still nt going cancel underlying xhr right would nt posted counterpart otherwise userland promise implementations support cancellation contrast native observables currently proposal none fancy stuff open network tab see click button rapidly btw clear promises sound cancellation retry make good alternative observables working websockets promises simply sufficient represent singular values observables angular everywhere important thing help spec progress likely get lot cool combinators future proposals users want use promises anyway agreed nice way currently modeling events command pattern ala mv frameworks observable subscriptions choice disagree personally go something like something like would let us throttling easily would definitely selectors would definitely make users write subjects get wrong least case promises users promisify apis think users find observables end end default confusing without prior background", "d": "12/2015"}, {"body": "benjamingr robwormald blesh ok given subjects interacting dom elements discouraged would write sample clean way today think code pretty verbose elegant least conceptually correct able see http request get cancelled network tab behavior seems correct want learn advanced map functions generally recommended call unsubscribe manually use case done differently thispendingrequest thispendingrequestunsubscribe consolelog cancelled observable", "d": "12/2015"}, {"body": "thelgevold nt know angular user apart invited participate talked never really part discussion shape apis luckily nt get way back api would looked differently observables would probably strong case inclusion language core warning coming next opinionated personally think knockout right idea binding observables failed use actual reactive observables could bind observables get events directly observables could easily work endtoend observables get declarative clean data flow write fe code code lot react rx flux nt really miss notion framework things flow centralized bus observable rx reducer break smaller observables reach components bind data data flows observables subclass subclass lets get etc observables state flows bus processing happens reducers stack like redux app state immutable snap except transient state nt flux super simple works like charm could angular guess create class give abilities components subclass decorator thing nt use style coding time mainly building things mainly since developers accustomed rx would find confusing", "d": "12/2015"}, {"body": "robwormald know cautioned use fromevent tried totally agree good idea think really bothers abut end global click subscription store state dom find solution closed input since global registration usa denmark germany argentina ngoninit ca nt picture perfect api would love way hides creation initial observable without hard coded dom references would idea introduce observable group decide type events want associate group usa germany observablefromgroupandevent click switchmap r gt thisactivecountry rcountry return thisactivecountry json map res response gt resjson subscribe r gt thiscapitol rcapitol", "d": "12/2015"}, {"body": "thelgevold look ideas implementation might look like let keep discussion open issue benjamingr input would welcome well using similar reduxlikewithrx pattern missing link", "d": "12/2015"}, {"body": "quick side note benjamingr fiddle thelgevold code example see condensed purpose see arguments easily common perf gaff see rx sometimes intentional suppose still wanted shout sometimes least used lot sure still older code", "d": "12/2015"}, {"body": "since thread turned general discussion observables nt get wrong good thread people future might refer blesh would mind elaborating little perf gaff assumed fast never really considered way honesty vast majority rxjs code rxjs code yet nt thinkknow production ready yet performance sensitive parts server use rxjs create observables app starts reuses promises assimilated singular things parts client never performance issues rxjs sure lot less rx experience netflix folk use much larger scale projects typical probably less interesting things rx interested hear ran performance problems", "d": "12/2015"}, {"body": "robwormald benjamingr input would welcome well using similar reduxlikewithrx pattern missing link need angular actually give top using rx virtual dom components", "d": "12/2015"}, {"body": "say like templates dec pm benjamin gruenbaum notifications githubcom wrote robwormald benjamingr input would welcome well using similar reduxlikewithrx pattern missing link need angular actually give top using rx virtual dom components reply email directly view github", "d": "12/2015"}, {"body": "blesh would mind elaborating little perf gaff assumed fast never really considered simply put incurs subscriptions operator requires subscription source observable hood another observable another subscription another observer extra function calls chain etc overhead however use resultselector argument others et al overhead reduced calling function result directly generally nt make much difference average app perf matters say scale busy realtime ui want limit subscriptionoperator depth possible", "d": "12/2015"}, {"body": "another observable another subscription another observer extra function calls chain etc overhead think might nother mental gap understanding rxjs actually create attached expect rx optimize hood really create new subscriptionobservableobserver expect forward original subscription copy write second subscriber attached common case least things like http calls definitely one single subscriber guess expect rxjs optimize like bluebird", "d": "12/2015"}, {"body": "actually give top using rx virtual dom components think one compelling things angular buildtime tooling around statically analyzing templates could theory analyze templates components things like generate graph queries components needed use andor compile metadata make things like falcor efficient talk features think angularconnect perhaps came chatting igorminar sure would nt possible vdom scenario view could built anyway javascript manipulate object possible clunkier unlikely work every scenario personally love using vdom violate rule least power bit said vdom fits needs projects currently work netflix", "d": "12/2015"}, {"body": "expect rx optimize hood really create new subscriptionobservableobserver agree working currently version rxjs likewise could similar optimizations operators completely synchronous like chained back back", "d": "12/2015"}, {"body": "could theory analyze templates components things like generate graph queries components needed use andor compile metadata make things like falcor efficient talk features think angularconnect perhaps came chatting igorminar sure alxhub covered talk angularconnect template transforms falcor example sugared syntax sort flaghook custom template transform look html userfirstname userlastname desugars longhand falcor syntax html userget firstname async userget lastname async", "d": "12/2015"}, {"body": "moved optimization discussion rx repo hope ok", "d": "12/2015"}, {"body": "think one compelling things angular buildtime tooling around statically analyzing templates jsx templates react javascript trivial statically analyze transform regular babel transform additional parsing much easier tooling real dedicated template format errors detected existing js tooling understands transform type system flow nt shabby either like angular templates nt turing complete ca nt leverage existing static analysis tools js since components use easy generate dependency graphs need hierarchical bundling anyway really want move something like falcor big fan backend runs c nothing runs falcor net production ready suspect use dependency map injector get way watch angularconnect talk maybe make believer", "d": "12/2015"}, {"body": "alternative solution would provide optional host template route configuration objects child param param event export class child input param output event new eventemitter component selector app template app child childid export class app children id param param id param param id param param getchild id return thischildrenfind child gt childid id onevent", "d": "12/2015"}, {"body": "think eg commonts understandable pipe importable core", "d": "12/2015"}, {"body": "concerned fact need import sources operator rxjs operators example code work include import rxjsaddoperatormap appropriate pkg mapping systemconfig import http import injectable import observable rxjsobservable import rxjsaddoperatormap injectable export class productservice constructor private http", "d": "12/2015"}, {"body": "wrapped http service better import rxjs operators", "d": "12/2015"}, {"body": "stuff always require run app browser directives pipes form controls commonly needed provided framework optional dependency expect web apps want reused nonbrowser platforms eg reactnative bits nt make sense documentation issue discussed elsewhere many times right thing function bind operator part ecmascript spec either portablemodularlowpayload code paying via explicit dependencies nonportablemonolithicbloatedpayload code gaining implicit dependencies global variables prefer former especially since imports already explicitly defined file please let hijack issue follow ups unrelated issue", "d": "12/2015"}, {"body": "thanks answer igorminar pipes ara common importable", "d": "12/2015"}, {"body": "pipes ara common pipe importable interface base class concrete pipes implement", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "igorminar thanks think right great get details docs", "d": "12/2015"}, {"body": "issue would need cast control", "d": "12/2015"}, {"body": "thank vicb clarification nice quick fix", "d": "12/2015"}, {"body": "thank vicb answer adds syntax job curiosity would addition controlgroup class angular source code also worked", "d": "12/2015"}, {"body": "yeh wip", "d": "12/2015"}, {"body": "haha robwormald think get", "d": "12/2015"}, {"body": "looks like", "d": "12/2015"}, {"body": "thanks micmro", "d": "12/2015"}, {"body": "cc tbosch note would display children", "d": "12/2015"}, {"body": "duplicate use probably improve matching mechanism releases", "d": "12/2015"}, {"body": "cc wardbell", "d": "12/2015"}, {"body": "also cc pascalprecht", "d": "12/2015"}, {"body": "version safari presume due lack method introduced safari need include polyfill earlier versions using esshim described appendix browser support section", "d": "12/2015"}, {"body": "btw sending zip files reproduction scenario wo nt help us many people including would nt download unzip random files internet want share reproduce scenario put online ideally using tools like plunker jsbin similar", "d": "12/2015"}, {"body": "thank indeed due import missing btw documentation import correctly typescript source getting bunch module found errors try", "d": "12/2015"}, {"body": "btw documentation import correctly typescript source getting bunch module found errors try import try import file meant included tag file contains code executed soon possible without module loader pulling module loader might interfere code bundle mostly zonejs", "d": "12/2015"}, {"body": "jamcoupe angular always binds domcomponent properties attributes nt property attribute fo use case need use following syntax", "d": "12/2015"}, {"body": "configuration instead navigate url like rather navigate navigating look like specifically include route hunch might seeing want double check sure", "d": "12/2015"}, {"body": "reproduction case describe want make sure problem configuration include test well", "d": "12/2015"}, {"body": "chatted matanlurey true routes", "d": "12/2015"}, {"body": "see never called finished data nt leak connections thisfinished true thisdomremoveconnection thisid thisreadystate readystatecancelled return thisresponsedata data", "d": "12/2015"}, {"body": "think problem jsonpbackend onreadystatechanged missing", "d": "12/2015"}, {"body": "post plunker code sample reproducing also note callback name jsonpcallback jsoncallback", "d": "12/2015"}, {"body": "yes see even passing callback simple copied pasted code examples", "d": "12/2015"}, {"body": "last beta version works", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "steps trigger issue ca nt reproduce", "d": "12/2015"}, {"body": "clone repo run run load dartium chrome", "d": "12/2015"}, {"body": "envos testing", "d": "12/2015"}, {"body": "could add full stack trace report", "d": "12/2015"}, {"body": "running goobuntu also affecting osx well uncaught unhandled exception exception value accessor ast original exception value accessor original stacktrace throwerror package setupcontrol package ngmodelngonchanges package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefloadcomponent package applicationrefbootstrap package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart error context instance context abstractchangedetectorthrowerror package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefloadcomponent package applicationrefbootstrap package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart", "d": "12/2015"}, {"body": "probably missing directive let try", "d": "12/2015"}, {"body": "yep raison error missing code however best probably include whenever using forms template please leave issue opened change error message descriptive edit would nice works dev vs prod mode", "d": "12/2015"}, {"body": "sounds good definitely assumed since working dev mode error part also nicer errors would definitely great", "d": "12/2015"}, {"body": "docs getting updated reflect latest code updates", "d": "12/2015"}, {"body": "use instead see", "d": "12/2015"}, {"body": "thnx zoechi", "d": "12/2015"}, {"body": "zoechi works thanks", "d": "12/2015"}, {"body": "version using upgrading latest version fixes issue", "d": "12/2015"}, {"body": "chance included somewhere last heard required lower", "d": "12/2015"}, {"body": "included webpack bundle nt know would enough nt make working", "d": "12/2015"}, {"body": "included webpack bundle ca nt see dependeny", "d": "12/2015"}, {"body": "sorry forgot push change repo", "d": "12/2015"}, {"body": "following error occurs app generally tested angular ie lastly work bare mind included problem begins another story", "d": "12/2015"}, {"body": "thnx chiming wkwiatek good catch reflectmetadata regarding definitively want run smoothly still believe making work matter shims know couple apis missing requestanimationframe classlist etc polyfillable since unit test campaign works polyffils going close one got specific issues already open", "d": "12/2015"}, {"body": "mean time added explicitly still success ie wrong", "d": "12/2015"}, {"body": "also see", "d": "12/2015"}, {"body": "works", "d": "12/2015"}, {"body": "dotneteer extra event handler click handler trying invoke nonexisting function fixed plunk imo good thing got error member trying call nt exists sure works ts could put together plunk", "d": "12/2015"}, {"body": "thelgevold check one basically upgrade ts", "d": "12/2015"}, {"body": "ah ok thanks", "d": "12/2015"}, {"body": "cc yjbanov", "d": "12/2015"}, {"body": "turns starting dartium checked mode tom nt tiny checkbox deep ws ui still way hard pin really fail checked mode", "d": "12/2015"}, {"body": "yes fail boolean expressions usually indicate problem checked mode checking", "d": "12/2015"}, {"body": "code html dart understanding template code specific js dart matter language using thus dart nt checking", "d": "12/2015"}, {"body": "attempt explain reasoning behind core concept angular bind dart code html template constructs implemented dart html template describes structure ui binding locations behavior fact runtime things disappear entirely example pick element property binding browser inpect element notice exist element things live dart fact angular transformer internally turns expressions dart serving browser seems natural adopt dart semantics properties events expressions directives including semantics checked mode things meaning resulting html dom application however could certainly choose see differently apply different semantics behaviors careful performance though please reopen bug counterproposal language semantics explanation nt convincing", "d": "12/2015"}, {"body": "yjbanov explanation convincing js guy really want able use boolean expression writing dart writing dart get", "d": "12/2015"}, {"body": "got fixed via yay", "d": "12/2015"}, {"body": "cc tbosch igorminar vsavkin save time know one must included public api", "d": "12/2015"}, {"body": "also check", "d": "12/2015"}, {"body": "urlresolver used places outside tests compiler src couple dart transformers buttonspects material tests provide js amp dartfriendly resolver internal tests workerts reexported playgroundsrcmaterialbuttonindexts material examples used instead present angularuniversal bunch places internally overriding nontest code perhaps urlresolver moved", "d": "12/2015"}, {"body": "used places outside tests compiler src workerappcommonts workerrendercommon workerts reexported present angularuniversal present internally", "d": "12/2015"}, {"body": "talked irl tbosch dependencies could removed js bundle approoturl deleted also part issue", "d": "12/2015"}, {"body": "nt strictly speaking typescript nt retain types runtime effect implementing interface null void runtime implementing interface gives types typos checking still want recommend ts users", "d": "12/2015"}, {"body": "oh see good asked submitting pr thx", "d": "12/2015"}, {"body": "good know thanks asking juristr pkozlowskiopensource say confusing import implement interface called use function called lil strange likely cause confusion others", "d": "12/2015"}, {"body": "closed", "d": "12/2015"}, {"body": "dislike change greatly misgivings ngbootstrap team stuff like directive component decorators move farther away expectation users generally dom api html case insensitive minus svg well css querying api ie also recognize syntax adds confusion breaks user understanding draw standard apis provided browser developers creates strange hybrid state little decisions like big overall impact overhead working angular ecosystem imo one moves away simplicity little reason", "d": "12/2015"}, {"body": "pretty much wesleycho said", "d": "12/2015"}, {"body": "talked pkozlowskiopensource ok change think might require detailed explanation link links reasons ca nt say love situation though", "d": "12/2015"}, {"body": "actually like new syntax better guess subjective upgrade seems worse really upgraded sample project decent size global search replaces took", "d": "12/2015"}, {"body": "course know angular alpha stage breaking changes inevitable like know case previous kebabcase dashcase causes problems change attribute names implicitly converted camelcase one problem implicit conversion listening event would bind event meaning way listen someevent event remember js name custom events whatever want comes property bindings tried spend quite time realizing actually write change case sensitivity introduced event bindings makes sense use well property bindings case sensitive would bind input notice lower case former element would weird trigger directive whatever name casing input binding would sensitive name casing made selector also case sensitive took team quite discussion decision made really convinced first considered different options think picked best one find quite elegant breaking change introduced big impact could accept style new camelcase old kebabcase dashcase accepting style mean allowing trigger directive possible see comments previous section however nothing prevents using dashcase directivescomponents prefer could write directive would trigger would would event possible come vintage hope helps", "d": "12/2015"}, {"body": "thank explanation remember js name custom events whatever want javascript ca nt use names identifiers directly use names via decorator property right comes property bindings tried someprop exp spend quite time realizing actually write someprop exp change case sensitivity introduced event bindings makes sense use well understand team introduced case sensitivity one question please change angular directives components selectors camelcase many documents sample codes programs using old style name already including unpublished books selectors need change current codes documents uses many people familiar previous names like names popular id class attributes html keeping selectors standard components directives like", "d": "12/2015"}, {"body": "true context angular also true outside angular would true context angular would easy enforce lower camel case event names change angular directives components selectors camelcase considered keeping would lead mixed formatting even worse mention breaks things think best thing angular long run", "d": "12/2015"}, {"body": "thanks much explanation", "d": "12/2015"}, {"body": "easily implemented transformer sure mirrors nt going hit old problem part files ca nt tell file class defined", "d": "12/2015"}, {"body": "nt going hit old problem part files ca nt tell file class defined personally would fine supported part files parts lame anyway", "d": "12/2015"}, {"body": "feature", "d": "12/2015"}, {"body": "anyone", "d": "12/2015"}, {"body": "reproduce", "d": "12/2015"}, {"body": "hi patrick yes scenario updated plunkr", "d": "12/2015"}, {"body": "also need include jasmine typings need tests point import include typings dependency duplicate identifier errors get errors like another annoying thing see compilation output", "d": "12/2015"}, {"body": "cry also use express import nodets like js declare module express idea solution please", "d": "12/2015"}, {"body": "see indeed rather annoying atm", "d": "12/2015"}, {"body": "issue electron projects also reference node using electron angular angular bringing nodedts typings lots duplicate identifier errors excluding nodedts typings angular causes error found assume reference path file like far means nt seem able properly compile electron angular", "d": "12/2015"}, {"body": "xstof still compile course see nasty complaints compiler", "d": "12/2015"}, {"body": "thanks rolandjitsu much appreciate answer hope issue resolved stick compile errors exclude node typings angular one error coming alternatively thinking two gulpdriven compile steps one angular related code using angular node typings andone core functionality npm node import", "d": "12/2015"}, {"body": "xstof think patient typescript business get stable far know something pipeline plus another development typings business called typings alternative tsd understand fix issues nt chance give tool try nt really know get started confused", "d": "12/2015"}, {"body": "hi tried typings week nicely solves duplicate definition errors could see downloads definitions external modules compile root project module declarations process typings defined clutter global namespace unless explicitly require typing wo nt bother really neat", "d": "12/2015"}, {"body": "demurgos would mind sharing setup", "d": "12/2015"}, {"body": "rolandjitsu sure clean project ready tomorrow", "d": "12/2015"}, {"body": "sorry folks wait fix sure though fact reexporting typings forcing versions onto angular apps right", "d": "12/2015"}, {"body": "beta getting closer nice christmas gift geeks", "d": "12/2015"}, {"body": "kudos team dec sebastien notifications githubcom wrote beta getting closer nice christmas gift geeks reply email directly view github", "d": "12/2015"}, {"body": "second one kudos team", "d": "12/2015"}, {"body": "commit project introduction dependency commit causes duplicate identifier error", "d": "12/2015"}, {"body": "fix end year thu dec pm ge yang notifications githubcom wrote commit project introduction dependency commit causes duplicate identifier error escherpadluna reply email directly view github", "d": "12/2015"}, {"body": "change get fixed till end year", "d": "12/2015"}, {"body": "demurgos chance getting setup github gist please thanks", "d": "12/2015"}, {"body": "yes might future got dependencies mostly zone rxjs undergoing rapid changes want sure users got combination dependencies works ca nt lean semver libraries version strong guarantees breaking changes short soon things stable relaxing dependency constraints unfortunately ca nt happen", "d": "12/2015"}, {"body": "check changelog", "d": "12/2015"}, {"body": "yes dashcase gone directives casesensitive see", "d": "12/2015"}, {"body": "yes agree angular provide typings bundle cases like indeed working typescript team bundling option compiler referenced met month ago describe requirements using intend wait available solving issue rather hack around brittle regexes dtsgenerator also chatted blakeembrey maintains githubcomtypings tool need investigate creates synthetic external modules see helps", "d": "12/2015"}, {"body": "alexeagle quickly way bundles actually similar except expanded support module resolution also fixed bugs strips references source files ambiguous dependency context regexes using typescript compiler parse resolve result", "d": "12/2015"}, {"body": "exactly pb", "d": "12/2015"}, {"body": "inherited design", "d": "12/2015"}, {"body": "possible fix", "d": "12/2015"}, {"body": "value field internal users controlgroup controlarray able reset value directly control class method could extend control instead extending abstractcontrol also consider making value protected", "d": "12/2015"}, {"body": "initially thought extending control overkill way update model immutable data quite different way control tried add extra logic extending control calling relevant update methods initially tried make fields protected fine typescript dart compiler threw agree value private general possible extend control rather abstractcontrol looks like case need change api thanks", "d": "12/2015"}, {"body": "wkwiatek add routerproviders bootstrap", "d": "12/2015"}, {"body": "brandonroberts sure code works modern browsers even problem", "d": "12/2015"}, {"body": "wkwiatek isolate one causes error try adding routeroutlet instead routerdirectives commenting routeconfig", "d": "12/2015"}, {"body": "instead gives error commenting gives clean console output nothing really happens", "d": "12/2015"}, {"body": "wkwiatek put example plunker jsfiddlejsbin help take look problem quicker thanks", "d": "12/2015"}, {"body": "really basic config put", "d": "12/2015"}, {"body": "ok error thread gone new one comes", "d": "12/2015"}, {"body": "similar investigate cc igorminar", "d": "12/2015"}, {"body": "vicb nt think related issue linked see comment carreraphp could please prepare plunker reproduces issue please use latest version today", "d": "12/2015"}, {"body": "pkozlowskiopensource unable reproduce issue plunker based without listwrapper however issue happening within nested listwrapperforeachwithindex callback method callback getting properties class part closure", "d": "12/2015"}, {"body": "unable reproduce issue plunker based without listwrapper carreraphp check send plunk reproduction scenario ca nt confirm fix bug ca nt see reproduction scenario case private api nt using", "d": "12/2015"}, {"body": "pkozlowskiopensource recently started learning nt understood aspects api plunk url based customevent working fine propertiesmethods class undefined available part closure within callback listwrapper foreachwithindex", "d": "12/2015"}, {"body": "carreraphp really js question means javascript question short want preserve lexical scope use fat arrow function instead regular function nothing end hey really use private api one terribly useful outside internals tbh", "d": "12/2015"}, {"body": "thanks pawel", "d": "12/2015"}, {"body": "pkozlowskiopensource thank much explaining amp sorry wrongly reporting issue", "d": "12/2015"}, {"body": "thanks reporting soon offline template compiler make html minification obsolete tbosch vicb", "d": "12/2015"}, {"body": "robwormald pointed issue nt happen typescript typescript nt need rush cut new alpha updating typescript people resolve issue locally", "d": "12/2015"}, {"body": "igorminar issue types introduced ts supported syntax looking code base seems location types angular code base change sufficient documentation breaking change try think could mitigate issues like future sorry trouble", "d": "12/2015"}, {"body": "ok thanks thu dec mohamed hegazy notifications githubcom wrote igorminar issue types introduced ts supported syntax looking code base seems location types angular code base change sufficient documentation breaking change try think could mitigate issues like future sorry trouble reply email directly view github", "d": "12/2015"}, {"body": "looks like bug take look thanks", "d": "12/2015"}, {"body": "think vsavkin working", "d": "12/2015"}, {"body": "think fixed commit", "d": "12/2015"}, {"body": "yup fixed", "d": "12/2015"}, {"body": "mgechev new feature typescript", "d": "12/2015"}, {"body": "ups sorry mistake", "d": "12/2015"}, {"body": "stress", "d": "12/2015"}, {"body": "definitively todo list waiting till done reshuffling bundles content", "d": "12/2015"}, {"body": "broke subtasks pkozlowskiopensource please take care monday", "d": "12/2015"}, {"body": "igorminar see split tables repeat columns would format usage ptal", "d": "12/2015"}, {"body": "related issue", "d": "12/2015"}, {"body": "yeh number inconsistencies especially comes systemregister bundles bundle list growing organically nt share config build pipeline work list couple items need discussion equal comes content make name look like differ format prefixed testingjs contains plus testing testing stuff without anything core systemregister bundles additive umd", "d": "12/2015"}, {"body": "put webworker aside left items equal comes content make name look like differ format prefixed bundles variant others nt seems bit random let tackle onebyone", "d": "12/2015"}, {"body": "equal comes content make name look like differ format true much barrels", "d": "12/2015"}, {"body": "prefixed testingjs right prefix since umd bundle contains testing go previous item name think would", "d": "12/2015"}, {"body": "bundles dev variant others nt seems bit random bundles nt dev variant putting webworkers aside dev prod nt come play bundling code actually one imo actionable item could rename testingjs testingdevjs", "d": "12/2015"}, {"body": "summary proposal actionable items rename sound", "d": "12/2015"}, {"body": "yup", "d": "12/2015"}, {"body": "maybe added also core mean current thinking users need include polyfills older browsers nt want penalize users modern browsers", "d": "12/2015"}, {"body": "quite strange see something like tests library know tests work real app nt see point curious whether stated somewhere docs currently mention", "d": "12/2015"}, {"body": "quite strange see something like tests library know tests work real app nt nt pollyfils part library really got tests minimal polyffil makes tests pass words things used framework really nt want least much business choosing polyfills users depend browser etc said think section docs ie compatibility wardbell wdyt", "d": "12/2015"}, {"body": "think nothing pain probably right priorities supersede yes", "d": "12/2015"}, {"body": "wkwiatek presume nt property try confirm later would need polyffil sure want workaround framework seen", "d": "12/2015"}, {"body": "pkozlowskiopensource yes attribute like introduced wondering preferable way showinghiding elements crossbrowser compatible mean successor one one would vote polyfill angular", "d": "12/2015"}, {"body": "yes attribute like hidden introduced wkwiatek means binding property attribute need check property exists probably since attribute", "d": "12/2015"}, {"body": "neither property attribute exists", "d": "12/2015"}, {"body": "nt much web development older browsers nt heard yet attributes need exist element order set ca nt arbitrary custom attributes added elements angular treats attribute special special older browsers", "d": "12/2015"}, {"body": "zoechi means binding property attribute yes property must exist like member class trying use course could add remove hidden attribute wo nt change much browser aware nt implement logic show hide stuff based presence attribute", "d": "12/2015"}, {"body": "wondering preferable way showinghiding elements crossbrowser compatible would say", "d": "12/2015"}, {"body": "kegluneq please take look", "d": "12/2015"}, {"body": "sorry pass transformer know anything content stylesheets outputs whatever passed looks like output", "d": "12/2015"}, {"body": "tried dart dart example works dartium well chrome via following open avoivo could please try steps new temporary folder sure reproduction case works btw tested macosx os using", "d": "12/2015"}, {"body": "tbosch tried different pc windows also getting errors os using pcs windows also new info helpfull chage css file transformer executes without error seems newline character responsible errors getting", "d": "12/2015"}, {"body": "description output file seems like n escaped output file r rewind start line kegluneq test rn correctly handle transformer writer", "d": "12/2015"}, {"body": "nt think explicit test let take look", "d": "12/2015"}, {"body": "stylecodegen calls compilerutilts escape incoming style strings util escape r characters dart could pass incoming css lines linesplitter avoid dealing newlines altogether sure equivalent would ts tested along util", "d": "12/2015"}, {"body": "hmm everything works fine see plunk", "d": "12/2015"}, {"body": "plunker works building locally nt problem build process somewhere mins later okay using base couple tweaks unlikely version reality accidentally removed list packages bundle silently broke features others angular currently missing dependencybundling smarts since specific problem longer relevant go ahead close alexpods thanks time", "d": "12/2015"}, {"body": "dup", "d": "12/2015"}, {"body": "closing favor", "d": "12/2015"}, {"body": "oh dear really need optional peer dependencies npm otherwise list deps growing people needed carrying gestures like need npminstall stuff", "d": "12/2015"}, {"body": "click button disabled back forth see class nt get added could please precise expected behavior mean class nt see buggy behavior browser testing", "d": "12/2015"}, {"body": "sorry referrring piece code piece different original official plunk ngclass click check box disabled get class button disabled hassuccess hasfeedback element however click click button get button active haserror hasfeedback missing testing chrome", "d": "12/2015"}, {"body": "oh see thnx looks like legit bug corner case well sure able resolve beta unless someone community wants step", "d": "12/2015"}, {"body": "actually thinking nt think fix one understand plunk correctly talking following usecase kind saying want class time obviously nt make sense order class addition removal lead different results something deterministic guess need change code sth like closing nt think fix way would make sense everyone would happy someone prove otherwise", "d": "12/2015"}, {"body": "sure understand saying first plunk case condition condition two totally independent variable ison isdisabled even condition ngclass foo bar condition foo baz condition certainly angular bother left side specs state object key corresponds css class name values interpreted expressions evaluating boolean given expression evaluates true corresponding css class added otherwise removed string left outputed reference thought maybe unlike perhaps multiple class name left might supported also produce error perfectly fine language intepret something like condition output foo bar else condition output foo baz background optimization angular simply decide would output foo incorrect nt respect current documentationspecification nt make sense language interpret program trying follow language specification case understand correctly output string expression evaluates true irrelevant string missing something", "d": "12/2015"}, {"body": "object key corresponds css class name values interpreted expressions evaluating boolean given expression evaluates true corresponding css class added otherwise removed order js objects", "d": "12/2015"}, {"body": "sure order problem order incorrect foo bar bar foo problem foo explain order reference", "d": "12/2015"}, {"body": "sorry ca nt check comments right reopened look coming day", "d": "12/2015"}, {"body": "seem missing crucial part functionality removing added classes expression evaluates broken evaluates add classes evaluates remove classes evaluates add classes evaluates remove classes way keep track classes added element classlist added purpose applies rules knows thus whenever change values rules trigger resulting following sequence events simplified way classes get added due classes get removed due result gets added removed therefore wo nt present element rules applied reverse order ie first would present would nt present order matters pkozlowskiopensource mentioned guarantee wrt order object properties iterated implementation specific may defer browsersversion etc order avoid unexpected behavior good practice always manipulated class one rule eg suggested", "d": "12/2015"}, {"body": "gkalpak thanks explanation clear sorry hard understanding one drive point home remove perhaps could change documentation clearer modified version showing exactly implication remove part reality actually powerful standard add implementation never realized close thanks", "d": "12/2015"}, {"body": "gkalpak thnx putting writing details come back issue saw perfect explanation", "d": "12/2015"}, {"body": "believe rkirov picked rado consider corejs could consider coverage actually need payload size development activity project maturity", "d": "12/2015"}, {"body": "used zonejslibmicrotaskts includes promise polyfill allows custom builds also asked could include reflect metadata support wo nt need many polyfills typescript polyfills import corejs reflect import zonejslibbrowserzonemicrotask import zonejslibbrowserlongstacktracezone libs import component import bootstrap component selector app template class app bootstrap app", "d": "12/2015"}, {"body": "denis maintainer added experimental reflect metadata features master via issue thing needs happen make sure zonejs microtasks works since also provide async polyfills", "d": "12/2015"}, {"body": "updated places could find toh merged yet", "d": "12/2015"}, {"body": "johnpapa wardbell fixed docs rest fixed", "d": "12/2015"}, {"body": "case refer exportas form exportas ngform listed breaking change changelog formatting improved though", "d": "12/2015"}, {"body": "man nt honest must read right", "d": "12/2015"}, {"body": "map see", "d": "12/2015"}, {"body": "unfortunately easy vs seems options use webpack another bundler access nodemodules seen ca nt access nodemodules directly anymore use cdn last cdn quick look dated look sleep case use webpack bundle installed dep imported error wp still map found", "d": "12/2015"}, {"body": "tenowg able get map filter working webpack incidentally nt work catch commented catches http implementation share feelings one great work general nt see importing individual operators rx makes sense like importing filter underscore every time need use especially way rx exports makes nontrivial set imports angular team longterm ie productionready loader agnostic plan loading rx operators", "d": "12/2015"}, {"body": "issue open people could keep eye importing extra operators work long term robwormald", "d": "12/2015"}, {"body": "issue precisely easiest way currently alpha get ongoing discussion", "d": "12/2015"}, {"body": "like importing filter underscore every time need use incidentally exactly lodash", "d": "12/2015"}, {"body": "generally change log contains breaking changes however another good resource see breakage new release source code playground also find unit tests serve good documentation certain cases", "d": "12/2015"}, {"body": "tbosch think ie change parser error els closed", "d": "12/2015"}, {"body": "yes compile time errors always better bugs found qa prod", "d": "12/2015"}, {"body": "major effort though already big internal code base nt strong opinion either throwing throwing", "d": "12/2015"}, {"body": "using install separately temporary things fixed properly", "d": "12/2015"}, {"body": "using latest version node npm fixed wanted report nt reported yet", "d": "12/2015"}, {"body": "breaking change see nt make changelog unfortunately", "d": "12/2015"}, {"body": "pkozlowskiopensource great required separate deps bad make changelog topic things make changelog aware", "d": "12/2015"}, {"body": "great required separate deps bad make changelog changelog updated via", "d": "12/2015"}, {"body": "due ngrepeat rendering model animation transition issue hard say since definitively enough details reproduce see bug submission guidelines said sounds like using angular repo angular resides please go submission guidelines opening issues", "d": "12/2015"}, {"body": "kylecordes try path fwiw example working", "d": "12/2015"}, {"body": "ericmartinezr spot always thnx much helping issues answerring questions gitter ericmartinezr much appreciated", "d": "12/2015"}, {"body": "thanks name seems rather verbose intended final name temporary alpha issues worked", "d": "12/2015"}, {"body": "confirmed well also reported angulario", "d": "12/2015"}, {"body": "yes case least typescript edition import upgrade loading going change", "d": "12/2015"}, {"body": "teropa resolve issue would go away bundle since nt publish part systemregister bundle pretty much would nt able load systemjs unless create separate bundle course guess main question want ngupgrade users use systemjs typescript need either keep part bundle big fan adds bytes everyone publish separate bundle", "d": "12/2015"}, {"body": "upgrade also published separate system register bundle solve wed dec tero parviainen notifications githubcom wrote yes case least typescript edition import upgrade loading going change reply email directly view github", "d": "12/2015"}, {"body": "vote publishing separate bundle", "d": "12/2015"}, {"body": "like idea", "d": "12/2015"}, {"body": "ok separate bundle need cleanup dependencies first quick look seems like imports cycles", "d": "12/2015"}, {"body": "covered", "d": "12/2015"}, {"body": "alpha uses rxjs alpha map make sure add config necessary systemconfig", "d": "12/2015"}, {"body": "thank makes sense", "d": "12/2015"}, {"body": "theory need minimal part angular ui bundle looks like everything getting pulled nt looked pulling much though investigate later week early next week wed dec pawel kozlowski notifications githubcom wrote today webworkerrelated bundles systemregister format respective size gzipped uidevjs bytes workerdevjs comment uidevjs currently script intended run standalone ui thread without also loading idea uidevjs contain parts absolutely necessary loaded ui workerdevjs contain everything need worker thread nothing ca nt loaded worker based uidevjs quite minimal practice size close entire bundle bytes could please verify indeed add minimal part maybe bundles optimized already cc igorminar decide need reply email directly view github", "d": "12/2015"}, {"body": "simple sanity check test run eg describe stuff gt work gt expect true equal true", "d": "12/2015"}, {"body": "robwormald thanks quick reply yes sanity check tests run updated spec js import component import describe expect injectasync testcomponentbuilder component template class testcomponent describe injectasync function wait promise fail wrong assertion injectasync testcomponentbuilder tcb gt return tcb createasync testcomponent gt expect true toequal false describe stuff gt work gt expect true toequal true fail gt expect true toequal false output one two wrong assertions fails async assertion missed", "d": "12/2015"}, {"body": "okay seems problem following test fails expected js import describe expect inject describe inject function wait promise fail wrong assertion inject gt return new promise resolve gt expect true toequal false resolve maybe problem stacktrace logged suggestions retrieving stack trace async function quite new typescript", "d": "12/2015"}, {"body": "think related since alpha tests also seem kind synchronisation error tests nt get executed others get wrong injections", "d": "12/2015"}, {"body": "info deprecated simply use becomes useless sometime info test fyi migrated hundred tests major issues", "d": "12/2015"}, {"body": "cexbrayat try solve one", "d": "12/2015"}, {"body": "broken right override template test", "d": "12/2015"}, {"body": "copied specs plunker async test failing assume something project setup", "d": "12/2015"}, {"body": "wanted show error plunker running plunker async nt fail either ca nt really reproduce error could caused another spec also happens run example without specs", "d": "12/2015"}, {"body": "goodfield sorry nt put correctly added call ran expected plunker copied spec one project time ran created repo jspm config used whole lifecycle issue seems general chained promise callback get called", "d": "12/2015"}, {"body": "upgraded works also followed jspm cheat sheet fresh configuration without babel ts plugin", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "nice", "d": "12/2015"}, {"body": "upgrade angulario project use see", "d": "12/2015"}, {"body": "thanks wed dec pete bacon darwin notifications githubcom wrote upgrade angulario project use see angularangulario reply email directly view github", "d": "12/2015"}, {"body": "new type errors discovered upgrade x type selectormatcher assignable type x type selectormatcher assignable type x type selectormatcher assignable type x type injector assignable type x type injector assignable type x type injector assignable type x type injector assignable type x type elementinjector assignable type x blockscoped variable event used declaration x blockscoped variable mouseevent used declaration x blockscoped variable keyboardevent used declaration x blockscoped variable eventtarget used declaration x blockscoped variable history used declaration x blockscoped variable location used declaration x blockscoped variable eventlistener used declaration x type router assignable type x type router assignable type", "d": "12/2015"}, {"body": "fixed", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "let call even though contains zone hope zone become polyfill future technically things polyfills others prolyfills need put single bundle bundle called something properly represents content closest thing far concerned", "d": "12/2015"}, {"body": "pipes pure functions default see stateful pipes", "d": "12/2015"}, {"body": "well right set pipe pure calls pipe transform function frequently freezes application pipe want use simple function sort array like filter orderby worked way need suggest", "d": "12/2015"}, {"body": "look directive see efficiently react array entry changes", "d": "12/2015"}, {"body": "quite sure mean want simply order items array property objects array like example imagine class text property id list texts array array printed ngfor want final list sorted according ids texts text id first last id text changes want reorder list achieve", "d": "12/2015"}, {"body": "ways involving stateful pipe mark pipe nonpure pipe would easy implement would fire change detection turn efficient want resort array reference array changes content array changes need create stateful pipe would return sorted array use ngfor efficiently detect changes array need help implementations details please ask support questions dedicated support channel works best want keep github issues bug reports future requests thnx", "d": "12/2015"}, {"body": "one blocker probably discuss tests got tests checks public api trouble test uses entry point checks discussed yesterday vsavkin idea perbarrel checks instead imo resolve one sooner later currently blocking point removal bundles reshaping", "d": "12/2015"}, {"body": "yes per barel checks thu dec pawel kozlowski notifications githubcom wrote one blocker probably discuss tests weve got tests checks public api trouble test uses entry point checks discussed yesterday vsavkin idea perbarrel checks instead imo resolve one sooner later currently blocking point removal bundles reshaping reply email directly view github", "d": "12/2015"}, {"body": "looks like dgeni side things sorted", "d": "12/2015"}, {"body": "working opened separate issue knew one existed", "d": "12/2015"}, {"body": "could add main corejs typings coredts well makes work nicely", "d": "12/2015"}, {"body": "opened pr barrel testing inside publicspec", "d": "12/2015"}, {"body": "dup", "d": "12/2015"}, {"body": "call least case stop bubbling hence observed behavior means browser default action like checking input navigating normal event still bubbles", "d": "12/2015"}, {"body": "assignment operator already supported", "d": "12/2015"}, {"body": "fan imperative code jstsdart templates angular allowed way many things templates saw people abuse left right allow proper discussion like part", "d": "12/2015"}, {"body": "nt disagree already support lot js syntax including assignment hard explain one nt ok etc legit case wanted keep catenating string property user clicked demo deny pleasure already hohum bad form sure worse already support", "d": "12/2015"}, {"body": "vicb say idiot c sim haunting removed title", "d": "12/2015"}, {"body": "cringe fact already support assignment operators idempotent view world makes suitable template bindings", "d": "12/2015"}, {"body": "support removing assignment btw allowed event bindings could put stop mutators welll push x losing battle might well forestall inevitable questions ok nt", "d": "12/2015"}, {"body": "experience field inlined script snippets templates abused way often ca nt think scenario ca nt solve backing model fieldfunction maybe time lay law remove support would automatic win code quality", "d": "12/2015"}, {"body": "disagreeing say nt half pregnant moment", "d": "12/2015"}, {"body": "support et would also probably makes sense support assignment operators may least", "d": "12/2015"}, {"body": "hey pcroc already using style latter one styling directly using classes", "d": "12/2015"}, {"body": "actually logged issue problem earlier morning appears personal lack understanding shadowdom rather real issue think might opportunity documentation fill gaphelp provide people new shadowdom guidance", "d": "12/2015"}, {"body": "guess want nt know related documentation angular start find information css variables shady dom polymer though therefore parts document nt apply angular", "d": "12/2015"}, {"body": "zoechi thanks help figured missing something probably lack understanding shadow dom able make change suggested works would expected wardbell pascalprecht know two hard work documentation much appreciated btw something guys seen others challenged think might worth adding something documentation guessing others like new shadow dom might benefit guidancebest practices starting styling angular components thoughts", "d": "12/2015"}, {"body": "closing since nt seem issue works shadow dom intended work", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "export srcplatformdomdomadapter export srcplatformdomeventseventmanager remove include platformcommondom instead", "d": "12/2015"}, {"body": "export urlresolver approoturl compiler actually know say remove anyone needs include whole compiler instead", "d": "12/2015"}, {"body": "fixed via", "d": "12/2015"}, {"body": "error reproduced", "d": "12/2015"}, {"body": "goodfield impressive investigation work thanks making issue clearer", "d": "12/2015"}, {"body": "goodfield tests still failing later", "d": "12/2015"}, {"body": "yes even beta problem still got attention", "d": "12/2015"}, {"body": "might check repo angularconnect", "d": "12/2015"}, {"body": "hi sateffen duplicate duplicate corrected master next release apologies inconvenience", "d": "12/2015"}, {"body": "dupe fixed", "d": "12/2015"}, {"body": "duplicate fixed upstream moment workaround using webpack like apologies inconvenience", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "vicb tried using typescript complains error arraylike found using dts file definitelytyped wondering need special dts file make typescript working", "d": "12/2015"}, {"body": "thelgevold check issue corresponding design doc", "d": "12/2015"}, {"body": "ok design doc makes several good points decoupling app runtime environment great approach guess nt think step towards generic bootstrapping fully support", "d": "12/2015"}, {"body": "hi english fine nt worry much like idea something discussed also matches nicely observing view events observable child events parents important remember everybody want use observables people missing must provide options use cases unlikely make directly observable think something like might work discussion ship beta interesting features think meantime basic experimental real implementation idea conceptually thinking", "d": "12/2015"}, {"body": "think bad idea change input properties child component input properties readonly data always flow parent child never reverse direction", "d": "12/2015"}, {"body": "alexpods believe idea exactly listening change input properties observable emitting values upstream absolutely fine far concerned", "d": "12/2015"}, {"body": "robwormald english fine nt worry thank relieved want also breaking changes think good solution", "d": "12/2015"}, {"body": "alexpods listening change input properties observable emitting values upstream absolutely fine far concerned think way rob", "d": "12/2015"}, {"body": "ooh sorry misunderstanding phrase input property changed child component confused", "d": "12/2015"}, {"body": "already got pr progress take care update", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "ref", "d": "12/2015"}, {"body": "hey settrend would mind opening issue think belongs despite think valid point", "d": "12/2015"}, {"body": "oops sure course sorry using wrong target blush", "d": "12/2015"}, {"body": "probs thanks reporting", "d": "12/2015"}, {"body": "add explicit ctor ad di walk hierarchy", "d": "12/2015"}, {"body": "ok thank known improvement come supposed stay", "d": "12/2015"}, {"body": "vsavkin mon dec pm benjamin roth notifications githubcom wrote ok thank known improvement come supposed stay reply email directly view github", "d": "12/2015"}, {"body": "matanlurey inject router subscribe changes inject router export class navigationcomponent private currentview string", "d": "12/2015"}, {"body": "works route changes get current view without subscribing", "d": "12/2015"}, {"body": "matanlurey could use location get current path js export class navigationcomponent private path string want see route instruction", "d": "12/2015"}, {"body": "settled good enough thanks", "d": "12/2015"}, {"body": "kind reasonable since refactor nt impact functionality seen user case framework users perhaps commit reflect even change user point view", "d": "12/2015"}, {"body": "kind reasonable since refactor nt impact functionality seen user case framework users angular reality though refactors almost always kind userimpacting change breaking think contributors think fix think solution obvious bug think refactor usually either improve performance developer experience like lifecycle hook refactor nt response bug potential problem current design recent refactor mostly performance improvement byte reduction upcoming kebabcase refactor perhaps commit reflect even change agreed", "d": "12/2015"}, {"body": "concrete example really also breaking change labelled fix", "d": "12/2015"}, {"body": "think probably better solution problem would include commit breaking change", "d": "12/2015"}, {"body": "think probably better solution problem would include commit breaking change", "d": "12/2015"}, {"body": "pkozlowskiopensource vicb pr ready considered changing angular preset upstream conventionalchangelog repo sure problem general enough others would want though ajoslin think worth adding logic angular preset conventionalchangelog would include commit contains note regardless type", "d": "12/2015"}, {"body": "sounds reasonable stevemao currently maintaining conventionalchangelog steve think", "d": "12/2015"}, {"body": "sounds good called angular preset follow whatever angular", "d": "12/2015"}, {"body": "hard say going without proper repro case could attach plunker describe expected vs actual behavior", "d": "12/2015"}, {"body": "vicb longer issue alpha closing thank", "d": "12/2015"}, {"body": "thanks reporting wed dec tbragaf notifications githubcom wrote closed reply email directly view github", "d": "12/2015"}, {"body": "alpha nt import observable rxjsobservable related", "d": "12/2015"}, {"body": "robwormald working updating changelog breaking changes slipped past script", "d": "12/2015"}, {"body": "closed via", "d": "12/2015"}, {"body": "robwormald working updating changelog breaking changes slipped past script", "d": "12/2015"}, {"body": "usually issue older version npm using third party npm registry brendonco check version using compare", "d": "12/2015"}, {"body": "let check later npm version using", "d": "12/2015"}, {"body": "brendonco date path install", "d": "12/2015"}, {"body": "robwormald tried new machine install node seems work list versions moduels", "d": "12/2015"}, {"body": "proposal use bundles ngupgrade users include following barrels common core instrumentation platformbrowser upgrade router means dropping zone reflectmetadata barrels loaded externaldependencies drop mode broken today anyway add prod mode source maps min open questions export namespace leaning towards using everything make life easier ngupgrage users", "d": "12/2015"}, {"body": "exporting namespaces window objects easiest way interop different module loaders particular using sfx bundle shim closures module loader like googprovide windowng proposal sounds good removing platform deps still need better name externaldependencies adding min output sfx bundle moving ngrouter ngrouter also propose moving away name sfx since custom systemjs consumer nt need know suggest either global export bundle bundle also nt see problem lives", "d": "12/2015"}, {"body": "also nt see problem noconflict router lives ngrouter would nt proper cjs bundle matters saying would bundle global format umd format", "d": "12/2015"}, {"body": "pkozlowskiopensource proposal except namespaces think preserve namespaces reexport via namespace commonly needed stuff used defining components directives pipes services via chained dsl handful symbols document reexported bundles convenience", "d": "12/2015"}, {"body": "ca nt overlay namespaces onto window objects import core import di import router windowng windowngcore core windowngdi di windowngrouter router etc concerned exactly symbols live long separated mapped back notions modules accessible windowfoobar without referencing particular module loader shim", "d": "12/2015"}, {"body": "ca nt overlay namespaces onto window objects exact plan names ng follow structure barrels", "d": "12/2015"}, {"body": "proposal javascript import core core import common common import platformbrowser platformbrowser import instrumentation instrumentation import http import router router import upgrade upgrade export core common instrumentation router upgrade export var platform browser platformbrowser get bundled umd bundle used global var name rkirov got specific needs comments please let know", "d": "12/2015"}, {"body": "fyi implemented suggested type code one would write application javascript var mycomponent ngcorecomponent selector myapp template hello name say hello class constructor function thisname world igorminar chaining actually works fine might want skip part reexport via ng namespace commonly needed stuff used defining components directives pipes services via chained dsl handful symbols document reexported bundles convenience preparing pr", "d": "12/2015"}, {"body": "lgtm tue dec pawel kozlowski notifications githubcom wrote fyi implemented suggested type code one would write application var mycomponent ngcorecomponent selector myapp template hello name say hello class constructor function thisname world igorminar chaining actually works fine might want skip part reexport via ng namespace commonly needed stuff used defining components directives pipes services via chained dsl handful symbols document reexported bundles convenience preparing pr reply email directly view github", "d": "12/2015"}, {"body": "source void element closed indeed saying correct see also", "d": "12/2015"}, {"body": "shouldcould related", "d": "12/2015"}, {"body": "also reproduced migrating newest angular alpha thats", "d": "12/2015"}, {"body": "issue using alpha import well", "d": "12/2015"}, {"body": "closing dupe tl dr operator available observable prototype need import automatically patch operator appts note rxjs path change still wip evolving quickly", "d": "12/2015"}, {"body": "introduced forof statement take look see difference given angular iterates values collections forof actually good choice malediction linked fact one rewrite history repurpose forin statement javascript make loop values rather keys", "d": "12/2015"}, {"body": "dsebastien said tl dr javascript var foos b c var foo foos consolelog foo b c var foo foos consolelog foo see also discussion", "d": "12/2015"}, {"body": "see thanks pointers guess bowing javascript using dart angular js probably wind committing error several times day", "d": "12/2015"}, {"body": "understand might time update angulario site immediately like case hero form reference old form maybe tie together someway keep track side note beside looking commits way find non backward compatible commit one could perhaps add label issue commits could somehow easily extract list alpha release thanks", "d": "12/2015"}, {"body": "side note beside looking commits way find non backward compatible commit one see pay attention breaking changes section", "d": "12/2015"}, {"body": "great thanks exactly looking obvious place", "d": "12/2015"}, {"body": "subsequent task update angulario somewhere else well ca nt see", "d": "12/2015"}, {"body": "someone mark one opened duplicate thanks", "d": "12/2015"}, {"body": "case check", "d": "12/2015"}, {"body": "obvious culprit anything directly related svg support rather way angular processes templates changed quite radically last weeks formerly browser provided muscle parse html template done javascript code angular couple rough edges another item change slightly fix rough edges suspect would find inspecting dom svg alpha getting different dom shape", "d": "12/2015"}, {"body": "nt front remember correctly dom structure similar computed attribute element like widthheightetc definitely different tried make simpler test code without svg nt think understand enough internals reasonable amount time", "d": "12/2015"}, {"body": "believe fix issue", "d": "12/2015"}, {"body": "merged master released yet", "d": "12/2015"}, {"body": "great tested latest beta confirm fixed issue well thanks", "d": "12/2015"}, {"body": "kind consideration mean", "d": "12/2015"}, {"body": "original poster obvious consideration would esn actually adopts gt function chaining operator extend angular expression syntax already something similar function also accept new operator synonym one downside would confuse angular expression javascript expressions similar appearance nt quite semantics making syntax ever similar could step wrong direction", "d": "12/2015"}, {"body": "original poster obvious consideration would esn actually adopts gt function chaining operator extend angular expression syntax already something similar function also accept new operator synonym really obvious tbh thought consider using language feature inside angular wait ts implement first think", "d": "12/2015"}, {"body": "looks like compatible either folder line calls", "d": "12/2015"}, {"body": "import line supposed reference line", "d": "12/2015"}, {"body": "pretty simple reproduce issue create new directory init empty npm repository enter enter add simple indexhtml maints import bootstrap import appcomponent app bootstrap appcomponent appts import component component selector setmanagerpro template export class appcomponent public title string first angular app configjs systemjs config systemconfig baseurl defaultjsextensions true transpiler typescript typescriptoptions module commonjs emitdecoratormetadata true paths npm jspmpackagesnpm github jspmpackagesgithub packages app main main defaultextension ts map app source maps configured jspm", "d": "12/2015"}, {"body": "crud yep lot churn two libs past couple days definitely locked jeffbcross done shifting things around rxjs moment think", "d": "12/2015"}, {"body": "thanks prompt action really excited direction things going angular", "d": "12/2015"}, {"body": "nt noticed error full day work bundles shipped npm module noted appears immediately trivial app using jspm experienced error testing alpha webpack maybe buildtest suite try runningbuilding couple example apps least couple tools often used purpose", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "change part reducing file size overall default rx dependency sat dec pm pablo deeleman notifications githubcom wrote reply email directly view github", "d": "12/2015"}, {"body": "also import need extra systemjs config well maybe best idea top ides like vsc also complain import existing ts compiler well using", "d": "12/2015"}, {"body": "thelgevold circumstances actually need various codes sitting running alpha using module get bundled loaded never need explicitly runtime systemjs development tools vscode problem letting call map pascalprecht actually wondering exact point one work going reduce rx dependency works successfully reduced hard compile time dependency nt think made nearly much impact actual semantic dependency think nontrivial annular programs end using bundlingshipping decent swath rx library code regardless whether angular directly encodes dependency", "d": "12/2015"}, {"body": "understanding load operators like map separately added observable returned pascalprecht sounds like good idea reduce bundle size nt adding back bytes rx module added run time part lazy loading strategy bootstrapping http seems fundamental apps though even make sense lazy load apps would probably need right away anyway", "d": "12/2015"}, {"body": "based reading gitter places approach seems still flux think sit wait solution", "d": "12/2015"}, {"body": "agree waiting alpha following might useful anyone else comes along reads issue resolution difference pointed could use without extra import import seems necessary make map available prototype behavior pointed happens use systemjs bundles ship angular npm package package includesloads map somewhere landing prototype making work instead using angular without bundle regardless whether using jspmsystem js webpack observe need explicitly load map think many people coming development space find behavior surprising", "d": "12/2015"}, {"body": "thelgevold wondering nt bit clunky unnecessary bit clunky yeah working ways make less clunky add common operators still maintaining minimal core also need better document ended implementation background moving bare angular twofold modularity goal new rxjs project start nt recently started really getting serious composing operators instead relying tiered distributions rx current state js language without nice features like function bind nt elegant way importing operators adhoc using lefttoright fashion ie function binding vs function binding syntax sugar already possible use babel hopefully come soon typescript waiting consensus want angular core api surface tiny possible bytesensitive applications make choices optional dependencies want bring idea proportion applications use features rx use simple async delivery mechanism absence smart dead code removal tools err minimal side worked typescript team determine current solution create modules rxjs imported automatically patch operator onto prototype future versions typescript support reopening types using approach would show imported operators available methods wherever used reveal dependency rxjs like nt goal hiding dependency rx would require lot duplication effort terms documentation support ps listed breaking change change log robwormald fixing seems script nt pick change commit opened track rx visible angular provide map etc via http module ca nt use rxjs directly module produces dependency reason use rxjs directly apps fact declared peer dependency ensure angular applications use version rolandjitsu top ides like vsc also complain import existing ts compiler well using moduleresolution node issue go away right going work better api docs closing compose", "d": "12/2015"}, {"body": "thelgevold answer nt adding back bytes rx module added run time question real goal strategy allows import operators using without bringing full rx includes", "d": "12/2015"}, {"body": "robwormald think makes sense point lazy loading may hit point diminishing returns commonly used parts one example ever case someone would make http call make use map", "d": "12/2015"}, {"body": "thanks jeffbcross robwormald taking time address write detailed explanation", "d": "12/2015"}, {"body": "jeffbcross said currently erring conservative side easier ask developers slightly explicit remove requirement future deemed unnecessary almost impossible opposite code written also believe function bind importing operators file right way deal try use semigreat workarounds", "d": "12/2015"}, {"body": "yeah probably good approach things considered currently import extra operators root module hides pain downstream components", "d": "12/2015"}, {"body": "purpose sort nt want ship part http distro available check cexbrayat", "d": "12/2015"}, {"body": "right indeed works going definitive package let issue opened docs reference correct package maybe add breaking change release notes", "d": "12/2015"}, {"body": "cexbrayat mind opening issue doced added pr add changelog", "d": "12/2015"}, {"body": "talking internal reference code base", "d": "12/2015"}, {"body": "sigh pr welcome p", "d": "12/2015"}, {"body": "pb working", "d": "12/2015"}, {"body": "yep recognized one default behavior pollutes semantically correct table header markup therefore quickly breaks anticipated rendering thanks fixing", "d": "12/2015"}, {"body": "two way fix never explicitly add add parent ie fragment first solution would produce consistent result whether rows master template added fragment tbosch think", "d": "12/2015"}, {"body": "let way never add implicit parent parent element element", "d": "12/2015"}, {"body": "also experimenting issue tr thead wrapped tbdoy", "d": "12/2015"}, {"body": "nt happen alpha good", "d": "12/2015"}, {"body": "also looking solution validate password confirmation password within signup form using best practices upon investigation found javascript import directive provide import validator control ngvalidators directive selector equalto ngcontrol equalto ngformcontrol equalto ngmodel providers provide ngvalidators useexisting equaltovalidator multi true export class equaltovalidator implements validator validate c control key string consolelog cparentcontrols return false console see control group output could use evaluate works typescript compiler complaining thoughts", "d": "12/2015"}, {"body": "additional example javascript import directive provide input import validator control ngvalidators directive selector equalto ngcontrol equalto ngformcontrol equalto ngmodel providers provide ngvalidators useexisting equaltovalidator multi true export class equaltovalidator implements validator input equalto compareto string constructor validate c control key string var compare string cparentcontrols thiscompareto value compare cvalue return equal value cvalue compare compare possible make publicly accessible", "d": "12/2015"}, {"body": "considered wrapping two fields single validate equality plunk illustrates idea two fields password password confirmation wrapped custom validator requires controls group equal attached start typing password field error message appears next confirmation field values equal message hidden work could explain", "d": "12/2015"}, {"body": "solution work perhaps ngmodel nt appropriate registration form thanks terms extending validator class applications would control benefit access parent controlgroup reasoning keeping private", "d": "12/2015"}, {"body": "todoubaba nt know work worths shot npm cache clean option npm install option npm install latest option npm install angularangular buildsjs", "d": "12/2015"}, {"body": "ericmartinezr thanks works", "d": "12/2015"}, {"body": "got issue", "d": "12/2015"}, {"body": "guys add install nt know http module always far know one defaults one anyway make work get official answer note map like", "d": "12/2015"}, {"body": "wonder might import issue", "d": "12/2015"}, {"body": "add works right", "d": "12/2015"}, {"body": "todoubaba yes match paths names avoid confusions head lol put whatever want left important part right", "d": "12/2015"}, {"body": "still issue also add default extension packages", "d": "12/2015"}, {"body": "facing issue also using", "d": "12/2015"}, {"body": "issue typeerror function", "d": "12/2015"}, {"body": "playground ericmartinezr pointed need include operators going use like example dgwaldo system config look like use something like following", "d": "12/2015"}, {"body": "simplest syntax systemjs", "d": "12/2015"}, {"body": "robwormald rolandjitsu try config see rxjsoperatormapjs along needed rxjs dependencies loaded still getting error", "d": "12/2015"}, {"body": "note add import path brings self patching module", "d": "12/2015"}, {"body": "upgrading got issue issue fixed adding single line appts thanks robwormald", "d": "12/2015"}, {"body": "still seeing issue sure closed official fix robwormald stated", "d": "12/2015"}, {"body": "aaronksaunders yep works intended purposefully shipping operators come rxjs associated add favor allowing optin specific ones want longer term may include http module default moment optin till decide ones necessary ideally like obviate need map entirely use cases easiest thing whatever file either import adhoc really nt want mess want whole kitchen sink operators specific observables eg add note need use http every single file going use", "d": "12/2015"}, {"body": "thanks suggested added appts", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "asking much yes nt want users function provide http implementation could whole point di say hey need something implement http interface nt care exact implementation give one makes sense app fulfils interface app owner want control services used components brining nt want people give control use suggestion drop di altogether ca nt cake eat cake", "d": "12/2015"}, {"body": "think another thing users need realise never really instantiate service instance standalone thing always injector unless simply call something also use di injectors create components implies always instantiate service instantiating component pkozlowskiopensource said service simply asking something type whereas means really depends injectors knows token long story short ca nt providers services since services nt injector classes", "d": "12/2015"}, {"body": "well explaining implements di di work forget http say componenta following dependencies compa lt servicea lt serviceb lt servicec nt want compta know anything servicetb servicec write plunk illustrating issue", "d": "12/2015"}, {"body": "yfain confused providers components define things di provide minimal plunk clear exact usecase coupling see unnecessary", "d": "12/2015"}, {"body": "blesh like idea implement part", "d": "12/2015"}, {"body": "saw blesh make sense like selector mergemap pass req res selector eg", "d": "12/2015"}, {"body": "nt understand ca nt optimized away rx side", "d": "12/2015"}, {"body": "nt understand ca nt optimized away rx side nontrivial optimization also resultselector arguments common rxjs design would secondnature familiar library rxjsside optimization addressed would likely need know something source observable order collapse functionality one way another sort change would need made end", "d": "12/2015"}, {"body": "probably linked content text node hq alerts alerts everything normal alpha char codes alpha notice extra cr alpha probably related new parser investigate next week cc tbosch", "d": "12/2015"}, {"body": "clue might cr characters lf characters treated specially cr characters must converted lf characters lf characters immediately follow cr character must ignored thus newlines html doms represented lf characters never cr characters input tokenization stage related lf special handling", "d": "12/2015"}, {"body": "updated title issue better reflect bug one described previous message hard solve easy either want preserve source location parsing html ie simple find amp replace", "d": "12/2015"}, {"body": "actually think convert crlf cr cr lf preserving source position problem try pr soon", "d": "12/2015"}, {"body": "vicb created bundles branch replaces ones code seems fix issue thanks text node hq alerts alerts everything normal aligned header space template instances also gone", "d": "12/2015"}, {"body": "great thank much tested", "d": "12/2015"}, {"body": "thank fixing p", "d": "12/2015"}, {"body": "try switching script get information problem also check typescript compiler errors", "d": "12/2015"}, {"body": "looks like related open issue referencing convenience", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "ah found issue slipped eye first time looked code looks like angular searching url whereas angular searching guess matter whether leave change match angular looks like original intention called", "d": "12/2015"}, {"body": "thanks reporting btormey think change consistency", "d": "12/2015"}, {"body": "good catch honestly find makes technically sense", "d": "12/2015"}, {"body": "pascalprecht tend agree makes sense however sure worth changing exchange decreased consistency since arbitrary string token either way piece code still deserves look sure needed believe could achieve thing also seems like done request returns using something like oauth signature generated parameters get invalid signature every time since request signed request passed contains something like appears done angular correct interpreting wrong though", "d": "12/2015"}, {"body": "example flake manifesting", "d": "12/2015"}, {"body": "previous attempt fix guess nt work investigate around week", "d": "12/2015"}, {"body": "yeh saw today well", "d": "12/2015"}, {"body": "see every week past months", "d": "12/2015"}, {"body": "ca nt get fixed tomorrow disable test asap productivity lost big", "d": "12/2015"}, {"body": "hankduan ca nt wait tbosch please submit workaround tomorrow", "d": "12/2015"}, {"body": "ok created pr merged soon", "d": "12/2015"}, {"body": "see", "d": "12/2015"}, {"body": "canreuse canreuse deals case component would reinstantiated part navigation instance mycmp mycmp different route params router currently support something like directly motivation use", "d": "12/2015"}, {"body": "instance trying figure api behaved thanks clarifying file system like browser would folders ids file think canreuse may help", "d": "12/2015"}, {"body": "gotcha issue closed", "d": "12/2015"}, {"body": "yes", "d": "12/2015"}, {"body": "check issue", "d": "12/2015"}, {"body": "yes duplicate thnx ericmartinezr", "d": "12/2015"}, {"body": "thanks worked", "d": "12/2015"}, {"body": "also issue fixed first beta release", "d": "12/2015"}, {"body": "avoivo issue seems fixed latest release", "d": "12/2015"}, {"body": "thanx fixed", "d": "12/2015"}, {"body": "fixed master already watch next release", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "igorminar would good idea let users install missing typings mean see instance could issue included instance wanted compile code ts compiler would complain duplicate entries since typings already defined take example error get use also include typings though looks like might solution sorts blakeembrey looks promising hard time understanding set", "d": "12/2015"}, {"body": "topic rolandjitsu open issue questions would love clear anyone else trouble starting", "d": "12/2015"}, {"body": "love typings resolved automatically due npm peer dependencies defined angular packagejson", "d": "12/2015"}, {"body": "today hack improve getting started experience", "d": "12/2015"}, {"body": "blakeembrey way manages fix things would awesome devs still need know users using ts provide nice simple typings file", "d": "12/2015"}, {"body": "rolandjitsu developers nt need know tsd npm tsc get married integrated together mhegazy ideas", "d": "12/2015"}, {"body": "fixed", "d": "12/2015"}, {"body": "able find may help", "d": "12/2015"}, {"body": "ultrasonicsoft angular introduces new api simply facade around making anything special apis really convenient helper build directives isolated scopes however nt anything running angular angular side side totally run version side side even without angular addition worth mentioning also nt help upgrading really helper api something since long time helps upgrading zachrip linked comment module allows bootstrap components inside app making interoperate detailed guide upgrading general ngupgrade found hope resources give concrete idea topic approached addition please ask kind support questions social channels like want keep issues actionable feature requests bug reports thank", "d": "12/2015"}, {"body": "thanks zachrip pascalprecht helps lot pascalprecht yes post question gitter nt get response got bit reckless sorry thanks", "d": "12/2015"}, {"body": "opposed change means links generate different urls depending whether stuff loaded think bit surprising expand bit functionality would preferred", "d": "12/2015"}, {"body": "main reason wanting shared url eg router picks changes url however click link within application nt happen", "d": "12/2015"}, {"body": "got makes sense", "d": "12/2015"}, {"body": "looks like happens links triggering changes outside angular like using routerlink directive", "d": "12/2015"}, {"body": "yes correct", "d": "12/2015"}, {"body": "cc yjbanov first thought fixing add dummy syntax include absolute uri inline like dart library main import adart inlinercurrenturi asset component templateurl templatehtml class mycomponent inlinercurrenturi asset contents maindart parse update current uri whenever encounter one annotations thoughts", "d": "12/2015"}, {"body": "want make sure change pass go one current uri next also think could use real annotations instead specially formatted comments let parse us nt resolve imports use annotation like proposal lgtm", "d": "12/2015"}, {"body": "using funky local variable right would nice need parse comment dart library main import adart string inlinercurrenturi inlinercurrenturi asset component templateurl templatehtml class mycomponent inlinercurrenturi asset contents maindart", "d": "12/2015"}, {"body": "see also", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "close dupe fix design please continue discussion", "d": "12/2015"}, {"body": "openidcertified tiff uploaded using zenhubio", "d": "12/2015"}, {"body": "dup", "d": "12/2015"}, {"body": "yeh already fixed master", "d": "12/2015"}, {"body": "closing comparable untransformed option currently looks interesting", "d": "12/2015"}, {"body": "provider setup least predefined list maybe makes sense missing something plan something like make kind test easier think pretty much equivalent case rather fact sets backend agree convenient methods like etc would helpful second thought might make sense additional object instead whatever provided want backends implement interface would mean normal actual backend needs implement things like want apis testing interested jeffbcross things", "d": "12/2015"}, {"body": "thanks input pascalprecht ideal scenario like something like typescript describe raceservice gt beforeeachproviders gt mockhttp loaded test injector default could even replace http automatically provide http useclass mockhttp raceservice return observable races inject raceservice mockhttp service mockhttp gt fake response let hardcodedraces new race london new race lyon mockhttpexpectget apiraces respond hardcodedraces would automatically fail test ends request matching verb url doable manually right quite cumbersome write quickly ends copypasting big app think sugar would great", "d": "12/2015"}, {"body": "cexbrayat agreed needs sugar open suggestions sure specific example though nt make semantic sense application code would typically transformation raw json js objects instances class returning mock alreadyinstantiatedobjects would quite difficult make work described important know trying test expecting one thing request mocking another data presumably transformed service rather raw response request provides two basic methods expectation mode make assertions things happen tests fail nt responses optional passthrough mode simply say happens respond covered much like hear ideas sugar make sort thing easier", "d": "12/2015"}, {"body": "right response json object wrote sample bit fast sorry point general flow test imagine usually rely expectrespond unit test sure requests expected triggered response correctly handled success error passthrough mode could also useful especially fake backend test even try angular yet", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "sure pr welcome cexbrayat", "d": "12/2015"}, {"body": "mention open pr see notification", "d": "12/2015"}, {"body": "jeffbcross done", "d": "12/2015"}, {"body": "issue parser created second inside fix case removed", "d": "12/2015"}, {"body": "think already fixed released see fix htmlparser close void elements node types void elements fix htmlparser add tbody parent tr inside thead amp tfoot feel free reopen issue persits next release use case covered thanks", "d": "12/2015"}, {"body": "could write js describe raceservice gt beforeeachproviders gt raceservice return promise races inject raceservice service gt return servicelist races gt expect raceslength tobe see larger point imagine would mental overhead sometimes use times remember use better name suggestion look like", "d": "12/2015"}, {"body": "add suggestion really sure would best would nt mind functions dedicated purpose one injection one running async test sync test would javascript describe raceservice gt let service beforeeachproviders gt raceservice beforeeach inject raceservice raceservice gt service raceservice sync test service already injected need wrap async inject return promise races gt let races servicelist expect raceslength tobe javascript describe raceservice gt let service beforeeachproviders gt raceservice sync test service needed wrap inject return promise races inject raceservice service gt let races servicelist expect raceslength tobe async tests maybe function like javascript describe raceservice gt let service beforeeachproviders gt raceservice beforeeach inject raceservice raceservice gt service raceservice async test service already injected need wrap inject return promise races async gt servicelist races gt expect raceslength tobe javascript describe raceservice gt let service beforeeachproviders gt raceservice async test service already injected need wrap inject async return promise races async inject raceservice service gt servicelist races gt expect raceslength tobe", "d": "12/2015"}, {"body": "sounds like subset issue", "d": "12/2015"}, {"body": "believe fixed confirm provide steps reproduce", "d": "12/2015"}, {"body": "yeah fixed one note angular already includes things like import anywhere tests ts compiler throwing errors missing typings course include typings get duplicate typings messages", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "modular approach ui modular components common component may view anything must present hierarchy high order component", "d": "12/2015"}, {"body": "tl dr throw detect closed void element allow selfclosing nonvoid elements jelbourn imo talking things looking different discussions feel like mixing concepts void tags things like etc clearly defined html spec following complete list void elements html area base br col command embed hr img input keygen link meta param source track wbr void element element whose content model never allows contents circumstances imo void elements never ever closing tag form imo throw allowed second case socalled selfclosing tags ex afaik valid code browsers try autocorrect invalid markup go horribly wrong try compare expectations actually happens question shell allow selfclosing tags imo yes many people expect work said need aware clear departure works", "d": "12/2015"}, {"body": "oh actually loos like void elements optional selfclosing tag optionally character may present element void element means allow applies void elements", "d": "12/2015"}, {"body": "btw nt think makes sense say custom void elements since void elements clearly listed spec ca nt add list changed title issue custom selfclosing elements custom elements ca nt void", "d": "12/2015"}, {"body": "btw nt think makes sense say custom void elements since void elements clearly listed spec ca nt add list changed title issue custom selfclosing elements custom elements ca nt void pkozlowskiopensource thought custom elements act like void elements example would expect error add closing tag try put elements inside element", "d": "12/2015"}, {"body": "thought custom elements act like void elements nt think arbitrarily choosing custom elements void situation clear fixed set void elements start add custom ones earth users know ones void ones trying say imo void elements specified spec custom tags assumed nonvoid remains decide want support selfclosing tags parser compiler would departure spec current browser behavior", "d": "12/2015"}, {"body": "start add custom ones earth users know ones void ones well think would document right earth user know input properties custom element accepts well read documentation element ideally press something element editoride documentation show see error prevention specify element voidlike api expect editor show warning someone tries put content inside element understand point view regards departure html spec btw something would really like able", "d": "12/2015"}, {"body": "pkozlowskiopensource second case socalled selfclosing tags ex afaik valid code browsers try autocorrect invalid markup go horribly wrong nt think real issue browsers supported angular including old androids except implement parser behavior everywhere html mode always treated like ie unclosed tag fine void tags nt allow define custom void elements think stick standard ones tags think allowed tags form required case possible write templates html amp xhtmlcompliant think important use case considering easy achieve", "d": "12/2015"}, {"body": "nt think real issue confusing try see happens guess people would expect equivalent browsers autocorrect browsers supported angular including old androids except implement parser behavior everywhere html mode always treated like ie unclosed tag fine void tags totally agree void elements part spec imo discussion nonvoid elements marked void spec", "d": "12/2015"}, {"body": "context always void tag new parser always allowed new parser add end tag void element content allowed spec subsequent content start tag closes void element specifying en tag would error ie error bug void elements would closed content previous bullet point html text nodes would close void elements added children obviously wrong fix content still allowed always error whatever content texthtml things decide want allow void custom els allowed per spec want allow selfclosing custom els allowed per spec want error selfclosing html element p ie els void foreign", "d": "12/2015"}, {"body": "vicb reasoning behind stated previous comments nt think adding void tags spec always allowed new parser saying would valid would reasoning behind clear departure spec nt see strong reasons want allow void custom els sure understand sentence set void tags fixed spec nt see extend decide given custom element void would rules content would directive component authors able mark component void imo slippery slope want allow selfclosing custom els allowed per spec want error selfclosing html element p ie els void foreign nt case would like distinguish standard custom elements", "d": "12/2015"}, {"body": "saying would valid would one reason tools would automatically add end tag plus think supported browsers would directive component authors able mark component void specific thing might go away nt case one goal switching new parser allow self closing custom els reconsidered", "d": "12/2015"}, {"body": "one reason tools would automatically add end tag sure treating way imo running problems since try void one sure want void ngcontent specific thing might go away yeh would nt try special one goal switching new parser allow self closing custom els reconsidered right still good selfclosing tags need make sure void elements special case ca nt", "d": "12/2015"}, {"body": "hi folks considered many options conclusion default html parser throw comes across custom element selfclosing missing closingtag future make easy use custom template parsers support selfclosing custom elements reasoning current angular html templates valid fragments even casesensitivity change valid higher fidelity custom element spec currently nt allow custom elements selfclosing void deviate standards care usability though make possible author templates syntaxes eg custom stuff jade whatever nt want rush decision default behavior since beta pressure relaxing rule near future even default parser possible without breaking change reverse", "d": "12/2015"}, {"body": "surprised alpha behavior concerned issue earlier today thrilled see resolved fast sane wise standardscompliant way big angular team thank", "d": "12/2015"}, {"body": "igorminar", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "dependencies peer dependencies one thing need point impact getting started experience longer sufficient think getting started experience important setting dependencies correctly even important could file bug npm option install save peer dependencies automatically alexeagle wardbell rkirov", "d": "12/2015"}, {"body": "sure much matters given webpack workflow seems work fine deps instead peer deps could file bug npm option install save peer dependencies automatically nt think want open worms", "d": "12/2015"}, {"body": "use seed cli affected start project scratch via npm init npm install save need think ok make starting scratch difficult nt expect many people wed dec pm rado kirov notifications githubcom wrote sure much matters given webpack workflow seems work fine deps instead peer deps could file bug npm option install save peer dependencies automatically nt think want open worms npmnpm reply email directly view github", "d": "12/2015"}, {"body": "revised install experience without cli might workaround try find one everyone go cli", "d": "12/2015"}, {"body": "something like npm install save rxjs zonejs wed dec pm ward bell notifications githubcom wrote revised install experience without cli might workaround try find one everyone go cli reply email directly view github", "d": "12/2015"}, {"body": "course things might get tricky requires versions peer dependencies older latest version wed dec pm igor minar iminar googlecom wrote something like npm install save rxjs zonejs wed dec pm ward bell notifications githubcom wrote revised install experience without cli might workaround try find one everyone go cli reply email directly view github", "d": "12/2015"}, {"body": "something like npm install save rxjs zonejs igorminar nt think simple might situation latest versions ones resolved installed npm version specified might work together rxjs one worries guess special period several projects zone rx moving fast probability getting troubles higher unless lock peer dependencies narrow range would vote differing decision deps vs peerdeps till got bundling story figured since need look entire experience", "d": "12/2015"}, {"body": "right peer deps narrow version range penalty living edge good thing people wo nt able accidentally use angular wrong dependencies thu dec pawel kozlowski notifications githubcom wrote something like npm install save rxjs zonejs igorminar nt think simple might situation latest versions ones resolved installed npm version specified might work together rxjs one worries guess special period several projects zone rx moving fast probability getting troubles higher unless lock peer dependencies narrow range would vote differing decision deps vs peerdeps till got bundling story figured since need look entire experience reply email directly view github", "d": "12/2015"}, {"body": "sent pr someone review please", "d": "12/2015"}, {"body": "longer issue since rxjs bundle separated", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "oh looked issues prs el pawel kozlowski notifications githubcom escribi\u00f3 closed reply email directly view github", "d": "12/2015"}, {"body": "yes looks like pretty severe regression imo need fix one beta", "d": "12/2015"}, {"body": "yjbanov could take look", "d": "12/2015"}, {"body": "yep take look", "d": "12/2015"}, {"body": "confirmed bug quoted expressions seems bug new html parser seems choke operator likely expecting tag plunker showing move getter conditional expression still works", "d": "12/2015"}, {"body": "yep definitely parser issue error msg clear", "d": "12/2015"}, {"body": "rolandjitsu bootstrap available", "d": "12/2015"}, {"body": "thanks seems right", "d": "12/2015"}, {"body": "still applies beta plunkr updated latest version", "d": "12/2015"}, {"body": "fourth nt work anymore mixing html svg parent child remains empty fixed", "d": "12/2015"}, {"body": "another plunker syntax nt work svgs fails luckily asteriskbased one works", "d": "12/2015"}, {"body": "svg must work flawlessly angular least want develop complex svgbased apps wish able without hindrance angular considering growing popularity svg ever people like question uderstand correctly angular abstracts away rendering different rendering engines could used right maybe switching different rendering library svg would solve problems using rectjs render svg angular would react virtual dom diffing offer even better rendering performance improvement svg rendering html dom", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "sixth new standalone selfclosing svg elements supported templates results", "d": "12/2015"}, {"body": "also updated plunkers applicable", "d": "12/2015"}, {"body": "probably", "d": "12/2015"}, {"body": "without parent work compiler way know svg element changing solve", "d": "12/2015"}, {"body": "prefix required first element template every svg element either case appreciate design designer template integrated without changes code", "d": "12/2015"}, {"body": "prefix ever required first element template parent cases optional namespace inherited required inherited required inherited required differentiate component svg element", "d": "12/2015"}, {"body": "everything identified far resolved ok keep issue open made another attempt port current application beyond others reading obvious let stress vicb pointed last comment write svg template either need element prefix switch parser svg mode otherwise elements example bare interpreted html components svg elements former wo nt render browsers", "d": "12/2015"}, {"body": "tragetaschen thanks reported different issues svg closing issue seem identified issues feel free reopen create new issue encounter pb", "d": "12/2015"}, {"body": "successfully ported application thanks fixing everything", "d": "12/2015"}, {"body": "tragetaschen could provide plunk demonstrates error sending pr fix", "d": "12/2015"}, {"body": "whoops realized error message actually contains", "d": "12/2015"}, {"body": "going application stumble upon occurrences rather frustrating uphill battle plunkr really get argument keeping list thus file size small also tell web designer colleague use html entities knows", "d": "12/2015"}, {"body": "correct says need use either decimal hexadecimal representation html entity sure reason alphabetic representations nt supported angular html parser maybe support entities instead maintaining possible alphabetic version maybe vsavkin tell reasoning", "d": "12/2015"}, {"body": "problem understand looks feature bug disappointing angular supposed html enhanced web apps clearly enhance html valid html also much easier remember read understand maintain hope temporary limitation final feature anyone team confirm", "d": "12/2015"}, {"body": "reasoning want keep parser size reasonable table entities would probably bigger parser said open adding common ones", "d": "12/2015"}, {"body": "said open adding common ones awesome wanted suggest soon gain offline compilation superpowers parser size less concern", "d": "12/2015"}, {"body": "yes sounds good although common ones relative everyone get stats", "d": "12/2015"}, {"body": "creating list based wikipedia sources hopefully good enough", "d": "12/2015"}, {"body": "yay skimmed list found entities missed", "d": "12/2015"}, {"body": "got ready go branch need get merged published", "d": "12/2015"}, {"body": "tbosch please fix believe vicb training one day", "d": "12/2015"}, {"body": "dup closed", "d": "12/2015"}, {"body": "mentioned valid html error message clearly shows faulty closing tag", "d": "12/2015"}, {"body": "agree error message makes sense think since div close p leave behind spurious however think important call behavior documentation browsers seem forgiving might confuse people event think good change", "d": "12/2015"}, {"body": "landed", "d": "12/2015"}, {"body": "results want clear nature return values reduce risk colliding developer name something", "d": "12/2015"}, {"body": "even seem straightforward far tell always queries returns instantiated components", "d": "12/2015"}, {"body": "childcomponentlist even componentlist afaik query components directives nt think component anywhere name", "d": "12/2015"}, {"body": "vsavkin says better cause list actually contain element refs", "d": "12/2015"}, {"body": "maybe even good information observable", "d": "12/2015"}, {"body": "getting errors closing tags changing errors gone", "d": "12/2015"}, {"body": "got errors using", "d": "12/2015"}, {"body": "genereux void element according spec void elements start tag end tags must specified void elements", "d": "12/2015"}, {"body": "tried also still working could reason", "d": "12/2015"}, {"body": "reason text node white space img tag note html valid bug parser things went wrong next release remove space", "d": "12/2015"}, {"body": "tbragaf getting errors would think would get error child component terminal instruction", "d": "12/2015"}, {"body": "brandonroberts neither child component instanciated refresh page url child shows empty page", "d": "12/2015"}, {"body": "tbragaf reproduce plunk", "d": "12/2015"}, {"body": "brandonroberts one errors came across related page refreshes reproduce", "d": "12/2015"}, {"body": "tbragaf example goto method using template want use router dsl use template", "d": "12/2015"}, {"body": "brandonroberts trying something else fixed issue persists", "d": "12/2015"}, {"body": "tbragaf ok see want navigate url need full url path navigating using dsl would flexible changes though", "d": "12/2015"}, {"body": "brandonroberts well bad thank heads need use navigatebyurl urls come json anyway try refresh page given url home local app render home component", "d": "12/2015"}, {"body": "tbragaf yea saw two different issues want home redirect homefavorites think bug since redirect recognized inside child route config issue nt component defined home route workaround would add redirect parent route config parent child want button work need use recognize navigate issue may fixed latest refactor wait next release use tagged build", "d": "12/2015"}, {"body": "brandonroberts recognize method actually solves problem routing via js thank regarding routeconfig workaround simply ca nt work production nt mind keep openned solved thank mcuh tbragaf", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "note behavior redirects changed significantly see", "d": "12/2015"}, {"body": "btford well waiting fine would work params redirect like would sweet thank tbragaf", "d": "12/2015"}, {"body": "tbragaf work put parent route config ca nt use redirect routes generate links though", "d": "12/2015"}, {"body": "brandonroberts seems nice workaround parent nt know child router behaves seems good thank", "d": "12/2015"}, {"body": "tbragaf misspoke work generating links use full route parent child", "d": "12/2015"}, {"body": "great something regarding page refresh url path child would rather close issue wait solved feel free close thank", "d": "12/2015"}, {"body": "tbragaf probably want see", "d": "12/2015"}, {"body": "btford nt know first router getting awesome good job simply need default route expected proposal need redefine category component need another router dsl nt need understand purpose router may work purposes simply need one path multiple values use get given param specify route like wo nt able get thank", "d": "12/2015"}, {"body": "upgraded newest alpha issues refered closed closing good job", "d": "12/2015"}, {"body": "dup", "d": "12/2015"}, {"body": "oops", "d": "12/2015"}, {"body": "maybe browse see glaring omissions", "d": "12/2015"}, {"body": "francisli gon na close even ready frankly way support said would interested know get work morbid curiosity sake feel free carry discussion cheers", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "please stop issues", "d": "12/2015"}, {"body": "one intermediate way dealing urlsearchparams constructor accept object besides string", "d": "12/2015"}, {"body": "happening dart well", "d": "12/2015"}, {"body": "looks like fixed", "d": "12/2015"}, {"body": "prepending library short name mentioned several however would stick underscores convention like framework etc", "d": "12/2015"}, {"body": "working yeoman generator create boilerplate angular library based ocombe article added support similar way angular team using example bundle names easily changed library author heshe wishes prepend prefix thanks great feedback far", "d": "12/2015"}, {"body": "see helps", "d": "12/2015"}, {"body": "question replace routeconfig anything work", "d": "12/2015"}, {"body": "created repository reproduce bug tried create test case angular source could nt make fail", "d": "12/2015"}, {"body": "bug recently fixed try alpha", "d": "12/2015"}, {"body": "upgraded listed samples appears still issue upgrade", "d": "12/2015"}, {"body": "component case component parent", "d": "12/2015"}, {"body": "ok definitely makes sense add component however making change still see behavior noticed canreuse example angular source scenario since canreuse method returns true guess could problem implementation tell looks correct made change suggested", "d": "12/2015"}, {"body": "implementation looks correct hm happens radio button seeing rest state try input box instance actually navigate back see guessing goofy browser behavior sideeffect reusing dom vsavkin tbosch seen radio buttons", "d": "12/2015"}, {"body": "looks like checkboxes also retain state navigating back", "d": "12/2015"}, {"body": "looks like similar", "d": "12/2015"}, {"body": "btford problem exists checkbox text field select element actually everything input bound component controller plunker demonstrating checkbox text field select console also visible routercanreuse called user clicks router link already route goes away anyway returning false vanish cache template", "d": "12/2015"}, {"body": "reason angular viewpool go away ie dom nodes recreated properly tue dec varadero notifications githubcom wrote btford problem exists checkbox text field select element actually everything input bound component controller plunker demonstrating checkbox text field select console also visible routercanreuse called user clicks router link already route goes away anyway returning false vanish cache template reply email directly view github", "d": "12/2015"}, {"body": "tbosch go away ie dom nodes recreated properly may ask means dom always recreated way cache view think using appviewpoolcapacity good idea letting user choose component dom reused refactor remove completely necessity user handle", "d": "12/2015"}, {"body": "varghesep specific reason decided subscribe observable component code rather view async pipe please paging imagine maybe want expose observable available page numbers page number accompanied another observable provides data page love see best practices emerge", "d": "12/2015"}, {"body": "turns nt fully understand change detection works opened issue reality nothing rather changes detected seems like comparison happens component input level instead component field level still believe current behavior confusing one mutate input fields impression change detection system breaks said nt alternative proposal going close issue", "d": "12/2015"}, {"body": "fixed fix", "d": "12/2015"}, {"body": "closed", "d": "12/2015"}, {"body": "hm sure possible since still nt hold promise anywhere without hacking promise means way report uncaught promise rejections", "d": "12/2015"}, {"body": "problem upgrade angular use angularprotractordts added import angularangular angularprotractor compulsory tried comment angularprotractordts also fix problem would solution part package end commented declare module jquery export declare var jquerystatic", "d": "12/2015"}, {"body": "hi problem still persists", "d": "12/2015"}, {"body": "thank seems really promising would great angular definition would leak described article", "d": "12/2015"}, {"body": "hi sorry posting issue running opinion first thing decide specific platform angular supporting team says ultimately important piece information even beyond specific documentation clearly refers version angular written entirely standard runs untranspiled browser typescript clearly means typescript team says angular supports idea slides talks angularconnect sounds like means everything typescript except types would cover stuff might stuff nt even proposed yet could actually refer standard would take decorators entirely make defining components example look different even include classes opinion particularly angular means minimum javascript decorators stop calling cause confusing maybe team say esnext case standard really stuff minimum got stage proposal become part javascript least one transpiler typescript compile maybe best thing say angular supports typescript deal supporting es version point release would much clear since types optional typescript saying typescript required transpiler nt much limitation", "d": "12/2015"}, {"body": "otodockal point valid please continue discussion thanks", "d": "12/2015"}, {"body": "closed via", "d": "12/2015"}, {"body": "true platform pipes", "d": "12/2015"}, {"body": "related fix", "d": "12/2015"}, {"body": "note design closing duplicate since precise issue one tries solve easier search", "d": "12/2015"}, {"body": "looking already exist", "d": "12/2015"}, {"body": "days prs integrated situation better far level would allow us make jobs required ci looking last builds successful sl bs fail flakes failures", "d": "12/2015"}, {"body": "data last builds success failures per browser browser count chrome edge firefox flakes per browser browser count chrome obvious flake source flakes generated different tests", "d": "12/2015"}, {"body": "need feature app google well", "d": "12/2015"}, {"body": "note possibly related using hooks results corresponding methods called instructions received params set currently literally way getting parameters nonroot routes afaict personally feel treated effort possibly one day leave decide", "d": "12/2015"}, {"body": "effort day means order days fine bumping", "d": "12/2015"}, {"body": "please fix asap breaks many table apps", "d": "12/2015"}, {"body": "causing difficulties well", "d": "12/2015"}, {"body": "ok realized typescript option prevent member added definition like keyword c public within private consumers", "d": "12/2015"}, {"body": "running angular angular time testing time started angular testing angular built jasmine testing right seems typing issue", "d": "12/2015"}, {"body": "robwormald idea could move forward without fiddle typings files manually resolved going", "d": "12/2015"}, {"body": "dsebastien confirm mocha plays nicely angular switched jasmine testing library wraps jasmine methods angularconnect session juliemr said currently nt support mocha testing frameworks", "d": "12/2015"}, {"body": "correct currently jasmine fully supported working making generic testing works great jasmine", "d": "12/2015"}, {"body": "ca nt try good know work thanks info", "d": "12/2015"}, {"body": "wonder provide different platformspecific debug element tree lot confusion seems stem fact follows tree bound elements dom tree users expect elements without directives bound attributes even simple text bindings nt show advantage using native element apis eg would awareness angular attributes applicable could would also useful tests alternatively could encourage using native element apis", "d": "12/2015"}, {"body": "tbosch lt think encouraging use native element apis seems better understand current api misleading", "d": "12/2015"}, {"body": "julie need missing makes proposal attractive", "d": "12/2015"}, {"body": "refactored unit tests around rely native elements apis instead make much easy read use case really see want grab reference component instance child test property child emit event exposing looks good", "d": "12/2015"}, {"body": "use case see query useful users complex template maybe like html container food buy milk butter otherfooditem test seems cleaner could say sign template needs useful classes ids", "d": "12/2015"}, {"body": "would also nice debugging eg via chrome devtools able inspect able figure binding came moment ca nt associated", "d": "12/2015"}, {"body": "love able hunt something binding rather spelunking queryselector typically testing componenttemplate interaction usually component api via binding looking kinds things think test easier read searching sync purpose test queryselector last resort likely testing directive effect layout appearance hard see component api something done directive element need go native evidently cexbrayat testing different things fine", "d": "12/2015"}, {"body": "bybinding would indeed useful think possible right simple bindings like componentviewchildren hence issue opened", "d": "12/2015"}, {"body": "already implemented provide function returns promise resolves component type instead route config", "d": "12/2015"}, {"body": "default thing get ready use browser platform directives set", "d": "12/2015"}, {"body": "proposal like application unit tests going need bootstrap vary depending platform written let mirror method exporting different lists providers platform tests well export setup function live new injector created test case export suggested testing platform application providers platform name test injector extension export function need called test framework tests run huge burden already required initialization set current dom adapter replaced example angular internal test suite setup change breaking changes breaking change tests change setup function inprogress cl coming soon", "d": "12/2015"}, {"body": "design cl still cleanup working prototype cc igorminar alxhub pkozlowskiopensource design thoughts", "d": "12/2015"}, {"body": "hope nt mind questions scrolled pr could nt figure would included also wondering considered include something get rid tests", "d": "12/2015"}, {"body": "cexbrayat yes things included gt gt includes common directives common pipes event manager plugins", "d": "12/2015"}, {"body": "ha great bit missed thx juliemr look forward test", "d": "12/2015"}, {"body": "alxhub mhevery could review", "d": "12/2015"}, {"body": "note based top would great get first makes review cleaner", "d": "12/2015"}, {"body": "reproduced need opened separate window order update url click square blue button top right preview window", "d": "12/2015"}, {"body": "progress", "d": "12/2015"}, {"body": "use adds active class active link removes others", "d": "12/2015"}, {"body": "robwormald believe closed double check", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "btford plans handling use case", "d": "12/2015"}, {"body": "btford question would great know", "d": "12/2015"}, {"body": "work", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "rosendi maybe another issue open discussing file separate issue consider original issue resolved please see changes details thanks", "d": "12/2015"}, {"body": "btford sorry late look thank", "d": "12/2015"}, {"body": "thinking whether perhaps set loader webpack conf like import module time build new app", "d": "12/2015"}, {"body": "value accessor elements try explicitly adding default one attaching directive", "d": "12/2015"}, {"body": "ran issue multitab application using router would like preserve state tab switching tabs certainly use service requires extra implementation effort every tab involved super useful complex multitab applications", "d": "12/2015"}, {"body": "robwormald bash project directory enter npm install see several file gets see reactivex npm registry bug author publish specified dependency enter bower install get angular installed understand comments typescript depends installed project files anyway getting lots atomtypescript errors use syntax entities messed install process need work", "d": "12/2015"}, {"body": "mlaird sounds like date version npm wed dec mlaird notifications githubcom wrote robwormald bash project directory enter npm install see several file gets see reactivex npm registry bug author publish specified dependency enter bower install get angular installed understand comments typescript depends installed project files anyway getting lots atomtypescript errors use syntax entities messed install process need work reply email directly view github", "d": "12/2015"}, {"body": "robwormald thanks changed recently downloaded nodejs afresh npm seems working got recent ok thanks", "d": "12/2015"}, {"body": "quick question rest dependencies need typings others referenced make sure include", "d": "12/2015"}, {"body": "time decided create msbuild task copy needed dts files nodemodules folder source folder prebuild step users build system allowed specifiy node modules project depends prebuild step rest course add nodemodules tfignore nt end version control looks promising together way", "d": "12/2015"}, {"body": "hi custom headers retrieved appear headers map anyone problem tbragaf", "d": "12/2015"}, {"body": "problem tried workaround success", "d": "12/2015"}, {"body": "simply grabbing headers raw xhr object nt appear whole lot unless something else missing issues manual xhr request see able access headers looking", "d": "12/2015"}, {"body": "api used app yes also tested tbragaf", "d": "12/2015"}, {"body": "using still able retrieve response headers testing ws rest client response headers even see browser developer console response object", "d": "12/2015"}, {"body": "doesnt support headers response bug still nothing", "d": "12/2015"}, {"body": "ah see issue rxjs upgrading tried yet current still retrieving headers using fetch api waiting bug fix", "d": "12/2015"}, {"body": "tbragaf lt alpha believe like since could look plunker please see things differently", "d": "12/2015"}, {"body": "robwormald make sure test limit hours result header present see go network tab robwormald confirm please reopen issue", "d": "12/2015"}, {"body": "confirm nt appear said something control see demo using vanilla xmlhttprequest throws error note browser rejecting access outside angular entirely", "d": "12/2015"}, {"body": "robwormald adding accesscontrolexposeheaders xtotalcount api solves thank tbragaf", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "pkozlowskiopensource question would use umd files alpha release within systemjs example somewhere shows systemjs config look like", "d": "12/2015"}, {"body": "looking help options basic problem parent gets data api needs send data child subscription", "d": "12/2015"}, {"body": "looks like closed", "d": "12/2015"}, {"body": "indeed fixed thnx estsauver", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "facing problem", "d": "12/2015"}, {"body": "one face problem make routeroutlet directive inherit routeroutlet", "d": "12/2015"}, {"body": "kind issue exactly callstack expression optional pipe like truetrue hello world mypipe since mypipe never called example never instantiated navigate away page used pipes supposed destroyed try destroy mypipe even used get error", "d": "12/2015"}, {"body": "seeing exception reported xesued use pipe inside ngswitchdefault developing angular using chrome windows machine plunker reproduces error perfectly", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "xesued", "d": "12/2015"}, {"body": "js set provider one test withproviders gt provide usevalue provide b useclass bimpl inject b b gt stuff future ts set provider one test withproviders gt provide usevalue provide b useclass bimpl run inject inject b b gt stuff", "d": "12/2015"}, {"body": "works picky implementation wed dec julie ralph notifications githubcom wrote set provider one test withproviders gt provide usevalue provide b useclass bimpl inject b b gt stuff future tsit set provider one test withproviders gt provide usevalue provide b useclass bimpl run inject inject b b gt stuff reply email directly view github", "d": "12/2015"}, {"body": "since sure frequent use case reluctant mix di ngcontent concerns make di lot complicated way component selector tabs providers new provider tabmanagerprovider usealias tabscomponents template class tabscomponent implements tabmanager get tabmanager return component selector tab class tabcomponent constructor private provider tabmanagerprovider oninit thisprovidertabmanager interesting stuff component selector page directives tabscomponent template providers new provider tabmanagerprovider usealias page class page viewchild tabs tabmanager pattern requires extra level indirection keeps di ngcontent simple", "d": "12/2015"}, {"body": "component created think decent work aroundpattern could fail following logic", "d": "12/2015"}, {"body": "updated plunk new syntax aux router introduced alpha still way close aux route also attach aux route home component home chat", "d": "12/2015"}, {"body": "eliminates need attach auxiliary route another route", "d": "12/2015"}, {"body": "closing answered pascalprecht", "d": "12/2015"}, {"body": "put solution pass reference control child component input parameter", "d": "12/2015"}, {"body": "bradlygreen pr submitted nt quite sure wanted one tbosch went vanilla dom call", "d": "12/2015"}, {"body": "work", "d": "12/2015"}, {"body": "changing plunker use alpha confirms fixed please let know see otherwise thanks", "d": "12/2015"}, {"body": "hope somebody fix hope talk thing use similar selectors example classes like multiple elements use elements inside another styles parent element rendered child elements also styles parent elements rewrites styles child elements also use shadow dom viewencapsulation well supported would like way change styles inside elements eg using something like pseudo elements code affect first element class lorem ipsum", "d": "12/2015"}, {"body": "closing according new documentation correct usage host annotation", "d": "12/2015"}, {"body": "rolandjitsu sure connected question extracted firebase logic one project separate package look maybe find something helpful especially", "d": "12/2015"}, {"body": "rosendi probably take look rx perhaps use observable implementing async pipes actually thinking using pipes something like described actually plunk fairly reasonable implementation rxpipe could adapted use firebase queries told rxpipe implemented waiting", "d": "12/2015"}, {"body": "rolandjitsu rxpipe actually asyncpipe supports observables since", "d": "12/2015"}, {"body": "ericmartinezr oh nt noticed nt see changelog", "d": "12/2015"}, {"body": "developer desired effect injecting services platform level", "d": "12/2015"}, {"body": "alpha syntax aux route changes updated plunk", "d": "12/2015"}, {"body": "looks like questions answered", "d": "12/2015"}, {"body": "fyi since located", "d": "12/2015"}, {"body": "nt even remember one even opened closing", "d": "12/2015"}, {"body": "pkozlowskiopensource use testing purpose maybe idea cleaner api", "d": "12/2015"}, {"body": "yes exactly really supposed public api", "d": "12/2015"}, {"body": "past browserdomadapter private api got fixed barrel reorganization thu dec johannes hoppe notifications githubcom wrote yes exactly browseradapterbrowserdomadaptermakecurrent really supposed public api reply email directly view github", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "got issue controlgroup ca nt set controls back untouched way empty controls controlgroup using one command created plnkr", "d": "12/2015"}, {"body": "think abstractcontrol reset method gets implemented control controlgroup controlarray set pristine true touched false rerun validation", "d": "12/2015"}, {"body": "adressed", "d": "12/2015"}, {"body": "closing duplicate", "d": "12/2015"}, {"body": "fix", "d": "12/2015"}, {"body": "yup sorry forgetting upgrade issue import paths gone import directly etc bootstrap changed well see full example using webworkers check todo example", "d": "12/2015"}, {"body": "also read docs webworker bootstrap", "d": "12/2015"}, {"body": "hi pascalprecht mean wo nt support mdicon angular material library also without template getadapter mdicon gives uncaught error directive mdicon component missing anonymous function anonymous function anonymous function anonymous function post found anonymous function anonymous function eval digest anonymous function anonymous function supported upgrade directive using mdicon think counterproductive", "d": "12/2015"}, {"body": "davidgang ngupgrade nt support components error message states angular material specifically branch ppl working", "d": "12/2015"}, {"body": "yes pascalprecht know people working last angular connect jelbourn stated maybe next conference able show something meaning wo nt production ready long time would expect better interoperability google angular products free product set expectations still confused think many people want upgrade wo nt find nice angular material hindering", "d": "12/2015"}, {"body": "issue appear actually resolved opened new issue demonstrates still indirectly referenced coredts zonejs", "d": "12/2015"}, {"body": "closed via", "d": "12/2015"}, {"body": "reproducing anymore tried laptop mobile plunker angular ca nt say solved simply harder reproduce", "d": "12/2015"}, {"body": "closing issue reopen bug surfaces", "d": "12/2015"}, {"body": "resolved confirm problem fixed plunkr updating alpha issue persists let know reopen thanks much help brandonroberts", "d": "12/2015"}, {"body": "maybe problem value holder type", "d": "12/2015"}, {"body": "think went stuck wit downupgrade closing", "d": "12/2015"}, {"body": "believe umd bundles could replace current sfx bundles already described issue would suggest killing existing sfx bundles keep umd ones igorminar work topic could continue maybe another plan since assigned", "d": "12/2015"}, {"body": "believe fixed via got one umd bundle acts sfx exports things ng namespace works browser platform", "d": "12/2015"}, {"body": "hi working last version published angularrouter onactivate method never called fact repo one example nt work either thanks", "d": "12/2015"}, {"body": "lifecycle hook names changed latest versions try routeronactivate", "d": "12/2015"}, {"body": "repo updated correct lifecycle hooks thanks", "d": "12/2015"}, {"body": "brandonroberts templateurl bug fixed router latest version", "d": "12/2015"}, {"body": "great thanks help nt working using templateurl seems bug", "d": "12/2015"}, {"body": "vguede nt fixed yet specific pieces nt get updated frequently versions yea bug workaround discussion", "d": "12/2015"}, {"body": "saw one thanks", "d": "12/2015"}, {"body": "problem activate method invokes templateurl resolves", "d": "12/2015"}, {"body": "access route params inside controller injecting router via routercurrentinstructioncomponentparams", "d": "12/2015"}, {"body": "closing got html parser behave consistently across browsers", "d": "12/2015"}, {"body": "might victor seemed think setting nt thing honoring event handling interesting reads longer could nt find alpha worked", "d": "12/2015"}, {"body": "wardbell used work long time ago think nt anymore think since become useless handle bubbling events", "d": "12/2015"}, {"body": "supposed work even test problem seems evaluation chained expression work", "d": "12/2015"}, {"body": "alexeagle provide info issue want work easy fix", "d": "12/2015"}, {"body": "literally spent hour debugging issue error make much sense especially using ngif ngfor etc encapsulated ngmodel definitely need better developer experience", "d": "12/2015"}, {"body": "please file issue post example templates corresponding error messages agree must make experience better mon dec pm dan ristic notifications githubcom wrote literally spent hour debugging issue error make much sense especially using ngif ngfor etc encapsulated ngmodel definitely need better developer experience reply email directly view github", "d": "12/2015"}, {"body": "absurd error throw missing dependency", "d": "12/2015"}, {"body": "ah see recently refactored think consistent would mind checking providing reproduction", "d": "12/2015"}, {"body": "btford plunker", "d": "12/2015"}, {"body": "workaround since jquery distribute jquerydts file file definition jquerydts could placed sourcecodebasedir typingsjquerydts simply change bottom lines declare module jquery export var jquerystatic declare var jquery jquerystatic declare var jquerystatic declare new module bit hacky declare module jquery export var error go away tested webpack tsloader personally think problem dts files likely incorrect import jquery", "d": "12/2015"}, {"body": "hmm well convinced basvandenheuvel said belonged jquery quite time also problem hoping permanent solution keep commenting line changing jquerydts file", "d": "12/2015"}, {"body": "related", "d": "12/2015"}, {"body": "sourcemaps fixed", "d": "12/2015"}, {"body": "believe parts covered", "d": "12/2015"}, {"body": "rkirov thinking maybe api nt useful users seems like getting native element plain old dom manipulation people want cexbrayat test would look something like js note already work angular master right let html username userusername awesome username return tcboverridetemplate registerformcmp html createasync registerformcmp formcmp gt formcmpcomponentinstanceuserusername c\u00e9dric need fordebugelement removed formcmpdetectchanges asserts let htmlroot formcmpnativeelement debugelement would require significant changes make work text nodes moment returns must backed bound text nodes longer misko mentioned probably wo nt changed thoughts tbosch", "d": "12/2015"}, {"body": "indeed rewrote tests look exactly like suggest dom queries readable using lot cases apps time see needed want grab reference children directive test something least suggest ebook feel free tell something missing", "d": "12/2015"}, {"body": "cexbrayat yeah looks good similar discussion let continue close issue since particular case bound text element shut", "d": "12/2015"}, {"body": "think since resolved thelgevold please let know still issue happily reopen thanks", "d": "12/2015"}, {"body": "btford confirmed fixed thanks", "d": "12/2015"}, {"body": "problem solved registering exceptionhandler rethrows forked example radekholy show", "d": "12/2015"}, {"body": "thelgevold stuck bit stumbled onto demo app using semantic ui builtin definitions active approach worked perfectly documentation using syntax bit spotty trouble figuring di figured adapting code really simple headerhtml source headerjs javascript location required match route path import routerdirectives location export class headercomponent required dependency injection equivalent typescript typed variable declaration static get parameters return location bind location component constructor location thislocation location true path match false rest getlinkstyle path return thislocationpath indexof path gt source johnpapa specific use case think makes lot sense wrap links parent element select children parent element set default ie nonactive styles example html html dashboard heroes css alternatively could also use first approach reverse logic change gt imho adding class everything nt active nt make much sense", "d": "12/2015"}, {"body": "sure status bug might karma node issue brought trying search many files issue specifically using project started months ago problem macpro osx el capitan using node npm along tested karma dependencies package well anyone wants try recreate strange project starts fine standard npm start starting sure karma node issue somewhere around versions try get update node see works", "d": "12/2015"}, {"body": "happened even framework interpolation broken component routed use component directly another template works fine routed using router whole element content interpolation exists blank adding zonejs worked issue zones available seems like case least error nothing logs indicating anything wrong interpolation nt work", "d": "12/2015"}, {"body": "sfx bundle size addressed webworker bundle size tracked probably priority beta closing duplicate", "d": "12/2015"}, {"body": "vsavkin worked recently", "d": "12/2015"}, {"body": "issue happens angular internal data structures get invalid state couple reasons could happen fixed days ago never see exception unless use angular private apis get internal data structures inconsistent state really much closing see exceptions using public apis please open new issue new repro case", "d": "12/2015"}, {"body": "yes please angular need stabilized quickly new features go throu process otherwise signifivcant danger whole project", "d": "12/2015"}, {"body": "timkindberg yep relevant unit test demonstrates concept", "d": "12/2015"}, {"body": "jelbourn could query components implement interface using sorry nt find proper solution example interface c component class implements c component class b implements c component class routeroutlet directive viewchild viewchild c", "d": "12/2015"}, {"body": "rosendi unfortunately ca nt query interface typescript keep interfaces around runtime", "d": "12/2015"}, {"body": "jelbourn course know example used show components b similar functionality example component property viewchild b viewchild itemid string ngafterviewinit ngafterviewchecked viewchilditemid item id question query components single query", "d": "12/2015"}, {"body": "jelbourn may related", "d": "12/2015"}, {"body": "vsavkin would suggest since giving name routed component nt option", "d": "12/2015"}, {"body": "make work took example unit test throws help would appreciated", "d": "12/2015"}, {"body": "jelbourn temporary solution", "d": "12/2015"}, {"body": "btford jeffbcross imagined could achieved interface c property string class implements c class b implements c viewchild routeroutlet routerview routeroutlet ngafterviewchecked routerviewcomponentrefinstanceproperty router outlet private generic", "d": "12/2015"}, {"body": "implemented ton workarounds achieve fortunately naturally converged pascalprecht cburgdorf call state components contrast pascalprecht think proper clean solution need pass data routed components welcome syntactic sugar avoid need write rest fine", "d": "12/2015"}, {"body": "rosendi implement star wars website", "d": "12/2015"}, {"body": "radekholy yep know solution nt like jelbourn solution much cleaner universal proposal complex querying could achieved without component name see ps sw implementation nt question anymore", "d": "12/2015"}, {"body": "yes long child components implement interface might cleaner", "d": "12/2015"}, {"body": "resolve problem", "d": "12/2015"}, {"body": "plunker demonstrating need track", "d": "12/2015"}, {"body": "recapping video call clear headers serialized server client cache cache contain original request method url incl params also nt think weakening instance checks string checks would lose guarantees thing actual thing expect things like checking input observable pipe better check object method check called observable better yet future better check method whatever spec days patrick going think use case get back thinks ofremembers necessary cache priming", "d": "12/2015"}, {"body": "ahh whole conversation talking headers nt understand serialized server client headers different story think reasonable give thought outside issue right strategy serializing processing headers prerendered page client cache", "d": "12/2015"}, {"body": "merged via", "d": "12/2015"}, {"body": "fixed", "d": "12/2015"}, {"body": "run trying listen event polymer element dart", "d": "12/2015"}, {"body": "done compilation reassigning tbosch", "d": "12/2015"}, {"body": "gone repo npm", "d": "12/2015"}, {"body": "radio button example using custom radiocontrolvalueaccessor similar checkboxcontrolvalueaccessor plnkr live demo", "d": "12/2015"}, {"body": "problem faced days back unable get values radio checkboxes using formbuilder anyone working code getting value radio checkbox", "d": "12/2015"}, {"body": "pradeep checkedout plunker", "d": "12/2015"}, {"body": "sry thanx working one thing using ngcontrol via unable get value readonly input field idea shows undefiend", "d": "12/2015"}, {"body": "getting issue upgrading item", "d": "12/2015"}, {"body": "vladimirivanov check changelog migration guide", "d": "12/2015"}, {"body": "got something nested ngfor since parent one one works one nt", "d": "12/2015"}, {"body": "fixed included turn credentials see comments figure set knowing current release concern", "d": "12/2015"}, {"body": "btford could please explain option nt available option time lets say hub route definition called currently redirects another route use route many places redirection loginlogout redirection deleting model etc later would implement home component use new home component change btford could file separate issue todo list includes trending router issues", "d": "12/2015"}, {"body": "dart well results", "d": "12/2015"}, {"body": "works though nt think satisfying", "d": "12/2015"}, {"body": "afaik intended behaviour", "d": "12/2015"}, {"body": "pascalprecht thanks confirming found works got suspicion nt find pretty polymer property type boolean bound attribute treats boolean attribute find better approach want binding result use string property value", "d": "12/2015"}, {"body": "could one create issue truefalse supported thanks", "d": "12/2015"}, {"body": "alexfluger", "d": "12/2015"}, {"body": "workaround trying inject routeparams way brandonroberts proposed work way updated plunker say try inject need click protected page link", "d": "12/2015"}, {"body": "pankt nt access route params way already provided plunker example", "d": "12/2015"}, {"body": "omg true thanks brandonroberts", "d": "12/2015"}, {"body": "frederikschubert return promise method documentation says observable method use purpose", "d": "12/2015"}, {"body": "pkozlowskiopensource closed issue think longer valid work bundles correct", "d": "12/2015"}, {"body": "add naming soup think would make sense sufficiently generic concept makes sense observing dom events host element well semantics also match exactly bound variable observing event child child pascalprecht describes confusing observable version identifies event coming", "d": "12/2015"}, {"body": "playing observables tied ui element event one issue passing data via event without storing passing state dom using end pull info dom element make work use case pass id build dynamic url element clicked would love able pass arbitrary model data processes triggered event would also like abstract underlying element perhaps group elements behavior different data one idea came concept observable group usa germany made function observablefromgroupandevent click switchmap r gt thisactivecountry rdatacountry return thisactivecountry json map res response gt resjson subscribe r gt thiscapitol rcapitol new observables sure right direction seem meet goals", "d": "12/2015"}, {"body": "yjbanov could send pr tomorrow please vsavkin", "d": "12/2015"}, {"body": "pr need migrate existing code prior landing putting would throw tsunami warnings people code expecting migration relatively easy using automated tool", "d": "12/2015"}, {"body": "meanwhile fixed unexisting binding passed component error message", "d": "12/2015"}, {"body": "objections like one needed get working ddc work anyway might well finish", "d": "12/2015"}, {"body": "still working alpha route like path foo home component home url like still read foo param paramsget foo get indexhtml instead bar however change path wildcard home component home get correct result sure bug new bug misunderstanding part", "d": "12/2015"}, {"body": "form always invalid working", "d": "12/2015"}, {"body": "vicb reviewed determined polyfills need lot love general direction ok let keep things", "d": "12/2015"}, {"body": "fixed new compiler", "d": "12/2015"}, {"body": "btford repeat question able get angular new router meantime version latest release stablefinal enough would recommend relying development work branch need upgrade", "d": "12/2015"}, {"body": "questions plugged package got error branches something else need reference searching repositories yeilds also breaks", "d": "12/2015"}, {"body": "poshest using using sample repo new router component helper", "d": "12/2015"}, {"body": "nice brandonroberts", "d": "12/2015"}, {"body": "brandonroberts ok thanks yielded perhaps changed since installed seems working much better", "d": "12/2015"}, {"body": "poshest right one ok", "d": "12/2015"}, {"body": "ok brandonroberts copied version included assuming latest github somewhere way thoroughly confused doco date", "d": "12/2015"}, {"body": "poshest latest one latest build nt published yes site way date example updated build today angular", "d": "12/2015"}, {"body": "brandonroberts helps much could please give steer right direction questions stablefinal enough would recommend relying development far going branch", "d": "12/2015"}, {"body": "poshest concrete answers usable production ready best say", "d": "12/2015"}, {"body": "brandonroberts ok much obliged plan least put read using new router one good things prepare figured would worth building directly new one instead starting ngroute", "d": "12/2015"}, {"body": "poshest wasis planned released along suggest start using get feel works help migration either way", "d": "12/2015"}, {"body": "stale since implemented class used strategies cleaned hierarchy going close feel free open new issue reflects current state codebase nt resolved thanks", "d": "12/2015"}, {"body": "jeffbcross think closed got zonejs deps like peerdependencies npm npm part covered also got bundle zone imo good", "d": "12/2015"}, {"body": "impossible link since name redirect must resolve terminal route throw post think marked resolved", "d": "12/2015"}, {"body": "looks like already fixed related issue", "d": "12/2015"}, {"body": "already implemented available alpha onwards", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "igorminar sure huge priority moment completion looming curious still radar complete think month couple months lot projects using npm node whenever want contribute uninstall go back npm node", "d": "12/2015"}, {"body": "end year fri dec nathan walker notifications githubcom wrote igorminar sure huge priority moment beta completion looming curious still radar complete think month couple months lot projects using npm node whenever want contribute uninstall go back npm node reply email directly view github", "d": "12/2015"}, {"body": "please stop use reflectmetadata zonejs rxjs reflectmetadata zonejs included polyfills rxjs depended normal dependencies", "d": "12/2015"}, {"body": "removing using fork better universal bundling support", "d": "12/2015"}, {"body": "interesting new use case need flexibility npm define different kinds peer dependencies optional like zone reflect metadata file used deploying modern browser others could fulfilled npm packages corejs reflectmetadata guess time talk npm folks sat dec pm patrickjs notifications githubcom wrote removing peerdependencies using fork reflectmetadata better universal bundling support reply email directly view github", "d": "12/2015"}, {"body": "news concerning formatters parsers", "d": "12/2015"}, {"body": "maybe", "d": "12/2015"}, {"body": "btford sure understand say parent route behavior referring creating class extended protected routers example let say app router root level child routers public would put canactivate would possible create baseprotected would extended put behavior asking decorators ca nt inherited far know nt see way new decorators maybe wrong", "d": "12/2015"}, {"body": "landed via happy solution better plan implement post closing btford", "d": "12/2015"}, {"body": "believe longer needed introduction ambient directives closing", "d": "12/2015"}, {"body": "addition need version number code compare", "d": "12/2015"}, {"body": "angular app uses npm dependency management want upgrade angular nt way specify two versions angular single packagejson could create two packagejsons since want share many dependencies would good solution wed dec ali malekpour notifications githubcom wrote addition packagejson need version number code import component import component angularcore reply email directly view github", "d": "12/2015"}, {"body": "igorminar looking backward supporting one project really critical point understandable personally need future hopefully much less years gap angular really want smoother migration believe community really expects run simple project future versions without changing every file couple years millions lines typescript code containing much bigger issue btw practice semantic versioning npm follows today projects rarely using npm rely packagejson fundamentally even reference something like", "d": "12/2015"}, {"body": "goal create enough tooling able migrate angular projects future automated way quite yet new templating ts foundations place bring concern angular npm namespace next team meeting wed dec ali malekpour notifications githubcom wrote igorminar looking backward supporting one project really critical point understandable personally need future hopefully much less years gap angular really want smoother migration believe community really expects run simple project future versions without changing every ts file couple years millions lines typescript code containing much bigger issue btw practice semantic versioning npm follows today projects barley using npm rely packagejson fundamentally even reference angularlegacy angularjs something like reply email directly view github", "d": "12/2015"}, {"body": "understanding incompatible semantic versioning project name ie", "d": "12/2015"}, {"body": "theoretically yes would super confusing let talk npm folks guidance issue wed dec pm victor berchet notifications githubcom wrote understanding incompatible semantic versioning project name ie reply email directly view github", "d": "12/2015"}, {"body": "igorminar please consider following concerns using npm scope like split packages makes sense much benefits like current repository npm module contains around files including back ported router incomplete material implementation obviously everything one place worked well alpha development would great time separate concepts individual repositories corresponding npm packages", "d": "12/2015"}, {"body": "considered using scoped packages ran issues tooling support fixable nt time time reconsider", "d": "12/2015"}, {"body": "closing issue since opening http issues high frequency special label http unfortunately searching label nt give real insight priority http issues better stale information", "d": "12/2015"}, {"body": "alexpods wrestling similar use case taking less approach doubts mhevery insights way would appreciated point us design doc custom renderer mentioned", "d": "12/2015"}, {"body": "mhevery something simple dynamically setting url based say json response service passing templateurl view possible drewmoore", "d": "12/2015"}, {"body": "make drewmoore", "d": "12/2015"}, {"body": "would like see ability select template dynamically well useful feature want alter template reuse component implementation", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "hello trying answer questions one know sure anyone actually read far github issues yes sure controversial one could simple intuitive may taken enough time read rxjs docs tutos seems whatever gains simplicity wrt lost use rxjs probably fault initial feeling trying deal http requests use cases able supported shared service approach since yet manage make use cases work really tell help list two use cases use hmac authentication client server basically content http requests signed private key get head path url taken account put post patch anything payload paththe payload included digital signature easy required single configuration applicationwide obviously need called request ready go add authorization header request order detect concurrent modification resources rest api served hash delivered content hash placed xetag header really meaning etag want issues caching various proxies whenever receiving response interceptor used cache hash map resource gt hash value client decided modify resource would issue put would find hash cache piggyback value xifmatch header server would able detect whether resource changed concurrently case interceptor needs called soon response arrives ready go first case hope made use cases clear enough use please let know btw see could current version interested turn ask anyone actually read far github issues cheers", "d": "12/2015"}, {"body": "following previous post struggled bit among others bug managed reach goal alpha bug fixed forget comment regarding rxjs probably good way go learned bit however overriding http service still quite verbose task see complete solution one reasons http methods implemented function defined top module rather using single pipe nt case could simple extend http redefine function could nt anyway trying used much easier less copypaste plans make easier release typescript import basecachebasecache import http request headers response requestoptionsargs requestoptions requestmethods import observable injectable inject forwardref import hmacauthenticator auth injectable export class myhttpwrapper private etags cache new cache maxsize constructor private http inject forwardref gt hmacauthenticator private auth hmacauthenticator request url string request options requestoptionsargs observable let req request typeof url string let reqopt new requestoptions options reqopturl url req new request reqopt else req url get url string options requestoptionsargs observable let opts requestoptionsargs thisbuild requestmethodsget url options return thisrequest url opts post url string body string options requestoptionsargs observable let opts requestoptionsargs thisbuild requestmethodspost url options body return thisrequest url opts put url string body string options requestoptionsargs observable let opts requestoptionsargs thisbuild requestmethodsput url options body return thisrequest url opts patch url string body string options requestoptionsargs observable let opts requestoptionsargs thisbuild requestmethodspatch url options body return thisrequest url opts delete url string options requestoptionsargs observable let opts requestoptionsargs thisbuild requestmethodsdelete url options return thisrequest url opts private getrequestpath req request string return uri requrl windowlocationhref path private beforecall req request void let path thisgetrequestpath req private aftercall req request res response let etag string resheadersget xetag let path thisgetrequestpath req consolelog received xetag etag resource path restext etag thisetagsadd path etag private build method requestmethods url string options requestoptionsargs body string requestoptionsargs let abody body body options amp amp optionsbody optionsbody undefined let opts requestoptionsargs method method url url headers options amp amp optionsheaders optionsheaders new headers search options amp amp optionssearch optionssearch undefined body abody return opts", "d": "12/2015"}, {"body": "global http interceptors seem like antipattern better compose js import interceptrequest interceptresponse myinterceptors function myhttp request request const newrequest request interceptrequest request return use everywhere wanted intercepted behavior ideally name something appropriate like processedhttp specialapihttp something", "d": "12/2015"}, {"body": "angexis usually simpler inject service extend way necessary manage injecting correct dependencies subclass totally unreasonable want something behaves almost exactly like different logic communicate specific backend use case reason could nt change call convenience methods subclasses could override call blesh yeah nt want encourage universallyapplied global interceptorsmutabletransformers angular creating backendspecific services delegate nt override di binding legit", "d": "12/2015"}, {"body": "jeffbcross yes would great could call methods ideally building reusable well real call would need redefined derived class today code function method still bit puzzled simpler solution refer looks already quite comfortable allowed follow decorator pattern extends http default implementation injected understand di mechanism yet confess able chose use one case case basis components nt another option think replace sounds difficult local scope understand mutable global state discouraged clearly agree cheers", "d": "12/2015"}, {"body": "read posts comments still little baffled implement trying achieve trying implement library like lot angular order show ui pending http requests need someway intercept every http request push stack starts remove stack finishes therefore show something screen stack empty wrapper http way go would like build open source library like following spirit angular course still sure guess check source code understand guys think", "d": "12/2015"}, {"body": "wanted pick thelgevold saying using rxjs angular http class practical terms easily convert promise observable using single function similarly convert observable promise single function given easy conversion seems surprising use standardized option default rather introducing new library admittedly powerful also unfamiliar asyncawait coming already babel typescript feels like lot people going want something simple like people probably start googling convert form observable promise appreciate hearing views rxjs chosen default", "d": "12/2015"}, {"body": "jamesthurley still making mind promises vs observables interesting debate recently", "d": "12/2015"}, {"body": "observables converted promises promises converted observables also operators accept observables accept promises", "d": "12/2015"}, {"body": "use case want able something time http request starts ends tried luck extend http class use one import http request response requestoptionsargs connectionbackend requestoptions import observable rxjsobservable import injectable injectable export class progressindicatorhttp extends http bootstrap however nt work tried several different ways latest attempt get exception provider connectionbackend correct way trying outcome want build library people install show loading indicator pending http requests thanks merry christmas observe", "d": "12/2015"}, {"body": "rodrigouroz achieve sample code posted", "d": "12/2015"}, {"body": "angexis ca nt extend class add logic calling parent method error prone reimplement http class course copy paste later implementation changes end old implementation extension would much clearer imho thanks give try", "d": "12/2015"}, {"body": "another usecase list able transparently batch requests occurring within short time reduce round trips ubiquitous especially useful rest apis page navigation could trigger multiple requests example library implements strategy angular jonsamwellangular", "d": "12/2015"}, {"body": "rodrigouroz nt reimplement could use composition rather inheritance basic example could build would export class customhttp constructor private http public request url string request options requestoptionsargs return options public get url string options requestoptionsargs return options public post url string body string options requestoptionsargs return body options public put url string body string options requestoptionsargs return body options public delete url string options requestoptionsargs return options public patch url string body string options requestoptionsargs return body options public head url string options requestoptionsargs return options", "d": "12/2015"}, {"body": "jamesthurley thanks got concept example works however realized write library need instruct people replace http codebase new class bootstrapped httpproviders put provide http useclass myclass got circular di since myclass uses http makes sense could nt find way automatically basically wanted way say time require http use class instead trying build library show loading indicator pending network requests trying make installation easy thank help rod", "d": "12/2015"}, {"body": "think need decorate connectionbackend since want know request starts end nt care contents", "d": "12/2015"}, {"body": "rodrigouroz yes error prone code reason asking change rfc base http implementation allow reuse whether inherit delegate decorator secondary topic good luck anyway", "d": "12/2015"}, {"body": "perhaps rodrigouroz example built global interceptor system would beneficial example class consumed added calls registered interceptors could create looked something like export class myapihttp constructor private interceptinghttp progress progressinterceptor batcher batchinginterceptor public request url string request options requestoptionsargs return options public get url string options requestoptionsargs return options etc way still different interceptor configurations different apis people like rodrigouroz simple standard way providing generic interceptor services course none needs done part core angular", "d": "12/2015"}, {"body": "finally solved case injecting custom xhrbackend like class import connectionbackend connection request response readystate xhrconnection browserxhr responseoptions import injectable import observable rxjsobservable class progressindicatorconnection implements connection private baseconnection xhrconnection private static pendingrequests number injectable export class progressindicatorbackend implements connectionbackend constructor private browserxhr browserxhr private baseresponseoptions responseoptions createconnection request request progressindicatorconnection return new progressindicatorconnection request thisbrowserxhr thisbaseresponseoptions next step understand expose number pending request another component subscribe turn loading indicator achieve angular would use rootscope broadcast event", "d": "12/2015"}, {"body": "rodrigouroz use eventemitter expose event service", "d": "12/2015"}, {"body": "jamesthurley reading page trying understand subscribe event external component emitter progressindicatorconnection class copied", "d": "12/2015"}, {"body": "rodrigouroz inject progressindicatorconnection component call method passing callback nt think discussion thread however", "d": "12/2015"}, {"body": "ca nt find way using eventemitter since nt component instead thinking injecting progressindicatorconnection component shows loading indicator create observable way think", "d": "12/2015"}, {"body": "final solution anyone interested open suggestions comments course import connectionbackend connection request response readystate xhrconnection browserxhr responseoptions import injectable import observable rxjsobservable export class progressindicatorconnection implements connection private baseconnection xhrconnection private static pendingrequests number private static observer static pending observable new observable observer gt progressindicatorconnectionobserver observer injectable export class progressindicatorbackend implements connectionbackend constructor private browserxhr browserxhr private baseresponseoptions responseoptions createconnection request request progressindicatorconnection return new progressindicatorconnection request thisbrowserxhr thisbaseresponseoptions", "d": "12/2015"}, {"body": "ran issue throwing work logging warning running dev mode would also work surprisingly quite lot without zonejs routing component linking property passing worked right added feature required change detection surprised finally realized forgot import zonejs", "d": "12/2015"}, {"body": "heard use joking", "d": "12/2015"}, {"body": "landed casesensitive html parser convention longer needed closing", "d": "12/2015"}, {"body": "got fixed", "d": "12/2015"}, {"body": "avoid someone else hours looking trying inject heroservice appcomponent frustrating using javascript class heroservice heroes hero constructor thisheroes heroes getheroes return thisheroes component selector myapp directives coredirectives formdirectives template hello title providers heroservice class appcomponent public title world public heroes public selectedhero hero", "d": "12/2015"}, {"body": "miqmago use typescript actually able particular case since ts already emits metadata due", "d": "12/2015"}, {"body": "trying many combinations many hours always getting error directive annotation found appcomponent similar combination worked one posted using ts", "d": "12/2015"}, {"body": "make sure emitdecoratormetadata turned ts compiler well", "d": "12/2015"}, {"body": "yes compiled file using proposed solution pascalprecht using gruntts gruntfilejs getting error also", "d": "12/2015"}, {"body": "compiled code nt appear reference like original post confirm", "d": "12/2015"}, {"body": "robwormald compiled code without providers show error using inject anyway tried providers without inject result error js code providers javascript function require exports module filename dirname global global var decorate amp amp thisdecorate function decorators target key desc var c argumentslength r c lt target desc null desc objectgetownpropertydescriptor target key desc typeof reflect object amp amp typeof reflectdecorate function r reflectdecorate decorators target key desc else var decoratorslength gt decorators r c lt r c gt target key r target key r return c gt amp amp r amp amp objectdefineproperty target key r r var require var require heroesservice var appcomponent function function appcomponent heroservice thistitle hello world thisheroes heroservicegetheroes appcomponentprototypeonselect function hero thisselectedhero hero appcomponentprototypegetselectedclass function hero return selected hero thisselectedhero appcomponent decorate selector myapp directives template staticcontentapphtml styles staticcontentappcss providers appcomponent return appcomponent appcomponent apply cjswrapperexports cjswrapperargs", "d": "12/2015"}, {"body": "fact splitted two files result heroservice appts file", "d": "12/2015"}, {"body": "compiled code wich fact works javascript var decorate amp amp thisdecorate function decorators target key desc var c argumentslength r c lt target desc null desc objectgetownpropertydescriptor target key desc typeof reflect object amp amp typeof reflectdecorate function r reflectdecorate decorators target key desc else var decoratorslength gt decorators r c lt r c gt target key r target key r return c gt amp amp r amp amp objectdefineproperty target key r r var param amp amp thisparam function paramindex decorator return function target key decorator target key paramindex var require var require heroesservice var appcomponent function function appcomponent heroservice thistitle hello world thisheroes heroservicegetheroes appcomponentprototypeonselect function hero thisselectedhero hero appcomponentprototypegetselectedclass function hero return selected hero thisselectedhero appcomponent decorate selector myapp directives template staticcontentapphtml styles staticcontentappcss providers param appcomponent return appcomponent appcomponent", "d": "12/2015"}, {"body": "anyway tried providers without inject result error js code providers always need declare providers matter inject services see compiled version without function missing nt case ts adds function soon sees decorator grunt config says nt", "d": "12/2015"}, {"body": "pascalprecht thanks lot issue nt know taken", "d": "12/2015"}, {"body": "welcome let hope one else spends hours", "d": "12/2015"}, {"body": "noticed appinjector got removed replace following code todoapp viewproviders according angular cheat sheet replace appinjector viewproviders thank", "d": "12/2015"}, {"body": "shaohaolin use", "d": "12/2015"}, {"body": "nt issue part beta milestone pipes bit painful right", "d": "12/2015"}, {"body": "support think", "d": "12/2015"}, {"body": "thing everyone saying soon nested hierarchy end pass events multiple components also done much dom coding expect events bubble really threw first time encountered would imagine ask frontend dev listen event gets emitted going say anyone direct parent", "d": "12/2015"}, {"body": "looking bit deeper custom events understand bubble head dom events expected act way thought angular simply firing dom events something like customevent would nt event bubble coming mind set dom events hard see feature would nt added infrastructure already provided dom understand nt eventemitter works nothing dom pub sub adding bubbling complicated would still like see angular point tedious pass events around moment side note removing word event output completely might help confusion think lot long time dom javascripters going see things like eventemitter make wrong conclusion maybe could become publishers something similar thought", "d": "12/2015"}, {"body": "right component event bubble dom events point later may decided allow component events declare bubbling kind far high priority", "d": "12/2015"}, {"body": "something like js import component output elementref component selector child outputs mycustomevent see figured must remove line template export class child constructor private el elementref onclick eldispatchevent new customevent mycustomevent bubbles true", "d": "12/2015"}, {"body": "hmm seems like custom events must eventemitters correct plunkr nt work output eventemitter getting error telling missing subscribe method", "d": "12/2015"}, {"body": "figured custom events bubble must basically nt register event output angular wants eventemitters dispatch custom event normal dom event using discussion whether outputs bubble able bubble still worth thinking though least bubbling really want anyone know shorter quicker method dispatching dom event bubbling", "d": "12/2015"}, {"body": "try use pipe pipe name values pure false export class valuespipe implements pipetransform transform value args null return objectkeys value map key gt value key", "d": "12/2015"}, {"body": "thank already means multiply size list memory use lines code", "d": "12/2015"}, {"body": "supporting mistake jupp especially take consideration current modern browser sustain key order objects except use numbers key known libraries developer used work objects way especially configurations angular decision based theory practice tells us something different rather adjust javascript specification browsers officially nt allowed change order theoretically anymore", "d": "12/2015"}, {"body": "better supported pipe converts object array sorts keys sun dec pm marc j schmidt notifications githubcom wrote supporting mistake jupp especially take consideration current modern browser sustain key order objects except use numbers key known libraries developer used work objects way especially configurations angular decision based theory practice tells us something different rather adjust javascript specification browsers officially nt allowed change order theoretically anymore reply email directly view github", "d": "12/2015"}, {"body": "seems related convert get boolean attributes", "d": "12/2015"}, {"body": "trying understand status serverside support angular issue watch", "d": "12/2015"}, {"body": "angular universal", "d": "12/2015"}, {"body": "learning might simplistic view nt use rxjs already debounce operator need easy way treat event bindings observables", "d": "12/2015"}, {"body": "oliverjanek yup see issue precise use case", "d": "12/2015"}, {"body": "issue closed nt important filter pipe yet even task", "d": "12/2015"}, {"body": "started tracking size", "d": "12/2015"}, {"body": "sample", "d": "12/2015"}, {"body": "less confusing graph", "d": "12/2015"}, {"body": "would great something like thiscontrolasyncvalidator validatorscomposeasync somemethodreturnspromise angular ability add validators inputs dynamically", "d": "12/2015"}, {"body": "think already check implementation usage", "d": "12/2015"}, {"body": "rolandjitsu example great works situation quite specific file input validators need read file file input add validator way example exposes get c fakepathmyphotojpg instead filefilelist instance reading one issue another validators added validatorscompose errors overwritten async validator could help please", "d": "12/2015"}, {"body": "pkantsedalov see maybe take look think file inputs supported angular right probably never could build input directive uses filereader read file parse whatever format need set parsed value would mean validator would see expect path file sure better way think building custom directive take look referenced issues issue referenced look input directives provided angular", "d": "12/2015"}, {"body": "thanx lot rolandjitsu implemented using validation directive approach changes nt need default control validate function got directive properties default one nt ability access file c fakepath etc guys attention investigation think rolandjitsu way way add async validators dynamically example adding errors control got outside javascript param control returns promise validate control control key string", "d": "12/2015"}, {"body": "pkantsedalov worries think also find solution within angular examples somewhere remember probably one commits changelog", "d": "12/2015"}]