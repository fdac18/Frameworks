[{"title": "willinsertelementdidinsertelement called", "body": "using view wrapped inside handlebars willinsertelementdidinsertelement callbacks note called willinsertelementdidinsertelement callbacks myappmyview wo nt called view appended dom failing testcase javascript test callbacks view inside handlebars template function var parentview var willinsertelementcalled false var didinsertelementcalled false templatetestsviewwithcallback scviewextend willinsertelement function willinsertelementcalled true didinsertelement function didinsertelementcalled true parentview scviewcreate template schandlebarscompile condition view templatetestsviewwithcallback condition false scrun function parentviewappend parentviewset condition true ok willinsertelementcalled willinsertelement called ok didinsertelementcalled didinsertelement called parentviewdestroy templatetestsviewwithcallback undefined", "num": "185", "d": "10/2011"}, {"title": "sc tree brought sc", "body": "tree view sc estimated timeline feature", "num": "184", "d": "10/2011"}, {"title": "get object keys", "body": "javascript scobjectcreate sckeys want get order work", "num": "183", "d": "10/2011"}, {"title": "buttons within nt work anymore", "body": "application use current master metamorph changes included master buttons inside handlebars nt fire anymore buttons inside working fine basically handlebars template looks follows precise button works conditional helper already evaluates true initial rendering nt state changes page lifetime see comments details", "num": "182", "d": "10/2011"}, {"title": "nt compile using rake", "body": "error", "num": "179", "d": "10/2011"}, {"title": "consider making scapplication ready trigger easily overridable", "body": "scapplication currently calls ready method document ready occurs phonegap context would want trigger based deviceready event instead currently replace entire init method would preferable override something isolated think", "num": "178", "d": "10/2011"}, {"title": "storeloadrecords save real changes datahashes", "body": "hey sproutcore team started building first real project sproutcore amazed nice parts fit together still want share one thing nt find logical maybe would even call bug app periodically fetch records different types backend see properties changed arrive data source push records store loadrecords suggested problem althought records would stay data hashes data loadrecords method invokes datahashdidchange results refreshing complete view layer fetch made impossible stay specific scroll position since short time case pretty complex tree gone rebuilt even nt obvious like case short lookup actually anything changed data hash would far better please tell totally messed concepts hacky solution used app var patchedstore scstoreextend overrides scstoreloadrecord since original loadrecord method doesnt check datahash actually changed monkey patch introduce store class otherwise bindings would fire whole view rebuild alhought nothing changed record loadrecord function recordtype loadedhash id loadedhash id var key thisstorekeyfor recordtype loadedhashid loadedhashid id var existinghash thisreadeditabledatahash key", "num": "176", "d": "10/2011"}, {"body": "created pull request instead", "d": "10/2011"}, {"body": "nt figured get work helper nt called child view nt inserted metamorphbased virtual view inserted block rendered initially nt noticing ed property changes interestingly put callback test pass well versed enough binding internals figure", "d": "10/2011"}, {"body": "trek nt think description quite right helper get called child view get created even transitions correctly find scviewviews see hook nt updated fire children metamorph views root issue test passes set anything chance render case calls propagates children already rendered change view responsible inserting child fire", "d": "10/2011"}, {"body": "closing pull request also closes issue", "d": "10/2011"}, {"body": "guess sproutcore longer provide ui widgets tree view sproutcoreui", "d": "10/2011"}, {"body": "sproutcore nt differentiate beween keys added keys added sckeys already delegating environment implementing style function looking loop object specific keys could create property returns new object specific keyvalue scobjectcreate attributes function return thisget b thisget b property b cacheable oget attributes often comes loading json data another environment sproutcore specific situation might interested sproutcore ajax", "d": "10/2011"}, {"body": "thanks example helps post interesting", "d": "10/2011"}, {"body": "got pull request adding getproperties make trek example even simpler", "d": "10/2011"}, {"body": "forgot declaration", "d": "10/2011"}, {"body": "really code abstracted structure corrected nothing actual issue", "d": "10/2011"}, {"body": "see button rendered another renderingbinding issue metamorph might related", "d": "10/2011"}, {"body": "see button able click nothing happens time yet test proposed pull request code", "d": "10/2011"}, {"body": "tested current master issue still exists work first time exit view destroy create work still case bindings within conditionals created conditional changes case myrecordisloaded", "d": "10/2011"}, {"body": "provide information command running", "d": "10/2011"}, {"body": "tried compiling sc issues running rake using exact ruby version os x via rvm", "d": "10/2011"}, {"body": "used compile sproutcorejs sproutcoreminjs time ruby working fine today checked latest pull working fine ca nt reproduce closing issue", "d": "10/2011"}, {"body": "turned combination things firstly related memory leak secondly performance issue datastore local query api local query sort based single property records throwing long running script dialog refactored use local query filter array sort manually problem disappeared along huge improvement performance", "d": "10/2011"}, {"body": "seems issue render buffer empty elements add wrappers", "d": "10/2011"}, {"body": "fixed", "d": "10/2011"}]