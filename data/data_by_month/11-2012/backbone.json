[{"title": "declaring variables template replaces model properties name", "body": "hello searched docs google issues list github could nt find anything using backbone underscore templating inside template say something like lt var url gt url property model overwritten fetch anymore know properties model available template scope way around true well least running technical limitation document better nt find anywhere something related put something like nt use reserved words like url fetch parse etc variables names template", "num": "1848", "d": "11/2012"}, {"title": "please please version number", "body": "instead usual quick look see backbone updated meant nope still downloaded latest ran compare gave sea red anyone least jit festive coding season", "num": "1847", "d": "11/2012"}, {"title": "collection create nt trigger error wait true", "body": "hello guys thank awesome library question server returns response error wo nt triggered collection level understand happens attach success design workaround except passing error option create thanks", "num": "1845", "d": "11/2012"}, {"title": "script errors collection changes add", "body": "backbone source collectionadd something listening collection add event listener eventually causes model removed collection loop cause error thismodels array changed use case suppose table represented collection add row row enters edit state new rows saved server explicitly save one row edited add one row add second row b user would asked whether want save discard row discarded removed collection error gets hit", "num": "1844", "d": "11/2012"}, {"title": "inconsistent parsing modelfetch collectionfetch", "body": "collection fetch method correctly sets default value optionsparsetrue allows collection models parsed javascript backbonecollection fetch default set models collection resetting collection arrive passed appends models collection instead resetting fetch function options options options clone options optionsparse void optionsparse true var collection var success optionssuccess optionssuccess function resp status xhr collectionoptionsadd add reset success success collection resp options return thissync read options model fetch method nt set default value optionsparsetrue prohibits default parsing nested models collections javascript backbonemodel fetch model server server representation model differs current attributes overriden triggering event fetch function options options options clone options var model var success optionssuccess optionssuccess function resp status xhr modelset modelparse resp xhr options return false success success model resp options return thissync read options bring behavior two methods sync adding following line model fetch method follows enable consistent parsing behavior facilitate ability parse nested models collections", "num": "1843", "d": "11/2012"}, {"title": "proposal consistent instances model object", "body": "proposal useful multiple parts application nt share objects consistent currently way around use change event amp model instances listen may cause memory leaks models share attributes object", "num": "1841", "d": "11/2012"}, {"title": "ios caching issue", "body": "fetch updated content server using ajax shows older content problem solved clearing cache face problem ios works upto ios", "num": "1839", "d": "11/2012"}, {"title": "map route parameters correct function parameter names", "body": "think would useful route parameter names mapped correct function parameters names current implementation appears apply arguments route directly function left right example follows javascript routes page p index sort index page psort index function index page sort navigate route sortasc variable page store asc instead sort", "num": "1833", "d": "11/2012"}, {"title": "docs fix images stretched mobile", "body": "", "num": "1832", "d": "11/2012"}, {"title": "api forwarding events", "body": "hi want bring idea forwarding event calls different backbone objects eg bubbling event calls currently something similar forward events var listview backboneviewextend downside implementation define lots function actually real logic inside way use anonymous function readable var listview backboneviewextend wish would api change method would allow something like var listview backboneviewextend downside would event system would somehow coupled another context guarantee new context supports event api however would really improve code bubble lots different event chains regards bodo", "num": "1831", "d": "11/2012"}, {"title": "wondering underscore included packagejson", "body": "indeed use lodash shoud nt download underscore bower install backbone know huge dependency backbone underscore downloads package nt need", "num": "1830", "d": "11/2012"}, {"title": "save success callback receieve options", "body": "custom success callback receive options variable error callback sync event documentation also says save accepts success error callbacks options hash passed model response options model xhr options arguments modelsave method", "num": "1829", "d": "11/2012"}, {"title": "array ids collection", "body": "hi model relation many value array models ids change array collection", "num": "1828", "d": "11/2012"}, {"title": "collectionadd nothing duplicate exists undocumented", "body": "struggled one couple hours unable determine collection updating checked docs page faq annotated source page appear mention behavior preferably would appear collectionadd maybe missed tried searching entire page add exist addition reading method docs multiple times", "num": "1825", "d": "11/2012"}, {"title": "super access javascript programmers", "body": "dear backbone developers noticed browsing issues pull requests little love actual javascript developers comparison coffeescript variety trying deal multiple inheritance objects time although recommended method accessing super class works would call convenient added single line coffeescript convenience property tend solution affect coffeescript convenience simply make actual javascript development easier example usage", "num": "1823", "d": "11/2012"}, {"title": "question instantiating backbone view", "body": "hi quick query someone hopefully clarify instantiate backbone view using following code js var test backboneviewextend initialize function alert new test ca nt js new backboneviewextend initialize function alert something function referenced variable trying better understand underlying code setup prevents creating new instance assigning result variable method would prevent sorry topic seemed best place ask considering likely lots backbone experts around thanks", "num": "1821", "d": "11/2012"}, {"title": "multiple var declarations per function method", "body": "compressed code prettifying contains multiple var declarations per method since var declarations hoisted javascript please ensure one var declaration per function method would reduce compressed code size eliminate possible issues related var hoisting", "num": "1819", "d": "11/2012"}, {"title": "compatibility mode permission denied issue", "body": "seeing problem compatibility mode see permission denied response following code executed thisgethash thisiframe called gethash method throws error line found following code backbone make var oldie always false error goes away possible get bit background part backbone code purpose older versions ie thanks", "num": "1818", "d": "11/2012"}, {"title": "set function behaving per documentation", "body": "documentation says valid call set function like first parameter property name string however results following error uncaught typeerror use operator search id title basically trying create properties dynamically xml element nt know names compile time found alternate way achieve using following code however either code documentation appears need updating conform one another thanks chris anderson", "num": "1817", "d": "11/2012"}, {"title": "backbonejs routes always saved history", "body": "full app using backbonejs sometimes navigating directory structure nt seem save history meaning use back button skip pages ideas could causing get frequently chrome windows thank", "num": "1815", "d": "11/2012"}, {"title": "parse nt work", "body": "method parse nt work either collections model something like var mycollection backbonecollectionextend model mymodel url collectionurl nt work nothing happens make changes original backbone parse method nt work tried different versions jquery underscore nt help wrong backbonejs upd mistake server response wos nt json", "num": "1814", "d": "11/2012"}, {"title": "undertanding model first backbonemvc project question", "body": "working project going use highcharts thinking structure project first attempt mvc first time using backbonejs highcharts provide data api data made collection points x series trying decide design app make whole set data series model data point model collection data points chart view like var datapoint backbonemodelextend defaults x initialize function consolelog x var dataseries backbonecollectionsextend model datapoint like var data backbonemodelextend defaults null concern seems like lot overhead make datapoint object seem fit mvc model way thinking thanks guidance", "num": "1813", "d": "11/2012"}, {"title": "option update duplicates collectionadd feature", "body": "batch add models server wanted way force backbone update existing model collection exists id model attributes server attempting add default behaviour ignore duplicates aware backbone designed fetch function mind updating collections using websocket sync setup server push event best handled made following adjustment method around line allows following avoids adding new models conflicts occur simply sets new attributes existing model nt really dug source much looking suggestions optimal ways achieve", "num": "1812", "d": "11/2012"}, {"title": "backbonehistorystart root param working pushstate true", "body": "sample test javascript function call entering url give output however changing code url gives output question seams rather strange behavior missing something", "num": "1811", "d": "11/2012"}, {"title": "allow collectionreset collection", "body": "hi would great able passing another may extended work collection allows resync collections changed separate ways javascript productcollection backbonecollectionextend productselectionview backboneviewextend initialize function bindall currently possible thisavailableproductson reset thisselectableproductsreset", "num": "1810", "d": "11/2012"}, {"title": "self internet explorer", "body": "could nt find anything related issue posted new one setting var self using self working properly change self something else like var selfish use", "num": "1809", "d": "11/2012"}, {"title": "best practice skip model validation fetch", "body": "fetch model server model performs validation relax model validation fetch time regular events change reset etc triggered", "num": "1805", "d": "11/2012"}, {"title": "call delegateevents first view", "body": "instantiate view function initiliaze called first delegateevents want disable unbind event specific situation better place would initialize call delegateevents initialize ca nt call delegateevents first initialize javascript var view backboneview function options thiscid uniqueid view thisconfigure options thisensureelement thisinitializeapply arguments thisdelegateevents", "num": "1804", "d": "11/2012"}, {"title": "routers pushstate serverside content", "body": "predicament number frontendonly backendonly routes content generated via frontend backbone views backend serverrendered content backend routes still want backbone initialize use various page activities handle navigation frontend pages thing special backend routes server prerenders html content body think legacy apps seo etc backbone works great outofthebox pushstateenabled browsers environment problem nonpushstate browsers backbone intelligently swaps url fragments backbone history started presence nonpushstate browser causes fullpage refresh nonpushstate browsers hash server sent fragment server sees know backend content may need loaded second round trip working around using two routers restarting history router initialization faking browser environment variables backbone light routing starts light routing backendonly routes fake pushstate existence backbone wo nt autoredirect windowhistorypushstate windowhistorypushstate gt return lightrouter new lightrouter lightroutefound backbonehistorystart pushstate false root normal backbone routing starts restart history picks second set new nonlight routes backbonehistorystop router new router routefound backbonehistorystart pushstate true root load page initial route matched url address bar routernotfound routefound lightroutefound curious solutions exist backbone handling scenario", "num": "1801", "d": "11/2012"}, {"title": "document problem fetch", "body": "modelprototypefetch document says accepts callbacks options hash passed arguments true callback relevant code follows fetch function options options options clone options var model var success optionssuccess optionssuccess function resp status xhr modelset modelparse resp xhr options return false success success model resp options return thissync read options backbonesync function method model options var success optionssuccess optionssuccess function resp status xhr success success resp status xhr modeltrigger sync model resp options goes two manipulations decorations form nt go first manipulation thus form called think made clear document", "num": "1798", "d": "11/2012"}, {"title": "trailing spaces search query cause route fired twice", "body": "using backbonehistory pushstate disabled navigating search route one trailing spaces route incorrectly triggered twice example looking fragment added windowlocation trailing spaces trimmed thus backbonehistorycheckurl called detects hash fragment changed triggers route illustrate problem added gist showing two tests first test uses mock backbonehistorylocation test setup passes backbonehistorylocation replaced windowlocation would actual use test fails route triggered twice submit pull request moment potential fix issue along tests", "num": "1793", "d": "11/2012"}, {"title": "error accessing model attributes parse", "body": "constructing models error thrown parse function tries access attributes via understand nt set parse called constructor case still seems like nt throw js error accessing attributes outside using new model option never problem", "num": "1791", "d": "11/2012"}, {"title": "ca nt import global scope root exports", "body": "anything actual global object following imports always fail require underscore server already present var root backbone purposes jquery zepto ender owns variable backbone rootjquery rootzepto rootender less problem fallback however case failure permanent never reevaluate pull request ready go fix", "num": "1789", "d": "11/2012"}, {"body": "thanks always forget invisible files", "d": "11/2012"}, {"body": "hi lfilho much scoping backbone using example compiled following javascript since variable defined local scope value used property want use explicitly instead also leave statement altogether option js template lt var url gt null variable x compiled function x var p jarrayprototypejoin printfunction pjcall arguments p var url p return p case must always use gain great deal speed hope helps", "d": "11/2012"}, {"body": "hello brad thank response course things clearer right actually nothing backbone root cause simpler expecting maybe would nt bad idea warning reminder bb users somewhere something like use bb reserved keywords inside templates url fetch etc otherwise due scoping issues linktotechnicalexplanation model method properties get overwritten maybe somewhere could find think good thing docs mean specially explanation like course dumb think honest mistake easy made anyone agree afterall var url bla something silly one could easily say template file speaking template part view automatic already coding template file nt even remember thoughts would gladly write pull request small text snippet warningreminder thanks", "d": "11/2012"}, {"body": "definitely easy mistake make however since backbone template engine agnostic nt think warnings go anywhere warning could placed documentation underscoreorg would probably best alongside option docs since option makes issue moot", "d": "11/2012"}, {"body": "yeah although shame know many people fall trap agree bb concern take look underscores docs see something could improve regarding thanks", "d": "11/2012"}, {"body": "coming soon issue count gets bit lower see close one please", "d": "11/2012"}, {"body": "thanks caseywebdev", "d": "11/2012"}, {"body": "yes afraid fails model collection time collection wo nt error think makes logical sense would strange collection fire error event model nt contain use callback case", "d": "11/2012"}, {"body": "fact however works without wait true since add model collection ajax request", "d": "11/2012"}, {"body": "right exactly case model collection", "d": "11/2012"}, {"body": "okay thank jashkenas", "d": "11/2012"}, {"body": "correct treated atomic operation want add multiple rows check potentially delete one add one time", "d": "11/2012"}, {"body": "sure mean currently added one time row added first later row b added view listens collection add event needs change collection row b added propose automatically make changes collection model added listen add event ca nt anything backbone nt finished work yet", "d": "11/2012"}, {"body": "ah see want wait backbone finish adding removing current models proceeding rest action collectionon add defer functionthatchecksforeditstateandasksfordeletes", "d": "11/2012"}, {"body": "sure exactly issue looks like though issue fixed master already tried master instead", "d": "11/2012"}, {"body": "looks like defer essentially settimeout deterministically wait call stack clear tiny chance could still fail usually need use settimeout order make sure code already finished running probably architectural problem code", "d": "11/2012"}, {"body": "sorry posted wrong pull request ended taken care point remains master", "d": "11/2012"}, {"body": "actually yes think exactly issue loop master replaced", "d": "11/2012"}, {"body": "braddunbar thoughts one", "d": "11/2012"}, {"body": "think parsing default good thing", "d": "11/2012"}, {"body": "seems like always parse true", "d": "11/2012"}, {"body": "bit confused current behavior would nt better never parse default always parse function defined", "d": "11/2012"}, {"body": "yep sounds great", "d": "11/2012"}, {"body": "like", "d": "11/2012"}, {"body": "jashkenas raised concern commit", "d": "11/2012"}, {"body": "jashkenas problem still exists reopen issue scenario server responds fetch deep data document containing data nested models collections fetching root model parse part data model nt know anything child model parsing requirements root model able pass parse flag chain child models yet instantiated perform parse part data important therefore able push parse flag chain done setting default optionsparse true indicated code original post thoughts", "d": "11/2012"}, {"body": "marcusmacinnes master", "d": "11/2012"}, {"body": "perfect thanks", "d": "11/2012"}, {"body": "legal useful backbone allow representations model merely two different models id want share model share", "d": "11/2012"}, {"body": "nt make clear want write decoupled code app share models would ideally want fetch model one place app fetch another instance object place app instances model represent consistent instance object change one model wold also change model way parts app nt know still consistent data something similar spinejs dynamic records", "d": "11/2012"}, {"body": "share model instances still decoupled code exactly go depends application structured usually use event bus system pass model instances throughout application way another technique detailed scroll sharing models views gives functionality want", "d": "11/2012"}, {"body": "thanks opening issue bug bit shocking one looks like variety workarounds fixes server ajax options quick search would lead answers", "d": "11/2012"}, {"body": "thanks figured probably come back closed bad", "d": "11/2012"}, {"body": "yes positional mapping route arguments function arguments design instead us trying decompile function detect match names use mapping function normalize arguments want use generic handler", "d": "11/2012"}, {"body": "ok thanks quick response jashkenas", "d": "11/2012"}, {"body": "quite like first two options propose event name second parameter solves common use case fairly concise elegant way without adding much api breaking existing functionality", "d": "11/2012"}, {"body": "nt think wise add forwarding feature api simply triggering event another object nt hard merely find syntax bulky alternative ways write", "d": "11/2012"}, {"body": "wondering underscore included packagejson yes feel free remove nt want", "d": "11/2012"}, {"body": "hi andrejj thanks reporting sure version backbone using fixed master hope works", "d": "11/2012"}, {"body": "using latest stable one tnx quick response", "d": "11/2012"}, {"body": "probably best way obtain model collection set models collection collections sure valid easytouse hand use plain models array one attribute define basic functions need check links might useful", "d": "11/2012"}, {"body": "please try google group irc stackoverflow questions instead opening ticket", "d": "11/2012"}, {"body": "changelog mentions multiple models id longer allowed single collection", "d": "11/2012"}, {"body": "explains missed thanks behavior still belongs docs reading changelog libraryapietc necessary understand", "d": "11/2012"}, {"body": "note want latter duplicate model merge current existing one version master optional parameter merge true", "d": "11/2012"}, {"body": "thanks quick turnaround", "d": "11/2012"}, {"body": "would bet people use backbone nt use coffeescript though p easily something subclass", "d": "11/2012"}, {"body": "would also like see support put backbone core since coffeescript using good success call function", "d": "11/2012"}, {"body": "thanks answers guys know stuff already posting feature requestpull request since find appalling link lines code backbonesuper project compensate single unwritten line bb part", "d": "11/2012"}, {"body": "subclass backbone vanilla classes projects think point backbone little changes like easily accomplished without interfering others ideas vanilla class see example still want get core would set proper pull request merging click away", "d": "11/2012"}, {"body": "looking solution dealt already question original class rather accommodating another language javascript right line development version backbone make coffeescripters life easier add single extra line even characters allow javascript developers benefits", "d": "11/2012"}, {"body": "closing already discussed length primarily", "d": "11/2012"}, {"body": "back", "d": "11/2012"}, {"body": "hi integralist definitely initialize view second form need extra parentheses would nt recommend however somewhat unclear", "d": "11/2012"}, {"body": "hi ajaxsolutions thanks opening issue hoisting issues caught test suite compressors generally reduce one declaration need unless specific piece code clarity increased using one var declaration rather optimize readability", "d": "11/2012"}, {"body": "checked afraid got bad news working fine double check make sure got doctype defined site trying start history dom finished loading fine", "d": "11/2012"}, {"body": "received permission denied message documentdomain set document seems known issue", "d": "11/2012"}, {"body": "reproduce problem following code works expected code uses vanilla backbone model object extending backbone model book class code defines another question version backbone using", "d": "11/2012"}, {"body": "chris somewhat related workaround work little simply passing directly object literal", "d": "11/2012"}, {"body": "ok sorry think question version pertinent taken existing project brand new javascript development issue googled backbone jsfiddle used first entry fiddle reproducing problem project exactly assumed documentation incorrect without proper checks first nt realise project using old version jsfiddle also using older version sorry wasting time first thing checked doubt updating latest version fix problem apologies", "d": "11/2012"}, {"body": "thanks help bret", "d": "11/2012"}, {"body": "problem welcome js development", "d": "11/2012"}, {"body": "thanks massive learning curve", "d": "11/2012"}, {"body": "problem convinced something done idea since calling routernavigate way every time", "d": "11/2012"}, {"body": "afraid without test case way reproduce somehow nt much going able help never observed suggest keeping using live app adding test script quickly tries run number routes predefined order", "d": "11/2012"}, {"body": "hi charleskline would say depends number points much functionality need dozens maybe even hundreds models probably ok thousands tens thousands models probably start introduce nontrivial overhead would guess nt need model point definitely something prototype use performance data experience", "d": "11/2012"}, {"body": "hi sterlingwes already implemented master branch used via please let us know nt function properly", "d": "11/2012"}, {"body": "fantastic thanks brad letting know nov pm brad dunbar notifications githubcom wrote hi sterlingwes already implemented master branch used via collectionadd models merge true please let us know nt function properly reply email directly view github", "d": "11/2012"}, {"body": "hi beatkyo version backbone using version master work sample requires use leading trailing slash nt already would mind giving shot version master", "d": "11/2012"}, {"body": "hi sample tested master version working expected however using still wrong query parameters outputs outputs use master version next release thanks braddunbar", "d": "11/2012"}, {"body": "great glad works", "d": "11/2012"}, {"body": "surface seems convenient similar features caused rather subtle bugs instance take another model argument source quite bugs think explicit pass good thing case", "d": "11/2012"}, {"body": "hi marcvdm thanks posting really nt enough information give practical solution provide sample code illustrating problem relation backbone glad take look", "d": "11/2012"}, {"body": "hi marcvdm problem specific backbone issue common one many run using javascript browser environment variable usually defined browser pointer global scope recommended stay away using pointer scope rather something like", "d": "11/2012"}, {"body": "stillmotion thanks explanation used variable allot code never ran intro problems tested internet explorer changed new variable called smile thanks tip thou", "d": "11/2012"}, {"body": "ca nt well nt point validation ensure model never enters invalid state server wants send incomplete model relax validation add another function restrictive version", "d": "11/2012"}, {"body": "see point probably skipping validation meaningful create authentication logic current example based cookies example model validation used plugin backbonevalidationjs class session extends backbonemodel urlroot sessions idattribute userid defaults authenticated null email null password null csrftoken null validation email required true pattern email minlength password required true minlength initialize gt sync resetpassword resetpassword gt set password null silent true app initialization model fetches backend url sessionscurrent backend answers response json whether current user token cookie http header authenticated includes additional params userid email csrftoken response see initial get password model validation fail asking relax validation least initial get say turns current user authenticated backend login dialogbox appears user enters email password push login button calls modelsave loginandpasswordhere sync security purposes like reset password attribute model makes sense", "d": "11/2012"}, {"body": "yep would nt use function instead", "d": "11/2012"}, {"body": "could often times folks want change events update things initialize events attached example could get behavior removing event inside instead disabling fact", "d": "11/2012"}, {"body": "hi mikeknoop become rather common question late rather certain backbone handling differently taking account nonpushstate browsers change url without page refresh remaining incorrect url acceptable two choices apps serverrendered content use fallback machanism described make sure app rooted correctly means nonpushstate browsers handle loading content page loaded rendered clientside use hashchange routing require page refresh nonpushstate browsers said hybrid form like use pages server rendered content client rendered content", "d": "11/2012"}, {"body": "mean starting history example see event docs nt mention anything else", "d": "11/2012"}, {"body": "nt realize documentation reopen add gist passing indicate want use hash based routing browsers nt support pushstate opting instead full page refresh would prevent swapping url mentioned", "d": "11/2012"}, {"body": "sounds like exactly want backbone already account scenario realize thanks pointing hopefully docs addition thread guide folks similar situation", "d": "11/2012"}, {"body": "hi considering javascript new backbonerouterextend routes home login login home function alert hi home page login function alert hi login page function never want hashbased routing pushstate available backbonehistorystart pushstate true hashchange false following use case serverside generated content browser capabilities example enabled disabled browse well alert alert nt want hashbased routing serverside generated content nt routing quite annoying little patch lem submit pr reference issue", "d": "11/2012"}, {"body": "fixed", "d": "11/2012"}, {"body": "closing favor", "d": "11/2012"}, {"body": "like said wookiehangover interesting never mentioned js programmers quickly learn name keys objects things like much agree problem javascript nt correct hash primitive time hottest hot code paths nt think wise us insert check every lookup said folks start run frequently reconsider", "d": "11/2012"}, {"body": "using mutuallyexclusive css classes real nice way workspace setmode help tab workspace setmode search tab", "d": "11/2012"}, {"body": "clarified master", "d": "11/2012"}, {"body": "let close favor", "d": "11/2012"}, {"body": "theluk thanks opening issue considered using set initial state better way achieve trying without getting caught internallyused hash documented accessor worth example implemented without ever worrying model previousattributes jsfiddle type state transitioning looking using event binding entire collection state attribute easily filter state transitions care still call resetting model states since resetting detected transition would nt matter anyway going close since known behavior unless compelling argument use case causing significant confusion", "d": "11/2012"}, {"body": "hm see fiddle didnt recognize problem talking talking three steps two third one important result correct states see updated jsdiddle please", "d": "11/2012"}, {"body": "part example pointed nt needed listen event take action state change remove updated example works expected say definitely odd behavior though", "d": "11/2012"}, {"body": "nope example behaving correctly activate function effective set system models become activated never tell system become deactivated therefore next time become activated change state fortunately example also simple fix nt use", "d": "11/2012"}, {"body": "fortunately example also simple fix nt use silent expect answer tell set something silently system know nothing change even internally right really stupid like would say like collections function oh add models effectively never tell system added models know whole thing would fixed one line unfortunately decided", "d": "11/2012"}, {"body": "logically course set something silently previousattributes must change mean trigger event still handle correct states otherwise renamve something like", "d": "11/2012"}, {"body": "expect answer glad hear current logic behaving correctly nt anything internal states looking simply point view external observer model new model state modelset state event state gt modelset state silent true event perspective app change made previous valid state model still modelprevious state gt modelset state event fired perspective app change made state still like times function modelset state", "d": "11/2012"}, {"body": "therefor collection new collection collectionlength collectionreset name foo name bar using silent add stuff collectionlength perspective app change made previous length collection still need change whole backbone silent applications perspective sourcecode", "d": "11/2012"}, {"body": "misunderstanding meaning events reset collection may use silent add internally implement function application still sees event means receive single event instead many events entire collection replaced similarly means receive event contents model changed", "d": "11/2012"}, {"body": "really thing fine thats wrong think see backbone something almost perfect dont want change anything simply correct", "d": "11/2012"}, {"body": "yes looks correct far observers concerned change value always", "d": "11/2012"}, {"body": "link already updated go next release", "d": "11/2012"}, {"body": "hey guys interested made grunt plugin custom backbone builds generated normal backbone source files really tested although run backbone version router amp history stuff left works well feedback welcome", "d": "11/2012"}, {"body": "asciidisco thank rock", "d": "11/2012"}, {"body": "update dying use merge collections", "d": "11/2012"}, {"body": "got using master production quite time", "d": "11/2012"}, {"body": "indeed lt open tickets still quite feel free use master meantime", "d": "11/2012"}, {"body": "genexp behavior expected", "d": "11/2012"}, {"body": "mulling ticket arguments something bit declarative persuasive still sure think use cases would actually end better animperativeapiinsheepsclothing beyond initial objections machineghost mentioned considerations view single element default times makes sense single description events also applied times models may transitory view may get one instantiated later ajax request finishes view may reference models listens events others references call methods declarative api would distinguish point event string looks like lost battle keeping js instead string better glad take closer look version ticket includes patch proposal discussion think would help flesh ins outs api bit", "d": "11/2012"}, {"body": "tgriesser nt merge fix issue nt issue closed", "d": "11/2012"}, {"body": "shoe yes closed", "d": "11/2012"}, {"body": "closing fixed leegorous please let us know problem nt solved", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "powmedia intended behavior difference order allow routes added later override previous routes since routing table needs respect order intentional choice explained comment route adding logic ends taking place closing", "d": "11/2012"}, {"body": "came issue assumed passing parse true collection ways mean parse collection get executed problem executed calling fetch initially load page constructing collections json parse nt called guess call manually untilif fixed", "d": "11/2012"}, {"body": "closing based follow lack actionable information thereafter", "d": "11/2012"}, {"body": "closing unless truly unresolved issue", "d": "11/2012"}, {"body": "vkovalskiy stumbled upon error use instead method defintion works", "d": "11/2012"}, {"body": "gucki wow thanks", "d": "11/2012"}, {"body": "malandrew closing please reopen pull request ifwhen patch ready", "d": "11/2012"}, {"body": "hi bumped issue using stable upgrading version backbonejs master fixed however complaining current behavior brief concern starting backbonehistory follows works ok application landing page terminating slash per server side routing whenever want navigate different pagesviews within application use go landing view go confirmation page however ing landing page always sends url terminates slash concern obsessive compulsive one afraid want urls pointing landing page end terminating slashes iscanthere way configure suggested solutions would configuration option terminates slash path writes url ends slash vice versa path send url terminating slashes send url terminating slash emulating application configuration option node express framework quoting enable strict routing default foo foo treated router thanks hany", "d": "11/2012"}, {"body": "kerdany server respond trailing slash root ca nt think situation beneficial honestly given amount issues surrounding much rather keep things simple possible", "d": "11/2012"}, {"body": "markreid ignoring search parameters valid choice router needs properly ignore", "d": "11/2012"}, {"body": "think developer used trigger true expressly want logic route called regardless whether history gets updated suggesting call function one would always need check page user first decide whether call navigate update history call function directly use case route renders view conditionally based users authentication state user auth various pages site users authentication state changes would want rerender route display relevant content logic work show already", "d": "11/2012"}, {"body": "nt think backbonehistory observing changes location calls use case fine jashkenas says call function need directly authentication", "d": "11/2012"}, {"body": "leaving thoughts issue today encountered seems highly unintuitive route nt called explicitly pass options hash routernavigate would love see addition option onuradsay suggested", "d": "11/2012"}, {"body": "practicality patrickod onuradsay idea", "d": "11/2012"}, {"body": "still able receive event determine app refresh called figure many hacks mentioned clean think behavior common enough put router", "d": "11/2012"}, {"body": "afraid going happen fact folks asking actually impetus remove unconditionally fire event let explain events backbone notified state changed like models trigger event second time state changed trying navigate location already change state trigger event want callback fire whenever button clicked add callback want use backbone events call objecttrigger myevent", "d": "11/2012"}, {"body": "seems like instead assume true option nt add functionality though always something like button handlers", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "still see strong case backboneeventsone event listener registration function really would nt require much code", "d": "11/2012"}]