[{"title": "declaring variables template replaces model properties name", "body": "hello searched docs google issues list github could nt find anything using backbone underscore templating inside template say something like lt var url gt url property model overwritten fetch anymore know properties model available template scope way around true well least running technical limitation document better nt find anywhere something related put something like nt use reserved words like url fetch parse etc variables names template", "num": "1848", "d": "11/2012"}, {"title": "please please version number", "body": "instead usual quick look see backbone updated meant nope still downloaded latest ran compare gave sea red anyone least jit festive coding season", "num": "1847", "d": "11/2012"}, {"title": "collection create nt trigger error wait true", "body": "hello guys thank awesome library question server returns response error wo nt triggered collection level understand happens attach success design workaround except passing error option create thanks", "num": "1845", "d": "11/2012"}, {"title": "script errors collection changes add", "body": "backbone source collectionadd something listening collection add event listener eventually causes model removed collection loop cause error thismodels array changed use case suppose table represented collection add row row enters edit state new rows saved server explicitly save one row edited add one row add second row b user would asked whether want save discard row discarded removed collection error gets hit", "num": "1844", "d": "11/2012"}, {"title": "inconsistent parsing modelfetch collectionfetch", "body": "collection fetch method correctly sets default value optionsparsetrue allows collection models parsed javascript backbonecollection fetch default set models collection resetting collection arrive passed appends models collection instead resetting fetch function options options options clone options optionsparse void optionsparse true var collection var success optionssuccess optionssuccess function resp status xhr collectionoptionsadd add reset success success collection resp options return thissync read options model fetch method nt set default value optionsparsetrue prohibits default parsing nested models collections javascript backbonemodel fetch model server server representation model differs current attributes overriden triggering event fetch function options options options clone options var model var success optionssuccess optionssuccess function resp status xhr modelset modelparse resp xhr options return false success success model resp options return thissync read options bring behavior two methods sync adding following line model fetch method follows enable consistent parsing behavior facilitate ability parse nested models collections", "num": "1843", "d": "11/2012"}, {"title": "proposal consistent instances model object", "body": "proposal useful multiple parts application nt share objects consistent currently way around use change event amp model instances listen may cause memory leaks models share attributes object", "num": "1841", "d": "11/2012"}, {"title": "ios caching issue", "body": "fetch updated content server using ajax shows older content problem solved clearing cache face problem ios works upto ios", "num": "1839", "d": "11/2012"}, {"title": "map route parameters correct function parameter names", "body": "think would useful route parameter names mapped correct function parameters names current implementation appears apply arguments route directly function left right example follows javascript routes page p index sort index page psort index function index page sort navigate route sortasc variable page store asc instead sort", "num": "1833", "d": "11/2012"}, {"title": "docs fix images stretched mobile", "body": "", "num": "1832", "d": "11/2012"}, {"title": "api forwarding events", "body": "hi want bring idea forwarding event calls different backbone objects eg bubbling event calls currently something similar forward events var listview backboneviewextend downside implementation define lots function actually real logic inside way use anonymous function readable var listview backboneviewextend wish would api change method would allow something like var listview backboneviewextend downside would event system would somehow coupled another context guarantee new context supports event api however would really improve code bubble lots different event chains regards bodo", "num": "1831", "d": "11/2012"}, {"title": "wondering underscore included packagejson", "body": "indeed use lodash shoud nt download underscore bower install backbone know huge dependency backbone underscore downloads package nt need", "num": "1830", "d": "11/2012"}, {"title": "save success callback receieve options", "body": "custom success callback receive options variable error callback sync event documentation also says save accepts success error callbacks options hash passed model response options model xhr options arguments modelsave method", "num": "1829", "d": "11/2012"}, {"title": "array ids collection", "body": "hi model relation many value array models ids change array collection", "num": "1828", "d": "11/2012"}, {"title": "collectionadd nothing duplicate exists undocumented", "body": "struggled one couple hours unable determine collection updating checked docs page faq annotated source page appear mention behavior preferably would appear collectionadd maybe missed tried searching entire page add exist addition reading method docs multiple times", "num": "1825", "d": "11/2012"}, {"title": "super access javascript programmers", "body": "dear backbone developers noticed browsing issues pull requests little love actual javascript developers comparison coffeescript variety trying deal multiple inheritance objects time although recommended method accessing super class works would call convenient added single line coffeescript convenience property tend solution affect coffeescript convenience simply make actual javascript development easier example usage", "num": "1823", "d": "11/2012"}, {"title": "question instantiating backbone view", "body": "hi quick query someone hopefully clarify instantiate backbone view using following code js var test backboneviewextend initialize function alert new test ca nt js new backboneviewextend initialize function alert something function referenced variable trying better understand underlying code setup prevents creating new instance assigning result variable method would prevent sorry topic seemed best place ask considering likely lots backbone experts around thanks", "num": "1821", "d": "11/2012"}, {"title": "multiple var declarations per function method", "body": "compressed code prettifying contains multiple var declarations per method since var declarations hoisted javascript please ensure one var declaration per function method would reduce compressed code size eliminate possible issues related var hoisting", "num": "1819", "d": "11/2012"}, {"title": "compatibility mode permission denied issue", "body": "seeing problem compatibility mode see permission denied response following code executed thisgethash thisiframe called gethash method throws error line found following code backbone make var oldie always false error goes away possible get bit background part backbone code purpose older versions ie thanks", "num": "1818", "d": "11/2012"}, {"title": "set function behaving per documentation", "body": "documentation says valid call set function like first parameter property name string however results following error uncaught typeerror use operator search id title basically trying create properties dynamically xml element nt know names compile time found alternate way achieve using following code however either code documentation appears need updating conform one another thanks chris anderson", "num": "1817", "d": "11/2012"}, {"title": "backbonejs routes always saved history", "body": "full app using backbonejs sometimes navigating directory structure nt seem save history meaning use back button skip pages ideas could causing get frequently chrome windows thank", "num": "1815", "d": "11/2012"}, {"title": "parse nt work", "body": "method parse nt work either collections model something like var mycollection backbonecollectionextend model mymodel url collectionurl nt work nothing happens make changes original backbone parse method nt work tried different versions jquery underscore nt help wrong backbonejs upd mistake server response wos nt json", "num": "1814", "d": "11/2012"}, {"title": "undertanding model first backbonemvc project question", "body": "working project going use highcharts thinking structure project first attempt mvc first time using backbonejs highcharts provide data api data made collection points x series trying decide design app make whole set data series model data point model collection data points chart view like var datapoint backbonemodelextend defaults x initialize function consolelog x var dataseries backbonecollectionsextend model datapoint like var data backbonemodelextend defaults null concern seems like lot overhead make datapoint object seem fit mvc model way thinking thanks guidance", "num": "1813", "d": "11/2012"}, {"title": "option update duplicates collectionadd feature", "body": "batch add models server wanted way force backbone update existing model collection exists id model attributes server attempting add default behaviour ignore duplicates aware backbone designed fetch function mind updating collections using websocket sync setup server push event best handled made following adjustment method around line allows following avoids adding new models conflicts occur simply sets new attributes existing model nt really dug source much looking suggestions optimal ways achieve", "num": "1812", "d": "11/2012"}, {"title": "backbonehistorystart root param working pushstate true", "body": "sample test javascript function call entering url give output however changing code url gives output question seams rather strange behavior missing something", "num": "1811", "d": "11/2012"}, {"title": "allow collectionreset collection", "body": "hi would great able passing another may extended work collection allows resync collections changed separate ways javascript productcollection backbonecollectionextend productselectionview backboneviewextend initialize function bindall currently possible thisavailableproductson reset thisselectableproductsreset", "num": "1810", "d": "11/2012"}, {"title": "self internet explorer", "body": "could nt find anything related issue posted new one setting var self using self working properly change self something else like var selfish use", "num": "1809", "d": "11/2012"}, {"title": "best practice skip model validation fetch", "body": "fetch model server model performs validation relax model validation fetch time regular events change reset etc triggered", "num": "1805", "d": "11/2012"}, {"title": "call delegateevents first view", "body": "instantiate view function initiliaze called first delegateevents want disable unbind event specific situation better place would initialize call delegateevents initialize ca nt call delegateevents first initialize javascript var view backboneview function options thiscid uniqueid view thisconfigure options thisensureelement thisinitializeapply arguments thisdelegateevents", "num": "1804", "d": "11/2012"}, {"title": "routers pushstate serverside content", "body": "predicament number frontendonly backendonly routes content generated via frontend backbone views backend serverrendered content backend routes still want backbone initialize use various page activities handle navigation frontend pages thing special backend routes server prerenders html content body think legacy apps seo etc backbone works great outofthebox pushstateenabled browsers environment problem nonpushstate browsers backbone intelligently swaps url fragments backbone history started presence nonpushstate browser causes fullpage refresh nonpushstate browsers hash server sent fragment server sees know backend content may need loaded second round trip working around using two routers restarting history router initialization faking browser environment variables backbone light routing starts light routing backendonly routes fake pushstate existence backbone wo nt autoredirect windowhistorypushstate windowhistorypushstate gt return lightrouter new lightrouter lightroutefound backbonehistorystart pushstate false root normal backbone routing starts restart history picks second set new nonlight routes backbonehistorystop router new router routefound backbonehistorystart pushstate true root load page initial route matched url address bar routernotfound routefound lightroutefound curious solutions exist backbone handling scenario", "num": "1801", "d": "11/2012"}, {"title": "document problem fetch", "body": "modelprototypefetch document says accepts callbacks options hash passed arguments true callback relevant code follows fetch function options options options clone options var model var success optionssuccess optionssuccess function resp status xhr modelset modelparse resp xhr options return false success success model resp options return thissync read options backbonesync function method model options var success optionssuccess optionssuccess function resp status xhr success success resp status xhr modeltrigger sync model resp options goes two manipulations decorations form nt go first manipulation thus form called think made clear document", "num": "1798", "d": "11/2012"}, {"title": "trailing spaces search query cause route fired twice", "body": "using backbonehistory pushstate disabled navigating search route one trailing spaces route incorrectly triggered twice example looking fragment added windowlocation trailing spaces trimmed thus backbonehistorycheckurl called detects hash fragment changed triggers route illustrate problem added gist showing two tests first test uses mock backbonehistorylocation test setup passes backbonehistorylocation replaced windowlocation would actual use test fails route triggered twice submit pull request moment potential fix issue along tests", "num": "1793", "d": "11/2012"}, {"title": "error accessing model attributes parse", "body": "constructing models error thrown parse function tries access attributes via understand nt set parse called constructor case still seems like nt throw js error accessing attributes outside using new model option never problem", "num": "1791", "d": "11/2012"}, {"title": "ca nt import global scope root exports", "body": "anything actual global object following imports always fail require underscore server already present var root backbone purposes jquery zepto ender owns variable backbone rootjquery rootzepto rootender less problem fallback however case failure permanent never reevaluate pull request ready go fix", "num": "1789", "d": "11/2012"}, {"body": "thanks always forget invisible files", "d": "11/2012"}, {"body": "hi lfilho much scoping backbone using example compiled following javascript since variable defined local scope value used property want use explicitly instead also leave statement altogether option js template lt var url gt null variable x compiled function x var p jarrayprototypejoin printfunction pjcall arguments p var url p return p case must always use gain great deal speed hope helps", "d": "11/2012"}, {"body": "hello brad thank response course things clearer right actually nothing backbone root cause simpler expecting maybe would nt bad idea warning reminder bb users somewhere something like use bb reserved keywords inside templates url fetch etc otherwise due scoping issues linktotechnicalexplanation model method properties get overwritten maybe somewhere could find think good thing docs mean specially explanation like course dumb think honest mistake easy made anyone agree afterall var url bla something silly one could easily say template file speaking template part view automatic already coding template file nt even remember thoughts would gladly write pull request small text snippet warningreminder thanks", "d": "11/2012"}, {"body": "definitely easy mistake make however since backbone template engine agnostic nt think warnings go anywhere warning could placed documentation underscoreorg would probably best alongside option docs since option makes issue moot", "d": "11/2012"}, {"body": "yeah although shame know many people fall trap agree bb concern take look underscores docs see something could improve regarding thanks", "d": "11/2012"}, {"body": "coming soon issue count gets bit lower see close one please", "d": "11/2012"}, {"body": "thanks caseywebdev", "d": "11/2012"}, {"body": "yes afraid fails model collection time collection wo nt error think makes logical sense would strange collection fire error event model nt contain use callback case", "d": "11/2012"}, {"body": "fact however works without wait true since add model collection ajax request", "d": "11/2012"}, {"body": "right exactly case model collection", "d": "11/2012"}, {"body": "okay thank jashkenas", "d": "11/2012"}, {"body": "correct treated atomic operation want add multiple rows check potentially delete one add one time", "d": "11/2012"}, {"body": "sure mean currently added one time row added first later row b added view listens collection add event needs change collection row b added propose automatically make changes collection model added listen add event ca nt anything backbone nt finished work yet", "d": "11/2012"}, {"body": "ah see want wait backbone finish adding removing current models proceeding rest action collectionon add defer functionthatchecksforeditstateandasksfordeletes", "d": "11/2012"}, {"body": "sure exactly issue looks like though issue fixed master already tried master instead", "d": "11/2012"}, {"body": "looks like defer essentially settimeout deterministically wait call stack clear tiny chance could still fail usually need use settimeout order make sure code already finished running probably architectural problem code", "d": "11/2012"}, {"body": "sorry posted wrong pull request ended taken care point remains master", "d": "11/2012"}, {"body": "actually yes think exactly issue loop master replaced", "d": "11/2012"}, {"body": "braddunbar thoughts one", "d": "11/2012"}, {"body": "think parsing default good thing", "d": "11/2012"}, {"body": "seems like always parse true", "d": "11/2012"}, {"body": "bit confused current behavior would nt better never parse default always parse function defined", "d": "11/2012"}, {"body": "yep sounds great", "d": "11/2012"}, {"body": "like", "d": "11/2012"}, {"body": "jashkenas raised concern commit", "d": "11/2012"}, {"body": "jashkenas problem still exists reopen issue scenario server responds fetch deep data document containing data nested models collections fetching root model parse part data model nt know anything child model parsing requirements root model able pass parse flag chain child models yet instantiated perform parse part data important therefore able push parse flag chain done setting default optionsparse true indicated code original post thoughts", "d": "11/2012"}, {"body": "marcusmacinnes master", "d": "11/2012"}, {"body": "perfect thanks", "d": "11/2012"}, {"body": "legal useful backbone allow representations model merely two different models id want share model share", "d": "11/2012"}, {"body": "nt make clear want write decoupled code app share models would ideally want fetch model one place app fetch another instance object place app instances model represent consistent instance object change one model wold also change model way parts app nt know still consistent data something similar spinejs dynamic records", "d": "11/2012"}, {"body": "share model instances still decoupled code exactly go depends application structured usually use event bus system pass model instances throughout application way another technique detailed scroll sharing models views gives functionality want", "d": "11/2012"}, {"body": "thanks opening issue bug bit shocking one looks like variety workarounds fixes server ajax options quick search would lead answers", "d": "11/2012"}, {"body": "thanks figured probably come back closed bad", "d": "11/2012"}, {"body": "yes positional mapping route arguments function arguments design instead us trying decompile function detect match names use mapping function normalize arguments want use generic handler", "d": "11/2012"}, {"body": "ok thanks quick response jashkenas", "d": "11/2012"}, {"body": "quite like first two options propose event name second parameter solves common use case fairly concise elegant way without adding much api breaking existing functionality", "d": "11/2012"}, {"body": "nt think wise add forwarding feature api simply triggering event another object nt hard merely find syntax bulky alternative ways write", "d": "11/2012"}, {"body": "wondering underscore included packagejson yes feel free remove nt want", "d": "11/2012"}, {"body": "hi andrejj thanks reporting sure version backbone using fixed master hope works", "d": "11/2012"}, {"body": "using latest stable one tnx quick response", "d": "11/2012"}, {"body": "probably best way obtain model collection set models collection collections sure valid easytouse hand use plain models array one attribute define basic functions need check links might useful", "d": "11/2012"}, {"body": "please try google group irc stackoverflow questions instead opening ticket", "d": "11/2012"}, {"body": "changelog mentions multiple models id longer allowed single collection", "d": "11/2012"}, {"body": "explains missed thanks behavior still belongs docs reading changelog libraryapietc necessary understand", "d": "11/2012"}, {"body": "note want latter duplicate model merge current existing one version master optional parameter merge true", "d": "11/2012"}, {"body": "thanks quick turnaround", "d": "11/2012"}, {"body": "would bet people use backbone nt use coffeescript though p easily something subclass", "d": "11/2012"}, {"body": "would also like see support put backbone core since coffeescript using good success call function", "d": "11/2012"}, {"body": "thanks answers guys know stuff already posting feature requestpull request since find appalling link lines code backbonesuper project compensate single unwritten line bb part", "d": "11/2012"}, {"body": "subclass backbone vanilla classes projects think point backbone little changes like easily accomplished without interfering others ideas vanilla class see example still want get core would set proper pull request merging click away", "d": "11/2012"}, {"body": "looking solution dealt already question original class rather accommodating another language javascript right line development version backbone make coffeescripters life easier add single extra line even characters allow javascript developers benefits", "d": "11/2012"}, {"body": "closing already discussed length primarily", "d": "11/2012"}, {"body": "back", "d": "11/2012"}, {"body": "hi integralist definitely initialize view second form need extra parentheses would nt recommend however somewhat unclear", "d": "11/2012"}, {"body": "hi ajaxsolutions thanks opening issue hoisting issues caught test suite compressors generally reduce one declaration need unless specific piece code clarity increased using one var declaration rather optimize readability", "d": "11/2012"}, {"body": "checked afraid got bad news working fine double check make sure got doctype defined site trying start history dom finished loading fine", "d": "11/2012"}, {"body": "received permission denied message documentdomain set document seems known issue", "d": "11/2012"}, {"body": "reproduce problem following code works expected code uses vanilla backbone model object extending backbone model book class code defines another question version backbone using", "d": "11/2012"}, {"body": "chris somewhat related workaround work little simply passing directly object literal", "d": "11/2012"}, {"body": "ok sorry think question version pertinent taken existing project brand new javascript development issue googled backbone jsfiddle used first entry fiddle reproducing problem project exactly assumed documentation incorrect without proper checks first nt realise project using old version jsfiddle also using older version sorry wasting time first thing checked doubt updating latest version fix problem apologies", "d": "11/2012"}, {"body": "thanks help bret", "d": "11/2012"}, {"body": "problem welcome js development", "d": "11/2012"}, {"body": "thanks massive learning curve", "d": "11/2012"}, {"body": "problem convinced something done idea since calling routernavigate way every time", "d": "11/2012"}, {"body": "afraid without test case way reproduce somehow nt much going able help never observed suggest keeping using live app adding test script quickly tries run number routes predefined order", "d": "11/2012"}, {"body": "hi charleskline would say depends number points much functionality need dozens maybe even hundreds models probably ok thousands tens thousands models probably start introduce nontrivial overhead would guess nt need model point definitely something prototype use performance data experience", "d": "11/2012"}, {"body": "hi sterlingwes already implemented master branch used via please let us know nt function properly", "d": "11/2012"}, {"body": "fantastic thanks brad letting know nov pm brad dunbar notifications githubcom wrote hi sterlingwes already implemented master branch used via collectionadd models merge true please let us know nt function properly reply email directly view github", "d": "11/2012"}, {"body": "hi beatkyo version backbone using version master work sample requires use leading trailing slash nt already would mind giving shot version master", "d": "11/2012"}, {"body": "hi sample tested master version working expected however using still wrong query parameters outputs outputs use master version next release thanks braddunbar", "d": "11/2012"}, {"body": "great glad works", "d": "11/2012"}, {"body": "surface seems convenient similar features caused rather subtle bugs instance take another model argument source quite bugs think explicit pass good thing case", "d": "11/2012"}, {"body": "hi marcvdm thanks posting really nt enough information give practical solution provide sample code illustrating problem relation backbone glad take look", "d": "11/2012"}, {"body": "hi marcvdm problem specific backbone issue common one many run using javascript browser environment variable usually defined browser pointer global scope recommended stay away using pointer scope rather something like", "d": "11/2012"}, {"body": "stillmotion thanks explanation used variable allot code never ran intro problems tested internet explorer changed new variable called smile thanks tip thou", "d": "11/2012"}, {"body": "ca nt well nt point validation ensure model never enters invalid state server wants send incomplete model relax validation add another function restrictive version", "d": "11/2012"}, {"body": "see point probably skipping validation meaningful create authentication logic current example based cookies example model validation used plugin backbonevalidationjs class session extends backbonemodel urlroot sessions idattribute userid defaults authenticated null email null password null csrftoken null validation email required true pattern email minlength password required true minlength initialize gt sync resetpassword resetpassword gt set password null silent true app initialization model fetches backend url sessionscurrent backend answers response json whether current user token cookie http header authenticated includes additional params userid email csrftoken response see initial get password model validation fail asking relax validation least initial get say turns current user authenticated backend login dialogbox appears user enters email password push login button calls modelsave loginandpasswordhere sync security purposes like reset password attribute model makes sense", "d": "11/2012"}, {"body": "yep would nt use function instead", "d": "11/2012"}, {"body": "could often times folks want change events update things initialize events attached example could get behavior removing event inside instead disabling fact", "d": "11/2012"}, {"body": "hi mikeknoop become rather common question late rather certain backbone handling differently taking account nonpushstate browsers change url without page refresh remaining incorrect url acceptable two choices apps serverrendered content use fallback machanism described make sure app rooted correctly means nonpushstate browsers handle loading content page loaded rendered clientside use hashchange routing require page refresh nonpushstate browsers said hybrid form like use pages server rendered content client rendered content", "d": "11/2012"}, {"body": "mean starting history example see event docs nt mention anything else", "d": "11/2012"}, {"body": "nt realize documentation reopen add gist passing indicate want use hash based routing browsers nt support pushstate opting instead full page refresh would prevent swapping url mentioned", "d": "11/2012"}, {"body": "sounds like exactly want backbone already account scenario realize thanks pointing hopefully docs addition thread guide folks similar situation", "d": "11/2012"}, {"body": "hi considering javascript new backbonerouterextend routes home login login home function alert hi home page login function alert hi login page function never want hashbased routing pushstate available backbonehistorystart pushstate true hashchange false following use case serverside generated content browser capabilities example enabled disabled browse well alert alert nt want hashbased routing serverside generated content nt routing quite annoying little patch lem submit pr reference issue", "d": "11/2012"}, {"body": "fixed", "d": "11/2012"}, {"body": "closing favor", "d": "11/2012"}, {"body": "like said wookiehangover interesting never mentioned js programmers quickly learn name keys objects things like much agree problem javascript nt correct hash primitive time hottest hot code paths nt think wise us insert check every lookup said folks start run frequently reconsider", "d": "11/2012"}, {"body": "using mutuallyexclusive css classes real nice way workspace setmode help tab workspace setmode search tab", "d": "11/2012"}, {"body": "clarified master", "d": "11/2012"}, {"body": "let close favor", "d": "11/2012"}, {"body": "theluk thanks opening issue considered using set initial state better way achieve trying without getting caught internallyused hash documented accessor worth example implemented without ever worrying model previousattributes jsfiddle type state transitioning looking using event binding entire collection state attribute easily filter state transitions care still call resetting model states since resetting detected transition would nt matter anyway going close since known behavior unless compelling argument use case causing significant confusion", "d": "11/2012"}, {"body": "hm see fiddle didnt recognize problem talking talking three steps two third one important result correct states see updated jsdiddle please", "d": "11/2012"}, {"body": "part example pointed nt needed listen event take action state change remove updated example works expected say definitely odd behavior though", "d": "11/2012"}, {"body": "nope example behaving correctly activate function effective set system models become activated never tell system become deactivated therefore next time become activated change state fortunately example also simple fix nt use", "d": "11/2012"}, {"body": "fortunately example also simple fix nt use silent expect answer tell set something silently system know nothing change even internally right really stupid like would say like collections function oh add models effectively never tell system added models know whole thing would fixed one line unfortunately decided", "d": "11/2012"}, {"body": "logically course set something silently previousattributes must change mean trigger event still handle correct states otherwise renamve something like", "d": "11/2012"}, {"body": "expect answer glad hear current logic behaving correctly nt anything internal states looking simply point view external observer model new model state modelset state event state gt modelset state silent true event perspective app change made previous valid state model still modelprevious state gt modelset state event fired perspective app change made state still like times function modelset state", "d": "11/2012"}, {"body": "therefor collection new collection collectionlength collectionreset name foo name bar using silent add stuff collectionlength perspective app change made previous length collection still need change whole backbone silent applications perspective sourcecode", "d": "11/2012"}, {"body": "misunderstanding meaning events reset collection may use silent add internally implement function application still sees event means receive single event instead many events entire collection replaced similarly means receive event contents model changed", "d": "11/2012"}, {"body": "really thing fine thats wrong think see backbone something almost perfect dont want change anything simply correct", "d": "11/2012"}, {"body": "yes looks correct far observers concerned change value always", "d": "11/2012"}, {"body": "link already updated go next release", "d": "11/2012"}, {"body": "hey guys interested made grunt plugin custom backbone builds generated normal backbone source files really tested although run backbone version router amp history stuff left works well feedback welcome", "d": "11/2012"}, {"body": "asciidisco thank rock", "d": "11/2012"}, {"body": "update dying use merge collections", "d": "11/2012"}, {"body": "got using master production quite time", "d": "11/2012"}, {"body": "indeed lt open tickets still quite feel free use master meantime", "d": "11/2012"}, {"body": "genexp behavior expected", "d": "11/2012"}, {"body": "mulling ticket arguments something bit declarative persuasive still sure think use cases would actually end better animperativeapiinsheepsclothing beyond initial objections machineghost mentioned considerations view single element default times makes sense single description events also applied times models may transitory view may get one instantiated later ajax request finishes view may reference models listens events others references call methods declarative api would distinguish point event string looks like lost battle keeping js instead string better glad take closer look version ticket includes patch proposal discussion think would help flesh ins outs api bit", "d": "11/2012"}, {"body": "tgriesser nt merge fix issue nt issue closed", "d": "11/2012"}, {"body": "shoe yes closed", "d": "11/2012"}, {"body": "closing fixed leegorous please let us know problem nt solved", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "powmedia intended behavior difference order allow routes added later override previous routes since routing table needs respect order intentional choice explained comment route adding logic ends taking place closing", "d": "11/2012"}, {"body": "came issue assumed passing parse true collection ways mean parse collection get executed problem executed calling fetch initially load page constructing collections json parse nt called guess call manually untilif fixed", "d": "11/2012"}, {"body": "closing based follow lack actionable information thereafter", "d": "11/2012"}, {"body": "closing unless truly unresolved issue", "d": "11/2012"}, {"body": "vkovalskiy stumbled upon error use instead method defintion works", "d": "11/2012"}, {"body": "gucki wow thanks", "d": "11/2012"}, {"body": "malandrew closing please reopen pull request ifwhen patch ready", "d": "11/2012"}, {"body": "hi bumped issue using stable upgrading version backbonejs master fixed however complaining current behavior brief concern starting backbonehistory follows works ok application landing page terminating slash per server side routing whenever want navigate different pagesviews within application use go landing view go confirmation page however ing landing page always sends url terminates slash concern obsessive compulsive one afraid want urls pointing landing page end terminating slashes iscanthere way configure suggested solutions would configuration option terminates slash path writes url ends slash vice versa path send url terminating slashes send url terminating slash emulating application configuration option node express framework quoting enable strict routing default foo foo treated router thanks hany", "d": "11/2012"}, {"body": "kerdany server respond trailing slash root ca nt think situation beneficial honestly given amount issues surrounding much rather keep things simple possible", "d": "11/2012"}, {"body": "markreid ignoring search parameters valid choice router needs properly ignore", "d": "11/2012"}, {"body": "think developer used trigger true expressly want logic route called regardless whether history gets updated suggesting call function one would always need check page user first decide whether call navigate update history call function directly use case route renders view conditionally based users authentication state user auth various pages site users authentication state changes would want rerender route display relevant content logic work show already", "d": "11/2012"}, {"body": "nt think backbonehistory observing changes location calls use case fine jashkenas says call function need directly authentication", "d": "11/2012"}, {"body": "leaving thoughts issue today encountered seems highly unintuitive route nt called explicitly pass options hash routernavigate would love see addition option onuradsay suggested", "d": "11/2012"}, {"body": "practicality patrickod onuradsay idea", "d": "11/2012"}, {"body": "still able receive event determine app refresh called figure many hacks mentioned clean think behavior common enough put router", "d": "11/2012"}, {"body": "afraid going happen fact folks asking actually impetus remove unconditionally fire event let explain events backbone notified state changed like models trigger event second time state changed trying navigate location already change state trigger event want callback fire whenever button clicked add callback want use backbone events call objecttrigger myevent", "d": "11/2012"}, {"body": "seems like instead assume true option nt add functionality though always something like button handlers", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "still see strong case backboneeventsone event listener registration function really would nt require much code", "d": "11/2012"}, {"title": "init inside view class causes stack exceeded error", "body": "presence init function view class cases stack overflow", "num": "1565", "d": "11/2012"}, {"title": "emberruntime fails since addition amd loader", "body": "use emberruntimejs node load js models server side since addition amd shim get following error", "num": "1564", "d": "11/2012"}, {"title": "bindings referencing property bound object broken", "body": "broken works chrome work bindings referencing property tobeboundlater object works computed properties referencing tobeboundlater object works bindings referencing property concrete ie bound object nt tested bindings referencing property alreadybound object use real ca nt reproduce mode", "num": "1563", "d": "11/2012"}, {"title": "avoiding stop unresponsive script dialog slow browsers", "body": "fairly large emberjs app loads great chrome firefox loads slowly surprises problem older computer insertelement call graph takes long enough trigger stop unresponsive script dialog app solution straightforward canwill solve problem within app lazilyloading data set nonetheless think emberjs evaluate possibility solving problem frameworklevel avoid future problems sort developers trying implement something like wanted run ya first check whether even interested something added reentrant sort complexity solve problem would take returning back browser middle insertelement call graph finishing insertelement call tree future call scary somewhat aggressive wording stop running script dialog may cause computer become unresponsive many users opt stop script rendering page broken intents purposes nothing else bad ui experience likely submarine issue fast development machine may run slow necessarily slow enough trigger dialog unfortunately set users set user slow computers highly overlapping set low enough javascript performance emberjs demanding enough javascript expect problem occur various app development lifecycle regularity interferes works tm crossbrowser aspect writing emberjs works loads slowly commesurate slow performance different many users fail load page guys think avoided within apps would interested fix framework level may introduce significantunwanted complexity", "num": "1560", "d": "11/2012"}, {"title": "rakefile windows", "body": "line work windows thanks pointing", "num": "1559", "d": "11/2012"}, {"title": "better hypermedia support", "body": "tomdale wycats involved rails api expect better hypermedia support emberjs hautelook already built middleware allow emberjs applications speak easily haljson hypermedia api works great something would like maintain", "num": "1558", "d": "11/2012"}, {"title": "setting default values init override passed properties", "body": "stumped hours using init method set default values ember class overrides pass create method surely passed values always take precedence default ones js fiddle taken another example would expect passed chromosomes value used favour one provided init function another method init passed variables set could guys provide one", "num": "1557", "d": "11/2012"}, {"title": "uncaught typeerror", "body": "using chrome uncaught typeerror object function context options options options return templatespeccall container handlebars context optionshelpers optionspartials optionsdata method indexof get emberviewembercoreviewextendtemplateforname emberviewembercoreviewextendtemplate computedpropertyprototypeget get emberviewembercoreviewextendrender embercoreviewemberobjectextendrendertobuffer emberviewembercoreviewextendrendertobuffer newfunc anonymous function emberinstrumentationinstrument embercoreviewemberobjectextendrendertobuffer emberviewembercoreviewextendcreateelement emberviewstatesprerenderinsertelement emberviewembercoreviewextendinvokeforstate emberviewembercoreviewextendinsertelement anonymous function emberhandleerrors invoke invokeoncetimer anonymous function emberhandleerrors invoke iter runloopflush runloopend emberrunend autorun", "num": "1556", "d": "11/2012"}, {"title": "applicatoncontroller available router root connectoutlets", "body": "similar closed solution issue using statemanager seems gone way dodo fiddle prove another fiddle current workaround solution make ember extra runthrough loop first watch console see working working thanks", "num": "1555", "d": "11/2012"}, {"title": "views used outlets static elementids", "body": "unsure wether known limitation bug find mentioned docs thought report problems using jquery ui draggable ember app app done internal navigation literally days debugging headscratching confident problem ember handles views connecting outlets found view elementid set string connected outlet cause view dropped emberviewviews hash managed track thanks info closed old issue using version ember log registering unregistering views see new version view registered old one removed since elementid hash key means registering overwrites old view removing removes new view result saw resulting failing mouse event propagation manager lookup halts silently viewid looking views hash mouse events view higher get event neither document jquery ui listens making sense explain better somehow made example illustrating two routes populating view different data load jsbin click one letters click event applicationview catch click bubbles stack see helpful alert click navigate transition new route see alert click one letters alert appear time event dropped missing view views hash like said let know explain better lot context journey debugging stack overflow", "num": "1553", "d": "11/2012"}, {"title": "ember renders template outside inner div", "body": "want render handlebars script inside div used work fine using nt work rendered script put outside div jsfiddle illustrating problem thing ember works fine", "num": "1552", "d": "11/2012"}, {"title": "emselect contentbinding changes null two selection changes", "body": "str select bar select bar notice selection blank bar also notice console value foocontrollercontentbar null believe related emberdata changing callback fired nt resetting value null think happening", "num": "1550", "d": "11/2012"}, {"title": "changing view elementid creation allowed", "body": "found ember code snippet could removed file reason code code failing exception", "num": "1549", "d": "11/2012"}, {"title": "undefined object evaluating actionhandler", "body": "using ember rails poltergeist testing works fine development upgraded throws following error closing ember view one test failureerror clickon x capybara poltergeist javascripterror one errors raised javascript code page typeerror undefined object evaluating actionhandler line emberjs glue happens clicking x simple transitionto", "num": "1546", "d": "11/2012"}, {"title": "emberselect trigger event updates dom", "body": "scenario wherein need call refresh method plugin replaces elements whenever optionsvalue changed accomplish observing emberselect value property however race condition observer emberselect observer actually updates dom emberselect trigger event informing updated dom could deterministically call plugin refresh method instead resorting", "num": "1545", "d": "11/2012"}, {"title": "updated rakepipeline longer minifies properly", "body": "pulling new updates running bundle install rake built emberminjs minified happened updates rakepipeline", "num": "1543", "d": "11/2012"}, {"title": "using around bindattr shared condition", "body": "asked question stackoverflow becoming convinced bug though positive seem trouble using statement around element bindattr class binding conditions share common dependent key following example see dependency thus producing case single change cause change cause deprecation warning javascript appmycontroller embercontrollercreate value greaterthanten function return thisget value gt property value isodd function return thisget value property value togglevalue function thisset value thisget isodd fiddle click several times javascript console open notice get error something caused view rerender rendered inserted dom avoidable cause significant performance issues applications behavior deprecated bug guess happening seems like able safely", "num": "1541", "d": "11/2012"}, {"title": "ember dispatches events longer existing view", "body": "fiddle reproduce click text field becomes focused hit enter trigger submit event router transition app success state transition text field lose focus trigger focusout event ember try dispatch event view longer exists result uncaught typeerror read property handler undefined submit form clicking submit button cause error since focusout event dispatched yet existent view", "num": "1540", "d": "11/2012"}, {"title": "attribute binding causes exception destroyed views", "body": "hello encountered attribute binding issue created following application order reproduce please go requesting provider select define filter name input example click search button open debug console browser go treating provider select try enter symbol name input following exception raises uncaught typeerror read property length undefined reason issue point view attempt bind already destroyed views fixed issue following ember source code modification please find fragments code fragment observer function elemlength emberremoveobserver pathroot path invoker return viewstate destroyed elemlength emberremoveobserver pathroot path invoker return sure right place fix could please investigate problem detailed", "num": "1534", "d": "11/2012"}, {"title": "asynchronous routing undefined context connectoutlets method", "body": "perfectly working routerbased app custom serializerdeserializer mixin emberdeferred models adapt serializer happens try deserialize load form url connectoutlet method router undefined context promisesmodel even resolves immediately demo live demo code illustrate bug notdererred working route notworking route mixin emberdeferred model ember version used recent later", "num": "1533", "d": "11/2012"}, {"title": "arrayproxies ca nt slice", "body": "javascript embera apushobject apushobject aslice javascript emberarrayproxycreate content apushobject apushobject aslice undefined acontentslice slicing property works intended case returns clientids instead objects", "num": "1532", "d": "11/2012"}, {"title": "support historypushstate android", "body": "android browser chrome mobile bug historypushstate well supported updating ember router nt work anymore uses pushstate known solutions thanks", "num": "1531", "d": "11/2012"}, {"title": "rerender inbuffer state", "body": "upgraded ember getting exception something tried replace expression inserted dom noticed new exception added release therefor sure situation bug bad let provide details exception occurs loading data view directly browser refresh since using ember data quite model relations results seperate loading procedures primary model instance view loaded works model consists collection different model instances rendered collection view works goes wrong instances could relationship another model instance render certain attributes collection item view concider collection view item teplate viewcontentjustanattribute viewcontentrelationship al work scenario however due ember data lazy loading wont work viewcontentrelationshipjustanattribute case requires ember data third loading procedure ember gives stated exception currently idea bug ember data ember know happens version", "num": "1530", "d": "11/2012"}, {"title": "emberview scope different using appendto vs adding child view containerview", "body": "noticed comparing unit tests actual use case fiddle demonstrates best basically issues appending view directly dom vs added child container view sure intended behavior seems make difficult write tests assume appending view dom give results adding container view likewise using view helper tag simple example seemingly unintuitive scope emberview objects added appended dom directly vs added child views container class create generic view content genericview emberviewextend template emhandlebarscompile content make two identical views genericviewcreate content view genericviewcreate content view create container view containerview embercontainerviewcreate append first view directly dom appended add second child container view append container view dom containerviewget childviews pushobject containerviewappendto asview", "num": "1529", "d": "11/2012"}, {"title": "jquerybrowser moved plugin", "body": "edge jquery removed plugin build failing used checkbox test blows undefined commit removing jqueryuamatch regexes ember test relying", "num": "1527", "d": "11/2012"}, {"title": "ie error setting bound collection property ember object", "body": "hi issue setting collection property bound template happens ie explanation", "num": "1525", "d": "11/2012"}, {"title": "setting computed properties afterwards", "body": "hi guys think bug something wrong var comp function return emcomputed somekey function key return key cacheable var someobject emobjectcreate foo comp someobjectset bar comp someobjectget foo returns correctly foo someobjectget bar returns falsely object computedproperty return bar", "num": "1524", "d": "11/2012"}, {"title": "keyvalue helper argument fails helper", "body": "example see", "num": "1523", "d": "11/2012"}, {"title": "binding controllers router fails", "body": "requirement binding controller unfortunately binding observing anything nt update eg problem called transition assigned emberroutinglibroutablejs stashcontext function manager context thisrouter manager changing line set fixes bindingobserving issues stashcontext function manager context thisset router manager requirement binding controller allow assess permissions transitioning route simplified slightly contrived example trying amp routes work expected route nt work see route binds gets directly instead binding nt possible observe router better way", "num": "1521", "d": "11/2012"}, {"title": "length cached", "body": "hello found bug data binding queries test latest github ember source code javascript mycollection emberarraycontrollercreate content name name content sortascendingtrue isenumerabletrue mycollectionget content object object mycollectionget content eachname lt subclass emberobject keyname name owner content mycollectionget content eachname toarray everything works expected pushing new object collection still getting old array javascript mycollectionpushobject name object mycollectionget content eachname toarray javascript mycollectionget content object object object debugging odd behavior found foreach method called toarray uses get length property cached read metadata", "num": "1520", "d": "11/2012"}, {"title": "objectcreate strange behavior", "body": "hello found strange behavior emberobjectcreate method seems like caches last passed arguments even erroneous find simply test case run firebug commands executed session creating simple object arguments expected ember object result creating simple object empty hash expected ember object result creating simple object passing arguments expected error due correct config result trying create simple object arguments expected ember object result execute run succeed thanks", "num": "1519", "d": "11/2012"}, {"title": "previously working app longer works latest emberjs", "body": "updated emberjs version last commit app longer works handlebar templates would loaded markup rails views appear longer picked last confirmed working version version last commit rails template looks like javascript errors ember still making calls api load models js assets still loaded start debug obvious idea working", "num": "1518", "d": "11/2012"}, {"title": "action handlebar helper context bug", "body": "lt action clickme gt lt gt lt action clickme gt lt gt appapplicationview emberviewextend templatename application hello clickme event alert eventcontext didinsertelement set world example click alert box say hello however clicking alert box say undefine", "num": "1515", "d": "11/2012"}, {"title": "nested routing url nonleaf route get updated", "body": "transitioning leaf routes works expected transitioning nonleaf routes update url see jsbin", "num": "1514", "d": "11/2012"}, {"title": "template names dots lead error", "body": "hi use template like president united states get error bowser console like error lt applicationview unable find template applicationtpl break error timers guid invoke thistarget thismethod thisargs remove tpl suffix works think possible suffix like thanks", "num": "1509", "d": "11/2012"}, {"title": "inline templates get appended rootelement instead place", "body": "defining inline template ie script tag without datatemplatename attribute content gets appended app rootelement body undefined seems introduced pre issue pre reproduced", "num": "1508", "d": "11/2012"}, {"body": "nt ever noticed create jsfiddle jsbin us", "d": "11/2012"}, {"body": "windowapp emberapplicationcreate applicationview emberviewextend templatename application applicationcontroller embercontrollerextend slogan misha test mishaview emviewextend templatename misha init function mishacontroller emcontrollerextend variable katyaview emviewextend templatename katya katyacontroller emcontrollerextend ready function consolelog created namespace contactrouter emberrouterextend router emberrouterextend root emberrouteextend index emberrouteextend route misha emberrouteextend route misha connectoutlets function router context appinitialize html lt gt misha lt gt lt br gt view appmishaview controllerbinding approutermishacontroller test privet misha view viewtest view massagebinding viewcontrollervariable viewmassage view katya", "d": "11/2012"}, {"body": "believe need call inside init view set properly", "d": "11/2012"}, {"body": "also still prefer jsbin jsfiddle cases like see running code", "d": "11/2012"}, {"body": "sent iphone nov trek glowacki notifications githubcom wrote also still prefer jsbin jsfiddle cases like see running code reply email directly view github", "d": "11/2012"}, {"body": "thank sent iphone nov trek glowacki notifications githubcom wrote believe need call super inside init view set properly reply email directly view github", "d": "11/2012"}, {"body": "kselden ebryn guys done performance work give input", "d": "11/2012"}, {"body": "wagenet know anyone working performance might take swing improving general would love get brain dump one exists since webapps support still definitely gon na bottlenecking platform ember app performancewise seems like good place focus little profiling notice mailing list issue would appropriate start issue performance tuning talk somebody irc", "d": "11/2012"}, {"body": "snickell probably best call individual issues encounter said think place general discussion could make sort parent ticket wo nt leave open indefinitely", "d": "11/2012"}, {"body": "basically means ca nt run tests console run server instead navigate browser since still run tests even broken since none core developers use windows high priority however definitely happy merge pr addresses issue", "d": "11/2012"}, {"body": "hradtke correct wrong sounds like something applicable ember data ember core said know pretty much nothing hypermedia maybe wcyats tomdale provide input", "d": "11/2012"}, {"body": "definitely something interested please file specific feature requests emberjsdata repo", "d": "11/2012"}, {"body": "currently hash passed create method essentially treated mixin applied init run discussion changing behavior probably keep discussion cc wagenet", "d": "11/2012"}, {"body": "adriaaaaan personally check see exists set ie think lukemelia right discussion", "d": "11/2012"}, {"body": "extesy share steps reproduce ideally jsfiddle jsbin", "d": "11/2012"}, {"body": "compiled project several libraries bundled together quite hard put jsfiddlejsbin took client part extract open indexhtml jscss minified", "d": "11/2012"}, {"body": "extesy setting result supposed string giving issues think may want setting still problems stack overflow good place", "d": "11/2012"}, {"body": "wagenet nt think reason example see skeleton ember application works fine also compiles nt typeerror", "d": "11/2012"}, {"body": "extesy unless returns string behavior wrong even nt get error", "d": "11/2012"}, {"body": "create router goes initialstate root appinitialize injections run instantiate controllers give router references vice versa result applicationcontroller nt even exist called root state plans make work relatively near future asdesigned need state contains routes would need add one underneath root", "d": "11/2012"}, {"body": "fair enough fine running emrunnext loop thanks looking", "d": "11/2012"}, {"body": "used views outlets static elementids noticed issue however looks like merits investigation", "d": "11/2012"}, {"body": "ah good think bug may entirely noticeable using normal mouse events directly elements inside deadzone probably notice practice need event bubble case noticed jquery ui draggable acting strangely", "d": "11/2012"}, {"body": "crossview events ember still kind unsolved used strategy drag drop", "d": "11/2012"}, {"body": "hi manuel necessary accomplish future reference kind question wellsuited stackoverflow good number embere\u00f1os watch tag helping answer questions luke", "d": "11/2012"}, {"body": "thanks luke initially asked stackoverflow got one comment suggesting bug thanks", "d": "11/2012"}, {"body": "problem hopefully update question info help future travelers along path", "d": "11/2012"}, {"body": "view element id used find rendered html within document even removed warning production build changing result errors application", "d": "11/2012"}, {"body": "ok view still appended dom complaints id change myid", "d": "11/2012"}, {"body": "good point want submit pr existing certain view states go ember developer nt alter element id object creation nt think get attention contributors also wondering nt setting create", "d": "11/2012"}, {"body": "long story something complicated inside ember core try tell feedback ember development working project uses ember core framework development project already classes custom logic ember controller view properties classes computed getter setters observations problem ember good discussion computed getters setters become overridden passing values create instance works perfect piece code override fullname computed property second problem root property observation executed immediately create javascript person emberobjectextend age null checkage function var person personcreate age nothing happens force execution overriding function calling javascript person emberobjectextend age null init function thissuper thischeckage checkage function var person personcreate age prints buy alchohol cases well documented ember make lot confusion developers things works native intuition manner last thing picture bug analyzing problems understood elegantly solve using construction create setproperties happen create setproperties instance created default configuration databinding wiring done observations active setproperties changes property values using config property computed computed method executed observer attached run callback noise bug told project custom controller custom views computed properties observers unfortunately ca nt use one single technique ember classes view creation failing elementid property dumb even marked something removed also need guide developers whose less experienced js development nt want amaze sentences like need use need", "d": "11/2012"}, {"body": "error actual browsers tell us user agent inside poltergeist", "d": "11/2012"}, {"body": "test env using default config poltergeist define useragent nt inside poltergeist useragent defined", "d": "11/2012"}, {"body": "yeah confirm issue moved away poltergeist walking git log came far working version last commit working version last commit", "d": "11/2012"}, {"body": "experiencing issue well squelching js errors app seems continue running fine obviously way go", "d": "11/2012"}, {"body": "experienced error using poltergeistphantomjs see error chrome switch capybara driver webkit appears longer get error however spend quite long trying track causing problem got close source stopped realized could switch capybara drivers happened case least action handled deregistered code ember handling event action hits code shortly thereafter blows commented action deregistration course everything worked fine sort race condition clearing view state", "d": "11/2012"}, {"body": "looks like issue issue perhaps close one reproducible test case", "d": "11/2012"}, {"body": "closing duplicate", "d": "11/2012"}, {"body": "afterrender queue emberselect observer schedule render queue observer schedule afterrender queue avoid race condition", "d": "11/2012"}, {"body": "wagenet think one closed lukemelia points solution master", "d": "11/2012"}, {"body": "thank report kselden working fix", "d": "11/2012"}, {"body": "sees like bug", "d": "11/2012"}, {"body": "pretty sure kselden told buggy perhaps insight", "d": "11/2012"}, {"body": "probably whip test would desirable nt bother initially unsure bug", "d": "11/2012"}, {"body": "workmanw would useful", "d": "11/2012"}, {"body": "perhaps duplicate", "d": "11/2012"}, {"body": "file issue identical one definitely seems like bug already created jsfiddle", "d": "11/2012"}, {"body": "eltehupkes work around enclose bindattr inside helper", "d": "11/2012"}, {"body": "ah great thanks tip", "d": "11/2012"}, {"body": "thumbsup", "d": "11/2012"}, {"body": "thumbsup", "d": "11/2012"}, {"body": "wagenet tag verified", "d": "11/2012"}, {"body": "try fixed", "d": "11/2012"}, {"body": "thank indeed reproduced", "d": "11/2012"}, {"body": "rsaccon believe value passed context value passed resolve method resolving promise also kind question probably better stack overflow benefit people get attention people looking help", "d": "11/2012"}, {"body": "mehulkar iirc ember nt overwrite slice method getting standard one actually array clientids makes sense tried", "d": "11/2012"}, {"body": "wagenet would probably work array wo nt observable", "d": "11/2012"}, {"body": "mehulkar", "d": "11/2012"}, {"body": "nt calling toarray turn regular javascript array without emberobservable", "d": "11/2012"}, {"body": "mehulkar unless turned prototype extension standard arrays mixed", "d": "11/2012"}, {"body": "vizo reason closed issue", "d": "11/2012"}, {"body": "yeah nt know ember browserchrome mobile issue last pull request corrected still click action url location bar browser updated nt know works firefox mobile", "d": "11/2012"}, {"body": "work verify week", "d": "11/2012"}, {"body": "adaptivdesign isolate issue failing jsfiddle jsbin", "d": "11/2012"}, {"body": "could nt reproduce call issue stale close wagenet", "d": "11/2012"}, {"body": "context views see api documentation view context", "d": "11/2012"}, {"body": "recommend always pointing properties view using view first example example genericview would change", "d": "11/2012"}, {"body": "would suggest passing object view nt need prefix properties", "d": "11/2012"}, {"body": "fixed", "d": "11/2012"}, {"body": "certainly sounds like bug reproduce jsbin jsfiddle", "d": "11/2012"}, {"body": "kselden tried create jsfiddle without success discovered caused issue using signalr push updates ember app code looks like updatedprocessingjob json object contains array logmessages ie getting error meta hash array fix issue deep copy updatedprocessingjob", "d": "11/2012"}, {"body": "probably need use define computed property existing instance", "d": "11/2012"}, {"body": "ah good know thanks", "d": "11/2012"}, {"body": "nt know bug error get objectdefineproperty called nonobject seems like using item array item must object string want use within bindattr using simply item throw error", "d": "11/2012"}, {"body": "bug must documented however pretty sure bug use value helpers log example keyvalue argument", "d": "11/2012"}, {"body": "seems like probably bug sure necessary fix wycats think", "d": "11/2012"}, {"body": "route nt get property set nt work general routes properties instead controllers track data route proxy", "d": "11/2012"}, {"body": "still difficulty stack overflow great place ask question", "d": "11/2012"}, {"body": "make jsfiddle jsbin demonstrates issue", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "reproduce behavior seem bit odd quick digging runtime code seems like may due fact create closure around arguments tosses uncaught exception args nullified closure take look function notice invokes reset previous arguments new ones provided causes arguments last time keep around reapplied agree bit odd entirely sure worth fixing requires use api incorrectly trigger state sure one core ember guys weigh shortly", "d": "11/2012"}, {"body": "workmanw could wrap tryfinally would probably solve issue though agree low priority since arises something incorrectly going go ahead close issue though prs accepted", "d": "11/2012"}, {"body": "annoying bug since project uses ember negative unittests since negative test instantiate wrong parameters positive tests failing due caching instantiate wo parameters", "d": "11/2012"}, {"body": "demongloom tests core ember functionality general able assume ember well tested test parts unique application", "d": "11/2012"}, {"body": "testing ember core functionality code receives two parameters class name configuration code instantiates object using class name passes configuration method want test colleague wrote negative test getting emberobject first parameter second parameter combination make error recoverable put instantiation code inside trycatch block exception caught processed everything works perfect code executed later test classes nothing closely related code fails simple execution pleasure debug trace error took hours understand caused test executed thanks understanding", "d": "11/2012"}, {"body": "demongloom ah makes sense interested could try sending pr address issue ember otherwise might want make code sanity check passed argument make sure actually object", "d": "11/2012"}, {"body": "also note using router", "d": "11/2012"}, {"body": "according release notes prerelease inline handlebars templates must always named default name application means behaves exactly trouble adjusting templates probably get help posting question stackoverflow", "d": "11/2012"}, {"body": "lukemelia multiple datatemplatename application", "d": "11/2012"}, {"body": "appears answer", "d": "11/2012"}, {"body": "tpitale confirm think overwrite raise error", "d": "11/2012"}, {"body": "question asked added posterity", "d": "11/2012"}, {"body": "answer ultimately make one handlebars template give name application", "d": "11/2012"}, {"body": "cool thanks closing loop tpitale", "d": "11/2012"}, {"body": "action context nt accessed event time set ahead time objects template already access use case existing application might able suggest better structure", "d": "11/2012"}, {"body": "fwiw trek also confused think reason action helper resolves binding path render time rather invoked support hrefs however absent requirement lazy evaluation would less surprising", "d": "11/2012"}, {"body": "encountered kind issue using emberdata resolved wrapping action helper without even loaded runtime action sent null correctly displayed", "d": "11/2012"}, {"body": "nt think necessarily bug surprising behavior options warn action context specified resolves null change evaluation occur event time instead rendering time wycats tomdale chime preferred solution someone work", "d": "11/2012"}, {"body": "question arrived morning previous workaround give seems good enclosing works better", "d": "11/2012"}, {"body": "argh got stung really annoying surprising behavior lukemelia mean say way support hrefs", "d": "11/2012"}, {"body": "daveduchene one features used able properly encode slugs based objects object nt know render time bunk", "d": "11/2012"}, {"body": "trek still nt get ca nt href updated later like bound attribute", "d": "11/2012"}, {"body": "thinking cases value eventually becomes defined remained always bad url think places apps would case better wrap actionable section", "d": "11/2012"}, {"body": "trek fair enough common case really seems folks expecting context bound value stuck auditing actions make sure contexts right worse makes app brittle changes handlebars content surrounding action quietly change behavior", "d": "11/2012"}, {"body": "ending transitions intermediate states nt allowed", "d": "11/2012"}, {"body": "trek ok get intermediate state", "d": "11/2012"}, {"body": "transition leaf state state machine like", "d": "11/2012"}, {"body": "ok thanks reorganized code need end transition nonleaf state", "d": "11/2012"}, {"body": "think intended intermediate states passed way leaf states used set necessary data filling outlets feels weird though let us know", "d": "11/2012"}, {"body": "trek pardon lateness comment left crucial anyone start working router nt done strongly suggest bold italics frontpage placement", "d": "11/2012"}, {"body": "build tools using", "d": "11/2012"}, {"body": "related due fact longer supports keys string", "d": "11/2012"}, {"body": "workaround javascript var get emberget emviewreopenclass templateforname function name type name return", "d": "11/2012"}, {"body": "using build tool handmade playground fixed workaround mention behavior intention", "d": "11/2012"}, {"body": "vanthome think thats probably debate caused side effect another change submit work around pr let ember core guys decide intended functionality either way adding work around codebase solve problem", "d": "11/2012"}, {"body": "vanthome moment nt support template names periods something want support correct solution probably implement method never looks paths use template lookup", "d": "11/2012"}, {"body": "added warning someone wants send pr could probably accept", "d": "11/2012"}, {"body": "issue views appending", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "new intended behavior relevant commit", "d": "11/2012"}, {"body": "thanks trek link reasoning behind new behaviour want separate parts page dynamic going wrap entire page script tags seems like would bad seo means longer use documentready run jquery plugins static parts page misunderstanding", "d": "11/2012"}, {"body": "iirc anonymous templates worked poorly new application structure initialization process check back past issues dom readiness load order also encouraging application structure considered poor form framework perspective want structure applications way manually create append views element page within application code framework wo nt anymore words still librarylevel support frameworklevel support", "d": "11/2012"}, {"body": "sidebar though likely patternsmell particular app nt style application ember intended facilitate islandsofrichness pattern supported know nobody likes hear go learn something else despite people think none libraries actually competing made specifically kind application need augment existing document additional behavior ember backbone angular made specifically make task easier want take full screen apps competitive native apps backbone ember made specifically", "d": "11/2012"}, {"body": "drewschrauf issues use append views sections page", "d": "11/2012"}, {"body": "bug", "d": "11/2012"}, {"body": "reneolivo able build", "d": "11/2012"}, {"body": "thanks wagenet tried everything works fine even tried using versions using nt give problems still try piece code application still shows weird behaviour reporting check something requirejs something wrong probably later thank help closing", "d": "11/2012"}, {"body": "reneolivo welcome good luck", "d": "11/2012"}, {"body": "going close issue since nt believe anything still show search results however", "d": "11/2012"}, {"body": "charlieridley sure would live would nt hot code path asserting would extremely expensive find one entertain pr wagenet issue closed", "d": "11/2012"}, {"body": "agree trek one", "d": "11/2012"}, {"body": "problem way query string probably look like wwwmyappcom searchpointyhairedboss amp filtermanagers amp sortemail users concern however searching ember way access individual parameters", "d": "11/2012"}, {"body": "workmanw updates", "d": "11/2012"}, {"body": "ftokarev sorry time investigate properly really dirty hack place enabling work case currently perfectly honest going swamped work next month anyone else feels like jumping please feel free", "d": "11/2012"}, {"body": "changing state deferred object gets rejected would great like done loading state", "d": "11/2012"}, {"body": "ember even actual server js talking like behavior something else", "d": "11/2012"}, {"body": "twinturbo think idea route found behavior", "d": "11/2012"}, {"body": "yea referring found page http error code stateroute landed invalid route provided", "d": "11/2012"}, {"body": "yes like loading stateroute would nice found stateroute cases described", "d": "11/2012"}, {"body": "meant let say route deserialize method deserialize function router params var entry jamesentrycreate id paramsid var deferred deferred entryfindresource done function e deferredresolve entry connect outlet fail fucntion deferedreject go state return deferredpromise go loading state could switch state defferable rejected right rejecting deferable results throw", "d": "11/2012"}, {"body": "think better semantic would router would try transition state promise rejected would parallel state router waits promise resolves using terminology confusing incorrect imo", "d": "11/2012"}, {"body": "agree lukemelia loading failed state makes sense nov pm luke melia notifications githubcom wrote think better semantic would router would try transition loadfailure state promise rejected would parallel loading state router waits promise resolves using terminology confusing incorrect imo reply email directly view github", "d": "11/2012"}, {"body": "agree lukemelia originally use term page often call found pages speaking technically incorrect probably confusing", "d": "11/2012"}, {"body": "agree", "d": "11/2012"}, {"body": "new pr instead", "d": "11/2012"}, {"body": "indeed doc issue looks like wagenet got first issue closed", "d": "11/2012"}, {"body": "come various discussions times think wycats radar router worked right", "d": "11/2012"}, {"body": "wagenet least bug verified", "d": "11/2012"}, {"body": "", "d": "11/2012"}, {"body": "verify bug week see figure going wagenet assign one", "d": "11/2012"}, {"body": "verified happens nt know consider bug sirzach transitioning intermediate state router behaving expected mostly problem stems fact people incorrectly believe parameter effect inapp transitons fact used applicationload serialization correctly transitioned could potentially warn manually state child states solution bandied twice might resolved router feel free open issue pr missing warning transitioning intermediate states wagenet think close one", "d": "11/2012"}, {"body": "still issue router revisit", "d": "11/2012"}, {"body": "thanks taking time look working someone much wellversed ember taking different route", "d": "11/2012"}, {"body": "verified url four dynamic slugs matched route pattern three dynamic slugs sure fix wagenet tag verified trek solution match routes dynamic segments matching dynamic segments url however nt think way know think way solve problem prefix routes something actually come think router match routes ensure segment route dynamic static match segment route dynamic static", "d": "11/2012"}, {"body": "twinturbo nt verified tag unverified one might worth adding though", "d": "11/2012"}, {"body": "tobikko isolate jsfiddle jsbin us hoping verify close unverified issues", "d": "11/2012"}, {"body": "apparently jsdoc nt solve hoped", "d": "11/2012"}, {"body": "wagenet anything", "d": "11/2012"}, {"body": "twinturbo really sure best unless get jsdoc merge two definitions probably need consolidate docs one place", "d": "11/2012"}, {"body": "believe would make work true case close one", "d": "11/2012"}, {"body": "twinturbo gives hooks add animations view still destroyed states behaviour scheduled wonder still case", "d": "11/2012"}, {"body": "would like see feature rerendering big lists many complex childviews slow even google chrome maybe upcoming group support also help getting large collections rendered responsive way sounds promising", "d": "11/2012"}, {"body": "confirm fixed moved script tag end page works", "d": "11/2012"}, {"body": "sweet check thanks", "d": "11/2012"}, {"body": "wagenet think close wycats closed", "d": "11/2012"}, {"body": "twinturbo wycats closed wanted better pr resolved", "d": "11/2012"}, {"body": "still think issue time time think overall layout use become much less prevalent time templates gotten robust layouts something even like continue supporting nt used one long time nt see questions posts anymore", "d": "11/2012"}, {"body": "trek use wonder outlets always better answer", "d": "11/2012"}, {"body": "used layouts quite lot comes rendering polymorphic collections common structure eg chat room like campfire different types messages layout different content templates dynamic overriding custom actually good example along lines would page comments references pull requests etc visual layout different contents ca nt think way outlets would cover usecase", "d": "11/2012"}, {"body": "think rlivsey good use case let keep tracked guess", "d": "11/2012"}, {"body": "tried new jwplayer use together ember latest version flash mode nt play black screen mode works think related whats described", "d": "11/2012"}, {"body": "created examples one servers use chrome order get flash fallback safari uses new feature hls flash", "d": "11/2012"}, {"body": "ramigg jwplayerember example missing jquery ember depends jquery try using ember starterkit adding jwplayer code", "d": "11/2012"}, {"body": "added jquery luck also tried local machine writing using yeomanjs full working ember app including dependencies luck wed nov pm greg jopa notifications githubcom wrote ramigg jwplayerember example missing jquery ember depends jquery try using ember starterkit adding jwplayer code reply email directly view github", "d": "11/2012"}, {"body": "ramigg check jsbin created uses emberjs starter kit jw player use chrome see example working fails horribly firefox nt signup jw player license need call jsplayer init code ember view ready try adding js code view using event like javascript appapplicationview emberviewextend templatename application documentready view didinsertelement function jwplayer setup file width height noticed also calling playlist jwplayer try getting single video play first tackling playlist hope helps next time ask question stack overflow use github issues bugs sure emberjs wrecking crew would tell", "d": "11/2012"}, {"body": "thanks greg comments exactly suggested didinsertelement event doesnt help jsbin working use version jwplayer try add primary flash jwplayer setup force using flash wed nov pm greg jopa notifications githubcom wrote ramigg check jsbin created uses emberjs starter kit jw player use chrome see example working fails horribly firefox nt signup jw player license need call jsplayer init code ember view ready try adding js code view using didinsertelement event like appapplicationview emberviewextend templatename application documentready view didinsertelement function jwplayer setup file width height noticed also calling playlist jwplayer try getting single video play first tackling playlist hope helps next time ask question stack overflow use github issues bugs sure emberjs wrecking crew would tell reply email directly view github", "d": "11/2012"}, {"body": "incorrect way set mode jw player need use modes property see nt think jsbin load flash player due crossdomain issues", "d": "11/2012"}, {"body": "point try make jwplayer conflict ember flash mode try specific usage wanted know related issue created thread configuration suggested version player version use primary flash option see", "d": "11/2012"}, {"body": "wagenet go inline documentation guides done yet", "d": "11/2012"}, {"body": "probably worth mentioning places", "d": "11/2012"}, {"body": "patch make space table larger upgrading handlebars whole ember release fixes", "d": "11/2012"}, {"body": "may dirty hack works", "d": "11/2012"}, {"body": "tomdale word serverside rendering maybe one branches", "d": "11/2012"}, {"body": "continues something mindful designing architecture immediate shortterm availability implement sadly someone would like sponsor work please contact", "d": "11/2012"}, {"body": "fixed new attribute bindings colon separator syntax require subclass view", "d": "11/2012"}, {"body": "hi recently posted question regarding poor rendering performance table sorting jsfiddle briefly following content bound depends property table sorting assigning appropriate value turns outs induce full view amp dom reconstruction table timing elements believe two main factors contribute poor performance fails detect array content simply permuted hence could reuse child views incurs costly recreation child view item collection adds elements one one hence updating dom n times would like discuss options improve performance case table sorting first point view recreation could addressed introducing notion object constancy introducing notion key done example second point could addressed dom batching shall reopen ticket", "d": "11/2012"}, {"body": "cc wagenet ideas", "d": "11/2012"}, {"body": "kselden ebryn guys give input", "d": "11/2012"}, {"body": "afterrender queue pretty easy schedule code run view children rendered eg good enough also want event", "d": "11/2012"}, {"body": "lukemelia would like see view lifecycle event seems accomplish task", "d": "11/2012"}, {"body": "wagenet find struggling figure right forum ask questions potentially lead development emberjs features interested tiptoeing using emberjs contributing features back emberjs questions really specific enough framed issues really within stackoverflow guidelines either dead irc channel even deader dead mailing list odds getting response lower need even engagement make irc work timezone schedule example framed question stackoverflow really appropriate stackoverflow want ask anyone started dom rendering performance work want brain dump somebody one go explore anyone suggestions suspicions start seems little awkward start getting involved emberjs development without mailing list find trying frame things either issues stackoverflow questions really neither time working gnome found lot useful future contributors start good general ideas first projects inside source code base needing specific guidance best way tackle first contribution likely useful acceptance core maybe emberjs needs use issue system mailing list statement ie nt feel bad filing vague issues interested development emberjs need guidance best approach", "d": "11/2012"}, {"body": "stackoverflow link posted emberjs development list would clarified run fairly frequent cases end reference model needing get access theany views waswere generated based model probably means structuring code weird eg used controllers right clear solution might also area could nice emberjs feature helps deal eg others reply end encountering awkardness could talk smart way deal feels like stackoverflow nt good best way x discussions explicitly discouraged furthermore stackoverflow posts nt naturally transition user question development discussion way mailing list time thing nt issue problemsolution likely end would nt want suggest problem emberjs", "d": "11/2012"}, {"body": "snickell see two ways looking problem one way consider ember issue relatively confident code good things right way problem would lie ember case make ticket describes problem detail preferably example code jsbin jsfiddle best way look issue see something encountered determine best way help resolve maybe help contribute improvements alternative structured something poorly app case could ask question stackoverflow improve performance specific case seems line appropriate use stackoverflow either way nt see mailing list would help think irc dead regularly users ongoing discussion mailing list likely worse experience mailing lists get filled people asking questions nt getting responses noise ratio quickly becomes high", "d": "11/2012"}, {"body": "wanting rehash issue much wanted chime somebody really feeling absence mailing list clearly people feel absence nt could always try mailing list close becomes annoying nt work already know ember ember community perhaps easy confident problem code problem ember whole advocation mailing list good prospective future contributors useful coders yet part inner circle nt context decide two without little discussion totally appreciate problems come mailing lists plenty nonfunctional mailing lists gnome every one worked ya obviously got ta whatever works reporting external developer interested becoming involved find lack mailing list awkward find choose whether reframe questionsthoughts fit issue vs stackoverflow split think lie somewhere really covered either", "d": "11/2012"}, {"body": "agreement snickell space covered issues stackoverflow often questions thoughts ember best practices nt seem decent place throw discussion often concrete enough stackoverflow question would nt qualify issue framework example thinking pattern nt covered current way structuring ember applications like throw others get feedback pattern see running similar issues etc admittedly nt use ember irc much nt found useful types discussion imo mailing list would decent place", "d": "11/2012"}, {"body": "issue open awhile nt think semantics make sense everything would want done", "d": "11/2012"}, {"body": "technically nt true ca nt anything via jquery object insertion example start something height animate workaround rendering hidden showing initialized position remove hook since pointless without element", "d": "11/2012"}]