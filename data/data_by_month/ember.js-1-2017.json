[{"title": "objects always equal", "body": "javascript convention compare objects allow object implement method convert primitive compared looks like respect", "num": "14892", "d": "1/2017"}, {"title": "nt people would naturally expect", "body": "", "num": "14891", "d": "1/2017"}, {"title": "read property eventname undefined", "body": "got component conditionally rendered based value boolean boolean value changed action within component error thrown component removed view seems like introduced canary happening onward simple twiddle demonstrating seems related stack trace points block patched pivotaltopherbullock stack trace uncaught typeerror read property eventname undefined htmlbuttonelement htmldivelementdispatch htmldivelementelemdatahandle objecttrigger objectsimulate htmldocumenthandler clear updatableblocktrackerreset tryopcodehandleexception updatingvmframehandleexception disclosed anonymous dispatch elemdatahandle trigger simulate handler clear reset handleexception handleexception throw evaluate execute rerender thisrender runintransaction renderroots renderrootstransaction revalidate invoke flush flush end run run handler anonymous dispatch elemdatahandle", "num": "14888", "d": "1/2017"}, {"title": "ember test could find module moduleforacceptance", "body": "hello using embercli node os started new project tests documented tutorial test redirect rentals route function assert visit andthen function assertequal currenturl rentals redirect automatically test list available rentals function assert visit andthen function assertequal find listing length see listings running getting error uncaught error error could find module imported line", "num": "14885", "d": "1/2017"}, {"title": "isempty returns false negative tested object falsey size attribute", "body": "given object foo name foo size emberisempty foo return true expected return false causing weird issues passing records emberselectize records arbitrary size attribute default number", "num": "14884", "d": "1/2017"}, {"title": "quest module unification", "body": "quest module unification quest issue tracks highlevel tasks needed complete implementation module unification rfc ember module unification offers updated file system layout based updated pods structure well simpler set rules module must named leading significantly improved application boot time prior art exists created resolver implements module unification rules however resolver designed maximum compatibility testing feature designed take advantage performance benefits new proposal part work building glimmerbased apps monegraph dgeb reimplemented smaller moreperformant subset ember container resolver registry typescript open sourced components mit license hope serve basis ember older semantics still need support implemented compatibility layer top libraries apps nt need get maximum performance libraries glimmerdi container registry resolver interface glimmerresolver implementation resolver using module unification rules tasks x publish github x publish npm least commonjs x write readme generate api docs x publish github x publish npm least commonjs write readme generate api docs emberjs import package ember build x support typescript compilation files ember repo refactor inherit move tests cover api container tests passing refactor inherit move tests cover api registry tests passing create new embermoduleunificationresolver package ember resolver config inherit figure fallback mechanism mu dir embercli legacy globals resolution multiple resolvers one resolver fallback implemented internally likely latter since works today fallback deprecate default resolver one relies lookup anymore deprecate add lot code complexity write deprecation rfc update embercli blueprints generators use mu layout make new resolver log x import emberresolver x update resolver inherit x backwardscompatibility delegate oldstyle resolver rules something looked found x also export resolver module unificationonly rules x release new version npm ember cli build pipeline update embercli include new resolver update app blueprint use module unificationonly resolver instructions using old resolver file system compatibility needed update addon blueprint update build pipeline consume js tree must also still read update hooks pass tree peer hooks x additional ember cli build pipeline tasks x embercli requires directory present per emberappjs needs change upstream x embercli contstraining permits us look single place indexhtml example new resolver rules suggest look srcui first templates currently compile default export meaning name compiler needs know export template file named output module path developer ergonomics integrate mu migration tool ember cli automatically offer update apps new layout update x migration tool update app muonly resolver rearranged files lint applications warn app directory nt use fallback resolver app directory still using slower fallback resolver", "num": "14882", "d": "1/2017"}, {"title": "linkto fails apply active class nested transitionto within willtransition", "body": "created ember twiddle instructions illustrate problem nt active class applied correctly leaf route linkto component transitionto gets called inside willtransition action", "num": "14880", "d": "1/2017"}, {"title": "ember snapshot belongsto always return null inverse relation", "body": "relationship two models many b b belongs loading b sideloaded use inverse relationship b fine template however try use snapshot one loaded b models returns null supposed work come works template snapshot adapter said works fine template snapshot adapter also see debugger relationship stepping code edit created twiddle example check adapter log output pressing delete expected able resolve relationship adapter seen returns also seen works fine template", "num": "14879", "d": "1/2017"}, {"title": "failed find valid digest integrity attribute resource css file", "body": "hello everybody issue ember build app command line ember build environnementproduction upload website online problem integrity css ressource file identified caused happen unclear modification scss file get integrity error cancel modification everything back normal edit packagejson case", "num": "14877", "d": "1/2017"}, {"title": "transitionto queryparams initial render still broken", "body": "problem described still exists filing new ticket initial ticket already closed", "num": "14875", "d": "1/2017"}, {"title": "emberrsvp removed emberjscomapi documentation", "body": "discovered missing lists trying access update seems happened", "num": "14874", "d": "1/2017"}, {"title": "events bubble fired twice integration tests", "body": "ember twiddle bug seems similar events fired twice jquery event triggered first followed native event difference bug occurs integration tests event triggered one descendants dom node listening event", "num": "14867", "d": "1/2017"}, {"title": "array query params track mutation", "body": "link like one url link get updated mutated replace array different array bad bug clicking link still works expected clicked href link one nt update perhaps something take account new helpers part new route service reproduction twiddle", "num": "14865", "d": "1/2017"}, {"title": "backburner call instead", "body": "recently discovered bug application tests caught error actually crash inside ember router occurred action sent router transition route another router details important mistake could probably provide fiddle desired despite error tests continued actually passed left bad feeling acceptance test use qunitadapter ensure errors cause test failure decided dig see going normal stack exception test stack failed silently difference found contrasting rsvp error handling backburner error handling see rsvp error handling logic call dispatcherror defer set unfortunately backburner calls directly nt really possess whole lot knowledge embermetal looking ca nt see obvious reason backburner error handling could nt call instead directly calling thoughts sleep much better knowing error routed test suite", "num": "14864", "d": "1/2017"}, {"title": "configure indexhtml eg script src assetsvendorjs version", "body": "order force updated static assets load stubborn cdn looking method adding end references appindexhtml maybe indexhtml somewhere else might override custom value random number build tag ideas thanks", "num": "14863", "d": "1/2017"}, {"title": "undefined emberenvironmentlibglobaljs", "body": "eslint warning cleanup brake compilation grunt environment previous conversation issue opened issue repo cc andyhot", "num": "14859", "d": "1/2017"}, {"title": "performance emberutils assign expose objectassign polyfill", "body": "hello emberjs method basicly polyfill objectassign defined existent polyfill many internal packages import function directly emberutils native implementation existent never used internally ideia exposes functions js export function assign original polyfill implementation export default objectassign assign assignobjectassignassign let know guys think", "num": "14855", "d": "1/2017"}, {"title": "integration test nested components renders outermost component", "body": "upgraded application ember come across broken tests due components rendered seems specifically integration tests component uses another component inside example integration test looks like following import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile import loadappstate utilloadappstate moduleforcomponent modalsautomationrulesnewimagesensorrule integration component modalsautomationrulesnew image sensor rule loadappstate integration true test renders function assert thisrender hbs newimagesensorrule component renders another component defined called simpledialog testing purposes modalsmodaldialogsimpledialog buttonsbuttons titletitle targetthis classdialogclassnames smartrules rule buttonadc icon add textruletitle primarytrue onclick action createrule rule ruledescription modalsmodaldialogsimpledialog debugging test element rendered div testing purposes text inside something special need test nested components integration tests ember bug", "num": "14849", "d": "1/2017"}, {"title": "doc ember router documentation method", "body": "url scenario go url click methods see nothing", "num": "14847", "d": "1/2017"}, {"title": "computed using index array causes error using removeat", "body": "recreated twiddle click click add click click remove get assertion error using js splice remove object fires mandatory setter array property replaced object position applies watcher mandatory property may benefits applying mandatory setters array positions rather objects position ca nt see none perhaps mandatory setters nt set twiddle underlying object property still setter applied object removed computed longer fired aside nt know computed actually persist reapplied new object position", "num": "14846", "d": "1/2017"}, {"title": "add shorthand emberobjectcreate ember namespace", "body": "embera nativearray reason add example embero ember namespace", "num": "14844", "d": "1/2017"}, {"title": "arraycontentdidchange often call objectat objectat len", "body": "subclassing surprising mutation trigger happens checks triggering change events causes difficulties dematerializing records ember data removing unloaded records relationships done asynchronously would cause records rematerialized materialization lazy records retrieved sake check reported never fixed closed favour limited problem fixed one possible solution trigger changes based indices deletions additions mean change events triggered even case case today cc igort", "num": "14843", "d": "1/2017"}, {"title": "httpsonly emberjscom", "body": "hi surprised notice emberjscom still even available https let alone httpsonly done make happen anything help free certs available let encrypt aws acm could get free tls termination cloudflare note apply guidesemberjscom httpsonly cheers v", "num": "14838", "d": "1/2017"}, {"title": "tutorial templatesapplicationhbs contain full html page", "body": "tutorial please mention included full html page current text implies replaces default page contains full html page doctype tags page rendered blank", "num": "14837", "d": "1/2017"}, {"title": "queryparams name conflict nested route uses controller outer route", "body": "attempting upgrade ember encountered problem route nested inside another route use controller controller query parameter created ember twiddle reproduce problem go route get following error seems method method raised nt consider fact two controllers maybe okay nt actually know okay reason ca nt work means ca nt use query parameters nested route uses controller outer one motif employed extensively throughout app used work", "num": "14835", "d": "1/2017"}, {"title": "doc embertemplateshelpers code examples rendering filename correctly", "body": "impression code examples filenames rendered differently seems follow rule cc locks sclatter", "num": "14834", "d": "1/2017"}, {"title": "lookups noninjected objects", "body": "repeatedly stumbled across following problem create object using instead ca nt use inside also ca nt use within object order use understand technical reason also understand set owner object nt think satisfying workaround use case follows dashboard contain several widgets dashboard configuration along widgets class name stored database widget library extended party developers writing ember addon important topic main point mostly inexperienced developers widgets hold custom objects classes extending custom objects use services need owner course creating object think passing owner time ca nt expect inexperienced developers forget nt know resulting error message wo nt help much another possibility would custom classes use create instance party developers could also add custom classes advanced concept explain nt feel creating custom classes advanced technique come limitations solutions seem daring beginner puts burden developer sadly ca nt really come better solution guess issue get closed soon mistaken assigning default owner would nt work engines would nt know instance right one hope ember developers might understand unsatisfying current situation maybe think something might better thank reading", "num": "14831", "d": "1/2017"}, {"title": "ember new fails windows", "body": "tried cygwin cmd prompt result testapp package ember found error package ember found createerror c c fulfilled c selfpromisedispatchdone c promisepromisepromisedispatch c remove reinstall bower npm install g bower get point using npm node", "num": "14819", "d": "1/2017"}, {"title": "attributebindings documented embercomponent", "body": "searching docs property could nt find documentation discovered linked anywhere docs little hard find", "num": "14815", "d": "1/2017"}, {"title": "dom order rendering updated array", "body": "twiddle demo interesting case found recently believe appears since case happens render array update part rendering array follow index append updated item end block", "num": "14814", "d": "1/2017"}, {"title": "", "body": "probably question rather issue notice using choose one example using template literals without", "num": "14813", "d": "1/2017"}, {"title": "update documentation information setting rooturl", "body": "url information provided updating rooturl incomplete least mention setting rooturl configenvironmentjs allow setting correct rooturl indexhtml generated build example desired behavoir", "num": "14812", "d": "1/2017"}, {"title": "quest update deprecations include property", "body": "eventual introduction svelte builds mechanism say strip code deprecated features however enable rangebased decision need start range well end currently end form property passed method ways find deprecations method codebase tags changelog let see example emberk phase compile list deprecations present master branch phase update deprecations include field helper", "num": "14811", "d": "1/2017"}, {"title": "firefox typeerror observers index undefined", "body": "component member called tries observe fails obscure error firefox ember twiddle demonstrating problem", "num": "14803", "d": "1/2017"}, {"title": "memory leak emberobjectproxy", "body": "example use wrap model pass template render nt know properties model proxy subscribed want remove proxy later model retains references proxy listeners causes memory leak way unsubscribe listeners trigger change given target would nice functionality", "num": "14802", "d": "1/2017"}, {"title": "embercomputedintersect nt work dsrecordarray", "body": "hit issue trying intersect ds records movieroles departmentroles application developing seems intersect uses forloop bracket notation get array elements recordarray nt support kinda work last array recordarray others nativearray call toarray instances recordarray first twiddle thanks", "num": "14798", "d": "1/2017"}, {"title": "missing api documentation embertemplateshelpershtml methodyield", "body": "docs gone missing much luck finding source either api change page appears existed point dead links guides thin information nt link api page looking specifics", "num": "14797", "d": "1/2017"}, {"title": "issue acceptance test computed object created runtime", "body": "hi case even though code works fine acceptance test always throw exception scenario component code preferencesservice export default emberserviceextend async init const data await someasyncfetcher error message acceptance test think object reset runtime cause error solution solve thanks", "num": "14795", "d": "1/2017"}, {"title": "property route creates unexpected result", "body": "controller used map property route used update page param changed functionality works change value controller property gets unexpected value hook route object param gets two properties second wanted also helper template generates url better way remove query param url", "num": "14792", "d": "1/2017"}, {"title": "explore routerjs creation done ember application rather ember application instance", "body": "krisselden suggested looking heap snapshots server side rendered app creating route recognizer every request app instance created could extract ember application creation static containing request specific information router created every instance since might holding request specific info help reduce memory load per visit bug something worth exploring though touch critical parts framework", "num": "14790", "d": "1/2017"}, {"title": "use travisci jwt addon encrypt sauce labs credentials", "body": "instead see", "num": "14789", "d": "1/2017"}, {"title": "query param sticky different route model routeable emberengine", "body": "reproduced issue repo sample steps reproduce issue create route inside routable ember engine dynamic segment eg viewers id create linkto viewershbs template add query param viewer controller eg queryparams active go activetrue see linkto generated also query param eg activetrue case done outside engine another developer traced issue calculatecachekey called changing fixed problem us let know correct solution create pull request", "num": "14788", "d": "1/2017"}, {"title": "queryparams lifecycle unpredictable inconsistent", "body": "overview guides queryparams discuss length set queryparams including customizations however formally specify lifecycle queryparams specifically following left unspecified point transition queryparams synced location controller point transition queryparams synced controller location embertwiddle demonstrates oddities load directly typing location bar pressing enter value controller value controller specifies default value route hook controller value default value load directly value controller value still think particular issue related application running iframe value route hook sees controller meaning queryparam nt synced controller load directly acts like case click link footer link changes kicks changing affects location value controller shows invoked every transition first load directly nt declared queryparam ember strips url shows invalid queryparams valid ones reserialized first transition recommendations yet clear holistic implementation mind think following requirements bare minimum define available effects modifications object serialize queryparams back location time first transition like transitions define transition eg queryparams synced location controller allow routes manipulate queryparams point flow use cases queryparam lets admin users see users accounts application nt know whether current user admin session established say nonadmin goes route clear queryparam established user lacks permissions queryparam represents splittesting state user navigates application generates splittesting id onthefly sets queryparam location immediately reflect id id url could make easier handling support tickets since would clear version interface using existing work emberqueryparams attempts move queryparam logic service good encapsulating logic around validating filtering manipulating queryparams nt address lifecycle issues unresolved questions queryparams synced location controller queryparams synced controller location", "num": "14785", "d": "1/2017"}, {"title": "camel cased route template rendering", "body": "tested version clicking forgot password link takes route nothing rendered another note two routes dasherized version clobbers camelcased one makes work see", "num": "14783", "d": "1/2017"}, {"title": "deprecate calling method parent class", "body": "support calling super parent class method defined aka super likely means adding deprecation converting error examples js let emberobjectextend foo return foo qux embercomputed function return qux let b aextend bar trigger deprecation return thissuper arguments b bar foo trigger deprecation return thissuper arguments b foo thisbar qux embercomputed function trigger deprecation return thissuper arguments b qux baz embercomputed function trigger deprecation return thissuper arguments b baz see original context", "num": "14780", "d": "1/2017"}, {"title": "componentreplacein regression", "body": "calls similar function glimmer renderer function nt exist called get understand private would seem used internally anymore likely meant removed component well regardless gets addressed bugregression could really use way call like able updating specific use case ca nt wrapping element open suggestions", "num": "14779", "d": "1/2017"}, {"title": "ember helper recompute bug", "body": "calling recompute helper recompute twiddle change dependency code works work might related glimmer update", "num": "14774", "d": "1/2017"}, {"title": "emberrunschedule afterrender occurs next run loop instead current", "body": "specific ember lower note order consolelog statements occurs function scheduled switching dependency ember resolves issue", "num": "14773", "d": "1/2017"}, {"body": "hi joelpresence moved issue website repository blog posts source left comment please follow thank", "d": "1/2017"}, {"body": "herriau please provide description behaviour expect current behaviour", "d": "1/2017"}, {"body": "thank reporting gavinjoyce related event dispatcher refactors mind taking look", "d": "1/2017"}, {"body": "welcome small addition error thrown component added back view also demonstrated twiddle", "d": "1/2017"}, {"body": "sure take look", "d": "1/2017"}, {"body": "looks like guard needed working test", "d": "1/2017"}, {"body": "oh even comment explaining needed test", "d": "1/2017"}, {"body": "trouble creating failing test believe fail nt", "d": "1/2017"}, {"body": "could manually unregister action ensure exception nt thrown much rather use high level api drive test suggestions welcome", "d": "1/2017"}, {"body": "looks like firefox nt throw chrome run travis build chrome", "d": "1/2017"}, {"body": "run travis build chrome nt yet managed create failing test chrome", "d": "1/2017"}, {"body": "ah hm userland tests fail", "d": "1/2017"}, {"body": "noslouch thanks point source failing test", "d": "1/2017"}, {"body": "ah acceptance test", "d": "1/2017"}, {"body": "oh see need trigger handled", "d": "1/2017"}, {"body": "fix late creating failing test proving tricky think merge fix leave issue open follow test later week", "d": "1/2017"}, {"body": "fyi solution rename size attributes models sure anything else done maybe documentation de facto reserved attribute names would helpful", "d": "1/2017"}, {"body": "great report please move emberjsdata thank", "d": "1/2017"}, {"body": "course sorry", "d": "1/2017"}, {"body": "problem thank", "d": "1/2017"}, {"body": "alxistn integrity check hash file gets generated upload css file integrity constraint appears satisfied block loading css believe issue need republish assets please stop help ember community slack future seek help wonderful people community closing issue likely bug please feel encouraged keep commenting upon investigation side discover may fact bug still continue receive notifications followup comments issue closed nt mean ignoring thread", "d": "1/2017"}, {"body": "aproach get around ember solution posted taras dec solutions mentioned nt work js let redirectafterdidtransition embermixincreate redirectafterdidtransition args thisrouterone didtransition gt thisroutertransitionto args export default routeextend redirectafterdidtransition aftermodel thisredirectafterdidtransition index", "d": "1/2017"}, {"body": "updated jsbin ember updated beta seems fixed provide test breaks fixed make sure nt regression thank", "d": "1/2017"}, {"body": "workaround still access top nav search", "d": "1/2017"}, {"body": "thanks reporting take look", "d": "1/2017"}, {"body": "thank report", "d": "1/2017"}, {"body": "asked question stackoverflow", "d": "1/2017"}, {"body": "closing stackoverflow question thanks", "d": "1/2017"}, {"body": "kkincade nt think bug see embertwiddle example component nested component within template file integration test component asserts component rendered", "d": "1/2017"}, {"body": "pixelhandler familiar twiddles tests nt seem run least assertions made tried putting debugger lines tests never hit something make tests run", "d": "1/2017"}, {"body": "rwjblue locks pixelhandler spent lot time looking think finally figured issue problem lies using dotseparatedpaths specify components ways work fine component pathtocomponent component component pathtocomponent component pathtocomponent pathtocomponent way work pathtocomponent pathtocomponent replicated fresh app located deprecation warningerror within console assuming bug affect tests affects actual applications ability render components", "d": "1/2017"}, {"body": "thanks reporting tracked", "d": "1/2017"}, {"body": "hi craigbilner nt think actually valid syntax happens sometimes work sure trying observe twiddle want know first item array changed", "d": "1/2017"}, {"body": "thanks locks twiddle demonstrate issue use avoid error suppose getting adding mandatory setters arrays perhaps actually invalid throw much earlier", "d": "1/2017"}, {"body": "senthe bar adding new apis ember raised since introduction ember cli addon ecosystem effort keep ember codebase focused addons allow developers provide experiment new functionality easily quickly could move issue rfcs repository carry conversation thanks feedback", "d": "1/2017"}, {"body": "hjdivad curious know anyone pr failing test issue", "d": "1/2017"}, {"body": "pixelhandler aware one", "d": "1/2017"}, {"body": "site currently hosted github pages yet support custom tls certs nt think possible get free tls cloudflare using domain name unless pay business plan", "d": "1/2017"}, {"body": "nt think possible get free tls cloudflare using domain name unless pay business plan incorrect get free tls shared cert cloudflare using personal cert", "d": "1/2017"}, {"body": "see correct read shared certs assumed meant cloudflare domain really mean snibased certs domain subjectaltname would work", "d": "1/2017"}, {"body": "realize probably different issue since talking tls still cert even sending auth credentials clear see thought bring someone going spend cycles cover domains turned easy also cover discuss nevermind", "d": "1/2017"}, {"body": "workmanw hmm works", "d": "1/2017"}, {"body": "rwjblue oh hey look nt force go sweet", "d": "1/2017"}, {"body": "thank discussion everyone already tracking website repository", "d": "1/2017"}, {"body": "thanks report next time track guides issues repository next release changed work generate template default contains hope helps users", "d": "1/2017"}, {"body": "kbullaughey sounds quite similar fixed yet released beta version app able pull copy repo build cherry picked changes commits fixed recommend going route quick test", "d": "1/2017"}, {"body": "locks closed merged", "d": "1/2017"}, {"body": "thanks pixelhandler", "d": "1/2017"}, {"body": "hello ctusch understand problem given deal similar situations past closing issue triage policy given feature request inviting follow process thank", "d": "1/2017"}, {"body": "edoloughlin github outage morning also affected bower could please try report back whether still issue", "d": "1/2017"}, {"body": "closing assuming issue happy reopen nt resolve things", "d": "1/2017"}, {"body": "fixes", "d": "1/2017"}, {"body": "uuuhhhh awesome assuming uploaded together docs release", "d": "1/2017"}, {"body": "seems introduced", "d": "1/2017"}, {"body": "guessing something key falsy andor falsy collision key generation", "d": "1/2017"}, {"body": "make default value something nt coerce false works", "d": "1/2017"}, {"body": "krisselden lol interesting thank least easily hacked right", "d": "1/2017"}, {"body": "also use prevent issue", "d": "1/2017"}, {"body": "sclatter rwjblue points using works forked twiddle example", "d": "1/2017"}, {"body": "pixelhandler think meant cc jennieji", "d": "1/2017"}, {"body": "sclatter pixelhandler rwjblue thank works well", "d": "1/2017"}, {"body": "rwjblue using also causes falsy keys definitely something string key glad workarounds still bug", "d": "1/2017"}, {"body": "different people write different parts code older interest currently updating eslinting codebase related", "d": "1/2017"}, {"body": "would ok create pull request updated code", "d": "1/2017"}, {"body": "close since track progress pull requests", "d": "1/2017"}, {"body": "reopening useful somewhere discuss things relevant prs concern performance size bloat due transpilations currently nt way benchmark pull requests might want come subset features know safe suggestions template strings interpolation object property shorthand letconst", "d": "1/2017"}, {"body": "avoid array destructuring anything anything requiring regenerator babel polyfills", "d": "1/2017"}, {"body": "locks could used scripts instead manually everywhere used tool converting old files", "d": "1/2017"}, {"body": "fyi", "d": "1/2017"}, {"body": "nt know artemgurzhii p", "d": "1/2017"}, {"body": "lebab converting code using loop methods throwing errors tests failing mostly trying", "d": "1/2017"}, {"body": "artemgurzhii status help taking one part job converting", "d": "1/2017"}, {"body": "githubsathishkumar list packages nt refactored yet container emberglimmer embertesting externalhelpers internaltesthelpers loader", "d": "1/2017"}, {"body": "thanks pointing moved issue guides repository", "d": "1/2017"}, {"body": "looks good first step quest issue building list current deprecations code base", "d": "1/2017"}, {"body": "also need update require flag look similar deprecation optionsuntil present deprecation optionsid present", "d": "1/2017"}, {"body": "also new public api require rfc reference options introduced see final rendered version", "d": "1/2017"}, {"body": "reviewed file file got list function deprecateresolverfunction packagescontainerlibcontainerjs review field getter setters defined property packagesemberlibindexjs definition definition definition packagesemberdebugtestsmaintestjs deprecate test adapted packagesembermetallibmixinjs top level packagesemberruntimelibmixinsproxyjs packagesemberruntimelibmixinsactionhandlerjs getter packagesemberviewslibmixinsviewsupportjs", "d": "1/2017"}, {"body": "firefox defined take look ultimately nt issue ember perse close issue absolutely sympathetic debugging nightmare nt think much make better", "d": "1/2017"}, {"body": "oh see thanks quick reply maybe warning try observe", "d": "1/2017"}, {"body": "example leaking memory create disposable proxies model retains references logical step would unsubscribe old proxy create new one problem simply unsubscribe listeners target know exactly properties observed", "d": "1/2017"}, {"body": "relatedly removed layouts section moving documentation embercomponent class", "d": "1/2017"}, {"body": "please provide reproduction ember twiddle repo thank", "d": "1/2017"}, {"body": "lucaszheng one best ways dig issue create sharable reproduction issue using would mind creating simple example also reached help chat room", "d": "1/2017"}, {"body": "pixelhandler please refer click button twice see object contain console used top level route used sub controller", "d": "1/2017"}, {"body": "kratiahuja great suggestion seems like featureenhancement see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo typically emberjs issue tracker mainly bugs since rfc process prs issues new featurerefactor issues tracked rfc repo would mind moving issue one", "d": "1/2017"}, {"body": "pixelhandler sure porting", "d": "1/2017"}, {"body": "opened", "d": "1/2017"}, {"body": "closing favor emberjsrfcs thank kratiahuja", "d": "1/2017"}, {"body": "know would primary person make change best guess involves using proper credentials sauce labs cc rwjblue maybe one needs assignee", "d": "1/2017"}, {"body": "pixelhandler think need cycle current saucelabs credentials use new ones command line call encrypt needs done someone able log saucelabs write access repo", "d": "1/2017"}, {"body": "intentionally left clear text credentials travisyml encrypt run sl tests pr", "d": "1/2017"}, {"body": "rwjblue please read link precisely feature", "d": "1/2017"}, {"body": "thanks reporting let know correct solution create pull request solution seems reasonable general specifically need ensure cache key built correctly inside engine think next step getting isolated failing test case please take look engine tests tests idea set believe able add test file replicates scenario describe issue description", "d": "1/2017"}, {"body": "written failing test case fix one commit originally failing passed change", "d": "1/2017"}, {"body": "rajaalauddin perhaps make pr failing test fix", "d": "1/2017"}, {"body": "pixelhandler created pull request", "d": "1/2017"}, {"body": "closed via", "d": "1/2017"}, {"body": "originally opened emberjsrfcs rwjblue suggested switch issue sort implementation plan become rfc related emberjsemberjs emberjsemberjs see also works action handler route hook like", "d": "1/2017"}, {"body": "jamesarosen nice write curious issue needs tracked rwjblue suggest emberjsissue rfcissue see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo", "d": "1/2017"}, {"body": "curious issue needs tracked rwjblue suggest emberjsissue rfcissue said originally opened emberjsrfcs rwjblue suggested switch issue assumed meant emberjs issue guess could rfc issue many rfc issues rfc docs nt describe usecase contributing use rfc issues propose rough idea basically great place test waters think exactly case wish information rfc readme well idea", "d": "1/2017"}, {"body": "jamesarosen pixelhandler yall take care improving contributing moving issue rfcs repo issue thanks", "d": "1/2017"}, {"body": "moved emberjsrfcs", "d": "1/2017"}, {"body": "might bug per say camelcase named routes automatically look dasherized files user camelcased file least warning", "d": "1/2017"}, {"body": "put together rfc deprecating nondasherized route names remove magic file name transforms", "d": "1/2017"}, {"body": "one thing came mind component lifecycle hooks etc appears hooks defined noop functions component class emberglimmerlibcomponentjs seems like would trigger deprecation feels like could slightly problematic requires component class extends another know whether parent implemented lifecycle hook wants use hook even creates bad practice always call hooks seems like one native solution would implement noop functions class hooks thoughts could submit pr seems favorable", "d": "1/2017"}, {"body": "yes absolutely conclusion made comment linked main issue description pr ensure framework hook methods properly defined definitely welcome", "d": "1/2017"}, {"body": "issue affects mixins always define base mixin expects hook present otherwise extend something understand base class overriding", "d": "1/2017"}, {"body": "otherwise extend something understand base class overriding always easy ember p", "d": "1/2017"}, {"body": "krisselden well extending mixing addon addon nt currently implement nt call point release comes along add hook viceversa remove call throws regularly audit code addons sure breaking anything", "d": "1/2017"}, {"body": "regularly audit code addons sure breaking anything thing supposed", "d": "1/2017"}, {"body": "locks saying think ember users regularly auditing code addons use every time new point release seems impractical even advanced developers", "d": "1/2017"}, {"body": "otherwise extend something understand base class overriding always easy ember p concisely easy language untyped dynamic language locks saying think ember users regularly auditing code addons use every time new point release seems impractical even advanced developers workmanw deprecation must audit every point release rather every major said deprecation warning surface future issues next major much sooner allowing addressed well ahead actual blocker deprecate calling method parent class combined mixins current usage mixins may tricky transition need test impact wild comparing languages even javascript becomes rather obvious need tighten although may want consider enabling detecting something super example ruby javascript objectivec iirc could check via ruby class bar end class foo lt bar def baz defined super super super end puts foobaz end foonewbar gt foobaz class bar def baz puts barbaz end end foonewbar gt barbaz gt foobaz js class bar typeof supera function supera consolelog bara new bara gt bara objectprototypea function consolelog objecta new bara gt objecta gt bara", "d": "1/2017"}, {"body": "stefanpenner trying point ember throw error would easy change addon using create error application even point release addon addon suddenly get ride calling super get error viceversa commonly deprecation errors addons addon using deprecated api quickly fixed affects everyone equally however issue would potentially affect user uniquely addon may may implementing hook sounds like everyone really agreeing value implementing default hooks", "d": "1/2017"}, {"body": "stefanpenner trying point ember throw error would easy change addon using create error application even point release addon addon suddenly get ride didinsertelement calling super get error viceversa commonly deprecation errors addons addon using deprecated api quickly fixed affects everyone equally however issue would potentially affect user uniquely addon may may implementing hook implemented baseclass would cause issue", "d": "1/2017"}, {"body": "stefanpenner yea right mistake concern still valid", "d": "1/2017"}, {"body": "concern still valid didreceiveattrs didrender willrender didupdateattrs yup sure add baseclasses take route way concern also mitigated", "d": "1/2017"}, {"body": "looks like test suggest adding test file fix likely manually empty element call roughly done work around clear element call instead", "d": "1/2017"}, {"body": "rohmann work around mentioned rwjblue good enough perhaps close also work around seems like good way avoid using private method work around clear element call instead", "d": "1/2017"}, {"body": "locks chadhietala think issue address documentation perhaps label", "d": "1/2017"}, {"body": "definitely seems funky agree work around ensure recompute done within runloop fixes twiddle top head sure runloop required function wrapping setsrerenders like almost certainly better testing would prevent autorun assertion tests reasonable solution", "d": "1/2017"}, {"body": "fault think runloop would solution wrap prevent future users", "d": "1/2017"}, {"body": "kybishop took look example noticed order log statements indicated curious use case describe trying accomplish regarding order scheduling using also able upgrade", "d": "1/2017"}, {"body": "hey pixelhandler real issue lack consistency ember versions documentation differences made debugging unnecessarily confusing also unclear difference run loop schedule intentional hence bug report ember schedules tasks current run loop ember lt schedules tasks next run loop api suggests scheduled tasks run next run loop editing example guides shows scheduled tasks run current run loop regardless guide version example edit always act defensively dealing run loop order issues would make life lot easier run loop consistent ember versions docs noted differencewere consistent ember version behavior", "d": "1/2017"}, {"body": "kybishop likely could explain semantics confusing run loop nt changed thing really changed didinsertelement like afterrender flushes immediately rendering would like actually understand complaint depending timing like bit dubious nt fully understand mean current next task example", "d": "1/2017"}, {"body": "hey krisselden current mean current iteration queues run loop next mean next iteration queues hoping quick rundown clears mean current next ember function executing render queue schedule function run emberrunschedule afterrender run loop eventually finishes tasks render queue moves afterrender function scheduled eventually run whilst emptying tasks afterrender queue ember lt function executing render queue schedule function run emberrunschedule afterrender run loop eventually finishes tasks render queue moves afterrender function scheduled run instead schedule queues next iteration queues means first empty afterrender queue destroy queue etc arrive back afterrender queue effect schedule task next iteration run loop queues task show edit guide example see example executes scheduled tasks current run loop iteration regardless ember version guide set", "d": "1/2017"}, {"body": "depends scheduling afterrender description nt accurate change run loop behavior think seeing effect interaction afterrender scheduled", "d": "1/2017"}, {"body": "krisselden going see provided twiddle switching ember versions apologies describing seeing appropriatelyaccurately sounds like considered nonissue dealt needed flexi close", "d": "1/2017"}, {"body": "yes frozen array params object closing thank", "d": "1/2017"}, {"body": "bad test defaults ember textfield spellcheck attribute false function initialize application textfield application instance owner", "d": "1/2017"}, {"body": "locks update", "d": "1/2017"}, {"body": "problem passing objects constructed positional params component", "d": "1/2017"}, {"body": "similar problem passing hash helper twiddle reproduces issue note mycomponenttotallength ca nt computed fixed replacing helper simple helper returns full object instead emptyobject ember uses note totallength shown edit problem occurs also available twiddle", "d": "1/2017"}, {"body": "willing help fix issue pointers focus search reason bug", "d": "1/2017"}, {"body": "fwiw also found problem yesterday pred workaround using using plain think good reason use ever since ember weirdness found happened first time rendered view error transitioned somewhere else come back worked", "d": "1/2017"}, {"body": "hi locks rudymacias nightire trouble getting test nested component within pod findable qunit ember nt upgraded yet wonder ideas file want test path names substituted test file test file starts javascript import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent componentnamesubcomponent integration component componentnamesubcomponent integration true error assertion failed helper named componentname could found tried generating new component test command acceptance test passed next alert could nt find helper", "d": "1/2017"}, {"body": "confused regarded regression fix application", "d": "1/2017"}, {"body": "blocking us happy attempt fix someone confirm regression", "d": "1/2017"}, {"body": "issue well barring fix way turn emptyobject regular object", "d": "1/2017"}, {"body": "also interested status bug holding upgrading time", "d": "1/2017"}, {"body": "hoping could work around explicitly registering route leaving error template route etc place tried found failed route hook router bubble error route custom template shown deliberate transition error router transition template interestingly though log error message get route nt exist thinking maybe could leave template route controller etc place register custom error route pointing template explicitly handled error cases maybe would handle caught uncaught errors custom template nathanhammond thoughts worth hackery better wait official fix", "d": "1/2017"}, {"body": "nevermind proposal would still require mapping would trigger bug may go making custom route handled errors using error component template seems approach pending fix cc nathanhammond", "d": "1/2017"}, {"body": "noticed fixed ember chance get fix backported release since beta introduces whole bunch new issues", "d": "1/2017"}, {"body": "since beta introduces whole bunch new issues please report issues find beta cycle chance get fix backported release yes think good idea", "d": "1/2017"}, {"body": "recommendations work perhaps close one seen strong support changing testing behavior error handing case acceptance testing seems work around sufficient", "d": "1/2017"}, {"body": "sure solution adequate thanks", "d": "1/2017"}, {"body": "running problem acceptance test login page using embersimpleauthtoken addon addon actually wrapping ref seems option keep looking", "d": "1/2017"}, {"body": "pfmmfp could try workaround", "d": "1/2017"}, {"body": "pr shows inspired jquery migration guide ca nt migrate usage looks random failures testing words seems wait correctly wrapping inside rsvp embersimpleauth library also calling jqueryajax call expect random failures acceptance testing jquery course regarding testcase dwickern ps working issue pfmmfp helps", "d": "1/2017"}, {"body": "morhook apparently jquery still calls synchronously p deferred resolve pdone r gt consolelog r consolelog done prints done pthen r gt consolelog r consolelog prints standard promise apis though may want rely", "d": "1/2017"}, {"body": "issue posted another twiddle efx pointed may reproduce problem described issue left issue open case anyone want use twiddle verify fix also resolves problem", "d": "1/2017"}, {"body": "also plugin jetbrains ides called tabdir lets customize tabs even show folders title get rid componentjs distinguish folder appearance file colors etc", "d": "1/2017"}, {"body": "run app used helpers nested folders eg used invoke depending scenario upgraded ember app made changes third party libraries upon deploying staging environment triggered happened app stopped working throwing error console debug discover helper helper somehow issue fix use slashnotation helper invocations order reproduce dev totally dump amp folders amp error easier diagnose dev able determine exactly happened seems obvious sort node dependency ember ecosystem recently changed trickled old version", "d": "1/2017"}, {"body": "bitten well turns started move app using dotted component references since webstorm ember plugin prompting us insert components way liked way looked code ide going help us way end nt something fight hard aware least one tool prompting people insert component references using dotted notation instead slashes", "d": "1/2017"}, {"body": "csetera ahh nt realize webstorm plugin suggesting believe tracking issue", "d": "1/2017"}, {"body": "yep looked make sure registered issue saw open ticket", "d": "1/2017"}, {"body": "took little time yesterday write ruby script combs emberjs application replaces dotnotation paths slashnotation may helpful others cheers", "d": "1/2017"}, {"body": "may may bug addon encountered error", "d": "1/2017"}, {"body": "found issue using mixin entry points update property controller mixed definitely different properties cause simply belongs different controllers assertion fails blocking js tested mixin unwrapping controllers made transition routes reproduce nt reproduced trying get rid mixins simply kill create work around", "d": "1/2017"}, {"body": "believe valid use case seeing rerendering issue app button contains state ok validating warning error component shows current state validates certain things happen based result validation activation displays different things spinners different button text different button class check validation based response validation set appropriate button state button class computed property sets appropriate classes based button state since happens init seems like error triggered start status ok instantiation transition validating validating version final state based response however use case seems reasonable therefore state changes happening also seem reasonable", "d": "1/2017"}, {"body": "might able create twiddle sample app demonstrates believe incorrect error", "d": "1/2017"}, {"body": "reduce usecase twiddle", "d": "1/2017"}, {"body": "chancancode try post one soon thanks quick response", "d": "1/2017"}, {"body": "chancancode would twiddle seeing error seeing app might thing causing", "d": "1/2017"}, {"body": "seeing several computed properties one simple since none suggestions applicable case would appropriate workaround", "d": "1/2017"}, {"body": "mention flag feature mentioned chancancode", "d": "1/2017"}, {"body": "cbou far know flag nt exist", "d": "1/2017"}, {"body": "changed name id field router thisroute parent path parent id function thisroute child path child childid nemanja stojanovic notifications githubcom experiencing issue solve dmagunov happens id property change dynamic segment property unique child property exists called id value child property gets shown receiving mentioned reply email directly view github mute thread \u0441 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0434\u043c\u0438\u0442\u0440\u0438\u0439 \u043c\u0430\u0433\u0443\u043d\u043e\u0432 wwwawwsoftua", "d": "1/2017"}, {"body": "news", "d": "1/2017"}, {"body": "yea would real nice", "d": "1/2017"}, {"body": "still happening bit different stack trace suppose issue reopened", "d": "1/2017"}, {"body": "problem", "d": "1/2017"}, {"body": "somebody every look similar issue one willdestroyelement hook threw exception element destroyed", "d": "1/2017"}, {"body": "updates mmun trek", "d": "1/2017"}, {"body": "see marked intentional means avoid overriding", "d": "1/2017"}, {"body": "issue came implementation router service rfc identified issue fixed also added tests ensure working", "d": "1/2017"}, {"body": "hi thanks link think additional documentation somewhere would helpful saucelabs graphic currently shows mean supported firefox chrome bit info shows slchromecurrent slfirefoxcurrent mean current supported firefox esr documentation page somewhere like would clearer though even lacking clarity firefox esr aside slsafaricurrent slsafarilast probably need bumped respectively", "d": "1/2017"}, {"body": "update thanks", "d": "1/2017"}, {"body": "karellm yet still work decorators stage", "d": "1/2017"}, {"body": "stage means ember needs", "d": "1/2017"}, {"body": "irony ember creating dotted property name route paramname functionality fails probably underlying problem course additional usecases outside ember api less surprising nt work expected unfortunately even escaping data works method find", "d": "1/2017"}, {"body": "twiddle code defines property dot name misunderstanding", "d": "1/2017"}, {"body": "locks nested route needing access params regardless point sometimes object keys may use dot whether originates ember ultimately inconsequential pointed ironic context conversation api actually ember fact ember nt support property keys dots troubling light means interacting objects via standard api", "d": "1/2017"}, {"body": "need functionality wo nt fix issue", "d": "1/2017"}, {"body": "version ember using", "d": "1/2017"}, {"body": "locks working guessing something metalviews happened", "d": "1/2017"}, {"body": "current behavior consistent browsers behave try put tags nt run time people introducing major security vulnerabilities really want run javascript embedded html coming cms allowing anyone edit content steal user identity implement via domparser eval", "d": "1/2017"}, {"body": "argument security vulnerabilities seems little offbase triple braces security optout already open vulnerabilities images iframes insecure elements functionality pretty basic things like embedding tweet blog post broken script tags nt evaluated many social site embeds rely tags evaluated broken ember core leave app developer fix", "d": "1/2017"}, {"body": "argument security vulnerabilities seems little offbase triple braces security optout already open vulnerabilities images iframes insecure elements agree triple curlies already offer attack vectors still important distinction terms developer ergonomics random developer tasked allow people embed tweets posts probably try using triple curlies nt want succeed triple curlies wrong implementation feature dangerous right implementation twitter oembed api claiming panacea people obviously try use triple curlies reasons sometimes appear want leave users vulnerable unsympathetic argument making triple curlies even useful would make feel broken could", "d": "1/2017"}, {"body": "still happening", "d": "1/2017"}, {"body": "feature still needed still happening ember", "d": "1/2017"}, {"body": "something resolved long time ago ember give tools things user expects happen github issues filter click issues link would expect go back global issues would simply remove query params github exactly logical ember ca nt proper way either either use custom helper specify every single possible param every single nt want query params nt leaving route obviously far maintainable use method even pain maintain bad enough define query params multiple areas let alone reset nt even understand reason use stick query params caused issues since day nt seen benefits pagination links part route could easily get benefit ways without ruining every link page going create mentioned", "d": "1/2017"}, {"body": "people solve hackyish way actually maintainable still need stuff transition programmatically although changes could add query params hash get effect helper might make addon find time added helper use called place want use exactly sent js import ember ember export function explicitqueryparams params hash let values emberassign hash valuesexplicitqueryparams true return emberobjectcreate isqueryparams true values values export default emberhelperhelper explicitqueryparams queryparams one able pass hash example assume extending already add following method extend js hydrateunsuppliedqueryparams state queryparams queryparamsexplicitqueryparams delete queryparamsexplicitqueryparams nt cleanest way proper way would also involve replacing component creating classes detect functionality etc instead underscore param", "d": "1/2017"}]