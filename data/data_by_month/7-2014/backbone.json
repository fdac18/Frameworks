[{"title": "add option allow change default put method patch", "body": "using save function sends put requests need patch request simlest way solve like makes crazy use everywhere need simple patch request think adding smth like global setting would great thanks advance", "num": "3252", "d": "7/2014"}, {"title": "backbonecollection constructor wrong optional params", "body": "checking current former documentation shows andor optional would say needs read optional passed either param passed passed passed pass object without passing instantiation takes place object ends", "num": "3248", "d": "7/2014"}, {"title": "collectionadd partial models merge default", "body": "hi using backbone like set collection passing json representing partial models resulting models attributes arguments model defaults creating model directly testing works model object arguments defaults attributes collectionset nt work model collection console current result model expected result bug", "num": "3247", "d": "7/2014"}, {"title": "add option validate single property modelset", "body": "suggestion add option single name validate property set whole model backbonemodelvalidate look similar", "num": "3245", "d": "7/2014"}, {"title": "unable use global jqueryajaxsetup beforesend delete request", "body": "need add csrf token requests backend use following approach unfortunately executed following case var options wait true emulatehttp true processdata true url delete data id backbonesync delete model options nt understand xcsrftoken header added request backbone bug", "num": "3244", "d": "7/2014"}, {"title": "poor add performance sorted collections", "body": "significant performance problems adding items separately sorted collection appears wholelist sort happens every time item added case roll additions single addition operation would trigger one sort performance could improved using binary search find insertion point unfortunately underscore sortedindex take comparator inserting record appropriate location instantly", "num": "3242", "d": "7/2014"}, {"title": "optimize code setting temporary attributes", "body": "remove flower brackets setting temporary attributes code one statement inside condition way follow similar set temporary attributes restore attributes", "num": "3241", "d": "7/2014"}, {"title": "documentation patch missing backbonesync", "body": "lists four crud methods patch even though possible gets argument hidden feature oversight documentation", "num": "3238", "d": "7/2014"}, {"title": "modelhaschanged getting set empty object use", "body": "codepen click menu item supposed get highlighted individually instead get highlighted run code works fine still looking root cause assume modelset figured open issue incase one solved", "num": "3235", "d": "7/2014"}, {"title": "tojson option argument", "body": "takes argument models collections however nt anything argument function simply clones model arguments vestige old code would break anything argument removed never used", "num": "3233", "d": "7/2014"}, {"title": "patch support transforming keys server client", "body": "got server accepts keys snake case client everything camel cased get around converting back forth inside like working great especially scenario want send certain attributes server nt override left case sending complete representation server app also however ran problem line appears pass going get model instance snakecased run camelcased sure something backbone support feels fairly common need transform keys client server nt think always place completely takes away true support want send partial version model easy fix would simply run new extended object rather suppose could potential problems remodifying existing value something nt know ideascomments thanks", "num": "3232", "d": "7/2014"}, {"title": "objectobserve integration", "body": "since largely built listening views models collections objects way utilization thanks chrome stable release reasonably implemented much manageable performant told nt word alternative underlying methods come know love proposing completely away anything simply given presence capable browser utilize instead listening updatingdeleting objects looked everywhere discussion topic nt seem anyone public posts pages even found couple addons well years old inactive however overlooked something even something master branch please point right direction issue closed thanks ps would love take pull nt already worked nt want duplicate anyone current work avoid", "num": "3231", "d": "7/2014"}, {"title": "events selector name complex id names", "body": "input complex name problem comes want assign name id event work", "num": "3230", "d": "7/2014"}, {"title": "success callback executed", "body": "context backbonecollectionfetch would optionsuccess function map directly ajax success callback seem case looking difference success complete success called level returns case seeing success called server returns naively playing backbone etag ifnonematch try get conditional requests working bit tough time best way skipping call optionssuccess", "num": "3229", "d": "7/2014"}, {"title": "listentoonce creates unexpected memory leak listeningto object", "body": "using expect posttrigger free associations listener object much like calling however even though event listener cleans object reference still maintained object potential create unexpected memory leaks example parent view creates child view acts modal parent view close event children views event parent listening child close event fires parent view callback satisfied child view performed everything thought cleaned child view able gc though parent still reference case long living parent view become incremental leak perform view creations normal backbone user idea reference maintained object listened would expectation events watched nt know need perform manually proposal differentiate let perform callback thereby removing association event watched inelegant solution strikes crux problem javascript var listenmethods listento listentoonce inversionofcontrol versions tell object listen event another object keeping track listening listenmethods function implementation method events method function obj name callback var listeningto thislisteningto thislisteningto var id objlistenid objlistenid uniqueid l listeningto id obj callback amp amp typeof name object callback thoughts", "num": "3226", "d": "7/2014"}, {"title": "order routes router guaranteed", "body": "since iteration order object guaranteed described arbitrary order defining routes object safe never run problems wondering behavior browser implementation dependent reason asking issues object iterators returning things different orders contexts node mongo specialized browser used samsung smart tvs called maple would making routes array safer", "num": "3225", "d": "7/2014"}, {"title": "cool library backbonejs", "body": "working neck library backbonejs time year library takes best backbone opinion great model collection modules adds number trendy features like databinding controller view tiny modules view logic model management dependency injection looking developers like contribute library test projects draft api docs writing test get coverage use library work production projects fully usable tell think link neck", "num": "3224", "d": "7/2014"}, {"title": "", "body": "trying use scripts written import dta files directly matlab trouble two things trying using importdta command get importdtaprivate work properly using importmultipledta computer trouble codistributed believe nt parallel computing toolbox wondering way around without buying software anyone could help would much appreciated thanks", "num": "3223", "d": "7/2014"}, {"title": "modeldestroy requiring set noted idattribute send delete", "body": "summary using mongodb setting idattribute id model requires set variable instance id field order modeldestroy actually send delete request server using jquery underscorejs backbonejs example var foo backbonemodelextend urlroot foo idattribute id var editfoo backboneviewextend el page events click delete deletefoo lt lt gt gt deletefoo function ev set id field destroy reason expecting id vs id even though model decl set idattribute id thisfooset id thisfooget id thisfoodestroy success function foo routernavigate trigger true return false notes without thisfooset id thisfooget id call thisfoodestroy runs success delete request sent server since expecting id vs id modeldestroy expect id id", "num": "3221", "d": "7/2014"}, {"title": "routernavigate function called hashchange event function gets call", "body": "code var initialize function window hashchange reset var reset function alert hello reset therouterfunction function routernavigate trigger true replace true emptyfunction function alert hello emptyfunction routernavigate trigger true replace true call emptyfunction defined routes therouterfunction gets called clicking button click button webpage site therouterfunction gets called since hash changed hashchange event took place call reset function therouterfunction navigates calling routernavigate trigger true replace true emptyfunction first call reset emptyfunction order different first calls emptyfunction completes execution call reset function someone please help happening nt like", "num": "3219", "d": "7/2014"}, {"title": "router silent true initialize view without calling render", "body": "slider homeview initialized method runslider homeview loaded need method runslider called call runslider homeview render works navigate home first load automatically initialize slider others events without replacing dom calling render silent true set router could use backboneview initialize method view even initialized code", "num": "3218", "d": "7/2014"}, {"title": "maintain lodash branch backbone", "body": "possible backbone support lodash branch pulled directly component build realize could potentially mean releasing two tags per release one underscore another lodash helpful remove need teams maintain versions backbone lodash customizations alternatively way dynamically inject value way injected", "num": "3216", "d": "7/2014"}, {"title": "question collection attributes events", "body": "assume collection holds set models following attributes playlist attribute show song playing whenever changes right since listen collection attributes events manually set currentsong call learned basics backbone clearly want naturally listening events one alternative thought moving attributes different model eg musicplayer setting collection model attribute like extra info built chrome extension instant music learn backbone first time middle refactoring make code less awful issue past might related update ran across faqnested think good solution rename collection collection make another model contain", "num": "3213", "d": "7/2014"}, {"title": "need trigger event adding multiple models", "body": "add models collection get triggered events performance issue dom operations every adding models also removing ones better add something like", "num": "3212", "d": "7/2014"}, {"title": "hardly depends jquery since version", "body": "typeof define function amp amp defineamd define underscore jquery exports function exports export global even amd case case script loaded others may still expect global backbone rootbackbone factory root exports", "num": "3211", "d": "7/2014"}, {"title": "history accept route matching behavior", "body": "default backbonehistory resolves route first match think possible also use another strategies like match matching routes match specific route ie multiple routers distributed many modules one module defines another module defines specific route strategy would avoid conflicts would nt trigger callback route starting", "num": "3210", "d": "7/2014"}, {"title": "urls collection", "body": "documentation collectionurl states models within collection use url construct urls documentation correct nt see actually happening", "num": "3209", "d": "7/2014"}, {"body": "two options create method override save directly quite common enough use case need add backbone core", "d": "7/2014"}, {"body": "hey tomascasas right potential confusing find syntax pretty ugly think note docs passing first argument collection model constructors create instance options passed might helpful want open pull", "d": "7/2014"}, {"body": "happy point right repo procedure ie branching pr", "d": "7/2014"}, {"body": "documentation lives repo indexhtml fork account create branch master make changes push branch back repo open pr master", "d": "7/2014"}, {"body": "hopefully pr already let know ok also wanted note warnning applies cases could handled checking array first param could considered", "d": "7/2014"}, {"body": "mind using jsfiddle template show mean looks like created correctly", "d": "7/2014"}, {"body": "thanks nt think point validating model certain combinations properties going valid invalid together state validating single value also done easily setter", "d": "7/2014"}, {"body": "using application startup function init options", "d": "7/2014"}, {"body": "looks similar code nt execute method", "d": "7/2014"}, {"body": "always pass sort false option add call using type loop exit loop call sort collection", "d": "7/2014"}, {"body": "worth adapting comparators something like work case", "d": "7/2014"}, {"body": "say updating sortedindex way important comparators native way js uses describe sorting makes sense support libraries like underscore", "d": "7/2014"}, {"body": "good catch thanks", "d": "7/2014"}, {"body": "supposed get highlighted individually instead get highlighted seems work fine one thing noticed creating model like actually setting attributes actually setting properties model ie returns undefined returns change events may firing initially want set property contain values want set default actually happening creating menu items passing raw objects collection documentready handler setting property still undefined please future use stackoverflow mailing list irc channel questions like github issues developing framework", "d": "7/2014"}, {"body": "code meant allow highlight one item time click item highlight items unhighlight switch backbone version see intended result still think bug", "d": "7/2014"}, {"body": "reread docs retrieve hash model attributes changed since last none check comes set models false invocation naturally check return true particular model nt happened yet might want change logic either set collection models false set kind active model prop collection avoid looks like interpreting changed since last changed since model called would doc update help clarify things", "d": "7/2014"}, {"body": "think doc update would clarify things still curious logic works later versions", "d": "7/2014"}, {"body": "clue work version changed may hold answer clue start computechanges work outward", "d": "7/2014"}, {"body": "tested every version work guessing something broke investigate suggest", "d": "7/2014"}, {"body": "hi funkedgeek argument present remind folks argument present usable see context", "d": "7/2014"}, {"body": "anything wrong overriding fact probably best way look line backbonesync object pass advanced get sent instead calling jsonstringify model attributes try plugin pretty straightforward support userland current state things", "d": "7/2014"}, {"body": "think missed point calling attrs immediately later pass get model overriding even nt fix basically saying need transform keys serverclient never utilize function furthermore handle case want conditionally send complete representation model partial pass object add argument getting ugly reason pass", "d": "7/2014"}, {"body": "little confused problem want able pass snakecased attributes store camelcased server using keep attributes client camelcased snakecased whichever want switch sending server would model ever need get set using something nt going store locally saying transmogrifying attributes client server usually bad idea dead set going override methods get work", "d": "7/2014"}, {"body": "want model use camel cased attributes convert snake case sending server want able complete representation model via results calling also partials via transforming attributes nt evil ruby server speaks snake javascript client speaks camel trivial transform object two naming cases big deal fact way written seems like backbone made support cases perhaps oversight unless nt tell one offending line code", "d": "7/2014"}, {"body": "ok see line always sets pass would like backbone maybe check existence setting passedin way overridden could set snakecase first without affecting set model diff diff git abackbonejs bbackbonejs index abackbonejs bbackbonejs wraperror options method patch optionsattrs attrs method patch amp amp optionsattrs optionsattrs attrs xhr thissync method options", "d": "7/2014"}, {"body": "right yeah seems like good solution tad inconsistent api standpoint since still unable call understand basically proxy guess also makes sense would responsibility perform lines call essentially recreating would done normal circumstances", "d": "7/2014"}, {"body": "overridden method would monkeying yes would like nt need call override part", "d": "7/2014"}, {"body": "ahh see course sending complete representation override return work perfect thanks", "d": "7/2014"}, {"body": "closing favor", "d": "7/2014"}, {"body": "coming exciting new features", "d": "7/2014"}, {"body": "would love take pull nt already worked hey buddy go would make awesome pull request", "d": "7/2014"}, {"body": "good luck awesome", "d": "7/2014"}, {"body": "let know need extra hand", "d": "7/2014"}, {"body": "thanks support large enough delay replies started another project pushing queue hopefully redesigning wwwsheppardafmil wo nt take long though", "d": "7/2014"}, {"body": "hi bichotll believe need escape inner brackets slashes", "d": "7/2014"}, {"body": "great thanks", "d": "7/2014"}, {"body": "scope backbone backbone dutifully accepts whatever jquery tells statusfailure jquery success", "d": "7/2014"}, {"body": "neat mailing list better avenue types announcements might want post", "d": "7/2014"}, {"body": "thisfooset id thisfooget id attributes unchanged backbone wo nt add attribute model fails either use preference strikes", "d": "7/2014"}, {"body": "think missed issue functions work fine id modeldestroy expecting id otherwise nt send delete rest api server issue noted specific modeldestroy sending delete request server everything else works need reopen issue look closely nt send delete server var foo backbonemodelextend urlroot foo idattribute id var editfoo backboneviewextend el page events click delete deletefoo lt lt gt gt deletefoo function ev thisfoodestroy success function foo routernavigate trigger true return false send delete server var foo backbonemodelextend urlroot foo idattribute id var editfoo backboneviewextend el page events click delete deletefoo lt lt gt gt deletefoo function ev set id field destroy reason expecting id vs id even though model decl set idattribute id thisfooset id thisfooget id thisfoodestroy success function foo routernavigate trigger true return false", "d": "7/2014"}, {"body": "really question stackoverflow irc channel mailing list try luck github issues feature requests problems framework think find issue line property id attribute model must set create url correctly set property backbone use determine model id", "d": "7/2014"}, {"body": "point backbone still using id id destroy method expecting id set nt issue backbone btw using mongodb backend mon jul pm adam krebs notifications githubcom wrote really question stackoverflow irc channel mailing list try luck github issues feature requests problems framework think find issue line id property id attribute model must set create url correctly set idattribute property backbone use determine model id reply email directly view github eom", "d": "7/2014"}, {"body": "amintora problem still occur try using latest master version backbone", "d": "7/2014"}, {"body": "try hours mon jul pm jeremy ashkenas notifications githubcom wrote amintora problem still occur try using latest master version backbone reply email directly view github eom", "d": "7/2014"}, {"body": "ok issue master version", "d": "7/2014"}, {"body": "create small jsfiddle reproduce issue", "d": "7/2014"}, {"body": "adam looks like right error code issue backbone tue jul pm adam krebs notifications githubcom wrote create small jsfiddle reproduce issue reply email directly view github eom", "d": "7/2014"}, {"body": "cool glad hear worked relationship properties attributes models get bit murky around js var mongomodel backbonemodelextend idattribute id urlroot widgets var new mongomodel id var b new mongomodel id consolelog aid aget id aget id undefined undefined consolelog bid bget id bget id undefined consolelog aurl widgets consolelog burl", "d": "7/2014"}, {"body": "hi sharmamanish understand correctly concerned order handler route handler called source appears hash set router handler called expected would mind providing working example code reproduces issue jsfiddlejsbinetc", "d": "7/2014"}, {"body": "issue tracker feature suggestions problems framework try mailing list stackoverflow", "d": "7/2014"}, {"body": "lodash useful nonstandard jdalton dedicated good amount work making true dropin underscore work minimal fuss alternatively way dynamically inject backbone value way backbone injected pattern works well jquery used places throughout code lazilyassigning variable useful underscore hand used times place would muddy code great needs eagerly required backbone work correctly feel free keep fork keeping date trivial", "d": "7/2014"}, {"body": "forking needed lodash supports aliased underscore fact many projects like yeomangeneratorbackbone use lodash instead underscore default alias backbone amd loader example using requirejs aliases another example using lodashamd build config try moderncompat build lodash first problems always drop back lodashunderscore build", "d": "7/2014"}, {"body": "using backdash really like works well browserify aliasing modules nt quite easy require", "d": "7/2014"}, {"body": "browserify also aliasify allows aliasing", "d": "7/2014"}, {"body": "yep shimming path great way go browserify webpack support aliasing", "d": "7/2014"}, {"body": "thanks jdalton component package management nt support aliasing though afaict maintaining fork internal repo named underscore lodash underneath wanted move formal approach thanks", "d": "7/2014"}, {"body": "question issue framework try stackoverflow mailing list irc channel check backboneattributes adding setters change events collection", "d": "7/2014"}, {"body": "closing duplicate others", "d": "7/2014"}, {"body": "nt add event example backbonejs core debounce advice desired due async nature", "d": "7/2014"}, {"body": "see got new argument feel free introduce", "d": "7/2014"}, {"body": "hi ramoncaldeira matching styles may work think generally useful style first match backbone stick said easily replace matching logic overriding history loadurl", "d": "7/2014"}, {"body": "yep right", "d": "7/2014"}, {"body": "noticed two lines code might affected putting one model multiple collections js destroy function options options options clone options var model var success optionssuccess still glad find events would work thx", "d": "7/2014"}, {"body": "idea pushed official package new version ran issue well", "d": "7/2014"}, {"body": "similar workaround component would solve need addressing", "d": "7/2014"}, {"body": "drjoke mistake facing similar issue", "d": "7/2014"}, {"body": "adding reset option save sometimes server logic may update one attribute causes another attribute change far tell ca nt make backbone update dependent attribute model even use wait true", "d": "7/2014"}, {"body": "hey want believe parts backbone useful well written find mixing objects would great able import modules backbone thereby avoiding code duplication importing parts application one example backboneevents agree jashkenas keeping backbone one file easy read probably draw new users contributors however think able output commented assembled version able take care users bit contributors nt think serious contributors would dissuaded contributing backbone series imported modules versus one file still annotated built source able read modules think broken backboneevents backboneextend backonesync least every major chunk file", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "gist gather thread sending ajax data server contenttype preferred could give explanation source see sites like github google twitter use latter ajax requests reason preference", "d": "7/2014"}]