[{"title": "test failures", "body": "try run test suite locks browser couple minutes dies stack overflow errors comment tests failed rerun see lot failing tests running tests opening testtesthtml browser tried chrome safari lion something wrong", "num": "516", "d": "7/2011"}, {"title": "push pop maybe maxsize", "body": "hi using collections store events come server widgets subscribe de add event notified new events arrive thing time old events longer needed would like kind circular buffer list maximum size collection reaches size last element droped looking api collection nt seem make easy fetch remove elements index easier way collectionremove collectionat collectionlength push would collectionadd item think push pop would make cleaner easier understand api make patch would accepted possible patch maxsize one different last one one implemented without thing documentation nt specify add default adds end beggining", "num": "505", "d": "7/2011"}, {"title": "hashes starting", "body": "working project page identifier actually start specific case tv show name problem hashstrip regex removes multiple occurrences first one see reason changing regex would solve", "num": "498", "d": "7/2011"}, {"title": "success callback model set function", "body": "using jquery dialog show form modify temporary model set success close dialog error validation show errors without closing dialog thanks", "num": "493", "d": "7/2011"}, {"title": "read property localstorage undefined", "body": "backbonejs var user backbonemodelextend urlroot users var u new user uset name pankaj usave typeerror read property localstorage undefined", "num": "492", "d": "7/2011"}, {"title": "way complex sorts like descending alphabetic", "body": "since backbone uses underscorestyle comparators types sort possible like descending alphabetic also impossible comparators complex sort conditions like sort alphabetically put starred items first gist extends backbonecollection use ecmascriptstyle comparators sure suggest longterm solution", "num": "488", "d": "7/2011"}, {"title": "collection fetch w data documentation needs updating", "body": "documentation states w jqueryajax options also passed directly fetch options via found using use work something wrong documentation need updating", "num": "486", "d": "7/2011"}, {"title": "wraperror compatible jquery passed arguments", "body": "jquery calls error callback passes three arguments uses first argument treating somewhat wrong response jquery xmlhttprequestcompatible object making inaccessible zepto passes two arguments also compatible wraperror simplest solution wo nt break backward compatibility work jquery zepto would pass everything first argument additional arguments wrapped onerror something like one would use access everything", "num": "485", "d": "7/2011"}, {"title": "make backbonemodelprototypetojson recursive", "body": "cases model contains attributes either another model collection models calling tojson containing model invoke tojson calls contained models collections instead returning asis could also made optional prefer create pull request", "num": "483", "d": "7/2011"}, {"title": "allow context passed third parameter backbone", "body": "backbone event bind function allow third argument context automatically use bind bind context callback instead writing could write", "num": "482", "d": "7/2011"}, {"title": "setting context defaults function", "body": "using function defaults property class extending backbonemodel ran set current instance created specific case problematic wanted give collection access parent model pushing commit fixes", "num": "480", "d": "7/2011"}, {"title": "option nt fire events", "body": "apologies missed something seems calling nt trigger events success case make mistake setup using within collection things work expected", "num": "479", "d": "7/2011"}, {"title": "backbonemodelget used internally instead accessing attributes array directly", "body": "assuming someone would overwrite backbonemodelget method get method would used internally possible eg backbonemodelhas would result consistent model currently overwriting get method little effect rest api eg method backbonemodelhas would translate", "num": "478", "d": "7/2011"}, {"title": "backbone model loading loaded error events", "body": "project working using backbone model found extremely useful trigger loading start fetching model data view could tell user network activity happening example firing loaded parts system need work data available continue rather using standard backbone callbacks less backboney sense since backbone events easier bind aspects system together error backbone event error occurs think would useful backbone bake events standard model superclass", "num": "477", "d": "7/2011"}, {"title": "backbone model defaults system subclass safe", "body": "backbone provides standard defaults object literal add model establish defaults however subclassing models safe example imagine var car backbonemodelextend defaults foobar var toyota carextend defaults hello toyota made present backbone instead getdefaults method provides object literal subclasses override call superclasses getdefaults chain defaults together backbone mixes defaults aggregate together something like backbonemodel function attributes options attributes attributes attributes extend thisgetdefaults attributes default getdefaults implementation would empty", "num": "476", "d": "7/2011"}, {"title": "backbonemodeltojson documentation", "body": "hi link documentation backbonemodeltojson incorrect tojson method documented would also recommend add another line example demonstrate magic tojson alert jsonstringify artist alert jsonstringify artisttojson", "num": "475", "d": "7/2011"}, {"title": "fetched data id property mandatory mentioned doc", "body": "encountered problem modeldestroy nt issue delete server finally found missed id json data server collectionfetch backbone think fetched data isnew admit missed id section document since think kind function get id automatically generated cid nt think id important skipped think document would better example server json data attached fetch function doc", "num": "472", "d": "7/2011"}, {"title": "allow bind unbind methods take instance", "body": "common pattern view binds model view removed clean listeners using unbind one problem current way backbone things something like handle things pseudocode view class initialize function thischangelistener thisrenderbind thismodelbind change revision thischangelistener render function remove function thismodelunbind change revision thischangelistener time want bind backbone listeners instance however order safely unbind keep instance variable around truly unbind gets gross leads code clutter bind unbind methods allowed optional instance variable third argument goes away code becomes much cleaner pseudocode view class initialize function thismodelbind change revision thisrender render function remove function thismodelunbind change revision thisrender enough context unbind change revision thisrender bound variable backbone makes call simply apply pass optional third argument", "num": "471", "d": "7/2011"}, {"title": "view rendering zepto", "body": "using zeptojs code similar following content html viewrender el instead inserting contents viewel content div object htmldivelement gets inserted instead switch back jquery everything works fine workaround using empty target div first append content content html content append viewrender el behavior appears result using zepto html method returned backbone viewel method use string eg test zepto method issues bug either framework something wrong end thanks", "num": "467", "d": "7/2011"}, {"title": "binding methods automatically convention", "body": "hi come way creating bindings automatically withoout call bindall every function use initialize method call thisautobind add methods backbonecollectionextend get automatically bound initialize nt want function bound prefix eg somefunction convention think good idea let know comments", "num": "466", "d": "7/2011"}, {"title": "detect property changes get rid getterssetters", "body": "would neat get rid getterssetters attributes know used synchronization attribute tracking think could achieved much neater using maybe particular reason approach nt used already overlooked proof concept implementation credit elijah grey objectwatch objectprototypewatch objectprototypewatch function prop handler var val prop getter function return val setter function newval return val handlercall prop val newval delete prop ca nt watch constants objectdefineproperty ecmascript objectdefineproperty prop get getter set setter else objectprototypedefinegetter amp amp objectprototypedefinesetter legacy objectprototypedefinegettercall prop getter objectprototypedefinesettercall prop setter objectunwatch objectprototypeunwatch objectprototypeunwatch function prop var val prop delete prop remove accessors prop val", "num": "465", "d": "7/2011"}, {"title": "modelcollection good thing", "body": "hi model added collection collection points model model points collection far understand allow model compute url collection url modelfetch invoked drawback model added several collections could really convenient working large ajax application glad know intensively using backbone data need displayed many places sometimes collections appears unsorted sortedfiltered today workaround either adding indirections intermediate models widgets collections two instances models one collection satisfactory suggest model point collection belongs would hard set url model fetch really need would allow design powerful application models", "num": "464", "d": "7/2011"}, {"title": "backbonemodelextend problem", "body": "hello guys downloaded development version library tried use backbonemodelextend browser said undefined looked source code saw function defined e instead e set inheritance model collection view backbonemodelextend", "num": "463", "d": "7/2011"}, {"title": "sync return changed", "body": "called fetch collection returned collection call fetch collection returns jquery ajax object prevents chaining creation collection immediate fetch tweets new tweets fetch requiring tweets new tweets tweetsfetch intended change thanks", "num": "462", "d": "7/2011"}, {"title": "coffeescript integration creates class variables differently straight backbone", "body": "declare subclass using backbone class function pass second object literal derive class variables backbone stores properties object declare subclass using coffeescript keyword declare class variables way coffeescript wants get stored object latter approach seems correct inconsistency causes problem plain vanilla js subclasses need inherit since nt know expect class variables appear something dumb discrepancy", "num": "461", "d": "7/2011"}, {"title": "hashbang urls broken", "body": "used hashes tells google index app exclamation marks stripped tried patching line taking exclamation mark looks like involved wont fire routes thing hashbangs nt look thing want take", "num": "460", "d": "7/2011"}, {"title": "tool documentation", "body": "tool use generate document format handy pleasant read", "num": "458", "d": "7/2011"}, {"title": "questions pushstate history", "body": "hi trying upgrade backbone project want set pushstate true call backbonehistorystart code project ok ca nt work pushstatecapable browser ff chrome click link homepage url changed trigger correctly events defined router someting wrong code backbone latest version thanks", "num": "456", "d": "7/2011"}, {"title": "possible multiple routers single page", "body": "started build widget using backbone easily dropped webpage someone might want include multiple instances widget page might create additional widgets need include one page widget allows crossdomain retrieval data displayed external site widget actually miniapp needs able display different views based actions user takes using backbone routercontroller display right view selected view needs bookmarkable browser backforward buttons navigated user interactions multiple miniapps embedded single page possible using backbone routers would multiple routers work router listen part hash string better understand use case imagine sports league wants display schedules standings widget included onto webpage displays list divisions clicking division displays list teams game schedule division clicking team displays schedule team team might want send link users schedule team schedule needs bookmarkable works fine one schedule widget page league wants include two instances widget perhaps widget displaying current season another one displaying last season people go view standings results lastly interacting nonbackbone hashstring interactions page assuming really nt anything could something page link like thoughts suggestions would appreciated", "num": "455", "d": "7/2011"}, {"title": "doc backbonesync sync code", "body": "docs still gives method signature changed actual implementation changed", "num": "454", "d": "7/2011"}, {"title": "typo backbone home page upgrading section", "body": "probably typo backbone homepage upgrading section probably think", "num": "453", "d": "7/2011"}, {"title": "hashbangs routing", "body": "issues since upgrading hashbangs routing worked longer working changing controller router example router backbonerouterextend routes index index function consolelog test new router backbonehistorystart", "num": "452", "d": "7/2011"}, {"title": "routernavigate triggerroute wo nt work pushstate", "body": "using backbone attempting update see backboneroutersetlocation changed backbonerouternavigate triggerroute parameter added optionally call backbonehistoryloadurl however backbonehistorynavigate function using pushstate triggerroute wo nt work time loadurl called end function fragment modified include thisoptionsroot line means backbonehistoryloadurl ca nt find correct route fragment optionsroot", "num": "451", "d": "7/2011"}, {"title": "allow abort xhr requests selected", "body": "sometimes necessary stop previous requests raised fetch function", "num": "450", "d": "7/2011"}, {"body": "exact thing tried debug result", "d": "7/2011"}, {"body": "think reason multiple hash strip currently exists get set multiple times browsers want submit pull request test patch firefox safari chrome ie submitting glad merge", "d": "7/2011"}, {"body": "agree workaround talking listening errors bind object pass activate callback bind pass dummy value force change nothing really changes", "d": "7/2011"}, {"body": "using detect errors always closing dialog error open show errors hacky", "d": "7/2011"}, {"body": "leave closing action inside callback remember pass dummy values force triggering", "d": "7/2011"}, {"body": "thanks really model particularly used webapp state gets changed lot think wait functionality", "d": "7/2011"}, {"body": "hit confusion today get working went approach would much rather able pass hash options", "d": "7/2011"}, {"body": "fixed using latest version", "d": "7/2011"}, {"body": "indeed pull days ago resolves issue thanks", "d": "7/2011"}, {"body": "pull also fixed issues however download source backbone site needs updated pulled copy directly", "d": "7/2011"}, {"body": "really watch create infinite loops like simplest example serializing countless ways create cycles type graphs course might want take look implementation backbonerelational", "d": "7/2011"}, {"body": "great work backbonerelational paul nt know useful working thanks implementation something similar solution circular references edit others noted", "d": "7/2011"}, {"body": "nt think patched default nt models collections nonjson object attribute model want get fancier complete plugin like backbonerelational way go", "d": "7/2011"}, {"body": "well backbonerelational fullblown solution might suited everyone imo current state backbonejs allow handle quite well willing handle stuff manually working project makes heavy use modelscollections attributes models success backbonerelational sugar coats makes much easier handle nt think required quite common relations models collections backbone nt far allowing suggesting merge backbonerelational features core features like seems quite simple compared benefits get", "d": "7/2011"}, {"body": "sorry look issue see pull request solve issue", "d": "7/2011"}, {"body": "thanks merged pull request", "d": "7/2011"}, {"body": "think holds", "d": "7/2011"}, {"body": "problem present object views", "d": "7/2011"}, {"body": "defaults property used function backboneview events nt support maybe support added could call manually events argument make sure call super", "d": "7/2011"}, {"body": "way go nothing jquery api documentation indicates accepts dom element looks like undocumented feature emulated zepto", "d": "7/2011"}, {"body": "zepto wants maintain better jquery api compatibility fix method also accept references dom elements open ticket", "d": "7/2011"}, {"body": "pls see also blog post also coffeescript implementation", "d": "7/2011"}, {"body": "nicer way would nt actually test work might efficient check instead creating array excluded methods using", "d": "7/2011"}, {"body": "thanks shesek really like style mon jul shesek lt reply replygithubcom wrote nicer way would nt actually test work reply email directly view github", "d": "7/2011"}, {"body": "yes standard wo nt work js runtimes furthermore backbone models schemaless name properties advance would give strict schema", "d": "7/2011"}, {"body": "perhaps one could hook current set functionality ie passthrough attributes object except specific attributes one like handle otherwise eg id way model would stay schemaless guess wo nt available nt know browsers backbone aim support perhaps approach used pushstate could used optional kind people using firefoxchromechromeframe ie running backbone nodejs would think understand may hurdles think would enhancement perhaps keep issue open discussionthought", "d": "7/2011"}, {"body": "sorry backbone nt ever going include functionality nt work common browsers nonstandard nt exist version internet explorer", "d": "7/2011"}, {"body": "run exact problem", "d": "7/2011"}, {"body": "windowmymodel backbonemodelextend", "d": "7/2011"}, {"body": "saw tutorial nt looked documentation mistake sorry", "d": "7/2011"}, {"body": "yes", "d": "7/2011"}, {"body": "asked original question benefit change ability access promise", "d": "7/2011"}, {"body": "yes", "d": "7/2011"}, {"body": "think see goofed cs class variables need prefaced js backbonedemoview backboneviewextend classproperty blah windowdemo new backbonedemoview consolelog windowdemoconstructorclassproperty cs class backbonedemoview extends backboneview classproperty blah demo new backbonedemoview consolelog democlassproperty cs class backbonedemoview extends backboneview classproperty blah demo new backbonedemoview consolelog democonstructorclassproperty", "d": "7/2011"}, {"body": "", "d": "7/2011"}, {"body": "click link homepage clicking html links certainly nt compatible pushstate would link even use", "d": "7/2011"}, {"body": "ok thanks replace tag tag div bind click event trigger router call navigate update url works use tab focus links nt think good user experience", "d": "7/2011"}, {"body": "quite ghettooldschool solve problem whoopee even click handler elsewhere example simply show could use", "d": "7/2011"}, {"body": "sure belongs issues page probably suitable supportforumwiki lem shot probably consider redesign widgetpage interaction ideally relook splittg widget separate types different routes also consider happens people click widgets bookmark last clicked widget route criteria anyway probably define widget parent controller looks instances widget page namespace define router sub controllers per widget typepage maybe way link main controller page matter many hth", "d": "7/2011"}, {"body": "threepointone thanks response ask similar question irc first nt get reply nt realize backbone support group started working backbone last year nt think one existed checked site see google group great follow reply suggestions guess main thing trying figure best create master subrouters like build master router simply knows route requests appropriate subrouter whichever widget created first page would create master router inject subrouter widgets would inject subrouters perhaps master router would need splat route actually dynamically adding routes via might better way go thing unsure handle maintaining state across multiple widgets perhaps hashbang supports multiple paths sort delimiter might work perhaps one would nice portion path could sent appropriate subrouter routing", "d": "7/2011"}, {"body": "btw make sure page widget included nt use fragment identifiers sure router makes sense widgets anyway really consider breaking widget smaller ones one specific thing best luck", "d": "7/2011"}, {"body": "certainly use multiple routers page threepointone quite correct really bad idea change url small widgets url changes used considered new page pressing back button repeatedly little widget flutter around going frustrate visitors", "d": "7/2011"}, {"body": "thanks suggestions clear widgets actually intended consume entire content area provide large chunks embedded functionality hashbangs control make sense situation seem frustrating users problem user could put multiple widgets onto page widgets made allow people wordpress sites external sites embed miniapps pages ca nt control put one onto page course recommend mainly want see way support", "d": "7/2011"}, {"body": "afraid hashbangs never good idea unless webapp actually generating pages pushstate really never need em said improved support present write still match hash", "d": "7/2011"}, {"body": "thanks reporting take look patch let know nt work tests think added", "d": "7/2011"}, {"body": "works thanks", "d": "7/2011"}, {"body": "nothing stops returns xhr request using head version backbone", "d": "7/2011"}, {"body": "ok got currently use thanks suggestion", "d": "7/2011"}, {"body": "like written list widget uses indirectly backbone collection model could achieved efficiently without index addedremoved model added index options order break api seems least worst solution temporary hack fyi patched backbone add function around line remove function around line always reluctant break api think proper way add parameter callback", "d": "7/2011"}, {"body": "able store something state side pushstate onpopstate occurs get state see came would managing side course without way push anything pushstate right truly way know", "d": "7/2011"}, {"body": "setup controllerrouter notify header breadcrumb views route change better way handling spaghetti native custom events trying change things outside scope example controller notifies routechange header listens routechange breadcrumb listens routechange", "d": "7/2011"}, {"body": "case would like avoid making router aware various components need aware state introduces direct dependencies coupling components runtime important since components loaded user hits certain point flow using generic event meshes general arch backbone imo thus request", "d": "7/2011"}, {"body": "router nt aware components pubsub listenernotifier implementation", "d": "7/2011"}, {"body": "ah confused comments thought example negative case works fine single router multiple becomes quite complicated register event listener router instances basically ended current implementation request create event binding listened global manner route event described", "d": "7/2011"}, {"body": "bumping today building prototype app see backbone suitable would like various routers different parts app perform cleanup cases route changed current behavior fine switching routes within one portion app case single router leave portion another router takes control want clean still maybe even solution making every router aware routers nt acceptable seems since backbonehistory knows routers anyway would easy enough aggregate change events backbonehistory hell bent solution think clean one take care needs better method cleanup changing routes thanks", "d": "7/2011"}, {"body": "implementation working things submit pull request", "d": "7/2011"}, {"body": "delegating events routes main history object done quite simply application level adding events capabilities backbonehistory creating base route using said think still might suitable added core even done quite easily using existing tools provided backbone", "d": "7/2011"}, {"body": "fair enough", "d": "7/2011"}, {"body": "fixed", "d": "7/2011"}, {"body": "fixed", "d": "7/2011"}, {"body": "nope jquery zepto dependencies views history explained docs", "d": "7/2011"}, {"body": "thanks mean restful persistence dom manipulation backboneview highly recommended include either jquery zepto somewhere else mentioned might worth changing highly recommended need mention history needs zepto jquery", "d": "7/2011"}, {"body": "already done", "d": "7/2011"}, {"body": "glad sorted please notice date original issue june issue fixed hopefully excuses apparent ignorance", "d": "7/2011"}, {"body": "fixed", "d": "7/2011"}, {"body": "nt seem commit head line event still triggered model rather collection", "d": "7/2011"}, {"body": "event supposed start model", "d": "7/2011"}, {"body": "got thanks", "d": "7/2011"}, {"body": "fixed minute", "d": "7/2011"}, {"body": "got issue even tried make sure somecollectionview collection reference still luck actually jump fetch function add line trigger refresh event like fetch function options options options var collection var success optionssuccess optionssuccess function resp status xhr collectionoptionsadd add reset success success collection resp collectiontrigger refresh optionserror wraperror optionserror collection options return thissync backbonesync call read options works", "d": "7/2011"}, {"body": "record ended adopting spine api instead", "d": "7/2011"}, {"body": "cool might also want look way spine fires navigation change event hashchange event navigate invoked manually speeds things somewhat especially mobile browsers additionally spine shim option enabled makes sure routes work internally nt displayed hashurl words routes default way navigating components spine even nt ever displayed user tue jul jashkenas lt reply replygithubcom wrote record ended adopting spine api instead reply email directly view github alex maccaw maccman", "d": "7/2011"}, {"body": "would resist mailing list", "d": "7/2011"}, {"body": "think following solution function trigger suitable need modify", "d": "7/2011"}, {"body": "change log available notes upgrading", "d": "7/2011"}, {"body": "came across well six weeks late think assumption validate validate setting new attrs validating model rest us use validate new attrs validate whole model new attrs makes sense call validate modelsave null options everything make sense ended ugly solution well unless nt like new case elegant models commonality decorated backbonemodel class call modelinit instead new model allows trap instead var new model msave var mymodelinit msave covers init used var new model attrs return new mset attrs return way though", "d": "7/2011"}, {"body": "encountered problem create destory view repeatedly fixed bug project view replaced another view call oldviewremove explicitly previous binded events gone", "d": "7/2011"}, {"body": "", "d": "7/2011"}, {"body": "renaming due ambiguity personally nt like publish subscribe", "d": "7/2011"}, {"body": "also like see delegateevents accept non dom event handlers", "d": "7/2011"}, {"body": "also thinking aliasing correct solution deprecate nt remove bind", "d": "7/2011"}, {"body": "issue underscorejs seems like nt want add support foor deep cloning real reliable way", "d": "7/2011"}, {"body": "issue ietester windows bits error thrown sure compatibility mode solved changing code using", "d": "7/2011"}, {"body": "installed virtual machine xp error nt thrown could ietester problem see without ietester", "d": "7/2011"}, {"body": "ok ietester problem virtual machine nt thrown error", "d": "7/2011"}]