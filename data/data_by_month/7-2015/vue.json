[{"title": "invalid properties passing empty string component", "body": "hello simple component property defaults empty string using component like result expected passing empty string property value know could worked around scenario run like result follows error expect property still empty string bug expected behaviour fiddle example", "num": "1107", "d": "7/2015"}, {"title": "", "body": "html text vuecomponent layout template lt div stylebackgroundcolor lightgrey gt lt content gt lt content gt lt div gt inherit true new vue el documentbody data text hello components child template lt layout gt world lt layout gt \u6e32\u67d3\u540e\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u91cc\u5ba1\u67e5\u5143\u7d20\u7ed3\u679c html hello world \u5047\u5982\u5b50\u7ec4\u4ef6\u7684\u6a21\u677f\u4e0d\u662f\u628a\u5f15\u7528\u7ec4\u4ef6\u653e\u6700\u5916\u9762 \u6709\u5144\u5f1f\u5143\u7d20 html hello worldhehe", "num": "1106", "d": "7/2015"}, {"title": "vattr behaving differently", "body": "last update vattr behaving differently mostly affects image loading example load image like previous version set attribute inserted dom latest version set attribute equals triggers image download invalid url know fixed previous syntax much cleaner see issue", "num": "1105", "d": "7/2015"}, {"title": "onclick method nt work", "body": "onclick editblock hbid index nt work new release vue release working", "num": "1104", "d": "7/2015"}, {"title": "allow one static empty option select element dynamic options", "body": "model empty string static option selected example without fiddle around array add select user option angular supporting long time btw really think filter ship core", "num": "1103", "d": "7/2015"}, {"title": "vel vref bindings reactive", "body": "changes content another component two components property different values manually accessing property via refproperty returns correct value databindings updated", "num": "1102", "d": "7/2015"}, {"title": "vrefvel higher compilation priority", "body": "way currently works unexpectedly procedural html foo fooinnertext barinnertext bar fiddle", "num": "1101", "d": "7/2015"}, {"title": "merging class attribute svg component", "body": "result btw nodes plain attribute template root node take priority think let instance override template default attributes flexible", "num": "1100", "d": "7/2015"}, {"title": "failing resolve component results error", "body": "hello ca nt say bug would like warning error", "num": "1099", "d": "7/2015"}, {"title": "strange behavior dynamic component", "body": "hello ca nt say sure going got problem everything ok app started lag lot got warnings like code got warnings looks like dynamic component dynamic props hints", "num": "1098", "d": "7/2015"}, {"title": "component nt right", "body": "following example root vue properly", "num": "1097", "d": "7/2015"}, {"title": "resolve component true", "body": "set true repeat directive resolve proper component example followed demo see console", "num": "1096", "d": "7/2015"}, {"title": "cloned safari", "body": "safari wo nt clone template content template cloned including content situation demo", "num": "1095", "d": "7/2015"}, {"title": "suggestionpatch filterbykeys filter array multiple keys", "body": "common requirement specify multiple keys look might produce false positives fields irrelevantinvisible user crude modification dubbed usage example would possible add filter core perhaps replace backwards compatible currently keeping separate custom filters file requires duplicating function pulling requirements javascript var filterbykeys function convert arguments actual array var args slicecall arguments var arr argsshift var search argsshift cast lowercase string search search tolowercase strip optional args delete args left keys fall back keys var keys argslength gt args objectkeys args ps possible issues might arise conversion bit funky sure browser compatibility", "num": "1094", "d": "7/2015"}, {"title": "merge property sag elements", "body": "read returns readonly object string fails merge property transclude phase", "num": "1093", "d": "7/2015"}, {"title": "value default param props gets replaced component data", "body": "hello missing something ok default value present", "num": "1092", "d": "7/2015"}, {"title": "ca nt get way default param props works", "body": "", "num": "1091", "d": "7/2015"}, {"title": "suggestion passing function result inline statements", "body": "return security reasons following example sometimes want need value function return dynamic condition html select input javascript vueuse require vuevalidator new vue data widget title title description compueted togglewidget function return thiswidget title methods dynamicconstraint function name condition var ret name title condition foo somehting todo else somehting todo else name description somehting todo return ret mount demo implemented using option properties computed properties function flexibility better properties vuejs could pass function result inline statements think useful", "num": "1090", "d": "7/2015"}, {"title": "expose", "body": "find resolve asset check however value nt exposed", "num": "1089", "d": "7/2015"}, {"title": "template option accept function", "body": "could used like async components make development systemjs breeze", "num": "1088", "d": "7/2015"}, {"title": "vue compatible systemjs", "body": "getting error templates loaded like", "num": "1087", "d": "7/2015"}, {"title": "old newval watch nt seem working expected", "body": "jsbin watch function enabled nt seem working expected example watch options plain watch example example seems produce output quite sure wrong anywhere", "num": "1086", "d": "7/2015"}, {"title": "quite right behavior component right inside another one", "body": "error check console ok see happening replace mechanism vms overlapping think warning quite exact one", "num": "1084", "d": "7/2015"}, {"title": "trackby property raise warning honored using binding", "body": "using binded warning raised directive honored see jsfiddle console read prevent coding parametric list components reproducible vuejs tested far", "num": "1083", "d": "7/2015"}, {"title": "strategy make twoway binding sync", "body": "example value changes update binding value binding value watcher modify value wo nt propagate value directive", "num": "1082", "d": "7/2015"}, {"title": "scope repeated component right", "body": "example followed always without value property always empty first case resolved using parent scope last case properties initialized meta data", "num": "1081", "d": "7/2015"}, {"title": "vueconfigstrict vrepeat", "body": "bit trouble trying repeat component initially trying place directly component tag could nt access properties item component tag pass props saw recommended use wrap component strict enabled child component nt exist within changed still child component nt exist inside see example change strict false repeat work", "num": "1080", "d": "7/2015"}, {"title": "always return false getting default boolean property", "body": "bug occured", "num": "1079", "d": "7/2015"}, {"title": "ca nt set properties certain circumstances", "body": "trying get vuejs recently building something little complex would usually library however stumbled across really odd behaviour nt allow set properties building sort stepbased assembly interpreter similar multiple nodes set instructions get executed parallel execution next line takes place whenever click button page usually calls method vue instances called relevant code method js startexecution function var instruction thiscurrentinstruction currentinstruction computed property var cancontinue false var nextinstruction thisinstructionpointer whatever instruction wants could change cancontinue true cancontinue nextinstruction thisinstructionpointer go back nextinstruction higher number instructions set instructionpointer nextinstruction part already works whenever instruction says okay go next one increase instruction pointer one go back first one however conditional well unconditional jumps change let stay false actions happen separate methods unconditional jump jump greater zero body pretty much following js actionjmp function var newinstruction thisinstructionpointer stuff set instructionpointer newinstruction starts become weird log value changed action correct appears changed logging next hit button however shows nt fact changed remained reason also reflects template echo never updates inside one methods even though consolelog suggests reason vuejs issue stupid latter would mean belong think", "num": "1078", "d": "7/2015"}, {"title": "accessing vue html elements need nudge", "body": "like create input field responds keyboard enter adding new field focusing cursor field however nt appear work sub html elements element corresponds vue html html js javascript var field function thistext var fields new vue el fields data fields new field methods newfield function component focus new field var self component vuenexttick function nt work field self index focus add new field datafieldspush new field error accessible happy hear vue way using components etc", "num": "1077", "d": "7/2015"}, {"title": "submit directive", "body": "form use directive manually prevent default action html new vue el asis methods addtask function e epreventdefault work idea made approach simpler like html new vue el tobe methods addtask function work", "num": "1076", "d": "7/2015"}, {"title": "vue assumes defined", "body": "given vue required using amd loader webpack browserify browser throws error every occurrence believe regression something commit thank", "num": "1075", "d": "7/2015"}, {"title": "vrepeat vif element working", "body": "need repeat conditionally show found using element work previously using repeating actual repeating element however internet explorer causing issues allow live inside still version upgrading solve issues ie allow combine another way work around fyi current markup working repeat conditionality working expected", "num": "1074", "d": "7/2015"}, {"title": "uppercase lowercase\u5b9e\u7528\u7684\u591a", "body": "", "num": "1073", "d": "7/2015"}, {"title": "present component declaration initialised default value", "body": "fine two examples one one without property component present seems initialised declared template", "num": "1072", "d": "7/2015"}, {"title": "property nt observed explicit set method provided", "body": "sorry provide jsfiddle example find cdn rawgit latest dev code instead code test machine latest dev vue latest commit html new vue el app components mycomp template replace true props default false type boolean data return b example wo nt update view value example update model value model value wo nt trigger view update model value proxied problem set default prop value vm observable wo nt observe also situation cases also means options instance supplied still data always proxied even explicit set supplied set proxy means unproxied property value changes nothing sync", "num": "1071", "d": "7/2015"}, {"title": "warn null undefined expected type even prop required default value", "body": "example followed create component without providing property warn null undefined expected type think warn property required exist input value expected type", "num": "1070", "d": "7/2015"}, {"title": "currency filter without cents", "body": "possible use currency filter without displaying cents", "num": "1069", "d": "7/2015"}, {"title": "", "body": "jstimepicker datetimepicker format hh ii autoclose true startview minview maxview", "num": "1068", "d": "7/2015"}, {"title": "twoway binding update correctly", "body": "first example example root change notify component update component validate clamped however root locked sync validated", "num": "1067", "d": "7/2015"}, {"title": "data generated props replaced default data whole", "body": "component props default data function props default value null raw value wo nt set data example", "num": "1066", "d": "7/2015"}, {"title": "variable component outer element class deactivate outside vclass", "body": "hi noticed possible call component et use vclass outside properly merged existing class introduce variable component class attribute outside vclass ignored fiddle illustrating bug", "num": "1065", "d": "7/2015"}, {"title": "vuejs ignores vueconfigreplace false repeated components", "body": "hello", "num": "1064", "d": "7/2015"}, {"title": "parsepath path parserspathjs", "body": "state two confused meanings normal path indentifier inbracket indentifier failed maybe would try pull better one later", "num": "1063", "d": "7/2015"}, {"title": "adding transition vrepeat within template", "body": "", "num": "1062", "d": "7/2015"}, {"title": "dynamic select options impractical", "body": "really ridiculous convert data textvalue json object format order correctly render select options dynamically ideally would something along lines", "num": "1061", "d": "7/2015"}, {"title": "", "body": "html name email javascript vuecomponent userprofile var parent new vue el data user name foo bar email foo barcom", "num": "1060", "d": "7/2015"}, {"title": "vm log\u6570\u7ec4\u65f6\u62a5\u9519", "body": "\u65f6\u4f1a\u63d0\u793a\u9519\u8bef", "num": "1059", "d": "7/2015"}, {"title": "bug vue\u6700\u65b0\u7248\u672c\u5728cordova\u73af\u5883\u4e0b\u4f1a\u51fa\u9519", "body": "typeerror redefine property document typeerror redefine property reload appendto", "num": "1058", "d": "7/2015"}, {"title": "dev inspector shows precompiled vue dom", "body": "anyone know dev inspector chrome would show boythe affairafter gonealpha houseamerican crimeanger managementanother periodapocalypse code bible predictionarcher armstrong millerbackstrombad educationbad judgeballersballot monkeysbanishedbattle creekbenidormbig bad worldthe big bang theorybig school black mirrorthe blacklistbluestone servant independentbob burgersbojack horsemanboschbreaking badbreaking greenvillethe brinkbroad citybrooklyn nineninebuffy vampire slayercardinal burnscastle castle buildersthe castle buildersthe casual vacancycatastrophe catterickchalkcharlie brooker weekly wipeclass act series comebackthe comedianscomedians cars getting coffeecoming age communityconstantinecount arthur strongcristelacrowdedthe delivery mandriftersdrunk historydrunk history uk episodesthe exesthe exes web dl guyfargoflight conchordsthe followingforever fresh boatfriends peoplegame facegetting ongetting us girlfriends guide divorcegive girlsgive girls web dl frankieground floorthe guardianhalt catch firehappyishheartburn hotelhello ladieshindsighthindsight hitchhiker guide galaxyhoff recordthe honourable womanhot clevelandthe house jack builthow get away murderhumansi live modelsimpastorin kitcheninside amy schumerinside interceptorthe crowdit dateit always sunny philadelphiait kevinizombiethe jack triumph showjane virginthe jim gaffigan showthe job lotthe last man earthlast man standing louie lovehatelunch monkeysluthermadam secretaryman seeking womanmanhattan love storymanhattan love story mapp lucia marriedmarried first sight first yearmarried medicinethe mccarthysthe mentalistthe middlemike amp mollythe mindy projectmirandamodern familymommr robotmurder successville murder horridmy mad fat diarythe mysteries lauramystery science theater barleynew girlthe new statesmannewsreadersnick helm heavy entertainmentno offencenot going outnot safe work number nurse jackiethe odd couple hookthe old guysone big happyorange new blackother spacepeep showplayhouse presentsplaying housepok\u00e9monpompidouporkpieproject runway starspsig wppsychobitchespullingraised wolvesreviewrick mortyrizzoli amp islesrobot chickenroman empirethe royalsrussell howard good newssaturday night liveschitt creekscrotal recallselfieshameless us sherlocksiblingssilicon valleysin city saintssin city saints yhoothe sketch showthe smoking roomsome girlsthe soupsouth parkthe spastep davesuntrapsuper fun nightthat mitchell webb lookthis jinsytitty bang bangtoast londontogethernesstop pops uk triptanktrolliedtrue detectivetrying againunbreakable kimmy schmidtuncleundateable undercoverviciousviral tapwayward pinesweb therapyweb therapy weird lonerswhite collarworkaholicsthe worst week lifethe wrong mansyou worstyoungeryour family mineambncodperfsgthuivjwltags brooklyn nineninefilter show looks like vue dom compiling running dom strange part code still works guess garbage attributes nt hurt anything makes debugging hard ubuntu chrome", "num": "1057", "d": "7/2015"}, {"title": "dynamic vmodel directive", "body": "currently vmodel directive support mustachetype bindings binding expressions feature would extremely helpful creating form builderlike implemenetations", "num": "1056", "d": "7/2015"}, {"title": "\u767e\u5ea6\u5730\u56fe\u5bf9\u8c61\u8d4b\u503c\u7ed9\u7ec4\u4ef6data\u62a5\u9519", "body": "data function return zoom center null class null bmap null map\u662f\u5b9e\u4f8b\u5316\u540e\u7684\u767e\u5ea6\u5730\u56fe\u5bf9\u8c61 thisbmap map typeerror redefine property", "num": "1055", "d": "7/2015"}, {"title": "props validation enforce binding type", "body": "sometimes want create component really needs twoway prop vue could throw warning validation configured component would nice", "num": "1054", "d": "7/2015"}, {"title": "vif working inside vrepeat", "body": "hi ca nt get vif work properly inside vrepeat component template idea show list id debug turned checkbox component moduleexports template require componenttemplatehtml display debug template gets updated properly true false works fine outside vrepeat missing something thanks thanks much vuejs turned developer life around", "num": "1053", "d": "7/2015"}, {"title": "", "body": "html component windowonload function vuecomponent mycomponent template hello name new vue el body data name peak", "num": "1052", "d": "7/2015"}, {"title": "replace option default value changed true", "body": "hello vue api doc see say default value replace option false find default value true set value false manually intentional change mistake", "num": "1051", "d": "7/2015"}, {"title": "", "body": "\u4f8b\u5b50\u4e2d\u53ea\u770b\u5230\u4e00\u6b21\u7ed1\u5b9a\u4e86\u4e00\u4e2aclick trigger handler \u6211\u60f3\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u4e8b\u4ef6\u600e\u4e48\u505a", "num": "1050", "d": "7/2015"}, {"title": "suggestion user custom assets", "body": "developing custom directive custom filter plugin sometimes happens custom assets needed api user register custom asset using think useful following validation example html min validator custom assets vuecustomassets validator min function val something vuedirective validate bind function var el thisel var validatorname thisarg update function val old var vm thisvm var el thisel var validatorname thisarg var validator thisvalidator var validatorarg thisexpression var model elgetattribute name var value elgetattribute value var keypath validation model validatorname join", "num": "1049", "d": "7/2015"}, {"title": "global event", "body": "would useful dispatch new method could trigger event every vm independently hierarchy", "num": "1048", "d": "7/2015"}, {"title": "replace vue object dom unmount method", "body": "vue object mounted form want replace object another vue object new object old vue object still catching events old one mount new one events caught correct way thank", "num": "1047", "d": "7/2015"}, {"title": "\u4e0d\u9700\u8981\u53cc\u5411\u90a6\u5b9a\u65f6\u600e\u4e48\u5904\u7406", "body": "", "num": "1046", "d": "7/2015"}, {"title": "remove stale instances toggling vif", "body": "try fiddle click button blue rect leave time click button cancel leave transition strangely leave transition nt stop new blue rect appended document bug might associated", "num": "1045", "d": "7/2015"}, {"title": "leavecancelled called properly vtransition", "body": "try fiddle click button blue rect leave time click button cancel leave transition strangely hook nt called called instead see track info console", "num": "1044", "d": "7/2015"}, {"title": "newval oldval watch array", "body": "fully sure bug misunderstanding something could nt find anything docs explaining weird behavior also watch api docs option ca nt find info docs source code", "num": "1043", "d": "7/2015"}, {"title": "suggestion vrepeat directive provide computed variablesvalues", "body": "using vrepeat directive sometimes happens related object needed depending current value example iterating array items gettype method used get related type object exists html name gettype value name would nice create computed variables vrepeat like html name typename since type depends item object value omitted automatically passed gettype value method html name typename created directive seems like useful addition vrepeat directive", "num": "1042", "d": "7/2015"}, {"title": "bug vm compile \u7f16\u8bd1\u4e2d vrepeat \u6307\u4ee4\u5931\u6548", "body": "vrepeat \u7236vm \u7684 compile \u5c5e\u6027 moduleexports template require templatehtml data paytype val null items text \u4e2d\u56fd val cn text \u7f8e\u56fd val usa text \u82f1\u56fd val en key val select null moduleexports function vuecomponent mgselect template inherit true ready function var el el parent data parent parent data elattr data \u5982\u679c\u6709 data data \u4e2d\u7684 items \u751f\u6210\u5b50\u9879\u76ee data amp amp parent data amp amp parent data items var item elfind item itemlength itemaddclass item attr vrepeat data items parent compile item", "num": "1041", "d": "7/2015"}, {"title": "js problem", "body": "problem", "num": "1040", "d": "7/2015"}, {"title": "unexpected vtransition behavior using vrepeat mutation methods", "body": "fiddle uses mutation methods array used vrepeat javascript vtransition things noticed behave expected using new array element added front list last item list animated inout work transitions applied kinda works data updated correctly one new element transitioned even though removed one element middle list added two new elements", "num": "1039", "d": "7/2015"}, {"title": "vuerepeat new row every item", "body": "hi possible create new row every element example php model repeat nicely hoping create new every connectors sorry nt mirror example fiddle using laravel kind lost fiddle thanks advance cheers thomas", "num": "1038", "d": "7/2015"}, {"title": "checkboxes array model", "body": "get something like work html new vue data languages english japanese chinese mylanguages english chinese", "num": "1037", "d": "7/2015"}, {"title": "selfclosing component tags", "body": "allowing selfclosed component tags like currently work", "num": "1036", "d": "7/2015"}, {"title": "\u7528vuejs\u7684vrepeat\u6570\u636e\u66f4\u65b0\u95ee\u9898", "body": "\u6211\u901a\u8fc7api\u521d\u59cb\u5316data", "num": "1035", "d": "7/2015"}, {"title": "solution props name start data hyphenated prop names deprecated", "body": "commonly using props start recommended exchange proprietary information way nt need worry attribute use exchange data cause impact dom hyphenated prop names deprecated wish use props start data like future find properer attribute", "num": "1034", "d": "7/2015"}, {"title": "using classes scope", "body": "create new vue list array class objects vue put gettersetters seem loose method functions best way avoid currently coping properties new object inserting scope save back server using class methods copying scope data back original class using something like objs extend true properties objects", "num": "1033", "d": "7/2015"}, {"title": "use arrayobject props default value", "body": "whether use arrayobject default value props setting may bug every instance share thing passing target property component try fiddle", "num": "1032", "d": "7/2015"}, {"title": "directives generated html", "body": "hello div vhtml directive call renderxyzhtml function function return html like click div myfunction function nt get called", "num": "1031", "d": "7/2015"}, {"title": "specify component dependencies using camelcase", "body": "one devs getting tripped using camelcase props dash case components could bring camelcase dashcase conversion component dependency names well thanks", "num": "1029", "d": "7/2015"}, {"title": "using vifvshow vcloak", "body": "following code snippet produces result element remain hidden even became expected go away cases design special use case suppose fixed warning added potential issue vif vcloak mixtures", "num": "1028", "d": "7/2015"}, {"title": "ca nt broadcast switched child component", "body": "component changes based attribute code written memory heavily snipped new vue template data curpage show components show vuecomponent showcomp watch vuecomponent watchcomp events watchup gt curpage watch broadcast watchdown see event called dispatched component broadcast child component event happens data variable changed time broadcast happens dom still component component sees event component nt worse put settimeout broadcast delay event still goes component even though dom component visible appears event propagation nt changing component changes top", "num": "1027", "d": "7/2015"}, {"title": "emit \u548c \u5728vue\u4e2d\u600e\u4e48\u4f7f\u7528", "body": "app view work", "num": "1026", "d": "7/2015"}, {"title": "proper use debounce property", "body": "debounce supposed throttle keyup event text input trouble getting work debounce works fine throttling model update keyup event still fires soon key released sure supposed work way thanks", "num": "1025", "d": "7/2015"}, {"title": "vue ca nt observe object prototype chain", "body": "pass coffeescript class instance vue data properties belong prototype ca nt watched far understand observer enumerates properties using objectkeys call respect prototype chain using key obj instead quick test shown break vue submit patch want", "num": "1024", "d": "7/2015"}, {"title": "props default values added component data", "body": "nt explicitly add component element attribute", "num": "1023", "d": "7/2015"}, {"title": "directives vrepeat resolved component child scope", "body": "vuejs directives transcluded content compiled child scope nested vrepeat directive sample demonstrating bug vuejs", "num": "1022", "d": "7/2015"}, {"title": "something cause raw mustache flickering", "body": "mostly happens chrome switch page backforward almost never cache disabled \u043er page reloaded scripts loaded status almost situation ie even refresh page notice firefox everything smooth concluded issue google ie chakra bug vuejs nt better solution", "num": "1021", "d": "7/2015"}, {"title": "initialize boolean property properly", "body": "example html new vue el body components test props name prop type boolean data return prop true initialized set specified value initialized find compiler set boolean value default initializing default data", "num": "1020", "d": "7/2015"}, {"title": "undefined released version", "body": "think codes branch released currently mixed updated latest version things broken find defined vm directive use property problem fixed branch find defined problem met nt due problem changes set vm method testing browser", "num": "1019", "d": "7/2015"}, {"title": "problem remove item list array list array inside", "body": "struture components control datas list control horas list datas list item problem add n datas itens add n horas itens whatever datas list item try remove whatever datas list item erro occurs screenshot page code explain steps", "num": "1018", "d": "7/2015"}, {"title": "http response arrived instance destroyed", "body": "minimal example js var foo new vue el foo throws often occurs switching components quickly wrapping code trycatch block good idea eat errors add complexity", "num": "1017", "d": "7/2015"}, {"title": "reach object data inside component question", "body": "hi gitter chat looks active would ask question proper place ask questions please point started use vuejs met one issue vue instance array data possible put another value data clicking button based array using vrepeat directive print another component question assuming put object data reach object value component particular data function approach nt work even able see uuid printing ca nt reach way able reach template want access code full code advice appreciated regards", "num": "1016", "d": "7/2015"}, {"title": "false alarm breaking change uncaught typeerror read property replace undefined", "body": "showing blank page props dashes names", "num": "1015", "d": "7/2015"}, {"title": "watcher false triggering", "body": "reporting another bug watch set deeper level root altered callback triggered happens deep new value added difficult explain please check fiddle watch triggered value changed happens using watch", "num": "1014", "d": "7/2015"}, {"title": "consecutive changing display opacity properties vue method wo nt trigger opacity transition animation", "body": "example method change display property first change opacity opacity changing display already block changed simultaneously time transition animation triggered happen way work around need change display property animate opacity using options remove tags completely dom", "num": "1013", "d": "7/2015"}, {"title": "recursive component broken inherit true since", "body": "since recursive tree list component broken minimal example js lt ul gt lt li vrepeat item items gt itemtext lt xtree vif itemchildren items itemchildren gt lt xtree gt lt li gt lt ul gt vueconfigdebug true lt p gt var foo new vue el foo data nav text foo text bar text baz children text text components xtree inherit true template documentgetelementbyid xtreetemplate innerhtml props items ok without foo bar baz ouputs", "num": "1012", "d": "7/2015"}, {"title": "jquery plugins vmodel working together", "body": "trying use typeahead jquery plugin inside vuejs tried around quite bit get plugin working nt get working combination vmodel input field update value vmodel using plugin enter value problem type plugin like timepicker anything else currently trying get working vuejs component js vuecomponent typeahead template documentqueryselector typeaheadtemplate props onload ready function input field component html lt div class formgroup gt lt input type text vmodel newtimetrackingproject class typeahead gt lt div gt input without component html update vmodel value input value entered jquery plugin", "num": "1011", "d": "7/2015"}, {"title": "incorrect scope transcluded repeater", "body": "using repeater trascluded content seems set scope current component instead parent outside repeater", "num": "1010", "d": "7/2015"}, {"title": "vue broadcast inside multiple components", "body": "fire event trigger component component scope example broadcast event increase values right fire event trigger components", "num": "1009", "d": "7/2015"}, {"title": "different initial selected value", "body": "hi first thanks fantastic work note different behavior using template dom element string options initialization use template dom element render select value selected vmodel null using string options render select first value selected vmodel null", "num": "1008", "d": "7/2015"}, {"title": "unable add classesstyles component", "body": "currently possible add stylesclasses components custom element nt rendered dom quite unintuitive component nt rendered dom made little demo show problem opinion attribute taken account whole element normal html components work strange remove attribute completely another issue ca nt attach event handlers element component nt common parent workaround though could wrap component apply like style class etc feels annoying would nt play well web components spec", "num": "1007", "d": "7/2015"}, {"title": "hook called unbinding component", "body": "vuejsdiscussion", "num": "1006", "d": "7/2015"}, {"title": "method called child component", "body": "trying framework using noticed method child component nt called first though must problem building reduced test cased think problem find test case", "num": "1005", "d": "7/2015"}, {"title": "issue vcomponentvrepeat combined", "body": "tested latest seems vcomponent work vrepeat component mycomponent would much problem tables tr must used example created fiddle see failing error console would", "num": "1004", "d": "7/2015"}, {"title": "allow register asset array rather object", "body": "instead registering global assets components directives etc prefer pattern registering private assets explicitly states assets available component currently want register private asset need use hash eg means manually maintain id selector asset want asset id selector across components app consistancy consider something like javascript import pagincomponent componentspaginpagin import actionmenucomponent componentsactionmenuactionmenu import inputdirective directivesinput export var pagemanager template require pagemanagerhtml components pagincomponent actionmenucomponent directives inputdirective would self define thier default id selector eg asset registered array opposed object hash id selector pulled property might better use property consistency asset types currently achieve small utility function register assets creates hash array assets using property asset create hash vue expects javascript components reg pagincomponent actionmenucomponent subcomponent directives reg inputdirective function reg var var lt argumentslength arguments selector arguments return allowing use array vs object registering assets would non breaking change allows syntax think nice", "num": "1003", "d": "7/2015"}, {"title": "use real extend helper", "body": "trying use realized basic implementation nt support deep extending nt support extending multiple sources please move resource extend helper vue core", "num": "1002", "d": "7/2015"}, {"title": "nt apply immediately", "body": "noticed using x amount time apply changes kind event happens mousemove etc whereas use immediately changes take place note examples functions property component another example neither apply move mouse across page reasoning really ideal situation like want load data asynchronously within component", "num": "1001", "d": "7/2015"}, {"title": "allowing camelcase props", "body": "would nt match options camel case would appear html course", "num": "1000", "d": "7/2015"}, {"title": "waitfor emit work dynamic component", "body": "main view model define dynamic component inside component must initialized data gets rendered eg ajax call layout insert waitfor attribute component element initially component compiled event tried invoke emit dataloaded immediately without anything component never rendered component ready event nt invoked put dummy settimeout function inside compiled event callback invoke emit dataloaded everything works fine component rendered two examples working working", "num": "999", "d": "7/2015"}, {"title": "", "body": "", "num": "998", "d": "7/2015"}, {"title": "programmatically add component", "body": "metric component used inside funnel series steps user clicks new step new metric component instantiated clicks remove corresponding metric component removed vrepeat vref lost", "num": "997", "d": "7/2015"}, {"title": "computed properties vreferenced component values", "body": "possible", "num": "996", "d": "7/2015"}, {"title": "lite way extend component option", "body": "known css lib semanticui provides level styles lib level theme level site level similarly component option also multiple level settings present use inheritance mode vue achieve different levels component like code javascript vuecomponent pagination template pagesize data function return pagesize var apppagination vuecomponent pagination extend data function return pagesize new vue el wrap data components pagination apppagination like javascript var appcomponentdefaults pagination data function return pagesize new vue el wrap mixins appcomponentdefaultspagination data think complex want replace defaults data add hook life cycle create sub component proposed provide lightweight approach extends component option like", "num": "995", "d": "7/2015"}, {"title": "vue component binding issue", "body": "jsbin partially explains issue change linked version vue notice bindings change use parent data binding binding custom components appears vue binding parent bindings instead component bindings issue way get previous behaviour back", "num": "994", "d": "7/2015"}, {"title": "add adds empty rows", "body": "hi little bug code id role player use vuejs resource send post like dump request server side roster get tried passing string working either ideas", "num": "993", "d": "7/2015"}, {"body": "\u5728 branch", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "btw example filter use js vuefilter optionify function items text value return itemsmap function item value null return item text", "d": "7/2015"}, {"body": "actually share root cause bindings reactive renaming one closing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "got fiddle strange reason problem dependent number repeated inside number props got inside function oo", "d": "7/2015"}, {"body": "comment lines app still lag", "d": "7/2015"}, {"body": "aye still lag warning different duplicate objects supported vrepeat using components transitions", "d": "7/2015"}, {"body": "another thing app freezes infinite loop warnings", "d": "7/2015"}, {"body": "try branch fixed infinite check want make sure also fixed performance problem", "d": "7/2015"}, {"body": "nt help infinite check still present probably investigate problem occurs one page also using hacks work maybe hacks way", "d": "7/2015"}, {"body": "ah set false fun begins", "d": "7/2015"}, {"body": "hmm fixed fiddle though using file dist didnt build branch fri jul andrey notifications githubcom wrote ah set vueconfigasync false fun begins reply email directly view github", "d": "7/2015"}, {"body": "build yeah tried new version separated document another computer ca nt get right new also tried reproduce example right ca nt even get vue fixbatcherinfinitecheck branch work asyncfalse mode getting error", "d": "7/2015"}, {"body": "added getting error looks like current computer code behaves different get inifinite loop code", "d": "7/2015"}, {"body": "probably nt help fiddle working properly fix branch app still infinite loop probably infinite loop need make new fiddle showing infinite loop problem fix branch lowlevel details fiddle component lot default data fields fields merged objects array every field causes call object inside array watcher watching array triggered every call triggers updated infinite check something number elements array also performance issue fix branch makes sure watcher updated every async update cycle counts infinite loops watcher pushes queue", "d": "7/2015"}, {"body": "thanks detailed explanation makes things clear still points left could please give working fiddle code example thoughts problem always visible want make accent following points tested versions vuejs also versions code async made different tests lets review results amp bunch errors amp infinite loop error depends computer amp everything fine yay amp infinite loop error depends computer either failed building properly problems nt occur system", "d": "7/2015"}, {"body": "see point yes setting get error fix branch using actual app honestly nt recommend exactly type situation", "d": "7/2015"}, {"body": "well yes actually nt intend used beginning thing funny till version vuejs bug probably components used inside waitfor component would ignore work synchronously trying move v found app working new version finnaly began work whole app designed work depending synchronous vuejs behavior", "d": "7/2015"}, {"body": "hmm one hack try remove lines", "d": "7/2015"}, {"body": "going close since issue let know suggestion helped anyway", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "could implemented enhancement builtin filterby need detect search keys", "d": "7/2015"}, {"body": "yeah fixed", "d": "7/2015"}, {"body": "using note use case nt need expression works without comparison statement something like side effects example nt detect statement directive get result handler function", "d": "7/2015"}, {"body": "thank comment dynamicconstraint b expression right worked without", "d": "7/2015"}, {"body": "return value promise runtime api nt think using splitting component files", "d": "7/2015"}, {"body": "think template option accept promise exactly use case", "d": "7/2015"}, {"body": "even write import template indexhtml text return promise nt build", "d": "7/2015"}, {"body": "expected behavior reference type values arrays objects mutated rather replaced entirely vue nt nt need cache deep copy value like angular even gives different values still need diff arrays anything useful trying achieve old value", "d": "7/2015"}, {"body": "exaplaination makes sense changed recently case since beginning", "d": "7/2015"}, {"body": "always case", "d": "7/2015"}, {"body": "ok thnx", "d": "7/2015"}, {"body": "think deprecated allowed elements weird actually working second jiddle", "d": "7/2015"}, {"body": "right way", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "two problems modifying value user types would often result weird ux specifically need functionality twoway binding best way achieve using write filters often actually want display sync underlying model", "d": "7/2015"}, {"body": "case create component used without purpose get default behavior system input put transparent input component template bind value hand create component want make least one selected watch state attached update group state changed however tap selected deselected reselect wo nt propagate model input ideas achieve purpose", "d": "7/2015"}, {"body": "reselect nexttick unlocked", "d": "7/2015"}, {"body": "expected behavior first case exactly described second case content transcluded also resolved parent scope basically repeated component follows semantics components rather inline repeats", "d": "7/2015"}, {"body": "means want use repeat meta info wrap around communicate specified type parent repeated template break", "d": "7/2015"}, {"body": "component used meta info available inside component automatically nt explicitly pass parent check parent inline repeat wrapper checking kinda dirty enough use case definitely improved later", "d": "7/2015"}, {"body": "ca nt tell wrong based description helpful provide sort reproduction issue", "d": "7/2015"}, {"body": "found correct place post", "d": "7/2015"}, {"body": "would every event could events vue nt even know wrong current method sat jul dmitry krokhin notifications githubcom wrote form use directive manually prevent default action new vue el asis methods addtask function e epreventdefault work idea made approach simpler like new vue el tobe methods addtask function work reply email directly view github", "d": "7/2015"}, {"body": "ca nt add labels issues looks like repository owner please note enhancement current method ok match dry principle opinion form processing big part web applications sure feature included core register issue discuss behaviour", "d": "7/2015"}, {"body": "sounds like overkill add core directive simple task think userland concern aka make custom directive feel free open new issue discuss vuejsdiscussion", "d": "7/2015"}, {"body": "although present source code automatically converted plain strings build tools distributed file nt contain running error somewhere", "d": "7/2015"}, {"body": "yes building application webpack", "d": "7/2015"}, {"body": "uipoet webpack auto shims detects work without special setup running webpack example fine experiencing errors provide repro", "d": "7/2015"}, {"body": "testing repo determined issue configuration webpack polyfills thank time", "d": "7/2015"}, {"body": "could try using instead", "d": "7/2015"}, {"body": "excellent got working using syntax throughout many thanks fast reply", "d": "7/2015"}, {"body": "\u81ea\u5df1\u9009\u62e9\u7b2c\u4e09\u65b9\u5e93 momentjs numeraljs \u505a\u6210\u81ea\u5b9a\u4e49 filter", "d": "7/2015"}, {"body": "pipe another custom filter strips cents also please ask questions like vuejsdiscussion gitter channel", "d": "7/2015"}, {"body": "\u7c7b\u4f3c\u7684\u63d2\u4ef6\u901a\u5e38\u5efa\u8bae\u7528\u4e00\u4e2a custom directive", "d": "7/2015"}, {"body": "thanks known issue fixed", "d": "7/2015"}, {"body": "sure related set component default values nt work unless understanding incorrectly", "d": "7/2015"}, {"body": "nouveller separate issue also fixed", "d": "7/2015"}, {"body": "ah brilliant using work around time look forward fix new release thanks", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "could bit confusing global config option change option default set", "d": "7/2015"}, {"body": "want point indicating current design ridiculous polite way open feature request", "d": "7/2015"}, {"body": "thinking something like value optional specified model contain whole object talked discussion", "d": "7/2015"}, {"body": "filter approach awesome using computed properties way useful", "d": "7/2015"}, {"body": "suggested discussion thread write reusable custom filter transform array reason dedicated attributes conversion many possible cases attribute syntax wo nt suffice eg source data could object select needs optgroups textvalue need formatted etc custom filter gives full capability sort transform want attribute syntax extra syntax one particular use case", "d": "7/2015"}, {"body": "ridiculous design people often forget get free spent numerous hours thank bringing us lightweight amp smart alternative angular", "d": "7/2015"}, {"body": "filter approach", "d": "7/2015"}, {"body": "sorry born frustration nt malice behind definitely appreciate fantastic vuejs would great filter approach could added documentation", "d": "7/2015"}, {"body": "worries added todos docs", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u7ec4\u4ef6\u91cc\u66b4\u9732\u4e00\u4e2a user", "d": "7/2015"}, {"body": "alexorz \u8bd5\u8bd5\u8fd9\u4e2afiddle", "d": "7/2015"}, {"body": "alexorz \u867d\u7136\u8001\u5b9e\u8bf4\u6211\u7684\u82f1\u8bed\u4e5f\u4e0d\u600e\u4e48\u6837", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "vm \u6b63\u786e\u7684\u7528\u6cd5\u5e94\u8be5\u662f\u8fd9\u6837\u7684", "d": "7/2015"}, {"body": "log items items \u7684get \u6240\u4ee5\u6211\u5c1d\u8bd5\u7740\u76f4\u63a5vm log items", "d": "7/2015"}, {"body": "\u4f60\u5e94\u8be5\u7528", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u9519\u8bef\u8c03\u7528\u6808\u603b\u6709\u5427 thu jul pm \u6728\u98ce notifications githubcom wrote typeerror redefine property document typeerror redefine property reload appendto reply email directly view github", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u770b\u8d77\u6765\u4f60\u662f\u5728 ready hook \u91cc\u9762\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u5bfc\u81f4\u4f60\u7684 vm \u8bd5\u56fe\u53bb observe \u67d0\u539f\u751f\u5bf9\u8c61\u4e86", "d": "7/2015"}, {"body": "\u5199\u9053 \u770b\u8d77\u6765\u4f60\u662f\u5728 ready hook \u91cc\u9762\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u5bfc\u81f4\u4f60\u7684 vm \u8bd5\u56fe\u53bb observe \u67d0\u539f\u751f\u5bf9\u8c61\u4e86 reply email directly view github", "d": "7/2015"}, {"body": "\u6bd4\u5982\u5982\u679c\u4f60\u5728 \u91cc\u9762\u6709\u4e00\u4e2a vue \u5c31\u4f1a\u53bb\u89c6\u56fe\u89c2\u5bdf document vm \u7684 data", "d": "7/2015"}, {"body": "\u5199\u9053 \u6bd4\u5982\u5982\u679c\u4f60\u5728 data \u91cc\u9762\u6709\u4e00\u4e2a vma vue \u5c31\u4f1a\u53bb\u89c6\u56fe\u89c2\u5bdf document objectdefineproperty vm \u7684 data reply email directly view github", "d": "7/2015"}, {"body": "\u4f60", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "occurs also means dom much bigger needs performance issue array objects passed lot components creates enormously long attribute value number places dom", "d": "7/2015"}, {"body": "version vue using", "d": "7/2015"}, {"body": "happening least month", "d": "7/2015"}, {"body": "weird props directives removed compilation never seen maybe something linux chrome", "d": "7/2015"}, {"body": "maybe give pointer debug like removal happens code read code clean fri jul evan notifications githubcom wrote weird props directives removed compilation never seen maybe something linux chrome reply email directly view github", "d": "7/2015"}, {"body": "removed", "d": "7/2015"}, {"body": "apparently happens put attribute component nt include attribute component props list see happens assume unused attributes know fix guess good happen since acts warning attribute unused", "d": "7/2015"}, {"body": "give example would helpful", "d": "7/2015"}, {"body": "let say imagine building clone phpmyadmin receives data describe table statement builds row editor form data binding expressions inherently dynamic case know field names running sql describe table", "d": "7/2015"}, {"body": "looking", "d": "7/2015"}, {"body": "hope see", "d": "7/2015"}, {"body": "still nt fully understand enables current syntax achieve maybe code samples", "d": "7/2015"}, {"body": "pseudocode related phpmyadmin clone described", "d": "7/2015"}, {"body": "already", "d": "7/2015"}, {"body": "wow", "d": "7/2015"}, {"body": "evan put js fiddle showing todoish example", "d": "7/2015"}, {"body": "great example showing one example dynamic usage logic might complex kind business application", "d": "7/2015"}, {"body": "clear idea allowing interpolations inside directive expressions right mustaches means evaluated result expected string used string inserted dom id lookup evaluating mustaches expressions evaluated makes two layers abstraction end making templates confusing", "d": "7/2015"}, {"body": "\u4e0d\u8981\u628a\u590d\u6742\u5bf9\u8c61\u5f53 \u5e94\u5f53\u662f\u53ef\u4ee5\u65e0\u7f1d\u8f6c\u5316\u4e3a json \u4e0d\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a\u7684\u4e1c\u897f\u4e0d\u8981\u653e\u5728 data", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u5728\u7ec4\u4ef6\u91cc \u628a\u767e\u5ea6\u5730\u56fe\u5b9e\u4f8b\u5316\u597d\u540e \u53ef\u4ee5\u52a8\u6001\u628a\u8fd9\u4e2a\u6dfb\u52a0\u5230\u7236\u7ea7\u7684data\u91cc parent add bmap map \u7136\u540e\u7236\u7ea7\u5c31\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\u767e\u5ea6api\u4e86 vm databmapcenterandzoom new bmappoint", "d": "7/2015"}, {"body": "\u53ea\u4e0d\u8fc7\u8fd9\u6837\u8c03\u7528\u7684\u8bdd \u6bcf\u6b21\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a undefined", "d": "7/2015"}, {"body": "\u4e0d\u8981\u628a\u590d\u6742\u5bf9\u8c61\u653e\u8fdb map \u4e0d\u9700\u8981\u653e\u8fdb vue", "d": "7/2015"}, {"body": "\u4f46\u662f\u6211\u662f\u8981\u505a\u4e00\u4e2a\u767e\u5ea6\u5730\u56fe\u7684\u7ec4\u4ef6component \u5728\u7ec4\u4ef6\u91cc add bmap map \u52a0\u4e0b\u5212\u7ebf\u662f\u4e3a\u4e86\u4e0d\u91cd\u5199\u8fd9\u4e2a\u5bf9\u8c61 \u5916\u90e8\u8c03\u7528\u7684\u65f6\u5019 \u5728\u7ec4\u4ef6\u4e0a\u52a0\u4e2a vref bdmap vm bdmap databmapcenterandzoom new bmappoint", "d": "7/2015"}, {"body": "good idea", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "recommended use option parameter element use computed properties achieve desired behaviour", "d": "7/2015"}, {"body": "think really looking nt want use optgroup want prepend item identifier debug mode help troubleshoot looking group items together debug mode debug mode", "d": "7/2015"}, {"body": "doc says need dynamically render list options element recommended use attribute together vmodel need specify attribute specify array options list render make computed property react value changing use work around issue hope helps", "d": "7/2015"}, {"body": "right works workaround thanks seems like bit overkill wa nt accomplish still wonder vif vshow nt work inside vrepeat thanks help", "d": "7/2015"}, {"body": "probably spans allowed inside option elements wed jul romain l\u00e9ger notifications githubcom wrote right works workaround thanks seems like bit overkill wa nt accomplish still wonder vif vshow nt work inside vrepeat thanks help reply email directly view github", "d": "7/2015"}, {"body": "confirmed put elements inside get crunched plain text", "d": "7/2015"}, {"body": "oups nt thought thanks", "d": "7/2015"}, {"body": "\u9700\u8981\u663e\u793a\u7684\u589e\u52a0inherit vuecomponent mycomponent inherit true template hello name", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "butsalt \u591a\u8c22\u8be6\u7ec6\u7684\u56de\u7b54", "d": "7/2015"}, {"body": "according releases since think change missing doc post issues related documentation repo", "d": "7/2015"}, {"body": "got thanks reply", "d": "7/2015"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b", "d": "7/2015"}, {"body": "need vue could nt internal module plugin", "d": "7/2015"}, {"body": "yes wink internal module plugin providing user custom assets api us plugin developer plugin user well think gets advantage consistency", "d": "7/2015"}, {"body": "nt think part vue core vue singleton could potentially lead namespace clashes feels natural expose type assets plugin module maybe add conventions plugin authoring guide", "d": "7/2015"}, {"body": "okay smiley try custom assets management pluginside well come think right", "d": "7/2015"}, {"body": "expose assets plugin similar vue idea js var vv require vuevalidator var min vvvalidator min users register custom validators vvvalidator myvalidator function value", "d": "7/2015"}, {"body": "could use external event bus", "d": "7/2015"}, {"body": "speaking external event buses recommend evan nt ever used one advice appreciated", "d": "7/2015"}, {"body": "azamatsharapov node builtin eventemitter probably easiest one webpack browserify mock believe also use", "d": "7/2015"}, {"body": "thank", "d": "7/2015"}, {"body": "ca nt piece dom compiled ca nt compile proper way make component include form template create append dom need new one destroy old one needed remove time start create new instance still feels wrong able reset state vue instance keep using form", "d": "7/2015"}, {"body": "oh please post questions vuejsdiscussion instead repo", "d": "7/2015"}, {"body": "thanks replying reason want avoid huge vue object created different vue objects different states", "d": "7/2015"}, {"body": "maybe use dynamic components switch depending state", "d": "7/2015"}, {"body": "\u8fd9\u4e0d\u53eb\u53cc\u5411\u7ed1\u5b9a \u4e0d\u9700\u8981\u76d1\u542c\u6570\u636e\u53d8\u5316\u4e3a\u5565\u8981\u7528 vue \u63d0\u95ee\u8bf7\u5230 bug report \u548c feature request", "d": "7/2015"}, {"body": "somewhat expected actually creates new copy content every time toggled ux perspective probably better instantly remove stale instances condition changed", "d": "7/2015"}, {"body": "got ta thanks", "d": "7/2015"}, {"body": "array mutated reference change different completely replace array new one option internal meant public use maybe underscore", "d": "7/2015"}, {"body": "see need track length array moment using expression worked thanks", "d": "7/2015"}, {"body": "brings relational database models feeling stealing idea smile supporting additional arguments like would make flexible instead nt get thing prop method like", "d": "7/2015"}, {"body": "azamatsharapov property defining variablesvalues basically like old passed values component property could named differently could also work property name even multiple assignments work like also would default argument nt set argument sure put argument like also work", "d": "7/2015"}, {"body": "would nice create computed variables ca nt method mon jul steffan notifications githubcom wrote using vrepeat directive sometimes happens related object needed depending current value example iterating array items gettype method used get related type object exists name gettype value name would nice create computed variables vrepeat like name typename since type depends item object value omitted automatically passed gettype value method name typename created directive seems like useful addition vrepeat directive reply email directly view github", "d": "7/2015"}, {"body": "sure add directives syntax sugar like different ways deal example computed array use components custom directive described opinion fine leave userland thing", "d": "7/2015"}, {"body": "\u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a", "d": "7/2015"}, {"body": "\u5199\u9053 \u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 text \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a reply email directly view github", "d": "7/2015"}, {"body": "\u5199\u9053 \u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 text \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a reply email directly view github", "d": "7/2015"}, {"body": "priority \u7684\u9ed8\u8ba4\u4e3a \u548c repeat", "d": "7/2015"}, {"body": "\u5982\u679c\u4f60\u60f3\u8981\u5b8c\u5168\u5bf9\u7528\u6237\u9690\u85cf vue \u7684\u5b58\u5728\u90a3\u6211\u4e5f\u6ca1\u529e\u6cd5\u4e86", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u5199\u9053 closed reply email directly view github", "d": "7/2015"}, {"body": "please provide code produced issue", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "simpler version fiddle without component opacity fade", "d": "7/2015"}, {"body": "repeated array contains primitive values automatically mode impossible accurately track position duplicate primitives value want accurateposition transitions always use objects repeat array", "d": "7/2015"}, {"body": "thanks evan makes sense updated fiddle behave expected methods still animate", "d": "7/2015"}, {"body": "animate items element enteredleft dom want smooth moves reorders better absoluteposition items animate csstransform based", "d": "7/2015"}, {"body": "makes sense technical perspective seems counterintuitive point view user thanks explanation able develop decent workaround btw love library whole", "d": "7/2015"}, {"body": "repo questions vuejsdiscussion repo example outside ed need move sure wrapping elements every step iteration element like model", "d": "7/2015"}, {"body": "suggested please nt post questions repo", "d": "7/2015"}, {"body": "exactly wanting happen list checkboxes checked state could hold languages object rather string html new vue data languages name english checked true name japanese checked false name chinese checked true use filtermap retrieve names selected languages jsfiddle demonstrating", "d": "7/2015"}, {"body": "guess use case use check boxes similar manner use select ability select multiple selections sort check apply scenario checkables come array possibilities jul notifications githubcom wrote exactly wanting happen list checkboxes checked state could hold languages object rather string new vue data languages name english checked true name japanese checked false name chinese checked true use filtermap retrieve names selected languages jsfiddle demonstrating reply email directly view github", "d": "7/2015"}, {"body": "old example please open questions like vuejsdiscussion instead core repo", "d": "7/2015"}, {"body": "vue templates need valid html self closing tags xhtml syntax outdated never use see", "d": "7/2015"}, {"body": "\u4f60\u7684 initvm \u662f\u600e\u4e48\u5199\u7684\u4e3a\u4ec0\u4e48\u4e0d\u653e\u4e0a\u6765 results \u5efa\u8bae\u4ed4\u7ec6\u770b\u8fc7\u6587\u6863\u540e\u518d\u5f00 vuejsdiscussion", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "would awesome configurable via global option like js props", "d": "7/2015"}, {"body": "youngsteveo sure config necessary seems unlikely conflict party libs even use nondataprefixed syntax avoid", "d": "7/2015"}, {"body": "please make fiddle better explain problem best practice always using plain objects vue data data data behavior behavior belongs viewmodel", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "return default value prop inside function well warning seems necessary case described solution would little verbose better", "d": "7/2015"}, {"body": "might good idea sometime really need function default value like format might confusing", "d": "7/2015"}, {"body": "unless use function factory except", "d": "7/2015"}, {"body": "quite obvious nt need make copy functions", "d": "7/2015"}, {"body": "great thanks advise", "d": "7/2015"}, {"body": "recommended compose vue templates using dynamic html strings therefore triple curlies treat content static html nt compile use partials instead", "d": "7/2015"}, {"body": "created pr address componentsdirectivesetc", "d": "7/2015"}, {"body": "different props props primarily used inside javascript expressions dash case awkward hand use component ids tag selectors nt see benefits using camelcase", "d": "7/2015"}, {"body": "valid reason line deduction might require better grasp framework used junior dev would would like able tell either always camelcase javascript always dashcase html always camelcase javascript except interfacing html new props naming convention kind throws got pr today fella given started naming get around remember camel dash seenoevil", "d": "7/2015"}, {"body": "directives elementdirectives components ones demand dashcase appear html tag names attributes never appear methods expressions props thing appear places hence syntax allowed nt like idea creating alternative syntax sake easier remember especially confusion came understanding framework works", "d": "7/2015"}, {"body": "sake consistency would put side effect making easier remember mainly people nt yet familiar framework would nt see reason apprehensive sure know unreasonably critical developers smile reasoning inconsistency solid requires one reason perhaps bit familiarityexperience using well else could know sure things never appear methods expressions think might worth change would lessen confusion nt yet well understand framework works understand would undesirable bog codebase api", "d": "7/2015"}, {"body": "reopening rethinking suggestion starts make sense addition remember past someone raised suggestion another reason object shorthands js import componenta componentsa import componentb componentsb export default components componenta componentb", "d": "7/2015"}, {"body": "would really nice camelcase could used everywhere code hyphens used html templates could even enforced fri jul pm evan notifications githubcom wrote rethinking suggestion starts make sense addition remember past someone raised suggestion another reason object shorthands import componenta componentsaimport componentb componentsb export default components componenta componentb reply email directly view github", "d": "7/2015"}, {"body": "cool pr relevant update", "d": "7/2015"}, {"body": "youngsteveo yeah would merge decide make change nice rebase latest though", "d": "7/2015"}, {"body": "rebased note tests currently broken latest dev new unit test still passing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "closing think problem changed switched component including children using instead broadcast event getting children one needs", "d": "7/2015"}, {"body": "\u5192\u6ce1\u7684\u4e8b\u4ef6\u8981\u7528 dispatch emit", "d": "7/2015"}, {"body": "\u6211\u628aemit\u6539\u6210dispatch\u4e5f\u4e0d\u884c", "d": "7/2015"}, {"body": "\u7236\u7ec4\u4ef6\u7684 ready events \u9009\u9879", "d": "7/2015"}, {"body": "\u89e6\u53d1\u4f20\u9012\u7684 data \u6570\u636e \u7ed9\u7236\u7ea7\u7684", "d": "7/2015"}, {"body": "\u8c22\u8c22 \u641e\u5b9a\u4e86 require vueresource", "d": "7/2015"}, {"body": "docs could use improvement property debounce dom events debounces model updates since already using think terms reacting model changes rather reacting dom events use watcher watch change bound value please use vuejsdiscussion questions repo issue tracker bugs features", "d": "7/2015"}, {"body": "basically happens observed problems use code b observed fine next code work expected", "d": "7/2015"}, {"body": "design two reasons data objects need persistable inspectable via also ignores prototype properties observe prototype property adding property getter object shadows prototype property longer dynamic prototype chain lookups prototype mutated change wo nt reflected observed object want property observed make instance property instead prototype property", "d": "7/2015"}, {"body": "hmm okay thought little bit looks like current design optimal make model methods prototype properties ignored vue use watched instance properties", "d": "7/2015"}, {"body": "whole idea props pass data attributes setting value", "d": "7/2015"}, {"body": "option setting default value props configuration", "d": "7/2015"}, {"body": "thelinuxlich take next way props attributes data default data data fetched external places proxied vue instance design", "d": "7/2015"}, {"body": "ok one explained yet purpose default value props", "d": "7/2015"}, {"body": "thelinuxlich user source luke default value props literally default value example next code later use component instance name tom use name bob please note values mapped property vue instance would point also props always overwrite data keys use source luke", "d": "7/2015"}, {"body": "described desired behavior cat missing name attribute default tom happening", "d": "7/2015"}, {"body": "working far tell provide example nt work", "d": "7/2015"}, {"body": "please make sure provide repro", "d": "7/2015"}, {"body": "encountered problem narrowed props data ca nt used together data wins think usable together", "d": "7/2015"}, {"body": "paulpflug upgrade latest version please work together nevermind fixed indeed bug", "d": "7/2015"}, {"body": "fixed via", "d": "7/2015"}, {"body": "nt", "d": "7/2015"}, {"body": "paulpflug latest dev", "d": "7/2015"}, {"body": "known issue fixed dev branch", "d": "7/2015"}, {"body": "ok thanks sorry nt find", "d": "7/2015"}, {"body": "use vcloak", "d": "7/2015"}, {"body": "problem due nt update file", "d": "7/2015"}, {"body": "please provide debuggable reproduction using jsfiddle similar service", "d": "7/2015"}, {"body": "sorry delay need add horas item datas list item", "d": "7/2015"}, {"body": "looks like using quite outofdate version vue please consider upgrade latest version", "d": "7/2015"}, {"body": "upgrade vuejs version vevents crash doc find vevents see vevents deprecated sorry", "d": "7/2015"}, {"body": "last functional version changes vevents crash munch clean", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thank help", "d": "7/2015"}, {"body": "assigning component destroyed expect mon jul pm fenix notifications githubcom wrote minimal example var foo new vue el foo data bar ready function var destroy settimeout function mebar throws uncaught typeerror set property bar null often occurs switching components quickly wrapping code trycatch block good idea eat errors add complexity reply email directly view github", "d": "7/2015"}, {"body": "expect error suppressed inside vue internal least production environment vueconfigdebug false", "d": "7/2015"}, {"body": "basically javascript error nt believe vue suppress think would best check every http response component still alive", "d": "7/2015"}, {"body": "even instance destroyed still valid object assign whatever else bound props sideeffect objectdefineproperty evan said time even need think must always take care every ajax async callbacks", "d": "7/2015"}, {"body": "throwing error simply accessing property destroyed instance seems obtrusive preserved data reference destroyed instances however note mutate data already destroyed instance possible cause side effects instances happen observe object still recommended check instance still alive inside async callbacks", "d": "7/2015"}, {"body": "quickly thanks think newly introduced side effect mixed blessing sometimes expected", "d": "7/2015"}, {"body": "questions posted vuejsdiscussion function used create initialdefault state component called merging external data use lifecycle hooks access fully resolved data", "d": "7/2015"}, {"body": "looks like usage error part new dev add components removing instances string values resolved problem", "d": "7/2015"}, {"body": "think changing whole object watcher catches changes init property recommended wo nt happen yeah sometimes need fly", "d": "7/2015"}, {"body": "yes sometimes adding dynamic components rely main object say behaviour new introduced changelog reference assume bug", "d": "7/2015"}, {"body": "actually new ing rootlevel property always trigger full digest watchers watcher watching nonexistent property would caught dependencies initialization way notify unless full digest also strongly recommend ing root level properties fly", "d": "7/2015"}, {"body": "useful info evan nt know probably added somewhere docs", "d": "7/2015"}, {"body": "thanks looking evan maybe getting confused watching nonexisting property eg start watching changes myvalue add another root level value object become would expect watch exclusively triggered myvalue data changed seems wrong", "d": "7/2015"}, {"body": "yeah adding root level property triggers reevaluation watchers component normal watchers previous value new value nt change callback triggered deep watchers would trigger even value could object mutated maybe case digest could shallow ie calls callback value changed", "d": "7/2015"}, {"body": "shallow option sounds good deeper level watchers nt matter object mutated matter watched value changed nt mind default behaviour optional would keep always code", "d": "7/2015"}, {"body": "thanks evan", "d": "7/2015"}, {"body": "hmm seems actually happens even without using vue even consecutive javascript command asynchronousness issue unrelated vuejs", "d": "7/2015"}, {"body": "want probably directive vshow reworked fiddle allow animations vue way", "d": "7/2015"}, {"body": "issue using jquery sample new value nt get alerted change however add lazy option get alerted probable happens cause jquery plugin triggers change event input event", "d": "7/2015"}, {"body": "jefferey way using typeahead vue", "d": "7/2015"}, {"body": "chalkin questions like posted vuejsdiscussion also please make sure provide debuggable example using jsfiddle codepen jsbin", "d": "7/2015"}, {"body": "see release notes trascluded component child host component work", "d": "7/2015"}, {"body": "oevgeny actually read release notes nt help much note together directives transcluded components still compiled host parent scope host parent scope host parent scope unless misunderstanding content compiled scope parent example content compiled root scope parent", "d": "7/2015"}, {"body": "ah yes got", "d": "7/2015"}, {"body": "triggers listeners component hierarchy level achieve easiest way would use callback prop hook parent informed trigger within parent approach sibling components stay decoupled", "d": "7/2015"}, {"body": "sends event component descendants sends parent chain direct method notify sibling components nirazul suggested dance use standalone event emitter global event bus instead relying component structure event passing also please post questions like vuejsdiscussion issues directly related new features bugs", "d": "7/2015"}, {"body": "caused browsers default behavior whenever element appended new parent browser resets seems firefox browser persists value properly ideally browsers persist value guess ca nt change add ugly patches vue", "d": "7/2015"}, {"body": "set option want keep wrapping component tag also probably want set custom tag custom html tags default", "d": "7/2015"}, {"body": "awesome nt catch documentation nt default way make elements behave like", "d": "7/2015"}, {"body": "replace true behavior intuitive think terms components especially using single file components root element related styles contained component write template gets rendered set change default", "d": "7/2015"}, {"body": "using single file component maybe bit biased towards worked lot real web components say write template gets rendered nt true using child component explicitly creating tag dom wo nt get rendered replaced content always trade nevertheless right nt really way style whole element within single file component one would need something like css rule poylmer", "d": "7/2015"}, {"body": "nt use calls ready hook unless reason aware likely think problem", "d": "7/2015"}, {"body": "using test case", "d": "7/2015"}, {"body": "awesome fast", "d": "7/2015"}, {"body": "also along lines possible strict mode instead private assets available vue instance children descendants available vue instance children descendants forcing children state asset dependencies rather getting parent seems equal better decoupling", "d": "7/2015"}, {"body": "array syntax would also make obsolete current project using vue components declared root app people keep sticking things convenience strict mode would lovely", "d": "7/2015"}, {"body": "supported via note assets use field strict mode defaults false", "d": "7/2015"}, {"body": "great stuff", "d": "7/2015"}, {"body": "specify selector component registered array nt mentioned release notes", "d": "7/2015"}, {"body": "cheapsteak use field added release note", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "core core nt need vue core util design internal exposed advanced users plugin authors may find useful need specific helper either bring use actual generalpurpose util library like lodash", "d": "7/2015"}, {"body": "provide repro may transpiler using", "d": "7/2015"}, {"body": "wanted avoid making repo public made collaborator helps using gulp babel code question watch run", "d": "7/2015"}, {"body": "interestingly causing behavior mounting app instance string template option defaults contents template replaces tag causes chromespecific runtime error reason blocks rerendering user interaction happens code works properly firefox safari fixed simply giving app option added warning particular case", "d": "7/2015"}, {"body": "also fiy code works chrome canary bug present current stable version chrome", "d": "7/2015"}, {"body": "nice find thanks taking time find", "d": "7/2015"}, {"body": "also would match variable names used right mismatch makes code readability hard think html snakecase propa code camelcase propa consistency issue", "d": "7/2015"}, {"body": "html attributes caseinsensitive way differentiate vs passing prop template", "d": "7/2015"}, {"body": "html attributes caseinsensitive know weird nt like ugliness propa valuepropapropa even html agree nt change even though wish worked way making option would nice done current project maybe issue pr thu jul evan notifications githubcom wrote html attributes caseinsensitive way differentiate propa vs propa passing prop template reply email directly view github", "d": "7/2015"}, {"body": "gave another thought maybe implemented backwards compatibility vue could detect camel case props look hyphenated attributes html", "d": "7/2015"}, {"body": "converting camelcase props hyphenated attributes pretty standardaccepted convention", "d": "7/2015"}, {"body": "quick thanks fri jul evan notifications githubcom wrote closed via reply email directly view github", "d": "7/2015"}, {"body": "expected behavior add vue assumes async operations emitting event otherwise point using perform ajax request result always comes back asynchronously emitting event synchronously effect", "d": "7/2015"}, {"body": "hm know thanks lot", "d": "7/2015"}, {"body": "\u5f00 issue \u524d\u8bf7\u9605\u8bfb", "d": "7/2015"}, {"body": "please move vuejsdiscussion leave main repo featurebug related issues sounds like need array data structure representing steps operations would simply pushing removing array", "d": "7/2015"}, {"body": "sure mean exactly like", "d": "7/2015"}, {"body": "let move questions like vuejsdiscussion thanks", "d": "7/2015"}, {"body": "different", "d": "7/2015"}, {"body": "javascript assume comp define vendor lib vuecomponent comp template name data function return name hal following block code ca nt really work try change dataname comp app global component settings hope vuecomponent comp defaults like vuecomponent comp optionsmixins data function return name halhal new vue el wrap", "d": "7/2015"}, {"body": "extending allows one base component many extended sub classes different use cases mutate original lose flexibility together hand nt see benefits mutating base class except saving keystrokes anyway really want", "d": "7/2015"}, {"body": "\u4f7f\u7528vuecomponent comp optionsdata javascript var getdata vuecomponent comp optionsdata vuecomponent comp optionsdata function var data getdatacall var name halhal var key data key key return data", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "ok thank", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "correct intended behavior read", "d": "7/2015"}, {"body": "ah ok thanks anyone looking future simple solution add component tag", "d": "7/2015"}, {"body": "arrays use instead", "d": "7/2015"}, {"body": "hi tried thisroster set thisnewmemberid thisnewmemberrole still problem id creates empties array adds", "d": "7/2015"}, {"body": "hi regarding could nt syntax force application filter object like see", "d": "7/2015"}, {"body": "well tried nested nextticks work back", "d": "7/2015"}, {"body": "vote option b reason liked syntax easily see string escaped scanning without wasting time checking triple braces", "d": "7/2015"}, {"body": "agree youngsteveo grand scheme things appears spaces vs tabs argument fairly low importance unless missing something", "d": "7/2015"}, {"body": "michaeljcalkins mostly situations people writing direct html vuejs templates inside another templating system also happens use mustache tags", "d": "7/2015"}, {"body": "krisak yjeroen markhahn one work", "d": "7/2015"}, {"body": "one work would great thu jul chen notifications githubcom wrote krisak yjeroen markhahn one work reply email directly view github", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "looks great smile", "d": "7/2015"}, {"body": "thanks kikyous", "d": "7/2015"}, {"body": "kikyous thanks lot also use devdocs", "d": "7/2015"}, {"body": "thanks mucho fri jul azamat notifications githubcom wrote kikyous thanks lot also use devdocs reply email directly view github", "d": "7/2015"}, {"body": "looking would mind adding license file clear applies thanks", "d": "7/2015"}, {"body": "thibaut added", "d": "7/2015"}, {"body": "thanks docs", "d": "7/2015"}, {"body": "thibaut cheers", "d": "7/2015"}, {"body": "know old request encountered need would super nice rather", "d": "7/2015"}, {"body": "could easily something like could even make mixin use everywhere want", "d": "7/2015"}, {"body": "nirazul solution good maybe leave context binding calling code useful mixin js methods baywatch function props watcher var iterator function prop watch prop watcher propsforeach iterator thisbaywatch b c thisdosomethingbind", "d": "7/2015"}, {"body": "yes viable solution", "d": "7/2015"}, {"body": "nice solution epic example using custom directives however onselect probably replaced onclose use onselect date value updated click date type date manually tab input field javascript vuedirective datepicker bind function var vm thisvm var key thisexpression thisel datepicker dateformat ddmmyy onclose function date datematch vm set key date else vm set key consolelog invalid date update function val thisel datepicker setdate val var v new vue el main data dt methods checkdate function consolelog thisdt", "d": "7/2015"}, {"body": "another truly epic thing date picker directive encapsulated inside component like javascript vuecomponent customcomponent got ta love vuejs smile", "d": "7/2015"}, {"body": "run problem well node undefined put undefined check node toarray nodechildnodes get working", "d": "7/2015"}, {"body": "running issue nested data contains attributes beginning preventing observation properties beginning makes lot sense view models applies nested data could come number different rest apis starts bit restrictive would possible relax restriction existing rule applies view models simple nested data properties beginning ob property ignored", "d": "7/2015"}, {"body": "davidkhess skipped observation proxying still access templates", "d": "7/2015"}, {"body": "yes skipped observation ca nt bind expect ui update mutated instance let say get resource via rest api store result let also assume rest api response happens contain something like property list topics bind allows multiple selection render page bullet list change value using bullet list never update seems bit landmine people working apis happen use property names rest resources seems reasonable rule vue objects less reasonable apply nested data naming developer may control", "d": "7/2015"}, {"body": "davidkhess fair enough sounds like good idea observe skip proxying root level", "d": "7/2015"}, {"body": "sounds like great solution", "d": "7/2015"}, {"body": "run problem binding images come couchdb stored attachements couchdb would great could observe say objektattachments right copy extra dataattachments property thanks lot change behaviour", "d": "7/2015"}, {"body": "hi follow think experiencing issue ios safari latest safari mac jsbin since seems still issue would nt useful place warn docs apple fixes bug", "d": "7/2015"}, {"body": "dwightjack jsbin seems work fine safari", "d": "7/2015"}, {"body": "right looks like problem related something else sorry", "d": "7/2015"}, {"body": "anyone interested typescript support vuejs get typescript declaration file easiest way install npm module tsd create directory typings well tsddts file reference javascript file top block javascript editors typescript capabilities understand vue code works especially well github atom browser typescript plugin well microsoft new crossplatform code editor visual studio code typescript declaration files enable editors understand javascript parse enable code completion hits intellisense creating typescrpt declaration file difficult done several basically collection interfaces define parameters return values object functions library current version vue definitelytyped vesion", "d": "7/2015"}, {"body": "go bit reacty fluxy classes flatextendible need remove data stuff decorators really powerful things use heavily javascript import vue elementdirectives components listen watch vue elementdirectives evilicon components player export class app extends vue really think static properties static inherit true static props test", "d": "7/2015"}, {"body": "jabher interesting ideas decorator made also experimental feel free make version", "d": "7/2015"}, {"body": "think bit fastndirty though working good also needs integration far wrapper slow loading due nothing compiled babel compiling everything browser fast attempt example code javascript const components vuecomponent class testcomponent extends vuecomponent static template component components testcomponent class app extends vuecomponent static template message message new app el main ideas async data template generation deep integration try implement", "d": "7/2015"}, {"body": "dunno going help anyone case elements array nt id field", "d": "7/2015"}, {"body": "anyone checked vue ca nt get work", "d": "7/2015"}, {"body": "remoe checked work yeah though maybe fixed easily", "d": "7/2015"}, {"body": "remoe fullfs error stack trace look like", "d": "7/2015"}, {"body": "ok tested windows newer version vue one need change others nt run mounting need investigate", "d": "7/2015"}, {"body": "changing code throws following stack trace iojs jsdom vue", "d": "7/2015"}, {"body": "turns subtle problem checking jsdom element returns true refactored little bit rely check latest snippet working", "d": "7/2015"}, {"body": "confirmed thanks", "d": "7/2015"}, {"body": "would also love see computed properties could detail involved complexity please feels unatural nt supported support would allow template like instead loses information context property right mainly readability issue nt believe readability overlooked", "d": "7/2015"}, {"body": "might read better template nt make sense javascript points actual data way make return computed without polluting original data object really want template read nicely something like", "d": "7/2015"}, {"body": "makes sense thanks answer", "d": "7/2015"}, {"body": "hi kind stuck someone hep img vrepeat images filterby profile vattr src src computed src function return img thisimagepath thisimagepath seems return undefined much appreciated thanks advanced", "d": "7/2015"}, {"body": "new vue attempting render json object returned php using jsonencode function simple way loading data list", "d": "7/2015"}, {"body": "participants closed people nt spam questions think best ask questions like vuejsdiscussion gitter channel repo question vuejsvueresource plugin ajax calls use fetch json server", "d": "7/2015"}, {"body": "thank", "d": "7/2015"}, {"body": "saw angular docs thinks implementation model methods property interpolation quite pleasing laughed seeing angular dumping gibberishes become something simillar vue thoughts implementing syntax", "d": "7/2015"}, {"body": "pandahisham personally nt really like angular binding syntax nt struck intuitive sure provide meaningful advantage traditional directive syntax least enough warrant breaking change vue", "d": "7/2015"}, {"body": "thanks happy current syntax", "d": "7/2015"}, {"body": "vue merged vuejs organization hits little confusing", "d": "7/2015"}, {"body": "fweinb thinking bunch logistics sorted moving sounds like good plan", "d": "7/2015"}]